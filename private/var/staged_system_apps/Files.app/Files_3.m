uint64_t sub_1001EA0CC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  Class isa;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void *ObjCClassFromMetadata;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  id v72;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  unint64_t v79;
  void *v80;
  unint64_t v81;
  unint64_t v82;
  void aBlock[7];

  v3 = v2;
  v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath();
  v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = [v3 contextMenuForItemsAt:isa];

  if (!v14) {
    return 0;
  }
  v15 = v3;
  v82 = sub_1002061BC(a1, (uint64_t)v15, 0);

  sub_1000CBC00(a2, (uint64_t)v8, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
    v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v16 = sub_1001BAA44((uint64_t)v12, 0);
    v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v10 += 8;
    v18(v12, v9);
  }
  type metadata accessor for DOCNodeContextMenuConfiguration();
  v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  aBlock[4] = sub_1000B1434;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001FCE6C;
  aBlock[3] = &unk_100697D98;
  v21 = (unint64_t)_Block_copy(aBlock);
  v22 = (uint64_t)v14;
  swift_retain();
  swift_release();
  v23 = (uint64_t)[ObjCClassFromMetadata configurationWithIdentifier:0 previewProvider:0 actionProvider:v21];
  swift_release();
  _Block_release((const void *)v21);
  v24 = [(id)v22 children];
  v25 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100708610);
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v26 >> 62) {
    goto LABEL_142;
  }
  v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v77 = (void *)v22;
    v78 = v16;
    v76 = v23;
    if (!v27)
    {
      v21 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_23;
    }
    if (v27 >= 1) {
      break;
    }
    __break(1u);
LABEL_144:
    v72 = v25;
    swift_bridgeObjectRetain();
    v58 = _CocoaArrayWrapper.endIndex.getter();
    if (!v58)
    {
LABEL_145:

      swift_bridgeObjectRelease();
      goto LABEL_146;
    }
LABEL_86:
    v79 = v10;
    v60 = 0;
    v61 = v21 & 0xC000000000000001;
    v26 = (unint64_t)&selRef_setManageButtonTitle_;
    while (1)
    {
      if (v61)
      {
        swift_bridgeObjectRetain();
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        v23 = *(void *)(v21 + 8 * v60 + 32);
        swift_unknownObjectRetain();
      }
      v22 = (uint64_t)[v23 isItemPinned:v74];
      swift_unknownObjectRelease();
      if (v22) {
        break;
      }
      v62 = v60 + 1;
      if (__OFADD__(v60, 1)) {
        goto LABEL_139;
      }
      ++v60;
      if (v62 == v58)
      {
        v60 = v58;
        break;
      }
    }
    if (v58 >= v60)
    {
      if (v60 == v58)
      {

        swift_bridgeObjectRelease();
LABEL_124:
        v69 = v77;
        v68 = v78;
        v70 = v75;
        v17 = v76;
        v10 = v79;
        goto LABEL_147;
      }
      v74 = v16;
      v63 = 1;
      v64 = v58;
    }
    else
    {
      v74 = v16;
      v63 = -1;
      v64 = v60;
      v60 = v58;
    }
    v16 = 0;
    v21 &= 0xFFFFFFFFFFFFFF8uLL;
    v80 = (void *)v64;
    v81 = v63;
    while (1)
    {
      v65 = __OFADD__(v16, v63);
      v16 += v63;
      if (v65) {
        break;
      }
      if (v60 == v58) {
        goto LABEL_137;
      }
      if (__OFADD__(v60, 1)) {
        goto LABEL_138;
      }
      v10 = v58;
      if (v60 + 1 != v58)
      {
        v22 = v60 + 5;
        while (1)
        {
          v10 = v22 - 4;
          if (v61)
          {
            swift_bridgeObjectRetain();
            v66 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((v10 & 0x8000000000000000) != 0) {
              goto LABEL_134;
            }
            if (v10 >= *(void *)(v21 + 16)) {
              goto LABEL_135;
            }
            v66 = *(void **)(v82 + 8 * v22);
            swift_unknownObjectRetain();
          }
          v23 = [v66 isItemPinned:v74];
          swift_unknownObjectRelease();
          if (v23) {
            goto LABEL_102;
          }
          v67 = v22 - 3;
          if (__OFADD__(v10, 1)) {
            break;
          }
          ++v22;
          if (v67 == v58)
          {
            v10 = v58;
LABEL_102:
            v64 = (uint64_t)v80;
            v63 = v81;
            goto LABEL_103;
          }
        }
        __break(1u);
        goto LABEL_130;
      }
LABEL_103:
      v60 = v10;
      if (v10 == v64)
      {
        swift_bridgeObjectRelease();
        if (v16 <= 0)
        {

          v21 = v82;
          goto LABEL_124;
        }
        v69 = v77;
        v68 = v78;
        v70 = v75;
        v17 = v76;
        v10 = v79;
        if (v74)
        {
          v21 = v82;
          swift_bridgeObjectRetain();
          v71 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          v71 = *(void *)(v21 + 16);
          v21 = v82;
        }
        if (v16 < v71) {
          [(id)v10 setState:2];
        }

        goto LABEL_147;
      }
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    swift_bridgeObjectRetain();
    v27 = _CocoaArrayWrapper.endIndex.getter();
  }
  v28 = 0;
  v16 = v26 & 0xC000000000000001;
  v21 = (unint64_t)_swiftEmptyArrayStorage;
  v22 = (uint64_t)&NSURLLocalizedNameKey_ptr;
  do
  {
    if (v16) {
      v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      v29 = *(id *)(v26 + 8 * v28 + 32);
    }
    v30 = v29;
    self;
    v31 = (void *)swift_dynamicCastObjCClass();
    if (v31)
    {
      v32 = [v31 children];
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v21 = (unint64_t)sub_10018FD10(0, *(void *)(v21 + 16) + 1, 1, (void *)v21);
      }
      v34 = *(void *)(v21 + 16);
      v33 = *(void *)(v21 + 24);
      v23 = v34 + 1;
      if (v34 >= v33 >> 1) {
        v21 = (unint64_t)sub_10018FD10((void *)(v33 > 1), v34 + 1, 1, (void *)v21);
      }
      *(void *)(v21 + 16) = v23;
      *(void *)(v21 + 8 * v34 + 32) = v10;
    }
    else
    {
    }
    ++v28;
  }
  while (v27 != v28);
LABEL_23:
  swift_bridgeObjectRelease_n();
  v25 = (void *)UIDocumentBrowserActionIdentifierUnpin;
  v80 = (void *)(v21 + 32);
  swift_bridgeObjectRetain();
  v26 = 0;
  v81 = 0;
  while (1)
  {
    v45 = *(void *)(v21 + 16);
    if (v81 == v45) {
      break;
    }
    if (v81 >= v45) {
      goto LABEL_140;
    }
    v16 = v81 + 1;
    v46 = v80[v81];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = v46;
    v81 = v16;
    if (v46)
    {
      v35 = 0;
      v10 = v46 & 0xFFFFFFFFFFFFFF8;
      if (v46 >= 0) {
        v36 = v46 & 0xFFFFFFFFFFFFFF8;
      }
      else {
        v36 = v46;
      }
      v79 = v36;
      v16 = v46 & 0xC000000000000001;
      if ((unint64_t)v46 >> 62)
      {
LABEL_28:
        swift_bridgeObjectRetain();
        v37 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v35 != v37) {
          goto LABEL_34;
        }
      }
      else
      {
        while (2)
        {
          if (v35 != *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_34:
            if (v16)
            {
              v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v35 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
LABEL_133:
                __break(1u);
LABEL_134:
                __break(1u);
LABEL_135:
                __break(1u);
                goto LABEL_136;
              }
              v38 = *(id *)(v26 + 8 * v35 + 32);
            }
            v39 = v38;
            if (__OFADD__(v35, 1)) {
              goto LABEL_131;
            }
            self;
            v40 = (void *)swift_dynamicCastObjCClass();
            if (v40)
            {
              v41 = [v40 identifier];
              v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v23 = v42;

              v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              if (v23)
              {
                if (v22 == v43 && v23 == v44)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
LABEL_51:
                  swift_bridgeObjectRelease();
                  self;
                  v47 = (void *)swift_dynamicCastObjCClass();
                  if (v47)
                  {
                    v75 = v47;
                    [v47 setState:1];
                    goto LABEL_55;
                  }

                  goto LABEL_54;
                }
                v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v22)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_51;
                }

                goto LABEL_32;
              }
            }
            else
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
            }

            swift_bridgeObjectRelease();
LABEL_32:
            ++v35;
            if (!(v26 >> 62)) {
              continue;
            }
            goto LABEL_28;
          }
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_54:
  v75 = 0;
LABEL_55:
  v10 = UIDocumentBrowserActionIdentifierPin;
  swift_bridgeObjectRetain();
  v81 = 0;
  while (2)
  {
    v56 = *(void *)(v21 + 16);
    if (v81 != v56)
    {
      if (v81 >= v56) {
        goto LABEL_141;
      }
      v16 = v81 + 1;
      v57 = v80[v81];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v81 = v16;
      if (!v57) {
        continue;
      }
      v48 = 0;
      if (v57 >= 0) {
        v49 = v57 & 0xFFFFFFFFFFFFFF8;
      }
      else {
        v49 = v57;
      }
      v79 = v49;
      v16 = v57 & 0xC000000000000001;
      if ((unint64_t)v57 >> 62)
      {
LABEL_60:
        swift_bridgeObjectRetain();
        v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v48 == v23) {
          continue;
        }
LABEL_66:
        if (v16)
        {
          v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v48 >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_132;
          }
          v50 = *(id *)(v57 + 8 * v48 + 32);
        }
        v25 = v50;
        if (__OFADD__(v48, 1)) {
          goto LABEL_133;
        }
        self;
        v51 = (void *)swift_dynamicCastObjCClass();
        if (v51)
        {
          v52 = [v51 identifier];
          v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v26 = v53;

          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          if (v26)
          {
            if (v22 == v54 && v26 == v55)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_83;
            }
            v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v22)
            {
              swift_bridgeObjectRelease();
LABEL_83:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              self;
              v10 = swift_dynamicCastObjCClass();
              if (!v10)
              {

                goto LABEL_97;
              }
              v21 = v82;
              v16 = v82 >> 62;
              if (!(v82 >> 62))
              {
                v58 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v59 = v25;
                swift_bridgeObjectRetain();
                if (!v58) {
                  goto LABEL_145;
                }
                goto LABEL_86;
              }
              goto LABEL_144;
            }

            goto LABEL_64;
          }
        }
        else
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }

        swift_bridgeObjectRelease();
LABEL_64:
        ++v48;
        if ((unint64_t)v57 >> 62) {
          goto LABEL_60;
        }
      }
      v23 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48 == v23) {
        continue;
      }
      goto LABEL_66;
    }
    break;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v10 = 0;
LABEL_97:
  v21 = v82;
LABEL_146:
  v69 = v77;
  v68 = v78;
  v70 = v75;
  v17 = v76;
LABEL_147:
  *(void *)(v17 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes) = v21;
  swift_bridgeObjectRelease();
  *(void *)(v17 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode) = v68;

  swift_unknownObjectRelease();
  return v17;
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(void *a1, uint64_t a2, double a3, double a4)
{
  v5 = v4;
  uint64_t v10 = type metadata accessor for Logger();
  v75 = *(void (***)(char *, uint64_t))(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  v16 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  v19 = (char *)v70 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)v70 - v20;
  uint64_t v22 = type metadata accessor for IndexPath();
  __chkstk_darwin(v22);
  v25 = (char *)v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    return 0;
  }
  v72 = v19;
  id v73 = a1;
  uint64_t v74 = v23;
  id v26 = [a1 contextMenuInteraction];
  if (v26)
  {
    v27 = v26;
    id v28 = [v26 menuAppearance];

    BOOL v29 = v28 == (id)2;
  }
  else
  {
    BOOL v29 = 0;
  }
  if ([v5 isEditing] && !v29) {
    return 0;
  }
  v30 = *(void **)&v5[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ([v30 browserViewContext]) {
    return 0;
  }
  v70[0] = *(void *)(v74 + 16);
  v70[1] = v74 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v70[0])(v25, a2, v22);
  id v31 = [v73 indexPathsForSelectedItems];
  if (v31)
  {
    v32 = v31;
    v71 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    v71 = _swiftEmptyArrayStorage;
  }
  if (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] == 1
    || ([v30 suppressBlackCallout] & 1) != 0
    || (sub_1001DAF30((uint64_t)v25) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v74 + 8))(v25, v22);
    swift_bridgeObjectRelease();
    return 0;
  }
  id v35 = [v30 sceneIdentifier];
  v36 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v35);

  v37 = &v36[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  if (*(void *)v37)
  {
    swift_bridgeObjectRelease();
    static Logger.UI.getter();
    v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v41 = v74;
    if (v40)
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[Interaction] An action was trying to be performed while there is an item trying to be opened.", v42, 2u);
      swift_slowDealloc();
    }

    v75[1](v12, v10);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v22);
    return 0;
  }
  v43 = (void **)&v36[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
  swift_beginAccess();
  v44 = *v43;
  *v43 = 0;
  v75 = (void (**)(char *, uint64_t))v36;
  sub_10013FFF4(v44);

  __chkstk_darwin(v45);
  v70[-2] = v25;
  BOOL v46 = sub_10008CF28((uint64_t (*)(char *))sub_1002188C0, (uint64_t)&v70[-4], (uint64_t)v71, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0);
  uint64_t v47 = v74;
  if (v46) {
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_100708E80);
  unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v50 = (void *)swift_allocObject();
  *((_OWORD *)v50 + 1) = xmmword_1005A0030;
  v71 = v50;
  ((void (*)(char *, char *, uint64_t))v70[0])((char *)v50 + v49, v25, v22);
  unsigned int v51 = [v5 isEditing];
  id v48 = v73;
  if (!v51) {
    goto LABEL_33;
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  unsigned int v53 = [v5 collectionView:v48 shouldSelectItemAtIndexPath:isa];

  if (!v53) {
    goto LABEL_33;
  }
  uint64_t v54 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
  if ((v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
  {
    v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
    sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
    v5[v54] = 0;
  }
  id result = [v5 loadViewIfNeeded];
  uint64_t v55 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  v56 = *(void **)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v56)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v57 = v56;
  Class v58 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v57 selectItemAtIndexPath:v58 animated:0 scrollPosition:0];

  Class v59 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v5 collectionView:v73 performPrimaryActionForItemAtIndexPath:v59];

  id result = [v5 loadViewIfNeeded];
  v60 = *(char **)&v5[v55];
  if (v60)
  {
    ((void (*)(char *, char *, uint64_t))v70[0])(v21, v25, v22);
    uint64_t v47 = v74;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v21, 0, 1, v22);
    uint64_t v61 = *(void *)&v60[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess();
    v62 = v60;
    swift_retain();
    sub_10008C318((uint64_t)v21, v61, (uint64_t *)&unk_1007069A0);
    swift_endAccess();

    swift_release();
LABEL_25:
    id v48 = v73;
LABEL_33:
    if (!v29 || ([v5 isEditing] & 1) != 0)
    {
LABEL_37:
      id v65 = [v48 indexPathForItemAtPoint:a3, a4];
      if (v65)
      {
        v66 = v65;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v67 = 0;
      }
      else
      {
        uint64_t v67 = 1;
      }
      uint64_t v68 = (uint64_t)v72;
      v69 = v75;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v16, v67, 1, v22);
      sub_1000CBE0C((uint64_t)v16, v68, (uint64_t *)&unk_1007069A0);
      uint64_t v33 = sub_1001EA0CC((uint64_t)v71, v68);
      swift_bridgeObjectRelease();

      sub_1000CBBA4(v68, (uint64_t *)&unk_1007069A0);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v22);
      return (id)v33;
    }
    id result = [v5 loadViewIfNeeded];
    v63 = *(void **)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v63)
    {
      id v64 = v63;
      sub_1001EB5D8((uint64_t)v25, 1);

      goto LABEL_37;
    }
    __break(1u);
    goto LABEL_42;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1001EB5D8(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v82 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  v79 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for DispatchQoS();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  v77 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v88 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v74 = v9;
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v84 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  v16 = (char *)&v70 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  v19 = (char *)&v70 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v91 = (uint64_t)&v70 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v70 - v22;
  uint64_t v24 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v25 = *((void *)v24 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, void, uint64_t, uint64_t))(v25 + 64))(v2, &off_1006AF4A8, a1, a2 & 1, ObjectType, v25);
    swift_unknownObjectRelease();
  }
  int v76 = a2;
  uint64_t v27 = v88;
  id v28 = *(void (**)(void, void, void))(v88 + 16);
  uint64_t v75 = a1;
  v93 = (void (*)(char *, uint64_t, uint64_t))v28;
  uint64_t v94 = v88 + 16;
  v28(v23, a1, v8);
  v85 = v3;
  BOOL v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
  v29(v23, 0, 1, v8);
  uint64_t v30 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  uint64_t v31 = *(void *)&v3[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess();
  swift_retain();
  sub_10008C318((uint64_t)v23, v31, (uint64_t *)&unk_1007069A0);
  swift_endAccess();
  swift_release();
  v95 = v29;
  uint64_t v96 = v27 + 56;
  v29(v23, 1, 1, v8);
  v32 = v85;
  uint64_t v33 = v30;
  uint64_t v34 = *(void *)&v85[v30]
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart;
  swift_beginAccess();
  swift_retain();
  uint64_t v35 = v34;
  uint64_t v36 = v88;
  sub_10008C318((uint64_t)v23, v35, (uint64_t *)&unk_1007069A0);
  swift_endAccess();
  swift_release();
  sub_1000CBE70(&qword_100708E80);
  v37 = v32;
  uint64_t v38 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v39 = (v38 + 32) & ~v38;
  uint64_t v89 = *(void *)(v36 + 72);
  uint64_t v72 = v38;
  uint64_t v73 = v38 | 7;
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1005A0030;
  uint64_t v83 = v33;
  uint64_t v41 = *(void *)&v37[v33]
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess();
  uint64_t v42 = v41;
  uint64_t v43 = v91;
  sub_1000CBC00(v42, v91, (uint64_t *)&unk_1007069A0);
  v92 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  uint64_t result = v92(v43, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v87 = v40;
    uint64_t v71 = v39;
    uint64_t v45 = *(void (**)(void))(v36 + 32);
    uint64_t v86 = v40 + v39;
    v90 = v45;
    uint64_t v91 = v36 + 32;
    v45();
    BOOL v46 = v37;
    id v47 = [v37 indexPathsForSelectedItems];
    if (v47)
    {
      id v48 = v47;
      uint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v50 = *(void *)(v49 + 16);
      uint64_t v70 = v49;
      if (v50)
      {
        uint64_t v51 = v49 + v71;
        v52 = (void (**)(char *, uint64_t))(v36 + 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v93(v19, v51, v8);
          v95(v19, 0, 1, v8);
          if (v92((uint64_t)v19, 1, v8) == 1) {
            break;
          }
          ((void (*)(char *, char *, uint64_t))v90)(v10, v19, v8);
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          [v46 deselectItemAtIndexPath:isa animated:0 v70];

          (*v52)(v10, v8);
          v51 += v89;
          if (!--v50) {
            goto LABEL_11;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_11:
        v95(v19, 1, 1, v8);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v36 = v88;
    }
    uint64_t v54 = *(void *)(v87 + 16);
    if (v54)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = v86;
      while (1)
      {
        v93(v16, v55, v8);
        v95(v16, 0, 1, v8);
        if (v92((uint64_t)v16, 1, v8) == 1) {
          break;
        }
        ((void (*)(char *, char *, uint64_t))v90)(v10, v16, v8);
        Class v56 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v46 selectItemAtIndexPath:v56 animated:0 scrollPosition:0];

        (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
        v55 += v89;
        if (!--v54) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_19:
      v95(v16, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v57 = *(void *)&v46[v83]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess();
    uint64_t v58 = v57;
    uint64_t v59 = v84;
    sub_1000CBC00(v58, v84, (uint64_t *)&unk_1007069A0);
    uint64_t result = v92(v59, 1, v8);
    if (result != 1)
    {
      uint64_t v60 = v72;
      sub_1002A46A0(v59);
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v59, v8);
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v61 = (void *)static OS_dispatch_queue.main.getter();
      v93(v10, v75, v8);
      uint64_t v62 = (v60 + 24) & ~v60;
      uint64_t v63 = v62 + v74;
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v46;
      ((void (*)(uint64_t, char *, uint64_t))v90)(v64 + v62, v10, v8);
      *(unsigned char *)(v64 + v63) = v76 & 1;
      aBlock[4] = sub_100220784;
      aBlock[5] = v64;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100697D48;
      id v65 = _Block_copy(aBlock);
      v66 = v46;
      swift_release();
      uint64_t v67 = v77;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v68 = v79;
      uint64_t v69 = v82;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v65);

      (*(void (**)(char *, uint64_t))(v81 + 8))(v68, v69);
      return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v67, v80);
    }
  }
  __break(1u);
  return result;
}

void DOCItemCollectionViewController.collectionView(_:willPerformPreviewActionForMenuWith:animator:)(void *a1, void *a2, void *a3)
{
  uint64_t v30 = a1;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - v14;
  type metadata accessor for DOCNodeContextMenuConfiguration();
  if (swift_dynamicCastClass())
  {
    id v29 = a3;
    v16 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    id v31 = a2;
    if ([v16 browserViewContext])
    {
      id v17 = v31;
    }
    else
    {
      unint64_t v18 = swift_bridgeObjectRetain();
      v19 = sub_10003B398(v18);
      swift_bridgeObjectRelease();
      if (*((void *)v19 + 2))
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, &v19[(*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)], v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }
      id v20 = v29;
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {

        sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
      }
      else
      {
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v21(v15, v8, v9);
        if (sub_1001D5290((uint64_t)v15))
        {
          [v20 setPreferredCommitStyle:0];
          (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
          unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
          uint64_t v23 = swift_allocObject();
          uint64_t v24 = v30;
          *(void *)(v23 + 16) = v3;
          *(void *)(v23 + 24) = v24;
          v21((char *)(v23 + v22), v13, v9);
          aBlock[4] = sub_1002189B0;
          aBlock[5] = v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000666D8;
          aBlock[3] = &unk_100695AC0;
          uint64_t v25 = _Block_copy(aBlock);
          id v26 = v3;
          id v27 = v24;
          swift_release();
          [v29 addAnimations:v25];
          _Block_release(v25);

          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
        }
      }
    }
  }
}

void sub_1001EC630(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, id, uint64_t))
{
  id v10 = a3;
  id v11 = a4;
  swift_unknownObjectRetain();
  id v12 = a1;
  a6(v10, v11, a5);

  swift_unknownObjectRelease();
}

void DOCItemCollectionViewController.contextMenuInteraction(_:willDisplayMenuFor:animator:)(void *a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu);
  *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu) = a1;
  id v2 = a1;
}

void DOCItemCollectionViewController.contextMenuInteraction(_:willEndFor:animator:)(uint64_t a1, uint64_t a2, void *a3)
{
}

id DOCItemCollectionViewController.contextMenuInteraction(_:configurationForMenuAtLocation:)(void *a1, double a2, double a3)
{
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)aBlock - v11;
  if ((v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0)
    || [v3 isEditing] && objc_msgSend(a1, "menuAppearance") != (id)2
    || [*(id *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] browserViewContext])
  {
    return 0;
  }
  [v3 loadViewIfNeeded];
  id result = *(id *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    id v14 = [result indexPathForItemAtPoint:a2, a3];
    if (v14)
    {
      uint64_t v15 = v14;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v16 = type metadata accessor for IndexPath();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 0, 1, v16);
    }
    else
    {
      uint64_t v17 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
    }
    sub_1000CBE0C((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_1007069A0);
    if (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] != 1)
    {
      uint64_t v18 = type metadata accessor for IndexPath();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v12, 1, v18) == 1)
      {
        if ([a1 menuAppearance] == (id)2)
        {
          id v19 = sub_1001ECB90();
        }
        else
        {
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v3;
          uint64_t v21 = self;
          aBlock[4] = sub_100222594;
          aBlock[5] = v20;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1001FCE6C;
          aBlock[3] = &unk_100695B10;
          unint64_t v22 = _Block_copy(aBlock);
          uint64_t v23 = v3;
          swift_retain();
          swift_release();
          id v19 = [v21 configurationWithIdentifier:0 previewProvider:0 actionProvider:v22];
          swift_release();
          _Block_release(v22);
        }
        sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_1007069A0);
        return v19;
      }
    }
    sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_1007069A0);
    return 0;
  }
  __break(1u);
  return result;
}

id sub_1001ECB90()
{
  id v1 = [v0 contextMenuForFolder];
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v1;
    id v3 = self;
    v7[4] = sub_1002229E8;
    v7[5] = v2;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1001FCE6C;
    v7[3] = &unk_100697CA8;
    v4 = _Block_copy(v7);
    id v5 = v1;
    swift_retain();
    swift_release();
    id v1 = [v3 configurationWithIdentifier:0 previewProvider:0 actionProvider:v4];
    swift_release();
    _Block_release(v4);
  }
  return v1;
}

void sub_1001ECD48(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return;
  }
  id v3 = v1;
  v4 = sub_100207430(a1, (uint64_t)v3);

  id v5 = (char *)v3;
  unint64_t v6 = sub_1002061BC((uint64_t)v4, (uint64_t)v5, 0);
  swift_bridgeObjectRelease();

  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
        goto LABEL_28;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v9 = *(void **)(v6 + 8 * i + 32);
          swift_unknownObjectRetain();
        }
        if (objc_msgSend(v9, "isActionable", v15))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v10 = v15;
      if ((v15 & 0x8000000000000000) != 0) {
        goto LABEL_24;
      }
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_24;
  }
LABEL_17:
  if ((v10 & 0x4000000000000000) != 0)
  {
LABEL_24:
    swift_retain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v14) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
  if (!*(void *)(v10 + 16))
  {
LABEL_25:
    swift_release();
    return;
  }
LABEL_19:
  uint64_t v11 = *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v11)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v12 = v11 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v12 + 16)) {
    uint64_t v13 = *(void **)(*(void *)v12 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
  }
  else {
    uint64_t v13 = *(void **)(v12 + 8);
  }
  swift_unknownObjectRetain();
  sub_10018D07C(v10, v13);
  swift_release();
  swift_unknownObjectRelease();
}

void *sub_1001ECFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v30[-v13];
  if (sub_1001DAF30(a1))
  {
    static Logger.UI.getter();
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Skipping item, since it is the Create Item index path.", v17, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v18 = type metadata accessor for IndexPath();
    return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v32, 1, 1, v18);
  }
  if (IndexPath.count.getter() == 2)
  {
    id result = *(void **)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!result)
    {
      __break(1u);
      return result;
    }
    if (([result isGathering] & 1) != 0
      || (*(unsigned char *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) == 0)
    {
      uint64_t v20 = type metadata accessor for IndexPath();
      uint64_t v21 = *(void *)(v20 - 8);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v21 + 16))(v7, a1, v20);
LABEL_14:
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v20);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v20) != 1)
      {
        uint64_t v28 = v32;
        type metadata accessor for IndexPath();
        uint64_t v29 = *(void *)(v20 - 8);
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v29 + 32))(v28, v7, v20);
        return (void *)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v20);
      }
      goto LABEL_15;
    }
    unsigned int v31 = sub_1001DAF30(a1);
    uint64_t v20 = type metadata accessor for IndexPath();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((v31 & 1) == 0)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v7, a1, v20);
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v20 = type metadata accessor for IndexPath();
    uint64_t v21 = *(void *)(v20 - 8);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v7, 1, 1, v20);
LABEL_15:
  sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007069A0);
  static Logger.UI.getter();
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v25 = v32;
  if (v24)
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Skipping item, since it could not be resolved.", v26, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v27 = type metadata accessor for IndexPath();
  return (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
}

UIMenu sub_1001ED54C()
{
  id v1 = sub_100184FD4((id)1);
  uint64_t v2 = v1[2];
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v4 = swift_bridgeObjectRetain();
      sub_100169A18(v4);
    }
    swift_bridgeObjectRelease();
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v5)
  {
    id v6 = v0;
    UIMenuElementSize v7 = (UIMenuElementSize)sub_10020A4D0((uint64_t)v1, v6);
    swift_bridgeObjectRelease();

    if ((unint64_t)v7 >> 62)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      swift_bridgeObjectRetain();
      UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      UIMenuElementSize preferredElementSize = v7;
    }
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    v9._countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v12.value.super.Class isa = 0;
    v12.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v12, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1001ED72C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v3 = a2;
  uint64_t v5 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v7 = a2;
    if (v6) {
      goto LABEL_3;
    }
LABEL_18:

    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_19:
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      unint64_t v15 = (void *)_bridgeCocoaArray<A>(_:)();
      goto LABEL_15;
    }
LABEL_14:
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    unint64_t v15 = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v25.value.super.Class isa = 0;
    v25.is_nil = 0;
    uint64_t result = (uint64_t)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v25, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v15, v19).super.super.isa;
    *a3 = result;
    return result;
  }
LABEL_17:
  id v17 = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v6 & 0x8000000000000000) == 0)
  {
    os_log_type_t v23 = a3;
    BOOL v24 = v3;
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    uint64_t v9 = 0;
    do
    {
      if (v6 == v9)
      {
        __break(1u);
        goto LABEL_17;
      }
      if ((v5 & 0xC000000000000001) != 0) {
        UIImage_optional v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        UIImage_optional v12 = (char *)*(id *)(v5 + 8 * v9 + 32);
      }
      uint64_t v13 = v12;
      id v14 = [v12 action:preferredElementSize v19._rawValue v20 v21 v22];
      if (!*(void *)&v13[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle + 8])
      {
        id v10 = [v13 title];
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      ++v9;
      swift_bridgeObjectRetain();
      a3 = (uint64_t *)[v13 image];
      id v3 = (void *)swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v3;
      *(void *)(v11 + 24) = v14;
      UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
      v19._rawValue = 0;
      uint64_t v21 = sub_10021FC94;
      uint64_t v22 = v11;
      uint64_t v20 = 0;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v6 != v9);

    a3 = v23;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_1001EDA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    [result performSelector:a3 withObject:a1];
    return v6;
  }
  return result;
}

id DOCItemCollectionViewController.targetPreview(for:)(char *a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  UIImage_optional v12 = (char *)&v29 - v11;
  uint64_t v13 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  id v14 = 0;
  if (*(void *)v13) {
    return v14;
  }
  id v14 = [a1 window];

  if (!v14) {
    return v14;
  }
  [v1 loadViewIfNeeded];
  id result = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    id v16 = [result indexPathForCell:a1];
    if (v16)
    {
      id v17 = v16;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v18(v5, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v18(v12, v5, v6);
        Swift::OpaquePointer v19 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
        id v20 = sub_1001B533C((uint64_t)v12);
        [v19 bounds];
        [a1 convertPoint:v19 fromCoordinateSpace:];
        double v22 = v21;
        double v24 = v23;
        id v25 = [v20 visiblePath];
        if (v25)
        {
          id v26 = v25;
          CGAffineTransformMakeTranslation(&v29, -v22, -v24);
          [v26 applyTransform:&v29];
        }
        id v27 = objc_allocWithZone((Class)UITargetedPreview);
        id v28 = v19;
        id v14 = [v27 initWithView:v28 parameters:v20];

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        return v14;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001EDF28(void *a1, uint64_t (*a2)(void *, void *))
{
  uint64_t v4 = static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  id v6 = [a1 displayName];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v10 = sub_100073F48();
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  LOBYTE(v4) = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v11 = a1;
    UIImage_optional v12 = v2;
  }
  else
  {
    uint64_t v13 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10059B760;
    *(void *)(v14 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v14 + 64) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v14 + 32) = v2;
    id v15 = v2;
    id v16 = [a1 displayName];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    *(void *)(v14 + 96) = &type metadata for String;
    *(void *)(v14 + 104) = v10;
    *(void *)(v14 + 72) = v17;
    *(void *)(v14 + 80) = v19;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    UIImage_optional v12 = 0;
  }
  return a2(v11, v12);
}

void sub_1001EE198(uint8_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v64 = a6;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v62 = (void **)((char *)&v56 - v13);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  double v21 = (char *)&v56 - v20;
  __chkstk_darwin(v19);
  double v23 = (char *)&v56 - v22;
  id v65 = a1;
  if (a2)
  {
    uint64_t v58 = a3;
    uint64_t v60 = v10;
    swift_errorRetain();
    static Logger.UI.getter();
    swift_errorRetain();
    swift_errorRetain();
    double v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v61 = v15;
      id v27 = (uint8_t *)v26;
      id v28 = (void **)swift_slowAlloc();
      uint64_t v56 = v9;
      aBlock = v28;
      uint64_t v59 = v18;
      *(_DWORD *)id v27 = 136315138;
      uint64_t v57 = v21;
      swift_getErrorValue();
      uint64_t v29 = Error.localizedDescription.getter();
      uint64_t v68 = sub_10009B0E4(v29, v30, (uint64_t *)&aBlock);
      double v21 = v57;
      uint64_t v18 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Error while trying to fetch the url %s", v27, 0xCu);
      swift_arrayDestroy();
      uint64_t v9 = v56;
      swift_slowDealloc();
      uint64_t v15 = v61;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    uint64_t v10 = v60;
    a1 = v65;
    a3 = v58;
  }
  if (a1)
  {
    unsigned int v31 = a1;
    static Logger.UI.getter();
    uint64_t v32 = v63;
    (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v63, a3, v9);
    uint64_t v33 = v31;
    uint64_t v34 = v18;
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v58 = (void *)swift_slowAlloc();
      uint64_t v62 = (void **)swift_slowAlloc();
      aBlock = v62;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v60 = v14;
      sub_100078438((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v59 = v34;
      uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v68 = sub_10009B0E4(v38, v39, (uint64_t *)&aBlock);
      uint64_t v61 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v9);
      *(_WORD *)(v37 + 12) = 2112;
      uint64_t v68 = (uint64_t)v33;
      uint64_t v40 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v58 = v65;

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Fetching item for url %s item %@ to be able to get the transition controller", (uint8_t *)v37, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v60);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v9);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
    }
    id v48 = [self defaultManager];
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = v64;
    v49[3] = v33;
    uint64_t v50 = v67;
    v49[4] = v66;
    v49[5] = v50;
    uint64_t v73 = sub_10021F870;
    uint64_t v74 = v49;
    aBlock = _NSConcreteStackBlock;
    uint64_t v70 = 1107296256;
    uint64_t v71 = sub_1001B6B50;
    uint64_t v72 = &unk_100697140;
    uint64_t v51 = _Block_copy(&aBlock);
    v52 = v33;
    swift_retain();
    swift_retain();
    swift_release();
    [v48 fetchURLForItem:v52 completionHandler:v51];
    _Block_release(v51);
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v41 = v62;
    (*(void (**)(void **, void *, uint64_t))(v10 + 16))(v62, a3, v9);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (void **)swift_slowAlloc();
      uint64_t v57 = v21;
      aBlock = v45;
      uint64_t v60 = v14;
      *(_DWORD *)v44 = 136315138;
      id v65 = v44 + 4;
      sub_100078438((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v68 = sub_10009B0E4(v46, v47, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(void **, uint64_t))(v10 + 8))(v41, v9);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to fetch item for url: %s to be able to get the transition controller", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v15 + 8))(v57, v60);
    }
    else
    {
      (*(void (**)(void **, uint64_t))(v10 + 8))(v41, v9);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    }
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v67;
    *(void *)(v53 + 16) = v66;
    *(void *)(v53 + 24) = v54;
    uint64_t v73 = sub_10021F7F8;
    uint64_t v74 = (void *)v53;
    aBlock = _NSConcreteStackBlock;
    uint64_t v70 = 1107296256;
    uint64_t v71 = sub_1000666D8;
    uint64_t v72 = &unk_1006970F0;
    uint64_t v55 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v55);
  }
}

void sub_1001EEB08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v13, &qword_1007076B0);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_1000CBE0C((uint64_t)v13, v17 + v14, &qword_1007076B0);
  *(void *)(v17 + v15) = a3;
  *(void *)(v17 + v16) = a4;
  uint64_t v18 = (void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v18 = v22;
  v18[1] = a6;
  aBlock[4] = sub_10021F9DC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_100697190;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  id v20 = a4;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v19);
}

uint64_t sub_1001EECE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *), uint64_t a5)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
LABEL_10:
    static Logger.UI.getter();
    id v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Item is not part of the current collection", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
    return v33(0, 0);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_9;
  }
  uint64_t v21 = (char *)Strong;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  if (!*(void *)&v21[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    __break(1u);
    return result;
  }
  unint64_t v23 = sub_10007CC5C(result);
  __chkstk_darwin(v23);
  *(&v30 - 2) = a3;
  *(&v30 - 1) = (uint64_t)v13;
  double v24 = (void *)sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)(&v30 - 4), v23);

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
  if (!v24)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_10;
  }
  swift_beginAccess();
  uint64_t v25 = swift_unknownObjectWeakLoadStrong();
  if (v25)
  {
    uint64_t v26 = (void *)v25;
    sub_1001EDF28(v24, v33);
  }
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_1001EF104(unint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v31 = a2;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = v4;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v29 = a3;
    uint64_t v16 = v15;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v33 = v27;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v28 = v8;
    swift_bridgeObjectRetain();
    uint64_t v17 = Array.description.getter();
    uint64_t v30 = a4;
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    id v32 = (id)sub_10009B0E4(v17, v19, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    id v32 = [*(id *)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v20 = String.init<A>(describing:)();
    id v32 = (id)sub_10009B0E4(v20, v21, &v33);
    a4 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[REVEAL]: revealing items: %s source: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v29;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v28);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  id v22 = [self defaultManager];
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v12;
  *(unsigned char *)(v23 + 24) = v31 & 1;
  *(void *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = a4;
  *(void *)(v23 + 48) = a1;
  swift_bridgeObjectRetain();
  double v24 = v12;
  swift_retain();
  sub_10053A2BC(a1, (uint64_t)sub_10021FAD0, v23);

  return swift_release();
}

void sub_1001EF48C(uint64_t a1, void *a2, int a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v121 = a6;
  v129 = a4;
  uint64_t v130 = a5;
  LODWORD(v128) = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v124 = v8;
  uint64_t v125 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v126 = (char *)v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v119 = (char *)v111 - v13;
  __chkstk_darwin(v12);
  v117 = (char *)v111 - v14;
  uint64_t v127 = type metadata accessor for UTType();
  uint64_t v116 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v16 = (char *)v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  v118 = (char *)v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)v111 - v20;
  uint64_t v22 = type metadata accessor for URL();
  os_log_t v122 = *(os_log_t *)(v22 - 8);
  uint64_t v123 = v22;
  __chkstk_darwin(v22);
  v120 = (char *)v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000CBE70((uint64_t *)&unk_100708E70);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (id *)((char *)v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26);
  uint64_t v30 = (void **)((char *)v111 - v29);
  int v31 = a2;
  unint64_t v32 = (unint64_t)sub_10020789C(a1, (uint64_t)v31);

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v37 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    *(void *)(v33 + 24) = v32;
    *(unsigned char *)(v33 + 32) = v128 & 1;
    uint64_t v34 = v130;
    *(void *)(v33 + 40) = v129;
    *(void *)(v33 + 48) = v34;
    aBlock[4] = (uint64_t)sub_10021FB84;
    aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    aBlock[3] = (uint64_t)&unk_100697258;
    uint64_t v35 = _Block_copy(aBlock);
    os_log_type_t v36 = v31;
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v35);
    return;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16)) {
    goto LABEL_8;
  }
  v115 = v31;
  uint64_t v38 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  sub_1000CBC00(v38, (uint64_t)v30, (uint64_t *)&unk_100708E70);
  unint64_t v39 = *v30;
  uint64_t v40 = (char *)v30 + *(int *)(v24 + 48);
  os_log_t v42 = v122;
  uint64_t v41 = v123;
  Class isa = v122[1].isa;
  os_log_t v114 = v122 + 1;
  v113 = (void (*)(char *, uint64_t))isa;
  ((void (*)(char *, uint64_t))isa)(v40, v123);
  sub_1000CBC00(v38, (uint64_t)v28, (uint64_t *)&unk_100708E70);

  v44 = (void (*)(char *, char *, uint64_t))v42[4].isa;
  v44(v21, (char *)v28 + *(int *)(v24 + 48), v41);
  v112 = (void (*)(void, void, void, void))v42[7].isa;
  v112(v21, 0, 1, v41);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v42[6].isa)(v21, 1, v41) == 1)
  {

    sub_1000CBBA4((uint64_t)v21, &qword_1007076B0);
LABEL_8:
    uint64_t v45 = v126;
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v128 = swift_slowAlloc();
      aBlock[0] = v128;
      *(_DWORD *)uint64_t v48 = 136315650;
      id v132 = (id)sub_10009B0E4(0xD000000000000032, 0x80000001005DC8A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v48 + 12) = 2080;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      swift_bridgeObjectRetain();
      uint64_t v49 = Array.description.getter();
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      id v132 = (id)sub_10009B0E4(v49, v51, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v52 = Array.description.getter();
      unint64_t v54 = v53;
      swift_bridgeObjectRelease();
      id v132 = (id)sub_10009B0E4(v52, v54, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "[REVEAL]: %s Could not fetchURLPairs or get an item to search for. Items provided: %s, URLPairs: %s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v124);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v45, v124);
    }
    v129(0);
    return;
  }
  uint64_t v55 = v39;
  v44(v120, v21, v41);
  uint64_t v56 = v115;
  if (*(unsigned char *)(*(void *)&v115[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                + 8) != 1)
    goto LABEL_24;
  uint64_t v121 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  v126 = *(char **)&v115[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  id v57 = [v126 recentDocumentsContentTypes];
  uint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v59 = *(void *)(v58 + 16);
  if (v59)
  {
    unint64_t v60 = v58 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
    uint64_t v61 = (void (**)(char *, uint64_t))(v116 + 8);
    uint64_t v62 = *(void *)(v116 + 72);
    v111[1] = v58;
    swift_bridgeObjectRetain();
    uint64_t v63 = v55;
    while (1)
    {
      id v64 = [v63 contentType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v64) = UTType.conforms(to:)();
      (*v61)(v16, v127);
      if (v64) {
        break;
      }
      v60 += v62;
      --v59;
      uint64_t v63 = v55;
      if (!v59)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v41 = v123;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v41 = v123;
LABEL_24:
    v93 = v119;
    static Logger.UI.getter();
    id v94 = v55;
    v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v97 = 136315394;
      id v132 = (id)sub_10009B0E4(0xD000000000000032, 0x80000001005DC8A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v97 + 12) = 2080;
      uint64_t v127 = v97 + 14;
      id v98 = [v94 displayName];
      uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v101 = v100;

      uint64_t v41 = v123;
      id v132 = (id)sub_10009B0E4(v99, v101, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "[REVEAL]: %s - Waiting for pending node: %s", (uint8_t *)v97, 0x16u);
      swift_arrayDestroy();
      uint64_t v56 = v115;
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v125 + 8))(v119, v124);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v125 + 8))(v93, v124);
    }
    v102 = v129;
    uint64_t v103 = v130;
    v104 = v113;
    uint64_t v105 = (uint64_t)v118;
    v106 = v120;
    ((void (*)(char *, char *, uint64_t))v122[2].isa)(v118, v120, v41);
    v112(v105, 0, 1, v41);
    uint64_t v107 = swift_allocObject();
    *(void *)(v107 + 16) = v94;
    *(void *)(v107 + 24) = v56;
    *(unsigned char *)(v107 + 32) = v128 & 1;
    *(void *)(v107 + 40) = v102;
    *(void *)(v107 + 48) = v103;
    id v108 = v94;
    v109 = v56;
    swift_retain();
    id v110 = v108;
    sub_1001FFA58(v110, v105, (uint64_t)sub_10021FB2C, v107, v109);

    swift_release();
    sub_1000CBBA4(v105, &qword_1007076B0);
    v104(v106, v41);
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = v55;
LABEL_19:
  id v65 = v117;
  static Logger.UI.getter();
  uint64_t v66 = v56;
  id v67 = v63;
  uint64_t v68 = v66;
  id v69 = v67;
  uint64_t v70 = v68;
  id v71 = v69;
  uint64_t v72 = v70;
  id v73 = v71;
  uint64_t v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.default.getter();
  int v76 = v75;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v77 = swift_slowAlloc();
    uint64_t v128 = swift_slowAlloc();
    aBlock[0] = v128;
    *(_DWORD *)uint64_t v77 = 136316162;
    os_log_t v122 = v74;
    id v132 = (id)sub_10009B0E4(0xD000000000000032, 0x80000001005DC8A0, aBlock);
    LODWORD(v119) = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v77 + 12) = 2080;
    id v78 = [v73 debugDescription];
    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v81 = v80;

    id v132 = (id)sub_10009B0E4(v79, v81, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 22) = 2080;
    id v82 = [v73 contentType];
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v83 = UTType.identifier.getter();
    unint64_t v85 = v84;
    (*(void (**)(char *, uint64_t))(v116 + 8))(v16, v127);
    id v132 = (id)sub_10009B0E4(v83, v85, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v41 = v123;
    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 32) = 2080;
    id v132 = [*(id *)&v56[v121] identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v86 = String.init<A>(describing:)();
    id v132 = (id)sub_10009B0E4(v86, v87, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 42) = 2080;
    id v88 = [v126 recentDocumentsContentTypes];
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v89 = Array.description.getter();
    unint64_t v91 = v90;
    swift_bridgeObjectRelease();
    id v132 = (id)sub_10009B0E4(v89, v91, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v92 = v122;
    _os_log_impl((void *)&_mh_execute_header, v122, (os_log_type_t)v119, "[REVEAL]: %s - Can not reveal item: %s because node is a type: %s not supported by spotlight-backed collection source: %s because recentDocumentsContentTypes does not contain it: %s", (uint8_t *)v77, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v125 + 8))(v117, v124);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v125 + 8))(v65, v124);
  }
  v129(0);

  v113(v120, v41);
}

uint64_t sub_1001F0478(uint64_t a1, unint64_t a2, int a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001D0050(a2, 1, a3);
  static Logger.UI.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[REVEAL]: found matching nodes, calling completion block", v13, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a4(1);
}

void sub_1001F05F0(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(unsigned char *)(v12 + 40) = a4;
  *(void *)(v12 + 48) = a5;
  *(void *)(v12 + 56) = a6;
  v16[4] = sub_10021FC48;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1000666D8;
  v16[3] = &unk_1006972F8;
  uint64_t v13 = _Block_copy(v16);
  swift_unknownObjectRetain();
  id v14 = a2;
  id v15 = a3;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v13);
}

uint64_t sub_1001F06F8(void *a1, void *a2, void *a3, char a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v68 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v63 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v63 - v18;
  uint64_t v69 = a6;
  uint64_t v70 = a5;
  if (a1)
  {
    swift_unknownObjectRetain();
    static Logger.UI.getter();
    id v20 = a2;
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      os_log_t v65 = v21;
      uint64_t v25 = v24;
      uint64_t v66 = swift_slowAlloc();
      unint64_t v73 = v66;
      *(_DWORD *)uint64_t v25 = 136315394;
      id v67 = a3;
      id v72 = (id)sub_10009B0E4(0xD000000000000032, 0x80000001005DC8A0, (uint64_t *)&v73);
      LODWORD(v64) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2080;
      v63[1] = v25 + 14;
      uint64_t v26 = v12;
      id v27 = [v20 displayName];
      char v28 = a4;
      uint64_t v29 = a1;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v31;

      uint64_t v12 = v26;
      uint64_t v33 = v71;
      uint64_t v34 = v30;
      a1 = v29;
      a4 = v28;
      id v72 = (id)sub_10009B0E4(v34, v32, (uint64_t *)&v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      a3 = v67;
      swift_bridgeObjectRelease();
      os_log_t v35 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v64, "[REVEAL]: %s - Found matching node for %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v36 = v33;
    }
    else
    {

      uint64_t v36 = v71;
    }
    uint64_t v49 = *(void (**)(char *, uint64_t))(v36 + 8);
    v49(v17, v12);
    unint64_t v50 = v68;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_1005A04F0;
    *(void *)(v51 + 32) = a1;
    unint64_t v73 = v51;
    specialized Array._endMutation()();
    unint64_t v52 = v73;
    swift_unknownObjectRetain();
    sub_1001D0050(v52, 1, a4 & 1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    id v37 = a2;
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      LODWORD(v65) = v40;
      uint64_t v42 = v41;
      uint64_t v66 = swift_slowAlloc();
      unint64_t v73 = v66;
      *(_DWORD *)uint64_t v42 = 136315394;
      id v72 = (id)sub_10009B0E4(0xD000000000000032, 0x80000001005DC8A0, (uint64_t *)&v73);
      id v67 = (void *)v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v64 = v42 + 14;
      os_log_type_t v43 = a3;
      id v44 = [v37 displayName];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v47 = v46;

      a3 = v43;
      uint64_t v48 = v45;
      a1 = 0;
      id v72 = (id)sub_10009B0E4(v48, v47, (uint64_t *)&v73);
      uint64_t v12 = (uint64_t)v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v65, "[REVEAL]: %s - Couldn't Find matching node for %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v49 = *(void (**)(char *, uint64_t))(v71 + 8);
    v49(v19, v12);
    unint64_t v50 = v68;
  }
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  unint64_t v53 = a3;
  unint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v68 = (char *)v49;
    id v72 = a1;
    unint64_t v73 = v57;
    *(_DWORD *)uint64_t v56 = 136315394;
    sub_1000CBE70(&qword_100717520);
    id v67 = (void *)v12;
    uint64_t v58 = Optional.debugDescription.getter();
    id v72 = (id)sub_10009B0E4(v58, v59, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2080;
    id v72 = [*(id *)&v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v60 = String.init<A>(describing:)();
    id v72 = (id)sub_10009B0E4(v60, v61, (uint64_t *)&v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "[REVEAL]: calling completion block after waiting for pending node. Found node: %s. source: %s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, void *))v68)(v50, v67);
  }
  else
  {

    swift_unknownObjectRelease_n();
    v49(v50, v12);
  }
  return v70(1);
}

void sub_1001F1058(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
    uint64_t v20 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    unint64_t v32 = a3;
    if (!*(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    unint64_t v21 = sub_10007CC5C(v20);
    __chkstk_darwin(v21);
    *(&v31 - 2) = a4;
    *(&v31 - 1) = (uint64_t)v13;
    uint64_t v22 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)(&v31 - 4), v21);
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    if (v22)
    {
      int v23 = (void *)swift_allocObject();
      uint64_t v25 = v32;
      uint64_t v24 = v33;
      v23[2] = v32;
      v23[3] = v22;
      v23[4] = v24;
      v23[5] = a6;
      uint64_t v38 = sub_10021F610;
      os_log_type_t v39 = v23;
      aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = sub_1000666D8;
      id v37 = &unk_100697028;
      uint64_t v26 = _Block_copy(&aBlock);
      id v27 = v25;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v26);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v28 = v33;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = a6;
  uint64_t v38 = sub_10021F5C8;
  os_log_type_t v39 = (void *)v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1000666D8;
  id v37 = &unk_100696FD8;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v30);
}

void sub_1001F1464(void *a1, void *a2, void (*a3)(id), uint64_t a4)
{
  swift_retain();
  id v8 = a1;
  sub_100218E5C(a2, v8, a3, a4, (uint64_t)v8);
  swift_release();
}

void sub_1001F14E4(void *a1, void *a2, void (*a3)(id), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && a1)
  {
    uint64_t v35 = a3;
    id v13 = a2;
    swift_unknownObjectRetain();
    uint64_t v14 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10059B760;
    id v16 = [a1 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_100073F48();
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    *(void *)(v15 + 96) = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v15 + 104) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v15 + 72) = v13;
    id v20 = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v21 = [*(id *)(a5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) sceneIdentifier];
    if (v21)
    {
      uint64_t v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v29 = (objc_class *)type metadata accessor for DOCServiceTransitionController();
    uint64_t v30 = (char *)objc_allocWithZone(v29);
    swift_unknownObjectWeakInit();
    uint64_t v31 = (uint64_t *)&v30[OBJC_IVAR____TtC5Files30DOCServiceTransitionController_sceneIdentifier];
    *uint64_t v31 = 0;
    v31[1] = 0;
    swift_unknownObjectWeakAssign();
    *(void *)&v30[OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node] = a1;
    *uint64_t v31 = v23;
    v31[1] = v25;
    swift_unknownObjectRetain_n();
    id v32 = v20;
    swift_bridgeObjectRelease();
    v36.receiver = v30;
    v36.super_class = v29;
    id v33 = [super init];

    swift_unknownObjectRelease();
    v35(v33);

    swift_unknownObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Not enough information to get the transition controller", v28, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    a3(0);
  }
}

void sub_1001F1A04(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
    uint64_t v20 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    id v32 = a3;
    if (!*(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    unint64_t v21 = sub_10007CC5C(v20);
    __chkstk_darwin(v21);
    *(&v31 - 2) = a4;
    *(&v31 - 1) = (uint64_t)v13;
    uint64_t v22 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)(&v31 - 4), v21);
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    if (v22)
    {
      uint64_t v23 = (void *)swift_allocObject();
      uint64_t v25 = v32;
      uint64_t v24 = v33;
      v23[2] = v32;
      v23[3] = v22;
      v23[4] = v24;
      v23[5] = a6;
      uint64_t v38 = sub_10021F4EC;
      os_log_type_t v39 = v23;
      aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      objc_super v36 = sub_1000666D8;
      id v37 = &unk_100696F10;
      uint64_t v26 = _Block_copy(&aBlock);
      id v27 = v25;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v26);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v28 = v33;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = a6;
  uint64_t v38 = sub_1002229E0;
  os_log_type_t v39 = (void *)v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  objc_super v36 = sub_1000666D8;
  id v37 = &unk_100696EC0;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v30);
}

Swift::Int sub_1001F1F98(uint64_t a1)
{
  uint64_t v2 = swift_projectBox();
  swift_beginAccess();
  sub_10009758C(a1, v2, &qword_1007076B0);
  return OS_dispatch_semaphore.signal()();
}

void DOCItemCollectionViewController.getCell(for:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = [self defaultManager];
  id v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  v12[4] = sub_100218E50;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1001B6B50;
  v12[3] = &unk_100695B60;
  uint64_t v9 = _Block_copy(v12);
  id v10 = v3;
  id v11 = a1;
  swift_retain();
  swift_release();
  [v7 fetchURLForItem:v11 completionHandler:v9];
  _Block_release(v9);
}

void sub_1001F21BC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v19, v16);
    uint64_t v20 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    id v32 = a3;
    if (!*(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    unint64_t v21 = sub_10007CC5C(v20);
    __chkstk_darwin(v21);
    *(&v31 - 2) = a4;
    *(&v31 - 1) = (uint64_t)v13;
    uint64_t v22 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)(&v31 - 4), v21);
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    if (v22)
    {
      uint64_t v23 = (void *)swift_allocObject();
      uint64_t v25 = v32;
      uint64_t v24 = v33;
      v23[2] = v32;
      v23[3] = v22;
      v23[4] = v24;
      v23[5] = a6;
      uint64_t v38 = sub_100220668;
      os_log_type_t v39 = v23;
      aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      objc_super v36 = sub_1000666D8;
      id v37 = &unk_100697C58;
      uint64_t v26 = _Block_copy(&aBlock);
      id v27 = v25;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v26);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  uint64_t v28 = v33;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = a6;
  uint64_t v38 = sub_1002229E0;
  os_log_type_t v39 = (void *)v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  objc_super v36 = sub_1000666D8;
  id v37 = &unk_100697C08;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v30);
}

uint64_t sub_1001F25C8(void *a1, unint64_t a2, void (*a3)(void), uint64_t a4)
{
  swift_retain();
  id v8 = (void *)swift_unknownObjectRetain();
  sub_100219878(v8, a1, a3, a4, a2);
  swift_release();

  return swift_unknownObjectRelease();
}

void DOCItemCollectionViewController.previewController(_:viewFor:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[4] = sub_100162670;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1001B6C98;
  v10[3] = &unk_100695BB0;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  [v4 getViewFor:a2 waitForNewThumbnail:0 :v9];
  _Block_release(v9);
}

void sub_1001F28B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  v10[4] = sub_100162A44;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1001B6C98;
  v10[3] = &unk_100697898;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  [v4 getViewFor:a2 waitForNewThumbnail:0 :v9];
  _Block_release(v9);
}

void *DOCItemCollectionViewController.alertPresentingViewController.getter()
{
  id v1 = v0;
  return v0;
}

uint64_t DOCItemCollectionViewController.shouldAdjustScrollViewInsetWhenRenaming.getter()
{
  id v1 = self;
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) sceneIdentifier];
  id v3 = [v1 globalTabbedBrowserControllerForIdentifier:v2];

  if (!v3) {
    return 1;
  }
  id v4 = [v3 effectiveFullBrowser];

  id v5 = [v4 pickerFilenameView];
  if (!v5) {
    return 1;
  }

  return 0;
}

Swift::Void __swiftcall DOCItemCollectionViewController.renameWillBegin()()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v31 = (uint64_t)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  uint64_t v11 = v0;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v27 = v7;
    uint64_t v28 = v6;
    uint64_t v29 = v4;
    uint64_t v30 = v3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v33[0] = v26;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v32 = sub_10009B0E4(0xD000000000000011, 0x80000001005DA450, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    if (*(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = DOCNode.nodeDescription.getter();
      unint64_t v17 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      unint64_t v17 = 0xE300000000000000;
      uint64_t v15 = 4271950;
    }
    uint64_t v32 = sub_10009B0E4(v15, v17, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s node: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
    uint64_t v4 = v29;
    uint64_t v3 = v30;
    id v6 = v28;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v18 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v18 <= 1uLL
    && *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
  {
    uint64_t v19 = (void *)swift_unknownObjectRetain();
    uint64_t v20 = v31;
    sub_1001BAD5C(v19, v31);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v20, 1, v3) == 1)
    {
      swift_unknownObjectRelease();
      sub_1000CBBA4(v20, (uint64_t *)&unk_1007069A0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v20, v3);
      sub_1000CBE70(&qword_100708E80);
      unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1005A0030;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 16))(v22 + v21, v6, v3);
      sub_10000F3B0(0, v22);
      swift_unknownObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  id v23 = [v11 traitCollection];
  sub_1001C7DF4(v23);

  [v11 loadViewIfNeeded];
  uint64_t v24 = *(void **)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v24)
  {
    id v25 = [v24 panGestureRecognizer];
    [v25 setEnabled:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001F2FFC(char *a1)
{
  uint64_t v48 = type metadata accessor for DOCNodeType();
  uint64_t v2 = *(void (**)(void, void, void))(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  if (v13)
  {
    uint64_t v14 = *(void **)(v13 + 64);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v47 = v9;
  [a1 loadViewIfNeeded];
  uint64_t v15 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v15)
  {
    __break(1u);
    goto LABEL_42;
  }
  id v16 = [v15 panGestureRecognizer];
  [v16 setEnabled:1];

  *(void *)&a1[v12] = 0;
  swift_release();
  if (!*(void *)&a1[v12]) {
    a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  }
  a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 0;
  if (a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] == 1)
  {
    id v17 = [a1 navigationController];
    if (v17)
    {
      id v18 = v17;
    }
    else
    {
      uint64_t v20 = self;
      id v21 = [*(id *)&a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] sceneIdentifier];
      id v22 = [v20 globalTabbedBrowserControllerForIdentifier:v21];

      if (v22)
      {
        id v23 = [v22 effectiveFullBrowser];
        unint64_t v46 = v2;
        id v24 = v23;
        id v18 = [v23 internalNavigationController];

        uint64_t v2 = v46;
        int v19 = 0;
        goto LABEL_13;
      }
      id v18 = 0;
    }
    int v19 = 1;
LABEL_13:
    sub_1001C8018(0, v18, v19);
  }
  id v25 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v25 == 2 && ([a1 isEditing] & 1) == 0)
  {
    if (*(void *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode])
    {
      uint64_t v27 = (void *)swift_unknownObjectRetain();
      sub_1001BAD5C(v27, (uint64_t)v7);
      uint64_t v28 = v47;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v7, 1, v8) != 1)
      {
        uint64_t v30 = *(void (**)(void, void, void))(v28 + 32);
        uint64_t v29 = v28 + 32;
        unint64_t v46 = v30;
        uint64_t v47 = v29;
        v30(v11, v7, v8);
        sub_1000CBE70(&qword_100708E80);
        unint64_t v31 = (*(unsigned __int8 *)(v29 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 48);
        uint64_t v26 = (void *)swift_allocObject();
        *((_OWORD *)v26 + 1) = xmmword_1005A0030;
        v46((char *)v26 + v31, v11, v8);
        swift_unknownObjectRelease();
        goto LABEL_22;
      }
      swift_unknownObjectRelease();
      sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007069A0);
    }
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
LABEL_22:
  sub_10000F3B0(0, (uint64_t)v26);
  swift_bridgeObjectRelease();
  id v32 = [self currentDevice];
  int IsHardwareKeyboardAttached = GSEventIsHardwareKeyboardAttached();

  if (IsHardwareKeyboardAttached && v14)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    DOCNode.nodeType.getter();
    int v34 = (*((uint64_t (**)(char *, uint64_t))v2 + 11))(v4, v48);
    if (v34 == enum case for DOCNodeType.FPItem(_:))
    {
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = a1;
      *(void *)(v35 + 24) = v14;
      aBlock[4] = sub_1002202FC;
      aBlock[5] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001B6B50;
      aBlock[3] = &unk_100697A50;
      objc_super v36 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      id v37 = a1;
      swift_release();
      [v14 fetchURL:v36];
      _Block_release(v36);
LABEL_28:
      swift_unknownObjectRelease();
      goto LABEL_29;
    }
    if (v34 == enum case for DOCNodeType.FINode(_:))
    {
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v14;
      aBlock[0] = inited;
      specialized Array._endMutation()();
      unint64_t v39 = aBlock[0];
      swift_unknownObjectRetain();
      sub_10003A61C(v39, 0, 0);
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
LABEL_42:
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    return result;
  }
LABEL_29:
  int v40 = *(void **)&a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  uint64_t result = (uint64_t)[v40 forMovingDocuments];
  if (((result & 1) != 0
     || (uint64_t result = (uint64_t)[v40 forSavingDocuments], (result & 1) != 0)
     || (uint64_t result = (uint64_t)[v40 forPickingFolders], (result & 1) != 0)
     || (uint64_t result = (uint64_t)[v40 forPickingDownloadsFolder], result))
    && a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] == 1)
  {
    if (v14)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v42 = DOCNode.fpfs_syncFetchFPItem()();
      if (v42)
      {
        os_log_type_t v43 = (void *)v42;
        id v44 = [self defaultManager];
        swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)();

        swift_release_n();
      }
      uint64_t result = swift_unknownObjectRelease_n();
    }
  }
  else
  {
    uint64_t result = swift_unknownObjectRelease();
  }
  a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 0;
  return result;
}

uint64_t sub_1001F378C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&aBlock[-1] - v9;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&aBlock[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  self;
  uint64_t v16 = swift_dynamicCastObjCClassUnconditional();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v14, v11);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  if (*(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    unint64_t v17 = sub_10007CC5C(result);
    __chkstk_darwin(v17);
    *(&v22 - 2) = v16;
    *(&v22 - 1) = (uint64_t)v8;
    uint64_t v18 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)(&v22 - 4), v17);
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
    if (v18)
    {
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a3;
      *(void *)(v19 + 24) = v18;
      aBlock[4] = sub_10022031C;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100697AA0;
      uint64_t v20 = _Block_copy(aBlock);
      id v21 = a3;
      swift_unknownObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v20);
      swift_unknownObjectRelease();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F3AE4(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = a2;
  unint64_t v5 = inited;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  sub_10003A61C(v5, 0, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001F3B70(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a1;
  aBlock[4] = sub_10022033C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_100697AF0;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void sub_1001F3E5C(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    if (a2)
    {
      id v9 = a2;
      sub_100200404(v9, 0, v8);
    }
    else
    {
      static Logger.Rename.getter();
      uint64_t v10 = v8;
      uint64_t v11 = Logger.logObject.getter();
      int v12 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v11, (os_log_type_t)v12))
      {
        int v19 = v12;
        uint64_t v13 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        uint64_t v21 = v18;
        *(_DWORD *)uint64_t v13 = 136315394;
        uint64_t v20 = sub_10009B0E4(0xD000000000000012, 0x80000001005DD430, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v13 + 12) = 2080;
        if (*(void *)&v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v14 = DOCNode.nodeDescription.getter();
          unint64_t v16 = v15;
          swift_unknownObjectRelease();
        }
        else
        {
          unint64_t v16 = 0xE300000000000000;
          uint64_t v14 = 4271950;
        }
        uint64_t v20 = sub_10009B0E4(v14, v16, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v19, "%s Could not refetch item when trying to open the newly created folder: %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
}

uint64_t sub_1001F4150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  uint64_t v9 = type metadata accessor for Logger();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[21] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[22] = v11;
  v8[23] = v10;
  return _swift_task_switch(sub_1001F424C, v11, v10);
}

uint64_t sub_1001F424C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[24] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[25] = v2;
    void *v2 = v0;
    v2[1] = sub_1001F4354;
    uint64_t v3 = v0[15];
    uint64_t v4 = v0[16];
    uint64_t v5 = v0[14];
    return sub_1001F4864(v5, v3, v4);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1001F4354(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return _swift_task_switch(sub_1001F447C, v4, v3);
}

uint64_t sub_1001F447C()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[26];
  swift_release();
  if (v1)
  {
    uint64_t v2 = v0 + 2;
    uint64_t v3 = (void *)v0[26];
    static Logger.Rename.getter();
    id v4 = v3;
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v24 = v0[26];
      uint64_t v25 = v0[19];
      uint64_t v26 = v0[18];
      uint64_t v27 = v0[20];
      uint64_t v7 = swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      v0[11] = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DBC90, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2112;
      v0[12] = v4;
      id v8 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v23 = v24;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s new folder action created item: %@. Attempting to reveal", (uint8_t *)v7, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v0 + 2;
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
    }
    else
    {
      uint64_t v11 = v0[19];
      uint64_t v10 = v0[20];
      uint64_t v12 = v0[18];

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    uint64_t v13 = (void *)v0[24];
    uint64_t v14 = v0[17];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1005A04F0;
    *(void *)(v15 + 32) = v4;
    uint64_t v28 = v15;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v16 = v4;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v16;
    v18[3] = v13;
    v18[4] = v14;
    v0[6] = sub_10021E000;
    v0[7] = v18;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10000A884;
    v0[5] = &unk_100696178;
    int v19 = _Block_copy(v2);
    id v20 = v16;
    id v9 = v13;
    swift_bridgeObjectRetain();
    swift_release();
    [v9 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v19];
    _Block_release(v19);
  }
  else
  {
    id v9 = (id)v0[24];
  }

  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1001F4864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = type metadata accessor for Logger();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = type metadata accessor for MainActor();
  v4[14] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[15] = v7;
  v4[16] = v6;
  return _swift_task_switch(sub_1001F4960, v7, v6);
}

uint64_t sub_1001F4960()
{
  swift_getObjectType();
  uint64_t v1 = DOCNode.fpfs_syncFetchFPItem()();
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v0 + 72);
    long long v10 = *(_OWORD *)(v0 + 48);
    uint64_t v4 = static MainActor.shared.getter();
    *(void *)(v0 + 144) = v4;
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 152) = v5;
    *(void *)(v5 + 16) = v2;
    *(_OWORD *)(v5 + 24) = v10;
    *(void *)(v5 + 40) = v3;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v6;
    uint64_t v7 = sub_1000CBE70(&qword_10070B670);
    *uint64_t v6 = v0;
    v6[1] = sub_1001F4AFC;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v4, &protocol witness table for MainActor, 0xD00000000000001CLL, 0x80000001005DC580, sub_10021EBB8, v5, v7);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    id v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(0);
  }
}

uint64_t sub_1001F4AFC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_1001F4C5C, v3, v2);
}

uint64_t sub_1001F4C5C()
{
  uint64_t v27 = v0;
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = v1;
    static Logger.Rename.getter();
    id v3 = v2;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void **)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 80);
    if (v6)
    {
      log = v4;
      uint64_t v25 = *(void **)(v0 + 136);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315650;
      *(void *)(v0 + 24) = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC580, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 12) = 2080;
      id v12 = [v3 displayName];
      os_log_type_t type = v5;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v10;
      unint64_t v15 = v14;

      *(void *)(v0 + 32) = sub_10009B0E4(v13, v15, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v11 + 22) = 2080;
      id v16 = [v3 itemIdentifier];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      *(void *)(v0 + 40) = sub_10009B0E4(v17, v19, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, log, type, "%s: new folder named \"%s\" was created with itemIdentifier: %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v23);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
  }
  else
  {
  }
  swift_task_dealloc();
  id v20 = *(uint64_t (**)(void *))(v0 + 8);
  return v20(v1);
}

void sub_1001F4F7C(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  id v12 = a2;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v29 = v9;
    uint64_t v16 = v15;
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v16 = 136315650;
    uint64_t v30 = a4;
    uint64_t v31 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DBC90, &v32);
    uint64_t v28 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2112;
    uint64_t v31 = (uint64_t)v12;
    id v17 = v12;
    os_log_t v25 = v13;
    char v18 = a1;
    id v19 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v26 = v12;

    *(_WORD *)(v16 + 22) = 2080;
    if (v18) {
      uint64_t v20 = 1702195828;
    }
    else {
      uint64_t v20 = 0x65736C6166;
    }
    if (v18) {
      unint64_t v21 = 0xE400000000000000;
    }
    else {
      unint64_t v21 = 0xE500000000000000;
    }
    uint64_t v31 = sub_10009B0E4(v20, v21, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a4 = v30;
    swift_bridgeObjectRelease();
    os_log_t v22 = v25;
    _os_log_impl((void *)&_mh_execute_header, v25, v14, "%s reveal item: %@ success: %s", (uint8_t *)v16, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v23 = *(void **)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed);
  *(void *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed) = v12;
  id v24 = v12;

  *(void *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1001F52D0();
}

void sub_1001F52D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed;
  if (*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed])
  {
    static Logger.Rename.getter();
    uint64_t v7 = v1;
    uint64_t v8 = Logger.logObject.getter();
    int v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      int v26 = v9;
      uint64_t v10 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)uint64_t v10 = 136315394;
      uint64_t v27 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DBCE0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2080;
      uint64_t v11 = *(void **)&v1[v6];
      if (v11)
      {
        id v12 = [v11 itemIdentifier];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v15 = v14;
      }
      else
      {
        unint64_t v15 = 0xE300000000000000;
        uint64_t v13 = 4271950;
      }
      uint64_t v27 = sub_10009B0E4(v13, v15, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, (os_log_type_t)v26, "%s: item: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v16 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer;
    [*(id *)&v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] invalidate];
    id v17 = *(void **)(*(void *)&v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                   + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v17 && [v17 isUsingFPFS]) {
      double v18 = 0.01;
    }
    else {
      double v18 = 0.1;
    }
    id v19 = self;
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = (uint64_t)sub_10021E00C;
    aBlock[5] = v20;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10041B2E4;
    aBlock[3] = (uint64_t)&unk_1006961A0;
    unint64_t v21 = _Block_copy(aBlock);
    swift_release();
    id v22 = [v19 scheduledTimerWithTimeInterval:0 repeats:v21 block:v18];
    _Block_release(v21);
    uint64_t v23 = *(void **)&v7[v16];
    *(void *)&v7[v16] = v22;
  }
}

void sub_1001F56A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v16 = a5;
  uint64_t v9 = sub_1000CBE70(&qword_10070AC30);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  id v12 = [self defaultManager];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1005447CC(a2, a3, a4, 1, v16, (uint64_t)sub_10021EC58, v14);
  swift_release();
}

uint64_t sub_1001F5834(void *a1)
{
  id v1 = a1;
  sub_1000CBE70(&qword_10070AC30);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1001F587C()
{
  uint64_t v108 = type metadata accessor for Logger();
  __chkstk_darwin(v108);
  uint64_t v2 = __chkstk_darwin((char *)v98 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v98 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v98 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v13 = (char *)v98 - v12;
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v20 = (char *)v98 - v19;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename)) {
    return 0;
  }
  uint64_t v21 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController);
  if (!v21) {
    return 0;
  }
  uint64_t v100 = v15;
  uint64_t v101 = result;
  uint64_t v102 = v18;
  uint64_t v104 = v17;
  uint64_t v107 = v16;
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v22)
  {
    uint64_t v23 = *(void *)(v21 + 64);
    swift_unknownObjectRetain();
    uint64_t v24 = swift_retain();
    unint64_t v25 = sub_10007CC5C(v24);
    swift_unknownObjectRetain();
    uint64_t v26 = sub_10020A6D4(v25);
    swift_bridgeObjectRelease();
    uint64_t v106 = v23;
    swift_unknownObjectRelease();
    uint64_t v103 = v26;
    if (v26)
    {
      static Logger.Rename.getter();
      swift_retain_n();
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      uint64_t v29 = v21;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v105 = (void (*)(uint64_t, uint64_t))swift_slowAlloc();
        v110[0] = (uint64_t)v105;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v30 + 12) = 2080;
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v31 = DOCNode.nodeDescription.getter();
        uint64_t v32 = v29;
        unint64_t v34 = v33;
        swift_unknownObjectRelease();
        uint64_t v109 = sub_10009B0E4(v31, v34, v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        uint64_t v29 = v32;
        uint64_t v35 = v108;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: Found item by matching by matching identifiers: %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        objc_super v36 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
        id v37 = v6;
        uint64_t v38 = v35;
      }
      else
      {

        swift_release_n();
        uint64_t v38 = v108;
        objc_super v36 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
        id v37 = v6;
      }
      uint64_t v105 = v36;
      v36((uint64_t)v37, v38);
      uint64_t v48 = v103;
      uint64_t v47 = v104;
LABEL_22:
      swift_getObjectType();
      swift_unknownObjectRetain();
      if (DOCNode.isEqualTo(node:)())
      {
        uint64_t v74 = v102;
        static Logger.Rename.getter();
        os_log_type_t v75 = Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          v110[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v77 = 136315138;
          uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "%s: No update needed", v77, 0xCu);
          uint64_t v78 = 1;
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_release();
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          v105(v74, v108);
          swift_unknownObjectRelease();
          return v78;
        }
        swift_release();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        v105(v74, v108);
      }
      else
      {
        static Logger.Rename.getter();
        swift_retain_n();
        uint64_t v79 = Logger.logObject.getter();
        os_log_type_t v80 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = swift_slowAlloc();
          uint64_t v102 = swift_slowAlloc();
          v110[0] = v102;
          *(_DWORD *)uint64_t v81 = 136315650;
          uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
          uint64_t v103 = v48;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v81 + 12) = 2080;
          id v82 = [*(id *)(v29 + 64) filename];
          uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v84 = v29;
          unint64_t v86 = v85;

          uint64_t v109 = sub_10009B0E4(v83, v86, v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v81 + 22) = 2080;
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v87 = DOCNode.nodeDescription.getter();
          unint64_t v89 = v88;
          swift_unknownObjectRelease();
          uint64_t v109 = sub_10009B0E4(v87, v89, v110);
          uint64_t v48 = v103;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          uint64_t v29 = v84;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s: Updating renameController with new item name: %s node: %s", (uint8_t *)v81, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v90 = v104;
        }
        else
        {

          swift_release_n();
          uint64_t v90 = v47;
        }
        v105(v90, v108);
        *(void *)(v29 + 64) = v48;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        sub_100422020();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      return 1;
    }
    v98[2] = 0;
    uint64_t v103 = v22;
    static Logger.Rename.getter();
    swift_retain_n();
    unint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.debug.getter();
    int v41 = v40;
    uint64_t v29 = v21;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v99 = v21;
      uint64_t v43 = v42;
      v110[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      LODWORD(v105) = v41;
      uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2080;
      v98[1] = v43 + 14;
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v44 = DOCNode.nodeDescription.getter();
      unint64_t v46 = v45;
      swift_unknownObjectRelease();
      uint64_t v109 = sub_10009B0E4(v44, v46, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v105, "%s: Couldn't find item by matching DOCNode: %s in itemCollection", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v29 = v99;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
    v105((uint64_t)v20, v108);
    id v49 = [*(id *)(v29 + 64) filename];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;

    unint64_t v54 = sub_10007CC5C(v53);
    swift_bridgeObjectRetain();
    os_log_type_t v55 = sub_10020A7E8(v54, v50, v52);
    swift_bridgeObjectRelease();
    uint64_t v48 = (uint64_t)v55;
    swift_bridgeObjectRelease_n();
    if (v55)
    {
      static Logger.Rename.getter();
      swift_unknownObjectRetain_n();
      uint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        v110[0] = v103;
        *(_DWORD *)uint64_t v58 = 136315394;
        uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v58 + 12) = 2080;
        swift_getObjectType();
        uint64_t v59 = DOCNode.nodeDescription.getter();
        uint64_t v109 = sub_10009B0E4(v59, v60, v110);
        unint64_t v61 = (void (*)(char *, uint64_t))v105;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s: Found new item matching by file name: %s", (uint8_t *)v58, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v61(v13, v108);
      }
      else
      {
        swift_unknownObjectRelease_n();

        v105((uint64_t)v13, v108);
      }
      uint64_t v47 = v104;
LABEL_21:
      *(void *)(v29 + 64) = v48;
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      sub_100422020();
      swift_unknownObjectRelease_n();
      swift_unknownObjectRetain();
      goto LABEL_22;
    }
    uint64_t v62 = *(void *)(v29 + 56);
    if (v62)
    {
      uint64_t v63 = *(void *)(v29 + 48);
      uint64_t v64 = swift_bridgeObjectRetain();
      unint64_t v65 = sub_10007CC5C(v64);
      swift_bridgeObjectRetain();
      uint64_t v48 = (uint64_t)sub_10020A7E8(v65, v63, v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v48)
      {
        uint64_t v66 = v100;
        static Logger.Rename.getter();
        swift_unknownObjectRetain_n();
        id v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = swift_slowAlloc();
          v110[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 136315394;
          uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v69 + 12) = 2080;
          swift_getObjectType();
          uint64_t v70 = DOCNode.nodeDescription.getter();
          uint64_t v109 = sub_10009B0E4(v70, v71, v110);
          uint64_t v72 = v48;
          unint64_t v73 = v105;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s: Found new item matching by proposed file name: %s", (uint8_t *)v69, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v73(v100, v108);
          uint64_t v48 = v72;
        }
        else
        {
          swift_unknownObjectRelease_n();

          v105(v66, v108);
        }
        uint64_t v47 = v104;
        swift_unknownObjectRetain();
        goto LABEL_21;
      }
    }
    static Logger.Rename.getter();
    unint64_t v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v110[0] = swift_slowAlloc();
      *(_DWORD *)v93 = 136315138;
      uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "%s: Failed at all attempts to find item being renamed", v93, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    v105((uint64_t)v9, v108);
    uint64_t v94 = v101;
    static Logger.Rename.getter();
    v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      v110[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v97 = 136315138;
      uint64_t v109 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005DDBD0, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "%s: Failed. Unable to find item being renamed", v97, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_release();

    swift_unknownObjectRelease();
    v105(v94, v108);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F69AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v7 = DOCNode.nodeDescription.getter();
    unint64_t v9 = v8;
    swift_unknownObjectRelease();
  }
  else
  {
    unint64_t v9 = 0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  static Logger.Rename.getter();
  swift_bridgeObjectRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v6;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = v7;
    uint64_t v21 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v20 = sub_10009B0E4(0x6E655274726F6261, 0xED00002928656D61, &v21);
    uint64_t v18 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10009B0E4(v17, v9, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: detected unrecoverable state: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v19;
    swift_slowDealloc();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(void *)(v1 + v6))
  {
    swift_retain();
    sub_100425850();
    return swift_release();
  }
  return result;
}

void sub_1001F6C80(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = (v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  sub_1000CBE0C((uint64_t)v10, v13 + v11, &qword_1007076B0);
  *(void *)(v13 + v12) = a3;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = sub_10021E168;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_100696240;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a3;
  id v16 = a4;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v14);
}

uint64_t sub_1001F6E28(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)&v50 - v9;
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  id v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v18, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1000CBBA4((uint64_t)v18, &qword_1007076B0);
LABEL_8:
    static Logger.Rename.getter();
    uint64_t v27 = a2;
    os_log_type_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v57 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005DBD00, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v31 = *(void **)&v27[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
      if (v31)
      {
        id v32 = [v31 itemIdentifier];
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v35 = v34;
      }
      else
      {
        uint64_t v33 = 4271950;
        unint64_t v35 = 0xE300000000000000;
      }
      uint64_t v57 = sub_10009B0E4(v33, v35, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s: Enqueued folder not found in item collection: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v8, v56);
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v22, v19);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  if (!*(void *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    __break(1u);
    return result;
  }
  unint64_t v24 = sub_10007CC5C(result);
  __chkstk_darwin(v24);
  *(&v50 - 2) = v54;
  *(&v50 - 1) = (uint64_t)v16;
  unint64_t v25 = (void *)sub_1001B66DC((uint64_t (*)(uint64_t *))sub_100162714, (uint64_t)(&v50 - 4), v24);
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
  if (!v25)
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_8;
  }
  sub_1001BAD5C(v25, (uint64_t)v12);
  uint64_t v26 = type metadata accessor for IndexPath();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v12, 1, v26) == 1)
  {
    swift_unknownObjectRelease();
    sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_1007069A0);
    goto LABEL_7;
  }
  sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_1007069A0);
  objc_super v36 = v53;
  static Logger.Rename.getter();
  id v37 = a2;
  uint64_t v38 = Logger.logObject.getter();
  int v39 = static os_log_type_t.debug.getter();
  BOOL v40 = os_log_type_enabled(v38, (os_log_type_t)v39);
  uint64_t v52 = v22;
  if (v40)
  {
    LODWORD(v54) = v39;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v58 = v51;
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v57 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005DBD00, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v42 = *(void **)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
    if (v42)
    {
      id v43 = [v42 itemIdentifier];
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v46 = v45;
    }
    else
    {
      uint64_t v44 = 4271950;
      unint64_t v46 = 0xE300000000000000;
    }
    uint64_t v57 = sub_10009B0E4(v44, v46, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v54, "%s: Resuming enqueued inline rename of folder created: %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v56);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v56);
  }
  uint64_t v47 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder;
  uint64_t v48 = *(void (**)(char *, uint64_t))&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001F7644(v25, v48);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  id v49 = *(void **)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
  *(void *)&v37[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = 0;

  *(void *)&v37[v47] = _swiftEmptyArrayStorage;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v52, v19);
}

uint64_t sub_1001F7644(void *a1, void (*a2)(char *, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v41 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - v17;
  if (!a1)
  {
    static Logger.Rename.getter();
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v45[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v46 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBD20, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: nil folder node. Bailing and cleaning up", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return sub_1001F9518(0xD000000000000026, 0x80000001005DBD20, (uint64_t)v3);
  }
  swift_unknownObjectRetain();
  [v3 setEditing:0];
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19 >= 1) {
      goto LABEL_4;
    }
LABEL_16:
    static Logger.Rename.getter();
    id v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v42 = (uint64_t)v3;
      int v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v43 = v6;
      v45[0] = v40;
      *(_DWORD *)int v39 = 136315138;
      uint64_t v46 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBD20, v45);
      uint64_t v3 = (char *)v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s no nodes to move, preparing to rename", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
    goto LABEL_19;
  }
  uint64_t v19 = *(void *)(((unint64_t)a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v19 < 1) {
    goto LABEL_16;
  }
LABEL_4:
  uint64_t v20 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v20 == 2)
  {
    static Logger.Rename.getter();
    swift_bridgeObjectRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v46 = v41;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v42 = (uint64_t)v3;
      uint64_t v24 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBD20, &v46);
      uint64_t v43 = v6;
      uint64_t v44 = v24;
      uint64_t v3 = (char *)v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2048;
      uint64_t v44 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s in column view with: %ld nodes to move", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v43);
    }
    else
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
    }
LABEL_19:
    sub_1001F9770(0xD000000000000026, (void (*)(os_log_t, uint64_t, uint64_t))0x80000001005DBD20, v3, a1, a2);
    return swift_unknownObjectRelease();
  }
  static Logger.Rename.getter();
  swift_bridgeObjectRetain();
  os_log_type_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v46 = v42;
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v41 = v30 + 4;
    uint64_t v31 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBD20, &v46);
    uint64_t v43 = v6;
    uint64_t v44 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2048;
    uint64_t v44 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s not in column view with: %ld nodes to move. Moving nodes then starting rename", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v43);
  }
  else
  {

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  }
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = 0xD000000000000026;
  uint64_t v33[3] = 0x80000001005DBD20;
  v33[4] = a2;
  v33[5] = v3;
  v33[6] = a1;
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v35 = (void *)swift_allocObject();
  v35[2] = v34;
  v35[3] = a1;
  v35[4] = sub_10021E254;
  v35[5] = v33;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  objc_super v36 = v3;
  swift_retain();
  swift_retain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  Array<A>.fpfs_fetchAllFPItems(completion:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

void sub_1001F7ED0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed);
    if (v2)
    {
      uint64_t v3 = self;
      id v4 = v2;
      id v5 = [v3 defaultManager];
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      *(void *)(v6 + 24) = v4;
      aBlock[4] = sub_10021E014;
      aBlock[5] = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001B6B50;
      aBlock[3] = &unk_1006961F0;
      uint64_t v7 = _Block_copy(aBlock);
      id v8 = v4;
      id v9 = v1;
      swift_release();
      [v5 fetchURLForItem:v8 completionHandler:v7];
      _Block_release(v7);

      uint64_t v1 = v5;
    }
  }
}

void sub_1001F8038()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) == 0)
    {
      if (*(void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)) {
        sub_1001C6FE0();
      }
    }
  }
}

void sub_1001F80AC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a4;
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = a1;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = a6;
    uint64_t v28 = v17;
    *(_DWORD *)uint64_t v16 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10009B0E4(a2, a3, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v27 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DD5B0, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 22) = 2048;
    uint64_t v27 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 32) = 2080;
    swift_getObjectType();
    uint64_t v18 = DOCNode.nodeDescription.getter();
    uint64_t v27 = sub_10009B0E4(v18, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s->%s (%ld): Found existing cell on screen: %s", (uint8_t *)v16, 0x2Au);
    swift_arrayDestroy();
    a6 = v23;
    swift_slowDealloc();
    a1 = v24;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  if (*(void *)(a6 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController))
  {
    type metadata accessor for DOCItemCollectionCell();
    uint64_t v20 = (void *)swift_dynamicCastClass();
    if (v20) {
      id v21 = a1;
    }
    uint64_t Strong = (id *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakAssign();
    swift_retain();
    sub_100422320(Strong);
    swift_release();
  }
}

void sub_1001F8408(char *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a6;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_1001DB1A4((unint64_t)a2);
  if (v17)
  {
    uint64_t v18 = v17;
    if (sub_1001C048C(a2))
    {
      [a1 loadViewIfNeeded];
      unint64_t v19 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v19)
      {
        __break(1u);
        return;
      }
      id v20 = v19;
      [v18 frame];
      unsigned int v21 = [v20 _isRectFullyVisible:];

      if (v21)
      {
        os_log_type_t v38 = a1;
        static Logger.Rename.getter();
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain_n();
        os_log_type_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.debug.getter();
        int v24 = v23;
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v25 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v43 = v39;
          *(_DWORD *)uint64_t v25 = 136315906;
          LODWORD(v36) = v24;
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_10009B0E4(a3, a4, &v43);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          uint64_t v37 = a3;
          *(_WORD *)(v25 + 12) = 2080;
          uint64_t v42 = sub_10009B0E4(0xD000000000000010, 0x80000001005DD590, &v43);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v25 + 22) = 2048;
          uint64_t v42 = a5;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v25 + 32) = 2080;
          swift_getObjectType();
          uint64_t v26 = DOCNode.nodeDescription.getter();
          uint64_t v42 = sub_10009B0E4(v26, v27, &v43);
          a3 = v37;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v36, "%s->%s (%ld): Found existing cell on screen: %s", (uint8_t *)v25, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
        sub_1001F80AC(v18, a3, a4, a5, (uint64_t)a2, (uint64_t)v38);

        return;
      }
    }
  }
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    os_log_type_t v38 = a1;
    uint64_t v43 = v31;
    *(_DWORD *)uint64_t v30 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_10009B0E4(a3, a4, &v43);
    uint64_t v37 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    unint64_t v36 = a4;
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v42 = sub_10009B0E4(0xD000000000000010, 0x80000001005DD590, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 22) = 2048;
    uint64_t v42 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 32) = 2080;
    swift_getObjectType();
    uint64_t v32 = DOCNode.nodeDescription.getter();
    uint64_t v42 = sub_10009B0E4(v32, v33, &v43);
    a4 = v36;
    a3 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s->%s (%ld): No existing cell on screen, trying to scroll to it: %s", (uint8_t *)v30, 0x2Au);
    swift_arrayDestroy();
    a1 = v38;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
  uint64_t v34 = v39;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v35 = a1;
  sub_100209C20(v34, v35, v35, (unint64_t)a2, a3, a4, a5);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1001F8A3C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = sub_1001DB1A4(a2);
  if (v17)
  {
    uint64_t v18 = v17;
    sub_1001F80AC(v17, a3, a4, a5, a2, a1);
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain_n();
    unint64_t v19 = Logger.logObject.getter();
    uint64_t v20 = a5;
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v35 = v10;
      uint64_t v23 = v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v36 = v11;
      uint64_t v39 = v24;
      *(_DWORD *)uint64_t v23 = 136315906;
      uint64_t v37 = v20;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_10009B0E4(a3, a4, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v38 = sub_10009B0E4(0xD000000000000010, 0x80000001005DD590, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 22) = 2048;
      uint64_t v38 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 32) = 2080;
      swift_getObjectType();
      uint64_t v25 = DOCNode.nodeDescription.getter();
      uint64_t v38 = sub_10009B0E4(v25, v26, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v21, "%s->%s (%ld): Scrolling revealed cell for folder node: %s", (uint8_t *)v23, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v14, v35);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  else
  {
    uint64_t v37 = a5;
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain_n();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v36 = v11;
      uint64_t v39 = v31;
      *(_DWORD *)uint64_t v30 = 136315906;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_10009B0E4(a3, a4, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v38 = sub_10009B0E4(0xD000000000000010, 0x80000001005DD590, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 22) = 2048;
      uint64_t v38 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 32) = 2080;
      swift_getObjectType();
      uint64_t v32 = DOCNode.nodeDescription.getter();
      uint64_t v38 = sub_10009B0E4(v32, v33, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s->%s (%ld): Scrolling FAILED. Could not find cell for folder node: %s", (uint8_t *)v30, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v10);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
  }
}

void sub_1001F8FB4(uint64_t a1, void *a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a4;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v41 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v43 - 8);
  uint64_t v12 = __chkstk_darwin(v43);
  os_log_type_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = sub_1001DB1A4((unint64_t)a2);
  if (v17)
  {
    uint64_t v18 = v17;
    static Logger.Rename.getter();
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v21 = 136315138;
      uint64_t v44 = sub_10009B0E4(0xD000000000000032, 0x80000001005DBDB0, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: Scrolling completed and found cell", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v43);
    uint64_t v22 = v18;
    a3(v18);
  }
  else
  {
    static Logger.Rename.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v10, a5, v8);
    swift_unknownObjectRetain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v40 = a3;
      uint64_t v27 = v26;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v45 = v39;
      *(_DWORD *)uint64_t v27 = 136315650;
      int v38 = v25;
      uint64_t v44 = sub_10009B0E4(0xD000000000000032, 0x80000001005DBDB0, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 12) = 2080;
      id v28 = [a2 description:v27 + 14];
      os_log_t v37 = v23;
      id v29 = v28;
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v32 = v31;

      uint64_t v44 = sub_10009B0E4(v30, v32, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v44 = sub_10009B0E4(v33, v34, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
      os_log_t v35 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v38, "%s: Could not find item cell for node: %s indexPath: %s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v40;
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v43);
    a3(0);
  }
}

uint64_t sub_1001F9518(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = a3;
    uint64_t v13 = v12;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_10009B0E4(a1, a2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v17 = sub_10009B0E4(0x2870756E61656C63, 0xE900000000000029, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s > %s: clearing preparing state", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v16;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(unsigned char *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) = 0;
  return result;
}

uint64_t sub_1001F9770(NSObject *a1, void (*a2)(os_log_t, uint64_t, uint64_t), char *a3, void *a4, void (*a5)(char *, uint64_t))
{
  id v49 = a5;
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = (void (*)(os_log_t, uint64_t, uint64_t))v12;
  __chkstk_darwin(v12);
  uint64_t v47 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v45 - v18;
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v54 = v15;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v46 = a4;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v48 = v14;
    v55[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_10009B0E4((uint64_t)a1, (unint64_t)a2, v55);
    uint64_t v51 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v56 = sub_10009B0E4(0xD000000000000011, 0x80000001005DBD70, v55);
    a1 = v51;
    uint64_t v15 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s > %s BEGIN", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    uint64_t v14 = v48;
    swift_slowDealloc();
    a4 = v46;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v19, v14);
  sub_1001BAD5C(a4, (uint64_t)v11);
  uint64_t v28 = v52;
  uint64_t v27 = v53;
  if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v11, 1, v53) == 1)
  {
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007069A0);
    swift_getObjectType();
    uint64_t v29 = DOCNode.fpfs_syncFetchFPItem()();
    uint64_t v30 = *(void **)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed];
    *(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = v29;

    *(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v31 = v50;
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain_n();
    unint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v51 = a1;
      uint64_t v35 = v34;
      uint64_t v52 = swift_slowAlloc();
      v55[0] = v52;
      *(_DWORD *)uint64_t v35 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_10009B0E4((uint64_t)v51, (unint64_t)a2, v55);
      uint64_t v48 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v53 = a2;
      uint64_t v36 = a3;
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v56 = sub_10009B0E4(0xD000000000000011, 0x80000001005DBD70, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 22) = 2080;
      id v37 = [a4 description];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v49 = v26;
      uint64_t v39 = v38;
      unint64_t v41 = v40;

      a3 = v36;
      a2 = v53;
      uint64_t v56 = sub_10009B0E4(v39, v41, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s > %s: item collection doesn't contain new folder: %s yet, enqueing", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v51;
      swift_slowDealloc();

      v49(v50, v48);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v26(v31, v14);
    }
    return sub_1001F9518((uint64_t)a1, (unint64_t)a2, (uint64_t)a3);
  }
  else
  {
    uint64_t v42 = (uint64_t)v47;
    (*(void (**)(char *, char *, void))(v28 + 32))(v47, v11, v27);
    uint64_t v43 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v43 == 2) {
      sub_1001F9E5C(a1, (unint64_t)a2, a3, (uint64_t)v49, a4, v42);
    }
    else {
      sub_1001FBF00(a1, a2, a3, (uint64_t)a4, v42);
    }
    return (*(uint64_t (**)(uint64_t, void (*)(os_log_t, uint64_t, uint64_t)))(v28 + 8))(v42, v27);
  }
}

uint64_t sub_1001F9E5C(NSObject *a1, unint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = a3;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v25 = a6;
    uint64_t v29 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v26 = a4;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10009B0E4((uint64_t)a1, a2, &v29);
    uint64_t v24 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v28 = sub_10009B0E4(0xD000000000000019, 0x80000001005DBD90, &v29);
    a1 = v24;
    a4 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s > %s: BEGIN", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    a6 = v25;
    swift_slowDealloc();
    a3 = v23;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  os_log_type_t v20 = a3;
  swift_bridgeObjectRetain();
  sub_10021AED8(a5, a6, v20, (char *)a5, a1, a2, v20, a4);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001FA12C(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = a6;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = a3;
    uint64_t v32 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v26 = a5;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10009B0E4(v29, a4, &v32);
    uint64_t v28 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v31 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, &v32);
    a2 = v28;
    a5 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s > %s: Beginning rename steps starting with validateNodeSelectionAndPerformDidPickIfNeeded", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    a3 = v29;
    swift_slowDealloc();
    a6 = v27;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  os_log_type_t v20 = (void *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a5;
  v20[5] = a1;
  v20[6] = a6;
  v20[7] = a2;
  uint64_t ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  uint64_t v22 = a5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = a2;
  sub_100201FD8(a1, 0, (void (*)(void))sub_10021E37C, (uint64_t)v20, v22, ObjectType);
  return swift_release();
}

uint64_t sub_1001FA424(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v46 = a4;
  uint64_t v50 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v55 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  __chkstk_darwin(v11);
  uint64_t v52 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for DispatchTime();
  uint64_t v51 = *(void *)(v56 - 8);
  uint64_t v13 = __chkstk_darwin(v56);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v49 = (char *)&v41 - v16;
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  os_log_type_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  unint64_t v45 = a2;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v44 = (uint64_t)v10;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v41 = v17;
    aBlock[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v43 = a3;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_10009B0E4(a1, a2, aBlock);
    uint64_t v42 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v57 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, aBlock);
    a1 = v42;
    a3 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s > %s: validation and selection completed", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v10 = (char *)v44;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v41);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v44 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  uint64_t v27 = v49;
  + infix(_:_:)();
  uint64_t v51 = *(void *)(v51 + 8);
  ((void (*)(char *, uint64_t))v51)(v15, v56);
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = (void *)swift_allocObject();
  unint64_t v31 = v45;
  uint64_t v30 = v46;
  v29[2] = a1;
  v29[3] = v31;
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  v29[4] = v30;
  v29[5] = v33;
  v29[6] = v28;
  v29[7] = a3;
  v29[8] = v32;
  aBlock[4] = (uint64_t)sub_10021E820;
  aBlock[5] = (uint64_t)v29;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_100696588;
  uint64_t v34 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v35 = a3;
  id v36 = v32;
  swift_release();
  id v37 = v52;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v38 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v39 = (void *)v44;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v10, v38);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v54);
  return ((uint64_t (*)(char *, uint64_t))v51)(v27, v56);
}

uint64_t sub_1001FAA94(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v38 = a7;
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v35 = a1;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v34 = a6;
    uint64_t v20 = v19;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v41 = v33;
    *(_DWORD *)uint64_t v20 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10009B0E4(a1, a2, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v40 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2080;
    uint64_t v40 = a3;
    swift_unknownObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v40 = sub_10009B0E4(v21, v22, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s > %s: collection view quiescent timer finished, re-fetching item: %s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a6 = v34;
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v39);
  id v23 = [self defaultManager];
  swift_getObjectType();
  uint64_t result = DOCNode.fpfs_syncFetchFPItem()();
  if (result)
  {
    uint64_t v25 = (void *)result;
    uint64_t v26 = (void *)swift_allocObject();
    uint64_t v27 = v36;
    v26[2] = v35;
    v26[3] = a2;
    uint64_t v28 = v37;
    uint64_t v29 = v38;
    v26[4] = v27;
    v26[5] = v28;
    v26[6] = a6;
    v26[7] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v30 = a6;
    id v31 = v29;
    FPItemManager.doc_refetchItem(_:completion:)();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001FAE3C(void *a1, void *a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, void *a7, void *a8)
{
  unint64_t v66 = a5;
  uint64_t v67 = a3;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  BOOL v18 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v20 = &v57[-v19];
  if (a1)
  {
    unint64_t v65 = a7;
    id v21 = a1;
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    id v22 = v21;
    id v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    int v25 = v24;
    BOOL v26 = os_log_type_enabled(v23, v24);
    uint64_t v64 = a6;
    if (v26)
    {
      uint64_t v27 = swift_slowAlloc();
      os_log_t v60 = v23;
      uint64_t v28 = v27;
      uint64_t v59 = (void *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      aBlock[0] = v61;
      *(_DWORD *)uint64_t v28 = 136315650;
      uint64_t v62 = v15;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_10009B0E4(v67, a4, aBlock);
      int v58 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v69 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 22) = 2112;
      uint64_t v69 = (uint64_t)v22;
      id v29 = v22;
      uint64_t v63 = v14;
      id v30 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v59 = a1;

      os_log_t v31 = v60;
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v58, "%s > %s: re-fetched item: %@", (uint8_t *)v28, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v18, v63);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v18, v14);
    }
    uint64_t v41 = v65;
    if (v66 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v51 >= 1)
      {
LABEL_9:
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v43 = (void *)Strong;
          uint64_t v44 = (void *)swift_allocObject();
          v44[2] = v67;
          v44[3] = a4;
          v44[4] = v41;
          v44[5] = v22;
          v44[6] = a8;
          uint64_t v45 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v46 = (void *)swift_allocObject();
          v46[2] = v45;
          v46[3] = v22;
          v46[4] = sub_10021E8BC;
          v46[5] = v44;
          id v47 = v22;
          swift_bridgeObjectRetain();
          id v48 = v47;
          id v49 = v41;
          id v50 = a8;
          swift_retain();
          swift_retain();
          sub_1000CBE70((uint64_t *)&unk_100706730);
          Array<A>.fpfs_fetchAllFPItems(completion:)();

          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
        }
        return;
      }
    }
    else if (*(uint64_t *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
      goto LABEL_9;
    }
    uint64_t v52 = (void *)swift_allocObject();
    v52[2] = v67;
    v52[3] = a4;
    v52[4] = v41;
    v52[5] = v22;
    v52[6] = a8;
    aBlock[4] = (uint64_t)sub_10021E8A0;
    aBlock[5] = (uint64_t)v52;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    aBlock[3] = (uint64_t)&unk_100696600;
    uint64_t v53 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v54 = v22;
    id v55 = v41;
    id v56 = a8;
    swift_release();
    DOCRunInMainThread();

    _Block_release(v53);
    return;
  }
  static Logger.Rename.getter();
  id v32 = a2;
  swift_bridgeObjectRetain_n();
  id v33 = v32;
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    unint64_t v66 = swift_slowAlloc();
    aBlock[0] = v66;
    *(_DWORD *)uint64_t v36 = 136315650;
    uint64_t v63 = v14;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_10009B0E4(v67, a4, aBlock);
    uint64_t v37 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 12) = 2080;
    uint64_t v69 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 22) = 2080;
    uint64_t v69 = (uint64_t)a2;
    id v38 = v33;
    sub_1000CBE70(&qword_10070AC20);
    uint64_t v39 = String.init<A>(describing:)();
    uint64_t v69 = sub_10009B0E4(v39, v40, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s > %s: could not re-fetch folder, error: %s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v20, v63);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v20, v14);
  }
}

void sub_1001FB600(int a1, uint64_t a2, unint64_t a3, void *a4, void *a5, void *a6)
{
  int v29 = a1;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = v11;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = a5;
    uint64_t v25 = v19;
    aBlock[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10009B0E4(a2, a3, aBlock);
    uint64_t v27 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v30 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, aBlock);
    a4 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 22) = 1024;
    LODWORD(v30) = v29 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s > %s: move success finished with success: %{BOOL}d. Starting rename", (uint8_t *)v18, 0x1Cu);
    swift_arrayDestroy();
    a5 = v28;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  v20[5] = a5;
  v20[6] = a6;
  aBlock[4] = (uint64_t)sub_10021E9B0;
  aBlock[5] = (uint64_t)v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_1006966A0;
  id v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v22 = a4;
  id v23 = a5;
  id v24 = a6;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
}

uint64_t sub_1001FB964(uint64_t a1, unint64_t a2, unsigned char *a3, void *a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v10;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    id v23 = a3;
    uint64_t v25 = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    id v22 = a5;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10009B0E4(a1, a2, &v25);
    uint64_t v21 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v24 = sub_10009B0E4(0xD000000000000026, 0x80000001005DBDF0, &v25);
    a1 = v21;
    a5 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s > %s: No node to move. Starting rename", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    a3 = v23;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return sub_10020482C(a4, a5, a1, a2, a3);
}

void sub_1001FBBF4(void *a1, void *a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v32 = a1;
    sub_1001FA12C(a2, v32, a3, a4, a5, a6);
    uint64_t v16 = v32;
  }
  else
  {
    static Logger.Rename.getter();
    swift_unknownObjectRetain_n();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      int v30 = v19;
      uint64_t v21 = v20;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v34 = v29;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v33 = sub_10009B0E4(0xD000000000000019, 0x80000001005DBD90, &v34);
      unint64_t v31 = a4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2080;
      v28[1] = (os_log_t)(v21 + 14);
      id v22 = [a2 description];
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v28[0] = v17;
      uint64_t v24 = v23;
      id v32 = a5;
      unint64_t v26 = v25;

      uint64_t v33 = sub_10009B0E4(v24, v26, &v34);
      a4 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      a5 = v32;
      swift_bridgeObjectRelease();
      os_log_t v27 = v28[0];
      _os_log_impl((void *)&_mh_execute_header, v28[0], (os_log_type_t)v30, "%s: Could not show inline rename for item: %s. Unable to find cell.", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1001F9518(a3, a4, (uint64_t)a5);
  }
}

uint64_t sub_1001FBF00(NSObject *a1, void (*a2)(os_log_t, uint64_t, uint64_t), void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = v10;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v25 = a5;
    uint64_t v27 = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v23 = a3;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10009B0E4((uint64_t)a1, (unint64_t)a2, &v27);
    uint64_t v24 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v26 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DC530, &v27);
    a3 = v23;
    a1 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s > %s: BEGIN", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    a5 = v25;
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  swift_bridgeObjectRetain();
  int v19 = a3;
  uint64_t v20 = (void *)swift_unknownObjectRetain();
  sub_10021B82C(v20, a5, v19, a1, a2, v19, a4);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void sub_1001FC1B8(void *a1, uint64_t a2, unint64_t a3, unsigned char *a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v31 = a1;
    sub_100204CC0(a5, v31, a2, a3, a4, ObjectType);
    os_log_type_t v15 = v31;
  }
  else
  {
    static Logger.Rename.getter();
    swift_unknownObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      unint64_t v30 = a3;
      uint64_t v20 = v19;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v33 = v29;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v32 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DC530, &v33);
      int v28 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2080;
      v27[1] = (os_log_t)(v20 + 14);
      id v21 = [a5 description];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v27[0] = v16;
      uint64_t v23 = v22;
      id v31 = a4;
      unint64_t v25 = v24;

      uint64_t v32 = sub_10009B0E4(v23, v25, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      a4 = v31;
      swift_bridgeObjectRelease();
      os_log_t v26 = v27[0];
      _os_log_impl((void *)&_mh_execute_header, v27[0], (os_log_type_t)v28, "%s: Could not show inline rename for item: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v30;
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1001F9518(a2, a3, (uint64_t)a4);
  }
}

uint64_t sub_1001FC4CC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v8;
    uint64_t v15 = v14;
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v20 = a4;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10009B0E4(a1, a2, &v22);
    uint64_t v19 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v21 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DC510, &v22);
    a4 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s > %s: now safe to change first responder, beginning rename", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_100422E2C();
  return sub_1001F9518(a1, a2, a4);
}

uint64_t sub_1001FC750(uint64_t a1, NSObject *a2, void (*a3)(os_log_t, uint64_t, uint64_t), void (*a4)(char *, uint64_t), char *a5, void *a6)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v22 = v11;
    unint64_t v24 = a5;
    unint64_t v25 = a6;
    uint64_t v17 = (uint64_t)a2;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v23 = v17;
    uint64_t v26 = sub_10009B0E4(v17, (unint64_t)a3, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2048;
    if ((unint64_t)a4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)(((unint64_t)a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v20 = v22;
    swift_bridgeObjectRelease();
    uint64_t v26 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s not in column view with: %ld nodes to move. Node move success! preparing to rename", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
    a5 = v24;
    a6 = v25;
    a2 = v23;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return sub_1001F9770(a2, a3, a5, a6, a4);
}

id sub_1001FCA2C()
{
  return DOCItemCollectionViewController.actionContext(from:)();
}

uint64_t DOCTab.description.getter(uint64_t a1)
{
  uint64_t v1 = 0x6573776F7242;
  uint64_t v2 = 0x3F3F3F3F3FLL;
  if (a1 == 1) {
    uint64_t v2 = 0x646572616853;
  }
  if (a1 != 2) {
    uint64_t v1 = v2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0x73746E65636552;
  }
}

uint64_t sub_1001FCB0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = 0x6573776F7242;
  uint64_t v3 = 0x3F3F3F3F3FLL;
  if (*v0 == 1) {
    uint64_t v3 = 0x646572616853;
  }
  if (v1 != 2) {
    uint64_t v2 = v3;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0x73746E65636552;
  }
}

uint64_t sub_1001FCB78()
{
  double v1 = *(double *)(v0 + 40);
  double v3 = *(double *)(v0 + 8);
  double v2 = *(double *)(v0 + 16);
  if (v2 <= 0.0)
  {
    if (v1 <= v3) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = *(void *)(v0 + 24);
    if (*(unsigned char *)(v0 + 32))
    {
      double v6 = v1 + v2;
    }
    else
    {
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        return result;
      }
      double v6 = *(double *)v0 + (double)v5 * v2;
    }
    *(void *)(v0 + 24) = v5;
    *(double *)(v0 + 40) = v6;
    return *(void *)&v1;
  }
  if (v3 > v1) {
    goto LABEL_7;
  }
LABEL_3:
  if (v1 != v3
    || (*(unsigned char *)(v0 + 48) & 1) != 0
    || (*(unsigned char *)(v0 + 32) & 1) == 0 && *(void *)(v0 + 24) == 0x8000000000000000)
  {
    return 0;
  }
  *(unsigned char *)(v0 + 48) = 1;
  return *(void *)&v1;
}

uint64_t sub_1001FCC20(char *a1, uint64_t a2, char a3)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v7 = [a1 cellForItemAtIndexPath:isa];

  UIAccessibilityPostNotification(0x3FCu, v7);
  uint64_t v8 = &a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = *((void *)v8 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, _UNKNOWN **, uint64_t, void, uint64_t, uint64_t))(v10 + 72))(a1, &off_1006AF4A8, a2, a3 & 1, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Int sub_1001FCD18(void **a1)
{
  uint64_t v2 = *(void *)(sub_1000CBE70((uint64_t *)&unk_100708EC0) - 8);
  double v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v3 = (void *)sub_100520244(v3);
  }
  id v4 = (char *)v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1001FD050(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1001FCDC4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for IndexPath() - 8);
  double v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    double v3 = (void *)sub_100520258(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1001FDAA4(v6);
  *a1 = v3;
  return result;
}

id sub_1001FCE6C(uint64_t a1)
{
  double v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_10009E6C4(0, (unint64_t *)&qword_100708610);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  double v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1001FCEFC(void *a1)
{
  return sub_1001B8D14(a1);
}

uint64_t sub_1001FCF04(uint64_t a1, uint64_t a2)
{
  return sub_1001FCFC4(a1, a2, (void (*)(void))&type metadata accessor for IndexPath, (unint64_t *)&qword_10070AE70, (void (*)(uint64_t))&type metadata accessor for IndexPath) & 1;
}

uint64_t sub_1001FCF64(uint64_t a1, uint64_t a2)
{
  return sub_1001FCFC4(a1, a2, (void (*)(void))&type metadata accessor for Date, (unint64_t *)&unk_10070ABD0, (void (*)(uint64_t))&type metadata accessor for Date) & 1;
}

uint64_t sub_1001FCFC4(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

Swift::Int sub_1001FD050(char **a1)
{
  uint64_t v2 = v1;
  uint64_t v129 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
  uint64_t v4 = *(void *)(v129 - 8);
  uint64_t v5 = __chkstk_darwin(v129);
  uint64_t v120 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v130 = (uint64_t)&v116 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v127 = (uint64_t)&v116 - v10;
  __chkstk_darwin(v9);
  uint64_t v126 = (uint64_t)&v116 - v11;
  Swift::Int v12 = (Swift::Int)a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_1001FE588(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  uint64_t v124 = v4;
  uint64_t v128 = a1;
  Swift::Int v117 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)_swiftEmptyArrayStorage;
    unint64_t v123 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v116 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_107:
      uint64_t v109 = v18;
      if (v20 >= 2)
      {
        id v110 = *v128;
        do
        {
          unint64_t v111 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_136;
          }
          if (!v110) {
            goto LABEL_148;
          }
          uint64_t v112 = *(void *)&v109[16 * v111 + 32];
          uint64_t v113 = *(void *)&v109[16 * v20 + 24];
          sub_1001FEB00((unint64_t)&v110[*(void *)(v124 + 72) * v112], (unint64_t)&v110[*(void *)(v124 + 72) * *(void *)&v109[16 * v20 + 16]], (unint64_t)&v110[*(void *)(v124 + 72) * v113], v123);
          if (v2) {
            break;
          }
          if (v113 < v112) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v109 = sub_100520230((uint64_t)v109);
          }
          if (v111 >= *((void *)v109 + 2)) {
            goto LABEL_138;
          }
          os_log_t v114 = &v109[16 * v111 + 32];
          *(void *)os_log_t v114 = v112;
          *((void *)v114 + 1) = v113;
          unint64_t v115 = *((void *)v109 + 2);
          if (v20 > v115) {
            goto LABEL_139;
          }
          memmove(&v109[16 * v20 + 16], &v109[16 * v20 + 32], 16 * (v115 - v20));
          *((void *)v109 + 2) = v115 - 1;
          unint64_t v20 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v116[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v116 = (void *)v16;
    unint64_t v123 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v122 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v28 = v19 + 1;
      break;
    }
    uint64_t v118 = v2;
    uint64_t v23 = *v128;
    Swift::Int v24 = *(void *)(v124 + 72);
    uint64_t v25 = v126;
    sub_1000CBC00((uint64_t)&(*v128)[v24 * v22], v126, (uint64_t *)&unk_100708EC0);
    uint64_t v125 = v12;
    uint64_t v26 = v127;
    sub_1000CBC00((uint64_t)&v23[v24 * v21], v127, (uint64_t *)&unk_100708EC0);
    LODWORD(v121) = static IndexPath.< infix(_:_:)();
    uint64_t v27 = v26;
    Swift::Int v12 = v125;
    sub_1000CBBA4(v27, (uint64_t *)&unk_100708EC0);
    sub_1000CBBA4(v25, (uint64_t *)&unk_100708EC0);
    Swift::Int v28 = v21 + 2;
    v119 = v23;
    Swift::Int v131 = v24;
    if (v21 + 2 >= v12)
    {
      uint64_t v2 = v118;
      if ((v121 & 1) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v29 = v24 * v22;
      unint64_t v30 = v23;
      Swift::Int v31 = v24 * v28;
      do
      {
        Swift::Int v32 = v28;
        uint64_t v33 = v126;
        sub_1000CBC00((uint64_t)&v30[v31], v126, (uint64_t *)&unk_100708EC0);
        uint64_t v34 = v127;
        sub_1000CBC00((uint64_t)&v30[v29], v127, (uint64_t *)&unk_100708EC0);
        int v35 = static IndexPath.< infix(_:_:)();
        sub_1000CBBA4(v34, (uint64_t *)&unk_100708EC0);
        sub_1000CBBA4(v33, (uint64_t *)&unk_100708EC0);
        if ((v121 ^ v35))
        {
          Swift::Int v28 = v32;
          uint64_t v2 = v118;
          uint64_t v21 = v122;
          Swift::Int v12 = v125;
          if ((v121 & 1) == 0) {
            goto LABEL_23;
          }
          goto LABEL_43;
        }
        Swift::Int v28 = v32 + 1;
        v30 += v131;
      }
      while (v125 != v32 + 1);
      Swift::Int v12 = v125;
      Swift::Int v28 = v125;
      uint64_t v2 = v118;
      uint64_t v21 = v122;
      if ((v121 & 1) == 0) {
        break;
      }
    }
LABEL_43:
    Swift::Int v47 = v131;
    if (v28 < v21) {
      goto LABEL_142;
    }
    if (v21 >= v28) {
      break;
    }
    uint64_t v118 = v2;
    uint64_t v48 = 0;
    uint64_t v49 = v131 * (v28 - 1);
    Swift::Int v50 = v28 * v131;
    uint64_t v51 = v28;
    uint64_t v52 = v21;
    uint64_t v53 = v21 * v131;
    uint64_t v36 = v128;
    uint64_t v132 = v51;
    do
    {
      if (v52 != v51 + v48 - 1)
      {
        id v54 = v119;
        if (!v119) {
          goto LABEL_147;
        }
        id v55 = &v119[v53];
        uint64_t v56 = (uint64_t)&v119[v49];
        sub_1000CBE0C((uint64_t)&v119[v53], v120, (uint64_t *)&unk_100708EC0);
        if (v53 < v49 || v55 >= &v54[v50])
        {
          swift_arrayInitWithTakeFrontToBack();
          Swift::Int v47 = v131;
        }
        else
        {
          Swift::Int v47 = v131;
          if (v53 != v49) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_1000CBE0C(v120, v56, (uint64_t *)&unk_100708EC0);
        uint64_t v36 = v128;
      }
      ++v52;
      --v48;
      uint64_t v51 = v132;
      v49 -= v47;
      v50 -= v47;
      v53 += v47;
    }
    while (v52 < v132 + v48);
    uint64_t v2 = v118;
    Swift::Int v28 = v132;
    uint64_t v21 = v122;
    Swift::Int v12 = v125;
    if (v132 < v125) {
      goto LABEL_24;
    }
LABEL_58:
    if (v28 < v21) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_10051F91C(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v58 = *((void *)v18 + 2);
    unint64_t v57 = *((void *)v18 + 3);
    unint64_t v20 = v58 + 1;
    uint64_t v132 = v28;
    if (v58 >= v57 >> 1) {
      uint64_t v18 = sub_10051F91C((char *)(v57 > 1), v58 + 1, 1, v18);
    }
    uint64_t v59 = v2;
    *((void *)v18 + 2) = v20;
    os_log_t v60 = v18 + 32;
    uint64_t v61 = &v18[16 * v58 + 32];
    uint64_t v62 = v132;
    *(void *)uint64_t v61 = v21;
    *((void *)v61 + 1) = v62;
    if (v58)
    {
      while (1)
      {
        unint64_t v63 = v20 - 1;
        if (v20 >= 4)
        {
          os_log_type_t v68 = &v60[16 * v20];
          uint64_t v69 = *((void *)v68 - 8);
          uint64_t v70 = *((void *)v68 - 7);
          BOOL v74 = __OFSUB__(v70, v69);
          uint64_t v71 = v70 - v69;
          if (v74) {
            goto LABEL_124;
          }
          uint64_t v73 = *((void *)v68 - 6);
          uint64_t v72 = *((void *)v68 - 5);
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v66 = v72 - v73;
          char v67 = v74;
          if (v74) {
            goto LABEL_125;
          }
          unint64_t v75 = v20 - 2;
          os_log_type_t v76 = &v60[16 * v20 - 32];
          uint64_t v78 = *(void *)v76;
          uint64_t v77 = *((void *)v76 + 1);
          BOOL v74 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v74) {
            goto LABEL_127;
          }
          BOOL v74 = __OFADD__(v66, v79);
          uint64_t v80 = v66 + v79;
          if (v74) {
            goto LABEL_130;
          }
          if (v80 >= v71)
          {
            id v98 = &v60[16 * v63];
            uint64_t v100 = *(void *)v98;
            uint64_t v99 = *((void *)v98 + 1);
            BOOL v74 = __OFSUB__(v99, v100);
            uint64_t v101 = v99 - v100;
            if (v74) {
              goto LABEL_134;
            }
            BOOL v91 = v66 < v101;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v92 = *((void *)v18 + 4);
            uint64_t v93 = *((void *)v18 + 5);
            BOOL v74 = __OFSUB__(v93, v92);
            uint64_t v85 = v93 - v92;
            char v86 = v74;
            goto LABEL_89;
          }
          uint64_t v65 = *((void *)v18 + 4);
          uint64_t v64 = *((void *)v18 + 5);
          BOOL v74 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          char v67 = v74;
        }
        if (v67) {
          goto LABEL_126;
        }
        unint64_t v75 = v20 - 2;
        uint64_t v81 = &v60[16 * v20 - 32];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v84 = __OFSUB__(v82, v83);
        uint64_t v85 = v82 - v83;
        char v86 = v84;
        if (v84) {
          goto LABEL_129;
        }
        uint64_t v87 = &v60[16 * v63];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v74 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v74) {
          goto LABEL_132;
        }
        if (__OFADD__(v85, v90)) {
          goto LABEL_133;
        }
        if (v85 + v90 >= v66)
        {
          BOOL v91 = v66 < v90;
LABEL_95:
          if (v91) {
            unint64_t v63 = v75;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v86) {
          goto LABEL_128;
        }
        uint64_t v94 = &v60[16 * v63];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v74 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v74) {
          goto LABEL_131;
        }
        if (v97 < v85) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v102 = v63 - 1;
        if (v63 - 1 >= v20)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v128) {
          goto LABEL_146;
        }
        uint64_t v103 = v18;
        uint64_t v104 = &v60[16 * v102];
        uint64_t v105 = *(void *)v104;
        uint64_t v106 = &v60[16 * v63];
        uint64_t v107 = *((void *)v106 + 1);
        sub_1001FEB00((unint64_t)&(*v128)[*(void *)(v124 + 72) * *(void *)v104], (unint64_t)&(*v128)[*(void *)(v124 + 72) * *(void *)v106], (unint64_t)&(*v128)[*(void *)(v124 + 72) * v107], v123);
        if (v59) {
          goto LABEL_118;
        }
        if (v107 < v105) {
          goto LABEL_121;
        }
        if (v63 > *((void *)v103 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v104 = v105;
        *(void *)&v60[16 * v102 + 8] = v107;
        unint64_t v108 = *((void *)v103 + 2);
        if (v63 >= v108) {
          goto LABEL_123;
        }
        uint64_t v18 = v103;
        unint64_t v20 = v108 - 1;
        memmove(&v60[16 * v63], v106 + 16, 16 * (v108 - 1 - v63));
        *((void *)v103 + 2) = v108 - 1;
        if (v108 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v12 = (Swift::Int)v128[1];
    uint64_t v19 = v132;
    uint64_t v2 = v59;
    if (v132 >= v12) {
      goto LABEL_107;
    }
  }
LABEL_23:
  uint64_t v36 = v128;
  if (v28 >= v12) {
    goto LABEL_58;
  }
LABEL_24:
  if (__OFSUB__(v28, v21)) {
    goto LABEL_140;
  }
  if (v28 - v21 >= v117) {
    goto LABEL_58;
  }
  if (__OFADD__(v21, v117)) {
    goto LABEL_143;
  }
  if (v21 + v117 >= v12) {
    Swift::Int v37 = v12;
  }
  else {
    Swift::Int v37 = v21 + v117;
  }
  if (v37 >= v21)
  {
    if (v28 != v37)
    {
      uint64_t v118 = v2;
      v119 = v18;
      uint64_t v38 = *(void *)(v124 + 72);
      uint64_t v132 = v38 * (v28 - 1);
      uint64_t v125 = v38;
      Swift::Int v131 = v28 * v38;
      Swift::Int v121 = v37;
      do
      {
        uint64_t v39 = 0;
        uint64_t v40 = v21;
        while (1)
        {
          Swift::Int v41 = v28;
          uint64_t v42 = *v36;
          uint64_t v43 = v126;
          sub_1000CBC00((uint64_t)&(*v36)[v131 + v39], v126, (uint64_t *)&unk_100708EC0);
          uint64_t v44 = v127;
          sub_1000CBC00((uint64_t)&v42[v132 + v39], v127, (uint64_t *)&unk_100708EC0);
          LOBYTE(v42) = static IndexPath.< infix(_:_:)();
          sub_1000CBBA4(v44, (uint64_t *)&unk_100708EC0);
          sub_1000CBBA4(v43, (uint64_t *)&unk_100708EC0);
          if ((v42 & 1) == 0) {
            break;
          }
          uint64_t v45 = *v36;
          if (!*v36) {
            goto LABEL_145;
          }
          uint64_t v46 = (uint64_t)&v45[v132 + v39];
          sub_1000CBE0C((uint64_t)&v45[v131 + v39], v130, (uint64_t *)&unk_100708EC0);
          Swift::Int v28 = v41;
          swift_arrayInitWithTakeFrontToBack();
          sub_1000CBE0C(v130, v46, (uint64_t *)&unk_100708EC0);
          v39 -= v125;
          ++v40;
          uint64_t v36 = v128;
          if (v41 == v40) {
            goto LABEL_34;
          }
        }
        Swift::Int v28 = v41;
LABEL_34:
        ++v28;
        v132 += v125;
        v131 += v125;
        uint64_t v21 = v122;
      }
      while (v28 != v121);
      Swift::Int v28 = v121;
      uint64_t v2 = v118;
      uint64_t v18 = v119;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_1001FDAA4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v134 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v149 = (char *)&v129 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v144 = (char *)&v129 - v11;
  __chkstk_darwin(v10);
  v145 = (char *)&v129 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_138;
    }
    if (v13) {
      return sub_1001FE814(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_146;
  }
  uint64_t v147 = v4;
  Swift::Int v130 = result;
  v137 = (void *)v5;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v129 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_104:
      if (v21 >= 2)
      {
        uint64_t v123 = *a1;
        do
        {
          unint64_t v124 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_133;
          }
          if (!v123) {
            goto LABEL_145;
          }
          uint64_t v125 = *(void *)&v19[16 * v124 + 32];
          uint64_t v126 = *(void *)&v19[16 * v21 + 24];
          sub_1001FEFE4(v123 + v137[9] * v125, v123 + v137[9] * *(void *)&v19[16 * v21 + 16], v123 + v137[9] * v126, v136);
          if (v2) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_100520230((uint64_t)v19);
          }
          if (v124 >= *((void *)v19 + 2)) {
            goto LABEL_135;
          }
          uint64_t v127 = &v19[16 * v124 + 32];
          *(void *)uint64_t v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v19 + 2);
          if (v21 > v128) {
            goto LABEL_136;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v128 - v21));
          *((void *)v19 + 2) = v128 - 1;
          unint64_t v21 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v129[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v129 = (void *)v17;
    unint64_t v136 = v17 + v18;
  }
  unint64_t v20 = 0;
  v142 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v143 = v5 + 16;
  v152 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  v148 = a1;
  while (1)
  {
    uint64_t v22 = v20 + 1;
    v135 = v20;
    if ((uint64_t)(v20 + 1) >= v13)
    {
      uint64_t v33 = (void (*)(void, void, void))v20;
      Swift::Int v35 = (Swift::Int)(v20 + 1);
      a1 = v148;
    }
    else
    {
      uint64_t v23 = v147;
      Swift::Int v24 = *v148;
      uint64_t v25 = v137[9];
      uint64_t v26 = *v148 + v25 * (void)v22;
      uint64_t v151 = v25;
      Swift::Int v140 = v24;
      uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      v27(v145, v26, v147);
      Swift::Int v150 = v13;
      Swift::Int v28 = v144;
      v27(v144, v24 + v25 * (void)v135, v23);
      uint64_t v29 = v145;
      LODWORD(v146) = static IndexPath.< infix(_:_:)();
      unint64_t v30 = (void (*)(char *, uint64_t))v137[1];
      Swift::Int v31 = v28;
      Swift::Int v13 = v150;
      v30(v31, v23);
      uint64_t v32 = v23;
      uint64_t v33 = (void (*)(void, void, void))v135;
      v30(v29, v32);
      uint64_t v34 = v151;
      Swift::Int v35 = (Swift::Int)v33 + 2;
      if ((uint64_t)v33 + 2 < v13)
      {
        Swift::Int v131 = v19;
        uint64_t v132 = v2;
        uint64_t v141 = v151 * (void)v22;
        Swift::Int v36 = v140;
        Swift::Int v37 = v151 * v35;
        while (1)
        {
          Swift::Int v38 = v35;
          uint64_t v39 = v145;
          uint64_t v40 = v147;
          v27(v145, v36 + v37, v147);
          Swift::Int v41 = v144;
          v27(v144, v36 + v141, v40);
          int v42 = static IndexPath.< infix(_:_:)();
          v30(v41, v40);
          v30(v39, v40);
          if ((v146 ^ v42)) {
            break;
          }
          Swift::Int v35 = v38 + 1;
          uint64_t v34 = v151;
          v36 += v151;
          if (v150 == v38 + 1)
          {
            Swift::Int v13 = v150;
            Swift::Int v35 = v150;
            uint64_t v19 = v131;
            uint64_t v2 = v132;
            uint64_t v33 = (void (*)(void, void, void))v135;
            goto LABEL_23;
          }
        }
        uint64_t v19 = v131;
        uint64_t v2 = v132;
        Swift::Int v35 = v38;
        uint64_t v33 = (void (*)(void, void, void))v135;
        Swift::Int v13 = v150;
        uint64_t v34 = v151;
      }
LABEL_23:
      a1 = v148;
      if (v146)
      {
        if (v35 < (uint64_t)v33) {
          goto LABEL_139;
        }
        if ((uint64_t)v33 < v35)
        {
          Swift::Int v131 = v19;
          uint64_t v132 = v2;
          uint64_t v43 = 0;
          uint64_t v44 = v34 * (v35 - 1);
          Swift::Int v45 = (Swift::Int)v33;
          Swift::Int v46 = v35 * v34;
          Swift::Int v47 = v45;
          uint64_t v48 = v45 * v34;
          Swift::Int v49 = v140;
          do
          {
            if (v47 != v35 + v43 - 1)
            {
              if (!v49) {
                goto LABEL_144;
              }
              Swift::Int v51 = v49 + v44;
              v146 = (char *)*v152;
              ((void (*)(char *, Swift::Int, uint64_t))v146)(v134, v49 + v48, v147);
              if (v48 < v44 || v49 + v48 >= (unint64_t)(v49 + v46))
              {
                uint64_t v50 = v147;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v50 = v147;
                if (v48 != v44) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(Swift::Int, char *, uint64_t))v146)(v51, v134, v50);
              a1 = v148;
              Swift::Int v49 = v140;
              uint64_t v34 = v151;
            }
            ++v47;
            --v43;
            v44 -= v34;
            v46 -= v34;
            v48 += v34;
          }
          while (v47 < v35 + v43);
          uint64_t v19 = v131;
          uint64_t v2 = v132;
          uint64_t v33 = (void (*)(void, void, void))v135;
          Swift::Int v13 = v150;
        }
      }
    }
    if (v35 < v13)
    {
      if (__OFSUB__(v35, v33)) {
        goto LABEL_137;
      }
      if (v35 - (uint64_t)v33 < v130) {
        break;
      }
    }
LABEL_55:
    if (v35 < (uint64_t)v33) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v146 = (char *)v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_10051F91C(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v72 = *((void *)v19 + 2);
    unint64_t v71 = *((void *)v19 + 3);
    unint64_t v21 = v72 + 1;
    if (v72 >= v71 >> 1) {
      uint64_t v19 = sub_10051F91C((char *)(v71 > 1), v72 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v73 = v19 + 32;
    BOOL v74 = &v19[16 * v72 + 32];
    unint64_t v75 = v146;
    *(void *)BOOL v74 = v33;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v81 = &v73[16 * v21];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_121;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_122;
          }
          unint64_t v88 = v21 - 2;
          uint64_t v89 = &v73[16 * v21 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_124;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_127;
          }
          if (v93 >= v84)
          {
            unint64_t v111 = &v73[16 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_131;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_92;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v105 = *((void *)v19 + 4);
            uint64_t v106 = *((void *)v19 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_86;
          }
          uint64_t v78 = *((void *)v19 + 4);
          uint64_t v77 = *((void *)v19 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_123;
        }
        unint64_t v88 = v21 - 2;
        uint64_t v94 = &v73[16 * v21 - 32];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_126;
        }
        uint64_t v100 = &v73[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_129;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_130;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_92:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v99) {
          goto LABEL_125;
        }
        uint64_t v107 = &v73[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_128;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        Swift::Int v117 = v19;
        uint64_t v118 = &v73[16 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = &v73[16 * v76];
        uint64_t v121 = *((void *)v120 + 1);
        sub_1001FEFE4(v116 + v137[9] * *(void *)v118, v116 + v137[9] * *(void *)v120, v116 + v137[9] * v121, v136);
        if (v2) {
          goto LABEL_115;
        }
        if (v121 < v119) {
          goto LABEL_118;
        }
        if (v76 > *((void *)v117 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v118 = v119;
        *(void *)&v73[16 * v115 + 8] = v121;
        unint64_t v122 = *((void *)v117 + 2);
        if (v76 >= v122) {
          goto LABEL_120;
        }
        uint64_t v19 = v117;
        unint64_t v21 = v122 - 1;
        memmove(&v73[16 * v76], v120 + 16, 16 * (v122 - 1 - v76));
        *((void *)v117 + 2) = v122 - 1;
        a1 = v148;
        if (v122 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = a1[1];
    unint64_t v20 = v146;
    if ((uint64_t)v146 >= v13) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v33, v130)) {
    goto LABEL_140;
  }
  if ((uint64_t)v33 + v130 >= v13) {
    Swift::Int v52 = v13;
  }
  else {
    Swift::Int v52 = (Swift::Int)v33 + v130;
  }
  if (v52 >= (uint64_t)v33)
  {
    if (v35 != v52)
    {
      Swift::Int v131 = v19;
      uint64_t v132 = v2;
      uint64_t v53 = v137[9];
      v138 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      uint64_t v139 = v53;
      uint64_t v54 = v53 * (v35 - 1);
      Swift::Int v55 = v35 * v53;
      uint64_t v56 = v147;
      Swift::Int v133 = v52;
      do
      {
        uint64_t v58 = 0;
        v146 = (char *)v35;
        Swift::Int v140 = v55;
        uint64_t v141 = v54;
        while (1)
        {
          uint64_t v59 = *a1;
          Swift::Int v150 = v55 + v58;
          uint64_t v151 = (uint64_t)v33;
          Swift::Int v60 = v55 + v58 + v59;
          uint64_t v61 = v145;
          uint64_t v62 = v138;
          v138(v145, v60, v56);
          uint64_t v63 = v54 + v58 + v59;
          uint64_t v64 = a1;
          uint64_t v65 = v144;
          v62(v144, v63, v56);
          LOBYTE(v62) = static IndexPath.< infix(_:_:)();
          uint64_t v66 = *v142;
          (*v142)(v65, v56);
          v66(v61, v56);
          if ((v62 & 1) == 0) {
            break;
          }
          uint64_t v67 = *v64;
          if (!*v64) {
            goto LABEL_142;
          }
          Swift::Int v55 = v140;
          uint64_t v54 = v141;
          os_log_type_t v68 = (char *)(v67 + v141 + v58);
          uint64_t v69 = *v152;
          uint64_t v56 = v147;
          (*v152)(v149, v67 + v140 + v58, v147);
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (uint64_t)v149, v56);
          v58 -= v139;
          uint64_t v33 = (void (*)(void, void, void))(v151 + 1);
          unint64_t v57 = v146;
          a1 = v148;
          if (v146 == (char *)(v151 + 1)) {
            goto LABEL_48;
          }
        }
        unint64_t v57 = v146;
        uint64_t v56 = v147;
        a1 = v64;
        Swift::Int v55 = v140;
        uint64_t v54 = v141;
LABEL_48:
        Swift::Int v35 = (Swift::Int)(v57 + 1);
        v54 += v139;
        v55 += v139;
        uint64_t v33 = (void (*)(void, void, void))v135;
      }
      while (v35 != v133);
      Swift::Int v35 = v133;
      uint64_t v19 = v131;
      uint64_t v2 = v132;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001FE588(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v29 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
  uint64_t v7 = __chkstk_darwin(v29);
  uint64_t v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v26 = (uint64_t)&v23 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v31 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1000CBC00(v31 + v16 + *a4, (uint64_t)v14, (uint64_t *)&unk_100708EC0);
      uint64_t v19 = v26;
      sub_1000CBC00(v32 + v16 + v18, v26, (uint64_t *)&unk_100708EC0);
      LOBYTE(v18) = static IndexPath.< infix(_:_:)();
      sub_1000CBBA4(v19, (uint64_t *)&unk_100708EC0);
      uint64_t result = sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_100708EC0);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v24) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v20 = *a4;
      if (!*a4) {
        break;
      }
      unint64_t v21 = a4;
      uint64_t v22 = v20 + v32 + v16;
      sub_1000CBE0C(v20 + v31 + v16, v30, (uint64_t *)&unk_100708EC0);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1000CBE0C(v30, v22, (uint64_t *)&unk_100708EC0);
      v16 -= v27;
      ++v17;
      a4 = v21;
      if (v28 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FE814(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v39 = (char *)&v31 - v11;
  uint64_t result = __chkstk_darwin(v10);
  Swift::Int v38 = (char *)&v31 - v14;
  uint64_t v41 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    Swift::Int v35 = (void (*)(char *, uint64_t, uint64_t))v16;
    Swift::Int v36 = a4;
    uint64_t v37 = v15;
    int v42 = (uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v17 * (v41 - 1);
    uint64_t v40 = v17;
    uint64_t v45 = v17 * v41;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v44 = v33;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v45 + v18 + *a4;
      unint64_t v21 = v38;
      uint64_t v22 = v35;
      v35(v38, v20, v7);
      uint64_t v23 = v7;
      uint64_t v24 = v39;
      v22(v39, v46 + v18 + v19, v23);
      LOBYTE(v19) = static IndexPath.< infix(_:_:)();
      uint64_t v25 = *v34;
      uint64_t v26 = v24;
      uint64_t v7 = v23;
      (*v34)(v26, v23);
      uint64_t v27 = v21;
      a4 = v36;
      uint64_t result = v25(v27, v23);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v46 += v40;
        v45 += v40;
        if (++v41 == v32) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v29 = (char *)(v28 + v46 + v18);
      uint64_t v30 = *v42;
      (*v42)(v43, v28 + v45 + v18, v23);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = v30(v29, (uint64_t)v43, v23);
      v18 -= v40;
      if (v41 == ++v44) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FEB00(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_63;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v25 = a4 + v18;
      unint64_t v45 = a4 + v18;
      unint64_t v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v27 = -v13;
        unint64_t v41 = a4;
        unint64_t v42 = a1;
        do
        {
          unint64_t v28 = a3 + v27;
          sub_1000CBC00(v25 + v27, (uint64_t)v11, (uint64_t *)&unk_100708EC0);
          unint64_t v29 = a2 + v27;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v43;
          sub_1000CBC00(a2 + v27, v43, (uint64_t *)&unk_100708EC0);
          char v33 = static IndexPath.< infix(_:_:)();
          uint64_t v34 = v32;
          uint64_t v11 = (char *)v31;
          sub_1000CBBA4(v34, (uint64_t *)&unk_100708EC0);
          sub_1000CBBA4(v31, (uint64_t *)&unk_100708EC0);
          if (v33)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v41;
              unint64_t v36 = v42;
            }
            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v37 = v41;
              unint64_t v36 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v47 += v27;
          }
          else
          {
            unint64_t v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v37 = v41;
              unint64_t v36 = v42;
            }
            else
            {
              BOOL v35 = v30 == v38;
              unint64_t v37 = v41;
              unint64_t v36 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
            }
          }
          unint64_t v25 = v45;
          if (v45 <= v37) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v42 = a4 + v17;
    unint64_t v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = v43;
      do
      {
        sub_1000CBC00(a2, (uint64_t)v11, (uint64_t *)&unk_100708EC0);
        sub_1000CBC00(a4, v20, (uint64_t *)&unk_100708EC0);
        char v21 = static IndexPath.< infix(_:_:)();
        sub_1000CBBA4(v20, (uint64_t *)&unk_100708EC0);
        sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_100708EC0);
        unint64_t v22 = v47;
        if (v21)
        {
          unint64_t v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v24;
          unint64_t v23 = a2;
        }
        unint64_t v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42) {
          break;
        }
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_10051FA18(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001FEFE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v61 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v61 - 8);
  uint64_t v9 = __chkstk_darwin(v61);
  Swift::Int v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v51 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v64 = a1;
  unint64_t v63 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v18;
      unint64_t v62 = a4 + v18;
      unint64_t v64 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v58 = v8 + 16;
        uint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
        Swift::Int v55 = v36;
        uint64_t v37 = -v13;
        unint64_t v52 = a4;
        uint64_t v53 = -v13;
        uint64_t v56 = (void (*)(void, void, void))a1;
        uint64_t v38 = v61;
        do
        {
          unint64_t v57 = a3 + v37;
          unint64_t v39 = a3;
          uint64_t v40 = v59;
          unint64_t v41 = v55;
          v55(v59, v34 + v37, v38);
          unint64_t v42 = a2 + v37;
          uint64_t v43 = v60;
          v41(v60, v42, v38);
          LOBYTE(v41) = static IndexPath.< infix(_:_:)();
          uint64_t v44 = *v54;
          (*v54)(v43, v38);
          v44(v40, v38);
          if (v41)
          {
            uint64_t v37 = v53;
            a3 = v57;
            if (v39 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
              unint64_t v47 = v56;
            }
            else
            {
              BOOL v45 = v39 == a2;
              unint64_t v46 = v52;
              unint64_t v47 = v56;
              if (!v45) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v64 += v37;
          }
          else
          {
            unint64_t v48 = v62;
            v62 += v53;
            a3 = v57;
            BOOL v49 = v39 < v48 || v57 >= v48;
            uint64_t v37 = v53;
            if (v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v46 = v52;
              unint64_t v47 = v56;
            }
            else
            {
              unint64_t v47 = v56;
              if (v39 != v48) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v46 = v52;
            }
          }
          unint64_t v34 = v62;
          if (v62 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > (unint64_t)v47);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v57 = a4 + v17;
    unint64_t v62 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(void, void, void))(v8 + 16);
      uint64_t v58 = v8 + 16;
      Swift::Int v55 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v56 = v20;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        unint64_t v23 = v59;
        unint64_t v24 = a4;
        uint64_t v25 = v61;
        uint64_t v26 = (void (*)(char *, unint64_t, uint64_t))v56;
        v56(v59, a2, v61);
        uint64_t v27 = v60;
        v26(v60, v24, v25);
        LOBYTE(v24) = static IndexPath.< infix(_:_:)();
        unint64_t v28 = *(void (**)(char *, uint64_t))v55;
        (*(void (**)(char *, uint64_t))v55)(v27, v25);
        v28(v23, v25);
        unint64_t v29 = v64;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v30 = a2 + v21;
          if (v64 < a2 || v64 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v32 = v63 + v21;
          if (v64 < v63 || v64 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 != v63) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v63 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v64 = v29 + v13;
        a4 = v63;
        if (v63 >= v57) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_10051FA24(&v64, &v63, (uint64_t *)&v62);
    return 1;
  }
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001FF598(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  size_t v5 = ((unint64_t)((1 << v4) + 63) >> 3) & 0x1FFFFFFFFFFFFFF8;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_1002090C0((uint64_t)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v3, a2);
    char v7 = v6;
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_1002090C0((uint64_t)v8, v3, a2);
    char v7 = v9;
    swift_slowDealloc();
  }
  return v7 & 1;
}

uint64_t sub_1001FF708()
{
  return sub_100005884(sub_1000BC324);
}

uint64_t sub_1001FF720(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  char v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1001FF7C0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  char v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_1001FF8A0;
  return v5(v2 + 32);
}

uint64_t sub_1001FF8A0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1001FF9B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    uint64_t v4 = result;
    unint64_t v5 = sub_10007CC5C(result);
    __chkstk_darwin(v5);
    v7[2] = v4;
    v7[3] = a2;
    uint64_t v6 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)v7, v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FFA58(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v55 = a3;
  id v56 = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  __chkstk_darwin(v8);
  unint64_t v64 = &v53[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  unint64_t v62 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = type metadata accessor for DispatchTime();
  uint64_t v61 = *(void *)(v68 - 8);
  uint64_t v11 = __chkstk_darwin(v68);
  uint64_t v59 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  Swift::Int v60 = &v53[-v13];
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = &v53[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v53[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v21 - 8);
  unint64_t v23 = &v53[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000CBC00(a2, (uint64_t)v23, &qword_1007076B0);
  type metadata accessor for DOCItemCollectionViewController.PendingNodeContext(0);
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 0;
  *(void *)(v24 + 16) = a1;
  sub_1000CBC00((uint64_t)v23, v24 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, &qword_1007076B0);
  uint64_t v25 = (uint64_t *)(v24
                  + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler);
  uint64_t *v25 = v55;
  v25[1] = a4;
  id v26 = a1;
  swift_retain();
  UUID.init()();
  sub_1000CBBA4((uint64_t)v23, &qword_1007076B0);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v18 + 32))(v24 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID, v20, v17);
  static Logger.UI.getter();
  id v27 = v26;
  id v28 = v56;
  id v29 = v27;
  unint64_t v30 = (char *)v28;
  id v56 = v16;
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    int v54 = v33;
    uint64_t v35 = v34;
    uint64_t v55 = swift_slowAlloc();
    aBlock[0] = v55;
    *(_DWORD *)uint64_t v35 = 136315650;
    id v69 = (id)sub_10009B0E4(0xD00000000000002BLL, 0x80000001005DC8E0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 12) = 2080;
    id v36 = [v29 displayName];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v38;

    id v69 = (id)sub_10009B0E4(v37, v39, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 22) = 2080;
    id v69 = [*(id *)&v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v40 = String.init<A>(describing:)();
    id v69 = (id)sub_10009B0E4(v40, v41, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v54, "%s - adding node to be resolved: %s in source: %s", (uint8_t *)v35, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(id, uint64_t))(v57 + 8))(v56, v58);
  unint64_t v42 = &v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts];
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v42 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v43 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v44 = v59;
  static DispatchTime.now()();
  BOOL v45 = v60;
  + infix(_:_:)();
  uint64_t v61 = *(void *)(v61 + 8);
  ((void (*)(unsigned char *, uint64_t))v61)(v44, v68);
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v46;
  *(void *)(v47 + 24) = v24;
  aBlock[4] = (uint64_t)sub_10021FBB0;
  aBlock[5] = v47;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_1006972A8;
  unint64_t v48 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  BOOL v49 = v62;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v50 = v64;
  uint64_t v51 = v67;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v48);
  swift_release();

  (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v50, v51);
  (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v49, v65);
  return ((uint64_t (*)(unsigned char *, uint64_t))v61)(v45, v68);
}

uint64_t sub_10020032C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  DOCNode.fpfs_fetchFPItem(completion:)();
  swift_release();

  return swift_release();
}

void sub_100200404(void *a1, int a2, char *a3)
{
  int v204 = a2;
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  v198 = (char *)&v191 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v191 - v8;
  uint64_t v202 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v202 - 8);
  uint64_t v11 = __chkstk_darwin(v202);
  v200 = (char *)&v191 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v199 = (char *)&v191 - v13;
  uint64_t v14 = (void *)type metadata accessor for Logger();
  uint64_t v15 = *(v14 - 1);
  uint64_t v16 = __chkstk_darwin(v14);
  v209 = (char *)&v191 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v208 = (char *)&v191 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v206 = (char *)&v191 - v21;
  __chkstk_darwin(v20);
  unint64_t v23 = (char *)&v191 - v22;
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v203 = v10;
  v201 = (void (*)(uint64_t, void, uint64_t, uint64_t))v9;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    v211 = (void (*)(char *, void *))swift_slowAlloc();
    *(void *)&long long v213 = v211;
    *(_DWORD *)uint64_t v27 = 136315394;
    v205 = a3;
    uint64_t Strong = v15;
    aBlock[0] = sub_10009B0E4(0xD000000000000051, 0x80000001005DC190, (uint64_t *)&v213);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 2080;
    v207 = (void *)(v27 + 14);
    id v28 = [a1 displayName];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v14;
    unint64_t v32 = v31;

    aBlock[0] = sub_10009B0E4(v29, v32, (uint64_t *)&v213);
    a3 = v205;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v14 = v30;
    uint64_t v15 = Strong;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s [TAP] [Interaction] Validating selection of item %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v211 = *(void (**)(char *, void *))(v15 + 8);
  v211(v23, v14);
  int v33 = *(void **)&a3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  id v34 = [v33 sceneIdentifier];
  uint64_t v35 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v34);

  id v36 = self;
  id v37 = [v33 sceneIdentifier];
  id v38 = [v36 globalTabbedBrowserControllerForIdentifier:v37];

  if (v38)
  {
    id v39 = [v38 activeDocumentCreationIntent];

    if (v39)
    {
      v209 = v35;
      id v40 = [a1 displayName];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      uint64_t v44 = v206;
      static Logger.UI.getter();
      swift_bridgeObjectRetain();
      BOOL v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v45, v46))
      {

        swift_bridgeObjectRelease_n();
        BOOL v49 = v44;
        BOOL v74 = v14;
LABEL_32:
        v211(v49, v74);
        uint64_t v86 = &v219;
LABEL_33:

        return;
      }
      uint64_t Strong = v15;
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v207 = v14;
      *(void *)&long long v213 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      swift_bridgeObjectRetain();
      aBlock[0] = sub_10009B0E4(v41, v43, (uint64_t *)&v213);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[TAP] [Interaction] An item, '%s', was selected while there is UIP document creation in progress. Bailing out.", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      BOOL v49 = v44;
LABEL_31:
      BOOL v74 = v207;
      goto LABEL_32;
    }
  }
  v207 = v14;
  uint64_t v50 = (id *)&v35[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  if (*v50)
  {
    v209 = v35;
    id v51 = [a1 displayName];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    id v55 = *v50;
    id v56 = *v50;
    uint64_t v57 = v208;
    static Logger.UI.getter();
    id v58 = v56;
    swift_bridgeObjectRetain();
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t Strong = v15;
      uint64_t v61 = swift_slowAlloc();
      unint64_t v62 = (void *)swift_slowAlloc();
      v206 = (char *)swift_slowAlloc();
      *(void *)&long long v213 = v206;
      *(_DWORD *)uint64_t v61 = 136315394;
      swift_bridgeObjectRetain();
      aBlock[0] = sub_10009B0E4(v52, v54, (uint64_t *)&v213);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v61 + 12) = 2112;
      if (v55)
      {
        aBlock[0] = v58;
        id v63 = v58;
      }
      else
      {
        aBlock[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v62 = v55;

      _os_log_impl((void *)&_mh_execute_header, v59, v60, "[TAP] [Interaction] An item, '%s', was selected while another is trying to be opened: '%@'. Bailing out.", (uint8_t *)v61, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      BOOL v49 = v208;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      BOOL v49 = v57;
    }
    goto LABEL_31;
  }
  if (([a1 isTrashed] & 1) != 0
    || (unint64_t v64 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration],
        v64[*(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 36)] == 1))
  {
    if (([a1 isFolder] & 1) == 0)
    {
      uint64_t v65 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      if (*(void *)v65 != 2
        || a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] == 1)
      {
        uint64_t v66 = v35;
        uint64_t v67 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.default.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1005A0030;
        id v69 = [a1 displayName];
        uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v72 = v71;

        *(void *)(v68 + 56) = &type metadata for String;
        *(void *)(v68 + 64) = sub_100073F48();
        *(void *)(v68 + 32) = v70;
        *(void *)(v68 + 40) = v72;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        NSString v73 = [a1 displayName];
        if (!v73)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v73 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        DOCAlertUserTrashedFileCanNotBeOpened();

        return;
      }
    }
  }
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v75 = DOCNode.fpfs_syncFetchFPItem()();
  if (!v75)
  {
    BOOL v87 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_1005A0030;
    id v89 = [a1 displayName];
    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v91 = v35;
    uint64_t v93 = v92;

    *(void *)(v88 + 56) = &type metadata for String;
    *(void *)(v88 + 64) = sub_100073F48();
    *(void *)(v88 + 32) = v90;
    *(void *)(v88 + 40) = v93;
    os_log(_:dso:log:type:_:)();

    goto LABEL_41;
  }
  unint64_t v76 = (char *)v75;
  uint64_t v77 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v77 != 2
    || a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] == 1)
  {
    if (sub_1004E84CC(v76, v33))
    {
      if (objc_msgSend(v76, "doc_isCollaborationInvitation"))
      {
        uint64_t v78 = v35;
        Swift::Bool v79 = FPItem.openInvitationIfPossible()();
        char v80 = (void *)static DOCLog.UI.getter();
        if (v79) {
          static os_log_type_t.default.getter();
        }
        else {
          static os_log_type_t.error.getter();
        }
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = xmmword_1005A0030;
        id v82 = [a1 displayName];
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v85 = v84;

        *(void *)(v81 + 56) = &type metadata for String;
        *(void *)(v81 + 64) = sub_100073F48();
        *(void *)(v81 + 32) = v83;
        *(void *)(v81 + 40) = v85;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_35;
    }
    BOOL v87 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v108 = swift_allocObject();
    *(_OWORD *)(v108 + 16) = xmmword_1005A0030;
    id v109 = [a1 displayName];
    uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v111 = v35;
    uint64_t v113 = v112;

    *(void *)(v108 + 56) = &type metadata for String;
    *(void *)(v108 + 64) = sub_100073F48();
    *(void *)(v108 + 32) = v110;
    *(void *)(v108 + 40) = v113;
    os_log(_:dso:log:type:_:)();

LABEL_41:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_35:
  v206 = v76;
  v205 = a3;
  v197 = a1;
  uint64_t v94 = v209;
  static Logger.UI.getter();
  uint64_t v95 = Logger.logObject.getter();
  os_log_type_t v96 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v95, v96))
  {
    BOOL v97 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v97 = 0;
    _os_log_impl((void *)&_mh_execute_header, v95, v96, "[TAP] [Interaction] Clearing the last selected Item", v97, 2u);
    swift_slowDealloc();
  }

  v211(v94, v207);
  uint64_t v98 = (void **)&v35[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
  swift_beginAccess();
  char v99 = *v98;
  *uint64_t v98 = 0;
  v209 = v35;
  sub_10013FFF4(v99);

  v211 = (void (*)(char *, void *))swift_allocObject();
  uint64_t v100 = v205;
  swift_unknownObjectWeakInit();
  uint64_t v101 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  unsigned __int8 v102 = [v33 useSharedQuickLook];
  uint64_t v103 = *(void *)v77;
  BOOL v104 = *(void **)&v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24];
  uint64_t v105 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected;
  char v106 = v100[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected];
  v207 = v104;
  if ((v204 & 1) != 0 && [v33 useSharedQuickLook]) {
    unsigned __int8 v107 = 1;
  }
  else {
    unsigned __int8 v107 = [v33 skipDownload];
  }
  *(void *)&long long v213 = Strong;
  *((void *)&v213 + 1) = sub_10021E38C;
  *(void *)&long long v214 = v211;
  *((void *)&v214 + 1) = sub_10021E394;
  *(void *)&long long v215 = v101;
  BYTE8(v215) = v204 & 1;
  BYTE9(v215) = v102;
  BYTE10(v215) = v103 == 2;
  *(void *)&long long v216 = v104;
  BYTE8(v216) = v106;
  BYTE9(v216) = v107;
  v217 = v205;
  BOOL v114 = *(void *)v77 == 2;
  v208 = (char *)v101;
  int v192 = v204 & 1;
  if (v114 && (v205[v105] & 1) == 0)
  {
    uint64_t v118 = v205;
    swift_retain();
    swift_retain();
    unsigned int v193 = 0;
    Swift::Int v117 = v197;
  }
  else
  {
    unint64_t v115 = v205;
    swift_retain();
    swift_retain();
    unsigned int v116 = [v33 shouldOpenInApp];
    Swift::Int v117 = v197;
    if (v116 && ([v197 isFolder] & 1) == 0) {
      unsigned int v193 = [v117 isExternalDownloadPlaceholder] ^ 1;
    }
    else {
      unsigned int v193 = 0;
    }
  }
  uint64_t v196 = static DOCLog.UI.getter();
  LODWORD(v195) = static os_log_type_t.default.getter();
  uint64_t v119 = sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v120 = swift_allocObject();
  *(_OWORD *)(v120 + 16) = xmmword_10059B760;
  id v121 = [v117 displayName];
  uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v124 = v123;

  *(void *)(v120 + 56) = &type metadata for String;
  unint64_t v125 = sub_100073F48();
  uint64_t v126 = v117;
  unint64_t v127 = v125;
  *(void *)(v120 + 32) = v122;
  *(void *)(v120 + 40) = v124;
  unsigned int v128 = v193;
  uint64_t v129 = 20302;
  if (v193) {
    uint64_t v129 = 5457241;
  }
  unint64_t v130 = 0xE200000000000000;
  *(void *)(v120 + 96) = &type metadata for String;
  *(void *)(v120 + 104) = v125;
  if (v128) {
    unint64_t v130 = 0xE300000000000000;
  }
  *(void *)(v120 + 64) = v125;
  *(void *)(v120 + 72) = v129;
  *(void *)(v120 + 80) = v130;
  Swift::Int v131 = (void *)v196;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v132 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  uint64_t v195 = v119;
  uint64_t v133 = swift_allocObject();
  long long v194 = xmmword_1005A0030;
  *(_OWORD *)(v133 + 16) = xmmword_1005A0030;
  id v134 = [v126 displayName];
  uint64_t v135 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v137 = v136;

  *(void *)(v133 + 56) = &type metadata for String;
  *(void *)(v133 + 64) = v127;
  uint64_t v196 = v127;
  *(void *)(v133 + 32) = v135;
  *(void *)(v133 + 40) = v137;
  if (!v128)
  {
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    v178 = v209;
    sub_10027F3E8(v197, (uint64_t)&v213);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    sub_1000A7258((uint64_t)sub_10021E38C);
    sub_1000A7258((uint64_t)sub_10021E394);

    uint64_t v86 = &v218;
    goto LABEL_33;
  }
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v138 = *v50;
  uint64_t v139 = v206;
  id *v50 = v206;
  Swift::Int v140 = v139;
  uint64_t v141 = v209;
  sub_1000D7C50(v138);

  v142 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  uint64_t v143 = swift_allocObject();
  *(_OWORD *)(v143 + 16) = v194;
  id v144 = [v197 displayName];
  uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v147 = v146;

  uint64_t v148 = v196;
  *(void *)(v143 + 56) = &type metadata for String;
  *(void *)(v143 + 64) = v148;
  *(void *)(v143 + 32) = v145;
  *(void *)(v143 + 40) = v147;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if ([v33 forPickingDocuments]) {
    FPItem.bumpLastOpenDate(delay:)(3.0);
  }
  uint64_t v149 = swift_allocObject();
  Swift::Int v150 = v205;
  swift_unknownObjectWeakInit();
  uint64_t v151 = swift_allocObject();
  v152 = v197;
  *(void *)(v151 + 16) = v149;
  *(void *)(v151 + 24) = v152;
  *(void *)(v151 + 32) = v141;
  *(void *)(v151 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
  *(void *)(v151 + 48) = 0;
  *(void *)(v151 + 56) = v140;
  long long v153 = v216;
  *(_OWORD *)(v151 + 96) = v215;
  *(_OWORD *)(v151 + 112) = v153;
  *(void *)(v151 + 128) = v217;
  long long v154 = v214;
  *(_OWORD *)(v151 + 64) = v213;
  *(_OWORD *)(v151 + 80) = v154;
  *(unsigned char *)(v151 + 136) = v192;
  id v155 = v152;
  v206 = v140;
  swift_retain();
  v209 = v141;
  swift_unknownObjectRetain();
  sub_1000C0640((uint64_t)sub_10021E38C);
  sub_1000C0640((uint64_t)sub_10021E394);
  v207 = v207;
  v205 = v150;
  id v156 = [v155 nodeURL];
  uint64_t v157 = v202;
  if (v156)
  {
    v158 = v156;
    v159 = v200;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v160 = v203;
    v161 = *(void (**)(void (*)(uint64_t, void, uint64_t, uint64_t), char *, uint64_t))(v203 + 32);
    uint64_t v162 = (uint64_t)v201;
    v161(v201, v159, v157);
    v163 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v160 + 56);
    v163(v162, 0, 1, v157);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48))(v162, 1, v157) != 1)
    {
      v161((void (*)(uint64_t, void, uint64_t, uint64_t))v199, (char *)v162, v157);
      uint64_t v164 = static DOCLog.UI.getter();
      v201 = v163;
      v165 = (void *)v164;
      LODWORD(v200) = static os_log_type_t.default.getter();
      uint64_t v166 = swift_allocObject();
      *(_OWORD *)(v166 + 16) = v194;
      id v167 = [v155 displayName];
      uint64_t v168 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v170 = v169;

      uint64_t v171 = v196;
      *(void *)(v166 + 56) = &type metadata for String;
      *(void *)(v166 + 64) = v171;
      *(void *)(v166 + 32) = v168;
      *(void *)(v166 + 40) = v170;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v172 = v203;
      uint64_t v173 = (uint64_t)v198;
      v174 = v199;
      (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v198, v199, v157);
      v201(v173, 0, 1, v157);
      v175 = v155;
      v176 = v209;
      v177 = v206;
      sub_100203C74(v173, 0, v149, v175, v209, v206, (uint64_t)&v213, v204 & 1);
      swift_unknownObjectRelease();
      swift_release();
      sub_1000A7258((uint64_t)sub_10021E38C);
      sub_1000A7258((uint64_t)sub_10021E394);
      swift_release();
      swift_release();

      swift_release();
      sub_1000CBBA4(v173, &qword_1007076B0);
      (*(void (**)(char *, uint64_t))(v172 + 8))(v174, v157);

      return;
    }
  }
  else
  {
    uint64_t v162 = (uint64_t)v201;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v203 + 56))(v201, 1, 1, v202);
  }
  swift_release();
  sub_1000CBBA4(v162, &qword_1007076B0);
  v179 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  uint64_t v180 = swift_allocObject();
  *(_OWORD *)(v180 + 16) = v194;
  id v181 = [v155 displayName];
  uint64_t v182 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v184 = v183;

  uint64_t v185 = v196;
  *(void *)(v180 + 56) = &type metadata for String;
  *(void *)(v180 + 64) = v185;
  *(void *)(v180 + 32) = v182;
  *(void *)(v180 + 40) = v184;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v186 = [self defaultManager];
  v187 = (void *)swift_allocObject();
  v187[2] = v155;
  v187[3] = sub_10021E3A0;
  v187[4] = v151;
  aBlock[4] = sub_1002229AC;
  aBlock[5] = v187;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6B50;
  aBlock[3] = &unk_100697B68;
  v188 = _Block_copy(aBlock);
  id v189 = v155;
  swift_retain();
  swift_release();
  v190 = v206;
  [v186 fetchURLForItem:v206 completionHandler:v188];
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  sub_1000A7258((uint64_t)sub_10021E38C);
  sub_1000A7258((uint64_t)sub_10021E394);
  swift_release();

  _Block_release(v188);
}

void sub_100201FD8(void *a1, int a2, void (*a3)(void), uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v211 = a4;
  v212 = a3;
  int v206 = a2;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v199 = &v191[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v13 = &v191[-v12];
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  v201 = &v191[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  v200 = &v191[-v18];
  uint64_t v19 = (void *)type metadata accessor for Logger();
  uint64_t v20 = *(v19 - 1);
  uint64_t v21 = __chkstk_darwin(v19);
  v205 = &v191[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  v208 = &v191[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t Strong = &v191[-v26];
  __chkstk_darwin(v25);
  id v28 = &v191[-v27];
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  LODWORD(v210) = v30;
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v204 = v14;
  uint64_t v203 = v15;
  uint64_t v202 = v13;
  uint64_t v213 = v20;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    v198 = (char *)swift_slowAlloc();
    *(void *)&long long v215 = v198;
    *(_DWORD *)uint64_t v32 = 136315394;
    aBlock[0] = sub_10009B0E4(0xD000000000000051, 0x80000001005DC190, (uint64_t *)&v215);
    v207 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2080;
    uint64_t v197 = v32 + 14;
    id v33 = [a1 displayName];
    uint64_t v34 = a6;
    uint64_t v35 = a1;
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v37 = v19;
    unint64_t v39 = v38;

    uint64_t v40 = v36;
    a1 = v35;
    a6 = v34;
    aBlock[0] = sub_10009B0E4(v40, v39, (uint64_t *)&v215);
    a5 = v207;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    uint64_t v19 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v210, "%s [TAP] [Interaction] Validating selection of item %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v210 = *(uint64_t (**)(unsigned char *, char *))(v213 + 8);
    v210(v28, (char *)v37);
  }
  else
  {

    swift_unknownObjectRelease_n();
    v210 = *(uint64_t (**)(unsigned char *, char *))(v20 + 8);
    v210(v28, (char *)v19);
  }
  uint64_t v41 = *(void **)&a5[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  id v42 = [v41 sceneIdentifier];
  unint64_t v43 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v42);

  uint64_t v44 = self;
  id v45 = [v41 sceneIdentifier];
  id v46 = [v44 globalTabbedBrowserControllerForIdentifier:v45];

  if (v46)
  {
    id v47 = [v46 activeDocumentCreationIntent];

    if (v47)
    {
      id v48 = [a1 displayName];
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      uint64_t v52 = Strong;
      static Logger.UI.getter();
      swift_bridgeObjectRetain();
      unint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v53, v54))
      {
        v207 = (char *)v19;
        id v55 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v215 = swift_slowAlloc();
        *(_DWORD *)id v55 = 136315138;
        swift_bridgeObjectRetain();
        aBlock[0] = sub_10009B0E4(v49, v51, (uint64_t *)&v215);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "[TAP] [Interaction] An item, '%s', was selected while there is UIP document creation in progress. Bailing out.", v55, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v56 = Strong;
        uint64_t v57 = v207;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        id v56 = v52;
        uint64_t v57 = (char *)v19;
      }
      uint64_t v82 = v210(v56, v57);
      goto LABEL_41;
    }
  }
  v207 = (char *)v19;
  id v58 = (id *)&v43[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  if (!*v58)
  {
    if (([a1 isTrashed] & 1) != 0
      || (uint64_t v72 = &a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration],
          v72[*(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 36)] == 1))
    {
      if (([a1 isFolder] & 1) == 0)
      {
        NSString v73 = &a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess();
        if (*(void *)v73 != 2
          || a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] == 1)
        {
          BOOL v74 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.default.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v75 = swift_allocObject();
          *(_OWORD *)(v75 + 16) = xmmword_1005A0030;
          id v76 = [a1 displayName];
          uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = a1;
          uint64_t v80 = v79;

          *(void *)(v75 + 56) = &type metadata for String;
          *(void *)(v75 + 64) = sub_100073F48();
          *(void *)(v75 + 32) = v77;
          *(void *)(v75 + 40) = v80;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          NSString v81 = [v78 displayName];
          if (!v81)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v81 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          DOCAlertUserTrashedFileCanNotBeOpened();

          goto LABEL_41;
        }
      }
    }
    uint64_t v84 = DOCNode.fpfs_syncFetchFPItem()();
    if (v84)
    {
      uint64_t v85 = (void *)v84;
      uint64_t v196 = a1;
      uint64_t v86 = &a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      if (*(void *)v86 == 2
        && a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] != 1)
      {
        goto LABEL_34;
      }
      if (sub_1004E84CC(v85, v41))
      {
        if (objc_msgSend(v85, "doc_isCollaborationInvitation"))
        {
          Swift::Bool v87 = FPItem.openInvitationIfPossible()();
          uint64_t v88 = (void *)static DOCLog.UI.getter();
          if (v87) {
            static os_log_type_t.default.getter();
          }
          else {
            static os_log_type_t.error.getter();
          }
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v89 = swift_allocObject();
          *(_OWORD *)(v89 + 16) = xmmword_1005A0030;
          id v90 = [v196 displayName];
          uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v93 = v92;

          *(void *)(v89 + 56) = &type metadata for String;
          *(void *)(v89 + 64) = sub_100073F48();
          *(void *)(v89 + 32) = v91;
          *(void *)(v89 + 40) = v93;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
LABEL_34:
        v208 = v85;
        uint64_t v193 = a6;
        uint64_t v101 = v205;
        static Logger.UI.getter();
        unsigned __int8 v102 = Logger.logObject.getter();
        os_log_type_t v103 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v102, v103))
        {
          BOOL v104 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)BOOL v104 = 0;
          _os_log_impl((void *)&_mh_execute_header, v102, v103, "[TAP] [Interaction] Clearing the last selected Item", v104, 2u);
          swift_slowDealloc();
        }

        v210(v101, v207);
        uint64_t v105 = (void **)&v43[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
        swift_beginAccess();
        char v106 = *v105;
        *uint64_t v105 = 0;
        sub_10013FFF4(v106);

        v210 = (uint64_t (*)(unsigned char *, char *))swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v213 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
        unsigned __int8 v107 = [v41 useSharedQuickLook];
        uint64_t v108 = a5;
        uint64_t v109 = *(void *)v86;
        uint64_t v110 = *(void **)&v108[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24];
        uint64_t v111 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected;
        v207 = v108;
        char v112 = v108[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected];
        v205 = v110;
        if ((v206 & 1) != 0 && [v41 useSharedQuickLook]) {
          unsigned __int8 v113 = 1;
        }
        else {
          unsigned __int8 v113 = [v41 skipDownload];
        }
        *(void *)&long long v215 = Strong;
        *((void *)&v215 + 1) = sub_10021E38C;
        *(void *)&long long v216 = v210;
        *((void *)&v216 + 1) = sub_10021E394;
        *(void *)&long long v217 = v213;
        BYTE8(v217) = v206 & 1;
        BYTE9(v217) = v107;
        BYTE10(v217) = v109 == 2;
        *(void *)&long long v218 = v110;
        BYTE8(v218) = v112;
        BYTE9(v218) = v113;
        uint64_t v219 = v207;
        BOOL v119 = *(void *)v86 == 2;
        v198 = v43;
        int v192 = v206 & 1;
        if (v119 && (v207[v111] & 1) == 0)
        {
          uint64_t v123 = v207;
          swift_retain();
          swift_retain();
          LODWORD(v194) = 0;
          uint64_t v122 = v196;
        }
        else
        {
          uint64_t v120 = v207;
          swift_retain();
          swift_retain();
          unsigned int v121 = [v41 shouldOpenInApp];
          uint64_t v122 = v196;
          if (v121 && ([v196 isFolder] & 1) == 0) {
            LODWORD(v194) = [v122 isExternalDownloadPlaceholder] ^ 1;
          }
          else {
            LODWORD(v194) = 0;
          }
        }
        uint64_t v197 = static DOCLog.UI.getter();
        LODWORD(v195) = static os_log_type_t.default.getter();
        uint64_t v124 = sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v125 = swift_allocObject();
        *(_OWORD *)(v125 + 16) = xmmword_10059B760;
        id v126 = [v122 displayName];
        uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v129 = v128;

        *(void *)(v125 + 56) = &type metadata for String;
        unint64_t v130 = sub_100073F48();
        Swift::Int v131 = v122;
        uint64_t v132 = (unsigned char *)v130;
        *(void *)(v125 + 32) = v127;
        *(void *)(v125 + 40) = v129;
        int v133 = (int)v194;
        uint64_t v134 = 20302;
        if (v194) {
          uint64_t v134 = 5457241;
        }
        unint64_t v135 = 0xE200000000000000;
        *(void *)(v125 + 96) = &type metadata for String;
        *(void *)(v125 + 104) = v130;
        if (v133) {
          unint64_t v135 = 0xE300000000000000;
        }
        *(void *)(v125 + 64) = v130;
        *(void *)(v125 + 72) = v134;
        *(void *)(v125 + 80) = v135;
        uint64_t v136 = (void *)v197;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v137 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.default.getter();
        uint64_t v197 = v124;
        uint64_t v138 = swift_allocObject();
        long long v195 = xmmword_1005A0030;
        *(_OWORD *)(v138 + 16) = xmmword_1005A0030;
        id v139 = [v131 displayName];
        uint64_t v140 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v142 = v141;

        *(void *)(v138 + 56) = &type metadata for String;
        *(void *)(v138 + 64) = v132;
        *(void *)(v138 + 32) = v140;
        *(void *)(v138 + 40) = v142;
        if (v133)
        {
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          id v143 = *v58;
          id v144 = v208;
          *id v58 = v208;
          id v145 = v144;
          sub_1000D7C50(v143);

          uint64_t v146 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.default.getter();
          uint64_t v147 = swift_allocObject();
          *(_OWORD *)(v147 + 16) = v195;
          id v148 = [v196 displayName];
          uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v151 = v150;

          *(void *)(v147 + 56) = &type metadata for String;
          *(void *)(v147 + 64) = v132;
          *(void *)(v147 + 32) = v149;
          *(void *)(v147 + 40) = v151;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          if ([v41 forPickingDocuments]) {
            FPItem.bumpLastOpenDate(delay:)(3.0);
          }
          v208 = v132;
          uint64_t v152 = swift_allocObject();
          long long v153 = v207;
          swift_unknownObjectWeakInit();
          uint64_t v154 = swift_allocObject();
          id v155 = v196;
          *(void *)(v154 + 16) = v152;
          *(void *)(v154 + 24) = v155;
          id v156 = v198;
          uint64_t v157 = v212;
          *(void *)(v154 + 32) = v198;
          *(void *)(v154 + 40) = v157;
          *(void *)(v154 + 48) = v211;
          *(void *)(v154 + 56) = v145;
          long long v158 = v218;
          *(_OWORD *)(v154 + 96) = v217;
          *(_OWORD *)(v154 + 112) = v158;
          *(void *)(v154 + 128) = v219;
          long long v159 = v216;
          *(_OWORD *)(v154 + 64) = v215;
          *(_OWORD *)(v154 + 80) = v159;
          *(unsigned char *)(v154 + 136) = v192;
          swift_unknownObjectRetain();
          id v194 = v145;
          swift_retain();
          uint64_t v160 = v156;
          swift_retain();
          swift_unknownObjectRetain();
          sub_1000C0640((uint64_t)sub_10021E38C);
          sub_1000C0640((uint64_t)sub_10021E394);
          v205 = v205;
          v207 = v153;
          id v161 = [v155 nodeURL];
          v198 = v160;
          if (v161)
          {
            uint64_t v162 = v161;
            v163 = v201;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v164 = v203;
            v165 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v203 + 32);
            uint64_t v166 = (uint64_t)v202;
            uint64_t v167 = v204;
            v165(v202, v163, v204);
            uint64_t v168 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v164 + 56);
            v168(v166, 0, 1, v167);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v166, 1, v167) != 1)
            {
              v165(v200, (unsigned char *)v166, v167);
              uint64_t v169 = (void *)static DOCLog.UI.getter();
              LODWORD(v202) = static os_log_type_t.default.getter();
              uint64_t v170 = swift_allocObject();
              *(_OWORD *)(v170 + 16) = v195;
              id v171 = [v196 displayName];
              uint64_t v172 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v174 = v173;

              v175 = v208;
              *(void *)(v170 + 56) = &type metadata for String;
              *(void *)(v170 + 64) = v175;
              *(void *)(v170 + 32) = v172;
              *(void *)(v170 + 40) = v174;
              os_log(_:dso:log:type:_:)();

              swift_bridgeObjectRelease();
              uint64_t v176 = (uint64_t)v199;
              v177 = v200;
              uint64_t v178 = v204;
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v164 + 16))(v199, v200, v204);
              v168(v176, 0, 1, v178);
              unint64_t v43 = v198;
              v179 = v194;
              sub_100204240(v176, 0, v152, v196, v198, v212, v211, v194, (uint64_t)&v215, v206 & 1);
              swift_unknownObjectRelease();
              swift_release();
              sub_1000A7258((uint64_t)sub_10021E38C);
              sub_1000A7258((uint64_t)sub_10021E394);
              swift_release();
              swift_release();

              swift_release();
              sub_1000CBBA4(v176, &qword_1007076B0);
              (*(void (**)(unsigned char *, uint64_t))(v164 + 8))(v177, v178);
              goto LABEL_42;
            }
          }
          else
          {
            uint64_t v166 = (uint64_t)v202;
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v203 + 56))(v202, 1, 1, v204);
          }
          swift_release();
          sub_1000CBBA4(v166, &qword_1007076B0);
          uint64_t v180 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.default.getter();
          uint64_t v181 = swift_allocObject();
          *(_OWORD *)(v181 + 16) = v195;
          uint64_t v182 = v196;
          id v183 = [v196 displayName];
          uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v186 = v185;

          v187 = v208;
          *(void *)(v181 + 56) = &type metadata for String;
          *(void *)(v181 + 64) = v187;
          *(void *)(v181 + 32) = v184;
          *(void *)(v181 + 40) = v186;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          unint64_t v43 = (char *)[self defaultManager];
          v188 = (void *)swift_allocObject();
          v188[2] = v182;
          v188[3] = sub_10021E3A0;
          v188[4] = v154;
          aBlock[4] = sub_10021E3AC;
          aBlock[5] = v188;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1001B6B50;
          aBlock[3] = &unk_1006963D0;
          id v189 = _Block_copy(aBlock);
          swift_unknownObjectRetain();
          swift_retain();
          swift_release();
          v190 = v194;
          [v43 fetchURLForItem:v194 completionHandler:v189];
          swift_unknownObjectRelease();
          swift_release();
          swift_release();

          sub_1000A7258((uint64_t)sub_10021E38C);
          sub_1000A7258((uint64_t)sub_10021E394);
          swift_release();

          _Block_release(v189);
          goto LABEL_42;
        }
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        unint64_t v43 = v198;
        sub_1004E78E0(v196, (uint64_t)&v215, (uint64_t)v198, v193);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();

        sub_1000A7258((uint64_t)sub_10021E38C);
        sub_1000A7258((uint64_t)sub_10021E394);

        goto LABEL_41;
      }
      uint64_t v95 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v114 = swift_allocObject();
      *(_OWORD *)(v114 + 16) = xmmword_1005A0030;
      id v115 = [v196 displayName];
      uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v118 = v117;

      *(void *)(v114 + 56) = &type metadata for String;
      *(void *)(v114 + 64) = sub_100073F48();
      *(void *)(v114 + 32) = v116;
      *(void *)(v114 + 40) = v118;
      os_log(_:dso:log:type:_:)();
    }
    else
    {
      uint64_t v95 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = xmmword_1005A0030;
      id v97 = [a1 displayName];
      uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v100 = v99;

      *(void *)(v96 + 56) = &type metadata for String;
      *(void *)(v96 + 64) = sub_100073F48();
      *(void *)(v96 + 32) = v98;
      *(void *)(v96 + 40) = v100;
      os_log(_:dso:log:type:_:)();
    }

    uint64_t v82 = swift_bridgeObjectRelease();
LABEL_41:
    ((void (*)(uint64_t))v212)(v82);
    goto LABEL_42;
  }
  v198 = v43;
  id v59 = [a1 displayName];
  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v62 = v61;

  id v63 = *v58;
  id v64 = *v58;
  uint64_t v65 = v208;
  static Logger.UI.getter();
  id v66 = v64;
  swift_bridgeObjectRetain();
  uint64_t v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v70 = (void *)swift_slowAlloc();
    *(void *)&long long v215 = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 136315394;
    swift_bridgeObjectRetain();
    aBlock[0] = sub_10009B0E4(v60, v62, (uint64_t *)&v215);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v69 + 12) = 2112;
    if (v63)
    {
      aBlock[0] = v66;
      id v71 = v66;
    }
    else
    {
      aBlock[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v70 = v63;

    _os_log_impl((void *)&_mh_execute_header, v67, v68, "[TAP] [Interaction] An item, '%s', was selected while another is trying to be opened: '%@'. Bailing out.", (uint8_t *)v69, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v83 = v208;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v83 = v65;
  }
  uint64_t v94 = v210(v83, v207);
  ((void (*)(uint64_t))v212)(v94);
  unint64_t v43 = v198;
LABEL_42:
}

void sub_100203C74(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void *a6, uint64_t a7, int a8)
{
  int v58 = a8;
  id v59 = a6;
  id v60 = a4;
  unint64_t v61 = a5;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v55 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = (void *)Strong;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v23 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_10059B760;
      id v25 = [v60 displayName];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_100073F48();
      *(void *)(v24 + 32) = v26;
      *(void *)(v24 + 40) = v28;
      uint64_t v29 = _convertErrorToNSError(_:)();
      *(void *)(v24 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v24 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v24 + 72) = v29;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      os_log_type_t v30 = v22;
      BOOL v31 = (void **)&v61[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      uint64_t v32 = *v31;
      *BOOL v31 = 0;
      sub_1000D7C50(v32);

      swift_errorRelease();
    }
    else
    {
      sub_1000CBC00(a1, (uint64_t)v13, &qword_1007076B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      {
        sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
        id v33 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.error.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1005A0030;
        id v35 = [v60 displayName];
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        *(void *)(v34 + 56) = &type metadata for String;
        *(void *)(v34 + 64) = sub_100073F48();
        *(void *)(v34 + 32) = v36;
        *(void *)(v34 + 40) = v38;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        unint64_t v39 = v22;
        uint64_t v40 = (void **)&v61[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess();
        uint64_t v41 = *v40;
        *uint64_t v40 = 0;
        sub_1000D7C50(v41);
      }
      else
      {
        id v56 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v56(v20, v13, v14);
        uint64_t v42 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
        unint64_t v43 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        id v57 = v22;
        unint64_t v44 = (v16 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
        id v45 = (char *)swift_allocObject();
        id v46 = v60;
        *((void *)v45 + 2) = v42;
        *((void *)v45 + 3) = v46;
        *((void *)v45 + 4) = v61;
        *((void *)v45 + 5) = DOCSplitBrowserViewController.didCommitPreview(of:);
        id v47 = v59;
        *((void *)v45 + 6) = 0;
        *((void *)v45 + 7) = v47;
        v56(&v45[v43], v18, v14);
        id v48 = &v45[v44];
        long long v49 = *(_OWORD *)(a7 + 48);
        *((_OWORD *)v48 + 2) = *(_OWORD *)(a7 + 32);
        *((_OWORD *)v48 + 3) = v49;
        *((void *)v48 + 8) = *(void *)(a7 + 64);
        long long v50 = *(_OWORD *)(a7 + 16);
        *(_OWORD *)id v48 = *(_OWORD *)a7;
        *((_OWORD *)v48 + 1) = v50;
        v48[72] = v58 & 1;
        aBlock[4] = sub_10021E3BC;
        aBlock[5] = v45;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_100697BB8;
        unint64_t v51 = _Block_copy(aBlock);
        id v52 = v60;
        unint64_t v53 = v61;
        id v54 = v59;
        sub_10021E3C0((void *)a7);
        swift_release();
        DOCRunInMainThread();
        _Block_release(v51);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      }
    }
  }
}

void sub_100204240(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char *a5, void (*a6)(void), uint64_t a7, void *a8, uint64_t a9, unsigned __int8 a10)
{
  id v60 = a8;
  unint64_t v61 = a6;
  id v62 = a4;
  id v63 = a5;
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v56 - v21;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = (void *)Strong;
    if (a2)
    {
      swift_errorRetain();
      id v25 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10059B760;
      id v27 = [v62 displayName];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      *(void *)(v26 + 56) = &type metadata for String;
      *(void *)(v26 + 64) = sub_100073F48();
      *(void *)(v26 + 32) = v28;
      *(void *)(v26 + 40) = v30;
      uint64_t v31 = _convertErrorToNSError(_:)();
      *(void *)(v26 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v26 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v26 + 72) = v31;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v32 = (void **)&v63[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      id v33 = *v32;
      void *v32 = 0;
      sub_1000D7C50(v33);

      v61();
      swift_errorRelease();
    }
    else
    {
      uint64_t v59 = a7;
      sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {
        sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
        uint64_t v34 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.error.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1005A0030;
        id v36 = [v62 displayName];
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v38;

        *(void *)(v35 + 56) = &type metadata for String;
        *(void *)(v35 + 64) = sub_100073F48();
        *(void *)(v35 + 32) = v37;
        *(void *)(v35 + 40) = v39;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v40 = (void **)&v63[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess();
        uint64_t v41 = *v40;
        *uint64_t v40 = 0;
        sub_1000D7C50(v41);

        v61();
      }
      else
      {
        int v58 = a10;
        id v56 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
        uint64_t v57 = a9;
        v56(v22, v15, v16);
        uint64_t v42 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
        unint64_t v43 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        unint64_t v44 = (v18 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
        id v45 = (char *)swift_allocObject();
        id v46 = v62;
        *((void *)v45 + 2) = v42;
        *((void *)v45 + 3) = v46;
        id v47 = v61;
        *((void *)v45 + 4) = v63;
        *((void *)v45 + 5) = v47;
        id v48 = v60;
        *((void *)v45 + 6) = v59;
        *((void *)v45 + 7) = v48;
        v56(&v45[v43], v20, v16);
        long long v49 = &v45[v44];
        uint64_t v50 = v57;
        long long v51 = *(_OWORD *)(v57 + 48);
        *((_OWORD *)v49 + 2) = *(_OWORD *)(v57 + 32);
        *((_OWORD *)v49 + 3) = v51;
        *((void *)v49 + 8) = *(void *)(v50 + 64);
        long long v52 = *(_OWORD *)(v50 + 16);
        *(_OWORD *)long long v49 = *(_OWORD *)v50;
        *((_OWORD *)v49 + 1) = v52;
        v49[72] = v58 & 1;
        aBlock[4] = sub_10021E3BC;
        aBlock[5] = v45;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_100696420;
        unint64_t v53 = _Block_copy(aBlock);
        swift_unknownObjectRetain();
        id v54 = v63;
        swift_retain();
        id v55 = v60;
        sub_10021E3C0((void *)v50);
        swift_release();
        DOCRunInMainThread();
        _Block_release(v53);

        (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
      }
    }
  }
}

uint64_t sub_10020482C(void *a1, void *a2, uint64_t a3, unint64_t a4, unsigned char *a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  id v14 = a1;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  int v17 = v16;
  BOOL v18 = os_log_type_enabled(v15, v16);
  uint64_t v50 = a3;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v48 = v10;
    uint64_t v20 = v19;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v52 = v47;
    *(_DWORD *)uint64_t v20 = 136315650;
    long long v49 = a5;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_10009B0E4(a3, a4, &v52);
    os_log_t v46 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v51 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DC510, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2080;
    v44[1] = v20 + 24;
    unint64_t v21 = a4;
    uint64_t v22 = a2;
    id v23 = [v14 description];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v45 = v17;
    id v25 = v14;
    uint64_t v26 = v11;
    unint64_t v28 = v27;

    a2 = v22;
    a4 = v21;
    uint64_t v51 = sub_10009B0E4(v24, v28, &v52);
    a5 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v29 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v45, "%s > %s: item: %s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v48);
    id v14 = v25;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 1;
  type metadata accessor for DOCInlineRenameController();
  uint64_t v30 = swift_allocObject();
  id v31 = v14;
  id v32 = a2;
  id v33 = a5;
  uint64_t v34 = sub_10020AA64((uint64_t)v33, (uint64_t)v32, (uint64_t)v31, v30);

  *(unsigned char *)(v34 + 40) = 1;
  uint64_t v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  *(void *)&v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = v34;
  swift_retain();
  swift_release();
  if (!*(void *)&v33[v35]) {
    v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  }
  v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  id v36 = (uint64_t (*)())swift_allocObject();
  uint64_t v37 = v50;
  *((void *)v36 + 2) = v50;
  *((void *)v36 + 3) = a4;
  *((void *)v36 + 4) = v34;
  *((void *)v36 + 5) = v33;
  if (*(void *)&v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    uint64_t v38 = (uint64_t (**)())&v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    uint64_t v39 = *(void *)&v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    char *v38 = sub_10021E9C4;
    v38[1] = v36;
    swift_bridgeObjectRetain();
    uint64_t v40 = v33;
    return sub_1000A7258(v39);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v42 = v33;
    swift_retain_n();
    unint64_t v43 = v42;
    sub_1001FC4CC(v37, a4, v34, (uint64_t)v43);

    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_100204CC0(void *a1, void *a2, uint64_t a3, unint64_t a4, unsigned char *a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  os_log_type_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  int v47 = v17;
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v48 = a3;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v44 = v13;
    uint64_t v20 = v19;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v50 = v43;
    *(_DWORD *)uint64_t v20 = 136315650;
    int v45 = a2;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_10009B0E4(a3, a4, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v46 = a6;
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v49 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DC510, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2080;
    unint64_t v21 = a4;
    uint64_t v22 = a5;
    id v23 = [a1 description:v20 + 24];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v12;
    uint64_t v25 = v24;
    unint64_t v27 = v26;

    a5 = v22;
    a4 = v21;
    a2 = v45;
    uint64_t v49 = sub_10009B0E4(v25, v27, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v47, "%s > %s: item: %s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v42);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 1;
  type metadata accessor for DOCInlineRenameController();
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectRetain();
  id v29 = a2;
  uint64_t v30 = a5;
  uint64_t v31 = sub_1004274D8((uint64_t)v30, (uint64_t)v29, (uint64_t)a1, v28);

  swift_unknownObjectRelease();
  *(unsigned char *)(v31 + 40) = 1;
  uint64_t v32 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  *(void *)&v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = v31;
  swift_retain();
  swift_release();
  if (!*(void *)&v30[v32]) {
    v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  }
  v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  id v33 = (uint64_t (*)())swift_allocObject();
  uint64_t v34 = v48;
  *((void *)v33 + 2) = v48;
  *((void *)v33 + 3) = a4;
  *((void *)v33 + 4) = v31;
  *((void *)v33 + 5) = v30;
  if (*(void *)&v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    uint64_t v35 = (uint64_t (**)())&v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    uint64_t v36 = *(void *)&v30[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
    *uint64_t v35 = sub_10022258C;
    v35[1] = v33;
    swift_bridgeObjectRetain();
    uint64_t v37 = v30;
    return sub_1000A7258(v36);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v39 = v30;
    swift_retain_n();
    uint64_t v40 = v39;
    sub_1001FC4CC(v34, a4, v31, (uint64_t)v40);

    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

void sub_100205164(unsigned char *a1)
{
  a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v1 = [a1 viewIfLoaded];
  id v2 = [v1 window];

  if (v2) {
    sub_1000A6988();
  }
}

void sub_1002051D8()
{
}

void sub_100205200()
{
}

uint64_t sub_100205228(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*a4;
  unint64_t v14 = sub_10017BB10(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = (void *)*a4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1003587F4();
    goto LABEL_7;
  }
  sub_10034EDD8(v17, a3 & 1);
  unint64_t v23 = sub_10017BB10(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*a4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10018AA9C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1002053D0(void *a1, char a2, void *a3, char a4)
{
  if (a2)
  {
    if (a4)
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
      if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14) {
        char v10 = 1;
      }
      else {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    id v6 = a1;
    id v7 = a3;
    char v8 = static NSObject.== infix(_:_:)();

    return v8 & 1;
  }
  char v10 = 0;
  return v10 & 1;
}

uint64_t sub_1002054C4(uint64_t a1, void (*a2)(_OWORD *, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v24 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v24 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v24 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v24 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 48) + 40 * v12;
    uint64_t v21 = *(void *)(v14 + 32);
    long long v15 = *(_OWORD *)(v14 + 16);
    v20[0] = *(_OWORD *)v14;
    v20[1] = v15;
    long long v22 = v20[0];
    long long v23 = v15;
    uint64_t v16 = *(void *)(v13 + 8 * v12);
    sub_10021FE8C((uint64_t)&v22);
    sub_10021FE8C((uint64_t)&v23);
    swift_retain();
    swift_bridgeObjectRetain();
    a2(v20, v16);
    sub_100220180((uint64_t)&v22);
    sub_100220180((uint64_t)&v23);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v24 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v24 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1002056C4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    uint64_t v2 = result;
    uint64_t v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v3 + 16) & 1) == 0)
    {
      id v4 = *(id *)v3;
      unsigned __int8 v5 = [v4 doc_displaysSearchResults];

      if (v5) {
        return 0;
      }
    }
    uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
    if (!v6) {
      return 0;
    }
    id v7 = [v6 searchController];
    if (!v7) {
      return 0;
    }
    int64_t v8 = v7;
    type metadata accessor for DOCSearchController();
    uint64_t v9 = (char *)swift_dynamicCastClass();
    int64_t v10 = v9;
    if (!v9)
    {

      return 0;
    }
    id v11 = [v9 searchBar];
    id v12 = [v11 text];

    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v10[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
    if (!swift_unknownObjectWeakLoadStrong())
    {

      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v15 = *((void *)v14 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 8))(v10, ObjectType, v15);
    uint64_t result = swift_unknownObjectRelease();
    uint64_t v18 = *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex];
    if (v18 >= *(void *)(v17 + 16))
    {

      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if ((v18 & 0x8000000000000000) == 0)
    {
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v19 = String.count.getter();

      swift_unknownObjectRelease();
      if (v19 <= 0)
      {
        swift_unknownObjectRelease();
LABEL_18:
        swift_bridgeObjectRelease();
        return 0;
      }
      return v13;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100205914(unint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  id v63 = a2;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for IndexPath();
  int64_t v8 = *(void (***)(char *, void, uint64_t, uint64_t))(v64 - 8);
  uint64_t v9 = __chkstk_darwin(v64);
  id v54 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)v47 - v11;
  uint64_t v12 = sub_1000CBE70(&qword_10070AD98);
  __chkstk_darwin(v12 - 8);
  id v62 = (void *)((char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v51 = (uint64_t)v47 - v17;
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    if (v18) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_3:
      v47[1] = v3;
      uint64_t v59 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
      unint64_t v60 = a1 & 0xC000000000000001;
      uint64_t v19 = (void (**)(char *, char *, uint64_t))(v8 + 4);
      unint64_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 6);
      v8 += 7;
      uint64_t v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
      id v55 = v19;
      id v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      uint64_t v20 = _swiftEmptyArrayStorage;
      uint64_t v21 = 4;
      int v58 = (id *)a1;
      uint64_t v48 = v8;
      uint64_t v49 = v7;
      while (1)
      {
        uint64_t v3 = v21 - 4;
        if (v60) {
          long long v23 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          long long v23 = (id *)*(id *)(a1 + 8 * v21);
        }
        a1 = (unint64_t)v23;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_24;
        }
        uint64_t v66 = v21 - 3;
        uint64_t v24 = v18;
        uint64_t v25 = v63;
        [v63 loadViewIfNeeded];
        uint64_t result = *(void **)&v25[v59];
        if (!result)
        {
          __break(1u);
          return result;
        }
        uint64_t v65 = v20;
        uint64_t v27 = v14;
        id v28 = [result indexPathForCell:a1];
        if (!v28) {
          break;
        }
        id v29 = v28;
        uint64_t v30 = v54;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v31 = *v55;
        uint64_t v32 = v30;
        uint64_t v33 = v64;
        (*v55)(v7, v32, v64);
        (*v8)(v7, 0, 1, v33);
        if ((*v53)(v7, 1, v33) == 1) {
          goto LABEL_15;
        }
        uint64_t v34 = v50;
        uint64_t v35 = v7;
        uint64_t v36 = v64;
        v31(v50, v35, v64);
        uint64_t v37 = (uint64_t)v62;
        uint64_t v38 = (char *)v62 + *(int *)(v27 + 48);
        unint64_t *v62 = a1;
        uint64_t v39 = v34;
        uint64_t v14 = v27;
        uint64_t v40 = v36;
        id v7 = v49;
        v31(v38, v39, v40);
        int64_t v8 = v48;
        (*v57)(v37, 0, 1, v27);
LABEL_16:
        uint64_t v20 = v65;
        BOOL v41 = (*v56)(v37, 1, v14) == 1;
        uint64_t v18 = v24;
        uint64_t v42 = v37;
        if (v41)
        {
          sub_1000CBBA4(v37, &qword_10070AD98);
          uint64_t v22 = v66;
        }
        else
        {
          uint64_t v43 = v51;
          sub_1000CBE0C(v42, v51, (uint64_t *)&unk_100708EC0);
          sub_1000CBE0C(v43, v61, (uint64_t *)&unk_100708EC0);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v22 = v66;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v20 = (void *)sub_10018EED4(0, v20[2] + 1, 1, (unint64_t)v20);
          }
          unint64_t v46 = v20[2];
          unint64_t v45 = v20[3];
          if (v46 >= v45 >> 1) {
            uint64_t v20 = (void *)sub_10018EED4(v45 > 1, v46 + 1, 1, (unint64_t)v20);
          }
          _OWORD v20[2] = v46 + 1;
          sub_1000CBE0C(v61, (uint64_t)v20+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v46, (uint64_t *)&unk_100708EC0);
        }
        ++v21;
        a1 = (unint64_t)v58;
        if (v22 == v18)
        {
          swift_bridgeObjectRelease();
          return v20;
        }
      }
      (*v8)(v7, 1, 1, v64);
LABEL_15:
      sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007069A0);
      uint64_t v37 = (uint64_t)v62;
      uint64_t v14 = v27;
      (*v57)((uint64_t)v62, 1, 1, v27);

      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

unint64_t sub_100205EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  int64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(a1 + 16);
  v18[2] = a1;
  if (v9)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v10 = v4 + 16;
    uint64_t v24 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v21 = *(void *)(v10 + 56);
    uint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v19 = (void (**)(uint64_t, uint64_t))(v10 - 8);
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    long long v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 40);
    v18[1] = (v10 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v24(v8, v12, v3);
      uint64_t v13 = *v23;
      (*v23)(v8, 0, 1, v3);
      if ((*v22)(v8, 1, v3) == 1) {
        break;
      }
      uint64_t v14 = (uint64_t)v25;
      (*v20)(v25, v8, v3);
      uint64_t v15 = sub_1001BAA44(v14, 0);
      (*v19)(v14, v3);
      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v12 += v21;
      if (!--v9)
      {
        v13(v8, 1, 1, v3);
        break;
      }
    }
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v16(v8, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  return v27;
}

unint64_t sub_1002061BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v26 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 16);
  v19[1] = a1;
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v25 = v12;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v22 = *(void *)(v11 + 56);
    long long v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v20 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    uint64_t v24 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 40);
    v19[0] = (v11 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v25(v9, v13, v4);
      uint64_t v14 = *v24;
      (*v24)(v9, 0, 1, v4);
      if ((*v23)(v9, 1, v4) == 1) {
        break;
      }
      uint64_t v15 = (uint64_t)v26;
      (*v21)(v26, v9, v4);
      uint64_t v16 = sub_1001BAA44(v15, v28);
      (*v20)(v15, v4);
      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v13 += v22;
      if (!--v10)
      {
        v14(v9, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v17(v9, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v29;
}

void *sub_100206488(unint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t))
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = sub_1000CBE70(&qword_10070AD68);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_1000CBE70(&qword_100708EA0);
  uint64_t v22 = *(void *)(v26 - 8);
  uint64_t v8 = __chkstk_darwin(v26);
  uint64_t v25 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v21 = (uint64_t)&v21 - v10;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      unint64_t v24 = a1 & 0xC000000000000001;
      uint64_t v12 = _swiftEmptyArrayStorage;
      uint64_t v13 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48);
      uint64_t v14 = 4;
      unint64_t v23 = a1;
      while (1)
      {
        uint64_t v15 = v14 - 4;
        if (v24)
        {
          a1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v16 = v14 - 3;
          if (__OFADD__(v15, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          a1 = *(void *)(a1 + 8 * v14);
          swift_unknownObjectRetain();
          uint64_t v16 = v14 - 3;
          if (__OFADD__(v15, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        unint64_t v29 = a1;
        sub_1001D1318((void **)&v29, v28, v7);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v12;
        }
        swift_unknownObjectRelease();
        if ((*v13)(v7, 1, v26) == 1)
        {
          sub_1000CBBA4((uint64_t)v7, &qword_10070AD68);
        }
        else
        {
          uint64_t v17 = v21;
          sub_1000CBE0C((uint64_t)v7, v21, &qword_100708EA0);
          sub_1000CBE0C(v17, v25, &qword_100708EA0);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = (void *)sub_10018F404(0, v12[2] + 1, 1, (unint64_t)v12);
          }
          unint64_t v19 = v12[2];
          unint64_t v18 = v12[3];
          if (v19 >= v18 >> 1) {
            uint64_t v12 = (void *)sub_10018F404(v18 > 1, v19 + 1, 1, (unint64_t)v12);
          }
          v12[2] = v19 + 1;
          sub_1000CBE0C(v25, (uint64_t)v12+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19, &qword_100708EA0);
        }
        a1 = v23;
        ++v14;
        if (v16 == v11)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1002067D0(uint64_t a1, void *a2)
{
  id v21 = a2;
  uint64_t v20 = sub_1000CBE70(&qword_100708EA0);
  __chkstk_darwin(v20);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v17[1] = v2;
    uint64_t v9 = (char *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    uint64_t v19 = *(void *)(v4 + 72);
    uint64_t v10 = type metadata accessor for IndexPath();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v12 = (void (**)(char *, uint64_t))(v11 + 8);
    v17[0] = a1;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = *(int *)(v20 + 48);
      uint64_t v14 = &v6[v13];
      *(void *)uint64_t v6 = *(void *)v9;
      v18(&v6[v13], &v9[v13], v10);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*v12)(v14, v10);
      id v16 = [v21 cellForItemAtIndexPath:isa];

      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v9 += v19;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return (void *)v22;
  }
  return result;
}

char *sub_1002069EC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = a2;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v28 - v9;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v29 = (char *)&v28 - v13;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (!v14) {
    goto LABEL_24;
  }
LABEL_3:
  uint64_t v28 = v3;
  unint64_t v36 = a1 & 0xC000000000000001;
  uint64_t v34 = v8;
  uint64_t v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource;
  uint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v30 + 32);
  uint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  id v16 = (char *)_swiftEmptyArrayStorage;
  uint64_t v3 = 4;
  unint64_t v31 = a1;
  uint64_t v33 = v14;
  while (1)
  {
    uint64_t v8 = (char *)(v3 - 4);
    if (v36)
    {
      uint64_t result = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v18 = result;
      uint64_t v19 = v3 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v18 = *(char **)(a1 + 8 * v3);
      uint64_t result = (char *)swift_unknownObjectRetain();
      uint64_t v19 = v3 - 3;
      if (__OFADD__(v8, 1))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    if (!*(void *)(v39 + v35)) {
      break;
    }
    swift_retain();
    uint64_t v20 = (uint64_t)v34;
    sub_1004DD264(v18, (uint64_t)v34);
    swift_release();
    id v21 = *v40;
    if ((*v40)(v20, 1, v10) == 1)
    {
      sub_1000CBBA4(v20, (uint64_t *)&unk_1007069A0);
      uint64_t v22 = 1;
      uint64_t v23 = (uint64_t)v37;
    }
    else
    {
      uint64_t v23 = (uint64_t)v37;
      (*v15)(v37, v20, v10);
      uint64_t v22 = 0;
    }
    (*v32)(v23, v22, 1, v10);
    swift_unknownObjectRelease();
    if (v21(v23, 1, v10) == 1)
    {
      sub_1000CBBA4(v23, (uint64_t *)&unk_1007069A0);
    }
    else
    {
      unint64_t v24 = *v15;
      uint64_t v25 = v29;
      (*v15)(v29, v23, v10);
      v24(v38, (uint64_t)v25, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v16 = (char *)sub_10018F950(0, *((void *)v16 + 2) + 1, 1, (unint64_t)v16);
      }
      unint64_t v27 = *((void *)v16 + 2);
      unint64_t v26 = *((void *)v16 + 3);
      if (v27 >= v26 >> 1) {
        id v16 = (char *)sub_10018F950(v26 > 1, v27 + 1, 1, (unint64_t)v16);
      }
      *((void *)v16 + 2) = v27 + 1;
      v24(&v16[((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v27], (uint64_t)v38, v10);
    }
    a1 = v31;
    ++v3;
    if (v19 == v33)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  __break(1u);
  return result;
}

char *sub_100206E10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v57 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v46 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v48 = (char *)v46 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v54 = (char *)v46 - v15;
  __chkstk_darwin(v14);
  id v63 = (char *)v46 - v16;
  uint64_t v17 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  __chkstk_darwin(v18);
  id v21 = (char *)v46 - v19;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    int v58 = (char *)v46 - v19;
    uint64_t v56 = v20;
    v46[2] = v3;
    int v47 = v11;
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v24 = v6 + 16;
    uint64_t v23 = v25;
    unint64_t v52 = (*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64);
    uint64_t v26 = a1 + v52;
    uint64_t v53 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    uint64_t v51 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
    uint64_t v27 = *(void *)(v24 + 56);
    uint64_t v67 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 40);
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v24 + 16);
    uint64_t v66 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 32);
    unint64_t v60 = (void (**)(char *, uint64_t))(v24 - 8);
    v46[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v61 = (char *)_swiftEmptyArrayStorage;
    uint64_t v62 = v24;
    uint64_t v28 = v63;
    uint64_t v59 = (void (*)(char *, char *, uint64_t))v25;
    while (1)
    {
      uint64_t v64 = v22;
      unint64_t v29 = v58;
      v23(v58, v26, v5);
      uint64_t v30 = *v67;
      (*v67)((uint64_t)v29, 0, 1, v5);
      unint64_t v31 = *v66;
      if ((*v66)(v29, 1, v5) == 1) {
        goto LABEL_29;
      }
      uint64_t v32 = *v65;
      (*v65)(v28, v29, v5);
      uint64_t result = (char *)IndexPath.count.getter();
      if (result != (char *)2) {
        goto LABEL_17;
      }
      uint64_t v34 = *(void **)(v55 + v53);
      if (!v34)
      {
        __break(1u);
        return result;
      }
      if (([v34 isGathering] & 1) != 0 || (*(unsigned char *)(v55 + v51) & 1) == 0) {
        goto LABEL_19;
      }
      if ([v34 isGathering]) {
        break;
      }
      int v36 = *(unsigned __int8 *)(v55 + v51);
      uint64_t v35 = v48;
      v23(v48, (uint64_t)v63, v5);
      if (v36 != 1) {
        goto LABEL_14;
      }
      LODWORD(v49) = IndexPath.item.getter() == 0;
LABEL_15:
      uint64_t v50 = *v60;
      v50(v35, v5);
      uint64_t v37 = v47;
      v59(v47, v63, v5);
      if (!v49)
      {
        v50(v37, v5);
LABEL_19:
        uint64_t v39 = v56;
        uint64_t v28 = v63;
        v23((char *)v56, (uint64_t)v63, v5);
        uint64_t v38 = 0;
        goto LABEL_20;
      }
      uint64_t v49 = IndexPath.section.getter();
      v50(v37, v5);
      if (v49) {
        goto LABEL_19;
      }
LABEL_17:
      uint64_t v38 = 1;
      uint64_t v28 = v63;
      uint64_t v39 = v56;
LABEL_20:
      v30(v39, v38, 1, v5);
      (*v60)(v28, v5);
      if (v31((char *)v39, 1, v5) == 1)
      {
        sub_1000CBBA4(v39, (uint64_t *)&unk_1007069A0);
        uint64_t v23 = (void (*)(char *, uint64_t, uint64_t))v59;
      }
      else
      {
        uint64_t v40 = v54;
        v32(v54, (char *)v39, v5);
        v32(v57, v40, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v61 = (char *)sub_10018F950(0, *((void *)v61 + 2) + 1, 1, (unint64_t)v61);
        }
        BOOL v41 = (void (*)(char *, uint64_t, uint64_t))v59;
        unint64_t v43 = *((void *)v61 + 2);
        unint64_t v42 = *((void *)v61 + 3);
        if (v43 >= v42 >> 1) {
          uint64_t v61 = (char *)sub_10018F950(v42 > 1, v43 + 1, 1, (unint64_t)v61);
        }
        uint64_t v44 = v61;
        *((void *)v61 + 2) = v43 + 1;
        v32(&v44[v52 + v43 * v27], v57, v5);
        uint64_t v28 = v63;
        uint64_t v23 = v41;
      }
      v26 += v27;
      uint64_t v22 = v64 - 1;
      if (v64 == 1)
      {
        v30((uint64_t)v58, 1, 1, v5);
        goto LABEL_29;
      }
    }
    uint64_t v35 = v48;
    v23(v48, (uint64_t)v63, v5);
LABEL_14:
    LODWORD(v49) = 0;
    goto LABEL_15;
  }
  unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
  uint64_t v61 = (char *)_swiftEmptyArrayStorage;
  v45(v21, 1, 1, v5);
LABEL_29:
  swift_bridgeObjectRelease();
  return v61;
}

void *sub_100207430(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  int v47 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v42 = (char *)&v39 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - v15;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    uint64_t v55 = v3;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v19 = v6 + 16;
    uint64_t v48 = v20;
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64);
    uint64_t v39 = a1;
    unint64_t v40 = v21;
    uint64_t v22 = a1 + v21;
    uint64_t v23 = *(void *)(v19 + 56);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v51 = (char *)&v39 - v15;
    uint64_t v53 = (void (**)(uint64_t, char *, uint64_t))(v19 + 16);
    id v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    unint64_t v45 = (void (**)(uint64_t, uint64_t))(v19 - 8);
    uint64_t v46 = v16;
    swift_bridgeObjectRetain();
    unint64_t v52 = _swiftEmptyArrayStorage;
    uint64_t v41 = v5;
    uint64_t v44 = v19;
    while (1)
    {
      uint64_t v24 = (uint64_t)v12;
      uint64_t v25 = v51;
      v48(v51, v22, v5);
      unint64_t v43 = *v50;
      v43(v25, 0, 1, v5);
      uint64_t v26 = *v54;
      if ((*v54)(v25, 1, v5) == 1) {
        break;
      }
      uint64_t v27 = *v53;
      uint64_t v28 = v25;
      uint64_t v12 = (char *)v24;
      (*v53)(v24, v28, v5);
      uint64_t v29 = v5;
      uint64_t v30 = v46;
      uint64_t v31 = v55;
      sub_1001ECFA0(v24, v49, v46);
      uint64_t v55 = v31;
      if (v31)
      {
        (*v45)(v24, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v52;
      }
      (*v45)(v24, v29);
      if (v26((char *)v30, 1, v29) == 1)
      {
        sub_1000CBBA4(v30, (uint64_t *)&unk_1007069A0);
        uint64_t v5 = v29;
      }
      else
      {
        uint64_t v32 = v42;
        v27((uint64_t)v42, (char *)v30, v29);
        v27((uint64_t)v47, v32, v29);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v52 = (void *)sub_10018F950(0, v52[2] + 1, 1, (unint64_t)v52);
        }
        unint64_t v34 = v52[2];
        unint64_t v33 = v52[3];
        uint64_t v12 = (char *)v24;
        if (v34 >= v33 >> 1) {
          unint64_t v52 = (void *)sub_10018F950(v33 > 1, v34 + 1, 1, (unint64_t)v52);
        }
        uint64_t v35 = v52;
        v52[2] = v34 + 1;
        int v36 = (char *)v35 + v40 + v34 * v23;
        uint64_t v5 = v41;
        v27((uint64_t)v36, v47, v41);
      }
      v22 += v23;
      if (!--v18)
      {
        v43(v51, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    unint64_t v52 = _swiftEmptyArrayStorage;
    v37(v17, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v52;
}

void *sub_10020789C(uint64_t a1, uint64_t a2)
{
  uint64_t v102 = sub_1000CBE70(&qword_10070AC28);
  __chkstk_darwin(v102);
  uint64_t v6 = (char *)v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v89 = (char *)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v115 = (char *)v86 - v11;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v109 = (uint64_t)v86 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v101 = (char *)v86 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v100 = (uint64_t)v86 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v103 = (uint64_t)v86 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v110 = (uint64_t)v86 - v25;
  __chkstk_darwin(v24);
  uint64_t v114 = (uint64_t)v86 - v26;
  uint64_t v96 = sub_1000CBE70((uint64_t *)&unk_100708E70);
  uint64_t v27 = __chkstk_darwin(v96);
  uint64_t v95 = (char *)v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v94 = (void **)((char *)v86 - v30);
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v121 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v93 = *(void *)(a1 + 16);
  if (v93)
  {
    id v97 = v15;
    char v106 = v6;
    v86[2] = v2;
    unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v33 = *(void *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v34 = v8 + 16;
    uint64_t v92 = v35;
    uint64_t v91 = a1 + v32;
    uint64_t v105 = (void (**)(uint64_t, char *, uint64_t))(v34 + 16);
    unsigned __int8 v113 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 40);
    unsigned __int8 v107 = (void (**)(uint64_t, uint64_t))(v34 - 8);
    uint64_t v90 = *(void *)(v29 + 72);
    v86[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v88 = v34;
    uint64_t v87 = v33;
    BOOL v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
    while (1)
    {
      uint64_t v99 = v36;
      uint64_t v37 = (void **)(v91 + v90 * v36);
      uint64_t v38 = v96;
      uint64_t v39 = *(int *)(v96 + 48);
      unint64_t v40 = v94;
      uint64_t v41 = (char *)v94 + v39;
      unint64_t v42 = (char *)v37 + v39;
      unint64_t v43 = *v37;
      *uint64_t v94 = *v37;
      uint64_t v44 = v92;
      v92((char *)v40 + v39, (char *)v37 + v39, v7);
      uint64_t v45 = *(int *)(v38 + 48);
      uint64_t v46 = v95;
      int v47 = &v95[v45];
      *(void *)uint64_t v95 = v43;
      v44(&v46[v45], v42, v7);
      uint64_t v48 = v114;
      BOOL v104 = *v105;
      v104(v114, v47, v7);
      char v112 = *v113;
      v112(v48, 0, 1, v7);
      if (!v33) {
        break;
      }
      uint64_t v98 = v41;
      id v116 = v43;
      unint64_t v49 = sub_10007CC5C((uint64_t)v116);
      unint64_t v50 = v49;
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v51 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      if (v51)
      {
        uint64_t v117 = v51;
        unint64_t v118 = v50 & 0xC000000000000001;
        uint64_t v52 = 4;
        unint64_t v111 = v50;
        while (1)
        {
          uint64_t v53 = v52 - 4;
          if (v118)
          {
            uint64_t v54 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v55 = v52 - 3;
            if (__OFADD__(v53, 1)) {
              goto LABEL_50;
            }
          }
          else
          {
            uint64_t v54 = *(void *)(v50 + 8 * v52);
            swift_unknownObjectRetain();
            uint64_t v55 = v52 - 3;
            if (__OFADD__(v53, 1))
            {
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
          }
          self;
          uint64_t v56 = swift_dynamicCastObjCClass();
          uint64_t v120 = v55;
          if (!v56)
          {
            self;
            if (!swift_dynamicCastObjCClass()) {
              goto LABEL_52;
            }
            sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
            swift_unknownObjectRetain();
            char v67 = DOCNode.isEqualTo(node:)();
            swift_unknownObjectRelease();
            if (v67) {
              goto LABEL_42;
            }
            goto LABEL_12;
          }
          uint64_t v57 = (void *)v56;
          swift_unknownObjectRetain();
          id v58 = [v57 fpItem];
          if (v58)
          {
            uint64_t v59 = v58;
            sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
            char v60 = DOCNode.isEqualTo(node:)();

            if (v60)
            {
              swift_bridgeObjectRelease_n();
              swift_unknownObjectRelease();
              goto LABEL_43;
            }
          }
          uint64_t v61 = v110;
          sub_1000CBC00(v114, v110, &qword_1007076B0);
          uint64_t v62 = *v119;
          if ((*v119)(v61, 1, v7) == 1)
          {
            swift_unknownObjectRelease();
            sub_1000CBBA4(v61, &qword_1007076B0);
          }
          else
          {
            v104((uint64_t)v115, (char *)v61, v7);
            id v63 = [v57 fileURL];
            if (v63)
            {
              uint64_t v64 = v63;
              uint64_t v65 = (uint64_t)v101;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v66 = 0;
            }
            else
            {
              uint64_t v66 = 1;
              uint64_t v65 = (uint64_t)v101;
            }
            v112(v65, v66, 1, v7);
            uint64_t v68 = v100;
            sub_1000CBE0C(v65, v100, &qword_1007076B0);
            unsigned int v69 = v62(v68, 1, v7);
            uint64_t v108 = v62;
            if (v69 == 1)
            {
              sub_1000CBBA4(v68, &qword_1007076B0);
              uint64_t v70 = 1;
              uint64_t v71 = v103;
            }
            else
            {
              uint64_t v71 = v103;
              URL.standardizedFileURL.getter();
              (*v107)(v68, v7);
              uint64_t v70 = 0;
            }
            uint64_t v72 = v7;
            uint64_t v73 = v7;
            BOOL v74 = v112;
            v112(v71, v70, 1, v72);
            uint64_t v75 = v109;
            URL.standardizedFileURL.getter();
            v74(v75, 0, 1, v73);
            uint64_t v76 = v73;
            uint64_t v77 = (uint64_t)v106;
            uint64_t v78 = (uint64_t)&v106[*(int *)(v102 + 48)];
            sub_1000CBC00(v71, (uint64_t)v106, &qword_1007076B0);
            sub_1000CBC00(v75, v78, &qword_1007076B0);
            uint64_t v79 = v73;
            uint64_t v80 = v108;
            if (v108(v77, 1, v79) == 1)
            {
              swift_unknownObjectRelease();
              sub_1000CBBA4(v109, &qword_1007076B0);
              sub_1000CBBA4(v71, &qword_1007076B0);
              (*v107)((uint64_t)v115, v76);
              uint64_t v7 = v76;
              if (v80(v78, 1, v76) == 1)
              {
                sub_1000CBBA4((uint64_t)v106, &qword_1007076B0);
LABEL_42:
                swift_bridgeObjectRelease_n();
LABEL_43:
                uint64_t v33 = v87;
                goto LABEL_44;
              }
            }
            else
            {
              uint64_t v81 = (uint64_t)v97;
              sub_1000CBC00(v77, (uint64_t)v97, &qword_1007076B0);
              if (v80(v78, 1, v76) != 1)
              {
                uint64_t v83 = v81;
                uint64_t v84 = v89;
                v104((uint64_t)v89, (char *)v78, v76);
                sub_100078438(&qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL);
                LODWORD(v108) = dispatch thunk of static Equatable.== infix(_:_:)();
                swift_unknownObjectRelease();
                uint64_t v85 = *v107;
                (*v107)((uint64_t)v84, v76);
                sub_1000CBBA4(v109, &qword_1007076B0);
                sub_1000CBBA4(v103, &qword_1007076B0);
                v85((uint64_t)v115, v76);
                v85(v83, v76);
                sub_1000CBBA4(v77, &qword_1007076B0);
                uint64_t v7 = v76;
                unint64_t v50 = v111;
                if (v108) {
                  goto LABEL_42;
                }
                goto LABEL_12;
              }
              swift_unknownObjectRelease();
              sub_1000CBBA4(v109, &qword_1007076B0);
              sub_1000CBBA4(v103, &qword_1007076B0);
              uint64_t v82 = *v107;
              (*v107)((uint64_t)v115, v76);
              v82(v81, v76);
              uint64_t v7 = v76;
            }
            sub_1000CBBA4((uint64_t)v106, &qword_10070AC28);
          }
          unint64_t v50 = v111;
LABEL_12:
          swift_unknownObjectRelease();
          ++v52;
          if (v120 == v117)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v54 = 0;
            goto LABEL_43;
          }
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v54 = 0;
LABEL_44:

      sub_1000CBBA4(v114, &qword_1007076B0);
      (*v107)((uint64_t)v98, v7);
      if (v54)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      uint64_t v36 = v99 + 1;
      if (v99 + 1 == v93)
      {
        swift_bridgeObjectRelease();
        return (void *)v121;
      }
    }
LABEL_51:
    __break(1u);
LABEL_52:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10020847C(uint64_t a1, void (*a2)(long long *, uint64_t))
{
  uint64_t v31 = a2;
  uint64_t v25 = sub_1000CBE70(&qword_10070AD70);
  __chkstk_darwin(v25);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v23 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v24) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v23 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v24) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v23 + 8 * v10);
        if (!v20)
        {
          int64_t v10 = v19 + 3;
          if (v19 + 3 >= v24) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v23 + 8 * v10);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v14 = *(void *)(a1 + 48) + 40 * v12;
    uint64_t v28 = *(void *)(v14 + 32);
    long long v15 = *(_OWORD *)(v14 + 16);
    long long v26 = *(_OWORD *)v14;
    long long v27 = v15;
    long long v29 = v26;
    long long v30 = v15;
    uint64_t v16 = v13 + *(void *)(*(void *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) - 8) + 72) * v12;
    uint64_t v17 = (uint64_t)&v4[*(int *)(v25 + 48)];
    sub_10008BCB8(v16, v17, type metadata accessor for ScrollPositionInfo.ItemOffset);
    long long v18 = v27;
    *(_OWORD *)uint64_t v4 = v26;
    *((_OWORD *)v4 + 1) = v18;
    *((void *)v4 + 4) = v28;
    sub_10021FE8C((uint64_t)&v29);
    sub_10021FE8C((uint64_t)&v30);
    swift_retain();
    v31(&v26, v17);
    uint64_t result = sub_1000CBBA4((uint64_t)v4, &qword_10070AD70);
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v24) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v24) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10020872C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  int64_t v10 = a3 + 10;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = v11++;
    v10 += 5;
    if (v13) {
      return result;
    }
  }
  return v9;
}

uint64_t sub_100208814(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100208864()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1002088AC()
{
  sub_1001BF838(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002088B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002088C8(uint64_t a1)
{
  return sub_1001BFABC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

id sub_1002088D4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  [*(id *)(v0 + 16) setAlpha:1.0];

  return [v1 removeFromSuperview];
}

BOOL sub_100208920(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (*v4
    || (sub_10008BD6C() & 1) == 0
    || !*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits))
  {
    return 0;
  }
  swift_retain();
  sub_10004B1F0((uint64_t)v8);
  swift_release();
  if (!*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView))
  {
    sub_10004B470((uint64_t)v8);
    return 0;
  }
  swift_beginAccess();
  unint64_t v5 = *(void *)(a1 + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10004B470((uint64_t)v8);
  return v9 < v6;
}

uint64_t sub_100208A38@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1 >> 62) {
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v6 > a2)
  {
    while (!__OFSUB__(a2, 1))
    {
      uint64_t v8 = v6 - 1;
      double v9 = (double)(v6 - 1) / (double)(a2 - 1);
      if (v9 != 0.0) {
        goto LABEL_9;
      }
      __break(1u);
LABEL_6:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v6 = result;
      if (result <= a2) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v8 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  double v9 = 1.0;
LABEL_9:
  *(void *)a3 = a1;
  *(double *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = 0;
  *(double *)(a3 + 24) = (double)v8;
  *(double *)(a3 + 32) = v9;
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = 0;
  *(unsigned char *)(a3 + 64) = 0;
  return result;
}

uint64_t sub_100208B0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v20 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v22 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v10) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v22 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v22 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    swift_bridgeObjectRetain();
    uint64_t v13 = String.count.getter();
    uint64_t v14 = *(void *)(a4 + 24);
    uint64_t result = swift_bridgeObjectRelease();
    if (v13 != v14)
    {
      *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_10056CC04(v20, a2, v21, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v10) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v22 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100208CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v11 = sub_100208B0C((uint64_t)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    unint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    uint64_t v11 = sub_100208B0C((uint64_t)v12, v8, a1, a2);
    swift_release();
    swift_release();
    swift_slowDealloc();
    swift_release_n();
  }
  return v11;
}

void *sub_100208EB8(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      unint64_t v5 = &selRef_cellForItemAtIndexPath_;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        unsigned int v7 = v6;
        unint64_t v8 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_15;
        }
        id v9 = [a2 v5[486]];
        [v9 layoutFrame];
        CGFloat v11 = v10;
        CGFloat v13 = v12;
        CGFloat v15 = v14;
        CGFloat v17 = v16;

        v28.origin.CGFloat x = v11;
        v28.origin.CGFloat y = v13;
        v28.size.CGFloat width = v15;
        v28.size.CGFloat height = v17;
        CGRect v29 = CGRectIntegral(v28);
        CGFloat x = v29.origin.x;
        CGFloat y = v29.origin.y;
        CGFloat width = v29.size.width;
        CGFloat height = v29.size.height;
        [v7 frame];
        v31.origin.CGFloat x = v22;
        v31.origin.CGFloat y = v23;
        v31.size.CGFloat width = v24;
        v31.size.CGFloat height = v25;
        v30.origin.CGFloat x = x;
        v30.origin.CGFloat y = y;
        v30.size.CGFloat width = width;
        v30.size.CGFloat height = height;
        if (CGRectContainsRect(v30, v31))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v5 = &selRef_cellForItemAtIndexPath_;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v4;
        if (v8 == v3) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v6 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void sub_1002090C0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  if (a2 >> 62) {
    goto LABEL_42;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_3:
  uint64_t v47 = a3 + 56;
  uint64_t v44 = v3;
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v45 = v5;
      Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
      uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v11 = v9 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = 1 << v11;
      if (((1 << v11) & *(void *)(v47 + 8 * (v11 >> 6))) == 0) {
        goto LABEL_5;
      }
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      id v14 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
      char v15 = static NSObject.== infix(_:_:)();

      if ((v15 & 1) == 0) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_16:
      uint64_t v5 = v45;
      uint64_t v3 = v44;
      uint64_t v21 = *(void *)(a1 + 8 * v12);
      *(void *)(a1 + 8 * v12) = v13 | v21;
      if ((v13 & v21) != 0)
      {
        uint64_t v7 = v4;
      }
      else
      {
        uint64_t v5 = v45 + 1;
        uint64_t v7 = v4;
        if (__OFADD__(v45, 1)) {
          goto LABEL_41;
        }
        if (v5 == *(void *)(a3 + 16)) {
          goto LABEL_43;
        }
      }
LABEL_6:
      if (v6 == v7) {
        goto LABEL_43;
      }
    }
    uint64_t v16 = ~v10;
    for (unint64_t i = v11 + 1; ; unint64_t i = v18 + 1)
    {
      unint64_t v18 = i & v16;
      if (((*(void *)(v47 + (((i & v16) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v16)) & 1) == 0) {
        break;
      }
      id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v18);
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
        swift_unknownObjectRelease();
        unint64_t v12 = v18 >> 6;
        uint64_t v13 = 1 << v18;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    uint64_t v3 = v44;
    uint64_t v7 = v4;
    uint64_t v5 = v45;
    goto LABEL_6;
  }
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v41 = v3 + 32;
  uint64_t v42 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v23 == v42)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_43;
      }
      goto LABEL_3;
    }
    uint64_t v46 = v22;
    Swift::Int v25 = *(void *)(a3 + 40);
    id v26 = *(id *)(v41 + 8 * v23);
    Swift::Int v27 = v25;
    uint64_t v3 = (uint64_t)v26;
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v27);
    uint64_t v29 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = 1 << v30;
    if (((1 << v30) & *(void *)(v47 + 8 * (v30 >> 6))) == 0)
    {
LABEL_22:

      uint64_t v24 = v4;
      uint64_t v22 = v46;
      goto LABEL_23;
    }
    uint64_t v3 = sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    id v33 = *(id *)(*(void *)(a3 + 48) + 8 * v30);
    char v34 = static NSObject.== infix(_:_:)();

    if (v34)
    {
    }
    else
    {
      uint64_t v35 = ~v29;
      for (unint64_t j = v30 + 1; ; unint64_t j = v37 + 1)
      {
        unint64_t v37 = j & v35;
        if (((*(void *)(v47 + (((j & v35) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v35)) & 1) == 0) {
          goto LABEL_22;
        }
        id v38 = *(id *)(*(void *)(a3 + 48) + 8 * v37);
        char v39 = static NSObject.== infix(_:_:)();

        if (v39) {
          break;
        }
      }

      unint64_t v31 = v37 >> 6;
      uint64_t v32 = 1 << v37;
    }
    uint64_t v22 = v46;
    uint64_t v40 = *(void *)(a1 + 8 * v31);
    *(void *)(a1 + 8 * v31) = v32 | v40;
    if ((v32 & v40) != 0)
    {
      uint64_t v24 = v4;
      goto LABEL_23;
    }
    uint64_t v22 = v46 + 1;
    uint64_t v24 = v4;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v22 == *(void *)(a3 + 16)) {
      goto LABEL_43;
    }
LABEL_23:
    if (++v23 == v24) {
      goto LABEL_43;
    }
  }
  __break(1u);
}

uint64_t sub_1002094A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::Int v9 = (char *)v31 - v8;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v37 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v40 = (char *)v31 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v47 = (char *)v31 - v17;
  unint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    unint64_t v18 = 0;
    uint64_t v43 = v11 + 48;
    uint64_t v44 = v11 + 16;
    unint64_t v49 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v41 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v46 = v11 + 56;
    v31[1] = (v11 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v33 = a2;
    char v34 = v9;
    uint64_t v35 = a1;
    uint64_t v32 = v11;
    id v19 = v40;
    while (v18 < *(void *)(a1 + 16))
    {
      unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      unint64_t v38 = v18;
      unint64_t v39 = v20;
      uint64_t v45 = *(void *)(v11 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v42(v9, a1 + v20 + v45 * v18, v10);
      uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v21(v9, 0, 1, v10);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v22(v9, 1, v10) == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      uint64_t v48 = *v49;
      v48(v47, v9, v10);
      uint64_t v23 = a2;
      uint64_t v24 = *(void *)(a2 + 16);
      if (v24)
      {
        unint64_t v25 = v23 + v39;
        swift_bridgeObjectRetain();
        while (1)
        {
          v42(v7, v25, v10);
          v21(v7, 0, 1, v10);
          if (v22(v7, 1, v10) == 1) {
            break;
          }
          v48(v19, v7, v10);
          sub_100078438((unint64_t *)&qword_10070AE70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
          Swift::Int v27 = *v41;
          (*v41)(v19, v10);
          if (v26)
          {
            a2 = v33;
            swift_bridgeObjectRelease();
            uint64_t result = v27(v47, v10);
            goto LABEL_4;
          }
          v25 += v45;
          if (!--v24) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_14:
        v21(v7, 1, 1, v10);
      }
      a2 = v33;
      swift_bridgeObjectRelease();
      v48(v37, v47, v10);
      Swift::Int v28 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190E64(0, v28[2] + 1, 1);
        Swift::Int v28 = v50;
      }
      unint64_t v30 = v28[2];
      unint64_t v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_100190E64(v29 > 1, v30 + 1, 1);
        Swift::Int v28 = v50;
      }
      os_log_t v28[2] = v30 + 1;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v48)((char *)v28 + v39 + v30 * v45, v37, v10);
      unint64_t v50 = v28;
LABEL_4:
      unint64_t v18 = v38 + 1;
      a1 = v35;
      Swift::Int v9 = v34;
      uint64_t v11 = v32;
      if (v38 + 1 == v36) {
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_22:
    v21(v9, 1, 1, v10);
    swift_bridgeObjectRelease();
LABEL_23:
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_1007069A0);
    return (uint64_t)v50;
  }
  return result;
}

uint64_t sub_1002099D4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCItemCollectionConfiguration();
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView;
  if (*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView) || (a1 & 1) == 0) {
    return *(void *)(v2 + v8);
  }
  Swift::Int v9 = *(unsigned char **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v9)
  {
    uint64_t v10 = &v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    if (v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16]) {
      uint64_t v11 = *(void **)(*v10 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    }
    else {
      uint64_t v11 = (void *)v10[1];
    }
    swift_unknownObjectRetain();
    sub_10008BCB8(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionConfiguration);
    uint64_t v12 = sub_1001B0B60(v11, v9, (uint64_t)v7);
    if (v12)
    {
      uint64_t v13 = v12;
      [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
      uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
      swift_beginAccess();
      uint64_t v15 = *v14;
      uint64_t v16 = *(void *)&v13[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode];
      *(void *)&v13[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode] = v15;
      if (v16 != v15)
      {
        if (qword_100704F00 != -1) {
          swift_once();
        }
        double v17 = *(double *)&xmmword_100709CB0;
        if (!v15) {
          double v17 = 0.0;
        }
        [v13 setDirectionalLayoutMargins:v17, *((double *)&xmmword_100709CB0 + 1), *(double *)&qword_100709CC0, *(double *)&qword_100709CC8];
        sub_1001AEFEC();
        sub_1001AF0FC();
      }
      *(void *)&v13[OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate + 8] = &off_100695C20;
      swift_unknownObjectWeakAssign();
      [v13 setAccessibilityIdentifier:DOCItemCollectionViewFooterViewIdentifier];
      *(void *)&v13[OBJC_IVAR____TtC5Files19DOCStatusFooterView_gestureDelegate + 8] = &off_1006A2658;
      swift_unknownObjectWeakAssign();
      unint64_t v18 = *(void **)(v2 + v8);
      *(void *)(v2 + v8) = v13;
    }
    return *(void *)(v2 + v8);
  }
  __break(1u);
  return result;
}

void sub_100209C20(uint64_t a1, char *a2, void *a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for DispatchTime();
  uint64_t v42 = *(void *)(v50 - 8);
  uint64_t v17 = __chkstk_darwin(v50);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v41 = (char *)&v39 - v20;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a3;
  v21[3] = a4;
  v21[4] = a5;
  v21[5] = a6;
  v21[6] = a7;
  uint64_t v22 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  unint64_t v49 = a2;
  uint64_t v23 = *(void **)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v23)
  {
    id v40 = a3;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    id v51 = v23;
    uint64_t v39 = a1;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v25 = [v51 cellForItemAtIndexPath:isa];

    if (v25)
    {
      [v25 frame];
      if (objc_msgSend(v51, "_isRectFullyVisible:"))
      {
        sub_1001F8A3C((uint64_t)v40, a4, a5, a6, a7);
        swift_release();

LABEL_13:
        id v38 = v51;

        return;
      }
    }
    if ((uint64_t)[v51 numberOfSections] >= 1)
    {
      Swift::Int v27 = v49;
      [v49 loadViewIfNeeded];
      Swift::Int v28 = *(void **)&v27[v22];
      if (v28)
      {
        id v29 = v28;
        Class v30 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v29 scrollToItemAtIndexPath:v30 atScrollPosition:0 animated:1];

        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        unint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        uint64_t v32 = v41;
        + infix(_:_:)();
        unint64_t v49 = *(char **)(v42 + 8);
        ((void (*)(char *, uint64_t))v49)(v19, v50);
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = sub_100220F7C;
        *(void *)(v33 + 24) = v21;
        aBlock[4] = sub_1000D8564;
        aBlock[5] = v33;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_100698180;
        char v34 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        uint64_t v35 = v43;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        uint64_t v36 = v45;
        uint64_t v37 = v48;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v34);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v37);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v46);
        ((void (*)(char *, uint64_t))v49)(v32, v50);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        __break(1u);
      }
      return;
    }
    sub_1001F8A3C((uint64_t)v40, a4, a5, a6, a7);
    swift_release();
    goto LABEL_13;
  }
  id v26 = a3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001F8A3C((uint64_t)v26, a4, a5, a6, a7);

  swift_release();
}

void *sub_10020A268(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  id v26 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_36;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v8 = (void **)(v3 + 32);
      uint64_t v21 = a2 + 7;
      unint64_t v23 = v3 & 0xC000000000000001;
      uint64_t v24 = a2;
      uint64_t v22 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v25 = v4;
      while (1)
      {
        if (v6)
        {
          Swift::Int v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v5++, 1);
          if (v10)
          {
LABEL_32:
            __break(1u);
            return v26;
          }
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
            goto LABEL_35;
          }
          Swift::Int v9 = v8[v5];
          swift_unknownObjectRetain();
          BOOL v10 = __OFADD__(v5++, 1);
          if (v10) {
            goto LABEL_32;
          }
        }
        uint64_t v11 = (void **)[v9 fpfs_fpItem];
        if (v11)
        {
          unint64_t v3 = (unint64_t)v11;
          id v12 = [v11 collaborationIdentifier];

          if (v12) {
            break;
          }
        }
        swift_unknownObjectRelease();
LABEL_5:
        if (v5 == v4) {
          return v26;
        }
      }
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v3 = (unint64_t)v14;

      uint64_t v15 = (void *)a2[2];
      if (!v15)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v25;
        goto LABEL_5;
      }
      BOOL v16 = a2[4] == v13 && a2[5] == v3;
      if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      if (v15 == (void *)1)
      {
LABEL_29:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      uint64_t v17 = v21;
      uint64_t v18 = 1;
      while (1)
      {
        a2 = (void *)(v18 + 1);
        if (__OFADD__(v18, 1)) {
          break;
        }
        BOOL v19 = *(v17 - 1) == v13 && *v17 == v3;
        if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_17;
        }
        v17 += 2;
        ++v18;
        if (a2 == v15) {
          goto LABEL_29;
        }
      }
LABEL_35:
      __break(1u);
LABEL_36:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    unint64_t v3 = (unint64_t)&v26;
    specialized ContiguousArray._endMutation()();
LABEL_18:
    unint64_t v6 = v23;
    a2 = v24;
    uint64_t v7 = v22;
    uint64_t v4 = v25;
    goto LABEL_5;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10020A4D0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v4)
  {
    BOOL v10 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    for (unint64_t i = (uint64_t *)(a1 + 32); ; ++i)
    {
      uint64_t v8 = *i;
      swift_bridgeObjectRetain();
      sub_1001ED72C(&v8, a2, &v9);
      swift_bridgeObjectRelease();
      if (v2) {
        break;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v4) {
        return v10;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

void *sub_10020A5CC(void *a1, double a2, double a3)
{
  if ([a1 isFolder])
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070ACC0);
    unint64_t v5 = (void *)static UIBezierPath.folder.getter();
  }
  else if (a3 <= 100.0)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070ACC0);
    if (a3 >= 50.0) {
      unint64_t v5 = (void *)static UIBezierPath.document_84.getter();
    }
    else {
      unint64_t v5 = (void *)static UIBezierPath.document_44.getter();
    }
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070ACC0);
    unint64_t v5 = (void *)static UIBezierPath.document.getter();
  }
  unint64_t v6 = v5;
  [v5 bounds];
  CGAffineTransformMakeScale(&v9, a2 / v7, a2 / v7);
  [v6 applyTransform:&v9];
  return v6;
}

uint64_t sub_10020A6D4(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v6 = __OFADD__(v4, 1);
          uint64_t v7 = v3 - 3;
          if (v6) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_unknownObjectRetain();
          BOOL v6 = __OFADD__(v4, 1);
          uint64_t v7 = v3 - 3;
          if (v6)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        swift_getObjectType();
        if (DOCNode.isEqualTo(node:)())
        {
          swift_bridgeObjectRelease();
          return v5;
        }
        swift_unknownObjectRelease();
        ++v3;
      }
      while (v7 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_10020A7E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          BOOL v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          BOOL v10 = (void *)swift_unknownObjectRetain();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = [v10 filename:v22];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }
        swift_unknownObjectRelease();
        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10020A994(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (!*v4
    && (sub_10008BD6C() & 1) != 0
    && *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits))
  {
    swift_retain();
    sub_10004B1F0((uint64_t)v7);
    swift_release();
    if (*(unsigned char *)(a1 + 24))
    {
      sub_10004B470((uint64_t)v7);
    }
    else
    {
      BOOL v5 = sub_100208920(a1);
      sub_10004B470((uint64_t)v7);
      if (v5) {
        return v7[32] & 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10020AA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(unsigned char *)(a4 + 136) = 1;
  *(void *)(a4 + 144) = 0;
  *(void *)(a4 + 152) = 0;
  *(void *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 24) = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign();
  id v6 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain();
  id v7 = [v6 initWithTarget:a4 action:"didTapOverlay"];
  id v8 = [objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();

  [v8 addGestureRecognizer:v7];
  BOOL v10 = *(void **)(a4 + 32);
  *(void *)(a4 + 32) = v8;

  sub_100422CDC();
  if (qword_1007051C8 != -1) {
    swift_once();
  }
  id v11 = [self mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v13, (uint64_t *)&unk_100705D60);
  return a4;
}

uint64_t sub_10020ACB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v10 = swift_unknownObjectRetain();
    sub_10020AF68(v10, a2, a3);
    return swift_unknownObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v17 = sub_10009B0E4(0xD00000000000001ELL, 0x80000001005D6A50, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t v17 = a3;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v15 = String.init<A>(describing:)();
      uint64_t v17 = sub_10009B0E4(v15, v16, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s did not find matching node for node: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_10020AF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  sub_10008BCB8(v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  uint64_t v13 = *(void *)(*(void *)v11 + 16);
  if (v13)
  {
    uint64_t v33 = v11;
    v27[1] = a2;
    uint64_t v28 = a3;
    id v29 = v8;
    uint64_t v30 = v6;
    uint64_t v31 = v5;
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v14 = (uint64_t *)(v32 + 64);
    while (1)
    {
      uint64_t v15 = *(v14 - 4);
      uint64_t v16 = *(v14 - 3);
      uint64_t v18 = *(v14 - 2);
      uint64_t v17 = *(v14 - 1);
      uint64_t v19 = *v14;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      char v20 = Array<A>.contains(node:)();
      swift_bridgeObjectRelease();
      if (v20) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 += 5;
      if (!--v13)
      {
        uint64_t v36 = v15;
        uint64_t v37 = v16;
        uint64_t v38 = v18;
        uint64_t v39 = v17;
        uint64_t v40 = v19;
        swift_bridgeObjectRelease();
        uint64_t v6 = v30;
        uint64_t v5 = v31;
        a3 = v28;
        uint64_t v8 = v29;
        id v11 = v33;
        goto LABEL_6;
      }
    }
    uint64_t v36 = v15;
    uint64_t v37 = v16;
    uint64_t v38 = v18;
    uint64_t v39 = v17;
    uint64_t v40 = v19;
    swift_bridgeObjectRelease();
    sub_10008BBF0((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    if ((*(unsigned char *)(v19 + 24) & 1) == 0) {
      sub_1001BE97C(&v36, 0);
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    sub_10008BBF0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v34 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005D6A70, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v34 = a3;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v24 = String.init<A>(describing:)();
      uint64_t v34 = sub_10009B0E4(v24, v25, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s can not find section containing node: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_10020B3B4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    char v6 = static UUID.== infix(_:_:)();
    swift_release();
    if (v6) {
      return v5;
    }
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v7 == v4) {
      return 0;
    }
  }
}

void sub_10020B4D0()
{
  [v0 docSetNeedsUpdateContentUnavailableConfiguration];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v1)
  {
    if ([v1 isGathering])
    {
      v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = 0;
      sub_1001CCF30();
    }
    else
    {
      sub_100028B5C();
      uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
      if (v2)
      {
        id v3 = v2;
        sub_1001AF2D4();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10020B59C()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  void *v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf] = 0;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isActiveDragSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView] = 0;
  id v3 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher];
  uint64_t v4 = type metadata accessor for FamilyFetcher();
  uint64_t v5 = swift_allocObject();
  v3[3] = v4;
  v3[4] = (uint64_t)&off_1006A5950;
  uint64_t *v3 = v5;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDropSession] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = 0;
  char v6 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  *char v6 = 0;
  v6[1] = 0;
  uint64_t v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier;
  *(void *)&v1[v7] = sub_10007920C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortOptionsAccessibilityModelView;
  *(void *)&v1[v8] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] = 2;
  uint64_t v9 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath];
  uint64_t v10 = type metadata accessor for IndexPath();
  id v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_dropTargetHighlightedCell] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload] = 2;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = 1;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache] = &_swiftEmptyDictionarySingleton;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus] = 0;
  uint64_t v12 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier];
  void *v12 = 0xD000000000000020;
  v12[1] = 0x80000001005D2690;
  uint64_t v13 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
  *uint64_t v13 = 0xD000000000000020;
  v13[1] = 0x80000001005D26C0;
  uint64_t v14 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier];
  *uint64_t v14 = 0xD000000000000029;
  v14[1] = 0x80000001005D26F0;
  uint64_t v15 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionCreateCellIdentifier];
  *uint64_t v15 = 0xD000000000000022;
  v15[1] = 0x80000001005D2720;
  uint64_t v16 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionFooterIdentifier];
  void *v16 = 0xD00000000000002BLL;
  v16[1] = 0x80000001005D2750;
  uint64_t v17 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyFooterIdentifier];
  *uint64_t v17 = 0xD000000000000030;
  v17[1] = 0x80000001005D2780;
  uint64_t v18 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionHeaderIdentifier];
  *uint64_t v18 = 0xD00000000000002BLL;
  v18[1] = 0x80000001005D27C0;
  uint64_t v19 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGroupedSectionHeaderIdentifier];
  void *v19 = 0xD00000000000002CLL;
  v19[1] = 0x80000001005D27F0;
  char v20 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyHeaderIdentifier];
  *char v20 = 0xD000000000000030;
  v20[1] = 0x80000001005D2820;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState] = 4;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode] = 0;
  uint64_t v21 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  void *v21 = 0;
  v21[1] = 0;
  os_log_type_t v22 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility];
  *os_log_type_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool;
  type metadata accessor for DOCItemCollectionCellContentPool();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = 0;
  v24[3] = [objc_allocWithZone((Class)NSLock) init];
  v24[4] = sub_1000790C8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v1[v23] = v24;
  uint64_t v25 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool;
  type metadata accessor for DOCThumbnailLoadingPool();
  swift_allocObject();
  *(void *)&v1[v25] = sub_10007EF2C();
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = 1;
  id v26 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  *id v26 = 2;
  v26[1] = 0;
  v26[2] = 0;
  v26[3] = 0;
  uint64_t v27 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive;
  id v28 = [self shared];
  LOBYTE(v25) = [v28 locked];

  v1[v27] = v25;
  v11(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath], 1, 1, v10);
  id v29 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  *id v29 = _swiftEmptyArrayStorage;
  v29[1] = _swiftEmptyArrayStorage;
  v29[2] = sub_100078F9C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v30 = type metadata accessor for DOCItemCollectionFPController();
  uint64_t v31 = (char *)v29 + *(int *)(v30 + 28);
  uint64_t v32 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v33 = *(void *)(v32 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, 1, 1, v32);
  *((unsigned char *)v29 + *(int *)(v30 + 32)) = 0;
  (*(void (**)(unsigned char *, void, uint64_t))(v33 + 104))(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior], enum case for DOCItemGroupingBehavior.none(_:), v32);
  uint64_t v34 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher;
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  *(void *)&v1[v34] = sub_10007F190();
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringObservation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens] = _swiftEmptyArrayStorage;
  v11(&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], 1, 1, v10);
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus] = 0;
  uint64_t v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController;
  *(void *)&v1[v35] = [objc_allocWithZone((Class)type metadata accessor for DOCTypeToFocusController()) init];
  uint64_t v36 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration];
  uint64_t v37 = type metadata accessor for UICollectionLayoutListConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout] = 0;
  uint64_t v38 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics];
  char *v38 = 0;
  *(_OWORD *)(v38 + 8) = xmmword_10059B770;
  *(_OWORD *)(v38 + 24) = xmmword_10059B780;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___promptView] = 1;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits] = 0;
  uint64_t v39 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
  *(_OWORD *)uint64_t v39 = 0u;
  *((_OWORD *)v39 + 1) = 0u;
  *((void *)v39 + 4) = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSpringLoading] = 0;
  uint64_t v40 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  uint64_t v41 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails] = 1;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled] = 2;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastPreviewedFPItem] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = 0;
  uint64_t v42 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
  *(_OWORD *)uint64_t v42 = 0u;
  *((_OWORD *)v42 + 1) = 0u;
  *((void *)v42 + 4) = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_updateSnapshot] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_computeStackMetrics] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 0;
  uint64_t v43 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
  *(_OWORD *)uint64_t v43 = 0u;
  *((_OWORD *)v43 + 1) = 0u;
  *((void *)v43 + 4) = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController] = 0;
  uint64_t v44 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName];
  void *v44 = 0;
  v44[1] = 0;
  uint64_t v45 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize];
  *(void *)uint64_t v45 = 0;
  *((void *)v45 + 1) = 0;
  v45[16] = 1;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  uint64_t v46 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(void *)uint64_t v46 = 0;
  v46[8] = 0;
  uint64_t v47 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  uint64_t v48 = type metadata accessor for ScrollPositionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 0;
  unint64_t v49 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastCollectionViewSafeInsets];
  *(_OWORD *)unint64_t v49 = 0u;
  *((_OWORD *)v49 + 1) = 0u;
  v49[32] = 1;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 0;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 0;
  uint64_t v50 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage;
  _s10BBIStorageCMa();
  swift_allocObject();
  sub_10007EEE4();
  *(void *)&v1[v50] = v51;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *sub_10020C144(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001C0B68((uint64_t)v11);
  if ([v1 enclosedInUIPDocumentLanding])
  {
    id v12 = [self clearColor];
    UICollectionLayoutListConfiguration.backgroundColor.setter();
  }
  if ((sub_10008BD6C() & 1) == 0 && (sub_10001F094() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v19 = v4;
  uint64_t v13 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  unint64_t v14 = *((void *)v13 + 1);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v4 = v19;
  if (v15 > 0) {
    uint64_t v16 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:);
  }
  else {
LABEL_9:
  }
    uint64_t v16 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v16, v4);
  UICollectionLayoutListConfiguration.headerMode.setter();
  if (!a1) {
    [self enclosingTabSwitcherCanBeFloating];
  }
  UICollectionLayoutListConfiguration.headerTopPadding.setter();
  sub_10009E6C4(0, &qword_10070AED0);
  uint64_t v17 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  if (sub_1000975F0()) {
    [v17 setContentInsets:0.0, *(double *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics+ 24], 0.0, *(double *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics+ 24]];
  }
  [v17 setContentInsetsReference:2];
  [v17 setSupplementaryContentInsetsReference:1];
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v17;
}

void _s5Files31DOCItemCollectionViewControllerC5titleSSSgvs_0()
{
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  v0._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10020C540()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

char *sub_10020C578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C917C(a1, a2, a3);
}

void sub_10020C580(void *a1)
{
  sub_1001CA378(a1, v1);
}

uint64_t sub_10020C588()
{
  return sub_1001CD4D8(*(void **)(v0 + 16), 1);
}

void sub_10020C5A8()
{
  sub_10003A61C((unint64_t)_swiftEmptyArrayStorage, 1u, *(unsigned __int8 *)(v0 + 24));
}

void sub_10020C5E0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v2 preparedCells];
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v5 >> 62) {
        goto LABEL_45;
      }
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v6)
      {
        uint64_t v42 = v2;
        unint64_t v7 = v5 & 0xC000000000000001;
        uint64_t v8 = 4;
        unint64_t v43 = v5;
        uint64_t v46 = (float64x2_t *)&v48[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
        unint64_t v47 = v5 & 0xC000000000000001;
        uint64_t v45 = v6;
        while (1)
        {
          id v9 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v8);
          uint64_t v10 = v9;
          uint64_t v11 = v8 - 3;
          if (__OFADD__(v8 - 4, 1)) {
            break;
          }
          type metadata accessor for DOCItemCollectionCell();
          id v12 = (char *)swift_dynamicCastClass();
          if (v12)
          {
            uint64_t v13 = v12;
            unint64_t v14 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v12) + 0x1F8);
            uint64_t v15 = v14();
            if (!v15) {
              goto LABEL_33;
            }
            uint64_t v16 = (char *)v15;
            unint64_t v49 = v14;
            id v17 = [v48 effectiveAppearance];
            uint64_t v18 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance;
            uint64_t v19 = *(void **)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance];
            *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = v17;
            id v50 = v17;
            if (v17)
            {
              if (!v19) {
                goto LABEL_24;
              }
              sub_10009E6C4(0, (unint64_t *)&qword_10070D090);
              id v20 = v19;
              id v21 = v50;
              char v22 = static NSObject.== infix(_:_:)();

              if (v22)
              {

                unint64_t v5 = v43;
                goto LABEL_30;
              }
              unint64_t v5 = v43;
              if (*(void *)&v16[v18])
              {
LABEL_24:
                uint64_t v44 = v19;
                uint64_t v24 = *(void **)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
                *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

                uint64_t v25 = &v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title];
                *(void *)uint64_t v25 = 0;
                *((void *)v25 + 1) = 0;
                swift_bridgeObjectRelease();
                sub_1000951C8((uint64_t)v51);
                uint64_t v26 = (uint64_t)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
                sub_1000CBE0C((uint64_t)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v52, &qword_100705560);
                sub_1000CBE0C((uint64_t)v51, v26, &qword_100705560);
                sub_1000A0B6C((uint64_t)v52);
                uint64_t v27 = *(void **)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
                *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

                uint64_t v28 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                uint64_t v29 = *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
                if ((v29 & 1) == 0)
                {
                  v29 |= 1uLL;
                  *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v29;
                }
                uint64_t v6 = v45;
                if (*(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount])
                {

                  unint64_t v5 = v43;
                  goto LABEL_31;
                }
                unint64_t v7 = v47;
                if (!sub_1000CBC64())
                {
                  *(void *)&v16[v28] = 0;
                  sub_100090F98(v29, (uint64_t)v16);
                  unint64_t v7 = v47;
                }

                unint64_t v5 = v43;
LABEL_32:
                unint64_t v14 = v49;
LABEL_33:
                uint64_t v2 = v13;
                uint64_t v30 = v14();
                if (v30)
                {
                  uint64_t v2 = (char *)v30;
                  double v31 = v46[2].f64[0];
                  uint64_t v32 = v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics;
                  float64x2_t v34 = *v46;
                  float64x2_t v33 = v46[1];
                  float64x2_t v36 = *(float64x2_t *)(v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics);
                  float64x2_t v35 = *(float64x2_t *)(v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 16);
                  double v37 = *(double *)(v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32);
                  char v38 = *(unsigned char *)(v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40);
                  *(float64x2_t *)uint64_t v32 = *v46;
                  *(float64x2_t *)(v32 + 16) = v33;
                  *(double *)(v32 + 32) = v31;
                  *(unsigned char *)(v32 + 40) = 0;
                  if ((v38 & 1) != 0
                    || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v34, v36), (int32x4_t)vceqq_f64(v33, v35))), 0xFuLL))) & 1) == 0|| v31 != v37)
                  {
                    uint64_t v39 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                    uint64_t v40 = *(void *)(v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
                    if ((v40 & 0x400) == 0)
                    {
                      v40 |= 0x400uLL;
                      *(void *)(v30 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v40;
                    }
                    if (!*(void *)(v30
                                    + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
                      && !sub_1000CBC64())
                    {
                      *(void *)&v2[v39] = 0;
                      sub_100090F98(v40, (uint64_t)v2);
                      unint64_t v7 = v47;
                    }
                  }
                }
                goto LABEL_8;
              }
LABEL_28:
            }
            else
            {
              if (v19) {
                goto LABEL_28;
              }
            }
LABEL_30:
            uint64_t v6 = v45;
LABEL_31:
            unint64_t v7 = v47;
            goto LABEL_32;
          }
LABEL_8:

          ++v8;
          if (v11 == v6)
          {

            swift_bridgeObjectRelease();
            return;
          }
        }
        __break(1u);
LABEL_45:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10020CAD4(int a1)
{
  sub_1001D3814(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_10020CADC()
{
  return sub_100021F80(*(void **)(v0 + 24), 0, 0, 1, 1);
}

void sub_10020CB14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) == 0
    && (*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
     || *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) == 1))
  {
    sub_1001C7DF4(*(void **)(v1 + 24));
  }
}

void sub_10020CB74()
{
  sub_100205164(*(unsigned char **)(v0 + 16));
}

uint64_t type metadata accessor for DOCItemCollectionViewController.SplitModeChangeTracker()
{
  return self;
}

uint64_t sub_10020CBB4()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10020CBEC(int a1)
{
  sub_1001D3F74(a1, *(id *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

uint64_t sub_10020CBF8(uint64_t a1)
{
  return sub_1001D3FE8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10020CC00(uint64_t a1)
{
  return sub_1001D40C0(a1, *(id *)(v1 + 16));
}

uint64_t sub_10020CC10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter() != 2) {
    goto LABEL_6;
  }
  uint64_t result = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!result)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  if (([(id)result isGathering] & 1) == 0
    && (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
    && (sub_1001DAF30(a1) & 1) != 0)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_8:
    sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007069A0);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t result = sub_1001BAA44((uint64_t)v10, 0);
  if (!result) {
    goto LABEL_38;
  }
  id v12 = (void *)result;
  if ([(id)result isFolder] && objc_msgSend(v12, "isReadable"))
  {
    uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession);
    if (v13)
    {
      id v14 = [(id)swift_unknownObjectRetain() items];
      sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
      unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v22 = v13;
      if (v15 >> 62) {
        goto LABEL_35;
      }
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v16)
      {
        unint64_t v26 = v15 & 0xC000000000000001;
        uint64_t v17 = 4;
        uint64_t v23 = (char *)&type metadata for Any + 8;
        uint64_t v24 = v16;
        unint64_t v25 = v15;
        while (1)
        {
          id v18 = v26 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v15 + 8 * v17);
          unint64_t v15 = (unint64_t)v18;
          uint64_t v19 = v17 - 3;
          if (__OFADD__(v17 - 4, 1)) {
            break;
          }
          if (objc_msgSend(v18, "localObject", v22, v23))
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v28, 0, sizeof(v28));
          }
          sub_1000CBE0C((uint64_t)v28, (uint64_t)v29, (uint64_t *)&unk_100705D60);
          if (v30)
          {
            sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
            if (swift_dynamicCast())
            {
              id v20 = v27;
              unsigned int v21 = [v12 isEqual:v27];

              if (v21)
              {
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
                goto LABEL_31;
              }
            }
            else
            {
            }
          }
          else
          {

            sub_1000CBBA4((uint64_t)v29, (uint64_t *)&unk_100705D60);
          }
          ++v17;
          unint64_t v15 = v25;
          if (v19 == v24) {
            goto LABEL_36;
          }
        }
        __break(1u);
LABEL_35:
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
LABEL_36:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t result = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_unknownObjectRelease();
      uint64_t result = 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_unknownObjectRelease();
LABEL_31:
    uint64_t result = 0;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSpringLoading) = result;
  return result;
}

void sub_10020D118(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, const void *a7)
{
  uint64_t v105 = type metadata accessor for Logger();
  uint64_t v104 = *(void *)(v105 - 8);
  uint64_t v13 = __chkstk_darwin(v105);
  uint64_t v103 = ((char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = ((char *)&v97 - v16);
  uint64_t v18 = __chkstk_darwin(v15);
  id v20 = ((char *)&v97 - v19);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v97 - v21;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = (void *)Strong;
    uint64_t v100 = a6;
    _Block_copy(a7);
    uint64_t v102 = (void *)a7;
    _Block_copy(a7);
    id v25 = [v24 view];
    if (!v25)
    {
      uint64_t v96 = v102;
      _Block_release(v102);
      _Block_release(v96);
      _Block_release(v96);
      __break(1u);
      return;
    }
    unint64_t v26 = v25;
    uint64_t v27 = (unsigned char *)(a3 + 16);
    id v28 = sub_1001DB0D4(v25);

    uint64_t v29 = v28;
    swift_beginAccess();
    unsigned char *v27 = 1;
    id v30 = [v28 window];

    id v101 = v24;
    if (!v30)
    {
      static Logger.UI.getter();
      uint64_t v40 = a1;
      id v41 = v28;
      uint64_t v42 = v40;
      id v43 = v41;
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.error.getter();
      uint64_t v103 = v44;
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        unint64_t v47 = (void *)swift_slowAlloc();
        uint64_t v100 = (void *)swift_slowAlloc();
        uint64_t v109 = v100;
        *(_DWORD *)uint64_t v46 = 136315650;
        uint64_t v107 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&v109);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v46 + 12) = 2112;
        uint64_t v107 = (uint64_t)v42;
        uint64_t v48 = v43;
        unint64_t v49 = v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v47 = v42;

        *(_WORD *)(v46 + 22) = 2112;
        uint64_t v107 = (uint64_t)v48;
        id v50 = v48;
        id v43 = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v47[1] = v48;

        uint64_t v51 = v103;
        _os_log_impl((void *)&_mh_execute_header, v103, v45, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v46, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v104 + 8))(v22, v105);
      char v60 = (void (**)(const void *, void *, id))v102;
      (*((void (**)(void *, void, void))v102 + 2))(v102, 0, 0);
      id v61 = v101;
      goto LABEL_30;
    }
    int v31 = a5 & 1;
    swift_beginAccess();
    if (*(unsigned char *)(a4 + 16))
    {
      static Logger.UI.getter();
      uint64_t v32 = a1;
      float64x2_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v33, v34))
      {
        LODWORD(v98) = v31;
        id v97 = v28;
        float64x2_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        *(_DWORD *)float64x2_t v35 = 136315138;
        uint64_t v36 = (*(uint64_t (**)(void))((swift_isaMask & *v32) + 0x1F8))();
        if (v36)
        {
          double v37 = (void *)v36;
          char v38 = (uint64_t *)(v36 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v39 = *v38;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v39 = 0;
        }
        uint64_t v106 = v39;
        sub_1000CBE70(&qword_100717520);
        uint64_t v65 = String.init<A>(describing:)();
        uint64_t v106 = sub_10009B0E4(v65, v66, (uint64_t *)&v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Timed out (250ms) re-fetching thumbnail for %s", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        char v67 = *(void (**)(NSObject *, uint64_t))(v104 + 8);
        uint64_t v68 = v20;
LABEL_22:
        uint64_t v99 = v67;
        v67(v68, v105);
        uint64_t v64 = v103;
        uint64_t v29 = v97;
        LOBYTE(v31) = (_BYTE)v98;
        goto LABEL_23;
      }

      uint64_t v62 = *(void (**)(NSObject *, uint64_t))(v104 + 8);
      id v63 = v20;
    }
    else
    {
      static Logger.UI.getter();
      uint64_t v52 = a1;
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v53, v54))
      {
        LODWORD(v98) = v31;
        id v97 = v28;
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 136315138;
        uint64_t v56 = (*(uint64_t (**)(void))((swift_isaMask & *v52) + 0x1F8))();
        if (v56)
        {
          uint64_t v57 = (void *)v56;
          id v58 = (uint64_t *)(v56 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v59 = *v58;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v59 = 0;
        }
        uint64_t v106 = v59;
        sub_1000CBE70(&qword_100717520);
        uint64_t v69 = String.init<A>(describing:)();
        uint64_t v106 = sub_10009B0E4(v69, v70, (uint64_t *)&v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Updated thumbnail for %s", v55, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        char v67 = *(void (**)(NSObject *, uint64_t))(v104 + 8);
        uint64_t v68 = v17;
        goto LABEL_22;
      }

      uint64_t v62 = *(void (**)(NSObject *, uint64_t))(v104 + 8);
      id v63 = v17;
    }
    uint64_t v99 = v62;
    v62(v63, v105);
    uint64_t v64 = v103;
LABEL_23:
    uint64_t v71 = *(void **)((char *)a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    [v71 addDecoration];
    id v72 = [v71 layoutIfNeeded];
    double v73 = (*(double (**)(id))((swift_isaMask & *a1) + 0x100))(v72);
    sub_1001D6334(a1, v29, v31, v73, v74, v75, v76);
    [v71 _continuousCornerRadius];
    double v78 = v77;
    [v71 bounds];
    double v83 = v81;
    double v84 = v82;
    if (v78 <= 0.0)
    {
      id v88 = sub_10020A5CC(v100, v81, v82);
    }
    else
    {
      double v85 = v79;
      double v86 = v80;
      [v71 _continuousCornerRadius];
      id v88 = [self bezierPathWithRoundedRect:v85 cornerRadius:v86 v83, v84, v87];
    }
    id v43 = v88;
    static Logger.UI.getter();
    uint64_t v89 = a1;
    uint64_t v90 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v100 = v43;
      uint64_t v93 = (uint8_t *)v92;
      uint64_t v94 = (void *)swift_slowAlloc();
      uint64_t v98 = a1;
      *(_DWORD *)uint64_t v93 = 138412290;
      uint64_t v108 = v89;
      uint64_t v95 = v89;
      uint64_t v64 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v94 = v98;

      _os_log_impl((void *)&_mh_execute_header, v90, v91, "calling completion block with cell %@", v93, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v43 = v100;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v90 = v89;
    }
    char v60 = (void (**)(const void *, void *, id))v102;

    v99(v64, v105);
    id v61 = [v71 image];
    v60[2](v60, v71, v43);

LABEL_30:
    _Block_release(v60);
    _Block_release(v60);
  }
}

void sub_10020DD10(char *a1, char *a2, uint64_t a3, char *a4, int a5, int a6, const void *a7)
{
  LODWORD(v173) = a6;
  LODWORD(v177) = a5;
  uint64_t v178 = a4;
  v188 = a2;
  uint64_t v171 = type metadata accessor for DispatchTimeInterval();
  uint64_t v170 = *(void *)(v171 - 8);
  uint64_t v10 = __chkstk_darwin(v171);
  uint64_t v169 = (void **)((char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v168 = (void **)((char *)&v151 - v12);
  uint64_t v175 = type metadata accessor for DispatchTime();
  uint64_t v167 = *(void *)(v175 - 8);
  uint64_t v13 = __chkstk_darwin(v175);
  uint64_t v166 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v174 = (char *)&v151 - v15;
  uint64_t v163 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v160 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for DispatchQoS();
  uint64_t v159 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  long long v158 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  id v155 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v181 = (uint64_t (*)())v19;
  uint64_t v182 = v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v184 = (char *)&v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v172 = (char *)&v151 - v24;
  __chkstk_darwin(v23);
  uint64_t v176 = (char *)&v151 - v25;
  uint64_t v26 = type metadata accessor for IndexPath();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  v165 = (char *)&v151 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = v29;
  __chkstk_darwin(v28);
  int v31 = (char *)&v151 - v30;
  uint64_t v180 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v32 = __chkstk_darwin(v180);
  os_log_type_t v34 = (char *)&v151 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  double v37 = (char *)&v151 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v151 - v38;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a7;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_100222580;
  *(void *)(v41 + 24) = v40;
  uint64_t v187 = v41;
  _Block_copy(a7);
  _Block_copy(a7);
  _Block_copy(a7);
  swift_retain();
  uint64_t v186 = (void (**)(void, void, void))a7;
  _Block_copy(a7);
  uint64_t v185 = v40;
  swift_retain();
  uint64_t v42 = a1;
  id v43 = [a1 indexPathsForVisibleItems];
  uint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  os_log_type_t v45 = v188;
  swift_unknownObjectRetain();
  id v183 = v45;
  v179 = (void *)a3;
  sub_1001B60B8(v44, v45, a3, v39);
  swift_bridgeObjectRelease();
  v188 = v39;
  sub_1000CBC00((uint64_t)v39, (uint64_t)v37, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v37, 1, v26) == 1)
  {
    sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_1007069A0);
    uint64_t v46 = v184;
LABEL_11:
    aBlock = 0;
    unint64_t v192 = 0xE000000000000000;
    _StringGuts.grow(_:)(102);
    v66._object = (void *)0x80000001005DC620;
    v66._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v66);
    v67._countAndFlagsBits = 0xD000000000000019;
    v67._object = (void *)0x80000001005DC640;
    String.append(_:)(v67);
    sub_1000CBC00((uint64_t)v188, (uint64_t)v34, (uint64_t *)&unk_1007069A0);
    v68._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v68);
    swift_bridgeObjectRelease();
    v69._countAndFlagsBits = 0xD00000000000002DLL;
    v69._object = (void *)0x80000001005DC660;
    String.append(_:)(v69);
    unint64_t v70 = v183;
    [v183 loadViewIfNeeded];
    uint64_t v71 = *(void **)&v70[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v71)
    {
      id v72 = [v71 indexPathsForVisibleItems];
      uint64_t v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v74 = *(void *)(v73 + 16);
      swift_bridgeObjectRelease();
      uint64_t v190 = v74;
      v75._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v75);
      swift_bridgeObjectRelease();
      v76._countAndFlagsBits = 0xD00000000000001ALL;
      v76._object = (void *)0x80000001005DC690;
      String.append(_:)(v76);
      double v78 = aBlock;
      unint64_t v77 = v192;
      sub_100161A24((uint64_t)aBlock, v192);
      static Logger.UI.getter();
      swift_bridgeObjectRetain();
      double v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v79, v80))
      {
        double v81 = (uint8_t *)swift_slowAlloc();
        aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)double v81 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v190 = sub_10009B0E4((uint64_t)v78, v77, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s", v81, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t (*)()))(v182 + 8))(v46, v181);
      double v82 = v186;
      v186[2](v186, 0, 0);
      goto LABEL_16;
    }
    swift_release_n();
    id v148 = v186;
    _Block_release(v186);
    _Block_release(v148);
    _Block_release(v148);
    _Block_release(v148);
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v47(v31, v37, v26);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v49 = [v42 cellForItemAtIndexPath:isa];

  uint64_t v50 = v26;
  uint64_t v46 = v184;
  if (!v49)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v50);
    goto LABEL_11;
  }
  uint64_t v51 = v42;
  long long v153 = (void (*)(unint64_t, char *, uint64_t))v47;
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v52 = swift_dynamicCastClass();
  if (!v52)
  {

    goto LABEL_10;
  }
  uint64_t v53 = (void *)v52;
  int v54 = v177 & 1;
  os_log_type_t v34 = v178;
  uint64_t v154 = v27;
  if (!v178)
  {
    uint64_t v178 = v51;
    uint64_t v55 = v176;
    static Logger.UI.getter();
    uint64_t v56 = v49;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.debug.getter();
    BOOL v59 = os_log_type_enabled(v57, v58);
    uint64_t v180 = v56;
    uint64_t v152 = v50;
    uint64_t v151 = v53;
    if (v59)
    {
      char v60 = (uint8_t *)swift_slowAlloc();
      aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)char v60 = 136315138;
      uint64_t v61 = (*(uint64_t (**)(void))((swift_isaMask & *v53) + 0x1F8))();
      if (v61)
      {
        uint64_t v62 = (void *)v61;
        id v63 = v31;
        uint64_t v64 = (uint64_t *)(v61 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess();
        uint64_t v65 = *v64;
        swift_unknownObjectRetain();
      }
      else
      {
        id v63 = v31;
        uint64_t v65 = 0;
      }
      uint64_t v189 = v65;
      sub_1000CBE70(&qword_100717520);
      uint64_t v104 = String.init<A>(describing:)();
      uint64_t v189 = sub_10009B0E4(v104, v105, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v106 = v180;

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v60, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t (*)()))(v182 + 8))(v176, v181);
      uint64_t v50 = v152;
      int v31 = v63;
      uint64_t v53 = v151;
    }
    else
    {

      (*(void (**)(char *, uint64_t (*)()))(v182 + 8))(v55, v181);
    }
    uint64_t v107 = swift_allocObject();
    *(unsigned char *)(v107 + 16) = 0;
    uint64_t v108 = swift_allocObject();
    *(unsigned char *)(v108 + 16) = 0;
    uint64_t v109 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = v109;
    *(void *)(v110 + 24) = v108;
    id v183 = (char *)v110;
    uint64_t v184 = (char *)v108;
    uint64_t v111 = v187;
    *(void *)(v110 + 32) = sub_10022259C;
    *(void *)(v110 + 40) = v111;
    *(void *)(v110 + 48) = v107;
    *(unsigned char *)(v110 + 56) = v54;
    char v112 = v179;
    *(void *)(v110 + 64) = v179;
    if (v173)
    {
      sub_10009E6C4(0, &qword_10070AC38);
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      unsigned __int8 v113 = (void *)static OS_dispatch_queue.main.getter();
      aBlock = _swiftEmptyArrayStorage;
      sub_100078438(&qword_10070AC40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
      sub_1000CBE70(&qword_10070AC48);
      v177 = v31;
      sub_100073DF0(&qword_10070AC50, &qword_10070AC48);
      uint64_t v114 = v155;
      uint64_t v115 = v157;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v116 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

      (*(void (**)(char *, uint64_t))(v156 + 8))(v114, v115);
      uint64_t v182 = v116;
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v118 = (void *)swift_allocObject();
      uint64_t v181 = sub_10021ECF0;
      v118[2] = v107;
      v118[3] = sub_10021ECF0;
      v118[4] = v183;
      v118[5] = v53;
      long long v195 = sub_10021ECF8;
      uint64_t v196 = v118;
      aBlock = _NSConcreteStackBlock;
      unint64_t v192 = 1107296256;
      uint64_t v193 = sub_1000666D8;
      id v194 = &unk_100696DD0;
      BOOL v119 = _Block_copy(&aBlock);
      uint64_t v180 = v180;
      swift_retain();
      swift_retain();
      uint64_t v120 = v158;
      static DispatchQoS.unspecified.getter();
      unint64_t v121 = v160;
      sub_1001D8AD0();
      uint64_t v176 = (char *)ObjectType;
      OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      _Block_release(v119);
      (*(void (**)(char *, uint64_t))(v162 + 8))(v121, v163);
      (*(void (**)(char *, uint64_t))(v159 + 8))(v120, v161);
      swift_release();
      OS_dispatch_source.resume()();
      uint64_t v122 = v166;
      static DispatchTime.now()();
      uint64_t v123 = v168;
      *uint64_t v168 = 250;
      uint64_t v124 = v170;
      uint64_t v125 = *(void (**)(void *, void, uint64_t))(v170 + 104);
      uint64_t v126 = v171;
      v125(v123, enum case for DispatchTimeInterval.milliseconds(_:), v171);
      + infix(_:_:)();
      uint64_t v173 = *(void (**)(void *, uint64_t))(v124 + 8);
      v173(v123, v126);
      uint64_t v127 = *(void (**)(char *, uint64_t))(v167 + 8);
      v127(v122, v175);
      v125(v123, enum case for DispatchTimeInterval.never(_:), v126);
      uint64_t v128 = v169;
      *uint64_t v169 = 0;
      v125(v128, enum case for DispatchTimeInterval.nanoseconds(_:), v126);
      uint64_t v129 = v174;
      OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
      unint64_t v130 = v173;
      v173(v128, v126);
      v130(v123, v126);
      v127(v129, v175);
      uint64_t v176 = (char *)swift_getObjectType();
      uint64_t v131 = v154;
      uint64_t v132 = v165;
      (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v165, v177, v152);
      unint64_t v133 = (*(unsigned __int8 *)(v131 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      unint64_t v134 = (v164 + v133 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v135 = (v134 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v136 = (v135 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v137 = (v136 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v138 = swift_allocObject();
      *(void *)(v138 + 16) = v178;
      id v139 = v132;
      uint64_t v140 = v152;
      v153(v138 + v133, v139, v152);
      uint64_t v141 = v181;
      *(void *)(v138 + v134) = v182;
      uint64_t v142 = (uint64_t (**)())(v138 + v135);
      id v144 = (uint64_t (*)())v183;
      id v143 = v184;
      void *v142 = v141;
      v142[1] = v144;
      *(void *)(v138 + v136) = v151;
      *(void *)(v138 + v137) = v179;
      *(void *)(v138 + ((v137 + 15) & 0xFFFFFFFFFFFFFFF8)) = v143;
      swift_unknownObjectRetain();
      id v145 = v180;
      swift_retain();
      swift_retain();
      uint64_t v146 = v178;
      swift_unknownObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();

      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v177, v140);
      sub_1000CBBA4((uint64_t)v188, (uint64_t *)&unk_1007069A0);
      swift_release_n();
      double v82 = v186;
    }
    else
    {
      LODWORD(v182) = v54;
      double v82 = v186;
      _Block_copy(v186);
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v147 = (uint64_t)v184;
      swift_retain();
      swift_retain();
      sub_10020D118(v53, v109, v147, v107, v182, v112, v82);
      _Block_release(v82);

      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v31, v50);
      sub_1000CBBA4((uint64_t)v188, (uint64_t *)&unk_1007069A0);
      swift_release_n();
    }
    goto LABEL_17;
  }
  if (v178 == (char *)1)
  {
    id v83 = sub_1001DB0D4(v51);
    id v84 = [v83 window];

    if (v84)
    {
      [v53 bounds];
      sub_1001D6334(v53, v83, v54, v85, v86, v87, v88);
      double v82 = v186;
      ((void (**)(void, void *, void))v186)[2](v186, v53, 0);

      (*(void (**)(char *, uint64_t))(v154 + 8))(v31, v50);
      sub_1000CBBA4((uint64_t)v188, (uint64_t *)&unk_1007069A0);
      goto LABEL_17;
    }
    uint64_t v89 = v172;
    static Logger.UI.getter();
    id v90 = v49;
    id v91 = v83;
    id v92 = v90;
    id v93 = v91;
    uint64_t v94 = Logger.logObject.getter();
    os_log_type_t v95 = static os_log_type_t.error.getter();
    int v96 = v95;
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v97 = swift_slowAlloc();
      LODWORD(v183) = v96;
      uint64_t v98 = v97;
      uint64_t v99 = (void *)swift_slowAlloc();
      uint64_t v184 = (char *)swift_slowAlloc();
      aBlock = v184;
      *(_DWORD *)uint64_t v98 = 136315650;
      v177 = v31;
      uint64_t v190 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&aBlock);
      uint64_t v180 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v98 + 12) = 2112;
      uint64_t v190 = (uint64_t)v53;
      uint64_t v100 = v50;
      id v101 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v99 = v53;

      *(_WORD *)(v98 + 22) = 2112;
      uint64_t v190 = (uint64_t)v93;
      id v102 = v93;
      uint64_t v50 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v99[1] = v93;

      int v31 = v177;
      uint64_t v103 = v180;
      _os_log_impl((void *)&_mh_execute_header, v180, (os_log_type_t)v183, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v98, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t (*)()))(v182 + 8))(v172, v181);
    }
    else
    {

      (*(void (**)(char *, uint64_t (*)()))(v182 + 8))(v89, v181);
    }
    double v82 = v186;
    v186[2](v186, 0, 0);

    (*(void (**)(char *, uint64_t))(v154 + 8))(v31, v50);
LABEL_16:
    sub_1000CBBA4((uint64_t)v188, (uint64_t *)&unk_1007069A0);
LABEL_17:
    swift_release();
    swift_release();
    swift_release();
    _Block_release(v82);
    _Block_release(v82);
    _Block_release(v82);
    return;
  }
LABEL_32:
  type metadata accessor for DOCServicePopoverTrackerRegion(0);
  id v194 = v149;
  swift_release_n();
  swift_release();
  uint64_t v150 = v186;
  _Block_release(v186);
  _Block_release(v150);
  aBlock = v34;
  _Block_release(v150);
  _Block_release(v150);
  doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
  __break(1u);
}

void sub_10020F4D0(void *a1, char *a2, int a3, char a4, char *a5, void *a6)
{
  LODWORD(v75) = a3;
  uint64_t v74 = a2;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = &v69[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v69[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v69[-v17];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a6;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10021F0DC;
  *(void *)(v20 + 24) = v19;
  uint64_t v77 = v20;
  uint64_t v21 = *(void **)&a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v21)
  {
    _Block_copy(a6);
    swift_retain();
    _Block_copy(a6);
    uint64_t v30 = (void (*)(void *, void, void))a6[2];
    swift_retain();
    v30(a6, 0, 0);
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    int v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      Swift::String v76 = (char *)swift_slowAlloc();
      aBlock = v76;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v87 = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v75 = v33 + 14;
      id v34 = [a1 description];
      uint64_t v71 = a6;
      id v35 = v34;
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      uint64_t v87 = sub_10009B0E4(v36, v38, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s collectionView is nil because it is not loaded. Can not get display information for item: %s.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v18, v79);
      swift_release_n();
      swift_release();
      uint64_t v39 = v71;
LABEL_33:
      _Block_release(v39);
      return;
    }

    swift_unknownObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v18, v79);
    swift_release_n();
    goto LABEL_31;
  }
  uint64_t v72 = (uint64_t)a1;
  uint64_t v73 = v13;
  _Block_copy(a6);
  swift_retain();
  _Block_copy(a6);
  uint64_t v22 = qword_100705078;
  swift_retain();
  Swift::String v76 = v21;
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_100737318;
  uint64_t v24 = (unint64_t *)(qword_100737318
                           + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess();
  unint64_t v25 = *v24;
  if (!(v25 >> 62))
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v27 = v23;
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_6;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    int v29 = 0;
    goto LABEL_14;
  }
  id v40 = v23;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_13;
  }
LABEL_6:
  if ((v25 & 0xC000000000000001) != 0)
  {
    uint64_t v68 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    int v29 = *(unsigned __int8 *)(v68 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v28 = *(void *)(v25 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    int v29 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    swift_release();
  }
LABEL_14:
  LODWORD(v41) = a4 & 1;
  id v42 = [v76 indexPathsForVisibleItems];
  type metadata accessor for IndexPath();
  uint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v44 = *(void *)(v43 + 16);
  swift_bridgeObjectRelease();
  os_log_type_t v45 = v73;
  if (v44)
  {
    sub_1000B00FC(1);
    if (!v29)
    {
      _Block_copy(a6);
      swift_retain();
      uint64_t v46 = v76;
      sub_10020DD10(v76, a5, v72, v74, v41, v75 & 1, a6);
      _Block_release(a6);
      swift_release();

      swift_release_n();
LABEL_32:
      uint64_t v39 = a6;
      goto LABEL_33;
    }
    goto LABEL_21;
  }
  int v70 = v41;
  static Logger.UI.getter();
  unint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v47, v48))
  {
    id v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = (char *)swift_slowAlloc();
    uint64_t v71 = a6;
    aBlock = v50;
    *(_DWORD *)id v49 = 136315138;
    uint64_t v80 = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, (uint64_t *)&aBlock);
    os_log_type_t v45 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s collectionView has 0 visible items. Forcing a layout pass.", v49, 0xCu);
    swift_arrayDestroy();
    a6 = v71;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v16, v79);
  id v51 = [a5 view];
  LODWORD(v41) = v70;
  if (v51)
  {
    uint64_t v52 = v51;
    [v51 layoutIfNeeded];

    sub_1000B00FC(1);
LABEL_21:
    static Logger.UI.getter();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      int v70 = v41;
      uint64_t v41 = v55;
      uint64_t v56 = swift_slowAlloc();
      uint64_t v71 = a6;
      uint64_t v80 = v56;
      *(_DWORD *)uint64_t v41 = 136315394;
      aBlock = (char *)sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v41 + 12) = 2080;
      aBlock = 0;
      unint64_t v82 = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      aBlock = (char *)0xD00000000000001BLL;
      unint64_t v82 = 0x80000001005DC600;
      if (v29) {
        uint64_t v57 = 1702195828;
      }
      else {
        uint64_t v57 = 0x65736C6166;
      }
      if (v29) {
        unint64_t v58 = 0xE400000000000000;
      }
      else {
        unint64_t v58 = 0xE500000000000000;
      }
      unint64_t v59 = v58;
      String.append(_:)(*(Swift::String *)&v57);
      swift_bridgeObjectRelease();
      aBlock = (char *)sub_10009B0E4((uint64_t)aBlock, v82, &v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s collectionView delayed layout is required (settings: %s) before gather animation info.", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      a6 = v71;
      swift_slowDealloc();
      LOBYTE(v41) = v70;
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v73, v79);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v78 + 8))(v45, v79);
    }
    char v60 = self;
    uint64_t v61 = swift_allocObject();
    id v63 = v76;
    uint64_t v62 = v77;
    *(void *)(v61 + 16) = v76;
    *(void *)(v61 + 24) = a5;
    uint64_t v64 = v74;
    *(void *)(v61 + 32) = v72;
    *(void *)(v61 + 40) = v64;
    *(void *)(v61 + 48) = sub_10021F0E4;
    *(void *)(v61 + 56) = v62;
    *(unsigned char *)(v61 + 64) = v41;
    *(unsigned char *)(v61 + 65) = v75 & 1;
    double v85 = sub_10021ECD8;
    uint64_t v86 = v61;
    aBlock = (char *)_NSConcreteStackBlock;
    unint64_t v82 = 1107296256;
    id v83 = sub_1000666D8;
    id v84 = &unk_100696D08;
    uint64_t v65 = _Block_copy(&aBlock);
    Swift::String v66 = v63;
    swift_unknownObjectRetain();
    Swift::String v67 = a5;
    swift_retain();
    swift_release();
    [v60 performAfterCATransactionCommits:v65];

    _Block_release(v65);
    swift_release_n();
LABEL_31:
    swift_release();
    goto LABEL_32;
  }
LABEL_36:
  swift_release_n();
  _Block_release(a6);
  _Block_release(a6);
  __break(1u);
}

void sub_10020FF28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void (*a7)(double, double, double, double), uint64_t a8)
{
  uint64_t v107 = a6;
  uint64_t v112 = type metadata accessor for Logger();
  uint64_t v111 = *(void *)(v112 - 8);
  uint64_t v14 = __chkstk_darwin(v112);
  uint64_t v110 = ((char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v102 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v102 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v102 - v22;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v25 = Strong;
    uint64_t v108 = a7;
    uint64_t v26 = a1;
    uint64_t v109 = a8;
    id v27 = [Strong view];
    if (!v27)
    {
      swift_release();
      __break(1u);
      return;
    }
    uint64_t v28 = v27;
    int v29 = (unsigned char *)(a3 + 16);
    id v30 = sub_1001DB0D4(v27);

    int v31 = v30;
    swift_beginAccess();
    *int v29 = 1;
    id v32 = [v30 window];

    if (!v32)
    {
      static Logger.UI.getter();
      id v43 = v26;
      id v44 = v31;
      id v45 = v43;
      id v46 = v44;
      unint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      uint64_t v110 = v47;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v50 = (void *)swift_slowAlloc();
        uint64_t v107 = (void *)swift_slowAlloc();
        uint64_t v116 = v107;
        *(_DWORD *)uint64_t v49 = 136315650;
        uint64_t v104 = v25;
        uint64_t v114 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v49 + 12) = 2112;
        uint64_t v114 = (uint64_t)v45;
        id v51 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v50 = v45;

        *(_WORD *)(v49 + 22) = 2112;
        uint64_t v114 = (uint64_t)v46;
        id v52 = v46;
        unint64_t v25 = v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v50[1] = v46;

        uint64_t v53 = v110;
        _os_log_impl((void *)&_mh_execute_header, v110, v48, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v49, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v111 + 8))(v23, v112);
      v108(0.0, 0.0, 0.0, 0.0);
      goto LABEL_30;
    }
    LODWORD(v106) = a5 & 1;
    swift_beginAccess();
    char v33 = *(unsigned char *)(a4 + 16);
    id v34 = v26;
    unint64_t v105 = v31;
    if (v33)
    {
      static Logger.UI.getter();
      id v35 = v26;
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        *(_DWORD *)unint64_t v38 = 136315138;
        uint64_t v39 = (*(uint64_t (**)(void))((swift_isaMask & *v35) + 0x1F8))();
        uint64_t v104 = v25;
        if (v39)
        {
          id v40 = (void *)v39;
          uint64_t v41 = (uint64_t *)(v39 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v42 = *v41;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v42 = 0;
        }
        uint64_t v113 = v42;
        sub_1000CBE70(&qword_100717520);
        uint64_t v64 = String.init<A>(describing:)();
        uint64_t v113 = sub_10009B0E4(v64, v65, (uint64_t *)&v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Timed out (250ms) re-fetching thumbnail for %s", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v62 = *(void (**)(char *, uint64_t))(v111 + 8);
        v62(v21, v112);
LABEL_22:
        unint64_t v25 = v104;
        int v31 = v105;
        id v34 = v26;
        char v63 = LOBYTE(v106);
        goto LABEL_23;
      }

      uint64_t v62 = *(void (**)(char *, uint64_t))(v111 + 8);
      v62(v21, v112);
    }
    else
    {
      static Logger.UI.getter();
      os_log_type_t v54 = v26;
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136315138;
        uint64_t v58 = (*(uint64_t (**)(void))((swift_isaMask & *v54) + 0x1F8))();
        uint64_t v104 = v25;
        if (v58)
        {
          unint64_t v59 = (void *)v58;
          char v60 = (uint64_t *)(v58 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v61 = *v60;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v61 = 0;
        }
        uint64_t v113 = v61;
        sub_1000CBE70(&qword_100717520);
        uint64_t v66 = String.init<A>(describing:)();
        uint64_t v113 = sub_10009B0E4(v66, v67, (uint64_t *)&v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Updated thumbnail for %s", v57, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v62 = *(void (**)(char *, uint64_t))(v111 + 8);
        v62(v18, v112);
        goto LABEL_22;
      }

      uint64_t v62 = *(void (**)(char *, uint64_t))(v111 + 8);
      v62(v18, v112);
    }
    char v63 = LOBYTE(v106);
LABEL_23:
    uint64_t v68 = *(void **)((char *)v34 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    [v68 addDecoration];
    id v69 = [v68 layoutIfNeeded];
    double v70 = (*(double (**)(id))((swift_isaMask & *v34) + 0x100))(v69);
    sub_1001D6334(v34, v31, v63, v70, v71, v72, v73);
    double v106 = v74;
    double v76 = v75;
    double v78 = v77;
    double v80 = v79;
    [v68 _continuousCornerRadius];
    double v82 = v81;
    [v68 bounds];
    double v87 = v85;
    double v88 = v86;
    if (v82 <= 0.0)
    {
      id v92 = sub_10020A5CC(v107, v85, v86);
    }
    else
    {
      double v89 = v83;
      double v90 = v84;
      [v68 _continuousCornerRadius];
      id v92 = [self bezierPathWithRoundedRect:v89 cornerRadius:v90 v87, v88, v91];
    }
    id v93 = v92;
    static Logger.UI.getter();
    uint64_t v94 = v34;
    os_log_type_t v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v103 = v68;
      uint64_t v97 = swift_slowAlloc();
      uint64_t v107 = v62;
      uint64_t v98 = (uint8_t *)v97;
      uint64_t v99 = (void *)swift_slowAlloc();
      id v102 = v93;
      *(_DWORD *)uint64_t v98 = 138412290;
      uint64_t v115 = v94;
      uint64_t v100 = v94;
      uint64_t v68 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v99 = v34;
      id v93 = v102;

      _os_log_impl((void *)&_mh_execute_header, v95, v96, "calling completion block with cell %@", v98, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      int v31 = v105;
      swift_slowDealloc();
      uint64_t v62 = (void (*)(char *, uint64_t))v107;
      swift_slowDealloc();
    }
    else
    {

      os_log_type_t v95 = v94;
    }

    v62((char *)v110, v112);
    id v101 = [v68 image];
    id v46 = v93;
    v108(v106, v76, v78, v80);

    unint64_t v25 = v46;
LABEL_30:
  }
}

uint64_t sub_100210B5C(void *a1, char *a2, uint64_t a3, void **a4, int a5, int a6, void (*a7)(double, double, double, double), uint64_t a8)
{
  int v182 = a6;
  LODWORD(v186) = a5;
  uint64_t v187 = a4;
  uint64_t v197 = a2;
  uint64_t v180 = type metadata accessor for DispatchTimeInterval();
  uint64_t v179 = *(void *)(v180 - 8);
  uint64_t v12 = __chkstk_darwin(v180);
  uint64_t v178 = (void (**)(char *, char *, uint64_t))((char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v177 = (void (**)(char *, char *, uint64_t))((char *)&v160 - v14);
  uint64_t v184 = type metadata accessor for DispatchTime();
  uint64_t v176 = *(void *)(v184 - 8);
  uint64_t v15 = __chkstk_darwin(v184);
  uint64_t v175 = (char *)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v183 = (char *)&v160 - v17;
  uint64_t v172 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v169 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for DispatchQoS();
  uint64_t v168 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v167 = (char *)&v160 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for Logger();
  uint64_t v192 = *(void *)(v191 - 8);
  uint64_t v21 = __chkstk_darwin(v191);
  uint64_t v190 = (char *)&v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v181 = (char *)&v160 - v24;
  __chkstk_darwin(v23);
  uint64_t v185 = (char *)&v160 - v25;
  uint64_t v26 = type metadata accessor for IndexPath();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v174 = (char *)&v160 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = v29;
  __chkstk_darwin(v28);
  int v31 = (char *)&v160 - v30;
  id v189 = (id)sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v32 = __chkstk_darwin(v189);
  id v34 = (char *)&v160 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  os_log_type_t v37 = (char *)&v160 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v160 - v38;
  uint64_t v40 = swift_allocObject();
  uint64_t v193 = a7;
  *(void *)(v40 + 16) = a7;
  *(void *)(v40 + 24) = a8;
  uint64_t v195 = a8;
  uint64_t v196 = v40;
  swift_retain_n();
  id v41 = [a1 indexPathsForVisibleItems];
  uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v43 = v197;
  swift_unknownObjectRetain();
  id v194 = v43;
  v188 = (void *)a3;
  sub_1001B60B8(v42, v43, a3, v39);
  swift_bridgeObjectRelease();
  uint64_t v197 = v39;
  uint64_t v44 = (uint64_t)v39;
  uint64_t v45 = v26;
  sub_1000CBC00(v44, (uint64_t)v37, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v37, 1, v26) == 1)
  {
    sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_1007069A0);
LABEL_11:
    aBlock = 0;
    unint64_t v201 = 0xE000000000000000;
    p_aBlock = &aBlock;
    _StringGuts.grow(_:)(102);
    v63._object = (void *)0x80000001005DC620;
    v63._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v63);
    v64._countAndFlagsBits = 0xD000000000000019;
    v64._object = (void *)0x80000001005DC640;
    String.append(_:)(v64);
    sub_1000CBC00((uint64_t)v197, (uint64_t)v34, (uint64_t *)&unk_1007069A0);
    v65._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66._countAndFlagsBits = 0xD00000000000002DLL;
    v66._object = (void *)0x80000001005DC660;
    String.append(_:)(v66);
    unint64_t v67 = v194;
    [v194 loadViewIfNeeded];
    uint64_t v68 = *(void **)&v67[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    id v69 = v190;
    if (v68)
    {
      id v70 = [v68 indexPathsForVisibleItems];
      uint64_t v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v72 = *(void *)(v71 + 16);
      swift_bridgeObjectRelease();
      uint64_t v199 = v72;
      v73._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v73);
      swift_bridgeObjectRelease();
      v74._countAndFlagsBits = 0xD00000000000001ALL;
      v74._object = (void *)0x80000001005DC690;
      String.append(_:)(v74);
      double v76 = aBlock;
      unint64_t v75 = v201;
      sub_100161A24((uint64_t)aBlock, v201);
      static Logger.UI.getter();
      swift_bridgeObjectRetain();
      double v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v77, v78))
      {
        double v79 = (uint8_t *)swift_slowAlloc();
        aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)double v79 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v199 = sub_10009B0E4((uint64_t)v76, v75, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "%s", v79, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v192 + 8))(v69, v191);
      v193(0.0, 0.0, 0.0, 0.0);
      goto LABEL_16;
    }
    swift_release_n();
    __break(1u);
    goto LABEL_33;
  }
  id v46 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v46(v31, v37, v26);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v48 = [a1 cellForItemAtIndexPath:isa];

  if (!v48)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v45);
    goto LABEL_11;
  }
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v49 = swift_dynamicCastClass();
  if (!v49)
  {

    goto LABEL_10;
  }
  uint64_t v50 = (void *)v49;
  char v51 = v186 & 1;
  p_aBlock = v187;
  if (!v187)
  {
    LODWORD(v187) = v186 & 1;
    id v189 = a1;
    uint64_t v162 = v27;
    uint64_t v53 = v185;
    static Logger.UI.getter();
    os_log_type_t v54 = (char *)v48;
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    BOOL v57 = os_log_type_enabled(v55, v56);
    uint64_t v190 = v54;
    uint64_t v163 = v31;
    uint64_t v161 = v50;
    uint64_t v160 = v46;
    if (v57)
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136315138;
      uint64_t v59 = (*(uint64_t (**)(void))((swift_isaMask & *v50) + 0x1F8))();
      if (v59)
      {
        char v60 = (void *)v59;
        uint64_t v61 = (uint64_t *)(v59 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess();
        uint64_t v62 = *v61;
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v62 = 0;
      }
      uint64_t v198 = v62;
      sub_1000CBE70(&qword_100717520);
      uint64_t v111 = String.init<A>(describing:)();
      uint64_t v198 = sub_10009B0E4(v111, v112, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v113 = v190;

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v192 + 8))(v185, v191);
      uint64_t v96 = v196;
      uint64_t v50 = v161;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v192 + 8))(v53, v191);
      uint64_t v96 = v196;
    }
    uint64_t v114 = swift_allocObject();
    *(unsigned char *)(v114 + 16) = 0;
    uint64_t v115 = swift_allocObject();
    *(unsigned char *)(v115 + 16) = 0;
    uint64_t v116 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v117 = swift_allocObject();
    *(void *)(v117 + 16) = v116;
    *(void *)(v117 + 24) = v115;
    *(void *)(v117 + 32) = sub_10022266C;
    *(void *)(v117 + 40) = v96;
    uint64_t v192 = v114;
    *(void *)(v117 + 48) = v114;
    char v118 = (char)v187;
    *(unsigned char *)(v117 + 56) = (_BYTE)v187;
    BOOL v119 = v188;
    id v194 = (char *)v117;
    *(void *)(v117 + 64) = v188;
    if (v182)
    {
      sub_10009E6C4(0, &qword_10070AC38);
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v120 = v192;
      swift_retain();
      swift_retain();
      unint64_t v121 = (void *)static OS_dispatch_queue.main.getter();
      aBlock = _swiftEmptyArrayStorage;
      sub_100078438(&qword_10070AC40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
      sub_1000CBE70(&qword_10070AC48);
      sub_100073DF0(&qword_10070AC50, &qword_10070AC48);
      uint64_t v191 = v115;
      uint64_t v122 = v164;
      uint64_t v123 = v120;
      uint64_t v124 = v166;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v125 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

      (*(void (**)(char *, uint64_t))(v165 + 8))(v122, v124);
      uint64_t v126 = (void (*)(double, double, double, double))v125;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v187 = (void **)v45;
      uint64_t v128 = (char *)ObjectType;
      uint64_t v129 = (void *)swift_allocObject();
      uint64_t v186 = sub_10021ECF0;
      v129[2] = v123;
      v129[3] = sub_10021ECF0;
      unint64_t v130 = v161;
      v129[4] = v194;
      v129[5] = v130;
      uint64_t v204 = sub_10021ECF8;
      v205 = v129;
      aBlock = _NSConcreteStackBlock;
      unint64_t v201 = 1107296256;
      uint64_t v202 = sub_1000666D8;
      uint64_t v203 = &unk_100696B78;
      uint64_t v131 = _Block_copy(&aBlock);
      uint64_t v190 = v190;
      swift_retain();
      swift_retain();
      uint64_t v132 = v167;
      static DispatchQoS.unspecified.getter();
      unint64_t v133 = v169;
      sub_1001D8AD0();
      uint64_t v185 = v128;
      uint64_t v193 = v126;
      OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      _Block_release(v131);
      (*(void (**)(char *, uint64_t))(v171 + 8))(v133, v172);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v132, v170);
      swift_release();
      OS_dispatch_source.resume()();
      unint64_t v134 = v175;
      static DispatchTime.now()();
      unint64_t v135 = v177;
      void *v177 = 250;
      uint64_t v136 = v179;
      unint64_t v137 = *(void (**)(void *, void, uint64_t))(v179 + 104);
      uint64_t v138 = v180;
      v137(v135, enum case for DispatchTimeInterval.milliseconds(_:), v180);
      + infix(_:_:)();
      id v139 = *(void (**)(void *, uint64_t))(v136 + 8);
      v139(v135, v138);
      uint64_t v140 = *(void (**)(char *, uint64_t))(v176 + 8);
      v140(v134, v184);
      v137(v135, enum case for DispatchTimeInterval.never(_:), v138);
      uint64_t v141 = v178;
      void *v178 = 0;
      v137(v141, enum case for DispatchTimeInterval.nanoseconds(_:), v138);
      uint64_t v142 = v183;
      OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
      v139(v141, v138);
      v139(v135, v138);
      v140(v142, v184);
      uint64_t v185 = (char *)swift_getObjectType();
      uint64_t v143 = v162;
      id v144 = v174;
      (*(void (**)(char *, char *, void **))(v162 + 16))(v174, v163, v187);
      unint64_t v145 = (*(unsigned __int8 *)(v143 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
      unint64_t v146 = (v173 + v145 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v147 = (v146 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v148 = (v147 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v149 = (v148 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v150 = swift_allocObject();
      *(void *)(v150 + 16) = v189;
      unint64_t v151 = v150 + v145;
      uint64_t v152 = v187;
      v160((char *)v151, v144, (uint64_t)v187);
      long long v153 = v194;
      *(void *)(v150 + v146) = v193;
      uint64_t v154 = (void *)(v150 + v147);
      *uint64_t v154 = v186;
      v154[1] = v153;
      *(void *)(v150 + v148) = v161;
      *(void *)(v150 + v149) = v188;
      *(void *)(v150 + ((v149 + 15) & 0xFFFFFFFFFFFFFFF8)) = v191;
      swift_unknownObjectRetain();
      id v155 = v190;
      swift_retain();
      swift_retain();
      id v156 = v189;
      swift_unknownObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();

      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(char *, void **))(v162 + 8))(v163, v152);
    }
    else
    {
      uint64_t v157 = v195;
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v158 = v192;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10020FF28(v50, v116, v115, v158, v118, v119, v193, v157);

      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v45);
    }
    sub_1000CBBA4((uint64_t)v197, (uint64_t *)&unk_1007069A0);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (v187 == (void **)1)
  {
    id v81 = sub_1001DB0D4(a1);
    id v82 = [v81 window];

    if (!v82)
    {
      uint64_t v163 = v31;
      uint64_t v97 = v181;
      static Logger.UI.getter();
      id v98 = v48;
      id v99 = v81;
      uint64_t v100 = (char *)v98;
      id v101 = v99;
      id v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v104 = swift_slowAlloc();
        id v194 = v100;
        uint64_t v105 = v104;
        uint64_t v106 = swift_slowAlloc();
        uint64_t v187 = (void **)v45;
        uint64_t v107 = (void *)v106;
        uint64_t v190 = (char *)swift_slowAlloc();
        aBlock = v190;
        *(_DWORD *)uint64_t v105 = 136315650;
        uint64_t v199 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v105 + 12) = 2112;
        uint64_t v162 = v27;
        uint64_t v199 = (uint64_t)v50;
        uint64_t v108 = v102;
        uint64_t v109 = v194;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v107 = v50;

        *(_WORD *)(v105 + 22) = 2112;
        uint64_t v199 = (uint64_t)v101;
        id v110 = v101;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v107[1] = v101;

        uint64_t v27 = v162;
        _os_log_impl((void *)&_mh_execute_header, v108, v103, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v105, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        uint64_t v45 = (uint64_t)v187;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v100 = v194;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v192 + 8))(v181, v191);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v192 + 8))(v97, v191);
      }
      v193(0.0, 0.0, 0.0, 0.0);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v163, v45);
      sub_1000CBBA4((uint64_t)v197, (uint64_t *)&unk_1007069A0);
      swift_release();
      return swift_release();
    }
    [v50 bounds];
    sub_1001D6334(v50, v81, v51, v83, v84, v85, v86);
    double v88 = v87;
    double v90 = v89;
    double v92 = v91;
    double v94 = v93;
    id v95 = v48;
    v193(v88, v90, v92, v94);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v45);
LABEL_16:
    sub_1000CBBA4((uint64_t)v197, (uint64_t *)&unk_1007069A0);
    swift_release();
    return swift_release();
  }
LABEL_33:
  type metadata accessor for DOCServicePopoverTrackerRegion(0);
  uint64_t v203 = v159;
  swift_release_n();
  swift_release();
  aBlock = p_aBlock;
  uint64_t result = doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100212318(void *a1, void **a2, int a3, char a4, char *a5, void (*a6)(double, double, double, double), uint64_t a7)
{
  LODWORD(v73) = a3;
  uint64_t v72 = a2;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v76 = *(void *)(v12 - 8);
  uint64_t v77 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = &v68[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v68[-v19];
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21;
  *(void *)(v21 + 16) = a6;
  *(void *)(v21 + 24) = a7;
  uint64_t v23 = *(void **)&a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
  {
    uint64_t v33 = swift_retain_n();
    ((void (*)(uint64_t, double, double, double, double))a6)(v33, 0.0, 0.0, 0.0, 0.0);
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    id v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t aBlock = v73;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v85 = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v36 + 12) = 2080;
      id v37 = [a1 description];
      uint64_t v75 = a7;
      id v38 = v37;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v74 = v22;
      unint64_t v41 = v40;

      uint64_t v85 = sub_10009B0E4(v39, v41, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s collectionView is nil because it is not loaded. Can not get display information for item: %s.", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v20, v77);
      swift_release();
      return swift_release();
    }

    swift_unknownObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v20, v77);
LABEL_31:
    swift_release();
    return swift_release();
  }
  uint64_t v70 = (uint64_t)a1;
  uint64_t v71 = v15;
  uint64_t v74 = v21;
  uint64_t v75 = a7;
  uint64_t v24 = qword_100705078;
  swift_retain_n();
  id v25 = v23;
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)qword_100737318;
  uint64_t v27 = (unint64_t *)(qword_100737318
                           + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess();
  unint64_t v28 = *v27;
  if (!(v28 >> 62))
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v30 = v26;
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_6;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    int v32 = 0;
    goto LABEL_14;
  }
  id v42 = v26;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_13;
  }
LABEL_6:
  if ((v28 & 0xC000000000000001) != 0)
  {
    uint64_t v67 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    int v32 = *(unsigned __int8 *)(v67 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v31 = *(void *)(v28 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    int v32 = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    swift_release();
  }
LABEL_14:
  int v69 = a4 & 1;
  id v43 = [v25 indexPathsForVisibleItems];
  type metadata accessor for IndexPath();
  uint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v45 = *(void *)(v44 + 16);
  swift_bridgeObjectRelease();
  uint64_t v46 = v75;
  if (v45)
  {
    sub_1000B00FC(1);
    unint64_t v47 = v71;
    if (!v32)
    {
      swift_retain();
      sub_100210B5C(v25, a5, v70, v72, v69, v73 & 1, a6, v46);
      swift_release();

      return swift_release_n();
    }
    goto LABEL_21;
  }
  static Logger.UI.getter();
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v49, v50))
  {
    char v51 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)char v51 = 136315138;
    uint64_t v78 = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s collectionView has 0 visible items. Forcing a layout pass.", v51, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v18, v77);
  unint64_t v47 = v71;
  id v52 = [a5 view];
  if (v52)
  {
    uint64_t v53 = v52;
    [v52 layoutIfNeeded];

    sub_1000B00FC(1);
LABEL_21:
    static Logger.UI.getter();
    os_log_type_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t aBlock = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t aBlock = 0;
      unint64_t v80 = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      uint64_t aBlock = 0xD00000000000001BLL;
      unint64_t v80 = 0x80000001005DC600;
      if (v32) {
        uint64_t v57 = 1702195828;
      }
      else {
        uint64_t v57 = 0x65736C6166;
      }
      if (v32) {
        unint64_t v58 = 0xE400000000000000;
      }
      else {
        unint64_t v58 = 0xE500000000000000;
      }
      unint64_t v59 = v58;
      String.append(_:)(*(Swift::String *)&v57);
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_10009B0E4(aBlock, v80, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s collectionView delayed layout is required (settings: %s) before gather animation info.", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v71, v77);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v47, v77);
    }
    char v60 = self;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = v25;
    *(void *)(v61 + 24) = a5;
    uint64_t v62 = v72;
    *(void *)(v61 + 32) = v70;
    *(void *)(v61 + 40) = v62;
    uint64_t v63 = v74;
    *(void *)(v61 + 48) = sub_10021F0A0;
    *(void *)(v61 + 56) = v63;
    *(unsigned char *)(v61 + 64) = v69;
    *(unsigned char *)(v61 + 65) = v73 & 1;
    double v83 = sub_10021ECD8;
    uint64_t v84 = v61;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v80 = 1107296256;
    id v81 = sub_1000666D8;
    id v82 = &unk_100696AD8;
    Swift::String v64 = _Block_copy(&aBlock);
    id v65 = v25;
    swift_unknownObjectRetain();
    Swift::String v66 = a5;
    swift_retain();
    swift_release();
    [v60 performAfterCATransactionCommits:v64];

    _Block_release(v64);
    goto LABEL_31;
  }
LABEL_35:
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

void sub_100212CD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void (*a7)(id, uint64_t, double, double, double, double), uint64_t a8)
{
  unint64_t v112 = a7;
  uint64_t v109 = a6;
  uint64_t v114 = type metadata accessor for Logger();
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v13 = __chkstk_darwin(v114);
  uint64_t v15 = ((char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v104 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v104 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v104 - v22;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v25 = Strong;
    uint64_t v111 = v15;
    uint64_t v110 = a8;
    id v26 = [Strong view];
    if (!v26)
    {
      swift_release();
      __break(1u);
      return;
    }
    uint64_t v27 = v26;
    unint64_t v28 = (unsigned char *)(a3 + 16);
    id v29 = sub_1001DB0D4(v26);

    id v30 = v29;
    swift_beginAccess();
    *unint64_t v28 = 1;
    id v31 = [v29 window];

    if (!v31)
    {
      static Logger.UI.getter();
      id v44 = a1;
      id v45 = v30;
      id v46 = v44;
      unint64_t v47 = (char *)v45;
      id v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      uint64_t v111 = v48;
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        char v51 = (void *)swift_slowAlloc();
        uint64_t v109 = (void *)swift_slowAlloc();
        uint64_t v117 = v109;
        *(_DWORD *)uint64_t v50 = 136315650;
        uint64_t v108 = v25;
        v116[0] = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&v117);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 12) = 2112;
        v116[0] = (uint64_t)v46;
        id v52 = v46;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v51 = v46;

        *(_WORD *)(v50 + 22) = 2112;
        v116[0] = (uint64_t)v47;
        uint64_t v53 = v47;
        id v25 = v108;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v51[1] = v47;

        os_log_type_t v54 = v111;
        _os_log_impl((void *)&_mh_execute_header, v111, v49, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v50, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v113 + 8))(v23, v114);
      v112(0, 0, 0.0, 0.0, 0.0, 0.0);
      goto LABEL_32;
    }
    LODWORD(v107) = a5 & 1;
    swift_beginAccess();
    char v32 = *(unsigned char *)(a4 + 16);
    uint64_t v108 = v25;
    uint64_t v105 = v30;
    if (v32)
    {
      static Logger.UI.getter();
      uint64_t v33 = a1;
      id v34 = a1;
      os_log_type_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.debug.getter();
      BOOL v37 = os_log_type_enabled(v35, v36);
      id v38 = v111;
      if (v37)
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        v116[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136315138;
        uint64_t v40 = (*(uint64_t (**)(void))((swift_isaMask & *v34) + 0x1F8))();
        if (v40)
        {
          unint64_t v41 = (void *)v40;
          id v42 = (uint64_t *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v43 = *v42;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v43 = 0;
        }
        uint64_t v115 = v43;
        sub_1000CBE70(&qword_100717520);
        uint64_t v64 = String.init<A>(describing:)();
        uint64_t v115 = sub_10009B0E4(v64, v65, v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Timed out (250ms) re-fetching thumbnail for %s", v39, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v63 = *(void (**)(char *, uint64_t))(v113 + 8);
        v63(v21, v114);
LABEL_21:
        id v25 = v108;
        id v38 = v111;
        id v30 = v105;
        uint64_t v33 = a1;
        goto LABEL_22;
      }

      uint64_t v63 = *(void (**)(char *, uint64_t))(v113 + 8);
      v63(v21, v114);
    }
    else
    {
      static Logger.UI.getter();
      uint64_t v33 = a1;
      os_log_type_t v55 = a1;
      uint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v56, v57))
      {
        unint64_t v58 = (uint8_t *)swift_slowAlloc();
        v116[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v58 = 136315138;
        uint64_t v59 = (*(uint64_t (**)(void))((swift_isaMask & *v55) + 0x1F8))();
        if (v59)
        {
          char v60 = (void *)v59;
          uint64_t v61 = (uint64_t *)(v59 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v62 = *v61;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v62 = 0;
        }
        uint64_t v115 = v62;
        sub_1000CBE70(&qword_100717520);
        uint64_t v66 = String.init<A>(describing:)();
        uint64_t v115 = sub_10009B0E4(v66, v67, v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Updated thumbnail for %s", v58, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v63 = *(void (**)(char *, uint64_t))(v113 + 8);
        v63(v18, v114);
        goto LABEL_21;
      }

      uint64_t v63 = *(void (**)(char *, uint64_t))(v113 + 8);
      v63(v18, v114);
      id v38 = v111;
    }
LABEL_22:
    uint64_t v68 = *(void **)((char *)v33 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    uint64_t v69 = [v68 addDecoration];
    uint64_t v70 = &v25[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if ((unint64_t)(*(void *)v70 - 1) >= 2) {
      uint64_t v71 = v69;
    }
    else {
      uint64_t v71 = v69 | 2;
    }
    uint64_t v106 = v71;
    id v72 = [v68 layoutIfNeeded];
    double v73 = (*(double (**)(id))((swift_isaMask & *v33) + 0x100))(v72);
    sub_1001D6334(v33, v30, SLOBYTE(v107), v73, v74, v75, v76);
    double v107 = v77;
    double v79 = v78;
    double v81 = v80;
    double v83 = v82;
    [v68 _continuousCornerRadius];
    double v85 = v84;
    [v68 bounds];
    double v90 = v88;
    double v91 = v89;
    if (v85 <= 0.0)
    {
      id v95 = sub_10020A5CC(v109, v88, v89);
    }
    else
    {
      double v92 = v86;
      double v93 = v87;
      [v68 _continuousCornerRadius];
      id v95 = [self bezierPathWithRoundedRect:v92 cornerRadius:v93 v90, v91, v94];
    }
    uint64_t v109 = v95;
    static Logger.UI.getter();
    uint64_t v96 = v33;
    uint64_t v97 = Logger.logObject.getter();
    os_log_type_t v98 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = swift_slowAlloc();
      uint64_t v104 = v63;
      uint64_t v100 = (uint8_t *)v99;
      id v101 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v100 = 138412290;
      uint64_t v115 = (uint64_t)v96;
      id v102 = v96;
      id v25 = v108;
      id v38 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v101 = v33;

      _os_log_impl((void *)&_mh_execute_header, v97, v98, "calling completion block with cell %@", v100, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      id v30 = v105;
      swift_slowDealloc();
      uint64_t v63 = v104;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v97 = v96;
    }

    v63((char *)v38, v114);
    id v103 = [v68 image];
    unint64_t v47 = v109;
    v112(v103, v106, v107, v79, v81, v83);

    id v25 = v47;
LABEL_32:
  }
}

uint64_t sub_100213948(void *a1, char *a2, uint64_t a3, void **a4, int a5, int a6, void (*a7)(id, uint64_t, double, double, double, double), uint64_t a8)
{
  int v182 = a6;
  LODWORD(v186) = a5;
  uint64_t v187 = a4;
  uint64_t v197 = a2;
  uint64_t v180 = type metadata accessor for DispatchTimeInterval();
  uint64_t v179 = *(void *)(v180 - 8);
  uint64_t v12 = __chkstk_darwin(v180);
  uint64_t v178 = (void (**)(char *, char *, uint64_t))((char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v177 = (void (**)(char *, char *, uint64_t))((char *)&v160 - v14);
  uint64_t v184 = type metadata accessor for DispatchTime();
  uint64_t v176 = *(void *)(v184 - 8);
  uint64_t v15 = __chkstk_darwin(v184);
  uint64_t v175 = (char *)&v160 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v183 = (char *)&v160 - v17;
  uint64_t v172 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v169 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for DispatchQoS();
  uint64_t v168 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v167 = (char *)&v160 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (char *)&v160 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for Logger();
  uint64_t v192 = *(void *)(v191 - 8);
  uint64_t v21 = __chkstk_darwin(v191);
  uint64_t v190 = (char *)&v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v181 = (char *)&v160 - v24;
  __chkstk_darwin(v23);
  uint64_t v185 = (char *)&v160 - v25;
  uint64_t v26 = type metadata accessor for IndexPath();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v174 = (char *)&v160 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = v29;
  __chkstk_darwin(v28);
  id v31 = (char *)&v160 - v30;
  id v189 = (id)sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v32 = __chkstk_darwin(v189);
  id v34 = (char *)&v160 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  BOOL v37 = (char *)&v160 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v160 - v38;
  uint64_t v40 = swift_allocObject();
  uint64_t v193 = a7;
  *(void *)(v40 + 16) = a7;
  *(void *)(v40 + 24) = a8;
  uint64_t v195 = a8;
  uint64_t v196 = v40;
  swift_retain_n();
  id v41 = [a1 indexPathsForVisibleItems];
  uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v43 = v197;
  swift_unknownObjectRetain();
  id v194 = v43;
  v188 = (void *)a3;
  sub_1001B60B8(v42, v43, a3, v39);
  swift_bridgeObjectRelease();
  uint64_t v197 = v39;
  uint64_t v44 = (uint64_t)v39;
  uint64_t v45 = v26;
  sub_1000CBC00(v44, (uint64_t)v37, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v37, 1, v26) == 1)
  {
    sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_1007069A0);
LABEL_11:
    uint64_t aBlock = 0;
    unint64_t v201 = 0xE000000000000000;
    p_uint64_t aBlock = &aBlock;
    _StringGuts.grow(_:)(102);
    v63._object = (void *)0x80000001005DC620;
    v63._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v63);
    v64._countAndFlagsBits = 0xD000000000000019;
    v64._object = (void *)0x80000001005DC640;
    String.append(_:)(v64);
    sub_1000CBC00((uint64_t)v197, (uint64_t)v34, (uint64_t *)&unk_1007069A0);
    v65._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66._countAndFlagsBits = 0xD00000000000002DLL;
    v66._object = (void *)0x80000001005DC660;
    String.append(_:)(v66);
    unint64_t v67 = v194;
    [v194 loadViewIfNeeded];
    uint64_t v68 = *(void **)&v67[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    uint64_t v69 = v190;
    if (v68)
    {
      id v70 = [v68 indexPathsForVisibleItems];
      uint64_t v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v72 = *(void *)(v71 + 16);
      swift_bridgeObjectRelease();
      uint64_t v199 = v72;
      v73._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v73);
      swift_bridgeObjectRelease();
      v74._countAndFlagsBits = 0xD00000000000001ALL;
      v74._object = (void *)0x80000001005DC690;
      String.append(_:)(v74);
      double v76 = aBlock;
      unint64_t v75 = v201;
      sub_100161A24((uint64_t)aBlock, v201);
      static Logger.UI.getter();
      swift_bridgeObjectRetain();
      double v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v77, v78))
      {
        double v79 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)double v79 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v199 = sub_10009B0E4((uint64_t)v76, v75, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "%s", v79, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v192 + 8))(v69, v191);
      v193(0, 0, 0.0, 0.0, 0.0, 0.0);
      goto LABEL_16;
    }
    swift_release_n();
    __break(1u);
    goto LABEL_33;
  }
  id v46 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v46(v31, v37, v26);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v48 = [a1 cellForItemAtIndexPath:isa];

  if (!v48)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v45);
    goto LABEL_11;
  }
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v49 = swift_dynamicCastClass();
  if (!v49)
  {

    goto LABEL_10;
  }
  uint64_t v50 = (void *)v49;
  char v51 = v186 & 1;
  p_uint64_t aBlock = v187;
  if (!v187)
  {
    LODWORD(v187) = v186 & 1;
    id v189 = a1;
    uint64_t v162 = v27;
    uint64_t v53 = v185;
    static Logger.UI.getter();
    os_log_type_t v54 = (char *)v48;
    os_log_type_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    BOOL v57 = os_log_type_enabled(v55, v56);
    uint64_t v190 = v54;
    uint64_t v163 = v31;
    uint64_t v161 = v50;
    uint64_t v160 = v46;
    if (v57)
    {
      unint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v58 = 136315138;
      uint64_t v59 = (*(uint64_t (**)(void))((swift_isaMask & *v50) + 0x1F8))();
      if (v59)
      {
        char v60 = (void *)v59;
        uint64_t v61 = (uint64_t *)(v59 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess();
        uint64_t v62 = *v61;
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v62 = 0;
      }
      uint64_t v198 = v62;
      sub_1000CBE70(&qword_100717520);
      uint64_t v111 = String.init<A>(describing:)();
      uint64_t v198 = sub_10009B0E4(v111, v112, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v113 = v190;

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v192 + 8))(v185, v191);
      uint64_t v96 = v196;
      uint64_t v50 = v161;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v192 + 8))(v53, v191);
      uint64_t v96 = v196;
    }
    uint64_t v114 = swift_allocObject();
    *(unsigned char *)(v114 + 16) = 0;
    uint64_t v115 = swift_allocObject();
    *(unsigned char *)(v115 + 16) = 0;
    uint64_t v116 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v117 = swift_allocObject();
    *(void *)(v117 + 16) = v116;
    *(void *)(v117 + 24) = v115;
    *(void *)(v117 + 32) = sub_100222668;
    *(void *)(v117 + 40) = v96;
    uint64_t v192 = v114;
    *(void *)(v117 + 48) = v114;
    char v118 = (char)v187;
    *(unsigned char *)(v117 + 56) = (_BYTE)v187;
    BOOL v119 = v188;
    id v194 = (char *)v117;
    *(void *)(v117 + 64) = v188;
    if (v182)
    {
      sub_10009E6C4(0, &qword_10070AC38);
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v120 = v192;
      swift_retain();
      swift_retain();
      unint64_t v121 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t aBlock = _swiftEmptyArrayStorage;
      sub_100078438(&qword_10070AC40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
      sub_1000CBE70(&qword_10070AC48);
      sub_100073DF0(&qword_10070AC50, &qword_10070AC48);
      uint64_t v191 = v115;
      uint64_t v122 = v164;
      uint64_t v123 = v120;
      uint64_t v124 = v166;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v125 = static OS_dispatch_source.makeTimerSource(flags:queue:)();

      (*(void (**)(char *, uint64_t))(v165 + 8))(v122, v124);
      uint64_t v126 = (void (*)(id, uint64_t, double, double, double, double))v125;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v187 = (void **)v45;
      uint64_t v128 = (char *)ObjectType;
      uint64_t v129 = (void *)swift_allocObject();
      uint64_t v186 = sub_10021ECF0;
      v129[2] = v123;
      v129[3] = sub_10021ECF0;
      unint64_t v130 = v161;
      v129[4] = v194;
      v129[5] = v130;
      uint64_t v204 = sub_10021ECF8;
      v205 = v129;
      uint64_t aBlock = _NSConcreteStackBlock;
      unint64_t v201 = 1107296256;
      uint64_t v202 = sub_1000666D8;
      uint64_t v203 = &unk_1006969C0;
      uint64_t v131 = _Block_copy(&aBlock);
      uint64_t v190 = v190;
      swift_retain();
      swift_retain();
      uint64_t v132 = v167;
      static DispatchQoS.unspecified.getter();
      unint64_t v133 = v169;
      sub_1001D8AD0();
      uint64_t v185 = v128;
      uint64_t v193 = v126;
      OS_dispatch_source.setEventHandler(qos:flags:handler:)();
      _Block_release(v131);
      (*(void (**)(char *, uint64_t))(v171 + 8))(v133, v172);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v132, v170);
      swift_release();
      OS_dispatch_source.resume()();
      unint64_t v134 = v175;
      static DispatchTime.now()();
      unint64_t v135 = v177;
      void *v177 = 250;
      uint64_t v136 = v179;
      unint64_t v137 = *(void (**)(void *, void, uint64_t))(v179 + 104);
      uint64_t v138 = v180;
      v137(v135, enum case for DispatchTimeInterval.milliseconds(_:), v180);
      + infix(_:_:)();
      id v139 = *(void (**)(void *, uint64_t))(v136 + 8);
      v139(v135, v138);
      uint64_t v140 = *(void (**)(char *, uint64_t))(v176 + 8);
      v140(v134, v184);
      v137(v135, enum case for DispatchTimeInterval.never(_:), v138);
      uint64_t v141 = v178;
      void *v178 = 0;
      v137(v141, enum case for DispatchTimeInterval.nanoseconds(_:), v138);
      uint64_t v142 = v183;
      OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
      v139(v141, v138);
      v139(v135, v138);
      v140(v142, v184);
      uint64_t v185 = (char *)swift_getObjectType();
      uint64_t v143 = v162;
      id v144 = v174;
      (*(void (**)(char *, char *, void **))(v162 + 16))(v174, v163, v187);
      unint64_t v145 = (*(unsigned __int8 *)(v143 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
      unint64_t v146 = (v173 + v145 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v147 = (v146 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v148 = (v147 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v149 = (v148 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v150 = swift_allocObject();
      *(void *)(v150 + 16) = v189;
      unint64_t v151 = v150 + v145;
      uint64_t v152 = v187;
      v160((char *)v151, v144, (uint64_t)v187);
      long long v153 = v194;
      *(void *)(v150 + v146) = v193;
      uint64_t v154 = (void *)(v150 + v147);
      *uint64_t v154 = v186;
      v154[1] = v153;
      *(void *)(v150 + v148) = v161;
      *(void *)(v150 + v149) = v188;
      *(void *)(v150 + ((v149 + 15) & 0xFFFFFFFFFFFFFFF8)) = v191;
      swift_unknownObjectRetain();
      id v155 = v190;
      swift_retain();
      swift_retain();
      id v156 = v189;
      swift_unknownObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();

      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(char *, void **))(v162 + 8))(v163, v152);
    }
    else
    {
      uint64_t v157 = v195;
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v158 = v192;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100212CD0(v50, v116, v115, v158, v118, v119, v193, v157);

      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v163, v45);
    }
    sub_1000CBBA4((uint64_t)v197, (uint64_t *)&unk_1007069A0);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (v187 == (void **)1)
  {
    id v81 = sub_1001DB0D4(a1);
    id v82 = [v81 window];

    if (!v82)
    {
      uint64_t v163 = v31;
      uint64_t v97 = v181;
      static Logger.UI.getter();
      id v98 = v48;
      id v99 = v81;
      uint64_t v100 = (char *)v98;
      id v101 = v99;
      id v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v104 = swift_slowAlloc();
        id v194 = v100;
        uint64_t v105 = v104;
        uint64_t v106 = swift_slowAlloc();
        uint64_t v187 = (void **)v45;
        double v107 = (void *)v106;
        uint64_t v190 = (char *)swift_slowAlloc();
        uint64_t aBlock = v190;
        *(_DWORD *)uint64_t v105 = 136315650;
        uint64_t v199 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v105 + 12) = 2112;
        uint64_t v162 = v27;
        uint64_t v199 = (uint64_t)v50;
        uint64_t v108 = v102;
        uint64_t v109 = v194;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *double v107 = v50;

        *(_WORD *)(v105 + 22) = 2112;
        uint64_t v199 = (uint64_t)v101;
        id v110 = v101;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v107[1] = v101;

        uint64_t v27 = v162;
        _os_log_impl((void *)&_mh_execute_header, v108, v103, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v105, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        uint64_t v45 = (uint64_t)v187;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v100 = v194;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v192 + 8))(v181, v191);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v192 + 8))(v97, v191);
      }
      v193(0, 0, 0.0, 0.0, 0.0, 0.0);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v163, v45);
      sub_1000CBBA4((uint64_t)v197, (uint64_t *)&unk_1007069A0);
      swift_release();
      return swift_release();
    }
    [v50 bounds];
    sub_1001D6334(v50, v81, v51, v83, v84, v85, v86);
    double v88 = v87;
    double v90 = v89;
    double v92 = v91;
    double v94 = v93;
    id v95 = v48;
    v193(0, 0, v88, v90, v92, v94);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v45);
LABEL_16:
    sub_1000CBBA4((uint64_t)v197, (uint64_t *)&unk_1007069A0);
    swift_release();
    return swift_release();
  }
LABEL_33:
  type metadata accessor for DOCServicePopoverTrackerRegion(0);
  uint64_t v203 = v159;
  swift_release_n();
  swift_release();
  uint64_t aBlock = p_aBlock;
  uint64_t result = doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10021511C(void *a1, void **a2, int a3, char a4, char *a5, void (*a6)(id, uint64_t, double, double, double, double), uint64_t a7)
{
  LODWORD(v72) = a3;
  uint64_t v71 = a2;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v67[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = &v67[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v67[-v19];
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21;
  *(void *)(v21 + 16) = a6;
  *(void *)(v21 + 24) = a7;
  uint64_t v23 = *(void **)&a5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23)
  {
    swift_retain_n();
    a6(0, 0, 0.0, 0.0, 0.0, 0.0);
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t aBlock = v72;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v84 = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2080;
      id v36 = [a1 description];
      uint64_t v74 = a7;
      id v37 = v36;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v73 = v22;
      unint64_t v40 = v39;

      uint64_t v84 = sub_10009B0E4(v38, v40, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s collectionView is nil because it is not loaded. Can not get display information for item: %s.", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v20, v76);
      swift_release();
      return swift_release();
    }

    swift_unknownObjectRelease_n();
    (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v20, v76);
LABEL_31:
    swift_release();
    return swift_release();
  }
  uint64_t v69 = (uint64_t)a1;
  id v70 = v15;
  uint64_t v73 = v21;
  uint64_t v74 = a7;
  uint64_t v24 = qword_100705078;
  swift_retain_n();
  id v25 = v23;
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)qword_100737318;
  uint64_t v27 = (unint64_t *)(qword_100737318
                           + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess();
  unint64_t v28 = *v27;
  if (!(v28 >> 62))
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v30 = v26;
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_6;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    int v32 = 0;
    goto LABEL_14;
  }
  id v41 = v26;
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_13;
  }
LABEL_6:
  if ((v28 & 0xC000000000000001) != 0)
  {
    uint64_t v66 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    int v32 = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v31 = *(void *)(v28 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    int v32 = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings);

    swift_release();
  }
LABEL_14:
  int v68 = a4 & 1;
  id v42 = [v25 indexPathsForVisibleItems];
  type metadata accessor for IndexPath();
  uint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v44 = *(void *)(v43 + 16);
  swift_bridgeObjectRelease();
  uint64_t v45 = v74;
  if (v44)
  {
    sub_1000B00FC(1);
    id v46 = v70;
    if (!v32)
    {
      swift_retain();
      sub_100213948(v25, a5, v69, v71, v68, v72 & 1, a6, v45);
      swift_release();

      return swift_release_n();
    }
    goto LABEL_21;
  }
  static Logger.UI.getter();
  id v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v77 = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s collectionView has 0 visible items. Forcing a layout pass.", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v18, v76);
  id v46 = v70;
  id v51 = [a5 view];
  if (v51)
  {
    id v52 = v51;
    [v51 layoutIfNeeded];

    sub_1000B00FC(1);
LABEL_21:
    static Logger.UI.getter();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315394;
      uint64_t aBlock = sub_10009B0E4(0xD00000000000005CLL, 0x80000001005DC5A0, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v55 + 12) = 2080;
      uint64_t aBlock = 0;
      unint64_t v79 = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      uint64_t aBlock = 0xD00000000000001BLL;
      unint64_t v79 = 0x80000001005DC600;
      if (v32) {
        uint64_t v56 = 1702195828;
      }
      else {
        uint64_t v56 = 0x65736C6166;
      }
      if (v32) {
        unint64_t v57 = 0xE400000000000000;
      }
      else {
        unint64_t v57 = 0xE500000000000000;
      }
      unint64_t v58 = v57;
      String.append(_:)(*(Swift::String *)&v56);
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_10009B0E4(aBlock, v79, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s collectionView delayed layout is required (settings: %s) before gather animation info.", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v70, v76);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v46, v76);
    }
    uint64_t v59 = self;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v25;
    *(void *)(v60 + 24) = a5;
    uint64_t v61 = v71;
    *(void *)(v60 + 32) = v69;
    *(void *)(v60 + 40) = v61;
    uint64_t v62 = v73;
    *(void *)(v60 + 48) = sub_10021ECCC;
    *(void *)(v60 + 56) = v62;
    *(unsigned char *)(v60 + 64) = v68;
    *(unsigned char *)(v60 + 65) = v72 & 1;
    id v82 = sub_10021ECD8;
    uint64_t v83 = v60;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v79 = 1107296256;
    double v80 = sub_1000666D8;
    id v81 = &unk_1006967E0;
    Swift::String v63 = _Block_copy(&aBlock);
    id v64 = v25;
    swift_unknownObjectRetain();
    Swift::String v65 = a5;
    swift_retain();
    swift_release();
    [v59 performAfterCATransactionCommits:v63];

    _Block_release(v63);
    goto LABEL_31;
  }
LABEL_35:
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

void sub_100215ADC(void (*a1)(char *, uint64_t), char *a2, void *a3, char *a4, void **a5, char a6, uint64_t a7, void (*a8)(double, double, double, double), uint64_t a9)
{
  uint64_t v71 = a1;
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v16 - 8);
  uint64_t v68 = v16;
  __chkstk_darwin(v16);
  Swift::String v65 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for DispatchQoS();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  Swift::String v63 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for DispatchTime();
  uint64_t v62 = *(void *)(v70 - 8);
  uint64_t v19 = __chkstk_darwin(v70);
  uint64_t v60 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v61 = (char *)&v56 - v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = a4;
  uint64_t v72 = a5;
  *(void *)(v22 + 32) = a5;
  char v23 = a6;
  *(unsigned char *)(v22 + 40) = a6;
  uint64_t v24 = a7;
  *(void *)(v22 + 48) = a7;
  *(void *)(v22 + 56) = a8;
  id v25 = a8;
  *(void *)(v22 + 64) = a9;
  uint64_t v26 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v69 = a2;
  uint64_t v27 = *(void **)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v27)
  {
    id v37 = *(void **)&a4[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node];
    swift_beginAccess();
    char v38 = *(unsigned char *)(a7 + 16);
    unint64_t v39 = a3;
    unint64_t v40 = a4;
    swift_retain();
    swift_retain();
    sub_100212318(v37, v72, v23 & 1, v38, v39, v25, a9);
LABEL_13:
    swift_release();
    return;
  }
  unint64_t v58 = a3;
  unint64_t v57 = a4;
  swift_retain();
  uint64_t v59 = a9;
  swift_retain();
  id v28 = v27;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v30 = [v28 cellForItemAtIndexPath:isa];

  uint64_t v31 = v25;
  int v32 = v72;
  char v33 = v23;
  if (v30)
  {
    [v30 frame];
    if (objc_msgSend(v28, "_isRectFullyVisible:"))
    {
      os_log_type_t v34 = *(void **)&v57[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node];
      swift_beginAccess();
      char v35 = *(unsigned char *)(v24 + 16);
      uint64_t v36 = v59;
      swift_retain();
      sub_100212318(v34, v32, v33 & 1, v35, v58, v31, v36);
      swift_release();

LABEL_12:
      goto LABEL_13;
    }
  }
  if ((uint64_t)[v28 numberOfSections] < 1)
  {
    uint64_t v53 = *(void **)&v57[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node];
    swift_beginAccess();
    char v54 = *(unsigned char *)(v24 + 16);
    uint64_t v55 = v59;
    swift_retain();
    sub_100212318(v53, v32, v33 & 1, v54, v58, v25, v55);
    swift_release();
    goto LABEL_12;
  }
  uint64_t v72 = (void **)v28;
  id v41 = v69;
  [v69 loadViewIfNeeded];
  id v42 = *(void **)&v41[v26];
  if (v42)
  {
    id v43 = v42;
    Class v44 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v43 scrollToItemAtIndexPath:v44 atScrollPosition:0 animated:1];

    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v45 = (void *)static OS_dispatch_queue.main.getter();
    id v46 = v60;
    static DispatchTime.now()();
    unint64_t v47 = v61;
    + infix(_:_:)();
    uint64_t v71 = *(void (**)(char *, uint64_t))(v62 + 8);
    v71(v46, v70);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_10021F088;
    *(void *)(v48 + 24) = v22;
    aBlock[4] = sub_1000D8564;
    aBlock[5] = v48;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100696A60;
    os_log_type_t v49 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v50 = v63;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    id v51 = v65;
    uint64_t v52 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v51, v52);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v66);
    v71(v47, v70);
    goto LABEL_13;
  }
  swift_release();
  swift_release();

  __break(1u);
}

void sub_1002161DC(uint64_t a1)
{
  id v3 = v1;
  uint64_t v4 = sub_100206E10(a1, (uint64_t)v3);

  uint64_t v5 = (char *)v3;
  unint64_t v6 = sub_100205EE8((uint64_t)v4, (uint64_t)v5);
  swift_bridgeObjectRelease();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_3:
      uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
      id v18 = *(id *)(v7 + 24);
      uint64_t v19 = v5;
      [v18 lock];
      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        if (!v8)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          [v18 unlock];
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v8) {
          goto LABEL_13;
        }
      }
      if (v8 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v9 = 0;
      do
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v10 = *(void *)(v6 + 8 * v9 + 32);
          swift_unknownObjectRetain();
        }
        ++v9;
        uint64_t v11 = v19;
        uint64_t v12 = (void *)sub_10013F824(v10, (uint64_t)sub_1001DF7C8, 0, v7, (uint64_t)v11);
        uint64_t v14 = v13;
        uint64_t v16 = v15;

        sub_10008D3E0(v12, v14, v16);
        swift_unknownObjectRelease();
      }
      while (v8 != v9);
      goto LABEL_13;
    }
  }
  else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }

  swift_bridgeObjectRelease();
}

id sub_100216424(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
  uint64_t v5 = *(void **)(v4 + 24);
  [v5 lock];
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)(v4 + 32) + 16);
  id result = [v5 unlock];
  if (v6)
  {
    id v8 = v2;
    uint64_t v9 = sub_100206E10(a1, (uint64_t)v8);

    id v10 = v8;
    unint64_t v11 = sub_100205EE8((uint64_t)v9, (uint64_t)v10);
    swift_bridgeObjectRelease();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v12) {
        return (id)swift_bridgeObjectRelease();
      }
    }
    else if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return (id)swift_bridgeObjectRelease();
    }
    sub_10013EE10(v11, (uint64_t)sub_1001DF830, 0);
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id _s5Files31DOCItemCollectionViewControllerC010collectionD0_030targetContentOffsetForProposedhI0So7CGPointVSo012UICollectionD0C_AGtF_0(void *a1)
{
  id result = [v1 loadViewIfNeeded];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    id v5 = v4;
    [v5 _effectiveContentInset];
    id v6 = [v5 collectionViewLayout];
    [v6 collectionViewContentSize];

    [v5 bounds];
    CGRectGetHeight(v7);
    [v5 _effectiveContentInset];

    return [a1 contentOffset];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100216658(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
    || !*(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
    || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0
    || (id v8 = (void *)Strong,
        uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView),
        id v10 = v9,
        v8,
        !v9))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    goto LABEL_8;
  }
  unsigned __int8 v11 = [v10 isFirstResponder];

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  if ((v11 & 1) == 0)
  {
LABEL_8:
    unsigned __int8 v12 = sub_1001D4DB8((uint64_t)v6);
    goto LABEL_9;
  }
  unsigned __int8 v12 = 0;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12 & 1;
}

uint64_t sub_1002167E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (*v6 != 2)
  {
    static Logger.UI.getter();
    CGRect v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      v15[1] = sub_10009B0E4(0xD000000000000020, 0x80000001005DD450, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s should never be called outside of column mode", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  if (swift_unknownObjectWeakLoadStrong()
    && (uint64_t v11 = *(void *)(v10 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        LOBYTE(v11) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v1, ObjectType, v11),
        swift_unknownObjectRelease(),
        (v11 & 1) != 0))
  {
    char v13 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) ^ 1;
  }
  else
  {
    char v13 = 1;
  }
  return v13 & 1;
}

void sub_100216A60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  CGRect v7 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  unint64_t v79 = &v71[-v9];
  __chkstk_darwin(v8);
  uint64_t v11 = &v71[-v10];
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  uint64_t v83 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v71[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v71[-v18];
  __chkstk_darwin(v17);
  uint64_t v21 = &v71[-v20];
  uint64_t v22 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  double v80 = &v71[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v26 = &v71[-v25];
  if (sub_1001DAF30(a1)) {
    return;
  }
  uint64_t v27 = &v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled];
  swift_beginAccess();
  if (*v27 != 1)
  {
    static Logger.UI.getter();
    char v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)id v37 = 136315138;
      uint64_t v86 = sub_10009B0E4(0xD000000000000022, 0x80000001005DD540, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s called while isUserInteractionEnabled=false. Ignoring", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v16, v82);
    return;
  }
  uint64_t v78 = v4;
  [v2 loadViewIfNeeded];
  id v28 = *(char **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v28)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v29 = v81;
  uint64_t v30 = v78;
  uint64_t v76 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 16);
  uint64_t v77 = v81 + 16;
  v76(v26, a1, v78);
  uint64_t v74 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v75 = v29 + 56;
  v74(v26, 0, 1, v30);
  uint64_t v31 = *(void *)&v28[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
      + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess();
  int v32 = v28;
  swift_retain();
  sub_10008C318((uint64_t)v26, v31, (uint64_t *)&unk_1007069A0);
  swift_endAccess();

  swift_release();
  if ([v2 isEditing])
  {
    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    id v33 = [v2 viewIfLoaded];
    id v34 = [v33 window];

    if (v34) {
      sub_1000A6988();
    }
    return;
  }
  char v38 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  uint64_t v39 = v78;
  if (*(void *)v38 != 2) {
    return;
  }
  if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] == 1)
  {
    unint64_t v40 = (unint64_t)sub_10003B6F8(0);
    uint64_t v41 = v40 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v41 >= 1)
    {
      type metadata accessor for DOCConcreteSelectionLocation();
      id v42 = sub_10003B6F8(0);
      unint64_t v43 = sub_100557F10((unint64_t)v42);
      if (v43)
      {
        Class v44 = (void *)v43;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          id v46 = (void *)Strong;
          id v47 = objc_retain(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                     + 24]);
          [v46 didSelectLocation:v44 atParentLocation:v47];

          swift_unknownObjectRelease();
        }
        else
        {
        }
        return;
      }
    }
  }
  if ((sub_1002167E8() & 1) == 0)
  {
    static Logger.UI.getter();
    v76(v7, a1, v39);
    unint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136315394;
      uint64_t v84 = sub_10009B0E4(0xD000000000000022, 0x80000001005DD540, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v60 + 12) = 2080;
      sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v84 = sub_10009B0E4(v61, v62, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v7, v39);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "%s %s performPrimaryAction will handle opening", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v7, v39);
    }

    (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v19, v82);
    return;
  }
  static Logger.UI.getter();
  v76(v11, a1, v39);
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.debug.getter();
  int v50 = v49;
  uint64_t v51 = v39;
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v73 = swift_slowAlloc();
    uint64_t v86 = v73;
    *(_DWORD *)uint64_t v52 = 136315394;
    int v72 = v50;
    uint64_t v84 = sub_10009B0E4(0xD000000000000022, 0x80000001005DD540, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v52 + 12) = 2080;
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v84 = sub_10009B0E4(v53, v54, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v55 = v81;
    uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v81 + 8);
    v56(v11, v51);
    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v72, "%s %s navigation action, handling", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v57 = v55;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v57 = v81;
    uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v81 + 8);
    v56(v11, v51);
  }

  (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v21, v82);
  uint64_t v63 = IndexPath.count.getter();
  uint64_t v64 = (uint64_t)v80;
  if (v63 != 2) {
    goto LABEL_30;
  }
  Swift::String v65 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v65)
  {
LABEL_41:
    __break(1u);
    return;
  }
  if (([v65 isGathering] & 1) == 0
    && (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_1001DAF30(a1) & 1) != 0)
  {
LABEL_30:
    v74((unsigned char *)v64, 1, 1, v78);
LABEL_34:
    sub_1000CBBA4(v64, (uint64_t *)&unk_1007069A0);
    return;
  }
  uint64_t v66 = v78;
  v76((unsigned char *)v64, a1, v78);
  v74((unsigned char *)v64, 0, 1, v66);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v64, 1, v66) == 1) {
    goto LABEL_34;
  }
  uint64_t v67 = (uint64_t)v79;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 32))(v79, v64, v66);
  uint64_t v68 = sub_1001BAA44(v67, 0);
  if (v68)
  {
    uint64_t v69 = (void *)v68;
    uint64_t ObjectType = swift_getObjectType();
    sub_100201FD8(v69, 0, (void (*)(void))DOCSplitBrowserViewController.didCommitPreview(of:), 0, v2, ObjectType);
    swift_unknownObjectRelease();
  }
  v56((unsigned char *)v67, v78);
}

void sub_1002175D4(uint64_t a1)
{
  uint64_t v2 = v1;
  if ((sub_1001DAF30(a1) & 1) == 0)
  {
    v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    id v3 = [v1 viewIfLoaded];
    id v4 = [v3 window];

    if (v4) {
      sub_1000A6988();
    }
    uint64_t v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v5 == 2
      && v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] == 1)
    {
      type metadata accessor for DOCConcreteSelectionLocation();
      uint64_t v6 = sub_10003B6F8(0);
      unint64_t v7 = sub_100557F10((unint64_t)v6);
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        if (([v2 isEditing] & 1) != 0
          || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
        {
        }
        else
        {
          uint64_t v10 = (void *)Strong;
          id v11 = objc_retain(*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                     + 24]);
          [v10 didSelectLocation:v8 atParentLocation:v11];

          swift_unknownObjectRelease();
        }
      }
    }
  }
}

void *sub_100217740(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter() != 2) {
    goto LABEL_6;
  }
  id result = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if (([result isGathering] & 1) == 0
      && (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
      && (sub_1001DAF30(a1) & 1) != 0)
    {
LABEL_6:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_8:
      sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
      goto LABEL_8;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    id result = (void *)sub_1001BAA44((uint64_t)v9, 0);
    if (result)
    {
      unsigned int v11 = [result isPending];
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (void *)(v11 ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002179AC(void *a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  id v9 = [a1 nextFocusedView];
  if (v9
    && (uint64_t v10 = v9,
        type metadata accessor for DOCItemCollectionCell(),
        uint64_t v11 = swift_dynamicCastClass(),
        v10,
        v11))
  {
    id v12 = [a1 nextFocusedIndexPath];
    if (v12)
    {
      uint64_t v13 = v12;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v14 = type metadata accessor for IndexPath();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
    }
    else
    {
      uint64_t v16 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
    }
    sub_1000CBE0C((uint64_t)v6, (uint64_t)v8, (uint64_t *)&unk_1007069A0);
  }
  else
  {
    uint64_t v15 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath;
  swift_beginAccess();
  sub_10008C318((uint64_t)v8, v17, (uint64_t *)&unk_1007069A0);
  return swift_endAccess();
}

void sub_100217BBC(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v4 = (void *)swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x1F8))();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = (void **)(v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      id v9 = *v8;
      swift_unknownObjectRetain();
      id v10 = a1;

      if (!v9)
      {
LABEL_8:
        id v17 = v10;
LABEL_13:

        return;
      }
      (*(void (**)(void))((swift_isaMask & *v5) + 0x210))();
      id v11 = [v9 fpfs_fpItem];
      id v12 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
      id v13 = [v12 sceneIdentifier];
      uint64_t v14 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v13);

      uint64_t v15 = (id *)&v14[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
      swift_beginAccess();
      id v16 = *v15;
      id v17 = *v15;

      if (v11)
      {
        if (!v16)
        {
          swift_unknownObjectRelease();

          id v17 = v11;
          goto LABEL_13;
        }
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v18 = v11;
        char v19 = static NSObject.== infix(_:_:)();

        if ((v19 & 1) == 0)
        {
          swift_unknownObjectRelease();
          goto LABEL_8;
        }
      }
      else if (v16)
      {
LABEL_11:
        swift_unknownObjectRelease();

        goto LABEL_13;
      }
      id v20 = [v12 sceneIdentifier];
      uint64_t v21 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v20);

      uint64_t v22 = (id *)&v21[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
      swift_beginAccess();
      id v17 = *v22;
      *uint64_t v22 = 0;
      sub_10013FFF4(v17);

      goto LABEL_11;
    }
  }
}

uint64_t _s5Files31DOCItemCollectionViewControllerC010collectionD0_22shouldSpringLoadItemAt4withSbSo012UICollectionD0C_10Foundation9IndexPathVSo32UISpringLoadedInteractionContext_ptF_0(void *a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (!*v5) {
    goto LABEL_5;
  }
  if (*v5 != 2) {
    goto LABEL_6;
  }
  id v6 = [a1 indexPathsForSelectedItems];
  if (!v6) {
    goto LABEL_6;
  }
  uint64_t v7 = v6;
  type metadata accessor for IndexPath();
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v9);
  v12[2] = a2;
  LOBYTE(v7) = sub_10008CF28((uint64_t (*)(char *))sub_1002188C0, (uint64_t)v12, v8, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0);
  swift_bridgeObjectRelease();
  if (v7) {
LABEL_5:
  }
    char v10 = 0;
  else {
LABEL_6:
  }
    char v10 = sub_10020CC10(a2);
  return v10 & 1;
}

uint64_t sub_100217F74(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (sub_10008BD6C() & 1) != 0 || (uint64_t result = sub_10001F094(), (result))
  {
    type metadata accessor for DOCItemCollectionViewSectionHeader();
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      uint64_t v7 = result;
      id v31 = a1;
      if (IndexPath.count.getter() == 2)
      {
        unint64_t v8 = IndexPath.section.getter();
      }
      else
      {
        type metadata accessor for IndexPath();
        sub_100078438(&qword_10070AE78, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        dispatch thunk of Collection.startIndex.getter();
        uint64_t result = dispatch thunk of Collection.endIndex.getter();
        if (v34[0] == aBlock[0])
        {
LABEL_17:
          __break(1u);
          return result;
        }
        uint64_t v9 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
        unint64_t v8 = *v10;
        v9(aBlock, 0);
      }
      uint64_t v11 = v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
      uint64_t result = swift_beginAccess();
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(void *)(*(void *)v11 + 16))
      {
        uint64_t v30 = a2;
        id v12 = (void *)(*(void *)v11 + 40 * v8);
        uint64_t v13 = v12[4];
        uint64_t v14 = v12[5];
        uint64_t v15 = v3;
        uint64_t v16 = v12[6];
        uint64_t v17 = v12[7];
        uint64_t v18 = v12[8];
        char v19 = (uint64_t *)(v7 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection);
        sub_1000CBE0C(v7 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection, (uint64_t)v34, (uint64_t *)&unk_10070AE80);
        int v32 = (char *)v7;
        uint64_t v20 = *v19;
        uint64_t v21 = v19[1];
        uint64_t *v19 = v13;
        v19[1] = v14;
        void v19[2] = v16;
        v19[3] = v17;
        v19[4] = v18;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        sub_100220914(v34, (void (*)(void, void, void, void, void))sub_100208814);
        uint64_t v22 = v32;
        sub_100220130(v20, v21);
        sub_1004D4E8C(v34);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100220914(v34, (void (*)(void, void, void, void, void))sub_100220130);
        uint64_t v23 = (void *)(v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess();
        if (*v23) {
          goto LABEL_12;
        }
        char v24 = *(unsigned char *)(v18 + 24);
        uint64_t v25 = self;
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v32;
        *(unsigned char *)(v26 + 24) = v24;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = sub_100222584;
        *(void *)(v27 + 24) = v26;
        aBlock[4] = sub_1000D8564;
        aBlock[5] = v27;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100087990;
        aBlock[3] = &unk_100697E88;
        id v28 = _Block_copy(aBlock);
        id v29 = v31;
        swift_retain();
        swift_release();
        [v25 performWithoutAnimation:v28];
        _Block_release(v28);
        LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        uint64_t v22 = v32;
        uint64_t result = swift_release();
        if ((v28 & 1) == 0)
        {
LABEL_12:
          sub_1001BFC7C(v22, v30);

          swift_release();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
  }
  return result;
}

void _s5Files31DOCItemCollectionViewControllerC010collectionD0_22willDisplayContextMenu8animatorySo012UICollectionD0C_So09UIContextJ13ConfigurationCSo0mJ20InteractionAnimating_pSgtF_0(void *a1, void *a2)
{
  id v4 = [a1 contextMenuInteraction];
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu];
  *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = v4;

  type metadata accessor for DOCNodeContextMenuConfiguration();
  uint64_t v6 = swift_dynamicCastClass();
  if (v6)
  {
    uint64_t v7 = v6;
    unint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration];
    *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = v6;
    id v21 = a2;

    if (![v2 isEditing])
    {
      goto LABEL_4;
    }
    uint64_t v9 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v9)
    {
LABEL_4:

      return;
    }
    unint64_t v10 = *(void *)(v7 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      id v12 = v21;
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      id v12 = v21;
      if (v11)
      {
LABEL_10:
        if (v11 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v13 = 0;
        unint64_t v14 = v10 & 0xC000000000000001;
        do
        {
          if (v14)
          {
            unint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            unint64_t v15 = *(void *)(v10 + 8 * v13 + 32);
            swift_unknownObjectRetain();
          }
          uint64_t v16 = sub_1001DB1A4(v15);
          if (v16)
          {
            uint64_t v17 = v16;
            swift_getObjectType();
            type metadata accessor for DOCItemCollectionGridCell();
            uint64_t v18 = (void *)sub_1002208A4((uint64_t)v17);
            if (v18)
            {
              char v19 = *(void (**)(uint64_t))((swift_isaMask & *v18) + 0x550);
              uint64_t v20 = v17;
              v19(1);
              unint64_t v14 = v10 & 0xC000000000000001;
            }
          }
          ++v13;
          swift_unknownObjectRelease();
        }
        while (v11 != v13);
        id v12 = v21;
      }
    }

    swift_bridgeObjectRelease();
  }
}

void sub_10021862C(void *a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  uint64_t v6 = *(void (**)(uint64_t))&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                    + 8];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  sub_1000C0640((uint64_t)v6);
  sub_1000A7258((uint64_t)v6);
  unint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu];
  *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = 0;

  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration];
  *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = 0;

  type metadata accessor for DOCNodeContextMenuConfiguration();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
LABEL_6:
    sub_1000A7258((uint64_t)v6);
    return;
  }
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = v11;
  if (a2)
  {
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = sub_10022080C;
    v13[3] = v12;
    v13[4] = v6;
    v13[5] = v7;
    aBlock[4] = sub_10022085C;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100697E10;
    unint64_t v14 = _Block_copy(aBlock);
    id v15 = a1;
    sub_1000C0640((uint64_t)v6);
    id v16 = v15;
    uint64_t v17 = v2;
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    [a2 addCompletion:v14];
    swift_release();

    sub_1000A7258((uint64_t)v6);
    _Block_release(v14);
    swift_unknownObjectRelease();
    return;
  }
  id v19 = a1;
  sub_1001E919C((uint64_t)v2, v11);
  if (v6)
  {
    uint64_t v18 = swift_retain();
    v6(v18);
    swift_release();

    sub_1000A7258((uint64_t)v6);
    goto LABEL_6;
  }
  swift_release();
}

uint64_t sub_1002188C0()
{
  return sub_1002214C8() & 1;
}

uint64_t sub_1002188DC()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002189B0()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v1 collectionView:v2 performPrimaryActionForItemAtIndexPath:isa];
}

void sub_100218A60(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1
                + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing);
  uint64_t v5 = *(void (**)(uint64_t))(v1
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing);
  uint64_t v6 = *(void *)(v1
                 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing
                 + 8);
  void *v4 = 0;
  v4[1] = 0;
  sub_1000C0640((uint64_t)v5);
  sub_1000A7258((uint64_t)v5);
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu);
  *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu) = 0;

  if (a1)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = v6;
    v15[4] = sub_100180DF4;
    v15[5] = v8;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    void v15[2] = sub_1000666D8;
    v15[3] = &unk_100697CF8;
    uint64_t v9 = _Block_copy(v15);
    sub_1000C0640((uint64_t)v5);
    swift_unknownObjectRetain();
    swift_release();
    [a1 addCompletion:v9];
    _Block_release(v9);
    swift_unknownObjectRelease();
  }
  else if (v5)
  {
    uint64_t v10 = swift_retain();
    v5(v10);
    sub_1000A7258((uint64_t)v5);
  }
  uint64_t v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview;
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview);
  if (v12)
  {
    id v13 = v12;
    [v13 removeFromSuperview];
    unint64_t v14 = *(void **)(v2 + v11);
    *(void *)(v2 + v11) = 0;

    sub_1000A7258((uint64_t)v5);
  }
  else
  {
    sub_1000A7258((uint64_t)v5);
  }
}

void _s5Files31DOCItemCollectionViewControllerC22contextMenuInteraction_022previewForHighlightingG17WithConfigurationSo17UITargetedPreviewCSgSo09UIContextgH0C_So0pgM0CtF_0(void *a1)
{
  if (![*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] browserViewContext])
  {
    id v3 = [v1 viewIfLoaded];
    [a1 locationInView:v3];
    double v5 = v4;
    double v7 = v6;

    uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview;
    uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview];
    if (v9)
    {
      [v9 setFrame:v5, v7, 0.0, 0.0];
    }
    else
    {
      id v10 = [objc_allocWithZone((Class)UIView) initWithFrame:v5, v7, 0.0, 0.0];
      uint64_t v11 = *(void **)&v1[v8];
      *(void *)&v1[v8] = v10;

      uint64_t v12 = *(void **)&v1[v8];
      if (v12)
      {
        id v13 = self;
        id v14 = v12;
        id v15 = [v13 clearColor];
        [v14 setBackgroundColor:v15];
      }
    }
    id v16 = [v1 view];
    if (v16)
    {
      if (*(void *)&v1[v8])
      {
        uint64_t v17 = v16;
        [v16 addSubview:];

        id v18 = [objc_allocWithZone((Class)UIPreviewParameters) init];
        id v19 = [self clearColor];
        [v18 setBackgroundColor:v19];

        uint64_t v20 = *(void **)&v1[v8];
        if (v20)
        {
          id v21 = objc_allocWithZone((Class)UITargetedPreview);
          id v22 = v20;
          [v21 initWithView:v22 parameters:v18];

          return;
        }
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

void sub_100218E50(uint64_t a1, uint64_t a2)
{
  sub_1001F21BC(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void sub_100218E5C(void *a1, void *a2, void (*a3)(id), uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a5;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
  id v12 = [a1 displayName];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v16 = sub_100073F48();
  *(void *)(v11 + 64) = v16;
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  LOBYTE(v11) = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_1001F14E4(a1, a2, v30, v31, v27);
  }
  else
  {
    uint64_t v17 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10059B760;
    *(void *)(v18 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v18 + 64) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v18 + 32) = a2;
    id v19 = a2;
    id v20 = [a1 displayName:v27];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v16;
    *(void *)(v18 + 72) = v21;
    *(void *)(v18 + 80) = v23;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    static Logger.UI.getter();
    char v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Not enough information to get the transition controller", v26, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    v30(0);
  }
}

void sub_1002191D4(void *a1, char *a2, void (*a3)(void))
{
  uint64_t v5 = static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A0030;
  id v7 = [a1 displayName];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v11 = sub_100073F48();
  *(void *)(v6 + 64) = v11;
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v10;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  LOBYTE(v5) = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  if (v5)
  {
    id v12 = (objc_class *)type metadata accessor for DOCServiceItemPopoverTrackerController();
    uint64_t v13 = (char *)objc_allocWithZone(v12);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    uint64_t v14 = *(void **)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    *(void *)&v13[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_configuration] = v14;
    *(void *)&v13[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node] = a1;
    v26.receiver = v13;
    v26.super_class = v12;
    swift_unknownObjectRetain_n();
    uint64_t v15 = a2;
    id v16 = v14;
    id v17 = [super init];
    a3();

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10059B760;
    *(void *)(v19 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v19 + 64) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v19 + 32) = a2;
    id v20 = a2;
    id v21 = [a1 displayName];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    *(void *)(v19 + 96) = &type metadata for String;
    *(void *)(v19 + 104) = v11;
    *(void *)(v19 + 72) = v22;
    *(void *)(v19 + 80) = v24;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    ((void (*)(void))a3)(0);
  }
}

void sub_1002194D8(void *a1, void *a2, char *a3, void *a4, char a5, void *aBlock)
{
  _Block_copy(aBlock);
  _Block_copy(aBlock);
  uint64_t v9 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  id v11 = [a1 displayName];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v15 = sub_100073F48();
  *(void *)(v10 + 64) = v15;
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  LOBYTE(v12) = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  if (v12)
  {
    _Block_copy(aBlock);
    _Block_copy(aBlock);
    id v16 = a2;
    id v17 = [a3 traitCollection];
    id v18 = [v17 preferredContentSizeCategory];

    LOBYTE(v17) = UIContentSizeCategory.isAccessibilityCategory.getter();
    id v20 = 0;
    if (v17)
    {
      uint64_t v19 = &a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      if (*(void *)v19) {
        id v20 = (char *)1;
      }
    }
    _Block_copy(aBlock);
    sub_10020F4D0(a4, v20, a5 & 1, 0, v16, aBlock);
    _Block_release(aBlock);

    _Block_release(aBlock);
  }
  else
  {
    id v21 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10059B760;
    *(void *)(v22 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v22 + 64) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v22 + 32) = a2;
    id v23 = a2;
    id v24 = [a1 displayName];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v15;
    *(void *)(v22 + 72) = v25;
    *(void *)(v22 + 80) = v27;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    _Block_copy(aBlock);
    sub_100161A24(0xD00000000000002ELL, 0x80000001005DC7D0);
    ((void (*)(void *, void, void))aBlock[2])(aBlock, 0, 0);
  }
  _Block_release(aBlock);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

void sub_100219878(void *a1, void *a2, void (*a3)(void), uint64_t a4, unint64_t a5)
{
  uint64_t v8 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
  id v10 = [a1 displayName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v14 = sub_100073F48();
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  LOBYTE(v13) = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v15 = a2;
    id v16 = sub_1001DB1A4(a5);
    a3();
  }
  else
  {
    id v17 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10059B760;
    *(void *)(v18 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v18 + 64) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v18 + 32) = a2;
    id v19 = a2;
    id v20 = [a1 displayName];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v14;
    *(void *)(v18 + 72) = v21;
    *(void *)(v18 + 80) = v23;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    ((void (*)(void))a3)(0);
  }
}

void sub_100219B08(id a1, char *a2, void (*a3)(id), uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v83 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v90 = v12;
  __chkstk_darwin(v12);
  uint64_t v84 = v13;
  uint64_t ObjectType = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v86 = *(void *)(v14 - 8);
  uint64_t v87 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v79 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v78 = (char *)&v78 - v18;
  __chkstk_darwin(v17);
  id v20 = (char *)&v78 - v19;
  uint64_t v21 = (void (*)(void *, void *))swift_allocObject();
  uint64_t v81 = a3;
  uint64_t v82 = (uint8_t *)a4;
  *((void *)v21 + 2) = a3;
  *((void *)v21 + 3) = a4;
  double v88 = v21;
  *((void *)v21 + 4) = a5;
  swift_retain();
  id v80 = a5;
  uint64_t v22 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1005A0030;
  id v91 = a1;
  URL._bridgeToObjectiveC()((NSURL *)&unk_1005A0000);
  uint64_t v25 = v24;
  uint64_t v26 = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
  *(void *)(v23 + 56) = v26;
  uint64_t v27 = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
  *(void *)(v23 + 64) = v27;
  *(void *)(v23 + 32) = v25;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v28 = &a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache];
  swift_beginAccess();
  uint64_t v29 = *(void *)v28;
  if (!*(void *)(*(void *)v28 + 16))
  {
LABEL_6:
    static Logger.UI.getter();
    uint64_t v48 = a2;
    os_log_type_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = (char *)swift_slowAlloc();
      double v93 = v83;
      *(_DWORD *)uint64_t v51 = 136315138;
      uint64_t v82 = v51 + 4;
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      sub_100078438((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v52 = v90;
      uint64_t v53 = Dictionary.description.getter();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v92 = sub_10009B0E4(v53, v55, (uint64_t *)&v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v56 = v52;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Failed to get the item from the cache: %s trying to get the item from the URL", v51, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v86 + 8))(v20, v87);
      uint64_t v57 = v88;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v86 + 8))(v20, v87);
      uint64_t v57 = v88;
      uint64_t v56 = v90;
    }
    id v58 = v91;
    uint64_t v59 = v89;
    uint64_t v60 = v84;
    id v91 = [self defaultManager];
    uint64_t v61 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v62 = ObjectType;
    (*(void (**)(char *, id, uint64_t))(v59 + 16))(ObjectType, v58, v56);
    unint64_t v63 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    unint64_t v64 = (v60 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v65 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v65 + v63, v62, v56);
    uint64_t v66 = (void (**)(void *, void *))(v65 + v64);
    char *v66 = sub_10021F65C;
    v66[1] = v57;
    *(void *)(v65 + ((v64 + 23) & 0xFFFFFFFFFFFFFFF8)) = v61;
    swift_retain();
    swift_retain();
    id v67 = v91;
    FPItemManager.doc_fetchItem(for:completionHandler:)();
    swift_release();
    swift_release();
    swift_release();

    return;
  }
  swift_bridgeObjectRetain();
  id v30 = v91;
  unint64_t v31 = sub_10017BB10((uint64_t)v91);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  id v33 = *(void **)(*(void *)(v29 + 56) + 8 * v31);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v34 = (void *)static DOCLog.UI.getter();
  id v35 = v30;
  LODWORD(v84) = static os_log_type_t.debug.getter();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10059B760;
  uint64_t ObjectType = (char *)swift_getObjectType();
  id v37 = [v33 displayName];
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = v39;

  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = sub_100073F48();
  *(void *)(v36 + 32) = v38;
  *(void *)(v36 + 40) = v40;
  URL._bridgeToObjectiveC()(v41);
  *(void *)(v36 + 96) = v26;
  *(void *)(v36 + 104) = v27;
  *(void *)(v36 + 72) = v42;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v44 = v89;
  uint64_t v43 = v90;
  uint64_t v45 = (uint64_t)v83;
  (*(void (**)(char *, id, uint64_t))(v89 + 16))(v83, v35, v90);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  uint64_t v46 = sub_1001FF9B4((uint64_t)v33, v45, (uint64_t)a2);
  sub_1000CBBA4(v45, &qword_1007076B0);
  if (v46)
  {
    id v47 = (void *)swift_unknownObjectRetain();
    sub_1001F14E4(v47, a2, v81, (uint64_t)v82, (uint64_t)v80);
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    uint64_t v68 = v78;
    static Logger.UI.getter();
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Item is not part of the current collection", v71, 2u);
      swift_slowDealloc();
    }

    uint64_t v72 = v87;
    uint64_t v73 = *(void (**)(char *, uint64_t))(v86 + 8);
    v73(v68, v87);
    uint64_t v74 = v79;
    static Logger.UI.getter();
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "Not enough information to get the transition controller", v77, 2u);
      swift_slowDealloc();
    }

    v73(v74, v72);
    v81(0);
    swift_release();
    swift_unknownObjectRelease();
  }
}

void sub_10021A41C(uint64_t a1, int a2, char *a3, void *a4)
{
  uint64_t v51 = a3;
  int v43 = a2;
  uint64_t v48 = a1;
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v5);
  os_log_type_t v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = type metadata accessor for DispatchTimeInterval();
  uint64_t v7 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v46 - 8);
  uint64_t v11 = __chkstk_darwin(v46);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v42[-v14];
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  uint64_t v19 = type metadata accessor for URL();
  id v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v49 = v18;
  v20(v18, 1, 1, v19);
  uint64_t v45 = a4;
  _Block_copy(a4);
  dispatch_semaphore_t v21 = dispatch_semaphore_create(0);
  id v22 = [self defaultManager];
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v16;
  *(void *)(v23 + 24) = v21;
  aBlock[4] = sub_10021F0D4;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6B50;
  aBlock[3] = &unk_100696C68;
  uint64_t v24 = _Block_copy(aBlock);
  uint64_t v44 = v16;
  swift_retain();
  uint64_t v25 = v21;
  swift_release();
  uint64_t v26 = v48;
  [v22 fetchURLForItem:];
  _Block_release(v24);

  uint64_t v27 = v25;
  static DispatchTime.now()();
  *uint64_t v9 = 100;
  uint64_t v28 = v47;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchTimeInterval.milliseconds(_:), v47);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v28);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
  id v30 = v13;
  uint64_t v31 = v46;
  v29(v30, v46);
  OS_dispatch_semaphore.wait(timeout:)();
  v29(v15, v31);
  if (static DispatchTimeoutResult.== infix(_:_:)()) {
    sub_100161A24(0xD000000000000062, 0x80000001005DC6F0);
  }
  uint64_t v32 = v49;
  swift_beginAccess();
  id v33 = v50;
  uint64_t v34 = sub_1000CBC00(v32, (uint64_t)v50, &qword_1007076B0);
  id v35 = v51;
  if (*(void *)&v51[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    unint64_t v36 = sub_10007CC5C(v34);
    __chkstk_darwin(v36);
    *(void *)&v42[-16] = v26;
    *(void *)&v42[-8] = v33;
    id v37 = (void *)sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)&v42[-32], v36);
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v33, &qword_1007076B0);
    if (v37)
    {
      uint64_t v38 = v45;
      _Block_copy(v45);
      id v39 = v35;
      uint64_t v40 = (void *)swift_unknownObjectRetain();
      sub_1002194D8(v40, v39, (char *)v39, v37, v43 & 1, v38);
      _Block_release(v38);
      swift_release();

      swift_unknownObjectRelease_n();
    }
    else
    {
      sub_100161A24(0xD00000000000003BLL, 0x80000001005DC6B0);
      uint64_t v38 = v45;
      ((void (*)(void *, void, void))v45[2])(v45, 0, 0);
      swift_release();
    }
    _Block_release(v38);
  }
  else
  {
    uint64_t v41 = v45;
    _Block_release(v45);
    _Block_release(v41);
    __break(1u);
  }
}

uint64_t _s5Files31DOCItemCollectionViewControllerC14renameFinishedyySbF_0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v32 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  uint64_t v10 = v0;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v26 = v6;
    uint64_t v27 = v2;
    uint64_t v28 = v1;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v33 = sub_10009B0E4(0xD000000000000012, 0x80000001005DD430, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    if (*(void *)&v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = DOCNode.nodeDescription.getter();
      unint64_t v16 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      unint64_t v16 = 0xE300000000000000;
      uint64_t v14 = 4271950;
    }
    uint64_t v33 = sub_10009B0E4(v14, v16, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s node: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
    uint64_t v2 = v27;
    uint64_t v1 = v28;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 1;
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v10;
  aBlock[4] = (uint64_t)sub_1002202D4;
  aBlock[5] = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_100697A00;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v10;
  swift_release();
  dispatch_semaphore_t v21 = v29;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  id v22 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v22, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v31);
}

void sub_10021AED8(void *a1, uint64_t a2, char *a3, char *a4, NSObject *a5, unint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v94 = a2;
  uint64_t v95 = type metadata accessor for IndexPath();
  uint64_t v15 = *(void *)(v95 - 8);
  uint64_t v16 = __chkstk_darwin(v95);
  os_log_t v90 = (os_log_t)((char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v16);
  double v93 = (char *)&v82 - v19;
  uint64_t v89 = v20;
  __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v82 - v21;
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v91 = v22;
  uint64_t v92 = v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  double v88 = (char *)&v82 - v27;
  uint64_t v28 = (void *)swift_allocObject();
  _OWORD v28[2] = a4;
  v28[3] = a5;
  os_log_t v85 = a5;
  v28[4] = a6;
  v28[5] = a7;
  v28[6] = a8;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = a7;
  uint64_t v86 = a8;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1001DB1A4((unint64_t)a1);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v83 = a4;
    uint64_t v32 = a1;
    if (sub_1001C048C(a1))
    {
      unint64_t v82 = a6;
      [a3 loadViewIfNeeded];
      uint64_t v33 = *(void **)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v33)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        __break(1u);
        return;
      }
      id v34 = v33;
      [v31 frame];
      unsigned __int8 v35 = [v34 _isRectFullyVisible:];

      unint64_t v36 = v82;
      if (v35)
      {
        double v93 = v29;
        id v37 = v88;
        static Logger.Rename.getter();
        uint64_t v38 = v87;
        (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v87, v94, v95);
        id v39 = v32;
        swift_unknownObjectRetain_n();
        uint64_t v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.debug.getter();
        int v42 = v41;
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v43 = swift_slowAlloc();
          uint64_t v84 = v15;
          uint64_t v44 = v43;
          uint64_t v94 = swift_slowAlloc();
          uint64_t v97 = v94;
          *(_DWORD *)uint64_t v44 = 136315650;
          os_log_t v90 = v40;
          uint64_t v96 = sub_10009B0E4(0xD000000000000032, 0x80000001005DBDB0, &v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v44 + 12) = 2080;
          id v45 = [v39 description];
          uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          LODWORD(v89) = v42;
          unint64_t v48 = v47;

          uint64_t v96 = sub_10009B0E4(v46, v48, &v97);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v44 + 22) = 2080;
          sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          uint64_t v49 = v87;
          uint64_t v50 = v95;
          uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v96 = sub_10009B0E4(v51, v52, &v97);
          unint64_t v36 = v82;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v84 + 8))(v49, v50);
          os_log_t v53 = v90;
          _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v89, "%s: Immediately found cell for node: %s indexPath: %s", (uint8_t *)v44, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v92 + 8))(v88, v91);
        }
        else
        {
          swift_unknownObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v95);

          (*(void (**)(char *, uint64_t))(v92 + 8))(v37, v91);
        }
        uint64_t v78 = v83;
        os_log_t v80 = v85;
        uint64_t v79 = v86;
        uint64_t v81 = v31;
        sub_1001FA12C(v78, v81, (uint64_t)v80, v36, v93, v79);
        swift_release();

        return;
      }
    }

    a1 = v32;
  }
  double v88 = a3;
  unint64_t v54 = v26;
  static Logger.Rename.getter();
  unint64_t v55 = v93;
  uint64_t v56 = v94;
  uint64_t v87 = *(char **)(v15 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v87)(v93, v94, v95);
  swift_unknownObjectRetain_n();
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.error.getter();
  int v59 = v58;
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v60 = swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    uint64_t v97 = v86;
    *(_DWORD *)uint64_t v60 = 136315650;
    os_log_t v85 = v57;
    uint64_t v96 = sub_10009B0E4(0xD000000000000032, 0x80000001005DBDB0, &v97);
    uint64_t v84 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v60 + 12) = 2080;
    id v61 = [a1 description];
    uint64_t v83 = v54;
    id v62 = v61;
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    LODWORD(v82) = v59;
    unint64_t v64 = a1;
    unint64_t v66 = v65;

    uint64_t v56 = v94;
    uint64_t v67 = v95;
    uint64_t v96 = sub_10009B0E4(v63, v66, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 22) = 2080;
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v68 = v93;
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v96 = sub_10009B0E4(v69, v70, &v97);
    uint64_t v15 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v68, v67);
    os_log_t v71 = v85;
    _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v82, "%s: Did not immediately find cell for node: %s indexPath: %s. Scrolling index path on screen", (uint8_t *)v60, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v92 + 8))(v83, v91);
  }
  else
  {
    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v55, v95);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v54, v91);
    unint64_t v64 = a1;
  }
  os_log_t v72 = v90;
  uint64_t v73 = v95;
  ((void (*)(os_log_t, uint64_t, uint64_t))v87)(v90, v56, v95);
  unint64_t v74 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v75 = (char *)swift_allocObject();
  os_log_type_t v76 = v88;
  *((void *)v75 + 2) = v88;
  *((void *)v75 + 3) = v64;
  *((void *)v75 + 4) = sub_10021E30C;
  *((void *)v75 + 5) = v28;
  (*(void (**)(char *, os_log_t, uint64_t))(v15 + 32))(&v75[v74], v72, v73);
  swift_unknownObjectRetain();
  uint64_t v77 = v76;
  swift_retain();
  sub_1001DB924(v56, (void (*)(void))sub_10021E320, (uint64_t)v75);
  swift_release();
  swift_release();
}

void sub_10021B82C(id a1, uint64_t a2, char *a3, NSObject *a4, void (*a5)(os_log_t, uint64_t, uint64_t), void *a6, uint64_t a7)
{
  uint64_t v91 = a2;
  uint64_t v93 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v93 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v93);
  uint64_t v87 = &v79[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v15);
  os_log_t v90 = (os_log_t)&v79[-v17];
  __chkstk_darwin(v16);
  unint64_t v82 = &v79[-v18];
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v88 = *(void *)(v19 - 8);
  uint64_t v89 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = &v79[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  uint64_t v86 = &v79[-v23];
  uint64_t v24 = (void *)swift_allocObject();
  os_log_t v83 = a4;
  v24[2] = a4;
  v24[3] = a5;
  v24[4] = a6;
  v24[5] = a7;
  os_log_t v85 = a5;
  swift_bridgeObjectRetain();
  uint64_t v25 = a6;
  uint64_t v84 = a7;
  swift_unknownObjectRetain();
  uint64_t v92 = a3;
  uint64_t v26 = sub_1001DB1A4((unint64_t)a1);
  if (v26)
  {
    uint64_t v27 = v26;
    if (sub_1001C048C(a1))
    {
      uint64_t v28 = v92;
      [v92 loadViewIfNeeded];
      uint64_t v29 = *(void **)&v28[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v29)
      {
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        __break(1u);
        return;
      }
      id v30 = v29;
      [v27 frame];
      unsigned __int8 v31 = [v30 _isRectFullyVisible:];

      if (v31)
      {
        uint64_t v32 = v86;
        static Logger.Rename.getter();
        uint64_t v33 = v82;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v82, v91, v93);
        swift_unknownObjectRetain_n();
        id v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.debug.getter();
        int v36 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v37 = swift_slowAlloc();
          uint64_t v81 = v13;
          uint64_t v38 = v37;
          uint64_t v91 = swift_slowAlloc();
          uint64_t v95 = v91;
          *(_DWORD *)uint64_t v38 = 136315650;
          os_log_t v90 = v34;
          uint64_t v94 = sub_10009B0E4(0xD000000000000032, 0x80000001005DBDB0, &v95);
          uint64_t v92 = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v38 + 12) = 2080;
          id v39 = [a1 description];
          LODWORD(v87) = v36;
          id v40 = v39;
          os_log_type_t v41 = v33;
          uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v44 = v43;

          uint64_t v94 = sub_10009B0E4(v42, v44, &v95);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 22) = 2080;
          sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          uint64_t v45 = v93;
          uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v94 = sub_10009B0E4(v46, v47, &v95);
          uint64_t v25 = v92;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v41, v45);
          os_log_t v48 = v90;
          _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v87, "%s: Immediately found cell for node: %s indexPath: %s", (uint8_t *)v38, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v86, v89);
        }
        else
        {
          swift_unknownObjectRelease_n();
          (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v33, v93);

          (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v32, v89);
        }
        os_log_type_t v76 = (void *)v84;
        unint64_t v75 = (unint64_t)v85;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v78 = v27;
        sub_100204CC0(v76, v78, (uint64_t)v83, v75, v25, ObjectType);
        swift_release();

        return;
      }
    }
  }
  uint64_t v49 = v22;
  static Logger.Rename.getter();
  os_log_t v51 = v90;
  uint64_t v50 = v91;
  os_log_t v85 = *(void (**)(os_log_t, uint64_t, uint64_t))(v13 + 16);
  v85(v90, v91, v93);
  swift_unknownObjectRetain_n();
  unint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.error.getter();
  int v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v86 = a1;
    uint64_t v56 = v55;
    uint64_t v84 = swift_slowAlloc();
    uint64_t v95 = v84;
    *(_DWORD *)uint64_t v56 = 136315650;
    os_log_t v83 = v52;
    uint64_t v94 = sub_10009B0E4(0xD000000000000032, 0x80000001005DBDB0, &v95);
    uint64_t v81 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 12) = 2080;
    id v57 = [v86 description];
    unint64_t v82 = v49;
    id v58 = v57;
    int v59 = v24;
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v80 = v54;
    unint64_t v62 = v61;

    uint64_t v63 = v60;
    uint64_t v24 = v59;
    uint64_t v64 = v93;
    uint64_t v50 = v91;
    uint64_t v94 = sub_10009B0E4(v63, v62, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 22) = 2080;
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    os_log_t v65 = v90;
    uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v94 = sub_10009B0E4(v66, v67, &v95);
    uint64_t v13 = v81;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(os_log_t, uint64_t))(v13 + 8))(v65, v64);
    os_log_t v68 = v83;
    _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v80, "%s: Did not immediately find cell for node: %s indexPath: %s. Scrolling index path on screen", (uint8_t *)v56, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v86;
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v82, v89);
  }
  else
  {
    swift_unknownObjectRelease_n();
    (*(void (**)(os_log_t, uint64_t))(v13 + 8))(v51, v93);

    (*(void (**)(unsigned char *, uint64_t))(v88 + 8))(v49, v89);
  }
  uint64_t v69 = v87;
  uint64_t v70 = v93;
  v85((os_log_t)v87, v50, v93);
  unint64_t v71 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  os_log_t v72 = (char *)swift_allocObject();
  uint64_t v73 = v92;
  *((void *)v72 + 2) = v92;
  *((void *)v72 + 3) = a1;
  *((void *)v72 + 4) = sub_10021EA18;
  *((void *)v72 + 5) = v24;
  (*(void (**)(char *, unsigned char *, uint64_t))(v13 + 32))(&v72[v71], v69, v70);
  swift_unknownObjectRetain();
  unint64_t v74 = v73;
  swift_retain();
  sub_1001DB924(v50, (void (*)(void))sub_10021E320, (uint64_t)v72);
  swift_release();
  swift_release();
}

uint64_t sub_10021C16C(void *a1, void *a2)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1F8))();
  if (v3
    && (uint64_t v4 = (void *)v3,
        uint64_t v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node),
        swift_beginAccess(),
        uint64_t v6 = *v5,
        swift_unknownObjectRetain(),
        v4,
        v6))
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
    *(void *)(inited + 32) = v6;
    unint64_t v10 = inited;
    specialized Array._endMutation()();
    swift_unknownObjectRetain();
    char v8 = sub_1000301E0(a2, v10);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

void *sub_10021C284(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v18 - v11;
  [v1 loadViewIfNeeded];
  uint64_t result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    id v14 = [result indexPathForCell:a1];
    if (v14)
    {
      uint64_t v15 = v14;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v16(v5, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v16(v12, v5, v6);
        char v17 = sub_10020CC10((uint64_t)v12);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        return (void *)(v17 & 1);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
    char v17 = 0;
    return (void *)(v17 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10021C4D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  char v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t result = (uint64_t)[v2 isEditing];
  if (result) {
    return result;
  }
  [v2 loadViewIfNeeded];
  uint64_t result = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v21 = [(id)result indexPathForCell:a1];
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_12;
  }
  uint64_t v22 = v21;
  id v34 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v23(v9, v17, v10);
  int v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v36(v9, 0, 1, v10);
  os_log_type_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v35(v9, 1, v10) == 1)
  {
LABEL_12:
    uint64_t v26 = (uint64_t)v9;
    return sub_1000CBBA4(v26, (uint64_t *)&unk_1007069A0);
  }
  uint64_t v33 = v23;
  v23(v19, v9, v10);
  if (IndexPath.count.getter() != 2)
  {
LABEL_10:
    v36(v7, 1, 1, v10);
LABEL_14:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    uint64_t v26 = (uint64_t)v7;
    return sub_1000CBBA4(v26, (uint64_t *)&unk_1007069A0);
  }
  uint64_t result = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  unsigned __int8 v24 = [(id)result isGathering];
  uint64_t v25 = v33;
  if ((v24 & 1) != 0 || (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v19, v10);
    v36(v7, 0, 1, v10);
    if (v35(v7, 1, v10) == 1) {
      goto LABEL_14;
    }
  }
  else
  {
    if (sub_1001DAF30((uint64_t)v19)) {
      goto LABEL_10;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v19, v10);
    v36(v7, 0, 1, v10);
    unsigned int v27 = v35(v7, 1, v10);
    uint64_t v25 = v33;
    if (v27 == 1) {
      goto LABEL_14;
    }
  }
  uint64_t v28 = (uint64_t)v34;
  v25(v34, v7, v10);
  uint64_t v29 = sub_1001BAA44(v28, 0);
  if (v29)
  {
    id v30 = (void *)v29;
    uint64_t ObjectType = swift_getObjectType();
    sub_100201FD8(v30, 0, (void (*)(void))DOCSplitBrowserViewController.didCommitPreview(of:), 0, v2, ObjectType);
    swift_unknownObjectRelease();
  }
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v32(v28, v10);
  return ((uint64_t (*)(char *, uint64_t))v32)(v19, v10);
}

id sub_10021C974()
{
  uint64_t v1 = v0;
  id result = [v0 loadViewIfNeeded];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    id v4 = v3;
    char v5 = UIScrollView.doc_isMoving.getter();

    if (v5) {
      return 0;
    }
    else {
      return (id)([*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPickerUI] ^ 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s5Files31DOCItemCollectionViewControllerC25adaptivePresentationStyle3for05traitC0So07UIModalgH0VSo014UIPresentationE0C_So07UITraitC0CtF_0(void *a1)
{
  id v1 = [a1 presentedViewController];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v3 = (void *)Strong;
  if (v1)
  {
    if (Strong)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      id v4 = v1;
      char v5 = static NSObject.== infix(_:_:)();

      if ((v5 & 1) == 0) {
        return -2;
      }
      return -1;
    }
    uint64_t v3 = v1;
  }
  else if (!Strong)
  {
    return -1;
  }

  return -2;
}

uint64_t type metadata accessor for DOCDragMonitor()
{
  return self;
}

uint64_t sub_10021CAD8()
{
  return type metadata accessor for DOCItemCollectionViewController(0);
}

uint64_t sub_10021CAE0()
{
  return type metadata accessor for DOCItemCollectionViewController.PendingNodeContext(0);
}

uint64_t type metadata accessor for DOCItemCollectionViewController.PendingNodeContext(uint64_t a1)
{
  return sub_10009E984(a1, qword_10070A570);
}

void sub_10021CB08()
{
  sub_10000DEA4(319, (unint64_t *)&qword_100707C40, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for DOCItemCollectionViewController.StringWidthCalculationContext()
{
  return self;
}

uint64_t initializeWithCopy for DOCItemCollectionViewController.RestorableConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionViewController.RestorableConfiguration(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for DOCItemCollectionViewController.RestorableConfiguration(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.RestorableConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.RestorableConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.RestorableConfiguration()
{
  return &type metadata for DOCItemCollectionViewController.RestorableConfiguration;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[40]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)id result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)id result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics()
{
  return &type metadata for DOCItemCollectionViewController.TableLayoutSidebarPlainAppearanceMetrics;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[32]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)id result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext()
{
  return &type metadata for DOCItemCollectionViewController.CollectionViewLayoutOptimizationContext;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewController.NextReloadPendingValues(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCItemCollectionViewController.NextReloadPendingValues(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10021D08CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.NextReloadPendingValues()
{
  return &type metadata for DOCItemCollectionViewController.NextReloadPendingValues;
}

unsigned char *storeEnumTagSinglePayload for DOCItemCollectionViewController.DOCMultiSelectActionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10021D190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewController.DOCMultiSelectActionStatus()
{
  return &type metadata for DOCItemCollectionViewController.DOCMultiSelectActionStatus;
}

void *sub_10021D1C8(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v7 = a1;
    uint64_t v8 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for IndexPath();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_unknownObjectRetain();
    v13(v10, v11, v12);
    *(void *)((char *)v7 + *(int *)(v8 + 24)) = *(void *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v14 = *(int *)(a3 + 24);
    *((unsigned char *)v7 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)v7 + v14) = *(void *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_10021D2EC(uint64_t a1)
{
  swift_unknownObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) + 20);
  uint64_t v3 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

void *sub_10021D380(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_unknownObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v12 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10021D458(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10021D534(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  return a1;
}

void *sub_10021D5EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10021D6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10021D774(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t *sub_10021D830(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for IndexPath();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

uint64_t sub_10021D930(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10021D9A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for IndexPath();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10021DA5C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10021DB04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10021DB9C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10021DC3C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IndexPath();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

void *sub_10021DCEC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

unint64_t sub_10021DD98()
{
  unint64_t result = qword_10070AB10;
  if (!qword_10070AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AB10);
  }
  return result;
}

uint64_t sub_10021DDEC()
{
  return sub_1000D1EC0((void (*)(void))&_swift_release);
}

uint64_t sub_10021DE04()
{
  return sub_10000A2AC(40);
}

uint64_t sub_10021DE0C()
{
  return sub_10000A2AC(41);
}

void sub_10021DE14()
{
}

void sub_10021DE1C()
{
  sub_10035D174(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10021DE30()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10021DE78()
{
  return sub_1001CC47C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10021DE84()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10021DEDC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000CB70;
  return sub_1001F4150(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10021DFB8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10021E000(char a1)
{
  sub_1001F4F7C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_10021E00C()
{
}

void sub_10021E014(uint64_t a1, uint64_t a2)
{
  sub_1001F6C80(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10021E01C()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  return _swift_deallocObject(v0, v8 + 8, v2 | 7);
}

uint64_t sub_10021E168()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(char **)(v0 + v3);
  uint64_t v5 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001F6E28(v0 + v2, v4, v5);
}

uint64_t sub_10021E204()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10021E254(uint64_t a1)
{
  return sub_10021E8D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1001FC750);
}

uint64_t sub_10021E26C()
{
  return sub_10021E904((void (*)(void))&_swift_unknownObjectRelease);
}

void sub_10021E284(uint64_t a1)
{
  sub_1001C84C0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10021E290()
{
  return sub_10021E904((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10021E2A8(void *a1)
{
  sub_1001C85DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10021E2B4(unint64_t a1)
{
  return sub_1001C8D50(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10021E2BC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10021E30C(void *a1)
{
  sub_1001FBBF4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10021E324()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10021E37C()
{
  return sub_1001FA424(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56));
}

void sub_10021E38C(void *a1)
{
}

void sub_10021E394(void *a1, uint64_t a2)
{
}

uint64_t sub_10021E3A4()
{
  return sub_10000A2AC(40);
}

uint64_t sub_10021E3AC(uint64_t a1, uint64_t a2)
{
  return sub_1001DDE24(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24));
}

void *sub_10021E3C0(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = (void *)a1[6];
  uint64_t v5 = (void *)a1[8];
  swift_unknownObjectRetain();
  sub_1000C0640(v2);
  sub_1000C0640(v3);
  id v6 = v4;
  id v7 = v5;
  return a1;
}

uint64_t sub_10021E434()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  uint64_t v7 = v0 + v6;
  swift_unknownObjectRelease();
  if (*(void *)(v0 + v6 + 8)) {
    swift_release();
  }
  if (*(void *)(v7 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v6 + 73, v3 | 7);
}

uint64_t sub_10021E578()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001DC938(*(void *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(uint64_t (**)(void))(v0 + 40), *(void *)(v0 + 48), v0 + v2, *(void **)(v0 + v3), (long long *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 72));
}

uint64_t sub_10021E620()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  swift_release();

  return _swift_deallocObject(v0, 144, 7);
}

void sub_10021E6B0(char a1)
{
  sub_1001DCC90(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), (long long *)(v1 + 40), *(void **)(v1 + 112), *(unsigned char *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136));
}

uint64_t sub_10021E6EC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10021E77C()
{
  return sub_1001DCE30(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + 40, *(void *)(v0 + 112), *(void **)(v0 + 120), *(unsigned __int8 *)(v0 + 128), *(uint64_t (**)(void))(v0 + 136));
}

void sub_10021E7B8()
{
}

uint64_t sub_10021E7C0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10021E820()
{
  return sub_1001FAA94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_10021E834()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10021E88C(void *a1, void *a2)
{
  sub_1001FAE3C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_10021E8A0()
{
  return sub_100220F94((uint64_t (*)(void, void, void, void, void))sub_1001FB964);
}

uint64_t sub_10021E8BC(uint64_t a1)
{
  return sub_10021E8D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1001FB600);
}

uint64_t sub_10021E8D4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10021E8EC()
{
  return sub_10021E904((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_10021E904(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  swift_release();

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_10021E960()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10021E9B0()
{
  return sub_10020482C(*(void **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char **)(v0 + 32));
}

uint64_t sub_10021E9C4()
{
  return sub_1001FC4CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10021E9D0()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10021EA18(void *a1)
{
  sub_1001FC1B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10021EA28()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10021EB04()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void (*)(char *))v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1001F8FB4(v2, v3, v4, v5, v6);
}

uint64_t sub_10021EB70()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10021EBB8(uint64_t a1)
{
  sub_1001F56A0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10021EBC4()
{
  uint64_t v1 = sub_1000CBE70(&qword_10070AC30);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021EC58(void *a1)
{
  sub_1000CBE70(&qword_10070AC30);

  return sub_1001F5834(a1);
}

uint64_t sub_10021ECCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100271618(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_10021ECDC()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_10021ED08(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1001D8DE4(a1, a2, *(void **)(v2 + 16), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v8), *(void *)(v2 + v8 + 8), *(void **)(v2 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10021EDEC()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v9);
}

void sub_10021EF50()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1001D9058(*(void **)(v0 + 16), v0 + v2, *(void *)(v0 + v3), *(uint64_t (**)(uint64_t))(v0 + v4), *(void *)(v0 + v4 + 8), *(void *)(v0 + v5), *(void **)(v0 + v6), *(void **)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10021F038()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10021F088()
{
  return sub_100270D00(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(void *)(v0 + 48), *(void (**)(double, double, double, double))(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_10021F0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100270DA8(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_10021F0BC()
{
  return sub_1000D1EC0((void (*)(void))&_swift_release);
}

Swift::Int sub_10021F0D4(uint64_t a1)
{
  return sub_1001F1F98(a1);
}

uint64_t sub_10021F0DC(uint64_t a1, uint64_t a2)
{
  return sub_1004126CC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10021F0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(a3, a4);
}

uint64_t sub_10021F118()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 66, 7);
}

uint64_t sub_10021F168()
{
  return sub_1001D6760(*(void **)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void (**)(id, uint64_t, id, NSObject *, double, double, double, double))(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(unsigned __int8 *)(v0 + 65));
}

uint64_t sub_10021F184()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10021F1DC(void *a1)
{
  sub_1001D7E4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id, uint64_t, id, NSObject *, double, double, double, double))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(NSObject **)(v1 + 64));
}

uint64_t sub_10021F1F8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10021F240()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[3];
  uint64_t v3 = v0[5];
  swift_beginAccess();
  *(unsigned char *)(v1 + 16) = 1;
  return v2(v3);
}

uint64_t sub_10021F2AC()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v7 = v3 | 7;
  unint64_t v5 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v7);
}

void sub_10021F3EC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1001D8BAC(a1, *(void **)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v6 + 8), *(void **)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_10021F4C4(uint64_t a1, uint64_t a2)
{
  sub_1001F1A04(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10021F4D0()
{
  return sub_100220F18((void (*)(void))&_swift_release, 48);
}

uint64_t sub_10021F4EC()
{
  uint64_t v1 = (char *)v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = (void (*)(void))v0[4];
  swift_retain();
  sub_1002191D4(v2, v1, v3);

  return swift_release();
}

uint64_t sub_10021F548()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10021F584(uint64_t a1, uint64_t a2)
{
  sub_1001F1058(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10021F590()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10021F5C8()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_10021F5F4()
{
  return sub_100220F18((void (*)(void))&_swift_release, 48);
}

void sub_10021F610()
{
  sub_1001F1464(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(id))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10021F61C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10021F65C(void *a1, void *a2)
{
  sub_1001F14E4(a1, a2, *(void (**)(id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10021F67C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10021F73C(uint8_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  uint64_t v9 = *(void *)(v2 + v7 + 8);
  uint64_t v10 = *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_1001EE198(a1, a2, (void *)(v2 + v6), v8, v9, v10);
}

uint64_t sub_10021F7F8()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(0, 0);
}

uint64_t sub_10021F828()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10021F870(uint64_t a1, uint64_t a2)
{
  sub_1001EEB08(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10021F87C()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_10021F9DC()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(uint64_t (**)(void *, void *))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_1001EECE0(v5, v6, v7, v9, v10);
}

uint64_t sub_10021FA88()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10021FAD0(uint64_t a1)
{
  sub_1001EF48C(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(void))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10021FAE4()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10021FB2C(uint64_t a1)
{
  sub_1001F05F0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10021FB3C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10021FB84()
{
  return sub_1001F0478(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_10021FB94()
{
  return sub_10021FDD0((void (*)(void))&_swift_release, 32);
}

uint64_t sub_10021FBB0()
{
  return sub_1001CDD7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10021FBB8()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_10021FBF8()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10021FC48()
{
  return sub_1001F06F8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10021FC5C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_10021FC94(uint64_t a1)
{
  return sub_1001EDA74(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_10021FC9C(void *result)
{
  if (result)
  {

    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10021FCDC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10021FD14()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

void sub_10021FD1C()
{
}

uint64_t sub_10021FD24()
{
  return sub_10021FDD0((void (*)(void))&_swift_unknownObjectRelease, 40);
}

uint64_t sub_10021FD40()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10021FD50()
{
  unint64_t result = qword_10070AD58;
  if (!qword_10070AD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AD58);
  }
  return result;
}

void sub_10021FDA4()
{
}

BOOL sub_10021FDAC(uint64_t a1, objc_class *a2)
{
  return sub_1001D4668(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10021FDB4()
{
  return sub_10021FDD0((void (*)(void))&_swift_bridgeObjectRelease, 32);
}

uint64_t sub_10021FDD0(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 24));

  return _swift_deallocObject(v2, a2, 7);
}

void sub_10021FE2C()
{
  sub_1001D1B5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10021FE34()
{
}

uint64_t sub_10021FE5C()
{
  return sub_10010A9FC() & 1;
}

void sub_10021FE7C(uint64_t a1, void **a2)
{
  sub_1001CFDE4(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10021FE84(uint64_t a1, void **a2)
{
  return sub_1001CFC34(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10021FE8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10021FEB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10021FF20()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming) = 0;
  sub_10001ECEC();
}

uint64_t sub_10021FF50()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10021FF88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

void sub_10021FFD4()
{
}

id sub_10021FFDC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 itemsOrigin];
  *a2 = result;
  return result;
}

void sub_100220010(void **a1, uint64_t a2)
{
  sub_1001C2BB4(a1, a2, v2);
}

uint64_t sub_100220018()
{
  return sub_1000D1EC0((void (*)(void))&_swift_release);
}

void sub_100220030()
{
  sub_1001C2C8C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100220038(uint64_t a1)
{
}

uint64_t sub_100220040()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100220080(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

id sub_100220088(uint64_t a1)
{
  return sub_1001C1150(a1);
}

void sub_100220090()
{
}

void sub_100220098()
{
}

uint64_t sub_1002200A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001C1C80(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24));
}

void sub_1002200A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001C1B78(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1002200B0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1002200DC()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100220114()
{
  return sub_1004D51B0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100220120()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100220130(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100220180(uint64_t a1)
{
  return a1;
}

id sub_1002201AC()
{
  return sub_1001B819C(*(unsigned char **)(v0 + 16));
}

uint64_t sub_1002201B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10000CB70;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10070AE20 + dword_10070AE20);
  return v6(a1, v4);
}

void sub_10022026C(void *a1)
{
  sub_1001E7B24(a1, v1);
}

uint64_t sub_100220274()
{
  return sub_1000D1EC0((void (*)(void))&_swift_release);
}

void sub_10022028C()
{
  sub_1001E7C10(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100220294()
{
  return sub_100221250((void (*)(void))&_swift_errorRelease);
}

void sub_1002202AC()
{
  sub_1001E6910(*(unsigned char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002202B4()
{
  return sub_1000D1EC0((void (*)(void))&_swift_errorRelease);
}

void sub_1002202CC()
{
  sub_1001E731C(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1002202D4()
{
  return sub_1001F2FFC(*(char **)(v0 + 16));
}

uint64_t sub_1002202DC(void *a1, uint64_t a2)
{
  return sub_1001F3B70(a1, a2, v2);
}

uint64_t sub_1002202E4()
{
  return sub_100221250((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1002202FC(uint64_t a1, uint64_t a2)
{
  return sub_1001F378C(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_100220304()
{
  return sub_100221250((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_10022031C()
{
  return sub_1001F3AE4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100220324()
{
  return sub_1000D1EC0((void (*)(void))&_swift_release);
}

void sub_10022033C()
{
  sub_1001F3E5C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100220348()
{
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 88)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 137, 7);
}

void sub_1002203D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void **)(v2 + 24);
  uint64_t v7 = *(char **)(v2 + 32);
  uint64_t v8 = *(void (**)(void))(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v10 = *(void **)(v2 + 56);
  uint64_t v11 = v2 + 64;
  unsigned __int8 v12 = *(unsigned char *)(v2 + 136);
  swift_getObjectType();
  sub_100204240(a1, a2, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100220470()
{
  return sub_10000A2AC(40);
}

uint64_t sub_10022047C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v6 = v0 + v5;
  swift_unknownObjectRelease();
  if (*(void *)(v0 + v5 + 8)) {
    swift_release();
  }
  if (*(void *)(v6 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 73, v3 | 7);
}

void sub_1002205B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1001DC4B0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), v0 + v2, v3, *(unsigned char *)(v3 + 72));
}

uint64_t sub_10022064C()
{
  return sub_100220F18((void (*)(void))&_swift_release, 48);
}

uint64_t sub_100220668()
{
  return sub_1001F25C8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100220674()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002206B4()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100220784()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(char **)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));

  return sub_1001FCC20(v3, v0 + v2, v4);
}

uint64_t sub_10022080C()
{
  return sub_1001E919C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100220814()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10022085C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1) {
    return v1(result);
  }
  return result;
}

uint64_t sub_1002208A4(uint64_t a1)
{
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

void *sub_100220914(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100220950()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100220960()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100220A2C()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v4 = *(void **)(v0 + 32);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1001E4F3C(v2, v3, v4, v5);
}

uint64_t sub_100220A98()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100220B74(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void **)(v2 + 32);
  int v9 = *(unsigned __int8 *)(v2 + 40);
  uint64_t v10 = *(void **)(v2 + 48);
  uint64_t v11 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1001E4BD4(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_100220C04()
{
  return sub_100221250((void (*)(void))&_swift_release);
}

void sub_100220C1C(void *a1, uint64_t a2)
{
  sub_1001E0928(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100220C24()
{
  return sub_1000D1EC0((void (*)(void))&_swift_release);
}

void sub_100220C3C()
{
  sub_1001E0C5C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100220C44()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100220D10()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(void **)(v0 + 16);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v1 deselectItemAtIndexPath:isa animated:1];
}

uint64_t sub_100220DA8()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100220E74()
{
  type metadata accessor for IndexPath();
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);

  sub_1001E5230(v1, v2);
}

uint64_t sub_100220EDC()
{
  return sub_1001DF4E8(*(void **)(v0 + 16));
}

void sub_100220EE4()
{
  sub_1001DF64C(*(void **)(v0 + 16));
}

uint64_t sub_100220EEC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100220EFC()
{
  return sub_100220F18((void (*)(void))&_swift_bridgeObjectRelease, 56);
}

uint64_t sub_100220F18(void (*a1)(void), uint64_t a2)
{
  swift_unknownObjectRelease();
  a1(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100220F7C()
{
  return sub_100220F94(sub_1001F8A3C);
}

uint64_t sub_100220F94(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100220FAC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100220FBC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100221004()
{
  return sub_1001D3B5C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100221010()
{
}

uint64_t sub_100221018(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10022105C()
{
  return sub_1001CD4D8(*(void **)(v0 + 16), 0);
}

uint64_t sub_10022107C()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100221120()
{
  type metadata accessor for Notification();

  return sub_1001CA888();
}

uint64_t sub_1002211AC()
{
  return _swift_deallocObject(v0, 33, 7);
}

id sub_1002211EC()
{
  return sub_100011DFC(*(void **)(v0 + 16), *(unsigned char **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void *sub_1002211F8(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_100221238()
{
  return sub_100221250((void (*)(void))&_swift_release);
}

uint64_t sub_100221250(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 32, 7);
}

void sub_1002212A0()
{
  sub_1001CA450(*(void **)(v0 + 16));
}

uint64_t sub_1002212A8()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1002213CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *int v9 = v2;
  v9[1] = sub_1000D1744;
  return sub_10057FDBC(a1, v5, v6, v7, v8);
}

uint64_t sub_1002214C8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_100221558()
{
}

uint64_t sub_100221560(uint64_t *a1, int64_t a2)
{
  return sub_1001C375C(a1, a2);
}

id sub_100221568()
{
  uint64_t v1 = *(void **)(v0 + 24);
  [*(id *)(v0 + 16) setAlpha:1.0];
  [v1 setAlpha:0.0];

  return [v1 layoutBelowIfNeeded];
}

uint64_t sub_1002215C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002215D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002215E4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1002215EC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002215FC(char *a1)
{
}

uint64_t sub_100221604@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001BAA44(a1, *(void *)(v2 + 24));
  *a2 = result;
  return result;
}

uint64_t initializeWithCopy for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_retain();
  return a1;
}

void *assignWithCopy for DOCItemCollectionViewController.UpdatedLayoutInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewController.UpdatedLayoutInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCItemCollectionViewController.RestorableSettingsCacheKey(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionViewController.RestorableSettingsCacheKey(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for DOCItemCollectionViewController.RestorableSettingsCacheKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFileProviderSourceType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSourceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1002218FC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100221904(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void *sub_100221910(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for IndexPath();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_unknownObjectRetain();
    v13(v10, v11, v12);
    *(void *)((char *)v7 + *(int *)(v8 + 24)) = *(void *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v14 = type metadata accessor for ScrollPositionInfo(0);
    *((unsigned char *)v7 + *(int *)(v14 + 20)) = *((unsigned char *)a2 + *(int *)(v14 + 20));
    *(void *)((char *)v7 + *(int *)(v14 + 24)) = *(void *)((char *)a2 + *(int *)(v14 + 24));
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)v7 + v15;
    char v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain();
    if (v18)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    else
    {
      long long v19 = *((_OWORD *)v17 + 1);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v19;
    }
  }
  return v7;
}

uint64_t sub_100221A90(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) + 20);
  uint64_t v5 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for ScrollPositionInfo(0);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 20) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_100221B58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_unknownObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v12 = type metadata accessor for ScrollPositionInfo(0);
  *((unsigned char *)a1 + *(int *)(v12 + 20)) = *((unsigned char *)a2 + *(int *)(v12 + 20));
  *(void *)((char *)a1 + *(int *)(v12 + 24)) = *(void *)((char *)a2 + *(int *)(v12 + 24));
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    long long v17 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v17;
  }
  return a1;
}

void *sub_100221C8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = type metadata accessor for ScrollPositionInfo(0);
  *((unsigned char *)a1 + *(int *)(v11 + 20)) = *((unsigned char *)a2 + *(int *)(v11 + 20));
  *(void *)((char *)a1 + *(int *)(v11 + 24)) = *(void *)((char *)a2 + *(int *)(v11 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = *(void *)((char *)a1 + v12 + 8);
  uint64_t v16 = v14[1];
  if (v15)
  {
    if (v16)
    {
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = v14[2];
      uint64_t v18 = v14[3];
      v13[2] = v17;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v13[3] = v18;
    }
    else
    {
      sub_100221E20((uint64_t)v13);
      long long v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
    }
  }
  else if (v16)
  {
    *uint64_t v13 = *v14;
    v13[1] = v14[1];
    *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    long long v20 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v20;
  }
  return a1;
}

uint64_t sub_100221E20(uint64_t a1)
{
  return a1;
}

void *sub_100221E54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = type metadata accessor for ScrollPositionInfo(0);
  *((unsigned char *)a1 + *(int *)(v11 + 20)) = *((unsigned char *)a2 + *(int *)(v11 + 20));
  *(void *)((char *)a1 + *(int *)(v11 + 24)) = *(void *)((char *)a2 + *(int *)(v11 + 24));
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  return a1;
}

void *sub_100221F2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(v6 + 24)) = *(void *)((char *)a2 + *(int *)(v6 + 24));
  uint64_t v11 = type metadata accessor for ScrollPositionInfo(0);
  *((unsigned char *)a1 + *(int *)(v11 + 20)) = *((unsigned char *)a2 + *(int *)(v11 + 20));
  *(void *)((char *)a1 + *(int *)(v11 + 24)) = *(void *)((char *)a2 + *(int *)(v11 + 24));
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (uint64_t)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (!*(void *)((char *)a1 + v12 + 8)) {
    goto LABEL_5;
  }
  uint64_t v15 = *((void *)v14 + 1);
  if (!v15)
  {
    sub_100221E20(v13);
LABEL_5:
    long long v18 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v18;
    return a1;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v14 + 2);
  uint64_t v17 = *((void *)v14 + 3);
  *(void *)(v13 + 16) = v16;
  swift_unknownObjectRelease();
  *(void *)(v13 + 24) = v17;
  return a1;
}

uint64_t sub_100222050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100222120(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t destroy for RestorableSearchInfo()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for RestorableSearchInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for RestorableSearchInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  return a1;
}

uint64_t assignWithTake for RestorableSearchInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for RestorableSearchInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RestorableSearchInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RestorableSearchInfo()
{
  return &type metadata for RestorableSearchInfo;
}

unsigned char *storeEnumTagSinglePayload for DOCItemCollectionRowColumn(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100222494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionRowColumn()
{
  return &type metadata for DOCItemCollectionRowColumn;
}

unint64_t sub_1002224D0()
{
  unint64_t result = qword_10070AF80;
  if (!qword_10070AF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AF80);
  }
  return result;
}

unint64_t sub_100222528()
{
  unint64_t result = qword_10070AF88;
  if (!qword_10070AF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AF88);
  }
  return result;
}

void sub_1002229EC()
{
  if (v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy]) {
    uint64_t v1 = 1;
  }
  else {
    uint64_t v1 = v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink];
  }
  [v0 setUserInteractionEnabled:v1];
  id v2 = sub_100222BA4();
  [v0 addGestureRecognizer:v2];

  if (v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] == 1)
  {
    int v3 = (void *)UIView.doc_tintColorIgnoringVibrancyContainer.getter();
    id v4 = [self _doc_safeTintColor:v3];
  }
  else
  {
    id v4 = *(id *)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText];
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  [super setTextColor:v4];
  if (static DOCVibrancy.featureEnabled.getter()) {
    [v0 setTintColor:v4];
  }
}

id sub_100222BA4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleTapWithSender:"];
    objc_super v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100222CF0()
{
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText + 8])
  {
    id v1 = [v0 text];
    if (!v1) {
      return;
    }
    id v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = [self generalPasteboard];
    id v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setString:v4];
  }
}

char *sub_100222E74()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction];
  if (v2)
  {
    id v3 = *(char **)&v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction];
  }
  else
  {
    id v4 = objc_allocWithZone((Class)type metadata accessor for DOCViewEditMenuInteraction());
    objc_super v5 = v0;
    id v6 = sub_100223460(v5, v5, v4);
    uint64_t v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_100222EF4()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (!*(void *)&Strong[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText + 8])
    {
      id v2 = [Strong text];
      if (!v2)
      {

        return;
      }
      id v3 = v2;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    swift_bridgeObjectRetain();
    if (String.count.getter() < 1)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = [self generalPasteboard];
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v4 setString:v5];
    }
  }
}

void sub_100223028()
{
  uint64_t v1 = (objc_class *)type metadata accessor for DOCCopyableLabel();
  v5.receiver = v0;
  v5.super_class = v1;
  [super tintColorDidChange];
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink) == 1)
  {
    id v2 = (void *)UIView.doc_tintColorIgnoringVibrancyContainer.getter();
    id v3 = [self _doc_safeTintColor:v2];

    v4.receiver = v0;
    v4.super_class = v1;
    [super setTextColor:v3];
    if (static DOCVibrancy.featureEnabled.getter()) {
      [v0 setTintColor:v3];
    }
  }
}

id sub_100223138(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 0;
  v4[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] = 0;
  uint64_t v9 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  unint64_t v10 = self;
  int v11 = v4;
  *(void *)&v4[v9] = [v10 labelColor];
  uint64_t v12 = &v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction] = 0;

  v14.receiver = v11;
  v14.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100223268(void *a1)
{
  v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 0;
  v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] = 0;
  uint64_t v3 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  objc_super v4 = self;
  objc_super v5 = v1;
  *(void *)&v1[v3] = [v4 labelColor];
  id v6 = &v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___tapGesture] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCCopyableLabel____lazy_storage___menuInteraction] = 0;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  [super initWithCoder:a1];

  return v7;
}

id sub_100223388()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCCopyableLabel()
{
  return self;
}

char *sub_100223460(void *a1, void *a2, unsigned char *a3)
{
  a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = 0;
  swift_unknownObjectWeakInit();
  id v6 = &a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_delegate];
  *(void *)&a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture] = 0;
  *(void *)&a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction] = 0;
  id v7 = &a3[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[24] = 0;
  *((void *)v7 + 2) = 0;
  swift_unknownObjectWeakAssign();
  *((void *)v6 + 1) = &off_100698848;
  swift_unknownObjectWeakAssign();
  v16.receiver = a3;
  v16.super_class = (Class)type metadata accessor for DOCViewEditMenuInteraction();
  id v8 = [super init];
  id v9 = objc_allocWithZone((Class)UILongPressGestureRecognizer);
  unint64_t v10 = (char *)v8;
  id v11 = [v9 initWithTarget:v10 action:"longPressGesture:"];
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture];
  *(void *)&v10[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture] = v11;

  id v13 = [objc_allocWithZone((Class)UIEditMenuInteraction) initWithDelegate:v10];
  objc_super v14 = *(void **)&v10[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction];
  *(void *)&v10[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction] = v13;

  return v10;
}

void sub_1002235E8(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText];
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_textColorIfStaticText] = a1;
  id v4 = a1;

  if (v1[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] == 1)
  {
    objc_super v5 = (void *)UIView.doc_tintColorIgnoringVibrancyContainer.getter();
    id v6 = [self _doc_safeTintColor:v5];
  }
  else
  {
    id v6 = *(id *)&v1[v2];
  }
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DOCCopyableLabel();
  [super setTextColor:v6];
  if (static DOCVibrancy.featureEnabled.getter()) {
    [v1 setTintColor:v6];
  }
}

uint64_t sub_100223760(uint64_t a1)
{
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  uint64_t v2 = a1
     + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason;
  uint64_t v3 = *(void *)(a1
                 + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason);
  id v4 = *(void **)(v2 + 8);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0xD000000000000017;
  v7._object = (void *)0x80000001005DF160;
  String.append(_:)(v7);

  return swift_bridgeObjectRelease();
}

void *sub_100223830(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_10017C344((uint64_t)a1);
      if (v7)
      {
        Swift::String v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = __CocoaDictionary.lookup(_:)();

  if (!v4) {
    return 0;
  }
  sub_10009E6C4(0, &qword_100708700);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  Swift::String v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t DOCHierarchyController.reset(with:animated:completionHandler:)(void *a1, int a2, void (*a3)(void), uint64_t a4)
{
  return sub_1000BCD84(a1, a1, a2, 1, 0, a3, a4);
}

uint64_t sub_100223924()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  unint64_t v6 = &v14[-v5];
  uint64_t v7 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v7, (uint64_t)v4, (uint64_t *)&unk_10070B640);
  uint64_t v8 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v4, 1, v8) == 1)
  {
    uint64_t v11 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    sub_1000CBC00(v11, (uint64_t)v6, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v4, (uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  if (v10(v6, 1, v8) == 1)
  {
    sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_10070B640);
    return 0;
  }
  else
  {
    uint64_t v12 = v6[*(int *)(v8 + 24)];
    sub_1000C1DEC((uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  return v12;
}

uint64_t sub_100223B44()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)_CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_7;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v4 = *(id *)(v2 + 32);
  }
  uint64_t v3 = v4;
LABEL_7:
  swift_bridgeObjectRelease();
  unint64_t v5 = (unint64_t)sub_100225C60();
  unint64_t v6 = v5;
  if (!(v5 >> 62))
  {
    uint64_t result = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_9;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_21:

      goto LABEL_22;
    }
LABEL_23:
    char v12 = 0;
    return v12 & 1;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_27:
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v6 + 32);
LABEL_12:
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (v3)
    {
      if (v9)
      {
        sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        id v10 = v3;
        char v11 = static NSObject.== infix(_:_:)();

        char v12 = v11 ^ 1;
        return v12 & 1;
      }
      goto LABEL_21;
    }
    if (v9)
    {

LABEL_22:
      char v12 = 1;
      return v12 & 1;
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void sub_100223CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v49 - v9;
  uint64_t v11 = (uint64_t)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess();
  sub_1000CBC00(v11, (uint64_t)v8, (uint64_t *)&unk_10070B640);
  uint64_t v12 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v13 = *(void *)(v12 - 8);
  objc_super v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v8, 1, v12) == 1)
  {
    uint64_t v15 = (uint64_t)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess();
    sub_1000CBC00(v15, (uint64_t)v10, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v8, (uint64_t)v10, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  if (v14(v10, 1, v12) == 1)
  {
    sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_10070B640);
  }
  else
  {
    char v16 = v10[*(int *)(v12 + 24)];
    sub_1000C1DEC((uint64_t)v10, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    if (v16) {
      return;
    }
  }
  uint64_t v17 = sub_1000BB4AC();
  if (v17)
  {
    long long v18 = (void *)v17;
    unint64_t v19 = (unint64_t)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    unint64_t v20 = *(void *)v19;
    swift_bridgeObjectRetain();
    sub_1001B5F94((uint64_t)v18, v20);
    uint64_t v22 = v21;
    char v24 = v23;
    swift_bridgeObjectRelease();
    if (v24)
    {
LABEL_22:

      return;
    }
    uint64_t v25 = sub_1000BDAB0(0xD00000000000002BLL, 0x80000001005DF1C0);
    aBlock[0] = v3;
    swift_getKeyPath();
    uint64_t v26 = &protocol witness table for NSObject;
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
    unsigned int v27 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(void *)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = 0;

    aBlock[0] = v3;
    swift_getKeyPath();
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
    if (v22 < 0)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      unint64_t v19 = *(void *)v19;
      uint64_t v26 = (void *)(v19 >> 62);
      if (!(v19 >> 62))
      {
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v22) {
          goto LABEL_12;
        }
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v47 < 0)
    {
LABEL_30:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v48 >= v22)
    {
LABEL_12:
      uint64_t v50 = a1;
      if ((v19 & 0xC000000000000001) != 0 && v22)
      {
        sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        Swift::Int v28 = 0;
        do
        {
          Swift::Int v29 = v28 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v28);
          Swift::Int v28 = v29;
        }
        while (v22 != v29);
      }
      uint64_t v30 = v25;
      if (v26)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.subscript.getter();
        uint64_t v32 = v35;
        int64_t v34 = v36;
        unint64_t v33 = v37;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v31 = v19 & 0xFFFFFFFFFFFFFF8;
        uint64_t v32 = (v19 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v33 = (2 * v22) | 1;
        swift_bridgeObjectRetain();
        int64_t v34 = 0;
      }
      uint64_t v49 = v18;
      swift_endAccess();
      if (v34 != v33 >> 1)
      {
        if (v34 < (uint64_t)(v33 >> 1))
        {
          uint64_t v38 = v31;
          id v39 = *(void **)(v32 + 8 * v34);
          id v40 = (void *)swift_allocObject();
          v40[2] = v3;
          v40[3] = v30;
          uint64_t v41 = v51;
          v40[4] = v50;
          v40[5] = v41;
          v40[6] = v38;
          v40[7] = v32;
          v40[8] = v34;
          v40[9] = v33;
          uint64_t v42 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
          unint64_t v43 = (void *)swift_allocObject();
          v43[2] = sub_10023F468;
          v43[3] = v40;
          v43[4] = v39;
          aBlock[4] = sub_1000BB090;
          aBlock[5] = v43;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000704F8;
          aBlock[3] = &unk_10069A8C8;
          unint64_t v44 = _Block_copy(aBlock);
          id v45 = v39;
          uint64_t v46 = v3;
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain();
          swift_retain();
          swift_release();
          [v42 retrieveAllSourcesCompletionBlock:v44];
          _Block_release(v44);

          swift_release();
          swift_release();
          swift_unknownObjectRelease();
          long long v18 = v49;
          goto LABEL_22;
        }
        goto LABEL_29;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t sub_1002242A8()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
  swift_beginAccess();
  sub_1000CBC00(v8, (uint64_t)v3, (uint64_t *)&unk_10070B640);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    uint64_t result = sub_1000CBBA4((uint64_t)v3, (uint64_t *)&unk_10070B640);
    goto LABEL_5;
  }
  sub_1000C194C((uint64_t)v3, (uint64_t)v7, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  if (v7[*(int *)(v4 + 20)])
  {
    uint64_t result = sub_1000C1DEC((uint64_t)v7, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_5:
    unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_6;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  unint64_t v10 = *(void *)&v7[*(int *)(v4 + 28)];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1000C1DEC((uint64_t)v7, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  if (v10 >> 62) {
    goto LABEL_20;
  }
LABEL_6:
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v11 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation;
  swift_beginAccess();
  uint64_t updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v11, 1, updated);
  if (!result)
  {
    uint64_t v13 = *(void **)(v11 + *(int *)(updated + 20));
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v10 = (unint64_t)v13;
  }
LABEL_9:
  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    objc_super v14 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
    swift_beginAccess();
    unint64_t v10 = *v14;
    uint64_t result = swift_bridgeObjectRetain();
  }
LABEL_12:
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      return v15;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_17;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v10 + 32);
LABEL_17:
    uint64_t v15 = (uint64_t)v16;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

id sub_100224654(unint64_t a1, void *a2, int a3, int a4, int a5, uint64_t (*a6)(uint64_t), unsigned char *a7)
{
  BOOL v119 = a6;
  char v118 = a7;
  int v110 = a4;
  LODWORD(v111) = a3;
  id v115 = a2;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t isa = (uint64_t)v9[-1].isa;
  __chkstk_darwin(v9);
  uint64_t v12 = &v102[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v13 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v113 = &v102[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1000CBE70((uint64_t *)&unk_10070B6C0);
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v121 = &v102[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v19 = &v102[-v18];
  uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  char v24 = &v102[-v23];
  __chkstk_darwin(v22);
  unsigned int v27 = &v102[-v26];
  unint64_t v116 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_48;
  }
  uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v28)
  {
LABEL_51:
    static Logger.UI.getter();
    id v99 = Logger.logObject.getter();
    os_log_type_t v100 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v99, v100))
    {
      id v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v101 = 0;
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "Unexpected: got call to applyUpdate() with empty locations array", v101, 2u);
      swift_slowDealloc();
    }

    return (id)(*(uint64_t (**)(unsigned char *, NSObject *))(isa + 8))(v12, v9);
  }
  while (1)
  {
    uint64_t v108 = v28;
    uint64_t v109 = v25;
    int v103 = a5;
    uint64_t v112 = swift_allocBox();
    uint64_t v30 = v29;
    uint64_t updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
    uint64_t v32 = *(void *)(updated - 8);
    unint64_t v33 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v32 + 56);
    uint64_t v107 = v30;
    uint64_t v106 = v33;
    uint64_t v105 = v32 + 56;
    v33((unsigned char *)v30, 1, 1, updated);
    uint64_t v114 = swift_allocObject();
    *(void *)(v114 + 16) = 0;
    id v34 = v120;
    uint64_t v35 = &v120[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
    uint64_t v36 = *(void *)&v120[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
    if (v120[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation + 8]) {
      uint64_t v36 = 0;
    }
    *(void *)uint64_t v35 = v36;
    v35[8] = 0;
    uint64_t v37 = (uint64_t)v34 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
    swift_beginAccess();
    sub_1000CBC00(v37, (uint64_t)v24, (uint64_t *)&unk_10070B640);
    uint64_t v38 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v39 = v13;
    id v40 = (int *)v117;
    int v41 = v38(v24, 1, v117);
    uint64_t v104 = v39;
    if (v41 == 1)
    {
      uint64_t v42 = (uint64_t)v34 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
      swift_beginAccess();
      sub_1000CBC00(v42, (uint64_t)v27, (uint64_t *)&unk_10070B640);
      id v34 = v120;
      sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070B640);
    }
    else
    {
      sub_1000C194C((uint64_t)v24, (uint64_t)v27, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v39 + 56))(v27, 0, 1, v40);
    }
    if (v38(v27, 1, (uint64_t)v40) == 1) {
      sub_1000CBBA4((uint64_t)v27, (uint64_t *)&unk_10070B640);
    }
    else {
      sub_1000C1DEC((uint64_t)v27, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    }
    unint64_t v43 = v40;
    if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
    {
      sub_10023A94C((uint64_t)v34, v114, v112, v119);
      swift_release();
      return (id)swift_release();
    }
    swift_bridgeObjectRetain();
    UUID.init()();
    *(void *)&v19[*(int *)(updated + 20)] = a1;
    uint64_t v44 = (uint64_t)v121;
    sub_1000C1CF0((uint64_t)v19, (uint64_t)v121, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    id v45 = v106;
    v106((unsigned char *)v44, 0, 1, updated);
    uint64_t v46 = (uint64_t)v34 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation;
    swift_beginAccess();
    sub_10023E834(v44, v46);
    swift_endAccess();
    v45(v19, 0, 1, updated);
    sub_10023E834((uint64_t)v19, v107);
    unint64_t v123 = 0;
    uint64_t v124 = 0xE000000000000000;
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease();
    unint64_t v123 = 0xD00000000000001ALL;
    uint64_t v124 = 0x80000001005DEED0;
    if (v116)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v47 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v121 = (unsigned char *)a1;
    if (v47)
    {
      uint64_t v122 = _swiftEmptyArrayStorage;
      id result = (id)sub_100059E2C(0, v47 & ~(v47 >> 63), 0);
      if (v47 < 0) {
        goto LABEL_58;
      }
      uint64_t v49 = 0;
      uint64_t v50 = v122;
      unint64_t v51 = a1 & 0xC000000000000001;
      do
      {
        if (v51) {
          id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v52 = *(id *)(a1 + 8 * v49 + 32);
        }
        os_log_type_t v53 = v52;
        id v54 = [v52 shortDescription];
        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v57 = v56;

        uint64_t v122 = v50;
        unint64_t v59 = v50[2];
        unint64_t v58 = v50[3];
        if (v59 >= v58 >> 1)
        {
          sub_100059E2C(v58 > 1, v59 + 1, 1);
          uint64_t v50 = v122;
        }
        ++v49;
        v50[2] = v59 + 1;
        uint64_t v60 = &v50[2 * v59];
        v60[4] = v55;
        v60[5] = v57;
        a1 = (unint64_t)v121;
      }
      while (v47 != v49);
      id v34 = v120;
      unint64_t v43 = (int *)v117;
    }
    v61._countAndFlagsBits = Array.description.getter();
    String.append(_:)(v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62._countAndFlagsBits = 41;
    v62._object = (void *)0xE100000000000000;
    String.append(_:)(v62);
    uint64_t v63 = sub_1000BDAB0(v123, v124);
    swift_bridgeObjectRelease();
    uint64_t v64 = v114;
    *(void *)(v114 + 16) = v63;
    swift_release();
    uint64_t v65 = swift_allocBox();
    uint64_t v67 = v66;
    swift_bridgeObjectRetain();
    UUID.init()();
    uint64_t v68 = v43[5];
    uint64_t v69 = v43[6];
    *(void *)(v67 + v43[7]) = a1;
    *(unsigned char *)(v67 + v68) = 0;
    *(unsigned char *)(v67 + v69) = (v111 & 1) == 0;
    uint64_t v70 = v109;
    sub_1000C1CF0(v67, v109, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v104 + 56))(v70, 0, 1, v43);
    sub_1000C19B4(v70, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    id result = (id)sub_1000C1CF0(v67, (uint64_t)v113, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    unint64_t v71 = v108 - 1;
    if (__OFSUB__(v108, 1))
    {
      __break(1u);
LABEL_55:
      swift_bridgeObjectRetain();
      id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      os_log_t v72 = v119;
      goto LABEL_31;
    }
    unint64_t v111 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0) {
      goto LABEL_55;
    }
    os_log_t v72 = v119;
    if ((v71 & 0x8000000000000000) != 0) {
      break;
    }
    if (v71 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_57;
    }
    id v73 = *(id *)(a1 + 8 * v71 + 32);
LABEL_31:
    unint64_t v74 = v113;
    sub_1000C4FC0((uint64_t)v113, v73, 0);

    sub_1000C1DEC((uint64_t)v74, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    unsigned int v27 = (unsigned char *)swift_allocObject();
    *((void *)v27 + 2) = v34;
    *((void *)v27 + 3) = v65;
    *((void *)v27 + 4) = v64;
    uint64_t v75 = v64;
    uint64_t v76 = v112;
    *((void *)v27 + 5) = v112;
    *((void *)v27 + 6) = v72;
    uint64_t v77 = (unsigned char *)v65;
    uint64_t v78 = (uint64_t)v118;
    id v79 = v115;
    *((void *)v27 + 7) = v118;
    *((void *)v27 + 8) = v79;
    LODWORD(v113) = v110 & 1;
    v27[72] = v110 & 1;
    *((void *)v27 + 10) = a1;
    int v110 = v103 & 1;
    v27[88] = v103 & 1;
    unint64_t v123 = a1;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = _swiftEmptyArrayStorage;
    uint64_t v117 = v80;
    if (!v47)
    {
      swift_bridgeObjectRetain();
      unint64_t v121 = v34;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v72);
      uint64_t v87 = v72;
      uint64_t v120 = v79;
      swift_bridgeObjectRetain();
      uint64_t v88 = v121;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v87);
      unint64_t v121 = v120;
      sub_10022CD0C(_swiftEmptyArrayStorage, v88, (uint64_t)v77, v75, v76, v87, v78, v79, v113, a1, v110);
      swift_release();
      swift_release();
      id v89 = v121;
      char v24 = v34;
LABEL_45:
      swift_release();
      swift_release();
      swift_release();

      sub_1000A7258((uint64_t)v87);
      swift_release();
      swift_release();
      swift_release();
      return (id)swift_bridgeObjectRelease();
    }
    uint64_t v113 = v77;
    if (v116)
    {
      swift_bridgeObjectRetain_n();
      char v24 = v120;
      os_log_t v90 = v120;
      a5 = (int)v113;
      swift_retain();
      uint64_t isa = v114;
      swift_retain();
      uint64_t v13 = v112;
      swift_retain();
      sub_1000C0640((uint64_t)v119);
      id v91 = v115;
      swift_bridgeObjectRetain();
      uint64_t v92 = v90;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v119);
      id v93 = v91;
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      if (!result) {
        goto LABEL_60;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = (unsigned char *)_CocoaArrayWrapper.endIndex.getter();
      id result = (id)swift_bridgeObjectRelease();
      if (!v19) {
        goto LABEL_61;
      }
    }
    else
    {
      uint64_t v81 = (uint64_t)v72;
      unint64_t v82 = a1;
      uint64_t v83 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      char v24 = v120;
      id v84 = v115;
      uint64_t v13 = v112;
      if (!v83) {
        goto LABEL_59;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = v24;
      a5 = (int)v113;
      swift_retain();
      uint64_t isa = v114;
      swift_retain();
      swift_retain();
      sub_1000C0640(v81);
      id v85 = v84;
      swift_bridgeObjectRetain();
      uint64_t v86 = v19;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000C0640(v81);
      id result = v85;
      a1 = v82;
    }
    if (v111)
    {
      uint64_t v94 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_62;
      }
      uint64_t v94 = *(id *)(a1 + 32);
    }
    uint64_t v9 = v94;
    uint64_t v12 = v118;
    if (v116)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = (unsigned char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v19)
      {
LABEL_44:
        sub_100516634(0, 1);
        uint64_t v95 = v123;
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = v117;
        *(void *)(v96 + 24) = v24;
        *(void *)(v96 + 32) = v95;
        *(unsigned char *)(v96 + 40) = 1;
        *(void *)(v96 + 48) = sub_10023EBD0;
        *(void *)(v96 + 56) = v27;
        uint64_t v97 = v24;
        swift_retain();
        swift_retain();
        sub_10006294C(v9, 1, v97, (char *)sub_10023E980, v96);
        swift_release();
        swift_release();

        swift_release();
        uint64_t v87 = v119;
        id v89 = v115;
        goto LABEL_45;
      }
    }
    else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_44;
    }
    __break(1u);
LABEL_48:
    uint64_t v98 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((a1 & 0x8000000000000000) != 0) {
      uint64_t v98 = a1;
    }
    uint64_t v114 = v98;
    uint64_t v109 = v25;
    swift_bridgeObjectRetain();
    uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v28 = v108;
    uint64_t v25 = v109;
    if (!v108) {
      goto LABEL_51;
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

unint64_t sub_10022549C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_17;
  }
  unint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    do
    {
      while (__OFSUB__(v6--, 1))
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        swift_bridgeObjectRetain();
        unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v6) {
          return v6;
        }
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_9;
      }
      if ((v6 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if (v6 >= *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_16;
      }
      id v8 = *(id *)(a3 + 32 + 8 * v6);
LABEL_9:
      uint64_t v9 = v8;
      id v12 = v8;
      char v10 = a1(&v12);
    }
    while (!v3 && (v10 & 1) == 0 && v6);
  }
  return v6;
}

BOOL sub_1002255D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1002255E8()
{
  _StringGuts.grow(_:)(81);
  v1._countAndFlagsBits = 0xD000000000000017;
  v1._object = (void *)0x80000001005DE630;
  String.append(_:)(v1);
  type metadata accessor for UUID();
  sub_100076EA4((unint64_t *)&unk_10070ACF0, (void (*)(uint64_t))&type metadata accessor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x7974202020200A2CLL;
  v3._object = (void *)0xEB000000003A6570;
  String.append(_:)(v3);
  uint64_t v4 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  _print_unlocked<A, B>(_:_:)();
  v5._countAndFlagsBits = 0xD000000000000015;
  v5._object = (void *)0x80000001005DE650;
  String.append(_:)(v5);
  if (*(unsigned char *)(v0 + *(int *)(v4 + 24))) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + *(int *)(v4 + 24))) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001005DE670;
  v9._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v9);
  unint64_t v10 = *(void *)(v0 + *(int *)(v4 + 28));
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_9;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    v24._countAndFlagsBits = Array.description.getter();
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 10506;
    v25._object = (void *)0xE200000000000000;
    String.append(_:)(v25);
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  if (!v11) {
    goto LABEL_22;
  }
LABEL_9:
  uint64_t result = sub_100190BE0(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = 0;
    do
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(v10 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      id v16 = [v14 displayName];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;
      }
      else
      {

        uint64_t v18 = 0;
        uint64_t v20 = 0;
      }
      unint64_t v22 = _swiftEmptyArrayStorage[2];
      unint64_t v21 = _swiftEmptyArrayStorage[3];
      if (v22 >= v21 >> 1) {
        sub_100190BE0(v21 > 1, v22 + 1, 1);
      }
      ++v13;
      _swiftEmptyArrayStorage[2] = v22 + 1;
      uint64_t v23 = &_swiftEmptyArrayStorage[2 * v22];
      v23[4] = v18;
      v23[5] = v20;
    }
    while (v11 != v13);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t DOCHierarchyController.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100225A50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  Swift::String v3 = (void *)(*a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100225AA8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return DOCHierarchyController.locations.setter(v0);
}

uint64_t sub_100225AD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000BB4AC();
  *a1 = result;
  return result;
}

void (*DOCHierarchyController.locations.modify(void *a1))(uint64_t a1, char a2)
{
  Swift::String v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  v3[3] = *v4;
  swift_bridgeObjectRetain();
  return sub_100225B88;
}

void sub_100225B88(uint64_t a1, char a2)
{
  Swift::String v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    DOCHierarchyController.locations.setter(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    DOCHierarchyController.locations.setter(v3);
  }

  free(v2);
}

void *sub_100225C60()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000BB4AC();
  if (!v3) {
    return (void *)v2;
  }
  uint64_t v4 = (void *)v3;
  unint64_t v5 = *v1;
  swift_bridgeObjectRetain();
  sub_1001B5F94((uint64_t)v4, v5);
  unint64_t v7 = v6;
  char v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {

    return (void *)v2;
  }
  uint64_t v10 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    id v12 = *(id *)(v10 + 32);
  }
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  id v14 = v4;
  id v15 = v13;
  char v16 = static NSObject.== infix(_:_:)();

  if (v16)
  {

    return (void *)v2;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  unint64_t v17 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100083FF8(v7, v17, (unint64_t *)&unk_1007085C0);
  uint64_t v2 = v18;
  uint64_t v1 = v19;
  unint64_t v7 = v20;
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_15:
    uint64_t v2 = (uint64_t)sub_1002F507C(v10, v2, (uint64_t)v1, v7);

    swift_unknownObjectRelease();
    return (void *)v2;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  unint64_t v21 = (void *)swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    unint64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = v21[2];
  swift_release();
  if (__OFSUB__(v7 >> 1, v1)) {
    goto LABEL_25;
  }
  if (v22 != (v7 >> 1) - (void)v1)
  {
LABEL_26:
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  uint64_t v2 = swift_dynamicCastClass();

  swift_unknownObjectRelease();
  if (!v2)
  {
    swift_unknownObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v2;
}

uint64_t sub_100225EFC(uint64_t a1)
{
  uint64_t v39 = a1;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070B6C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070D810);
  __chkstk_darwin(v7);
  char v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70(&qword_10070B6D0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v38 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v32 - v14;
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation;
  swift_beginAccess();
  uint64_t updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  uint64_t v34 = *(void *)(updated - 8);
  uint64_t v35 = updated;
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 48))(v18, 1);
  uint64_t v36 = v18;
  if (v20)
  {
    unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v17, 1, 1, v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v39, v4);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v22(v17, v18, v4);
    unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v17, 0, 1, v4);
    v22(v15, v39, v4);
  }
  v21(v15, 0, 1, v4);
  uint64_t v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000CBC00((uint64_t)v17, (uint64_t)v9, &qword_10070B6D0);
  sub_1000CBC00((uint64_t)v15, v23, &qword_10070B6D0);
  Swift::String v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v9, 1, v4) != 1)
  {
    uint64_t v25 = v38;
    sub_1000CBC00((uint64_t)v9, v38, &qword_10070B6D0);
    if (v24(v23, 1, v4) != 1)
    {
      unsigned int v27 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v23, v4);
      sub_100076EA4(&qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      v29(v27, v4);
      sub_1000CBBA4((uint64_t)v15, &qword_10070B6D0);
      sub_1000CBBA4((uint64_t)v17, &qword_10070B6D0);
      v29((char *)v25, v4);
      uint64_t result = sub_1000CBBA4((uint64_t)v9, &qword_10070B6D0);
      if ((v28 & 1) == 0) {
        return result;
      }
      goto LABEL_11;
    }
    sub_1000CBBA4((uint64_t)v15, &qword_10070B6D0);
    sub_1000CBBA4((uint64_t)v17, &qword_10070B6D0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v25, v4);
    return sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10070D810);
  }
  sub_1000CBBA4((uint64_t)v15, &qword_10070B6D0);
  sub_1000CBBA4((uint64_t)v17, &qword_10070B6D0);
  if (v24(v23, 1, v4) != 1) {
    return sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10070D810);
  }
  sub_1000CBBA4((uint64_t)v9, &qword_10070B6D0);
LABEL_11:
  uint64_t v30 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, 1, 1, v35);
  uint64_t v31 = v36;
  swift_beginAccess();
  sub_10023E834(v30, v31);
  return swift_endAccess();
}

void sub_1002265D4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  if (!a1)
  {
    sub_1000460B0(a3, 0);
    a4(0);
    return;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    if (a9)
    {
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      id v19 = a1;
      int v20 = (void *)swift_dynamicCastClass();
      if (!v20)
      {
        swift_unknownObjectRelease();
        int v20 = _swiftEmptyArrayStorage;
      }
      uint64_t v21 = v20[2];
      swift_release();
      if (__OFSUB__(a9 >> 1, a8))
      {
        __break(1u);
      }
      else if (v21 == (a9 >> 1) - a8)
      {
        if (!swift_dynamicCastClass()) {
          swift_unknownObjectRelease();
        }
        goto LABEL_14;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      id v17 = a1;
      swift_unknownObjectRetain();
    }
    sub_1002F507C(a6, a7, a8, a9);
LABEL_14:
    swift_unknownObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    id v23 = a1;
    [v16 hierarchyController:a2 didReveal:isa source:v23];

    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  id v18 = a1;
LABEL_15:
  sub_1000460B0(a3, 0);
  a4(1);
}

uint64_t sub_1002268E0(uint64_t a1)
{
  return sub_1000C19B4(a1, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
}

uint64_t sub_100226924()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v15[-v5];
  uint64_t v7 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v7, (uint64_t)v4, (uint64_t *)&unk_10070B640);
  uint64_t v8 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v4, 1, v8) == 1)
  {
    uint64_t v11 = v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    sub_1000CBC00(v11, (uint64_t)v6, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v4, (uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  if (v10(v6, 1, v8) == 1)
  {
    sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_10070B640);
    char v12 = 0;
  }
  else
  {
    char v13 = v6[*(int *)(v8 + 24)];
    sub_1000C1DEC((uint64_t)v6, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    char v12 = v13 ^ 1;
  }
  return v12 & 1;
}

void sub_100226B4C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100226BA0();
  }
}

uint64_t sub_100226BA0()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000562C0(v2);
  char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
  swift_release();
  if (valid)
  {
    UUID.init()();
    uint64_t v6 = (int *)type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    v4[v6[5]] = 0;
    v4[v6[6]] = 0;
    *(void *)&v4[v6[7]] = _swiftEmptyArrayStorage;
    (*(void (**)(char *, void, uint64_t, int *))(*((void *)v6 - 1) + 56))(v4, 0, 1, v6);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  }
  uint64_t v8 = sub_1000C19B4((uint64_t)v4, &OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation);
  sub_1000562C0(v8);
  char v9 = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
  uint64_t result = swift_release();
  if ((v9 & 1) == 0)
  {
    uint64_t v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock);
    char v12 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock);
    if (v12)
    {
      uint64_t v13 = swift_retain();
      v12(v13);
      sub_1000A7258((uint64_t)v12);
      uint64_t v14 = *v11;
      *uint64_t v11 = 0;
      v11[1] = 0;
      return sub_1000A7258(v14);
    }
  }
  return result;
}

uint64_t sub_100226ECC(uint64_t a1)
{
  _StringGuts.grow(_:)(52);
  v2._object = (void *)0x80000001005DF1F0;
  v2._countAndFlagsBits = 0xD000000000000032;
  String.append(_:)(v2);
  sub_100223760(a1);
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  String.append(_:)(v3);
  return 0;
}

void sub_100226F50(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    char v5 = ~*(unsigned char *)(a2
                   + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active);
    __chkstk_darwin(Strong);
    DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)();
    if ((v5 & 1) == 0) {
      sub_1000460B0(a2, 1);
    }
  }
}

uint64_t sub_100227040(uint64_t a1, uint64_t a2, void *a3)
{
  _StringGuts.grow(_:)(64);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  String.append(_:)(v6);
  sub_100223760(a1);
  v7._object = (void *)0x80000001005DF230;
  v7._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v7);
  v8._countAndFlagsBits = a2;
  v8._object = a3;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0xD000000000000026;
  v9._object = (void *)0x80000001005DF250;
  String.append(_:)(v9);
  return 0;
}

unint64_t sub_100227108()
{
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason);
  Swift::String v2 = *(void **)(v0
                + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_reason
                + 8);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000017;
}

uint64_t sub_1002271B4()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100227268()
{
  return static UUID.== infix(_:_:)();
}

unint64_t sub_100227284()
{
  return sub_100227108();
}

id DOCHierarchyController.sourceObserver.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
}

uint64_t sub_1002272B8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___userDefaultsObservedContent);
  }
  else
  {
    _s27UserDefaultsObservedContentCMa();
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = _swiftEmptyArrayStorage;
    *(unsigned char *)(v2 + 32) = 1;
    *(void *)(v2 + 48) = 0;
    *(void *)(v2 + 56) = 0;
    *(void *)(v2 + 40) = 0;
    *(unsigned char *)(v2 + 64) = 0;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

char *DOCHierarchyController.__allocating_init(configuration:sourceObserver:minParentLocations:)(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  id v8 = [self defaultManager];
  id v9 = [self sharedStore];
  id v10 = objc_allocWithZone(v3);
  uint64_t v11 = DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(a1, a2, a3, v8, v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v11;
}

char *DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = [self defaultManager];
  id v8 = [self sharedStore];
  id v9 = objc_allocWithZone(ObjectType);
  id v10 = DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(a1, a2, a3, v7, v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

char *DOCHierarchyController.__allocating_init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v11 = objc_allocWithZone(v5);
  return DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(a1, a2, a3, a4, a5);
}

uint64_t sub_100227644()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id DOCHierarchyController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions];
  swift_beginAccess();
  unint64_t v2 = *(void *)v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = (uint64_t)result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (!v3) {
      goto LABEL_12;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v7 = *(void *)(v2 + 8 * i + 32);
      uint64_t v6 = swift_retain();
    }
    char v8 = ~*(unsigned char *)(v7
                   + OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active);
    __chkstk_darwin(v6);
    DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)();
    if ((v8 & 1) == 0) {
      sub_1000460B0(v7, 1);
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  if (*(void *)&v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserverContext]) {
    [*(id *)&v0[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver] removeSubscriberForToken:];
  }
  id v9 = [self defaultCenter];
  [v9 removeObserver:v0];

  v11.receiver = v0;
  v11.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1002278A8()
{
  return sub_100227040(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

id DOCHierarchyController.lastUsedOpenSaveLocation.getter()
{
  if (![*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration) isPickerUI])return 0; {

  }
  return sub_100236C2C();
}

void sub_100227AD4(void *a1, id a2, void *a3, void *a4, int a5)
{
  int v54 = a5;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = __chkstk_darwin(v9);
  char v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v53 = v15;
  if (a1) {
    id v16 = a1;
  }
  else {
    id v16 = [self defaultLocation];
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = v16;
  unint64_t v55 = inited;
  specialized Array._endMutation()();
  unint64_t v18 = v55;
  id v19 = v16;
  id v20 = a1;
  unint64_t v21 = sub_1000C0650(v18, 0);
  id v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = (void *)v21;
  swift_bridgeObjectRelease();
  if (v26)
  {

    if (v25) {
      unsigned int v27 = v25;
    }
    else {
      unsigned int v27 = v26;
    }
    if ([v27 effectiveTabSwitcherTab] == a2
      && [v26 canBeRestored]
      && ([a3 allowsDisplaying:v26] & 1) != 0)
    {
      uint64_t v52 = v9;
      id v28 = v26;
      static Logger.UI.getter();
      id v29 = a4;
      id v30 = v28;
      uint64_t v31 = v29;
      uint64_t v32 = v30;
      unint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      int v35 = v34;
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v36 = swift_slowAlloc();
        LODWORD(v49) = v35;
        uint64_t v37 = v36;
        uint64_t v38 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 138412546;
        uint64_t v48 = v26;
        uint64_t v50 = v23;
        unint64_t v51 = v25;
        unint64_t v55 = (unint64_t)v31;
        uint64_t v39 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v38 = v31;

        *(_WORD *)(v37 + 12) = 2112;
        unint64_t v55 = (unint64_t)v32;
        id v40 = v32;
        uint64_t v25 = v51;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v38[1] = v48;

        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v49, "2.2.2 Will use getSaveLocation's suggested location (browser: %@, location: %@)", (uint8_t *)v37, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        unint64_t v33 = v31;
      }

      (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v52);
      sub_1000BCD84(v32, 0, v54 & 1, 0, 1, 0, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      static Logger.UI.getter();
      int v41 = a4;
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v42, v43))
      {
        unint64_t v51 = v25;
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 138412290;
        uint64_t v50 = v14;
        unint64_t v55 = (unint64_t)v41;
        id v45 = v41;
        uint64_t v52 = v9;
        uint64_t v46 = v45;
        uint64_t v14 = v50;
        uint64_t v25 = v51;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v49 = v41;

        uint64_t v9 = v52;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "2.2.1 Location from getSaveLocation isn't appropriate, falling back to standard restore (browse: %@)", v44, 0xCu);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v42 = v41;
      }

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v9);
      sub_10006C62C(v54 & 1);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t DOCHierarchyController.reset(with:effectiveRootLocation:animated:completionHandler:)(void *a1, void *a2, int a3, void (*a4)(void), uint64_t a5)
{
  return sub_1000BCD84(a1, a2, a3, 1, 0, a4, a5);
}

void sub_100228200(void *a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  sub_1000562C0();
  char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
  swift_release();
  if (valid)
  {
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = a1;
    *(unsigned char *)(v12 + 32) = a2 & 1;
    *(void *)(v12 + 40) = a3;
    *(void *)(v12 + 48) = a4;
    uint64_t v13 = (void (**)())(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock);
    uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_delayedLoadingBlock);
    *uint64_t v13 = sub_10023F3B8;
    v13[1] = (void (*)())v12;
    uint64_t v15 = a1;
    sub_1000C0640((uint64_t)a3);
    sub_1000A7258(v14);
  }
  else
  {
    id v16 = [a1 fileProviderItem];
    if (v16)
    {
      id v17 = v16;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      unint64_t v18 = (void *)DOCNode.sourceIdentifier.getter();

      id v20 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v18 node:0];
      sub_1000BCD84(a1, v20, a2 & 1, 1, 0, a3, a4);
    }
    else
    {
      id v19 = [a1 fileProviderItem];

      if (!v19)
      {
        sub_1000BCD84(a1, a1, a2 & 1, 1, 0, a3, a4);
      }
    }
  }
}

void sub_100228444(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    sub_100228200(a2, a3 & 1, a4, a5);
  }
}

unint64_t sub_1002285A4()
{
  return 0xD000000000000040;
}

uint64_t sub_1002285C0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v26 - v8;
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(103);
  uint64_t v29 = v27;
  unint64_t v30 = v28;
  v10._countAndFlagsBits = 0xD00000000000004DLL;
  v10._object = (void *)0x80000001005DF280;
  String.append(_:)(v10);
  id v11 = [a1 description];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._object = (void *)0x80000001005DF2D0;
  v16._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v16);
  uint64_t v17 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v17, (uint64_t)v7, (uint64_t *)&unk_10070B640);
  uint64_t v18 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v19 = *(void *)(v18 - 8);
  id v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v7, 1, v18) == 1)
  {
    uint64_t v21 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    sub_1000CBC00(v21, (uint64_t)v9, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v7, (uint64_t)v9, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v9, 0, 1, v18);
  }
  if (v20(v9, 1, v18) == 1)
  {
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10070B640);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = *(void *)&v9[*(int *)(v18 + 28)];
    swift_bridgeObjectRetain();
    sub_1000C1DEC((uint64_t)v9, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  v26[1] = v22;
  sub_1000CBE70(&qword_10070B720);
  v23._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 41;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  return v29;
}

void sub_1002288CC(void *a1, int a2, void (*a3)(void), void *a4)
{
  uint64_t v75 = (uint64_t (*)(uint64_t))a3;
  uint64_t v76 = a4;
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  Swift::String v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v73 = (uint64_t)&v72 - v11;
  id v12 = [a1 fileProviderItem];
  uint64_t v77 = a1;
  int v74 = a2;
  os_log_t v72 = v10;
  if (v12)
  {
    uint64_t v13 = v12;
    id v80 = [v12 parentItemID];
  }
  else
  {
    id v80 = 0;
  }
  uint64_t v78 = v4;
  unint64_t v14 = (unint64_t)sub_100225C60();
  unint64_t v15 = v14;
  if (v14 >> 62) {
    goto LABEL_24;
  }
  uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v17 = v80;
  id v18 = v80;
  swift_bridgeObjectRetain();
  for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v19 = 4;
    while (1)
    {
      id v20 = (v15 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v15 + 8 * v19);
      uint64_t v21 = v20;
      uint64_t v22 = v19 - 3;
      if (__OFADD__(v19 - 4, 1)) {
        break;
      }
      id v23 = [v20 fileProviderItem];
      if (v23
        && (Swift::String v24 = v23, v25 = [v23 itemID], v24, v25))
      {
        if (v17)
        {
          uint64_t v79 = sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
          id v26 = v17;
          id v27 = v25;
          char v28 = static NSObject.== infix(_:_:)();

          if (v28)
          {

LABEL_22:
            swift_bridgeObjectRelease_n();
            unint64_t v30 = v77;
            uint64_t v29 = v78;
            goto LABEL_41;
          }
          id v25 = v21;
          id v17 = v80;
        }
        else
        {
        }
      }
      else
      {
        if (!v17) {
          goto LABEL_22;
        }
        id v25 = v21;
      }

      ++v19;
      if (v22 == v16)
      {

        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    id v17 = v80;
    id v31 = v80;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();

LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v29 = v78;
  unint64_t v32 = (unint64_t)sub_100225C60();
  unint64_t v33 = v32;
  if (!(v32 >> 62))
  {
    unint64_t v30 = v77;
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_28;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t v30 = v77;
  if (!v44) {
    goto LABEL_39;
  }
LABEL_28:
  if ((v33 & 0xC000000000000001) != 0)
  {
    id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_31;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v34 = *(id *)(v33 + 32);
LABEL_31:
    uint64_t v21 = v34;
    swift_bridgeObjectRelease();
    id v35 = [v21 sourceIdentifier];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
    if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
LABEL_37:

LABEL_40:
        uint64_t v21 = 0;
LABEL_41:
        id v45 = (void *)(v29 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
        swift_beginAccess();
        if (!(*v45 >> 62)
          || (swift_bridgeObjectRetain(),
              uint64_t v71 = _CocoaArrayWrapper.endIndex.getter(),
              swift_bridgeObjectRelease(),
              v71 >= 0))
        {
          if (v21)
          {
            uint64_t v46 = v29 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
            swift_beginAccess();
            uint64_t v47 = (uint64_t)v72;
            sub_1000CBC00(v46, (uint64_t)v72, (uint64_t *)&unk_10070B640);
            uint64_t v48 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
            uint64_t v49 = *(void *)(v48 - 8);
            uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
            if (v50(v47, 1, v48) == 1)
            {
              uint64_t v51 = v29 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
              swift_beginAccess();
              uint64_t v52 = v51;
              uint64_t v53 = v73;
              sub_1000CBC00(v52, v73, (uint64_t *)&unk_10070B640);
              id v54 = v21;
              uint64_t v55 = v53;
              sub_1000CBBA4(v47, (uint64_t *)&unk_10070B640);
            }
            else
            {
              uint64_t v55 = v73;
              sub_1000C194C(v47, v73, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v55, 0, 1, v48);
              id v56 = v21;
            }
            if (v50(v55, 1, v48) == 1)
            {
              sub_1000CBBA4(v55, (uint64_t *)&unk_10070B640);
              goto LABEL_51;
            }
            char v57 = *(unsigned char *)(v55 + *(int *)(v48 + 24));
            sub_1000C1DEC(v55, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
            if ((v57 & 1) == 0)
            {
LABEL_51:
              id v58 = [v21 fileProviderItem:v72];
              if (v58)
              {
                unint64_t v59 = v58;
                id v60 = [v58 itemID];
              }
              else
              {
                id v60 = 0;
              }
              id v61 = [v30 fileProviderItem];
              if (v61)
              {
                Swift::String v62 = v61;
                id v63 = [v61 itemID];

                if (v60)
                {
                  if (v63)
                  {
                    sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
                    id v64 = v60;
                    char v65 = static NSObject.== infix(_:_:)();

                    if (v65) {
                      goto LABEL_64;
                    }
                    goto LABEL_63;
                  }
                  goto LABEL_60;
                }
                if (v63) {
                  goto LABEL_62;
                }
              }
              else if (v60)
              {
LABEL_60:
                id v63 = v60;
LABEL_62:

LABEL_63:
                sub_1000CBE70((uint64_t *)&unk_1007084E0);
                uint64_t v66 = swift_allocObject();
                *(_OWORD *)(v66 + 16) = xmmword_1005A04F0;
                *(void *)(v66 + 32) = v30;
                unint64_t v81 = v66;
                specialized Array._endMutation()();
                unint64_t v67 = v81;
                id v68 = v21;
                uint64_t v69 = v30;
                sub_100229058(v67, v21, 0, 1, 1, 0, v75, v76);
                swift_bridgeObjectRelease();

                goto LABEL_65;
              }
LABEL_64:
              sub_100228200(v30, v74 & 1, (void (*)(void))v75, (uint64_t)v76);

              goto LABEL_65;
            }
          }
        }
        sub_100228200(v30, v74 & 1, (void (*)(void))v75, (uint64_t)v76);
LABEL_65:
        id v70 = v80;

        return;
      }
    }
    id v41 = [v30 fileProviderItem:v72];
    if (v41)
    {
      uint64_t v42 = v41;
      unsigned __int8 v43 = [v41 isTopLevelSharedItem];

      if (v43) {
        goto LABEL_41;
      }
    }
    goto LABEL_37;
  }
  __break(1u);
}

uint64_t sub_100229058(unint64_t a1, void *a2, int a3, int a4, uint64_t a5, int a6, uint64_t (*a7)(uint64_t), void *a8)
{
  int64_t v9 = (int64_t)v8;
  uint64_t v105 = a8;
  uint64_t v107 = a7;
  int v100 = a6;
  int v99 = a4;
  int v101 = a3;
  id v104 = a2;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v102 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v96 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v96 - v18;
  uint64_t v20 = swift_allocObject();
  uint64_t v106 = v20;
  *(void *)(v20 + 16) = 0;
  int v103 = (void *)(v20 + 16);
  uint64_t v21 = (char *)(v9 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation);
  *(void *)uint64_t v21 = a5;
  v21[8] = 0;
  uint64_t v22 = v9 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v22, (uint64_t)v17, (uint64_t *)&unk_10070B640);
  uint64_t v23 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  Swift::String v24 = *(void **)(v23 - 8);
  id v25 = (uint64_t (*)(char *, uint64_t, uint64_t))v24[6];
  int v26 = v25(v17, 1, v23);
  unint64_t v109 = a1;
  id v27 = v24;
  if (v26 == 1)
  {
    uint64_t v28 = v9 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    uint64_t v29 = v28;
    Swift::String v24 = v27;
    sub_1000CBC00(v29, (uint64_t)v19, (uint64_t *)&unk_10070B640);
    a1 = v109;
    sub_1000CBBA4((uint64_t)v17, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v17, (uint64_t)v19, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    ((void (*)(char *, void, uint64_t, uint64_t))v24[7])(v19, 0, 1, v23);
  }
  if (v25(v19, 1, v23) == 1) {
    sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B640);
  }
  else {
    sub_1000C1DEC((uint64_t)v19, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
    *(void *)uint64_t v21 = 0;
    v21[8] = 1;
    unsigned __int8 v43 = v103;
    uint64_t v44 = swift_beginAccess();
    if (*v43)
    {
      uint64_t v45 = swift_retain();
      sub_1000460B0(v45, 0);
      uint64_t v44 = swift_release();
    }
    if (v107) {
      v107(v44);
    }
    return swift_release();
  }
  uint64_t v111 = 0;
  uint64_t v112 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease();
  uint64_t v111 = 0xD00000000000001DLL;
  uint64_t v112 = 0x80000001005DEE60;
  unint64_t v98 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v108 = (id)v30;
  uint64_t v97 = (int *)v23;
  if (v30)
  {
    int v110 = _swiftEmptyArrayStorage;
    sub_100059E2C(0, v30 & ~(v30 >> 63), 0);
    if (v30 < 0) {
      goto LABEL_56;
    }
    uint64_t v96 = (id *)v9;
    id v31 = 0;
    unint64_t v32 = v110;
    unint64_t v33 = a1 & 0xC000000000000001;
    do
    {
      if (v33) {
        id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v34 = *(id *)(a1 + 8 * (void)v31 + 32);
      }
      id v35 = v34;
      id v36 = [v34 shortDescription:v96];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      int v110 = v32;
      unint64_t v41 = v32[2];
      unint64_t v40 = v32[3];
      if (v41 >= v40 >> 1)
      {
        sub_100059E2C(v40 > 1, v41 + 1, 1);
        unint64_t v32 = v110;
      }
      id v31 = (char *)v31 + 1;
      v32[2] = v41 + 1;
      uint64_t v42 = &v32[2 * v41];
      unsigned char v42[4] = v37;
      v42[5] = v39;
      a1 = v109;
    }
    while (v108 != v31);
    Swift::String v24 = v27;
    int64_t v9 = (int64_t)v96;
  }
  v46._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47._countAndFlagsBits = 41;
  v47._object = (void *)0xE100000000000000;
  String.append(_:)(v47);
  uint64_t v48 = sub_1000BDAB0(v111, v112);
  swift_bridgeObjectRelease();
  *int v103 = v48;
  swift_release();
  uint64_t v49 = v97;
  uint64_t v50 = swift_allocBox();
  uint64_t v52 = v51;
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v53 = v49[5];
  uint64_t v54 = v49[6];
  *(void *)(v52 + v49[7]) = a1;
  *(unsigned char *)(v52 + v53) = 1;
  *(unsigned char *)(v52 + v54) = (v101 & 1) == 0;
  id v55 = v102;
  sub_1000C1CF0(v52, (uint64_t)v102, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  ((void (*)(id, void, uint64_t, int *))v24[7])(v55, 0, 1, v49);
  sub_1000C19B4((uint64_t)v55, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  uint64_t v30 = v9 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations;
  swift_beginAccess();
  if (*(void *)v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v58 < 2) {
      goto LABEL_26;
    }
LABEL_29:
    id v59 = v104;
    if (*(void *)v30 >> 62) {
      goto LABEL_59;
    }
    uint64_t v60 = *(void *)((*(void *)v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v61 = v60 - 2;
    if (__OFSUB__(v60, 2)) {
      goto LABEL_61;
    }
    goto LABEL_31;
  }
  if (*(uint64_t *)((*(void *)v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
    goto LABEL_29;
  }
LABEL_26:
  char v56 = 0;
  char v57 = v99;
  while (1)
  {
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v9;
    *(void *)(v30 + 24) = v50;
    uint64_t v68 = (uint64_t)v105;
    uint64_t v67 = v106;
    uint64_t v69 = (void *)v9;
    id v70 = v107;
    *(void *)(v30 + 32) = v106;
    *(void *)(v30 + 40) = v70;
    *(void *)(v30 + 48) = v68;
    int v71 = v57 & 1;
    *(unsigned char *)(v30 + 56) = v57 & 1;
    int v72 = v56 & 1;
    *(unsigned char *)(v30 + 57) = v72;
    char v73 = v100 & 1;
    *(unsigned char *)(v30 + 58) = v100 & 1;
    id v74 = v104;
    *(void *)(v30 + 64) = v104;
    int v110 = (void *)v109;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = _swiftEmptyArrayStorage;
    int v103 = (void *)result;
    if (!v108)
    {
      id v80 = v74;
      LODWORD(v109) = v71;
      id v81 = v80;
      id v102 = v69;
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v70);
      id v108 = v81;
      unint64_t v82 = v102;
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v70);
      sub_10022B918((uint64_t)_swiftEmptyArrayStorage, v82, v50, v67, v70, v68, v109, v72, v73, v74);
      swift_release();
      swift_release();
      id v83 = v108;
      goto LABEL_52;
    }
    id v108 = (id)v50;
    if (v98)
    {
      int64_t v9 = v109;
      id v84 = v104;
      id v27 = v69;
      id v59 = v69;
      uint64_t v50 = (uint64_t)v108;
      swift_retain();
      swift_retain();
      id v85 = v107;
      sub_1000C0640((uint64_t)v107);
      swift_bridgeObjectRetain();
      id v86 = v84;
      id v87 = v59;
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v85);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (!result) {
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v88) {
        goto LABEL_67;
      }
    }
    else
    {
      int64_t v9 = v109;
      if (!*(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_65;
      }
      id v27 = v69;
      id v75 = v104;
      id v76 = v69;
      uint64_t v50 = (uint64_t)v108;
      swift_retain();
      swift_retain();
      uint64_t v77 = v107;
      id v59 = v105;
      sub_1000C0640((uint64_t)v107);
      swift_bridgeObjectRetain();
      id v78 = v75;
      id v79 = v76;
      swift_retain();
      swift_retain();
      sub_1000C0640((uint64_t)v77);
    }
    if ((v9 & 0xC000000000000001) != 0) {
      goto LABEL_57;
    }
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v61 = v95 - 2;
    if (__OFSUB__(v95, 2))
    {
LABEL_61:
      __break(1u);
LABEL_62:
      id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_35;
    }
LABEL_31:
    uint64_t result = swift_beginAccess();
    uint64_t v63 = *(void *)v30;
    if ((*(void *)v30 & 0xC000000000000001) != 0) {
      goto LABEL_62;
    }
    if ((v61 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      return result;
    }
    if (v61 >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_64;
    }
    id v64 = *(id *)(v63 + 8 * v61 + 32);
LABEL_35:
    char v65 = v64;
    swift_endAccess();
    if (v59)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      id v66 = v59;
      char v56 = static NSObject.== infix(_:_:)();
    }
    else
    {
      char v56 = 0;
    }
    char v57 = v99;
  }
  for (uint64_t i = *(id *)(v9 + 32); ; uint64_t i = specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    os_log_t v90 = i;
    if (v98) {
      break;
    }
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_51;
    }
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    ;
  }
  swift_bridgeObjectRetain();
  uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v94) {
    goto LABEL_55;
  }
LABEL_51:
  sub_100516634(0, 1);
  id v91 = v110;
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = v103;
  *(void *)(v92 + 24) = v27;
  *(void *)(v92 + 32) = v91;
  *(unsigned char *)(v92 + 40) = 1;
  *(void *)(v92 + 48) = sub_10023E938;
  *(void *)(v92 + 56) = v30;
  id v93 = v27;
  swift_retain();
  swift_retain();
  sub_10006294C(v90, 1, v93, (char *)sub_10023E980, v92);
  swift_release();
  swift_release();

  swift_release();
  uint64_t v69 = v27;
  id v70 = v107;
  id v83 = v104;
LABEL_52:
  swift_release();
  swift_release();

  sub_1000A7258((uint64_t)v70);
  swift_release();

  return swift_release();
}

uint64_t sub_100229C68()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1000C19B4((uint64_t)v4, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  uint64_t v9 = v1;
  swift_getKeyPath();
  _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate);
  *(void *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate) = 0;

  uint64_t v9 = v1;
  swift_getKeyPath();
  _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
  return sub_1000C21E8((unint64_t)_swiftEmptyArrayStorage, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
}

unint64_t sub_100229DF8()
{
  return 0xD000000000000018;
}

unint64_t sub_100229E14(void *a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong hierarchyController:v4 willAppend:a2 animated:a3 & 1];
    swift_unknownObjectRelease();
  }
  LODWORD(v43) = a3;
  uint64_t v13 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if ((unint64_t)*v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    if (v15)
    {
LABEL_5:
      unint64_t result = v15 - 1;
      if (__OFSUB__(v15, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v44 = v11;
        if ((v14 & 0xC000000000000001) == 0)
        {
          if ((result & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (result < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v17 = *(id *)(v14 + 8 * result + 32);
LABEL_10:
            uint64_t v18 = v17;
            swift_bridgeObjectRelease();
            sub_10009E6C4(0, (unint64_t *)&qword_100706710);
            if (static NSObject.== infix(_:_:)())
            {
              uint64_t v41 = static DOCLog.UI.getter();
              v40[1] = static os_log_type_t.fault.getter();
              sub_1000CBE70((uint64_t *)&unk_100708800);
              uint64_t v19 = swift_allocObject();
              uint64_t v42 = v8;
              uint64_t v20 = (void *)v19;
              *(_OWORD *)(v19 + 16) = xmmword_10059B760;
              *(void *)(v19 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
              v20[8] = sub_1000C5A24((unint64_t *)&qword_10070B688, (unint64_t *)&unk_1007085C0);
              v20[4] = a1;
              uint64_t v21 = *v13;
              v20[12] = sub_1000CBE70(&qword_10070B6A0);
              v20[13] = sub_100073DF0(&qword_10070B6A8, &qword_10070B6A0);
              v20[9] = v21;
              id v22 = a1;
              swift_bridgeObjectRetain();
              uint64_t v23 = (void *)v41;
              os_log(_:dso:log:type:_:)();

              uint64_t v8 = v42;
              swift_bridgeObjectRelease();
            }
            else
            {
            }
            uint64_t v11 = v44;
            goto LABEL_16;
          }
          __break(1u);
          return result;
        }
      }
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v46 = *v13;
  id v24 = a1;
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  DOCHierarchyController.locations.setter(v46);
  id v25 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v25)
  {
    [v25 hierarchyController:v4 didAppend:a2 animated:v43 & 1];
    swift_unknownObjectRelease();
  }
  unint64_t result = (unint64_t)[self protectedAppsEnabled];
  if (result)
  {
    static Logger.UI.getter();
    id v26 = v24;
    id v27 = a2;
    id v28 = v26;
    id v29 = v27;
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    unint64_t v32 = (SEL *)&unk_1006E3000;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v43 = v9;
      uint64_t v34 = v33;
      id v35 = (void *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v46 = v41;
      *(_DWORD *)uint64_t v34 = 136315650;
      id v45 = (id)sub_10009B0E4(0xD00000000000002DLL, 0x80000001005DEB10, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2080;
      id v45 = [v28 node];
      sub_1000CBE70(&qword_100717520);
      uint64_t v36 = String.init<A>(describing:)();
      uint64_t v42 = v8;
      uint64_t v38 = sub_10009B0E4(v36, v37, &v46);
      uint64_t v44 = v11;
      id v45 = (id)v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2112;
      id v45 = v29;
      id v39 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v35 = v29;

      unint64_t v32 = (SEL *)&unk_1006E3000;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[PROTECTED APPS] %s start authentication for node: %s viewController: %@", (uint8_t *)v34, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    sub_1000C45B0((uint64_t)[v28 v32[510]], v29);
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_10022A484()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_10022A4A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5, unint64_t a6, uint64_t (*a7)(id))
{
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1000C19B4((uint64_t)v15, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  id v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  uint64_t v28 = *v17;
  swift_bridgeObjectRetain();
  sub_10022A79C(a2, (uint64_t (*)(void))sub_100516634, v18);
  DOCHierarchyController.locations.setter(v28);
  uint64_t v28 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000AEF70(a3);
  DOCHierarchyController.locations.setter(v28);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (void *)Strong;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v20 hierarchyController:a1 didReplaceTrailingLocations:a2 with:isa animated:a5 & 1];

    swift_unknownObjectRelease();
  }
  id v22 = [self protectedAppsEnabled];
  if (!v22) {
    return a7(v22);
  }
  if (!(a6 >> 62))
  {
    uint64_t v23 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_6;
    }
LABEL_13:
    id v22 = (id)swift_bridgeObjectRelease();
    return a7(v22);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v23 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_6:
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      if ((a6 & 0xC000000000000001) != 0)
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v26 = *(void *)(a6 + 8 * v25 + 32);
        swift_retain();
      }
      ++v25;
      uint64_t v28 = v26;
      sub_1000C4264(&v28, 0xD00000000000003ALL, 0x80000001005DEA60);
      swift_release();
    }
    while (v23 != v25);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10022A784(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_10022A79C(a1, (uint64_t (*)(void))sub_10051668C, a3);
}

uint64_t sub_10022A79C(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    a3 = a2;
    if (!(*v3 >> 62))
    {
      uint64_t v5 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v6 = -v5;
      if (!__OFSUB__(0, v5)) {
        goto LABEL_5;
      }
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  uint64_t v9 = a3;
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  a3 = v9;
  uint64_t v6 = -v5;
  if (__OFSUB__(0, v5)) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v7 = -v4;
  if (v6 <= 0 && v6 > v7) {
    goto LABEL_22;
  }
  uint64_t result = v5 - v4;
  if (__OFADD__(v5, v7)) {
    goto LABEL_20;
  }
  if (v5 < result)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }

  return a3();
}

void sub_10022A88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  if ((unint64_t)*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v9 = v13 - 1;
    if (!__OFSUB__(v13, 1)) {
      goto LABEL_3;
    }
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v8 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1)) {
    goto LABEL_11;
  }
LABEL_3:
  if (v9 < a2) {
    a2 = v9;
  }
  if (a2 >= 1)
  {
    uint64_t v10 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    sub_1000C19B4((uint64_t)v6, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    uint64_t v14 = *v7;
    swift_bridgeObjectRetain();
    sub_10022A79C(a2, (uint64_t (*)(void))sub_100516634, v11);
    DOCHierarchyController.locations.setter(v14);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong hierarchyController:a1 didPopLocations:a2 animated:0];
      swift_unknownObjectRelease();
    }
  }
  sub_1000C535C();
  sub_10022AA60();
}

void sub_10022AA60()
{
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v32 - 8);
  uint64_t v2 = __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v30 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = (void *)sub_1000BB4AC();
  swift_beginAccess();
  unint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1000C0650(v11, v10);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (!v12)
  {
    static Logger.DocumentManager.getter();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Not storing last visited location: invalid browsedState", v21, 2u);
      swift_slowDealloc();
    }

    id v22 = *(void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v23 = v4;
LABEL_16:
    v22(v23, v32);
    return;
  }
  id v17 = v16;
  id v18 = v12;
  swift_bridgeObjectRetain();
  sub_1000BB1A4(v18, v14, v16);
  if ([v18 canBeRestored])
  {
    if ([*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration) saveLastVisitedLocation])
    {
      sub_10001CD14(v18, v14, v16, 1);

      swift_bridgeObjectRelease();
      sub_10006DA60(v12, v14, v16);

      return;
    }
    static Logger.DocumentManager.getter();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      id v31 = v17;
      *(_WORD *)id v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Not storing last visited location: opted out.", v29, 2u);
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      sub_10006DA60(v12, v14, v16);
    }
    else
    {
      sub_10006DA60(v12, v14, v16);

      swift_bridgeObjectRelease();
    }
    id v22 = *(void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v23 = v9;
    goto LABEL_16;
  }
  static Logger.DocumentManager.getter();
  id v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    id v31 = v17;
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Not storing last visited location: not available, or cannot be restored.", v26, 2u);
    swift_slowDealloc();

    swift_bridgeObjectRelease();
    sub_10006DA60(v12, v14, v16);
  }
  else
  {
    sub_10006DA60(v12, v14, v16);

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v32);
}

uint64_t sub_10022AEE8(void *a1, int a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  int v72 = a3;
  uint64_t v71 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v71 - 8);
  uint64_t v10 = __chkstk_darwin(v71);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v62 - v13;
  uint64_t v15 = (unint64_t *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v16 = *v15;
  swift_bridgeObjectRetain();
  sub_1001B5F94((uint64_t)a1, v16);
  uint64_t v70 = v17;
  char v19 = v18;
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    static Logger.UI.getter();
    id v20 = a1;
    uint64_t v21 = Logger.logObject.getter();
    int v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      int v64 = v22;
      os_log_t v65 = v21;
      int v67 = a2;
      uint64_t v68 = v5;
      uint64_t v69 = a4;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v73 = v63;
      *(_DWORD *)uint64_t v23 = 136315650;
      *(void *)&long long aBlock = sub_10009B0E4(0xD000000000000022, 0x80000001005DEF60, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2080;
      id v66 = v20;
      id v24 = v20;
      id v25 = [v24 description];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      *(void *)&long long aBlock = sub_10009B0E4(v26, v28, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      id v29 = [v24 node];
      uint64_t v30 = (uint64_t)v29;
      if (v29)
      {
        id v31 = [v29 displayName];
        swift_unknownObjectRelease();
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;
      }
      else
      {
        uint64_t v33 = 0;
      }
      *(void *)&long long aBlock = v30;
      *((void *)&aBlock + 1) = v33;
      sub_1000CBE70((uint64_t *)&unk_10070BD50);
      uint64_t v38 = String.init<A>(describing:)();
      *(void *)&long long aBlock = sub_10009B0E4(v38, v39, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v40 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v64, "[PROTECTED APPS] %s Location needs auth location: %s node: %s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v71);
      uint64_t v5 = v68;
      a4 = v69;
      LOBYTE(a2) = v67;
      id v20 = v66;
    }
    else
    {

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v71);
    }
    if (*v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v42 = (uint64_t)v72;
    uint64_t v43 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v44 = v41 - v43;
      if (!__OFSUB__(v41, v43))
      {
        *(void *)&long long aBlock = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        strcpy((char *)&aBlock, "remove(after: ");
        HIBYTE(aBlock) = -18;
        id v45 = [v20 shortDescription];
        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        Swift::String v47 = v5;
        uint64_t v49 = v48;

        v50._countAndFlagsBits = v46;
        v50._object = v49;
        String.append(_:)(v50);
        uint64_t v51 = v47;
        swift_bridgeObjectRelease();
        v52._countAndFlagsBits = 41;
        v52._object = (void *)0xE100000000000000;
        String.append(_:)(v52);
        uint64_t v53 = sub_1000BDAB0(aBlock, *((uint64_t *)&aBlock + 1));
        swift_bridgeObjectRelease();
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = v51;
        *(void *)(v54 + 24) = v44;
        uint64_t v55 = a2 & 1;
        *(unsigned char *)(v54 + 32) = v55;
        *(void *)(v54 + 40) = v53;
        *(void *)(v54 + 48) = v42;
        *(void *)(v54 + 56) = a4;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          char v57 = (void *)Strong;
          uint64_t v58 = swift_allocObject();
          *(void *)(v58 + 16) = sub_10023EFF0;
          *(void *)(v58 + 24) = v54;
          uint64_t v77 = sub_1000D8564;
          uint64_t v78 = v58;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          id v75 = sub_1000666D8;
          id v76 = &unk_10069A4E0;
          id v59 = _Block_copy(&aBlock);
          sub_1000C0640(v42);
          id v60 = v51;
          swift_retain();
          swift_retain();
          swift_release();
          [v57 hierarchyController:v60 willPopLocations:v44 animated:v55 completion:v59];
          _Block_release(v59);
          swift_release();
          swift_release();
          return swift_unknownObjectRelease();
        }
        else
        {
          sub_1000C0640(v42);
          unint64_t v61 = v51;
          swift_retain();
          sub_10022B630(v61, v44, v55, v53, v42, a4);
          swift_release();
          return swift_release();
        }
      }
    }
    __break(1u);
    return result;
  }
  static Logger.UI.getter();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Cannot remove the location after a location that is not in the locations array", v36, 2u);
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v71);
  if (v72) {
    return v72(result);
  }
  return result;
}

uint64_t sub_10022B630(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (a2 >= 1)
  {
    uint64_t v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    sub_1000C19B4((uint64_t)v14, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
    unint64_t v16 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    aBlock[0] = *v16;
    swift_bridgeObjectRetain();
    sub_10022A79C(a2, (uint64_t (*)(void))sub_100516634, v17);
    DOCHierarchyController.locations.setter(aBlock[0]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong hierarchyController:a1 didPopLocations:a2 animated:a3 & 1];
      swift_unknownObjectRelease();
    }
  }
  sub_10022AA60();
  char v19 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v19
    || (id v20 = [v19 hierarchyChangeTransitionCoordinator],
        swift_unknownObjectRelease(),
        !v20))
  {
    id v21 = [objc_allocWithZone((Class)UIViewController) init];
    id v20 = [v21 _definiteTransitionCoordinator];
  }
  int v22 = (void *)swift_allocObject();
  v22[2] = a1;
  v22[3] = a4;
  v22[4] = a5;
  v22[5] = a6;
  aBlock[4] = (uint64_t)sub_10023E548;
  aBlock[5] = (uint64_t)v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100045AE0;
  aBlock[3] = (uint64_t)&unk_10069A530;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = a1;
  swift_retain();
  sub_1000C0640(a5);
  swift_release();
  [v20 animateAlongsideTransition:0 completion:v23];
  _Block_release(v23);
  return swift_unknownObjectRelease();
}

unint64_t sub_10022B8FC()
{
  return 0xD000000000000040;
}

uint64_t sub_10022B918(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, int a7, int a8, char a9, void *a10)
{
  int v87 = a8;
  int v90 = a7;
  uint64_t v95 = a6;
  int v100 = a5;
  uint64_t v99 = a4;
  uint64_t v89 = a1;
  uint64_t v12 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v91 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000CBE70((uint64_t *)&unk_10070B690);
  uint64_t v15 = __chkstk_darwin(v102);
  uint64_t v93 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v18 = (char *)&v83 - v17;
  uint64_t v19 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  id v85 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v86 = (uint64_t)&v83 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v97 = (uint64_t)&v83 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v94 = (char *)&v83 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v92 = (uint64_t)&v83 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v83 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  os_log_type_t v35 = (char *)&v83 - v34;
  __chkstk_darwin(v33);
  unint64_t v37 = (char *)&v83 - v36;
  uint64_t v88 = a3;
  uint64_t v38 = swift_projectBox();
  uint64_t v39 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess();
  sub_1000CBC00(v39, (uint64_t)v35, (uint64_t *)&unk_10070B640);
  int v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v103 = v12;
  int v40 = v101(v35, 1, v12);
  unint64_t v98 = a2;
  if (v40 == 1)
  {
    uint64_t v41 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess();
    sub_1000CBC00(v41, (uint64_t)v37, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v35, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v35, (uint64_t)v37, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v37, 0, 1, v103);
  }
  swift_beginAccess();
  sub_1000C1CF0(v38, (uint64_t)v32, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v42 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v43 = v103;
  v42(v32, 0, 1, v103);
  uint64_t v44 = (uint64_t)&v18[*(int *)(v102 + 48)];
  sub_1000CBC00((uint64_t)v37, (uint64_t)v18, (uint64_t *)&unk_10070B640);
  sub_1000CBC00((uint64_t)v32, v44, (uint64_t *)&unk_10070B640);
  id v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v101;
  int v46 = v101(v18, 1, v43);
  uint64_t v96 = v13 + 56;
  if (v46 == 1)
  {
    sub_1000CBBA4((uint64_t)v32, (uint64_t *)&unk_10070B640);
    uint64_t v47 = (uint64_t)v37;
    uint64_t v48 = v103;
    sub_1000CBBA4(v47, (uint64_t *)&unk_10070B640);
    int v49 = v45(v44, 1, v48);
    uint64_t v50 = (uint64_t)v100;
    if (v49 == 1)
    {
      sub_1000CBBA4((uint64_t)v18, (uint64_t *)&unk_10070B640);
      uint64_t v51 = v98;
      uint64_t v52 = v99;
LABEL_17:
      swift_beginAccess();
      *(unsigned char *)(v38 + *(int *)(v103 + 24)) = 0;
      swift_beginAccess();
      unint64_t v68 = swift_bridgeObjectRetain();
      char v69 = sub_100237FBC(v68);
      swift_bridgeObjectRelease();
      uint64_t v70 = swift_allocObject();
      uint64_t v71 = v89;
      *(void *)(v70 + 16) = v89;
      *(void *)(v70 + 24) = v51;
      *(void *)(v70 + 32) = v88;
      *(void *)(v70 + 40) = v52;
      uint64_t v72 = v95;
      *(void *)(v70 + 48) = v50;
      *(void *)(v70 + 56) = v72;
      *(unsigned char *)(v70 + 64) = v87 & 1;
      *(unsigned char *)(v70 + 65) = a9 & 1;
      *(void *)(v70 + 72) = a10;
      swift_bridgeObjectRetain();
      v51;
      swift_retain();
      swift_retain();
      sub_1000C0640(v50);
      id v73 = a10;
      sub_1000AE818(v71, v90 & 1, v69 & 1, (uint64_t)sub_10023EA00, v70);
      return swift_release();
    }
    goto LABEL_9;
  }
  uint64_t v53 = v92;
  sub_1000CBC00((uint64_t)v18, v92, (uint64_t *)&unk_10070B640);
  if (v45(v44, 1, v103) == 1)
  {
    sub_1000CBBA4((uint64_t)v32, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v53, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_9:
    sub_1000CBBA4((uint64_t)v18, (uint64_t *)&unk_10070B690);
    uint64_t v51 = v98;
    uint64_t v54 = (uint64_t)v94;
    goto LABEL_10;
  }
  id v84 = v42;
  uint64_t v65 = v91;
  sub_1000C194C(v44, v91, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v66 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v65, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v32, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_10070B640);
  sub_1000C1DEC(v53, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v67 = (uint64_t)v18;
  uint64_t v42 = v84;
  uint64_t v54 = (uint64_t)v94;
  sub_1000CBBA4(v67, (uint64_t *)&unk_10070B640);
  uint64_t v50 = (uint64_t)v100;
  uint64_t v51 = v98;
  uint64_t v52 = v99;
  if (v66) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v55 = (uint64_t)&v51[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
  swift_beginAccess();
  sub_1000CBC00(v55, v54, (uint64_t *)&unk_10070B640);
  swift_beginAccess();
  uint64_t v56 = v97;
  sub_1000C1CF0(v38, v97, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v57 = v103;
  v42((char *)v56, 0, 1, v103);
  uint64_t v58 = v93;
  uint64_t v59 = v93 + *(int *)(v102 + 48);
  sub_1000CBC00(v54, v93, (uint64_t *)&unk_10070B640);
  sub_1000CBC00(v56, v59, (uint64_t *)&unk_10070B640);
  id v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v101;
  if (v101((char *)v58, 1, v57) == 1)
  {
    sub_1000CBBA4(v56, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4(v54, (uint64_t *)&unk_10070B640);
    int v61 = v60(v59, 1, v103);
    uint64_t v62 = v100;
    uint64_t v63 = v99;
    if (v61 == 1)
    {
      sub_1000CBBA4(v58, (uint64_t *)&unk_10070B640);
LABEL_19:
      uint64_t v80 = (uint64_t)v85;
      v42(v85, 1, 1, v103);
      sub_1000C19B4(v80, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  uint64_t v64 = v86;
  sub_1000CBC00(v58, v86, (uint64_t *)&unk_10070B640);
  if (v60(v59, 1, v103) == 1)
  {
    sub_1000CBBA4(v97, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4(v54, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v64, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    uint64_t v62 = v100;
    uint64_t v63 = v99;
LABEL_15:
    sub_1000CBBA4(v58, (uint64_t *)&unk_10070B690);
    goto LABEL_20;
  }
  id v75 = v42;
  uint64_t v76 = v64;
  uint64_t v77 = v91;
  sub_1000C194C(v59, v91, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v78 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v77, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4(v97, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4(v54, (uint64_t *)&unk_10070B640);
  uint64_t v79 = v76;
  uint64_t v42 = v75;
  sub_1000C1DEC(v79, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4(v58, (uint64_t *)&unk_10070B640);
  uint64_t v62 = v100;
  uint64_t v63 = v99;
  if (v78) {
    goto LABEL_19;
  }
LABEL_20:
  id v81 = &v51[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(void *)id v81 = 0;
  v81[8] = 1;
  uint64_t result = swift_beginAccess();
  if (*(void *)(v63 + 16))
  {
    uint64_t v82 = swift_retain();
    sub_1000460B0(v82, 0);
    uint64_t result = swift_release();
  }
  if (v62) {
    return v62(result);
  }
  return result;
}

uint64_t sub_10022C3B8(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, int a8, char a9, void *a10)
{
  int v61 = a8;
  uint64_t v63 = a7;
  uint64_t v64 = a1;
  char v69 = a3;
  uint64_t v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v70 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000CBE70((uint64_t *)&unk_10070B690);
  __chkstk_darwin(v68);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  id v60 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v62 = (uint64_t)&v58 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v58 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v58 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v58 - v28;
  uint64_t v30 = swift_projectBox();
  uint64_t v31 = *(void *)(a2 + 16);
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v65 = a5;
  char v66 = a6;
  uint64_t v67 = v30;
  if (v31)
  {
    uint64_t v71 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v33 = (void **)(a2 + 32);
    do
    {
      uint64_t v34 = *v33;
      v33 += 2;
      id v35 = v34;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v31;
    }
    while (v31);
    uint64_t v32 = v71;
  }
  uint64_t v36 = v69;
  uint64_t v64 = sub_1000C1ED4((unint64_t)v32, (unint64_t)v64);
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)&v36[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess();
  sub_1000CBC00(v37, (uint64_t)v27, (uint64_t *)&unk_10070B640);
  uint64_t v38 = v70;
  uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  if (v39(v27, 1, v13) == 1)
  {
    uint64_t v40 = (uint64_t)&v36[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess();
    uint64_t v41 = v40;
    uint64_t v38 = v70;
    sub_1000CBC00(v41, (uint64_t)v29, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v27, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v27, (uint64_t)v29, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v29, 0, 1, v13);
  }
  uint64_t v42 = v67;
  swift_beginAccess();
  sub_1000C1CF0(v42, (uint64_t)v24, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v70 = v38 + 56;
  v43(v24, 0, 1, v13);
  uint64_t v44 = (uint64_t)&v16[*(int *)(v68 + 48)];
  sub_1000CBC00((uint64_t)v29, (uint64_t)v16, (uint64_t *)&unk_10070B640);
  sub_1000CBC00((uint64_t)v24, v44, (uint64_t *)&unk_10070B640);
  if (v39(v16, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v29, (uint64_t *)&unk_10070B640);
    if (v39((char *)v44, 1, v13) == 1)
    {
      sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070B640);
      uint64_t v46 = v65;
      id v45 = v66;
LABEL_19:
      uint64_t v53 = (void *)swift_allocObject();
      uint64_t v54 = v69;
      v53[2] = v69;
      v53[3] = v46;
      uint64_t v55 = v63;
      v53[4] = v45;
      v53[5] = v55;
      uint64_t v56 = (uint64_t)v60;
      v43(v60, 1, 1, v13);
      uint64_t v57 = v54;
      swift_retain();
      sub_1000C0640((uint64_t)v45);
      sub_1000C19B4(v56, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      swift_retain();
      if (v61) {
        sub_10023BFAC(1, (unint64_t)v64, a9 & 1, v57, (void (*)(void))sub_10023EA64, (uint64_t)v53);
      }
      else {
        sub_10023B1FC(a10, (unint64_t)v64, a9 & 1, v57, (void (*)(void))sub_10023EA64, (uint64_t)v53);
      }
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    goto LABEL_13;
  }
  uint64_t v47 = v62;
  sub_1000CBC00((uint64_t)v16, v62, (uint64_t *)&unk_10070B640);
  if (v39((char *)v44, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v29, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v47, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_13:
    sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070B690);
    uint64_t v46 = v65;
    id v45 = v66;
    goto LABEL_14;
  }
  uint64_t v51 = v59;
  sub_1000C194C(v44, v59, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v52 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v51, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4((uint64_t)v29, (uint64_t *)&unk_10070B640);
  sub_1000C1DEC(v47, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070B640);
  uint64_t v46 = v65;
  id v45 = v66;
  if (v52) {
    goto LABEL_19;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v48 = &v69[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(void *)uint64_t v48 = 0;
  v48[8] = 1;
  uint64_t result = swift_beginAccess();
  if (*(void *)(v46 + 16))
  {
    uint64_t v50 = swift_retain();
    sub_1000460B0(v50, 0);
    uint64_t result = swift_release();
  }
  if (v45) {
    return v45(result);
  }
  return result;
}

uint64_t sub_10022CAC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10022AA60();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (id v9 = [Strong hierarchyChangeTransitionCoordinator],
        swift_unknownObjectRelease(),
        !v9))
  {
    id v10 = [objc_allocWithZone((Class)UIViewController) init];
    id v9 = [v10 _definiteTransitionCoordinator];
  }
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v15[4] = sub_10023EB54;
  v15[5] = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_100045AE0;
  v15[3] = &unk_10069A2D8;
  uint64_t v12 = _Block_copy(v15);
  id v13 = a1;
  swift_retain();
  sub_1000C0640(a3);
  swift_release();
  [v9 animateAlongsideTransition:0 completion:v12];
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

uint64_t sub_10022CC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t result = swift_beginAccess();
  if (*(void *)(a3 + 16))
  {
    uint64_t v8 = swift_retain();
    sub_1000460B0(v8, 0);
    uint64_t result = swift_release();
  }
  if (a4) {
    return a4(result);
  }
  return result;
}

unint64_t sub_10022CCF0()
{
  return 0xD00000000000003DLL;
}

uint64_t sub_10022CD0C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, void *a8, unsigned __int8 a9, unint64_t a10, char a11)
{
  id v94 = a8;
  uint64_t v95 = a7;
  unint64_t v98 = a6;
  uint64_t v97 = a5;
  uint64_t v96 = a4;
  uint64_t v88 = a1;
  uint64_t v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v89 = &v83[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v102 = sub_1000CBE70((uint64_t *)&unk_10070B690);
  uint64_t v16 = __chkstk_darwin(v102);
  uint64_t v91 = &v83[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v19 = &v83[-v18];
  uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  id v85 = &v83[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v86 = &v83[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v93 = &v83[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  int v90 = &v83[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  int v100 = &v83[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = &v83[-v32];
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = &v83[-v35];
  __chkstk_darwin(v34);
  uint64_t v38 = &v83[-v37];
  uint64_t v87 = a3;
  uint64_t v39 = swift_projectBox();
  uint64_t v40 = (uint64_t)a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v40, (uint64_t)v36, (uint64_t *)&unk_10070B640);
  int v101 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
  int v41 = v101((unint64_t)v36, 1, v13);
  uint64_t v99 = a2;
  if (v41 == 1)
  {
    uint64_t v42 = (uint64_t)a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    sub_1000CBC00(v42, (uint64_t)v38, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v36, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v36, (uint64_t)v38, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
  }
  swift_beginAccess();
  sub_1000C1CF0(v39, (uint64_t)v33, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v92 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v92(v33, 0, 1, v13);
  unint64_t v43 = (unint64_t)&v19[*(int *)(v102 + 48)];
  sub_1000CBC00((uint64_t)v38, (uint64_t)v19, (uint64_t *)&unk_10070B640);
  sub_1000CBC00((uint64_t)v33, v43, (uint64_t *)&unk_10070B640);
  uint64_t v44 = v101;
  int v45 = v101((unint64_t)v19, 1, v13);
  uint64_t v46 = v100;
  if (v45 == 1)
  {
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v38, (uint64_t *)&unk_10070B640);
    int v47 = v44(v43, 1, v13);
    uint64_t v48 = v99;
    if (v47 == 1)
    {
      sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B640);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  sub_1000CBC00((uint64_t)v19, (uint64_t)v100, (uint64_t *)&unk_10070B640);
  if (v44(v43, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v38, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC((uint64_t)v46, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    uint64_t v48 = v99;
LABEL_9:
    sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B690);
    goto LABEL_25;
  }
  uint64_t v49 = v43;
  unint64_t v43 = (unint64_t)v46;
  uint64_t v50 = v89;
  sub_1000C194C(v49, (uint64_t)v89, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  int v84 = static UUID.== infix(_:_:)();
  sub_1000C1DEC((uint64_t)v50, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4((uint64_t)v38, (uint64_t *)&unk_10070B640);
  sub_1000C1DEC(v43, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B640);
  uint64_t v48 = v99;
  if ((v84 & 1) == 0)
  {
LABEL_25:
    uint64_t v64 = (uint64_t)v48 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    uint64_t v65 = v90;
    sub_1000CBC00(v64, (uint64_t)v90, (uint64_t *)&unk_10070B640);
    swift_beginAccess();
    char v66 = v93;
    sub_1000C1CF0(v39, (uint64_t)v93, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    v92(v66, 0, 1, v13);
    uint64_t v67 = v91;
    uint64_t v68 = (uint64_t)&v91[*(int *)(v102 + 48)];
    sub_1000CBC00((uint64_t)v65, (uint64_t)v91, (uint64_t *)&unk_10070B640);
    sub_1000CBC00((uint64_t)v66, v68, (uint64_t *)&unk_10070B640);
    char v69 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v101;
    if (v101((unint64_t)v67, 1, v13) == 1)
    {
      sub_1000CBBA4((uint64_t)v66, (uint64_t *)&unk_10070B640);
      sub_1000CBBA4((uint64_t)v65, (uint64_t *)&unk_10070B640);
      if (v69(v68, 1, v13) == 1)
      {
        sub_1000CBBA4((uint64_t)v67, (uint64_t *)&unk_10070B640);
LABEL_32:
        uint64_t v73 = (uint64_t)v85;
        v92(v85, 1, 1, v13);
        sub_1000C19B4(v73, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
        return sub_10023A94C((uint64_t)v48, v96, v97, v98);
      }
    }
    else
    {
      uint64_t v70 = v86;
      sub_1000CBC00((uint64_t)v67, (uint64_t)v86, (uint64_t *)&unk_10070B640);
      if (v69(v68, 1, v13) != 1)
      {
        uint64_t v71 = v89;
        sub_1000C194C(v68, (uint64_t)v89, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        char v72 = static UUID.== infix(_:_:)();
        sub_1000C1DEC((uint64_t)v71, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        sub_1000CBBA4((uint64_t)v93, (uint64_t *)&unk_10070B640);
        sub_1000CBBA4((uint64_t)v65, (uint64_t *)&unk_10070B640);
        sub_1000C1DEC((uint64_t)v70, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
        sub_1000CBBA4((uint64_t)v67, (uint64_t *)&unk_10070B640);
        if (v72) {
          goto LABEL_32;
        }
        return sub_10023A94C((uint64_t)v48, v96, v97, v98);
      }
      sub_1000CBBA4((uint64_t)v93, (uint64_t *)&unk_10070B640);
      sub_1000CBBA4((uint64_t)v65, (uint64_t *)&unk_10070B640);
      sub_1000C1DEC((uint64_t)v70, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    }
    sub_1000CBBA4((uint64_t)v67, (uint64_t *)&unk_10070B690);
    return sub_10023A94C((uint64_t)v48, v96, v97, v98);
  }
LABEL_11:
  swift_beginAccess();
  *(unsigned char *)(v39 + *(int *)(v13 + 24)) = 0;
  uint64_t v51 = v88;
  if (v94)
  {
    id v52 = v94;
    unint64_t v53 = sub_10023A87C((uint64_t)v51);
    if ((v54 & 1) == 0)
    {
      uint64_t v55 = v53;
      if ((v53 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v43 = v51[2];
        uint64_t v38 = (unsigned char *)(v43 - v53);
        if (v43 >= v53)
        {
          uint64_t v33 = v51 + 4;
          type metadata accessor for __ContiguousArrayStorageBase();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain_n();
          uint64_t v56 = (void *)swift_dynamicCastClass();
          if (!v56)
          {
            swift_bridgeObjectRelease();
            uint64_t v56 = _swiftEmptyArrayStorage;
          }
          uint64_t v57 = v56[2];
          swift_release();
          if (v57 == v55)
          {
            uint64_t v58 = (void *)swift_dynamicCastClass();
            if (!v58)
            {
              swift_bridgeObjectRelease();
              uint64_t v58 = _swiftEmptyArrayStorage;
            }
            goto LABEL_20;
          }
LABEL_42:
          swift_bridgeObjectRelease();
          uint64_t v58 = sub_1002F4F08((uint64_t)v51, (uint64_t)v33, 0, (2 * v55) | 1);
LABEL_20:
          uint64_t v59 = v58;
          id v60 = v48;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain_n();
          int v61 = (void *)swift_dynamicCastClass();
          if (!v61)
          {
            swift_bridgeObjectRelease();
            int v61 = _swiftEmptyArrayStorage;
          }
          uint64_t v62 = (unsigned char *)v61[2];
          swift_release();
          if (v62 == v38)
          {
            uint64_t v63 = swift_dynamicCastClass();

            swift_bridgeObjectRelease();
            uint64_t v48 = v60;
            if (v63)
            {
              uint64_t v51 = (void *)v63;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v51 = _swiftEmptyArrayStorage;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v82 = sub_1002F4F08((uint64_t)v51, (uint64_t)v33, v55, (2 * v43) | 1);

            swift_bridgeObjectRelease();
            uint64_t v51 = v82;
            uint64_t v48 = v60;
          }
          id v75 = v59;
          goto LABEL_38;
        }
      }
      __break(1u);
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRetain();
  id v75 = _swiftEmptyArrayStorage;
LABEL_38:
  LODWORD(v102) = a9;
  LODWORD(v101) = sub_100237FBC(a10);
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = v51;
  *(void *)(v76 + 24) = v48;
  uint64_t v77 = v96;
  *(void *)(v76 + 32) = v87;
  *(void *)(v76 + 40) = v77;
  char v78 = v98;
  *(void *)(v76 + 48) = v97;
  *(void *)(v76 + 56) = v78;
  id v79 = v94;
  *(void *)(v76 + 64) = v95;
  *(void *)(v76 + 72) = v79;
  *(unsigned char *)(v76 + 80) = a11 & 1;
  *(void *)(v76 + 88) = v75;
  id v80 = v79;
  v48;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000C0640((uint64_t)v78);
  uint64_t v81 = swift_bridgeObjectRetain();
  sub_1000AE818(v81, v102 & 1, v101 & 1, (uint64_t)sub_10023ECF8, v76);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_10022D8CC(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t), uint64_t a8, void *a9, unsigned __int8 a10, uint64_t a11)
{
  id v75 = a7;
  uint64_t v76 = a8;
  uint64_t v74 = a6;
  uint64_t v78 = a5;
  uint64_t v14 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v80 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v71 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000CBE70((uint64_t *)&unk_10070B690);
  __chkstk_darwin(v16);
  uint64_t v77 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v70 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v72 = (uint64_t)&v68 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v68 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v68 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v68 - v29;
  uint64_t v31 = swift_projectBox();
  id v79 = sub_10022E0B4(a2, a1);
  uint64_t v32 = a3;
  uint64_t v33 = (uint64_t)a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  uint64_t v34 = v80;
  sub_1000CBC00(v33, (uint64_t)v28, (uint64_t *)&unk_10070B640);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v28, 1, v14);
  uint64_t v73 = v32;
  if (v36 == 1)
  {
    char v69 = (void (*)(void, void, void, void))v14;
    uint64_t v37 = v16;
    uint64_t v38 = v34;
    uint64_t v39 = (uint64_t)v32 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    uint64_t v40 = v39;
    uint64_t v34 = v38;
    uint64_t v16 = v37;
    sub_1000CBC00(v40, (uint64_t)v30, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v28, (uint64_t *)&unk_10070B640);
    int v41 = v69;
  }
  else
  {
    sub_1000C194C((uint64_t)v28, (uint64_t)v30, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v14);
    int v41 = (void (*)(void, void, void, void))v14;
  }
  swift_beginAccess();
  sub_1000C1CF0(v31, (uint64_t)v25, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v42 = *(void (**)(char *, void, uint64_t, void))(v34 + 56);
  uint64_t v80 = v34 + 56;
  v42(v25, 0, 1, v41);
  uint64_t v43 = v77;
  uint64_t v44 = v77 + *(int *)(v16 + 48);
  sub_1000CBC00((uint64_t)v30, v77, (uint64_t *)&unk_10070B640);
  sub_1000CBC00((uint64_t)v25, v44, (uint64_t *)&unk_10070B640);
  if (v35((char *)v43, 1, (uint64_t)v41) == 1)
  {
    char v69 = (void (*)(void, void, void, void))v42;
    sub_1000CBBA4((uint64_t)v25, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v30, (uint64_t *)&unk_10070B640);
    int v45 = v35((char *)v44, 1, (uint64_t)v41);
    unint64_t v46 = (unint64_t)v79;
    uint64_t v48 = v75;
    uint64_t v47 = v76;
    if (v45 == 1)
    {
      sub_1000CBBA4(v43, (uint64_t *)&unk_10070B640);
      uint64_t v49 = v73;
      uint64_t v50 = v74;
      goto LABEL_11;
    }
LABEL_9:
    sub_1000CBBA4(v43, (uint64_t *)&unk_10070B690);
    uint64_t v49 = v73;
    uint64_t v50 = v74;
    goto LABEL_19;
  }
  uint64_t v51 = v72;
  sub_1000CBC00(v43, v72, (uint64_t *)&unk_10070B640);
  if (v35((char *)v44, 1, (uint64_t)v41) == 1)
  {
    sub_1000CBBA4((uint64_t)v25, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v30, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v51, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    uint64_t v48 = v75;
    goto LABEL_9;
  }
  char v69 = (void (*)(void, void, void, void))v42;
  uint64_t v52 = v71;
  sub_1000C194C(v44, v71, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v53 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v52, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v25, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4((uint64_t)v30, (uint64_t *)&unk_10070B640);
  sub_1000C1DEC(v51, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4(v43, (uint64_t *)&unk_10070B640);
  unint64_t v46 = (unint64_t)v79;
  uint64_t v48 = v75;
  uint64_t v47 = v76;
  uint64_t v49 = v73;
  uint64_t v50 = v74;
  if ((v53 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_11:
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66) {
      goto LABEL_13;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    sub_10023A94C((uint64_t)v49, v78, v50, v48);
    return;
  }
  if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_19;
  }
LABEL_13:
  char v54 = (void *)swift_allocObject();
  uint64_t v55 = v78;
  v54[2] = v49;
  v54[3] = v55;
  v54[4] = v50;
  v54[5] = v48;
  v54[6] = v47;
  uint64_t v56 = (uint64_t)v70;
  v69(v70, 1, 1, v41);
  uint64_t v57 = v49;
  swift_retain();
  swift_retain();
  sub_1000C0640((uint64_t)v48);
  sub_1000C19B4(v56, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  id v58 = a9;
  if (a9)
  {
LABEL_17:
    LODWORD(v80) = a10;
    LODWORD(v78) = a9 == 0;
    uint64_t v81 = v57;
    swift_getKeyPath();
    id v60 = v58;
    id v61 = a9;
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
    uint64_t v62 = *(void **)&v57[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(void *)&v57[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = v58;
    id v63 = v60;

    uint64_t v81 = v57;
    swift_getKeyPath();
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)();

    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = a11;
    *(void *)(v64 + 24) = v57;
    *(void *)(v64 + 32) = sub_10023ED40;
    *(void *)(v64 + 40) = v54;
    *(unsigned char *)(v64 + 48) = v78;
    uint64_t v65 = v57;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000C21E8((unint64_t)v79, v80 & 1, (uint64_t)sub_10023ED60, v64);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    return;
  }
  if ((v46 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v67 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    id v58 = *(id *)(v67 + 16);
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v58 = *(id *)(*(void *)(v46 + 32) + 16);
    id v59 = v58;
    goto LABEL_17;
  }
  __break(1u);
}

void *sub_10022E0B4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = (void **)(a1 + 32);
    do
    {
      uint64_t v6 = *v5;
      v5 += 2;
      id v7 = v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
  }
  uint64_t v8 = sub_1000C1ED4((unint64_t)_swiftEmptyArrayStorage, a2);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10022E17C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10022AA60();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (id v11 = [Strong hierarchyChangeTransitionCoordinator],
        swift_unknownObjectRelease(),
        !v11))
  {
    id v12 = [objc_allocWithZone((Class)UIViewController) init];
    id v11 = [v12 _definiteTransitionCoordinator];
  }
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a5;
  v17[4] = sub_10023EDD4;
  v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_100045AE0;
  v17[3] = &unk_10069A3F0;
  uint64_t v14 = _Block_copy(v17);
  id v15 = a1;
  swift_retain();
  swift_retain();
  sub_1000C0640(a4);
  swift_release();
  [v11 animateAlongsideTransition:0 completion:v14];
  _Block_release(v14);
  return swift_unknownObjectRelease();
}

uint64_t sub_10022E31C(uint64_t a1, char *a2, uint64_t (*a3)(uint64_t), uint64_t a4, char a5)
{
  unint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    goto LABEL_17;
  }
  uint64_t v7 = a1;
  uint64_t v8 = &a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_bridgeObjectRetain();
  uint64_t v27 = v8;
  swift_beginAccess();
  unint64_t v9 = v6 - 1;
  id v10 = (void **)(v7 + 16 * v6 + 24);
  unint64_t v26 = v6;
  while (1)
  {
    id v11 = *(v10 - 1);
    id v12 = *v10;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    id v14 = v12;
    if (Strong)
    {
      [Strong hierarchyController:a2 willPrepend:v11 source:v14];
      swift_unknownObjectRelease();
    }
    else
    {
      id v15 = v11;
    }
    uint64_t v28 = *(void *)v27;
    if (*(void *)v27 >> 62) {
      break;
    }
    id v16 = v11;
    swift_bridgeObjectRetain();
LABEL_10:
    sub_10051546C(0, 0, (uint64_t)v11);
    swift_getKeyPath();
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
    swift_getKeyPath();
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
    NSString v17 = String._bridgeToObjectiveC()();
    [a2 willChangeValueForKey:v17];

    *(void *)uint64_t v27 = v28;
    swift_bridgeObjectRelease();
    NSString v18 = String._bridgeToObjectiveC()();
    [a2 didChangeValueForKey:v18];

    swift_getKeyPath();
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
    swift_getKeyPath();
    _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
    uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v19)
    {
      [v19 hierarchyController:a2 didPrepend:v11 source:v14];

      swift_unknownObjectRelease();
      if (!v9) {
        goto LABEL_16;
      }
    }
    else
    {

      if (!v9) {
        goto LABEL_16;
      }
    }
    --v9;
    v10 -= 2;
    if (v9 >= v26) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain_n();
  id v20 = v11;
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v21 & 0x8000000000000000) == 0) {
    goto LABEL_10;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  a1 = swift_bridgeObjectRelease();
LABEL_17:
  uint64_t result = a3(a1);
  if (a5)
  {
    swift_getKeyPath();
    _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
    uint64_t v23 = *(void **)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate];
    *(void *)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate] = 0;

    swift_getKeyPath();
    return _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
  }
  return result;
}

void sub_10022E65C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v51 = (void *)a1;
  uint64_t v52 = a4;
  int v48 = a2;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v49 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  id v11 = &v47[-v10];
  static Logger.UI.getter();
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v50 = v7;
  if (v14)
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)id v15 = 136315138;
    uint64_t v54 = sub_10009B0E4(0xD00000000000002FLL, 0x80000001005DEF30, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[PROTECTED APPS] BTBT: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = *(void (**)(unsigned char *, uint64_t))(v53 + 8);
  v16(v11, v7);
  NSString v17 = &v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  *(void *)NSString v17 = 2;
  v17[8] = 0;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v5;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = v52;
  uint64_t v19 = (unint64_t *)&v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v20 = *v19;
  uint64_t v21 = v5;
  swift_bridgeObjectRetain();
  uint64_t v22 = (void (*)(uint64_t))a3;
  sub_1000C0640(a3);
  uint64_t v23 = v51;
  sub_1001B5F94((uint64_t)v51, v20);
  char v25 = v24;
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t v28 = v49;
    static Logger.UI.getter();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Cannot pop to a location not present in the locations array", v31, 2u);
      swift_slowDealloc();
    }

    uint64_t v32 = ((uint64_t (*)(unsigned char *, uint64_t))v16)(v28, v50);
    *(void *)NSString v17 = 0;
    v17[8] = 1;
    if (v22) {
      v22(v32);
    }
    swift_release();
    return;
  }
  unint64_t v26 = sub_100225C60();
  char v27 = sub_1000BB74C((uint64_t)v23, (unint64_t)v26);
  swift_bridgeObjectRelease();
  if (v27)
  {
    swift_retain();
    sub_10022AEE8(v23, v48 & 1, (uint64_t (*)(uint64_t))sub_10023EF58, v18);
    swift_release_n();
    return;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  swift_bridgeObjectRetain();
  uint64_t v33 = Array.prefix(upToAndIncluding:)();
  unint64_t v35 = v34;
  uint64_t v37 = v36;
  unint64_t v39 = v38;
  swift_bridgeObjectRelease();
  if (v39)
  {
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    uint64_t v40 = (void *)swift_dynamicCastClass();
    if (!v40)
    {
      swift_unknownObjectRelease();
      uint64_t v40 = _swiftEmptyArrayStorage;
    }
    uint64_t v41 = v40[2];
    swift_release();
    if (!__OFSUB__(v39 >> 1, v37))
    {
      if (v41 == (v39 >> 1) - v37)
      {
        unint64_t v35 = swift_dynamicCastClass();
        if (!v35)
        {
          swift_unknownObjectRelease();
          unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
        }
        goto LABEL_19;
      }
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  while (1)
  {
    unint64_t v35 = (unint64_t)sub_1002F507C(v33, v35, v37, v39);
LABEL_19:
    swift_unknownObjectRelease();
    if ((v35 & 0x8000000000000000) != 0 || (v35 & 0x4000000000000000) != 0) {
      break;
    }
    uint64_t v42 = *(void *)(v35 + 16);
    if (!v42) {
      goto LABEL_29;
    }
LABEL_22:
    BOOL v43 = __OFSUB__(v42, 1);
    unint64_t v44 = v42 - 1;
    if (v43)
    {
      __break(1u);
LABEL_33:
      id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_27:
      unint64_t v46 = v45;
      goto LABEL_30;
    }
    if ((v35 & 0xC000000000000001) != 0) {
      goto LABEL_33;
    }
    if ((v44 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v44 < *(void *)(v35 + 16))
    {
      id v45 = *(id *)(v35 + 8 * v44 + 32);
      goto LABEL_27;
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_unknownObjectRelease();
  }
  uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
  if (v42) {
    goto LABEL_22;
  }
LABEL_29:
  unint64_t v46 = 0;
LABEL_30:
  swift_retain();
  sub_100224654(v35, v46, 1, 1, v48 & 1, (uint64_t (*)(uint64_t))sub_10023EF58, (unsigned char *)v18);
  swift_release();
  swift_release_n();
}

uint64_t sub_10022EBF4(void *a1, void *a2, char a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  int v48 = a4;
  int v49 = a5;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v12 - 8);
  BOOL v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = 0;
  uint64_t v53 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v52 = 0xD000000000000011;
  uint64_t v53 = 0x80000001005DE690;
  id v15 = [a1 shortDescription];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 41;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  uint64_t v21 = sub_1000BDAB0(v52, v53);
  swift_bridgeObjectRelease();
  uint64_t v22 = (int *)type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v23 = swift_allocBox();
  uint64_t v25 = v24;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1005A04F0;
  *(void *)(v26 + 32) = a1;
  uint64_t v52 = v26;
  specialized Array._endMutation()();
  uint64_t v27 = v52;
  uint64_t v28 = a1;
  UUID.init()();
  uint64_t v29 = v22[5];
  uint64_t v30 = v22[6];
  *(void *)(v25 + v22[7]) = v27;
  *(unsigned char *)(v25 + v29) = 1;
  *(unsigned char *)(v25 + v30) = a3 ^ 1;
  sub_1000C1CF0(v25, (uint64_t)v14, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  (*(void (**)(char *, void, uint64_t, int *))(*((void *)v22 - 1) + 56))(v14, 0, 1, v22);
  sub_1000C19B4((uint64_t)v14, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
  uint64_t v31 = &v8[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  if (*(void *)v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v33 < 2) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((*(void *)v31 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_3:
    char v32 = 0;
LABEL_15:
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v8;
    *(void *)(v41 + 24) = v23;
    uint64_t v43 = v50;
    uint64_t v42 = v51;
    *(void *)(v41 + 32) = v21;
    *(void *)(v41 + 40) = v43;
    *(void *)(v41 + 48) = v42;
    *(unsigned char *)(v41 + 56) = v48 & 1;
    *(unsigned char *)(v41 + 57) = v32 & 1;
    *(unsigned char *)(v41 + 58) = v49 & 1;
    *(void *)(v41 + 64) = a2;
    id v44 = a2;
    swift_retain();
    id v45 = v8;
    swift_retain();
    swift_retain();
    sub_1000C0640(v43);
    sub_10006294C(v28, 1, v45, (char *)sub_100237D44, v41);
    swift_release();
    swift_release();
    return swift_release_n();
  }
  if (!(*(void *)v31 >> 62))
  {
    uint64_t v34 = *(void *)((*(void *)v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v35 = v34 - 2;
    if (!__OFSUB__(v34, 2)) {
      goto LABEL_7;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v35 = v46 - 2;
  if (__OFSUB__(v46, 2)) {
    goto LABEL_18;
  }
LABEL_7:
  uint64_t result = swift_beginAccess();
  uint64_t v37 = *(void *)v31;
  if ((*(void *)v31 & 0xC000000000000001) != 0)
  {
LABEL_19:
    id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if ((v35 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v35 < *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v38 = *(id *)(v37 + 8 * v35 + 32);
LABEL_11:
    unint64_t v39 = v38;
    swift_endAccess();
    if (a2)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      id v40 = a2;
      char v32 = static NSObject.== infix(_:_:)();
    }
    else
    {
      char v32 = 0;
    }

    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void sub_10022F050(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, int a8, char a9, char a10, int *a11)
{
  int v86 = a8;
  uint64_t v91 = a7;
  uint64_t v96 = a6;
  uint64_t v95 = a5;
  id v85 = a2;
  id v94 = a1;
  uint64_t v13 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v87 = (uint64_t)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = (int *)sub_1000CBE70((uint64_t *)&unk_10070B690);
  uint64_t v16 = __chkstk_darwin(v99);
  uint64_t v97 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  Swift::String v19 = (char *)&v82 - v18;
  uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v82 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v83 = (uint64_t)&v82 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v92 = (uint64_t)&v82 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v89 = (uint64_t)&v82 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v88 = (uint64_t)&v82 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v82 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v82 - v35;
  __chkstk_darwin(v34);
  id v38 = (char *)&v82 - v37;
  uint64_t v84 = a4;
  uint64_t v100 = swift_projectBox();
  uint64_t v39 = (uint64_t)a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  uint64_t v40 = v39;
  uint64_t v41 = v14;
  sub_1000CBC00(v40, (uint64_t)v36, (uint64_t *)&unk_10070B640);
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v101 = v13;
  unsigned int v43 = v42(v36, 1, v13);
  p_prots = &OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy.prots;
  unint64_t v98 = v42;
  uint64_t v93 = a3;
  if (v43 == 1)
  {
    uint64_t v45 = (uint64_t)a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    uint64_t v46 = v45;
    uint64_t v41 = v14;
    p_prots = &OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy.prots;
    uint64_t v42 = v98;
    sub_1000CBC00(v46, (uint64_t)v38, (uint64_t *)&unk_10070B640);
    id v47 = v94;
    id v48 = v94;
    sub_1000CBBA4((uint64_t)v36, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v36, (uint64_t)v38, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v101);
    id v47 = v94;
    id v49 = v94;
  }
  uint64_t v50 = v100;
  swift_beginAccess();
  sub_1000C1CF0(v50, (uint64_t)v33, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v51 = *(void **)(v41 + 56);
  uint64_t v52 = v101;
  uint64_t v90 = v41 + 56;
  id v94 = v51;
  ((void (*)(char *, void, uint64_t, uint64_t))v51)(v33, 0, 1, v101);
  uint64_t v53 = (uint64_t)&v19[v99[12]];
  sub_1000CBC00((uint64_t)v38, (uint64_t)v19, (uint64_t *)&unk_10070B640);
  sub_1000CBC00((uint64_t)v33, v53, (uint64_t *)&unk_10070B640);
  if (v42(v19, 1, v52) == 1)
  {
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v38, (uint64_t *)&unk_10070B640);
    if (v98((char *)v53, 1, v101) == 1)
    {
      sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B640);
      uint64_t v54 = v93;
LABEL_17:
      uint64_t v99 = a11;
      uint64_t v67 = v100;
      swift_beginAccess();
      *(unsigned char *)(v67 + *(int *)(v101 + 24)) = 0;
      swift_beginAccess();
      unint64_t v68 = swift_bridgeObjectRetain();
      LODWORD(v101) = sub_100237FBC(v68);
      swift_bridgeObjectRelease();
      uint64_t v69 = swift_allocObject();
      uint64_t v70 = v84;
      *(void *)(v69 + 16) = v54;
      *(void *)(v69 + 24) = v70;
      *(void *)(v69 + 32) = v47;
      uint64_t v71 = (uint64_t)v96;
      *(void *)(v69 + 40) = v95;
      *(void *)(v69 + 48) = v71;
      *(void *)(v69 + 56) = v91;
      *(unsigned char *)(v69 + 64) = a9 & 1;
      *(unsigned char *)(v69 + 65) = a10 & 1;
      *(void *)(v69 + 72) = a11;
      sub_1000CBE70(&qword_100708CE0);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_1005A0030;
      uint64_t v73 = v85;
      *(void *)(v72 + 32) = v47;
      *(void *)(v72 + 40) = v73;
      uint64_t v74 = swift_allocObject();
      *(void *)(v74 + 16) = sub_10023E478;
      *(void *)(v74 + 24) = v69;
      id v75 = v47;
      id v76 = v54;
      swift_retain();
      swift_retain();
      sub_1000C0640(v71);
      id v77 = v73;
      swift_retain();
      uint64_t v78 = v99;
      sub_1000AE818(v72, v86 & 1, v101 & 1, (uint64_t)sub_1000AFB90, v74);

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    goto LABEL_9;
  }
  uint64_t v55 = v88;
  sub_1000CBC00((uint64_t)v19, v88, (uint64_t *)&unk_10070B640);
  if (v42((char *)v53, 1, v101) == 1)
  {
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v38, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v55, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_9:
    sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B690);
    uint64_t v54 = v93;
    goto LABEL_10;
  }
  uint64_t v65 = v87;
  sub_1000C194C(v53, v87, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v66 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v65, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4((uint64_t)v38, (uint64_t *)&unk_10070B640);
  p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy + 16);
  sub_1000C1DEC(v55, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070B640);
  uint64_t v54 = v93;
  if (v66) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v56 = (uint64_t)p_prots[40] + (void)v54;
  swift_beginAccess();
  uint64_t v57 = v89;
  sub_1000CBC00(v56, v89, (uint64_t *)&unk_10070B640);
  uint64_t v58 = v100;
  swift_beginAccess();
  uint64_t v59 = v92;
  sub_1000C1CF0(v58, v92, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v60 = v101;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v94)(v59, 0, 1, v101);
  uint64_t v61 = v97;
  uint64_t v62 = v97 + v99[12];
  sub_1000CBC00(v57, v97, (uint64_t *)&unk_10070B640);
  sub_1000CBC00(v59, v62, (uint64_t *)&unk_10070B640);
  id v63 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v98;
  if (v98((char *)v61, 1, v60) == 1)
  {
    sub_1000CBBA4(v59, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4(v57, (uint64_t *)&unk_10070B640);
    if (v63(v62, 1, v101) == 1)
    {
      sub_1000CBBA4(v97, (uint64_t *)&unk_10070B640);
LABEL_19:
      uint64_t v81 = (uint64_t)v82;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v94)(v82, 1, 1, v101);
      sub_1000C19B4(v81, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  uint64_t v64 = v83;
  sub_1000CBC00(v97, v83, (uint64_t *)&unk_10070B640);
  if (v63(v62, 1, v101) == 1)
  {
    sub_1000CBBA4(v92, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4(v57, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v64, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_15:
    sub_1000CBBA4(v97, (uint64_t *)&unk_10070B690);
    goto LABEL_20;
  }
  uint64_t v79 = v87;
  sub_1000C194C(v62, v87, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v80 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v79, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4(v92, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4(v57, (uint64_t *)&unk_10070B640);
  sub_1000C1DEC(v64, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4(v97, (uint64_t *)&unk_10070B640);
  if (v80) {
    goto LABEL_19;
  }
LABEL_20:
  sub_1000460B0(v95, 0);
  if (v96) {
    v96();
  }
}

void sub_10022FB2C(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7, int a8, char a9, void *a10)
{
  int v67 = a8;
  uint64_t v69 = a7;
  uint64_t v72 = a6;
  uint64_t v71 = a5;
  uint64_t v65 = a4;
  char v66 = a1;
  uint64_t v11 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v63 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v74 = sub_1000CBE70((uint64_t *)&unk_10070B690);
  __chkstk_darwin(v74);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v64 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v68 = (uint64_t)&v62 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v62 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v62 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v62 - v27;
  uint64_t v73 = swift_projectBox();
  uint64_t v29 = a2;
  uint64_t v30 = (uint64_t)a2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  uint64_t v31 = v12;
  sub_1000CBC00(v30, (uint64_t)v26, (uint64_t *)&unk_10070B640);
  uint64_t v32 = v11;
  uint64_t v33 = v11;
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v35 = v34(v26, 1, v33);
  uint64_t v70 = v29;
  if (v35 == 1)
  {
    uint64_t v36 = (uint64_t)v29 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    uint64_t v37 = v36;
    uint64_t v31 = v12;
    sub_1000CBC00(v37, (uint64_t)v28, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v26, (uint64_t)v28, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v32);
  }
  uint64_t v38 = v32;
  uint64_t v39 = v73;
  swift_beginAccess();
  sub_1000C1CF0(v39, (uint64_t)v23, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v40(v23, 0, 1, v38);
  uint64_t v41 = (uint64_t)&v15[*(int *)(v74 + 48)];
  sub_1000CBC00((uint64_t)v28, (uint64_t)v15, (uint64_t *)&unk_10070B640);
  sub_1000CBC00((uint64_t)v23, v41, (uint64_t *)&unk_10070B640);
  if (v34(v15, 1, v38) == 1)
  {
    sub_1000CBBA4((uint64_t)v23, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v28, (uint64_t *)&unk_10070B640);
    if (v34((char *)v41, 1, v38) == 1)
    {
      sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_10070B640);
      uint64_t v42 = v70;
LABEL_13:
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      long long v74 = xmmword_1005A04F0;
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      id v48 = v65;
      *(void *)(inited + 32) = v65;
      unint64_t v75 = inited;
      specialized Array._endMutation()();
      unint64_t v49 = v75;
      uint64_t v50 = swift_initStackObject();
      *(_OWORD *)(v50 + 16) = v74;
      uint64_t v51 = v66;
      *(void *)(v50 + 32) = v66;
      unint64_t v75 = v50;
      specialized Array._endMutation()();
      unint64_t v52 = v75;
      id v53 = v48;
      id v54 = v51;
      uint64_t v55 = sub_1000C1ED4(v49, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = (uint64_t)v64;
      v40(v64, 1, 1, v38);
      sub_1000C19B4(v56, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
      uint64_t v57 = (void *)swift_allocObject();
      uint64_t v58 = v71;
      v57[2] = v42;
      v57[3] = v58;
      uint64_t v59 = (uint64_t)v72;
      uint64_t v60 = v69;
      v57[4] = v72;
      v57[5] = v60;
      swift_retain();
      uint64_t v61 = v42;
      swift_retain();
      sub_1000C0640(v59);
      if (v67) {
        sub_10023C454(1, (unint64_t)v55, a9 & 1, v61, (void (*)(void))sub_10023E510, (uint64_t)v57);
      }
      else {
        sub_10023BB28(a10, (unint64_t)v55, a9 & 1, v61, (void (*)(void))sub_10023E510, (uint64_t)v57);
      }
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    goto LABEL_9;
  }
  uint64_t v43 = v68;
  sub_1000CBC00((uint64_t)v15, v68, (uint64_t *)&unk_10070B640);
  if (v34((char *)v41, 1, v38) == 1)
  {
    sub_1000CBBA4((uint64_t)v23, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v28, (uint64_t *)&unk_10070B640);
    sub_1000C1DEC(v43, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
LABEL_9:
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_10070B690);
    goto LABEL_10;
  }
  uint64_t v44 = (uint64_t)v28;
  uint64_t v45 = v63;
  sub_1000C194C(v41, v63, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  char v46 = static UUID.== infix(_:_:)();
  sub_1000C1DEC(v45, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v23, (uint64_t *)&unk_10070B640);
  sub_1000CBBA4(v44, (uint64_t *)&unk_10070B640);
  sub_1000C1DEC(v43, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
  sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_10070B640);
  uint64_t v42 = v70;
  if (v46) {
    goto LABEL_13;
  }
LABEL_10:
  sub_1000460B0(v71, 0);
  if (v72) {
    v72();
  }
}

uint64_t sub_1002302A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10022AA60();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (id v9 = [Strong hierarchyChangeTransitionCoordinator],
        swift_unknownObjectRelease(),
        !v9))
  {
    id v10 = [objc_allocWithZone((Class)UIViewController) init];
    id v9 = [v10 _definiteTransitionCoordinator];
  }
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v15[4] = sub_10023E548;
  v15[5] = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_100045AE0;
  v15[3] = &unk_100699C20;
  uint64_t v12 = _Block_copy(v15);
  id v13 = a1;
  swift_retain();
  sub_1000C0640(a3);
  swift_release();
  [v9 animateAlongsideTransition:0 completion:v12];
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

NSObject *sub_100230430(void *a1, void *a2, uint64_t a3, void *a4, unint64_t a5, char a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = (void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v15 = *(void **)(a3 + 16);
  id v16 = a2;
  id v17 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a3 + 16) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_1000AF10C(0, v15[2] + 1, 1, v15);
    *uint64_t v14 = v15;
  }
  unint64_t v20 = v15[2];
  unint64_t v19 = v15[3];
  if (v20 >= v19 >> 1)
  {
    uint64_t v15 = sub_1000AF10C((void *)(v19 > 1), v20 + 1, 1, v15);
    *uint64_t v14 = v15;
  }
  void v15[2] = v20 + 1;
  uint64_t v21 = &v15[2 * v20];
  v21[4] = v17;
  v21[5] = a2;
  swift_endAccess();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a3;
  v22[3] = a7;
  v22[4] = a8;
  unint64_t v35 = a5;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = _swiftEmptyArrayStorage;
  unint64_t v24 = a5 >> 62;
  if (!(a5 >> 62))
  {
    uint64_t v25 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    swift_retain_n();
    uint64_t result = swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRetain();
    a7 = (void (*)(uint64_t))_CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (a7)
    {
LABEL_7:
      if ((a5 & 0xC000000000000001) != 0)
      {
        uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v27 = result;
        if (!v24)
        {
LABEL_10:
          if (*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_11:
            sub_100516634(0, 1);
            uint64_t v28 = swift_allocObject();
            *(void *)(v28 + 16) = v23;
            *(void *)(v28 + 24) = a4;
            *(void *)(v28 + 32) = v35;
            *(unsigned char *)(v28 + 40) = a6 & 1;
            *(void *)(v28 + 48) = sub_10023E988;
            *(void *)(v28 + 56) = v22;
            swift_retain();
            swift_retain();
            uint64_t v29 = a4;
            swift_retain();
            sub_10006294C(v27, a6 & 1, v29, (char *)sub_10023E980, v28);
            swift_release();
            swift_release();

            swift_release_n();
LABEL_17:
            swift_release();
            return swift_release();
          }
          goto LABEL_20;
        }
      }
      else
      {
        if (!*(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
        uint64_t result = *(id *)(a5 + 32);
        uint64_t v27 = result;
        if (!v24) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v32) {
        goto LABEL_11;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_100169A54((uint64_t)_swiftEmptyArrayStorage);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v31 = swift_bridgeObjectRetain();
    a7(v31);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1002307F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_100169A54(v4);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  a3(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100230898(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Obtaining default save location...", v16, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v17 = [a1 hostIdentifier];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = v18;
  v21[5] = v20;
  v21[6] = a1;
  v21[7] = v6;
  swift_retain();
  id v22 = a1;
  sub_10001D034(v22, v24, v25, (uint64_t)sub_10023A520, (uint64_t)v21);
  return swift_release();
}

id sub_100230A78(const char *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a1, v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = [self emptyLocation];

  return v9;
}

void sub_100230BE0(char a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *uint64_t v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    swift_beginAccess();
    *(unsigned char *)(a2 + 16) = a1 & 1;
    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 1;
    dispatch_group_leave(a4);
  }
  else
  {
    __break(1u);
  }
}

void sub_100230D60(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v77 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v65 - v13;
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v65 - v14;
  id v16 = (id *)(a2 + 16);
  static Logger.Enumeration.getter();
  id v17 = a1;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v75 = v9;
  uint64_t v76 = v8;
  if (v20)
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    id v22 = v17;
    uint64_t v23 = *(void **)&v17[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    uint64_t v70 = a3;
    if (v23)
    {
      id v24 = [v23 identifier];
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v27 = v26;
    }
    else
    {
      unint64_t v27 = 0xE300000000000000;
      uint64_t v25 = 4271950;
    }
    uint64_t aBlock[6] = sub_10009B0E4(v25, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v17 = v22;

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Building FINode from domain (%s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v8 = v76;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v75 + 8);
    v28(v15, v76);
    a3 = v70;
  }
  else
  {

    uint64_t v28 = *(void (**)(char *, uint64_t))(v9 + 8);
    v28(v15, v8);
  }
  swift_beginAccess();
  id v29 = *v16;
  uint64_t v30 = *(void **)&v17[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  uint64_t v31 = v77;
  if (v30)
  {
    type metadata accessor for DOCRootNode();
    uint64_t v32 = (char *)v29;
    id v33 = v30;
    uint64_t v34 = static DOCRootNode.rootNode(for:)();
    if (v34)
    {
      unint64_t v35 = (void *)v34;
      id v69 = v33;
      id v77 = v32;
      uint64_t v71 = v28;
      uint64_t v36 = v72;
      static Logger.Enumeration.getter();
      swift_unknownObjectRetain_n();
      uint64_t v68 = v35;
      id v37 = v35;
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        char v66 = (void *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        id v41 = [a3 displayName];
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        int v67 = v17;
        uint64_t v43 = v42;
        unint64_t v45 = v44;

        uint64_t v78 = sub_10009B0E4(v43, v45, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2112;
        uint64_t v78 = (uint64_t)v37;
        id v46 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v66 = v68;

        id v17 = v67;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Resolved Node (%s to (%@", (uint8_t *)v40, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v47 = v76;
        id v48 = v72;
      }
      else
      {

        swift_unknownObjectRelease_n();
        id v48 = v36;
        uint64_t v47 = v8;
      }
      v71(v48, v47);
      uint64_t v58 = v74;
      id v59 = [v17 identifier];
      id v29 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v59 node:v37];

      goto LABEL_19;
    }
  }
  else
  {
    id v49 = v29;
  }
  static Logger.Enumeration.getter();
  swift_unknownObjectRetain_n();
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v71 = v28;
    unint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = (char *)swift_slowAlloc();
    aBlock[0] = (uint64_t)v72;
    *(_DWORD *)unint64_t v52 = 136315138;
    id v69 = v52 + 4;
    id v53 = v17;
    id v54 = [a3 displayName];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v57 = v56;

    id v17 = v53;
    uint64_t v78 = sub_10009B0E4(v55, v57, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Couldn't resolve Node (%s to an FINode", v52, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v71(v77, v76);
  }
  else
  {

    swift_unknownObjectRelease_n();
    v28(v31, v8);
  }
  uint64_t v58 = v74;
LABEL_19:
  uint64_t v60 = v73;
  uint64_t v61 = (void *)swift_allocObject();
  v61[2] = v60;
  v61[3] = v58;
  v61[4] = v29;
  v61[5] = v17;
  aBlock[4] = (uint64_t)sub_10023DEDC;
  aBlock[5] = (uint64_t)v61;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_1006991F8;
  uint64_t v62 = _Block_copy(aBlock);
  uint64_t v63 = v17;
  swift_retain();
  id v64 = v29;
  swift_release();
  DOCRunInMainThread();

  _Block_release(v62);
}

uint64_t sub_10023157C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v30 = a7;
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17);
  os_log_type_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = (void *)result;
    id v29 = *(id *)(result + OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue);

    id v22 = (void *)swift_allocObject();
    v22[2] = a4;
    v22[3] = a1;
    v22[4] = a5;
    v22[5] = a6;
    uint64_t v23 = v30;
    v22[6] = a2;
    v22[7] = v23;
    v22[8] = a8;
    aBlock[4] = sub_10023DF40;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100699248;
    id v24 = _Block_copy(aBlock);
    swift_retain();
    id v25 = a1;
    id v26 = a5;
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v27 = v29;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v14);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v32);
    return swift_release();
  }
  return result;
}

void sub_1002318C4(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v18 = *(void **)(a1 + 16);
  if (a2)
  {
    id v19 = v18;
    id v20 = a2;
    id v21 = [a3 identifier];
    id v22 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v21 node:v20];
  }
  else
  {
    id v22 = v18;
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    swift_errorRetain();
    uint64_t v23 = Logger.logObject.getter();
    int v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, (os_log_type_t)v43))
    {
      os_log_t v39 = v23;
      uint64_t v40 = v15;
      uint64_t v41 = a6;
      uint64_t v42 = a7;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      aBlock[0] = v38;
      *(_DWORD *)uint64_t v24 = 136315394;
      id v25 = [a4 displayName:v24 + 4 v38];
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      uint64_t v44 = sub_10009B0E4(v26, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      if (a5)
      {
        swift_getErrorValue();
        uint64_t v29 = Error.localizedDescription.getter();
        unint64_t v31 = v30;
      }
      else
      {
        unint64_t v31 = 0xE300000000000000;
        uint64_t v29 = 4271950;
      }
      uint64_t v44 = sub_10009B0E4(v29, v31, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v32 = v39;
      _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v43, "Failed to create FINode for node (%s), error: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v14);
      a6 = v41;
      a7 = v42;
    }
    else
    {
      swift_unknownObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a6;
  uint64_t v33[3] = a7;
  v33[4] = v22;
  v33[5] = a3;
  aBlock[4] = (uint64_t)sub_10023DEDC;
  aBlock[5] = (uint64_t)v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_100699298;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  id v35 = a3;
  id v36 = v22;
  swift_release();
  DOCRunInMainThread();

  _Block_release(v34);
}

uint64_t sub_100231D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  os_log_type_t v51 = a6;
  uint64_t v52 = a8;
  uint64_t v47 = a7;
  uint64_t v48 = a5;
  uint64_t v54 = a4;
  uint64_t v50 = a2;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v53 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17 - 8);
  id v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a3;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v22 = (void *)result;
    id v46 = *(id *)(result + OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue);

    sub_1000CBC00(a1, (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1007076B0);
    unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v45 = v15;
    unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = v10;
    uint64_t v43 = v11;
    unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v44 = v14;
    unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = v13;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v54;
    sub_1000CBE0C((uint64_t)v20, v28 + v23, &qword_1007076B0);
    uint64_t v29 = v49;
    *(void *)(v28 + v24) = v48;
    *(void *)(v28 + v25) = v29;
    uint64_t v31 = v50;
    unint64_t v30 = v51;
    *(void *)(v28 + v26) = v51;
    *(void *)(v28 + v27) = v31;
    os_log_t v32 = (void *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v33 = v52;
    void *v32 = v47;
    v32[1] = v33;
    aBlock[4] = sub_10023E0E4;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006992E8;
    uint64_t v34 = _Block_copy(aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    id v35 = v30;
    swift_errorRetain();
    swift_retain();
    id v36 = v53;
    static DispatchQoS.unspecified.getter();
    uint64_t v55 = _swiftEmptyArrayStorage;
    sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v37 = v41;
    uint64_t v38 = v42;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    os_log_t v39 = v46;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v44);
    return swift_release();
  }
  return result;
}

void sub_100232190(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v116 = a8;
  uint64_t v115 = a7;
  uint64_t v113 = a6;
  id v117 = a5;
  uint64_t v112 = a4;
  char v118 = a3;
  id v120 = (id)a2;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v121 = *(void *)(v9 - 8);
  uint64_t v122 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v114 = (char *)&v104 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v104 - v15;
  uint64_t v17 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  id v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v104 - v21;
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  BOOL v119 = (char *)&v104 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v104 - v30;
  swift_beginAccess();
  os_log_t v32 = *(void **)(a1 + 16);
  sub_1000CBC00((uint64_t)v120, (uint64_t)v22, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) != 1)
  {
    uint64_t v113 = v20;
    int v110 = v27;
    id v108 = v12;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v22, v23);
    id v33 = v32;
    id v46 = v114;
    static Logger.Enumeration.getter();
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    uint64_t v111 = v31;
    unint64_t v109 = v47;
    v47(v119, v31, v23);
    uint64_t v48 = v118;
    swift_unknownObjectRetain_n();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v106 = v23;
      uint64_t v52 = v51;
      uint64_t v107 = swift_slowAlloc();
      aBlock[0] = v107;
      *(_DWORD *)uint64_t v52 = 136315394;
      id v53 = v48;
      id v54 = [v48 displayName];
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v120 = v33;
      uint64_t v56 = v55;
      os_log_t v105 = v49;
      unint64_t v58 = v57;

      uint64_t v123 = sub_10009B0E4(v56, v58, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      id v59 = v119;
      uint64_t v60 = URL.absoluteString.getter();
      uint64_t v123 = sub_10009B0E4(v60, v61, aBlock);
      uint64_t v48 = v53;
      id v33 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      LOBYTE(v58) = v50;
      uint64_t v62 = *(void (**)(char *, uint64_t))(v24 + 8);
      uint64_t v63 = v59;
      uint64_t v64 = v106;
      v62(v63, v106);
      os_log_t v65 = v105;
      _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v58, "Building FINode for node (%s) with URL: %s.", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v66 = v122;
      int v67 = *(char **)(v121 + 8);
      uint64_t v68 = v46;
    }
    else
    {
      swift_unknownObjectRelease_n();
      uint64_t v62 = *(void (**)(char *, uint64_t))(v24 + 8);
      v62(v119, v23);

      uint64_t v66 = v122;
      int v67 = *(char **)(v121 + 8);
      uint64_t v68 = v46;
      uint64_t v64 = v23;
    }
    BOOL v119 = v67;
    ((void (*)(char *, uint64_t))v67)(v68, v66);
    uint64_t v69 = (uint64_t)v113;
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    uint64_t v70 = v111;
    uint64_t v71 = v109;
    v109((char *)v69, v111, v64);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v69, 0, 1, v64);
    uint64_t v72 = (void *)static FINode.docNode(from:)();
    sub_1000CBBA4(v69, &qword_1007076B0);
    uint64_t v73 = v110;
    if (v72)
    {
      uint64_t v74 = v62;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong)
      {

        id v93 = v117;
        id v94 = [v117 identifier];
        id v95 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v94 node:v72];

        v74(v70, v64);
        id v33 = v95;
LABEL_19:
        uint64_t v96 = v116;
        uint64_t v97 = v115;
        goto LABEL_20;
      }
      uint64_t v76 = (void *)Strong;
      id v77 = sub_10001F50C(v72, v33);

      v74(v70, v64);
      id v33 = v77;
    }
    else
    {
      uint64_t v114 = (char *)v62;
      char v118 = (void *)v24;

      uint64_t v78 = v108;
      static Logger.Enumeration.getter();
      v71(v73, v70, v64);
      swift_unknownObjectRetain_n();
      uint64_t v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.error.getter();
      BOOL v81 = os_log_type_enabled(v79, v80);
      uint64_t v82 = v119;
      if (v81)
      {
        uint64_t v83 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        BOOL v119 = v82;
        *(_DWORD *)uint64_t v83 = 136315394;
        uint64_t v113 = (char *)(v83 + 4);
        id v84 = [v48 displayName];
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v120 = v33;
        uint64_t v86 = v85;
        unint64_t v88 = v87;

        uint64_t v123 = sub_10009B0E4(v86, v88, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v83 + 12) = 2080;
        uint64_t v89 = v110;
        uint64_t v90 = URL.absoluteString.getter();
        uint64_t v123 = sub_10009B0E4(v90, v91, aBlock);
        id v33 = v120;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v92 = (void (*)(char *, uint64_t))v114;
        ((void (*)(char *, uint64_t))v114)(v89, v64);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "Failed to create FINode for node (%s) with URL: %s. Does the node exist on disk? It should.", (uint8_t *)v83, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v119)(v108, v122);
        v92(v111, v64);
      }
      else
      {

        unint64_t v98 = v73;
        uint64_t v99 = (void (*)(char *, uint64_t))v114;
        ((void (*)(char *, uint64_t))v114)(v98, v64);
        swift_unknownObjectRelease_n();
        ((void (*)(char *, uint64_t))v82)(v78, v122);
        v99(v70, v64);
      }
    }
LABEL_18:
    id v93 = v117;
    goto LABEL_19;
  }
  id v33 = v32;
  sub_1000CBBA4((uint64_t)v22, &qword_1007076B0);
  static Logger.Enumeration.getter();
  uint64_t v34 = v118;
  swift_unknownObjectRetain();
  id v35 = v113;
  swift_errorRetain();
  swift_unknownObjectRetain();
  swift_errorRetain();
  id v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v36, v37))
  {
    swift_unknownObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v121 + 8))(v16, v122);
    goto LABEL_18;
  }
  BOOL v119 = v16;
  id v120 = v33;
  uint64_t v38 = swift_slowAlloc();
  aBlock[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v38 = 136315394;
  id v39 = [v34 displayName];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v42 = v41;

  uint64_t v123 = sub_10009B0E4(v40, v42, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_unknownObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v38 + 12) = 2080;
  if (v35)
  {
    swift_getErrorValue();
    uint64_t v43 = Error.localizedDescription.getter();
    unint64_t v45 = v44;
  }
  else
  {
    unint64_t v45 = 0xE300000000000000;
    uint64_t v43 = 4271950;
  }
  id v93 = v117;
  uint64_t v123 = sub_10009B0E4(v43, v45, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v36, v37, "Couldn't get URL to resolve node (%s, error: %s", (uint8_t *)v38, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v121 + 8))(v119, v122);
  uint64_t v96 = v116;
  uint64_t v97 = v115;
  id v33 = v120;
LABEL_20:
  uint64_t v100 = (void *)swift_allocObject();
  v100[2] = v97;
  v100[3] = v96;
  v100[4] = v33;
  v100[5] = v93;
  aBlock[4] = (uint64_t)sub_10023DEDC;
  aBlock[5] = (uint64_t)v100;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_100699338;
  uint64_t v101 = _Block_copy(aBlock);
  swift_retain();
  id v102 = v93;
  id v103 = v33;
  swift_release();
  DOCRunInMainThread();

  _Block_release(v101);
}

void sub_100232E38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = sub_1000C5678((uint64_t)a4);
  if (v10)
  {
    uint64_t v12 = (void *)v10;
    uint64_t v13 = v11;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = a1;
    v14[3] = v12;
    v14[4] = v13;
    v14[5] = a2;
    v14[6] = a3;
    v14[7] = a4;
    v14[8] = a5;
    uint64_t v25 = sub_10023E788;
    uint64_t v26 = v14;
    uint64_t v21 = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1000666D8;
    uint64_t v24 = &unk_100699EA0;
    uint64_t v15 = _Block_copy(&v21);
    swift_bridgeObjectRetain();
    id v16 = v12;
    id v17 = v13;
    swift_retain();
    id v18 = a4;
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v15);
  }
  else
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = a3;
    uint64_t v25 = sub_1000D8564;
    uint64_t v26 = (void *)v19;
    uint64_t v21 = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_1000666D8;
    uint64_t v24 = &unk_100699E50;
    id v20 = _Block_copy(&v21);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v20);
  }
}

void sub_100233018(unint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  if (!a1)
  {
    uint64_t v24 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
    *(void *)(v25 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v25 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v25 + 32) = a3;
    id v26 = a3;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a4;
    *(void *)(v27 + 24) = a5;
    uint64_t v56 = sub_1000D8564;
    uint64_t v57 = v27;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v28 = &unk_100699EF0;
LABEL_22:
    id v54 = sub_1000666D8;
    uint64_t v55 = v28;
    uint64_t v48 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v48);
    return;
  }
  uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
    goto LABEL_21;
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    unint64_t v44 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1005A0030;
    *(void *)(v45 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v45 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v45 + 32) = a3;
    id v46 = a3;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = a4;
    *(void *)(v47 + 24) = a5;
    uint64_t v56 = sub_1000D8564;
    uint64_t v57 = v47;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v28 = &unk_100699FB8;
    goto LABEL_22;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    id v17 = v16;
    uint64_t v18 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    if (static NSObject.== infix(_:_:)())
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
      *(void *)(v20 + 56) = v18;
      *(void *)(v20 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
      *(void *)(v20 + 32) = a3;
      id v21 = a3;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = a4;
      *(void *)(v22 + 24) = a5;
      uint64_t v56 = sub_1000D8564;
      uint64_t v57 = v22;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v53 = 1107296256;
      id v54 = sub_1000666D8;
      uint64_t v55 = &unk_100699F68;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v23);

      return;
    }
    uint64_t v50 = a7;
    uint64_t v51 = a4;
    id v29 = [v17 itemIdentifier];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;
    if (v30 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v32 == v33) {
      int v34 = 1;
    }
    else {
      int v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = v17;
    if ([a3 isTrashed])
    {
      if (((v34 | objc_msgSend(v17, "isRootItem", v17)) & 1) == 0)
      {
LABEL_16:
        id v35 = (void *)DOCNode.sourceIdentifier.getter();
        id v36 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v35 node:v17];

LABEL_19:
        os_log_type_t v37 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_1005A0030;
        *(void *)(v38 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        *(void *)(v38 + 64) = sub_1000C5A24((unint64_t *)&qword_10070B688, (unint64_t *)&unk_1007085C0);
        *(void *)(v38 + 32) = v36;
        id v39 = v36;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v40 = (void *)swift_allocObject();
        _DWORD v40[2] = a6;
        v40[3] = a2;
        v40[4] = a3;
        v40[5] = v51;
        v40[6] = a5;
        v40[7] = v50;
        v40[8] = a1;
        swift_retain();
        unint64_t v41 = a6;
        id v42 = a2;
        id v43 = a3;
        swift_retain();
        swift_retain();
        sub_10006294C(v39, 0, v41, (char *)sub_10023E800, (uint64_t)v40);

        swift_release_n();
        return;
      }
    }
    else if ((v34 & 1) == 0)
    {
      goto LABEL_16;
    }
    id v36 = [self trashedItemsLocation];
    goto LABEL_19;
  }
  if (*(void *)(v14 + 16))
  {
    id v16 = *(id *)(a1 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_100233744(id a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  id v17 = (unint64_t *)(a3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v18 = *v17;
  if (!(v18 >> 62))
  {
    id v19 = *(id *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v20 = a2;
    swift_bridgeObjectRetain();
    id v21 = a1;
    if (v19) {
      goto LABEL_3;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  id v41 = a2;
  swift_bridgeObjectRetain();
  id v42 = a1;
  id v19 = (id)_CocoaArrayWrapper.endIndex.getter();
  if (!v19) {
    goto LABEL_32;
  }
LABEL_3:
  if ((v18 & 0xC000000000000001) != 0)
  {
    id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v22 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v22)
    {
      __break(1u);
      goto LABEL_37;
    }
    id v23 = *(id *)(v18 + 32);
  }
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  id v26 = a4;
  id v27 = v24;
  char v28 = static NSObject.== infix(_:_:)();

  if ((v28 & 1) == 0)
  {
LABEL_33:
    id v43 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1005A0030;
    *(void *)(v44 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    *(void *)(v44 + 64) = sub_1000C5A24((unint64_t *)&qword_10070B688, (unint64_t *)&unk_1007085C0);
    *(void *)(v44 + 32) = a1;
    id v19 = a1;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = a6;
    *(void *)(v45 + 24) = a7;
    uint64_t v56 = sub_1000D8564;
    uint64_t v57 = v45;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    id v54 = sub_1000666D8;
    uint64_t v55 = &unk_10069A008;
    id v46 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v46);
    a1 = a2;
    goto LABEL_34;
  }
  uint64_t v51 = a6;
  uint64_t v9 = a9;
  uint64_t v50 = a8;
  swift_beginAccess();
  id v19 = a2;
  a1 = a1;
  sub_100515480(0, 0, (uint64_t)a1, (uint64_t)a2);
  swift_endAccess();
  uint64_t v22 = a9 & 0xFFFFFFFFFFFFFF8;
  a2 = (void *)(a9 >> 62);
  if (!(a9 >> 62))
  {
    uint64_t v29 = *(void *)((a9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v29 >= 1) {
      uint64_t v30 = 1;
    }
    else {
      uint64_t v30 = *(void *)((a9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRetain();
    if (v29 >= (unint64_t)v30)
    {
LABEL_12:
      if ((v9 & 0xC000000000000001) != 0 && (unint64_t)v29 >= 2)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        Swift::Int v31 = v30;
        do
        {
          Swift::Int v32 = v31 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v31);
          Swift::Int v31 = v32;
        }
        while (v29 != v32);
      }
      if (a2)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.subscript.getter();
        uint64_t v34 = v36;
        uint64_t v30 = v37;
        unint64_t v35 = v38;
        swift_bridgeObjectRelease_n();
        if ((v35 & 1) == 0) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v33 = v9 & 0xFFFFFFFFFFFFFF8;
        uint64_t v34 = (v9 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v35 = (2 * v29) | 1;
        if ((v35 & 1) == 0) {
          goto LABEL_20;
        }
      }
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      id v39 = (void *)swift_dynamicCastClass();
      if (!v39)
      {
        swift_unknownObjectRelease();
        id v39 = _swiftEmptyArrayStorage;
      }
      uint64_t v40 = v39[2];
      swift_release();
      if (__OFSUB__(v35 >> 1, v30))
      {
        __break(1u);
      }
      else if (v40 == (v35 >> 1) - v30)
      {
        uint64_t v30 = swift_dynamicCastClass();
        if (!v30)
        {
          swift_unknownObjectRelease();
          uint64_t v30 = (uint64_t)_swiftEmptyArrayStorage;
        }
LABEL_27:
        swift_unknownObjectRelease();
        uint64_t v25 = v50;
        a6 = v51;
        if ((v30 & 0x8000000000000000) == 0 && (v30 & 0x4000000000000000) == 0)
        {
          if (*(void *)(v30 + 16))
          {
LABEL_30:
            sub_100232E38(v30, a6, a7, a3, v25);
            swift_release();
LABEL_34:

            return;
          }
LABEL_49:
          swift_release();
          uint64_t v48 = swift_allocObject();
          *(void *)(v48 + 16) = a6;
          *(void *)(v48 + 24) = a7;
          uint64_t v56 = sub_1000D8564;
          uint64_t v57 = v48;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v53 = 1107296256;
          id v54 = sub_1000666D8;
          uint64_t v55 = &unk_10069A058;
          uint64_t v49 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          DOCRunInMainThread();
          _Block_release(v49);
          goto LABEL_34;
        }
LABEL_48:
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_30;
        }
        goto LABEL_49;
      }
      swift_unknownObjectRelease();
LABEL_20:
      uint64_t v30 = (uint64_t)sub_1002F5240(v33, v34, v30, v35);
      goto LABEL_27;
    }
    goto LABEL_47;
  }
LABEL_37:
  if (v9 < 0) {
    a6 = v9;
  }
  else {
    a6 = v22;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
  if ((v47 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = v47;
    if (v47 >= 1) {
      uint64_t v30 = 1;
    }
    else {
      uint64_t v30 = v47;
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v25 >= v30)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v25 >= v29) {
        goto LABEL_12;
      }
      __break(1u);
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  __break(1u);
}

void sub_100233D3C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  void v12[5] = a5;
  void v12[6] = a6;
  v12[7] = a1;
  v17[4] = sub_10023E704;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_1000666D8;
  v17[3] = &unk_100699DD8;
  uint64_t v13 = _Block_copy(v17);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v13);
}

uint64_t sub_100233E54(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    os_log_type_t v7 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10059B760;
    *(void *)(v8 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v8 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v8 + 32) = a3;
    id v9 = a3;
    uint64_t v10 = _convertErrorToNSError(_:)();
    *(void *)(v8 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v8 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v8 + 72) = v10;
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a5;
    *(void *)(v15 + 24) = a4;
    swift_retain();
    sub_100232E38(a6, (uint64_t)sub_10023E720, v15, a4, a5);
    return swift_release();
  }
}

uint64_t sub_100234024(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B6C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  uint64_t v8 = *(void (***)(char *, void, uint64_t, uint64_t))(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v41 = (uint64_t)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    id v43 = v8;
    id v14 = &a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    uint64_t v44 = v14;
    uint64_t v48 = *(void *)v14;
    uint64_t v47 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v15 = 32;
    do
    {
      id v16 = *(id *)(v12 + v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v15 += 16;
      --v13;
    }
    while (v13);
    unint64_t v17 = (unint64_t)v47;
    swift_bridgeObjectRelease();
    sub_100515604(0, 0, v17);
    uint64_t v18 = v48;
    swift_bridgeObjectRetain();
    uint64_t v19 = v41;
    UUID.init()();
    uint64_t v20 = *(int *)(updated + 20);
    v40[1] = v18;
    *(void *)(v19 + v20) = v18;
    sub_1000C1CF0(v19, (uint64_t)v6, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    v43[7](v6, 0, 1, updated);
    uint64_t v21 = (uint64_t)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController__currentUpdateExpectation];
    swift_beginAccess();
    sub_10023E834((uint64_t)v6, v21);
    swift_endAccess();
    swift_beginAccess();
    uint64_t v22 = *v10;
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v42 = v22;
    if (v23)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v24 = v23 - 1;
      if ((unint64_t)(v23 - 1) < *(void *)(v22 + 16))
      {
        uint64_t v25 = (void **)(v22 + 16 * v23 + 24);
        do
        {
          id v27 = *(v25 - 1);
          id v26 = *v25;
          uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
          uint64_t v29 = v26;
          if (Strong)
          {
            [Strong hierarchyController:a2 willPrepend:v27 source:v29];
            swift_unknownObjectRelease();
          }
          else
          {
            id v30 = v27;
          }
          unint64_t v46 = *(void *)v44;
          if (v46 >> 62)
          {
            swift_bridgeObjectRetain_n();
            id v37 = v27;
            uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v38 < 0)
            {
              __break(1u);
              break;
            }
          }
          else
          {
            id v31 = v27;
            swift_bridgeObjectRetain();
          }
          id v43 = v29;
          sub_10051546C(0, 0, (uint64_t)v27);
          unint64_t v32 = v46;
          uint64_t v45 = a2;
          swift_getKeyPath();
          _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
          uint64_t v45 = a2;
          swift_getKeyPath();
          _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
          NSString v33 = String._bridgeToObjectiveC()();
          [a2 willChangeValueForKey:v33];

          *(void *)uint64_t v44 = v32;
          swift_bridgeObjectRelease();
          NSString v34 = String._bridgeToObjectiveC()();
          [a2 didChangeValueForKey:v34];

          uint64_t v45 = a2;
          swift_getKeyPath();
          _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
          uint64_t v45 = a2;
          swift_getKeyPath();
          _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
          unint64_t v35 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v35)
          {
            id v36 = v43;
            [v35 hierarchyController:a2 didPrepend:v27 source:v43];

            swift_unknownObjectRelease();
            if (!v24) {
              goto LABEL_20;
            }
          }
          else
          {

            if (!v24) {
              goto LABEL_20;
            }
          }
          --v24;
          v25 -= 2;
        }
        while (v24 < *(void *)(v42 + 16));
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRelease_n();
    }
    uint64_t v39 = v41;
    sub_100225EFC(v41);
    sub_1000C1DEC(v39, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100234578(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a3;
  v12[4] = a2;
  void v12[5] = a4;
  void v12[6] = a5;
  v12[7] = a6;
  v16[4] = sub_1000D76DC;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1000666D8;
  v16[3] = &unk_100699630;
  uint64_t v13 = _Block_copy(v16);
  swift_unknownObjectRetain();
  id v14 = a3;
  swift_errorRetain();
  id v15 = a4;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v13);
}

void sub_10023468C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a1;
  v10[4] = sub_10023DE3C;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000666D8;
  v10[3] = &unk_100699068;
  uint64_t v8 = _Block_copy(v10);
  id v9 = a1;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v8);
}

void DOCHierarchyController.init()()
{
}

uint64_t sub_10023486C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v7);
  uint64_t v11 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  aBlock[4] = sub_10023F258;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_10069A5D0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v0;
  static DispatchQoS.unspecified.getter();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  return swift_release();
}

void sub_100234C08(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v67 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for DispatchTime();
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v5 = __chkstk_darwin(v72);
  uint64_t v69 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v70 = (char *)&v66 - v7;
  uint64_t v8 = (void *)static DOCLog.UI.getter();
  uint64_t v9 = static os_log_type_t.debug.getter();
  unint64_t v87 = (NSString *)sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  long long v86 = xmmword_1005A0030;
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  *(void *)(v10 + 56) = ObjectType;
  *(void *)(v10 + 64) = sub_100076EA4((unint64_t *)&unk_10070B6F0, (void (*)(uint64_t))type metadata accessor for DOCHierarchyController);
  *(void *)(v10 + 32) = a1;
  uint64_t v11 = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v82 = v11;
  uint64_t v12 = (SEL *)&v11[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  uint64_t v13 = (uint64_t)*v12;
  unint64_t v14 = (unint64_t)*v12 >> 62;
  uint64_t v68 = v3;
  uint64_t v85 = v12;
  if (v14)
  {
    if (v13 < 0) {
      uint64_t v12 = (SEL *)v13;
    }
    else {
      uint64_t v12 = (SEL *)(v13 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain_n();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    if (v15) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v15)
    {
LABEL_3:
      if (v15 < 1)
      {
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v16 = 0;
      do
      {
        if ((v13 & 0xC000000000000001) != 0) {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(v13 + 8 * v16 + 32);
        }
        uint64_t v18 = v17;
        ++v16;
        uint64_t v19 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = v86;
        *(void *)(v20 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        *(void *)(v20 + 64) = sub_1000C5A24((unint64_t *)&qword_10070B688, (unint64_t *)&unk_1007085C0);
        *(void *)(v20 + 32) = v18;
        id v21 = v18;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
      }
      while (v15 != v16);
    }
  }
  swift_bridgeObjectRelease_n();
  dispatch_group_t v83 = dispatch_group_create();
  uint64_t v9 = (uint64_t)v85;
  if (*v85 >> 62) {
    goto LABEL_38;
  }
  uint64_t v22 = *(void *)((*v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v12 = (SEL *)&unk_1006E3000;
    if (v22 <= 1) {
      goto LABEL_21;
    }
    swift_beginAccess();
    uint64_t v23 = *(void *)v9;
    if ((*(void *)v9 & 0xC000000000000001) == 0) {
      break;
    }
LABEL_46:
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_19:
    uint64_t v25 = v24;
    swift_endAccess();
    id v26 = [v25 v12[331]];

    if (v26)
    {
      unint64_t v87 = (NSString *)[v26 parentItemIdentifier];

      goto LABEL_22;
    }
LABEL_21:
    unint64_t v87 = NSFileProviderRootContainerItemIdentifier;
LABEL_22:
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = 0;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v27 = swift_allocObject();
    uint64_t v79 = v27;
    *(void *)(v27 + 16) = 0;
    char v28 = (void *)(v27 + 16);
    uint64_t v29 = *(void *)v9;
    if (*(void *)v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      id v31 = &off_10059B000;
      if (!v30)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        id v54 = v69;
        static DispatchTime.now()();
        uint64_t v55 = v70;
        + infix(_:_:)();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v71 + 8);
        uint64_t v57 = v72;
        v56(v54, v72);
        OS_dispatch_group.wait(timeout:)();
        v56(v55, v57);
        if (static DispatchTimeoutResult.== infix(_:_:)())
        {
          unint64_t v58 = v66;
          static Logger.UI.getter();
          id v59 = Logger.logObject.getter();
          os_log_type_t v60 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v59, v60))
          {
            unint64_t v61 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v61 = 0;
            _os_log_impl((void *)&_mh_execute_header, v59, v60, "Time-out occurred for validating locations. Continuing manually...", v61, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v67 + 8))(v58, v68);
        }
        uint64_t v62 = swift_allocObject();
        uint64_t v63 = v82;
        *(void *)(v62 + 16) = v81;
        *(void *)(v62 + 24) = v63;
        uint64_t v92 = sub_10023F274;
        uint64_t v93 = v62;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v89 = 1107296256;
        uint64_t v90 = sub_1000666D8;
        unint64_t v91 = &unk_10069A670;
        uint64_t v64 = _Block_copy(&aBlock);
        id v65 = v63;
        swift_retain();
        swift_release();
        DOCRunInMainThread();
        _Block_release(v64);
        swift_release();
        swift_release();
        swift_release();

        return;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      id v31 = &off_10059B000;
      if (!v30) {
        goto LABEL_40;
      }
    }
    uint64_t v77 = OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager;
    unint64_t v32 = v29 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v76 = &v90;
    uint64_t v9 = 4;
    uint64_t v33 = *((void *)v31 + 233);
    uint64_t v75 = v29;
    uint64_t v78 = v28;
    uint64_t v74 = v30;
    unint64_t v73 = v29 & 0xC000000000000001;
    while (1)
    {
      id v36 = v32
          ? (NSString *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (NSString *)*(id *)(v29 + 8 * v9);
      unint64_t v35 = v36;
      uint64_t v37 = v9 - 3;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      id v38 = [v36 v12[331]];
      if (v38)
      {
        uint64_t v39 = v38;
        if (([(NSString *)v35 isRoot] & 1) == 0)
        {
          id v84 = v39;
          dispatch_group_t v40 = v83;
          dispatch_group_enter(v83);
          uint64_t v41 = v12;
          uint64_t v42 = v79;
          *(void *)&long long v86 = *(void *)(v79 + 16);
          id v43 = (void *)swift_allocObject();
          v43[2] = v35;
          v43[3] = v40;
          uint64_t v44 = v80;
          v43[4] = v42;
          v43[5] = v44;
          v43[6] = v81;
          uint64_t v45 = v87;
          uint64_t v85 = v35;
          unint64_t v46 = v40;
          swift_retain();
          swift_retain();
          swift_retain();
          id v47 = [v85 v41[331]];
          if (!v47) {
            goto LABEL_48;
          }
          uint64_t v48 = v47;
          uint64_t v49 = (void *)swift_allocObject();
          v49[2] = sub_10023F2D4;
          v49[3] = v43;
          v49[4] = v86;
          v49[5] = v45;
          uint64_t v50 = *(void **)&v82[v77];
          *(void *)&long long v86 = v45;
          swift_retain();
          id v51 = [v48 itemID];
          uint64_t v52 = swift_allocObject();
          *(void *)(v52 + 16) = sub_10023F324;
          *(void *)(v52 + 24) = v49;
          uint64_t v92 = sub_10023F918;
          uint64_t v93 = v52;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v89 = v33;
          uint64_t v90 = sub_10000CAE4;
          unint64_t v91 = &unk_10069A710;
          uint64_t v53 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v50 fetchItemForItemID:v51 completionHandler:v53];
          _Block_release(v53);

          swift_release();
          swift_release();

          if (__OFADD__(*v78, 1))
          {
            __break(1u);
            break;
          }
          ++*v78;
          uint64_t v12 = (SEL *)&unk_1006E3000;
          uint64_t v29 = v75;
          uint64_t v30 = v74;
          unint64_t v32 = v73;
          uint64_t v39 = v84;
        }
        NSString v34 = (NSString *)[v39 itemIdentifier];

        unint64_t v35 = v87;
        unint64_t v87 = v34;
      }

      ++v9;
      if (v37 == v30) {
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v24 = *(id *)(v23 + 40);
    goto LABEL_19;
  }
  __break(1u);
LABEL_48:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100235714(char a1, uint64_t a2, void *a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0230;
  uint64_t v25 = a3;
  id v14 = [a3 shortDescription];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v18 = sub_100073F48();
  *(void *)(v13 + 32) = v15;
  *(void *)(v13 + 40) = v17;
  *(void *)(v13 + 96) = &type metadata for Int;
  *(void *)(v13 + 104) = &protocol witness table for Int;
  *(void *)(v13 + 64) = v18;
  *(void *)(v13 + 72) = a2;
  uint64_t v19 = 28494;
  if (a1) {
    uint64_t v19 = 7562585;
  }
  unint64_t v20 = 0xE200000000000000;
  if (a1) {
    unint64_t v20 = 0xE300000000000000;
  }
  *(void *)(v13 + 136) = &type metadata for String;
  *(void *)(v13 + 144) = v18;
  *(void *)(v13 + 112) = v19;
  *(void *)(v13 + 120) = v20;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a1)
  {
  }
  else
  {
    swift_beginAccess();
    uint64_t v21 = *(void *)(a5 + 16);
    swift_beginAccess();
    if (v21 < *(void *)(a6 + 16))
    {
      swift_beginAccess();
      *(void *)(a6 + 16) = v21;
      swift_beginAccess();
      uint64_t v22 = *(void **)(a7 + 16);
      *(void *)(a7 + 16) = v25;

      id v23 = v25;
    }
  }
  dispatch_group_leave(a4);
}

void sub_10023592C(uint64_t a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  swift_beginAccess();
  uint64_t v5 = *(void **)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = (unint64_t *)&a2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    unint64_t v7 = *v6;
    id v8 = v5;
    swift_bridgeObjectRetain();
    char v9 = sub_1000BB74C((uint64_t)v8, v7);
    swift_bridgeObjectRelease();
    if (v9)
    {
      uint64_t v10 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10059B760;
      id v12 = [v8 shortDescription];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      *(void *)(v11 + 56) = &type metadata for String;
      *(void *)(v11 + 64) = sub_100073F48();
      *(void *)(v11 + 32) = v13;
      *(void *)(v11 + 40) = v15;
      *(void *)(v11 + 96) = ObjectType;
      *(void *)(v11 + 104) = sub_100076EA4((unint64_t *)&unk_10070B6F0, (void (*)(uint64_t))type metadata accessor for DOCHierarchyController);
      *(void *)(v11 + 72) = a2;
      uint64_t v16 = a2;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      sub_10023CDB0((uint64_t)v8);
    }
  }
}

uint64_t sub_100235B3C(void *a1, uint64_t a2, uint64_t (*a3)(id, uint64_t), uint64_t a4, uint64_t a5)
{
  id v7 = 0;
  if (!a2 && a1)
  {
    id v8 = a1;
    id v9 = [v8 effectiveParentItemIdentifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
    if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0 && ![v8 isAppContainer]) {
        goto LABEL_13;
      }
    }
    if ([v8 isActionable])
    {
      id v7 = [v8 isReadable];
LABEL_14:

      return a3(v7, a5);
    }
LABEL_13:
    id v7 = 0;
    goto LABEL_14;
  }
  return a3(v7, a5);
}

void sub_100235C70(char *a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (!a1 || (id v9 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain]) == 0)
  {
    a2(0);
    return;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a4 && v13 == a5)
  {
    uint64_t v19 = a1;
    id v20 = v9;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t v16 = a1;
  id v17 = v9;
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_11:
    id v29 = 0;
    goto LABEL_12;
  }
  id v18 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v29 = sub_100237C64(a4, a5, 0);
LABEL_12:
  if ([a6 isPickerUI] && (sub_10023D0B4(v29, a6) & 1) == 0)
  {
    id v25 = [self defaultManager];
    id v26 = (void *)swift_allocObject();
    void v26[2] = a1;
    v26[3] = a4;
    v26[4] = a5;
    v26[5] = a2;
    v26[6] = a3;
    NSString v34 = sub_10023DE18;
    unint64_t v35 = v26;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    unint64_t v32 = sub_10000CAE4;
    uint64_t v33 = &unk_100698F50;
    uint64_t v27 = _Block_copy(&aBlock);
    char v28 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v25 doc_fetchRootItemForProviderDomain:v9 completionHandler:v27];

    _Block_release(v27);
  }
  else
  {
    id v21 = [self defaultManager];
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a1;
    v22[3] = a2;
    v22[4] = a3;
    NSString v34 = sub_10023A85C;
    unint64_t v35 = v22;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    unint64_t v32 = sub_10000CAE4;
    uint64_t v33 = &unk_100698F00;
    id v23 = _Block_copy(&aBlock);
    id v24 = a1;
    swift_retain();
    swift_release();
    [v21 fetchDefaultLocationForApplicationRecord:v29 defaultProviderDomain:v9 completionHandler:v23];
    _Block_release(v23);
  }
}

void sub_100235FB8(void *a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v34 = a4;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    uint64_t v14 = (void *)static DOCLog.UI.getter();
    int v33 = static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1005A0030;
    uint64_t v16 = _convertErrorToNSError(_:)();
    *(void *)(v15 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v15 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v15 + 32) = v16;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  id v17 = [a3 identifier];
  id v18 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v17 node:a1];

  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  id v19 = a1;
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t aBlock = sub_10009B0E4(v34, a5, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    unint64_t v32 = v13;
    if (a1)
    {
      id v23 = [v19 displayName];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      a1 = v25;
    }
    else
    {
      uint64_t v24 = 0;
    }
    uint64_t aBlock = v24;
    uint64_t v41 = (uint64_t)a1;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10009B0E4(v26, v27, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Obtained default location for a picker that presented from an app that supports open in place: %s. Location: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v36);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  }
  char v28 = (void *)swift_allocObject();
  uint64_t v29 = v38;
  _OWORD v28[2] = v37;
  v28[3] = v29;
  v28[4] = v18;
  uint64_t v44 = sub_1000D7704;
  uint64_t v45 = v28;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_1000666D8;
  id v43 = &unk_100698FA0;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_retain();
  id v31 = v18;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v30);
}

void sub_100236444(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    swift_errorRetain();
    uint64_t v18 = a1;
    uint64_t v9 = a4;
    uint64_t v10 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
    uint64_t v12 = _convertErrorToNSError(_:)();
    *(void *)(v11 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v11 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v11 + 32) = v12;
    os_log(_:dso:log:type:_:)();

    a4 = v9;
    a1 = v18;
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  id v13 = [a3 identifier];
  id v14 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v13 node:a1];

  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a4;
  v15[3] = a5;
  v15[4] = v14;
  aBlock[4] = sub_1000D7704;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_100698FF0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  id v17 = v14;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v16);
}

uint64_t sub_10023666C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100236694(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = self;
  id v29 = 0;
  id v9 = a1;
  id v10 = [v8 providerDomainForItem:v9 cachePolicy:3 error:&v29];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = v29;

    char v13 = sub_10001076C(v11, a2);
  }
  else
  {
    id v14 = v29;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.DocumentManager.getter();
    id v15 = v9;
    swift_errorRetain();
    id v16 = v15;
    swift_errorRetain();
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      unint64_t v27 = (void *)swift_slowAlloc();
      id v29 = v27;
      *(_DWORD *)uint64_t v19 = 136315394;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v20 = DOCNode.nodeDescription.getter();
      uint64_t v28 = sub_10009B0E4(v20, v21, (uint64_t *)&v29);
      uint64_t v26 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2112;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v28 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v25 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Could not fetch provider domain for %s: %@", (uint8_t *)v19, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      char v13 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      char v13 = 1;
    }
  }
  return v13 & 1;
}

void DOCHierarchyController.restoreLastBrowsedState(forTab:)(void *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
  swift_beginAccess();
  uint64_t v4 = sub_10006DC48((uint64_t)a1, *v3);
  if (v4)
  {
    id v7 = v4;
    unint64_t v8 = v5;
    id v9 = v6;
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    id v10 = (void *)sub_10006DCC0(a1);
    uint64_t v12 = v11;
    id v14 = v13;
    id v7 = sub_10006D97C(v10, v11, v13, a1, v1);
    unint64_t v8 = v15;
    id v9 = v16;
    sub_10006DA60(v10, v12, v14);
    if (!v7)
    {
      swift_beginAccess();
      id v17 = sub_10006DC48((uint64_t)a1, *v3);
      uint64_t v19 = v18;
      unint64_t v21 = v20;
      swift_endAccess();
      id v7 = sub_10006D97C(v17, v19, v21, a1, v1);
      unint64_t v8 = v22;
      id v9 = v23;
      sub_10006DA60(v17, v19, v21);
      if (!v7)
      {
        id v7 = sub_10006E6F8((unint64_t)a1);
        unint64_t v8 = v24;
        id v9 = v25;
      }
    }
  }
  sub_1000BCA8C(v1, 0, v7, v8, v9);
  swift_bridgeObjectRelease();
}

id sub_100236C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  __chkstk_darwin(v2);
  id v3 = sub_10006E510();
  if (!v3)
  {
    id v8 = [*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore) interfaceStateForConfiguration:*(void *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration)];
    if (v8)
    {
      id v9 = v8;
      id v10 = [v8 lastUsedOpenSaveLocation];
      if (!v10)
      {

        return 0;
      }
      uint64_t v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      sub_10009E6C4(0, &qword_10070B710);
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      unint64_t v15 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      id v16 = v15;
      if (v15)
      {
        id v17 = [v15 effectiveTabSwitcherTab];
        *(void *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = v17;
        id v6 = sub_10023AC40(v16, v17);

        sub_100021020(v12, v14);
        return v6;
      }

      sub_100021020(v12, v14);
    }
    return 0;
  }
  uint64_t v4 = v3;
  id v5 = [v3 effectiveTabSwitcherTab];
  *(void *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = v5;
  id v6 = sub_10023AC40(v4, v5);

  return v6;
}

uint64_t sub_100236FD0()
{
  return type metadata accessor for DOCHierarchyController.PreventChangeAssertion(0);
}

uint64_t sub_100236FD8(void *a1, uint64_t a2, void *a3, id a4)
{
  uint64_t v5 = v4;
  id v8 = a1;
  id v9 = sub_10023AC40(v8, [v8 effectiveTabSwitcherTab]);
  if (!v9)
  {

    return 0;
  }
  id v10 = v9;
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  id v11 = v8;
  id v12 = v10;
  char v13 = static NSObject.== infix(_:_:)();

  if (v13)
  {
    id v14 = a3;
    id v15 = v11;
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v20 = *(void **)(v5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    if (a3) {
      id v21 = [a3 effectiveTabSwitcherTab];
    }
    else {
      id v21 = [v15 effectiveTabSwitcherTab];
    }
    if (v21 == a4 && [v15 canBeRestored])
    {
      unsigned __int8 v22 = [v20 allowsDisplaying:v15];

      if (v22) {
        return (uint64_t)v15;
      }
      swift_bridgeObjectRelease();
      id v11 = v15;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005A04F0;
  *(void *)(v16 + 32) = v12;
  unint64_t v23 = v16;
  specialized Array._endMutation()();
  id v17 = v12;
  id v15 = (id)sub_1000C0650(v23, 0);
  a3 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {

    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_100237234()
{
  return 0xD000000000000028;
}

uint64_t assignWithCopy for DOCLocationChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for DOCLocationChange(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCLocationChange(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCLocationChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *sub_10023736C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100237450(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002374F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100237584(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10023761C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1002376DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t *sub_100237798(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100237868(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002378DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10023795C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002379E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100237A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100237AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100237BA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

id sub_100237C64(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

void sub_100237D44(void *a1, void *a2)
{
  sub_10022F050(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(void))(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(unsigned char *)(v2 + 57), *(unsigned char *)(v2 + 58), *(int **)(v2 + 64));
}

void *sub_100237D8C(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      uint64_t v20 = v2;
      unint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v7 = v6;
        unint64_t v8 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_20;
        }
        type metadata accessor for DOCFileProviderSource(0);
        uint64_t v9 = swift_dynamicCastClass();
        if (v9)
        {
          id v10 = (void *)v9;
          id v11 = *(void **)(v9 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
          if (v11)
          {
            id v12 = v7;
            id v13 = v11;
            char v14 = sub_10006B2B0();

            if (v14)
            {

LABEL_16:
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              uint64_t v2 = _swiftEmptyArrayStorage[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              goto LABEL_5;
            }
          }
          else
          {
            id v15 = v7;
          }
          id v16 = [v10 identifier];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v2 = v17;
          sub_10013BF8C();
          sub_10013BFE0();
          char v18 = BidirectionalCollection<>.starts<A>(with:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v18) {
            goto LABEL_16;
          }
        }

LABEL_5:
        ++v5;
        if (v8 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100237FBC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      unint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 sourceIdentifier];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {

        swift_bridgeObjectRelease_n();
        char v13 = 1;
        goto LABEL_19;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        ++v3;
        if (v6 != v2) {
          continue;
        }
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  char v13 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v13 & 1;
}

void sub_100238144(uint64_t a1, uint64_t a2, char *a3, void *a4, void *a5, char *a6, uint64_t a7)
{
  id v236 = a5;
  v232 = a4;
  v235 = a3;
  uint64_t v225 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v224 = *(void *)(v225 - 8);
  __chkstk_darwin(v225);
  v222 = (char *)&v214 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = type metadata accessor for DispatchQoS();
  uint64_t v221 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v220 = (char *)&v214 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v15 = (char *)&v214 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v226 = (uint64_t)&v214 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v214 - v19;
  __chkstk_darwin(v18);
  unsigned __int8 v22 = (char *)&v214 - v21;
  uint64_t v237 = type metadata accessor for Logger();
  v239 = *(void (***)(void, void))(v237 - 8);
  uint64_t v23 = __chkstk_darwin(v237);
  id v25 = (char *)&v214 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  v230 = (char *)&v214 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v234 = (char *)&v214 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v228 = (char *)&v214 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v233 = (id *)((char *)&v214 - v33);
  uint64_t v34 = __chkstk_darwin(v32);
  v231 = (char *)&v214 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v229 = (char *)&v214 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v227 = (char *)&v214 - v39;
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v214 - v40;
  uint64_t v42 = swift_allocObject();
  v238 = a6;
  *(void *)(v42 + 16) = a6;
  *(void *)(v42 + 24) = a7;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    swift_retain();
    swift_release();
    return;
  }
  uint64_t v44 = (char *)Strong;
  swift_beginAccess();
  uint64_t v45 = *(void **)(a2 + 16);
  if (!v45 || (type metadata accessor for DOCFileProviderSource(0), (unint64_t v46 = (char *)swift_dynamicCastClass()) == 0))
  {
    swift_retain_n();
    goto LABEL_9;
  }
  id v219 = v45;
  uint64_t v217 = v42;
  id v47 = *(void **)&v44[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  uint64_t v48 = *(void **)&v44[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
  long long v218 = v46;
  uint64_t v49 = swift_dynamicCastClass();
  uint64_t v216 = a7;
  if (v49 && (uint64_t v50 = *(void **)(v49 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
  {
    id v214 = v48;
    id v51 = v50;
    long long v215 = v44;
    id v52 = v51;
    swift_retain_n();
    id v53 = v219;
    id v54 = v47;
    char v55 = sub_10001076C(v52, (uint64_t)v48);

    uint64_t v44 = v215;
    uint64_t v56 = v217;
    if ((v55 & 1) == 0)
    {

      a7 = v216;
LABEL_9:
      uint64_t v57 = v237;
      id v58 = v238;
      static Logger.UI.getter();
      id v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v59, v60))
      {
        unint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v61 = 0;
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "About to resolve the empty location.", v61, 2u);
        swift_slowDealloc();
      }

      ((void (**)(char *, uint64_t))v239)[1](v25, v57);
      id v62 = [self defaultLocation];
      swift_retain();
      sub_10006294C(v62, 0, v44, v58, a7);
      swift_release();

      swift_release_n();
      return;
    }
  }
  else
  {
    swift_retain_n();
    id v63 = v219;
    uint64_t v56 = v217;
  }
  uint64_t v64 = v235 + 16;
  swift_beginAccess();
  if (*v64 == 1)
  {
    id v65 = (void *)swift_allocObject();
    uint64_t v66 = v232;
    v65[2] = v232;
    id v67 = v236;
    swift_getObjectType();
    id v68 = v66;
    int v69 = DOCNode.isFINode.getter();
    id v214 = v65;
    LODWORD(v232) = v69;
    if (v69)
    {
      self;
      uint64_t v70 = (void *)swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      id v71 = v68;
      id v72 = sub_10001F50C(v70, v71);

      v65[2] = v72;
      unint64_t v73 = *(void **)&v218[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v73 && ([v73 isUsingFPFS] & 1) != 0)
      {
        uint64_t v74 = v227;
        static Logger.Enumeration.getter();
        swift_unknownObjectRetain_n();
        uint64_t v75 = Logger.logObject.getter();
        id v76 = v67;
        os_log_type_t v77 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v75, v77))
        {
          uint64_t v78 = swift_slowAlloc();
          uint64_t aBlock = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v78 = 136315394;
          uint64_t v246 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v78 + 12) = 2080;
          id v79 = [v70 fileURL];
          if (v79)
          {
            uint64_t v80 = v79;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v81 = type metadata accessor for URL();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v20, 0, 1, v81);
          }
          else
          {
            uint64_t v81 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v20, 1, 1, v81);
          }
          sub_1000CBE0C((uint64_t)v20, (uint64_t)v22, &qword_1007076B0);
          type metadata accessor for URL();
          uint64_t v120 = *(void *)(v81 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v22, 1, v81) == 1)
          {
            uint64_t v121 = 4271950;
            sub_1000CBBA4((uint64_t)v22, &qword_1007076B0);
            unint64_t v122 = 0xE300000000000000;
          }
          else
          {
            uint64_t v121 = URL.absoluteString.getter();
            unint64_t v122 = v123;
            (*(void (**)(char *, uint64_t))(v120 + 8))(v22, v81);
          }
          uint64_t v246 = sub_10009B0E4(v121, v122, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          id v124 = v236;
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_type_t v125 = v77;
          id v67 = v124;
          _os_log_impl((void *)&_mh_execute_header, v75, v125, "%s: FPFS Location has an FINode with URL: %s.", (uint8_t *)v78, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_unknownObjectRelease();

          uint64_t v109 = v237;
          v235 = (char *)v239[1];
          ((void (*)(char *, uint64_t))v235)(v227, v237);
LABEL_44:
          uint64_t v56 = v217;
          goto LABEL_45;
        }

        swift_unknownObjectRelease_n();
        uint64_t v109 = v237;
        v235 = (char *)v239[1];
        ((void (*)(char *, uint64_t))v235)(v74, v237);
        id v67 = v76;
LABEL_45:
        uint64_t v126 = v234;
        v230 = (char *)OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
        uint64_t v127 = *(void **)&v218[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
        long long v215 = v44;
        if (v127
          && (id v128 = v127,
              char v129 = FPProviderDomain.shouldUseDSEnumeration.getter(),
              v128,
              (v129 & 1) != 0))
        {
          unint64_t v130 = v229;
          static Logger.Enumeration.getter();
          id v131 = v219;
          uint64_t v132 = Logger.logObject.getter();
          os_log_type_t v133 = static os_log_type_t.info.getter();
          if (!os_log_type_enabled(v132, v133))
          {

            ((void (*)(char *, uint64_t))v235)(v130, v109);
            int v149 = 0;
            goto LABEL_60;
          }
          uint64_t v134 = swift_slowAlloc();
          uint64_t aBlock = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v134 = 136315394;
          uint64_t v246 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v134 + 12) = 2080;
          unint64_t v135 = *(void **)&v230[(void)v218];
          if (v135)
          {
            id v136 = [v135 identifier];
            uint64_t v137 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v139 = v138;
          }
          else
          {
            uint64_t v137 = 4271950;
            unint64_t v139 = 0xE300000000000000;
          }
          uint64_t v246 = sub_10009B0E4(v137, v139, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v132, v133, "%s: Domain supports DS enumeration: %s.", (uint8_t *)v134, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v109 = v237;
          ((void (*)(char *, uint64_t))v235)(v229, v237);
          int v149 = 0;
        }
        else
        {
          static Logger.Enumeration.getter();
          id v140 = v219;
          uint64_t v141 = Logger.logObject.getter();
          os_log_type_t v142 = static os_log_type_t.info.getter();
          if (!os_log_type_enabled(v141, v142))
          {

            ((void (*)(char *, uint64_t))v235)(v126, v109);
            int v149 = 1;
            goto LABEL_60;
          }
          uint64_t v143 = swift_slowAlloc();
          uint64_t aBlock = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v143 = 136315394;
          uint64_t v246 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v143 + 12) = 2080;
          id v144 = *(void **)&v230[(void)v218];
          if (v144)
          {
            id v145 = [v144 identifier];
            uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v148 = v147;
          }
          else
          {
            uint64_t v146 = 4271950;
            unint64_t v148 = 0xE300000000000000;
          }
          uint64_t v246 = sub_10009B0E4(v146, v148, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "%s: Domain does NOT support DS enumeration: %s.", (uint8_t *)v143, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v109 = v237;
          ((void (*)(char *, uint64_t))v235)(v234, v237);
          int v149 = 1;
        }
        uint64_t v56 = v217;
        id v67 = v236;
LABEL_60:
        uint64_t v150 = v233;
        int v151 = (int)v232;
        self;
        uint64_t v152 = (void *)swift_dynamicCastObjCClass();
        if (v152)
        {
          unsigned __int8 v153 = [v152 isTrashed];
          if ((v151 | v149) & 1) != 0 || (v153) {
            goto LABEL_66;
          }
        }
        else if ((v151 | v149))
        {
LABEL_66:
          id v156 = v231;
          static Logger.Enumeration.getter();
          uint64_t v157 = Logger.logObject.getter();
          os_log_type_t v158 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v157, v158))
          {
            uint64_t v159 = (uint8_t *)swift_slowAlloc();
            uint64_t aBlock = (char *)swift_slowAlloc();
            *(_DWORD *)uint64_t v159 = 136315138;
            v247 = (void *)sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v157, v158, "%s: NOT trying to resolve to Node, (either location already has a Node, or Domain needs FPItemCollection, see logs above)", v159, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          ((void (*)(char *, uint64_t))v235)(v156, v109);
          id v160 = v215;
          uint64_t v161 = (void (*)(void))v238;
          uint64_t v162 = (void *)*((void *)v214 + 2);
          id v163 = v219;
          id v164 = v162;
          v161();
          swift_release();
          swift_release();
          swift_release();

          return;
        }
        swift_beginAccess();
        unint64_t v154 = swift_bridgeObjectRetain();
        char v155 = sub_100237FBC(v154);
        swift_bridgeObjectRelease();
        if ((v155 & 1) == 0)
        {
          static Logger.Enumeration.getter();
          swift_unknownObjectRetain_n();
          uint64_t v165 = Logger.logObject.getter();
          os_log_type_t v166 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v165, v166))
          {
            uint64_t v167 = swift_slowAlloc();
            v238 = (char *)swift_slowAlloc();
            uint64_t aBlock = v238;
            *(_DWORD *)uint64_t v167 = 136315394;
            v247 = (void *)sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v167 + 12) = 2080;
            id v168 = [v67 displayName];
            uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v171 = v170;

            id v67 = v236;
            uint64_t v172 = v169;
            uint64_t v56 = v217;
            v247 = (void *)sub_10009B0E4(v172, v171, (uint64_t *)&aBlock);
            uint64_t v109 = v237;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v165, v166, "%s: Location needs to be resolved to FINode : Node (%s.", (uint8_t *)v167, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v173 = v233;
          }
          else
          {

            swift_unknownObjectRelease_n();
            uint64_t v173 = v150;
          }
          ((void (*)(void *, uint64_t))v235)(v173, v109);
          self;
          uint64_t v174 = (void *)swift_dynamicCastObjCClassUnconditional();
          swift_unknownObjectRetain();
          unsigned int v175 = [v174 isRootItem];
          uint64_t v176 = v228;
          if (v175)
          {
            id v177 = v67;
            v239 = *(void (***)(void, void))&v215[OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue];
            uint64_t v178 = (void *)swift_allocObject();
            id v179 = v214;
            v178[2] = v218;
            v178[3] = v179;
            v178[4] = v177;
            v178[5] = sub_10023FB70;
            v178[6] = v56;
            v244 = sub_10023DEC0;
            v245 = v178;
            uint64_t aBlock = (char *)_NSConcreteStackBlock;
            uint64_t v241 = 1107296256;
            v242 = sub_1000666D8;
            v243 = &unk_1006991A8;
            uint64_t v180 = _Block_copy(&aBlock);
            v238 = (char *)v219;
            swift_unknownObjectRetain();
            swift_retain();
            swift_retain();
            uint64_t v181 = v220;
            static DispatchQoS.unspecified.getter();
            v247 = _swiftEmptyArrayStorage;
            sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_1000CBE70((uint64_t *)&unk_100705390);
            sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
            int v182 = v222;
            uint64_t v183 = v225;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            _Block_release(v180);

            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v224 + 8))(v182, v183);
            (*(void (**)(char *, uint64_t))(v221 + 8))(v181, v223);

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            return;
          }
          uint64_t v184 = *(void **)&v230[(void)v218];
          if (v184)
          {
            id v185 = v184;
            if (FPProviderDomain.shouldResolveDSNodeAsFPv2.getter())
            {
              static Logger.Enumeration.getter();
              swift_unknownObjectRetain_n();
              v238 = (char *)v185;
              uint64_t v186 = Logger.logObject.getter();
              os_log_type_t v187 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v186, v187))
              {
                uint64_t v188 = swift_slowAlloc();
                v233 = (void *)swift_slowAlloc();
                v234 = (char *)swift_slowAlloc();
                uint64_t aBlock = v234;
                *(_DWORD *)uint64_t v188 = 136315394;
                id v189 = [v67 displayName];
                uint64_t v190 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v192 = v191;

                v247 = (void *)sub_10009B0E4(v190, v192, (uint64_t *)&aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                *(_WORD *)(v188 + 12) = 2112;
                v247 = v238;
                uint64_t v193 = v238;
                uint64_t v56 = v217;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                void *v233 = v184;

                _os_log_impl((void *)&_mh_execute_header, v186, v187, "Building FINode from FPv2 node: (%s) with domain (%@)", (uint8_t *)v188, 0x16u);
                sub_1000CBE70(&qword_100707CC0);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                id v194 = v228;
                uint64_t v195 = v237;
              }
              else
              {

                id v205 = v238;
                swift_unknownObjectRelease_n();
                id v194 = v176;
                uint64_t v195 = v109;
              }
              ((void (*)(char *, uint64_t))v235)(v194, v195);
              v239 = (void (**)(void, void))self;
              uint64_t v206 = swift_allocObject();
              id v207 = v215;
              swift_unknownObjectWeakInit();
              v208 = (void *)swift_allocObject();
              id v209 = v214;
              v208[2] = v206;
              v208[3] = v209;
              id v210 = v236;
              v208[4] = v218;
              v208[5] = v210;
              v208[6] = sub_10023FB70;
              v208[7] = v56;
              v244 = sub_10023DEB8;
              v245 = v208;
              uint64_t aBlock = (char *)_NSConcreteStackBlock;
              uint64_t v241 = 1107296256;
              v242 = sub_10000CAE4;
              v243 = &unk_100699158;
              uint64_t v211 = _Block_copy(&aBlock);
              id v212 = v219;
              swift_unknownObjectRetain();
              swift_retain();
              swift_retain();
              uint64_t v213 = v238;
              swift_release();
              [v239 fiNodeFromItem:v174 inFPv2Domain:v213 completion:v211];
              _Block_release(v211);
              swift_release();
              swift_release();

              swift_release();
              swift_unknownObjectRelease();

              return;
            }
          }
          id v196 = v215;
          uint64_t v197 = *(void **)&v215[OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager];
          uint64_t v198 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v199 = (void *)swift_allocObject();
          id v200 = v214;
          v199[2] = v198;
          v199[3] = v200;
          unint64_t v201 = v218;
          v199[4] = v67;
          v199[5] = v201;
          v199[6] = sub_10023FB70;
          v199[7] = v56;
          v244 = sub_10023DEB0;
          v245 = v199;
          uint64_t aBlock = (char *)_NSConcreteStackBlock;
          uint64_t v241 = 1107296256;
          v242 = sub_1001B6B50;
          v243 = &unk_100699108;
          uint64_t v202 = _Block_copy(&aBlock);
          id v203 = v219;
          swift_unknownObjectRetain();
          swift_retain();
          swift_retain();
          id v204 = v197;
          swift_release();
          [v204 fetchURLForItem:v174 completionHandler:v202];

          _Block_release(v202);
          swift_release();
          swift_release();
          swift_release();
          swift_unknownObjectRelease();

          return;
        }
        goto LABEL_66;
      }
      uint64_t v100 = v230;
      static Logger.Enumeration.getter();
      swift_unknownObjectRetain_n();
      uint64_t v101 = Logger.logObject.getter();
      os_log_type_t v102 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v101, v102))
      {
        uint64_t v103 = swift_slowAlloc();
        v235 = (char *)swift_slowAlloc();
        uint64_t aBlock = v235;
        *(_DWORD *)uint64_t v103 = 136315650;
        uint64_t v246 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v103 + 12) = 2080;
        id v104 = [v70 fileURL];
        if (v104)
        {
          os_log_t v105 = v104;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v106 = type metadata accessor for URL();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v15, 0, 1, v106);
        }
        else
        {
          uint64_t v106 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v15, 1, 1, v106);
        }
        uint64_t v110 = v226;
        sub_1000CBE0C((uint64_t)v15, v226, &qword_1007076B0);
        type metadata accessor for URL();
        uint64_t v111 = *(void *)(v106 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v110, 1, v106) == 1)
        {
          uint64_t v112 = 4271950;
          sub_1000CBBA4(v110, &qword_1007076B0);
          unint64_t v113 = 0xE300000000000000;
        }
        else
        {
          uint64_t v112 = URL.absoluteString.getter();
          unint64_t v113 = v114;
          (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v106);
        }
        uint64_t v246 = sub_10009B0E4(v112, v113, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v115 = v236;
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v103 + 22) = 2080;
        id v116 = [v70 fpItem];
        uint64_t v246 = (uint64_t)v116;
        sub_1000CBE70(&qword_10070B670);
        uint64_t v117 = Optional.debugDescription.getter();
        unint64_t v119 = v118;

        uint64_t v246 = sub_10009B0E4(v117, v119, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        id v67 = v115;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v101, v102, "%s: FPv2 Location has an FINode with URL: %s and FPItem: %s.", (uint8_t *)v103, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();

        uint64_t v109 = v237;
        v235 = (char *)v239[1];
        ((void (*)(char *, uint64_t))v235)(v230, v237);
        goto LABEL_44;
      }

      swift_unknownObjectRelease_n();
      uint64_t v107 = (char *)v239[1];
      id v108 = v100;
    }
    else
    {
      static Logger.Enumeration.getter();
      swift_unknownObjectRetain_n();
      uint64_t v92 = Logger.logObject.getter();
      os_log_type_t v93 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc();
        v235 = (char *)swift_slowAlloc();
        uint64_t aBlock = v235;
        *(_DWORD *)uint64_t v94 = 136315394;
        uint64_t v246 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v94 + 12) = 2080;
        id v95 = [v236 displayName];
        uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v97 = v44;
        unint64_t v99 = v98;

        uint64_t v56 = v217;
        uint64_t v246 = sub_10009B0E4(v96, v99, (uint64_t *)&aBlock);
        id v67 = v236;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        uint64_t v44 = v97;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "%s: Location has an FPItem : %s.", (uint8_t *)v94, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      uint64_t v107 = (char *)v239[1];
      id v108 = v41;
    }
    uint64_t v109 = v237;
    v235 = v107;
    ((void (*)(char *, uint64_t))v107)(v108, v237);
    goto LABEL_45;
  }
  id v82 = v219;
  id v83 = v218;
  id v84 = [v218 identifier];
  id v85 = [v83 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v86 = objc_allocWithZone((Class)DOCConcreteLocation);
  NSString v87 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v88 = [v86 initWithSourceIdentifier:v84 title:v87];

  self;
  [v88 setIsFPV2:swift_dynamicCastObjCClass() == 0];
  NSString v89 = [v83 promptText];
  if (!v89)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v88 setPromptText:v89];

  id v90 = v82;
  id v91 = v88;
  ((void (*)(void))v238)();
  swift_release();
  swift_release();
}

uint64_t sub_10023A434()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_10023A454(char a1)
{
  sub_100230BE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_10023A460()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10023A498(void *a1, uint64_t a2)
{
  sub_10023468C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_10023A4A8(NSObject *a1)
{
  sub_1000D760C(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32), "resolving .defaultSaveLocation: location is nil, using empty location instead.");
}

uint64_t sub_10023A4D8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10023A520(char *a1)
{
  sub_100235C70(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_10023A530()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023A580()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void *sub_10023A5D0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v1; uint64_t v1 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v2 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v2);
      unint64_t v5 = v4;
      uint64_t v6 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      id v7 = [v4 identifier];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        return v5;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_23;
      }
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14 && (id v15 = *(void **)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
      {
        id v16 = v15;
        id v3 = v5;
        if (DOCProviderDomainIsSharedServerDomain())
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v17 = [v3 identifier];
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v20 = v19;

          v21._countAndFlagsBits = v18;
          v21._object = v20;
          LOBYTE(v17) = String.hasPrefix(_:)(v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v17) {
            goto LABEL_23;
          }
        }
        else
        {

          id v3 = v16;
        }
      }
      else
      {
        id v3 = v5;
      }

      ++v2;
      if (v6 == v1) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_10023A85C(uint64_t a1, uint64_t a2)
{
  sub_100236444(a1, a2, *(id *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10023A868(uint64_t a1, unint64_t a2)
{
  return sub_100083FF8(a1, a2, (unint64_t *)&unk_1007085C0);
}

uint64_t sub_10023A87C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  uint64_t v3 = 0;
  for (uint64_t i = (id *)(a1 + 40); ; i += 2)
  {
    unint64_t v5 = *(i - 1);
    id v6 = *i;
    id v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)();

    if (v5) {
      break;
    }
    if (v1 == ++v3) {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_10023A94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070B6C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t updated = type metadata accessor for DOCHierarchyController.UpdateExpectation(0);
  uint64_t v11 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  char v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = (void *)(a2 + 16);
  uint64_t v15 = swift_projectBox();
  uint64_t v16 = a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation + 8) & 1) == 0
    && !*(void *)v16)
  {
    *(void *)uint64_t v16 = 0;
    *(unsigned char *)(v16 + 8) = 1;
  }
  swift_beginAccess();
  if (*v14)
  {
    uint64_t v17 = swift_retain();
    sub_1000460B0(v17, 0);
    swift_release();
  }
  swift_beginAccess();
  sub_1000CBC00(v15, (uint64_t)v9, (uint64_t *)&unk_10070B6C0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, updated) != 1)
  {
    sub_1000C194C((uint64_t)v9, (uint64_t)v13, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    sub_100225EFC((uint64_t)v13);
    uint64_t result = sub_1000C1DEC((uint64_t)v13, type metadata accessor for DOCHierarchyController.UpdateExpectation);
    if (!a4) {
      return result;
    }
    return a4(result);
  }
  uint64_t result = sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10070B6C0);
  if (a4) {
    return a4(result);
  }
  return result;
}

BOOL sub_10023AB7C(void *a1, unint64_t a2)
{
  id v3 = [a1 sourceIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v4._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Bool v5 = String.hasPrefix(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 && a2 >= 2) {
    id v6 = [self iCloudDriveLocation];
  }
  return v5;
}

id sub_10023AC40(void *a1, id a2)
{
  id v4 = sub_10006E510();
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    BOOL v7 = sub_10023AB7C(a1, (unint64_t)a2);
    id v6 = v8;
    if (v7)
    {
      if (!v8) {
        return v6;
      }
    }
    else
    {

      id v6 = a1;
    }
  }
  id v9 = [v6 fileProviderItem];
  if (v9
    && (uint64_t v10 = v9,
        id v11 = [self defaultPermission],
        unsigned __int8 v12 = [v11 canHostAppPerformAction:0 targetNode:v10],
        v11,
        v10,
        (v12 & 1) == 0)
    || [v6 effectiveTabSwitcherTab] != a2
    || !v5 && ([v6 canBeRestored] & 1) == 0)
  {

    return 0;
  }
  return v6;
}

void sub_10023AD54(uint64_t a1, unint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  char v13 = &a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  if (*(void *)v13 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
    a5();
    swift_release();
    return;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v14 < 0)
    {
      __break(1u);
      return;
    }
    char v37 = a3;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = v16 + 1;
        id v18 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v16 = v17;
      }
      while (v14 != v17);
    }
    else
    {
      uint64_t v20 = (uint64_t *)(a2 + 32);
      uint64_t v21 = v14;
      do
      {
        uint64_t v22 = *v20++;
        id v23 = *(id *)(v22 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v21;
      }
      while (v21);
    }
    uint64_t v19 = (void *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = 0;
      do
      {
        uint64_t v25 = v24 + 1;
        id v26 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 24);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v24 = v25;
      }
      while (v14 != v25);
    }
    else
    {
      uint64_t v27 = (uint64_t *)(a2 + 32);
      do
      {
        uint64_t v28 = *v27++;
        id v29 = *(id *)(v28 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v14;
      }
      while (v14);
    }
    uint64_t v15 = (void *)aBlock[0];
    a3 = v37;
  }
  else
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v31 = (void *)Strong;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a4;
    *(void *)(v33 + 24) = a1;
    *(void *)(v33 + 32) = v19;
    *(void *)(v33 + 40) = v15;
    uint64_t v34 = a3 & 1;
    *(unsigned char *)(v33 + 48) = v34;
    *(void *)(v33 + 56) = a2;
    *(void *)(v33 + 64) = sub_1000D8564;
    *(void *)(v33 + 72) = v12;
    aBlock[4] = sub_10023E520;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_10069A288;
    uint64_t v35 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v36 = a4;
    swift_retain();
    swift_release();
    [v31 hierarchyController:v36 willReplaceTrailingLocations:a1 with:isa animated:v34 completion:v35];
    swift_unknownObjectRelease();
    _Block_release(v35);
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10023B1FC(void *a1, unint64_t a2, int a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  unint64_t v13 = a2 >> 62;
  if (a2 >> 62)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v14 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = *(id *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
LABEL_29:
    a5();
    swift_release();
    return swift_release();
  }
  p_prots = &OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy.prots;
  if (!a1)
  {
LABEL_12:
    if (v14 != (id)1)
    {
      uint64_t v24 = 0;
      goto LABEL_20;
    }
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (v25)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        id v29 = *(id *)(v32 + 16);
        swift_unknownObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v28 = *(void *)(a2 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        id v29 = *(id *)(v28 + 16);
LABEL_28:
        id v30 = *(id *)(v28 + 24);
        swift_release();
        sub_100229E14(v29, v30, a3 & 1);

        goto LABEL_29;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release_n();
    __break(1u);
    return result;
  }
  int v34 = a3;
  uint64_t v35 = a4;
  uint64_t v16 = (unint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  uint64_t v17 = swift_beginAccess();
  unint64_t v18 = *v16;
  uint64_t v36 = a1;
  __chkstk_darwin(v17);
  v33[2] = &v36;
  swift_bridgeObjectRetain();
  id v14 = a1;
  unint64_t v19 = sub_10022549C((uint64_t (*)(id *))sub_10023E524, (uint64_t)v33, v18);
  unint64_t v13 = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *v16;
  unint64_t v22 = *v16 >> 62;
  if ((v13 & 1) == 0)
  {
    if (v22)
    {
      if (v21 < 0) {
        unint64_t v13 = *v16;
      }
      else {
        unint64_t v13 = v21 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    a4 = v35;

    p_prots = (__objc2_prot_list **)(v23 - v19);
    LOBYTE(a3) = v34;
    if (!__OFSUB__(v23, v19))
    {
      uint64_t v24 = (uint64_t)p_prots - 1;
      if (!__OFSUB__(p_prots, 1)) {
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_41;
  }
  if (v22)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  a4 = v35;

  LOBYTE(a3) = v34;
LABEL_18:
  p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy + 16);
LABEL_20:
  id v26 = (uint64_t *)((char *)&p_prots[34]->count + (void)a4);
  swift_beginAccess();
  if (*v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v24 == v31) {
      goto LABEL_22;
    }
  }
  else if (v24 == *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    sub_1000C21E8(a2, a3 & 1, (uint64_t)sub_1000D8564, v12);
    swift_release();
    return swift_release();
  }
  swift_retain();
  sub_10023AD54(v24, a2, a3 & 1, a4, a5, a6);
  swift_release();
  return swift_release_n();
}

void sub_10023B680(uint64_t a1, unint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  unint64_t v13 = &a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  if (*(void *)v13 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
    a5();
    swift_release();
    return;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v14 < 0)
    {
      __break(1u);
      return;
    }
    char v37 = a3;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = v16 + 1;
        id v18 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v16 = v17;
      }
      while (v14 != v17);
    }
    else
    {
      unint64_t v20 = (uint64_t *)(a2 + 32);
      uint64_t v21 = v14;
      do
      {
        uint64_t v22 = *v20++;
        id v23 = *(id *)(v22 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v21;
      }
      while (v21);
    }
    unint64_t v19 = (void *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = 0;
      do
      {
        uint64_t v25 = v24 + 1;
        id v26 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 24);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v24 = v25;
      }
      while (v14 != v25);
    }
    else
    {
      uint64_t v27 = (uint64_t *)(a2 + 32);
      do
      {
        uint64_t v28 = *v27++;
        id v29 = *(id *)(v28 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v14;
      }
      while (v14);
    }
    uint64_t v15 = (void *)aBlock[0];
    a3 = v37;
  }
  else
  {
    unint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v31 = (void *)Strong;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a4;
    *(void *)(v33 + 24) = a1;
    *(void *)(v33 + 32) = v19;
    *(void *)(v33 + 40) = v15;
    uint64_t v34 = a3 & 1;
    *(unsigned char *)(v33 + 48) = v34;
    *(void *)(v33 + 56) = a2;
    *(void *)(v33 + 64) = sub_1000D8564;
    *(void *)(v33 + 72) = v12;
    aBlock[4] = sub_10023E520;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100699BD0;
    uint64_t v35 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v36 = a4;
    swift_retain();
    swift_release();
    [v31 hierarchyController:v36 willReplaceTrailingLocations:a1 with:isa animated:v34 completion:v35];
    swift_unknownObjectRelease();
    _Block_release(v35);
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10023BB28(void *a1, unint64_t a2, int a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  unint64_t v13 = a2 >> 62;
  if (a2 >> 62)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    id v14 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = *(id *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
LABEL_29:
    a5();
    swift_release();
    return swift_release();
  }
  p_prots = &OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy.prots;
  if (!a1)
  {
LABEL_12:
    if (v14 != (id)1)
    {
      uint64_t v24 = 0;
      goto LABEL_20;
    }
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (v25)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        id v29 = *(id *)(v32 + 16);
        swift_unknownObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v28 = *(void *)(a2 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        id v29 = *(id *)(v28 + 16);
LABEL_28:
        id v30 = *(id *)(v28 + 24);
        swift_release();
        sub_100229E14(v29, v30, a3 & 1);

        goto LABEL_29;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release_n();
    __break(1u);
    return result;
  }
  int v34 = a3;
  uint64_t v35 = a4;
  uint64_t v16 = (unint64_t *)&a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  uint64_t v17 = swift_beginAccess();
  unint64_t v18 = *v16;
  uint64_t v36 = a1;
  __chkstk_darwin(v17);
  v33[2] = &v36;
  swift_bridgeObjectRetain();
  id v14 = a1;
  unint64_t v19 = sub_10022549C((uint64_t (*)(id *))sub_10023E524, (uint64_t)v33, v18);
  unint64_t v13 = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *v16;
  unint64_t v22 = *v16 >> 62;
  if ((v13 & 1) == 0)
  {
    if (v22)
    {
      if (v21 < 0) {
        unint64_t v13 = *v16;
      }
      else {
        unint64_t v13 = v21 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    a4 = v35;

    p_prots = (__objc2_prot_list **)(v23 - v19);
    LOBYTE(a3) = v34;
    if (!__OFSUB__(v23, v19))
    {
      uint64_t v24 = (uint64_t)p_prots - 1;
      if (!__OFSUB__(p_prots, 1)) {
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_41;
  }
  if (v22)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v24 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  a4 = v35;

  LOBYTE(a3) = v34;
LABEL_18:
  p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___UICollectionViewFocusDelegate_Legacy + 16);
LABEL_20:
  id v26 = (uint64_t *)((char *)&p_prots[34]->count + (void)a4);
  swift_beginAccess();
  if (*v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v24 == v31) {
      goto LABEL_22;
    }
  }
  else if (v24 == *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    sub_1000C21E8(a2, a3 & 1, (uint64_t)sub_1000D8564, v12);
    swift_release();
    return swift_release();
  }
  swift_retain();
  sub_10023B680(v24, a2, a3 & 1, a4, a5, a6);
  swift_release();
  return swift_release_n();
}

void sub_10023BFAC(uint64_t a1, unint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  unint64_t v13 = &a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  if (*(void *)v13 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
    a5();
    swift_release();
    return;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v14 < 0)
    {
      __break(1u);
      return;
    }
    char v37 = a3;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = v16 + 1;
        id v18 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v16 = v17;
      }
      while (v14 != v17);
    }
    else
    {
      unint64_t v20 = (uint64_t *)(a2 + 32);
      uint64_t v21 = v14;
      do
      {
        uint64_t v22 = *v20++;
        id v23 = *(id *)(v22 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v21;
      }
      while (v21);
    }
    unint64_t v19 = (void *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = 0;
      do
      {
        uint64_t v25 = v24 + 1;
        id v26 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 24);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v24 = v25;
      }
      while (v14 != v25);
    }
    else
    {
      uint64_t v27 = (uint64_t *)(a2 + 32);
      do
      {
        uint64_t v28 = *v27++;
        id v29 = *(id *)(v28 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v14;
      }
      while (v14);
    }
    uint64_t v15 = (void *)aBlock[0];
    a3 = v37;
  }
  else
  {
    unint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v31 = (void *)Strong;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a4;
    *(void *)(v33 + 24) = a1;
    *(void *)(v33 + 32) = v19;
    *(void *)(v33 + 40) = v15;
    uint64_t v34 = a3 & 1;
    *(unsigned char *)(v33 + 48) = v34;
    *(void *)(v33 + 56) = a2;
    *(void *)(v33 + 64) = sub_100045B40;
    *(void *)(v33 + 72) = v12;
    aBlock[4] = sub_10023E520;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_10069A1E8;
    uint64_t v35 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v36 = a4;
    swift_retain();
    swift_release();
    [v31 hierarchyController:v36 willReplaceTrailingLocations:a1 with:isa animated:v34 completion:v35];
    swift_unknownObjectRelease();
    _Block_release(v35);
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_10023C454(uint64_t a1, unint64_t a2, char a3, char *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  unint64_t v13 = &a4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  if (*(void *)v13 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  if ((DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)() & 1) == 0)
  {
    a5();
    swift_release();
    return;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v14 < 0)
    {
      __break(1u);
      return;
    }
    char v37 = a3;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = v16 + 1;
        id v18 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 16);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v16 = v17;
      }
      while (v14 != v17);
    }
    else
    {
      unint64_t v20 = (uint64_t *)(a2 + 32);
      uint64_t v21 = v14;
      do
      {
        uint64_t v22 = *v20++;
        id v23 = *(id *)(v22 + 16);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v21;
      }
      while (v21);
    }
    unint64_t v19 = (void *)aBlock[0];
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = 0;
      do
      {
        uint64_t v25 = v24 + 1;
        id v26 = *(id *)(specialized _ArrayBuffer._getElementSlowPath(_:)() + 24);
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v24 = v25;
      }
      while (v14 != v25);
    }
    else
    {
      uint64_t v27 = (uint64_t *)(a2 + 32);
      do
      {
        uint64_t v28 = *v27++;
        id v29 = *(id *)(v28 + 24);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v14;
      }
      while (v14);
    }
    uint64_t v15 = (void *)aBlock[0];
    a3 = v37;
  }
  else
  {
    unint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v31 = (void *)Strong;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = a4;
    *(void *)(v33 + 24) = a1;
    *(void *)(v33 + 32) = v19;
    *(void *)(v33 + 40) = v15;
    uint64_t v34 = a3 & 1;
    *(unsigned char *)(v33 + 48) = v34;
    *(void *)(v33 + 56) = a2;
    *(void *)(v33 + 64) = sub_1000D8564;
    *(void *)(v33 + 72) = v12;
    aBlock[4] = sub_10023E520;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100699AE0;
    uint64_t v35 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    uint64_t v36 = a4;
    swift_retain();
    swift_release();
    [v31 hierarchyController:v36 willReplaceTrailingLocations:a1 with:isa animated:v34 completion:v35];
    swift_unknownObjectRelease();
    _Block_release(v35);
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_10023C8FC(uint64_t a1)
{
  uint64_t v29 = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  id v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  BOOL v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v14, (uint64_t)v11, (uint64_t *)&unk_10070B640);
  uint64_t v15 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v11, 1, v15) == 1)
  {
    uint64_t v18 = (uint64_t)v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    sub_1000CBC00(v18, (uint64_t)v13, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_1000C194C((uint64_t)v11, (uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  if (v17(v13, 1, v15) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_10070B640);
  }
  else
  {
    char v19 = v13[*(int *)(v15 + 24)];
    sub_1000C1DEC((uint64_t)v13, type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    if (v19)
    {
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = v29;
      *(void *)(v20 + 16) = v1;
      *(void *)(v20 + 24) = v21;
      aBlock[4] = sub_10023E608;
      aBlock[5] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100699D10;
      uint64_t v22 = _Block_copy(aBlock);
      id v23 = v1;
      static DispatchQoS.unspecified.getter();
      id v30 = _swiftEmptyArrayStorage;
      sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v24 = v28;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v24);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
      swift_release();
      return;
    }
  }
  sub_10022A88C((uint64_t)v1, v29);
}

void *sub_10023CDB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (unint64_t *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v12 = *v11;
  swift_bridgeObjectRetain();
  sub_1001B5F94(a1, v12);
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    if (*v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      BOOL v19 = __OFSUB__(v26, v14);
      uint64_t v20 = v26 - v14;
      if (!v19)
      {
LABEL_4:
        if (v20 >= 1)
        {
          uint64_t v21 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
          sub_1000C19B4((uint64_t)v10, &OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation);
          unint64_t v27 = *v11;
          swift_bridgeObjectRetain();
          sub_10022A79C(v20, (uint64_t (*)(void))sub_100516634, v22);
          DOCHierarchyController.locations.setter(v27);
          uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
          if (result)
          {
            [result hierarchyController:v2 didPopLocations:v20 animated:0];
            return (void *)swift_unknownObjectRelease();
          }
        }
        return result;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      BOOL v19 = __OFSUB__(v18, v14);
      uint64_t v20 = v18 - v14;
      if (!v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
    return result;
  }
  static Logger.UI.getter();
  id v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Cannot remove the location after a location that is not in the locations array", v25, 2u);
    swift_slowDealloc();
  }

  return (void *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10023D0B4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v90 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v90 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v90 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v90 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v90 - v21;
  if (![a2 isPickerUI])
  {
    static Logger.UI.getter();
    id v38 = a2;
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v94 = v4;
      uint64_t v42 = v41;
      id v93 = (id)swift_slowAlloc();
      uint64_t v97 = (uint64_t)v93;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v95 = v5;
      uint64_t v96 = sub_10009B0E4(0xD000000000000037, 0x80000001005DE8F0, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 12) = 2080;
      id v43 = [v38 hostIdentifier];
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v46 = v45;

      uint64_t v96 = sub_10009B0E4(v44, v46, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s not a picker: %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v8, v94);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    return 0;
  }
  uint64_t v92 = v20;
  id v93 = a1;
  id v90 = v17;
  id v91 = v22;
  uint64_t v94 = v4;
  uint64_t v95 = v5;
  sub_1000CBE70(&qword_100707EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v24;
  *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 56) = v25;
  id v26 = [a2 hostIdentifier];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  LOBYTE(v27) = sub_100109128(v27, v29, (void *)inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  if (v27)
  {
    static Logger.UI.getter();
    id v30 = a2;
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      id v93 = (id)swift_slowAlloc();
      uint64_t v97 = (uint64_t)v93;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v96 = sub_10009B0E4(0xD000000000000037, 0x80000001005DE8F0, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 12) = 2080;
      id v34 = [v30 hostIdentifier];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      uint64_t v96 = sub_10009B0E4(v35, v37, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s is excldued identifier: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v11, v94);
    return 0;
  }
  id v47 = [a2 hostIdentifier];
  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v49;

  if (v48 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v50 == v51)
  {
    swift_bridgeObjectRelease_n();
LABEL_14:
    static Logger.UI.getter();
    id v53 = a2;
    id v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      id v93 = (id)swift_slowAlloc();
      uint64_t v97 = (uint64_t)v93;
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v96 = sub_10009B0E4(0xD000000000000037, 0x80000001005DE8F0, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v56 + 12) = 2080;
      id v57 = [v53 hostIdentifier];
      uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v60 = v59;

      uint64_t v96 = sub_10009B0E4(v58, v60, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s is Files app: %s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v14, v94);
    return 0;
  }
  char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v52) {
    goto LABEL_14;
  }
  if (!v93)
  {
    id v72 = v90;
    static Logger.UI.getter();
    id v73 = a2;
    uint64_t v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = swift_slowAlloc();
      id v93 = (id)swift_slowAlloc();
      uint64_t v97 = (uint64_t)v93;
      *(_DWORD *)uint64_t v76 = 136315394;
      uint64_t v96 = sub_10009B0E4(0xD000000000000037, 0x80000001005DE8F0, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v76 + 12) = 2080;
      id v77 = [v73 hostIdentifier];
      uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v80 = v79;

      uint64_t v96 = sub_10009B0E4(v78, v80, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "%s nil app record: %s", (uint8_t *)v76, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v72, v94);
    return 0;
  }
  id v62 = v93;
  if (![v62 supportsOpenInPlace])
  {
    uint64_t v81 = v92;
    static Logger.UI.getter();
    id v82 = a2;
    id v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      *(_DWORD *)uint64_t v85 = 136315394;
      id v93 = v62;
      uint64_t v96 = sub_10009B0E4(0xD000000000000037, 0x80000001005DE8F0, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v85 + 12) = 2080;
      id v86 = [v82 hostIdentifier];
      uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v89 = v88;

      uint64_t v96 = sub_10009B0E4(v87, v89, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "%s !supportsOpenInPlace: %s", (uint8_t *)v85, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v94);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v95 + 8))(v81, v94);
    }
    return 0;
  }
  id v63 = v91;
  static Logger.UI.getter();
  id v64 = a2;
  id v65 = Logger.logObject.getter();
  os_log_type_t v66 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 136315394;
    id v93 = v62;
    uint64_t v96 = sub_10009B0E4(0xD000000000000037, 0x80000001005DE8F0, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 12) = 2080;
    id v68 = [v64 hostIdentifier];
    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v71 = v70;

    uint64_t v96 = sub_10009B0E4(v69, v71, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "%s true! : %s", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v94);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v95 + 8))(v63, v94);
  }
  return 1;
}

uint64_t sub_10023DDD0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023DE18(uint64_t a1, uint64_t a2)
{
  return sub_1000D7720(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_100235FB8);
}

uint64_t sub_10023DE3C()
{
  return (*(uint64_t (**)(BOOL))(v0 + 16))(*(void *)(v0 + 32) != 0);
}

uint64_t sub_10023DE74()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023DEC0()
{
  return sub_10006B510((uint64_t (*)(void, void, void, void, void))sub_100230D60);
}

uint64_t sub_10023DEE0()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10023DF40()
{
  return sub_1000D7504((uint64_t (*)(void, void, void, void, void, void, void))sub_1002318C4);
}

uint64_t sub_10023DF5C()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();

  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

void sub_10023E0E4()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void **)(v0 + v3);
  uint64_t v9 = *(void *)(v0 + v4);
  uint64_t v10 = *(void **)(v0 + v5);
  id v11 = *(char **)(v0 + v6);
  uint64_t v12 = v0 + v2;
  uint64_t v13 = (uint64_t *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];

  sub_100232190(v7, v12, v8, v9, v10, v11, v14, v15);
}

uint64_t sub_10023E1B0()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10023E1E4()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10023E23C(uint64_t a1, uint64_t a2)
{
  return sub_100231D14(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_10023E250()
{
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10023E2A8(void *a1, uint64_t a2)
{
  return sub_10023157C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_10023E2BC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023E30C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10023E354(uint64_t a1, uint64_t a2)
{
  sub_100234578(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10023E360()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10023E390()
{
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023E410()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10023E478(uint64_t a1)
{
  return sub_10023EA18(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, char, void))sub_10022FB2C);
}

uint64_t sub_10023E490()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023E4CC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10023E510()
{
  return sub_1002302A0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10023E524()
{
  return sub_10023EA74() & 1;
}

uint64_t sub_10023E54C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10023E59C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100021020(a1, a2);
  }
  return a1;
}

uint64_t sub_10023E5B0()
{
  return sub_10000B930((void (*)(void))&_swift_release);
}

void sub_10023E5C8()
{
  sub_100226F50(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10023E5D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10023E608()
{
  sub_10022A88C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10023E610()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023E648()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10023E698(uint64_t a1, uint64_t a2)
{
  sub_100233D3C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_10023E6A4()
{
  swift_errorRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10023E704()
{
  return sub_1000D76C4((uint64_t (*)(void, void, void, void, void, void))sub_100233E54);
}

uint64_t sub_10023E720()
{
  return sub_100234024(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10023E728()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10023E788()
{
  return sub_1000D7504((uint64_t (*)(void, void, void, void, void, void, void))sub_100233018);
}

uint64_t sub_10023E7A0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10023E800(void *a1, void *a2)
{
  sub_100233744(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_10023E834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B6C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023E89C()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023E8D8()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10023E938(uint64_t a1)
{
  return sub_10022B918(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57), *(unsigned char *)(v1 + 58), *(void **)(v1 + 64));
}

uint64_t sub_10023E988(uint64_t a1)
{
  return sub_1002307F0(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_10023E998()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10023EA00(uint64_t a1)
{
  return sub_10023EA18(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, char, void))sub_10022C3B8);
}

uint64_t sub_10023EA18(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, char, void))
{
  char v4 = *(unsigned char *)(v2 + 65);
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned __int8 *)(v2 + 64), v4, *(void *)(v2 + 72));
}

uint64_t sub_10023EA64()
{
  return sub_10022CAC8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10023EA74()
{
  return static NSObject.== infix(_:_:)() & 1;
}

uint64_t sub_10023EAE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10023EB38()
{
  return sub_10022A4A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56), *(uint64_t (**)(id))(v0 + 64));
}

uint64_t sub_10023EB54(uint64_t a1)
{
  return sub_10022CC58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_10023EB60()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_10023EBD0(void *a1)
{
  return sub_10022CD0C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(unsigned char *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
}

uint64_t sub_10023EC1C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

NSObject *sub_10023EC6C(void *a1, void *a2)
{
  return sub_100230430(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void (**)(uint64_t))(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_10023EC80()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_10023ECF8(unint64_t a1)
{
  sub_10022D8CC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_10023ED40()
{
  return sub_10006B510((uint64_t (*)(void, void, void, void, void))sub_10022E17C);
}

uint64_t sub_10023ED58()
{
  return sub_10001DCB4(49);
}

uint64_t sub_10023ED60()
{
  return sub_1000D768C((uint64_t (*)(void, void, void, void, void))sub_10022E31C);
}

uint64_t sub_10023ED7C()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10023EDD4()
{
  return sub_10023A94C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_10023EDE4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCHierarchyController.FetchingOperationToken(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5 + 9, v4);
}

void sub_10023EF08()
{
}

uint64_t sub_10023EF10()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10023EF58()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation;
  *(void *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 8) = 1;
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_10023EFA0()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10023EFF0()
{
  return sub_10022B630(*(char **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

void sub_10023F008()
{
  uint64_t v1 = *(void (**)(void))(v0 + 32);
  sub_1000460B0(*(void *)(v0 + 24), 0);
  if (v1) {
    v1();
  }
}

uint64_t sub_10023F050()
{
  return sub_10001DCB4(48);
}

void sub_10023F058()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_3:
  unint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
  }
  else if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(id *)(v2 + 8 * v4 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return;
  }
  id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = [v6 representedTag];

  if (v7)
  {
    id v8 = [self sharedInstance];
    id v9 = [v8 userTags];

    if (([v9 containsObject:v7] & 1) == 0)
    {
      id v10 = [*(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration) defaultEffectiveTabIdentifierForLocationRestore];
      unint64_t v11 = sub_10006DAB4();
      char v13 = v12;

      if (v13) {
        unint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
      }
      uint64_t v14 = sub_10006E6F8(v11);
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();

      sub_1000BCD84(v14, 0, 0, 1, 0, 0, 0);
    }
  }
}

void sub_10023F258()
{
  sub_100234C08(*(void **)(v0 + 16));
}

uint64_t sub_10023F260()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10023F274()
{
  sub_10023592C(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10023F27C()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10023F2D4(char a1, uint64_t a2)
{
  sub_100235714(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_10023F2E4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10023F324(void *a1, uint64_t a2)
{
  return sub_100235B3C(a1, a2, *(uint64_t (**)(id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10023F330()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10023F368()
{
  swift_release();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10023F3B8()
{
  sub_100228444(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10023F3C8()
{
  return _swift_deallocObject(v0, 41, 7);
}

void sub_10023F408(void *a1)
{
  sub_100227AD4(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_10023F418()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10023F468(void *a1)
{
  sub_1002265D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

unint64_t sub_10023F4A0()
{
  unint64_t result = qword_10070B708;
  if (!qword_10070B708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B708);
  }
  return result;
}

uint64_t sub_10023F4F4()
{
  return sub_100226ECC(v0);
}

uint64_t sub_10023F4FC()
{
  return sub_10000B930((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10023F514()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10023F56C()
{
  return sub_1000BD320(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned __int8 *)(v0 + 49), *(unsigned __int8 *)(v0 + 50), *(void **)(v0 + 56));
}

uint64_t sub_10023F588()
{
  return sub_1002285C0(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10023F590()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10023F5E8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 50, 7);
}

uint64_t sub_10023F630()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 74, 7);
}

uint64_t sub_10023F690()
{
  return sub_1000C4AD0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72), *(unsigned char *)(v0 + 73));
}

uint64_t sub_10023F6CC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 58, 7);
}

uint64_t getEnumTagSinglePayload for DOCHierarchyController.DOCHierarchyOperationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCHierarchyController.DOCHierarchyOperationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10023F87CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10023F8A4(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DOCHierarchyController.DOCHierarchyOperationType()
{
  return &type metadata for DOCHierarchyController.DOCHierarchyOperationType;
}

unint64_t sub_10023F8C4()
{
  unint64_t result = qword_10070B728;
  if (!qword_10070B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B728);
  }
  return result;
}

id DOCBrowserContainedViewController.configuration.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
}

uint64_t (*sub_10023FB8C())()
{
  return j__swift_endAccess;
}

uint64_t sub_10023FBE8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode);
}

uint64_t sub_10023FBF8(uint64_t a1, void *a2, void *a3)
{
  if (a3) {
    id v6 = a3;
  }
  else {
    id v6 = [v3 _definiteTransitionCoordinator];
  }
  strcpy((char *)v14, "transition (");
  BYTE5(v14[1]) = 0;
  HIWORD(v14[1]) = -5120;
  swift_unknownObjectRetain();
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  uint64_t v9 = sub_10023FE04(v14[0], (void *)v14[1]);
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t (*)(void *))DOCSplitBrowserViewController.didCommitPreview(of:);
  uint64_t v18 = 0;
  v14[0] = (uint64_t)_NSConcreteStackBlock;
  v14[1] = 1107296256;
  uint64_t v15 = sub_100045AE0;
  uint64_t v16 = &unk_10069ABC8;
  id v10 = _Block_copy(v14);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = j___s26DocumentManagerExecutables12DOCAssertionC10invalidateyyFTj;
  *(void *)(v11 + 24) = v9;
  uint64_t v17 = sub_100240B00;
  uint64_t v18 = v11;
  v14[0] = (uint64_t)_NSConcreteStackBlock;
  v14[1] = 1107296256;
  uint64_t v15 = sub_100045AE0;
  uint64_t v16 = &unk_10069AC18;
  char v12 = _Block_copy(v14);
  swift_retain_n();
  swift_release();
  [v6 animateAlongsideTransition:v10 completion:v12];
  _Block_release(v12);
  _Block_release(v10);
  swift_unknownObjectRelease();
  return swift_release_n();
}

uint64_t sub_10023FE04(uint64_t a1, void *a2)
{
  sub_1000A6AA0();
  char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
  swift_release();
  if ((valid & 1) == 0) {
    sub_1000A6988();
  }
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  type metadata accessor for DOCAssertion();
  swift_allocObject();
  uint64_t v6 = DOCAssertion.init(traceInfo:)();
  sub_1000A6AA0();
  dispatch thunk of DOCAssertionCollection.add(_:autoInvalidationTimeout:)();
  swift_release();
  return v6;
}

uint64_t DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed);
  swift_beginAccess();
  return *v1;
}

void DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.setter(char a1)
{
  int v3 = a1 & 1;
  unsigned int v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed);
  swift_beginAccess();
  int v5 = *v4;
  unsigned char *v4 = a1;
  if (v5 != v3) {
    sub_1000457E8(0);
  }
}

void (*DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed;
  v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_10024003C;
}

void sub_10024003C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  int v4 = *(unsigned __int8 *)(*(void *)a1 + 40);
  int v5 = *(unsigned __int8 *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  if (v4 != v5) {
    sub_1000457E8(0);
  }

  free(v1);
}

id DOCBrowserContainedViewController.actionManager.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager);
}

void sub_100240224()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000A6AA0();
    char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
    swift_release();
    if ((valid & 1) == 0)
    {
      if (objc_msgSend(v1, "doc_hasAppearedOrIsAppearing")) {
        sub_1000A6988();
      }
    }
  }
}

uint64_t sub_1002402B8(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![a1 isCancelled]) {
    return a2();
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_10069AC40;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

Class sub_100240570()
{
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  swift_bridgeObjectRetain();
  v0.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v0.super.isa;
}

void sub_1002405EC(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  *(void *)&a1[*a4] = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = a1;
  swift_bridgeObjectRelease();
  v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v6 = [v8 viewIfLoaded];
  id v7 = [v6 window];

  if (v7) {
    sub_1000A6988();
  }
}

Swift::Void __swiftcall DOCBrowserContainedViewController.viewDidLoad()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  [super viewDidLoad];
  sub_1000A6988();
  sub_1000457E8(0);
}

id DOCBrowserContainedViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  int v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

void DOCBrowserContainedViewController.init(nibName:bundle:)()
{
}

id DOCBrowserContainedViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  return [super dealloc];
}

Swift::Void __swiftcall DOCBrowserContainedViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  BOOL v5 = _;
  BOOL v6 = animated;
  [super setEditing:v5 animated:v6];
  sub_10009E6C4(0, (unint64_t *)&unk_100711B80);
  id v7 = (void *)UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)();
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 setEditing:v5 animated:v6];
  }
}

void sub_1002408E0()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 2;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = 0;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled] = 1;
  v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100240A24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100240A5C()
{
}

uint64_t sub_100240A64(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100714E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100240AC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100240B00(void *a1)
{
  return sub_1002402B8(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

void *sub_100240B10(void *a1, uint64_t a2, int a3)
{
  int v51 = a3;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for UTType();
  uint64_t v11 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  char v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_needsFolderSizeMetadataLoad] = 1;
  *(void *)&v3[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_node] = a1;
  uint64_t v14 = (objc_class *)_s16FolderMenuHeaderC22IconDeliveryControllerCMa();
  uint64_t v15 = objc_allocWithZone(v14);
  v15[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered] = 0;
  uint64_t v16 = &v15[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion];
  void *v16 = 0;
  v16[1] = 0;
  *(void *)&v15[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail] = a2;
  v61.receiver = v15;
  v61.super_class = v14;
  uint64_t v17 = v3;
  swift_unknownObjectRetain();
  uint64_t v52 = a2;
  swift_unknownObjectRetain();
  uint64_t v18 = (char *)[super init];
  [*(id *)&v18[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail] addListener:v18];
  *(void *)&v17[OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_iconDelivery] = v18;
  uint64_t v19 = v18;
  id v57 = v17;

  id v20 = [objc_allocWithZone((Class)NSItemProvider) init];
  sub_10009E6C4(0, (unint64_t *)&qword_1007123B0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100241C30;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002413B4;
  aBlock[3] = &unk_10069ACE0;
  id v23 = _Block_copy(aBlock);
  swift_release();
  [v20 registerObjectOfClass:ObjCClassFromMetadata visibility:3 loadHandler:v23];
  _Block_release(v23);
  id v24 = [objc_allocWithZone((Class)LPImageProperties) init];
  [v24 setType:5];
  id v25 = [objc_allocWithZone((Class)LPFileMetadata) init];
  id v26 = objc_allocWithZone((Class)LPImage);
  id v58 = v20;
  id v56 = v24;
  id v27 = [v26 initWithItemProvider:v20 properties:v24 placeholderImage:0];
  [v25 setThumbnail:v27];

  static UTType.folder.getter();
  UTType.identifier.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v53);
  NSString v28 = String._bridgeToObjectiveC()();
  uint64_t v29 = a1;
  swift_bridgeObjectRelease();
  [v25 setType:v28];

  swift_getObjectType();
  Class isa = [a1 doc_creationDate];
  if (isa)
  {
    uint64_t v31 = v50;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = v54;
    uint64_t v33 = v31;
    uint64_t v34 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v10, v33, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v10, 0, 1, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v10, 1, v34) == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v34);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v10, 1, 1, v55);
  }
  char v35 = v51;
  [v25 setCreationDate:isa];

  DOCNode.displayName(withHiddenPathExtension:)(v35 & 1);
  if (qword_100704F70 != -1) {
    swift_once();
  }
  unint64_t v36 = (void *)qword_1007371B0;
  NSString v37 = String._bridgeToObjectiveC()();
  [v36 setTitle:v37];

  id v38 = [(id)qword_1007371B0 title];
  if (v38)
  {
    uint64_t v39 = v38;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();
  }
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setName:v40];

  id v41 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  [v41 setSpecialization:v25];
  uint64_t v42 = (objc_class *)_s16FolderMenuHeaderCMa();
  v59.receiver = v57;
  v59.super_class = v42;
  id v43 = [super initWithMetadata:v41];
  uint64_t v44 = v43;
  if (*((unsigned char *)v43
       + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_needsFolderSizeMetadataLoad) == 1)
  {
    *((unsigned char *)v43
    + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16FolderMenuHeader_needsFolderSizeMetadataLoad) = 0;
    swift_getObjectType();
    id v57 = v29;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v45 = v44;
    swift_retain();
    unint64_t v46 = v19;
    id v47 = (void *)static OS_dispatch_queue.main.getter();
    DOCNode.performFolderSizingIfSupported(handlerQueue:_:)();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release_n();

    uint64_t v19 = v46;
  }
  else
  {
    id v48 = v43;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }

  return v44;
}

uint64_t sub_100241294(void (*a1)(void, void), uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v5 = (void *)Strong;
    uint64_t v6 = (void *)swift_allocObject();
    void v6[2] = v5;
    v6[3] = a1;
    v6[4] = a2;
    aBlock[4] = sub_100241D88;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_10069AD80;
    uint64_t v7 = _Block_copy(aBlock);
    id v8 = v5;
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v7);
  }
  else
  {
    a1(0, 0);
  }
  return 0;
}

id sub_1002413B4(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(uint64_t (**)(void, uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  BOOL v5 = (void *)v2(sub_100241D40, v4);
  swift_release();
  swift_release();

  return v5;
}

void sub_100241454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id sub_1002414C4()
{
  id result = [objc_allocWithZone((Class)UINavigationItem) init];
  qword_1007371B0 = (uint64_t)result;
  return result;
}

void sub_1002414F8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100717230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100241C40(a1, (uint64_t)v4);
  uint64_t v5 = type metadata accessor for DOCFolderSize();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100241CA8((uint64_t)v4);
  }
  else
  {
    uint64_t v7 = DOCFolderSize.logicalBytes.getter();
    char v9 = v8;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if ((v9 & 1) == 0 && v7 >= 1)
    {
      swift_beginAccess();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v11 = Strong;
        id v12 = [Strong metadata];
        id v13 = [v12 specialization];

        if (v13)
        {
          self;
          uint64_t v14 = (void *)swift_dynamicCastObjCClassUnconditional();
          [v14 setSize:v7];
          id v15 = [objc_allocWithZone((Class)LPLinkMetadata) init];
          [v15 setSpecialization:v14];
          [v11 setMetadata:v15];
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
}

id sub_100241710()
{
  [*(id *)&v0[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail] removeListener:v0];
  v2.receiver = v0;
  v2.super_class = (Class)_s16FolderMenuHeaderC22IconDeliveryControllerCMa();
  return [super dealloc];
}

unsigned char *sub_100241814(unsigned char *result)
{
  uint64_t v1 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered;
  if ((result[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered] & 1) == 0)
  {
    objc_super v2 = result;
    uint64_t v3 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail;
    id result = [*(id *)&result[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail] isLoading];
    if (!result)
    {
      uint64_t v4 = *(void (**)(id, void))&v2[OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion];
      if (v4)
      {
        v2[v1] = 1;
        uint64_t v5 = *(void **)&v2[v3];
        swift_retain();
        [v5 removeListener:v2];
        id v6 = [*(id *)&v2[v3] thumbnail];
        id v7 = v6;
        v4(v6, 0);

        return (unsigned char *)sub_1000A7258((uint64_t)v4);
      }
    }
  }
  return result;
}

id sub_100241AF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s16FolderMenuHeaderCMa();
  return [super dealloc];
}

uint64_t _s16FolderMenuHeaderCMa()
{
  return self;
}

uint64_t _s16FolderMenuHeaderC22IconDeliveryControllerCMa()
{
  return self;
}

uint64_t sub_100241BB8()
{
  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *sub_100241BF0()
{
  return sub_100241814(*(unsigned char **)(v0 + 16));
}

uint64_t sub_100241BF8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100241C30(void (*a1)(void, void), uint64_t a2)
{
  return sub_100241294(a1, a2);
}

void sub_100241C38(uint64_t a1)
{
}

uint64_t sub_100241C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100717230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100241CA8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100717230);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100241D08()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100241D40(uint64_t a1, uint64_t a2)
{
  sub_100241454(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100241D48()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100241D88()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_retain();
  sub_100241FD8(v1, v2);

  return swift_release();
}

id sub_100241DE0(void *a1)
{
  uint64_t v2 = v1;
  if (*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits])
  {
    swift_retain();
    sub_10009611C((uint64_t)v15);
    swift_release();
    id v4 = [v1 traitCollection];
    id v5 = (id)sub_1000A2B6C(a1, (uint64_t)v15, v4, 1);
    sub_10004B944((uint64_t)v15);
  }
  else
  {
    id v6 = [v1 traitCollection];
    unint64_t v7 = (unint64_t)[v6 userInterfaceStyle];

    if (v7 >= 3)
    {
      type metadata accessor for UIUserInterfaceStyle(0);
      v15[3] = v9;
      v15[0] = v7;
      doc_warnUnrecognizedEnumValueEncountered(_:)();
      sub_10009B1B8((uint64_t)v15);
      uint64_t v8 = 1;
    }
    else
    {
      uint64_t v8 = qword_1005A38E0[v7];
    }
    id v10 = [v2 traitCollection];
    [v10 displayScale];
    double v12 = v11;

    id v4 = [objc_allocWithZone((Class)DOCThumbnailDescriptor) initWithSize:v8 scale:0 style:1 isFolded:[a1 isFolder] isInteractive:128.0 isFolder:128.0];
    id v13 = [self sharedGenerator];
    id v5 = [v13 iconForNode:a1 descriptor:v4];
  }
  return v5;
}

id sub_100241FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion);
  uint64_t v4 = *(void *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconProvidingDidLoadCompletion);
  uint64_t *v3 = a1;
  v3[1] = a2;
  sub_1000C0640(a1);
  id result = (id)sub_1000A7258(v4);
  uint64_t v6 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered;
  if ((*(unsigned char *)(v2
                 + OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_delivered) & 1) == 0)
  {
    uint64_t v7 = OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail;
    id result = [*(id *)(v2+ OBJC_IVAR____TtCCC5Files31DOCItemCollectionViewController16FolderMenuHeader22IconDeliveryController_iconThumbnail) isLoading];
    if (!result)
    {
      uint64_t v8 = (void (*)(id, void))*v3;
      if (*v3)
      {
        *(unsigned char *)(v2 + v6) = 1;
        uint64_t v9 = *(void **)(v2 + v7);
        swift_retain();
        [v9 removeListener:v2];
        id v10 = [*(id *)(v2 + v7) thumbnail];
        id v11 = v10;
        v8(v10, 0);

        return (id)sub_1000A7258((uint64_t)v8);
      }
    }
  }
  return result;
}

double DOCImageContainerFittingView.contentOffsetFromTop.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t DOCImageContainerFittingView.contentOffsetFromTop.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t DOCImageContainerFittingView.isShadowHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden);
  swift_beginAccess();
  return *v1;
}

void DOCImageContainerFittingView.isShadowHidden.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden);
  swift_beginAccess();
  unsigned char *v3 = a1;
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

void (*DOCImageContainerFittingView.isShadowHidden.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100242338;
}

void sub_100242338(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
  }
}

void sub_10024236C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_metrics] = 0x4014000000000000;
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop] = 0;
  v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes] = _swiftEmptyArrayStorage;
  uint64_t v9 = 3;
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_maxThumbnailCount] = 3;
  *(void *)&v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes] = _swiftEmptyArrayStorage;
  v36.receiver = v4;
  v36.super_class = (Class)type metadata accessor for DOCImageContainerFittingView();
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v34 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_metrics;
  char v35 = &v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  uint64_t v33 = v10;
  id v11 = v10;
  do
  {
    double v12 = *(double *)&v33[v34];
    id v13 = [objc_allocWithZone((Class)DOCFittingImageView) init];
    id v14 = [v13 layer];
    [v14 setBorderWidth:1.0];

    id v15 = [v13 layer];
    [v15 setCornerRadius:v12];

    [v13 setContentMode:1];
    [v13 setClipsToBounds:1];
    double v16 = *(double *)&v33[v34];
    id v17 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v17 setClipsToBounds:0];
    id v18 = [v17 layer];
    [v18 setMasksToBounds:0];
    [v18 setBorderWidth:0.0];
    [v18 setCornerRadius:v16];
    [v18 setShadowOffset:0.0, 4.0];
    LODWORD(v19) = 1036831949;
    [v18 setShadowOpacity:v19];

    [v13 setDelegate:v11];
    [v13 frame];
    [v17 setFrame:];
    [v13 setClipsToBounds:1];
    swift_beginAccess();
    id v20 = *(void **)v35;
    id v21 = v13;
    id v22 = v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)char v35 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v20 = sub_10018FD24(0, v20[2] + 1, 1, v20);
      *(void *)char v35 = v20;
    }
    unint64_t v25 = v20[2];
    unint64_t v24 = v20[3];
    if (v25 >= v24 >> 1)
    {
      id v20 = sub_10018FD24((void *)(v24 > 1), v25 + 1, 1, v20);
      *(void *)char v35 = v20;
    }
    _OWORD v20[2] = v25 + 1;
    id v26 = &v20[2 * v25];
    v26[4] = v21;
    v26[5] = v22;
    swift_endAccess();

    --v9;
  }
  while (v9);
  id v27 = *(void **)v35;
  uint64_t v28 = *(void *)(*(void *)v35 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = (void **)&v27[2 * v28 + 3];
    while (v28 <= v27[2])
    {
      --v28;
      id v30 = *v29;
      id v31 = *(v29 - 1);
      id v32 = v30;
      [v11 addSubview:v32];
      [v11 addSubview:v31];

      v29 -= 2;
      if (!v28)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    [v11 setClipsToBounds:0 v33];
    sub_1002438FC();
  }
}

double DOCImageContainerFittingView.fittingSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess();
  if (!*(void *)(*(void *)v1 + 16)) {
    return 0.0;
  }
  [*(id *)(*(void *)v1 + 32) fittingSize];
  return result;
}

id DOCImageContainerFittingView.fittingSize.setter(double a1, double a2)
{
  id v5 = &v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 32;
    do
    {
      [*(id *)(v6 + v8) setFittingSize:a1, a2];
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return [v2 invalidateIntrinsicContentSize];
}

void (*DOCImageContainerFittingView.fittingSize.modify(void *a1))(double **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16))
  {
    [*(id *)(*(void *)v5 + 32) fittingSize];
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  v3[3] = v6;
  v3[4] = v7;
  return sub_1002429B0;
}

void sub_1002429B0(double **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (char *)*((void *)*a1 + 5);
  uint64_t v4 = *(void *)&v3[*((void *)v2 + 6)];
  uint64_t v5 = *(void *)(v4 + 16);
  if (a2)
  {
    if (!v5) {
      goto LABEL_10;
    }
    double v7 = v2[3];
    double v6 = v2[4];
    uint64_t v8 = (void **)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v9 = *v8;
      v8 += 2;
      [v9 setFittingSize:v7, v6];
      --v5;
    }
    while (v5);
  }
  else
  {
    if (!v5) {
      goto LABEL_10;
    }
    double v11 = v2[3];
    double v10 = v2[4];
    double v12 = (void **)(v4 + 32);
    swift_bridgeObjectRetain();
    do
    {
      id v13 = *v12;
      v12 += 2;
      [v13 setFittingSize:v11, v10];
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = (char *)*((void *)v2 + 5);
LABEL_10:
  [v3 invalidateIntrinsicContentSize];

  free(v2);
}

void *DOCImageContainerFittingView.firstThumbnailView.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess();
  if (!*(void *)(*(void *)v1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(void **)(*(void *)v1 + 32);
  id v3 = v2;
  return v2;
}

id sub_100242AF4()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
  swift_beginAccess();
  unint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  id v3 = (uint64_t *)sub_1000D3048(3, v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t i = v8;
  swift_bridgeObjectRelease();
  if (i)
  {
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    double v11 = (void *)swift_dynamicCastClass();
    if (!v11)
    {
      swift_unknownObjectRelease();
      double v11 = _swiftEmptyArrayStorage;
    }
    uint64_t v12 = v11[2];
    swift_release();
    if (__OFSUB__(i >> 1, v7)) {
      goto LABEL_45;
    }
    if (v12 != (i >> 1) - v7) {
      goto LABEL_46;
    }
    double v10 = (void *)swift_dynamicCastClass();
    if (!v10)
    {
      swift_unknownObjectRelease();
      double v10 = _swiftEmptyArrayStorage;
    }
    goto LABEL_9;
  }
  while (1)
  {
    double v10 = sub_1002F4C80((uint64_t)v3, v5, v7, i);
LABEL_9:
    swift_unknownObjectRelease();
    uint64_t v13 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes;
    *(void *)&v49[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes] = v10;
    swift_bridgeObjectRelease();
    id v3 = (uint64_t *)&v49[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails];
    swift_beginAccess();
    uint64_t v5 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v7) {
        goto LABEL_18;
      }
    }
    if (v7 >= 1) {
      break;
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_unknownObjectRelease();
  }
  for (unint64_t i = 0; i != v7; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v14 = *(void **)(v5 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    [v14 removeListener:v49, v44, v45];
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  uint64_t *v3 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v15 = &v49[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  id v48 = v15;
  uint64_t v16 = *(void *)v15;
  uint64_t v5 = *(void *)(*(void *)v15 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    id v17 = (void **)(v16 + 40);
    do
    {
      id v18 = *v17;
      unint64_t i = *(v17 - 1);
      id v19 = v18;
      [(id)i setHidden:1];
      [v19 setHidden:1];

      v17 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  unint64_t v20 = *(void *)&v49[v13];
  if (v20 >> 62)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        break;
      }
LABEL_24:
      id v46 = self;
      if (v7 < 1) {
        goto LABEL_44;
      }
      uint64_t v5 = 0;
      unint64_t v21 = 0;
      unint64_t v47 = v20 & 0xC000000000000001;
      id v22 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
      uint64_t v44 = v7;
      uint64_t v45 = v20;
      while (1)
      {
        if (v47)
        {
          id v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v23 = *(void **)(v20 + 8 * v21 + 32);
          swift_unknownObjectRetain();
        }
        if (v21 >= *(void *)(*(void *)v48 + 16)) {
          break;
        }
        uint64_t v24 = *(void *)v48 + v5;
        unint64_t v25 = *(void **)(v24 + 40);
        id v26 = *(id *)(v24 + 32);
        id v27 = v25;
        id v28 = [v49 v22[385]];
        unint64_t v29 = (unint64_t)[v28 userInterfaceStyle];

        if (v29 >= 3)
        {
          type metadata accessor for UIUserInterfaceStyle(0);
          v50[3] = v31;
          v50[0] = v29;
          doc_warnUnrecognizedEnumValueEncountered(_:)();
          sub_10009B1B8((uint64_t)v50);
          uint64_t v30 = 1;
        }
        else
        {
          uint64_t v30 = qword_1005A39A0[v29];
        }
        if (*(void *)(*(void *)v48 + 16))
        {
          [*(id *)(*(void *)v48 + 32) fittingSize];
          double v33 = v32;
          double v35 = v34;
        }
        else
        {
          double v35 = 0.0;
          double v33 = 0.0;
        }
        id v36 = [v49 v22[385] v44 v45];
        [v36 displayScale];
        double v38 = v37;

        id v39 = [objc_allocWithZone((Class)DOCThumbnailDescriptor) initWithSize:v30 scale:0 style:1 isFolded:[v23 isFolder] isInteractive:v33 isFolder:v35];
        id v40 = [v46 sharedGenerator];
        unint64_t i = (unint64_t)[v40 thumbnailForNode:v23 descriptor:v39 forceFetch:1];

        [(id)i addListener:v49];
        swift_beginAccess();
        swift_unknownObjectRetain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v21;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        [v26 setHidden:0];
        [v27 setHidden:0];
        id v41 = v26;
        id v42 = [(id)i thumbnail];
        [v41 setImage:v42];
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        v5 += 16;
        unint64_t v20 = v45;
        id v22 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
        if (v44 == v21) {
          goto LABEL_42;
        }
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_24;
    }
  }
LABEL_42:
  swift_bridgeObjectRelease();
  sub_1002438FC();
  [v49 invalidateIntrinsicContentSize];
  return [v49 setNeedsLayout];
}

uint64_t DOCImageContainerFittingView.nodes.getter()
{
  return swift_bridgeObjectRetain();
}

id DOCImageContainerFittingView.nodes.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
  swift_beginAccess();
  void *v3 = a1;
  swift_bridgeObjectRelease();
  return sub_100242AF4();
}

id (*DOCImageContainerFittingView.nodes.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100243268;
}

id sub_100243268(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_100242AF4();
  }
  return result;
}

double DOCImageContainerFittingView.systemLayoutSizeFitting(_:)(double a1)
{
  id v3 = &v1[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  if (v4)
  {
    double v5 = 0.0;
    uint64_t v6 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v7 = *v6;
      id v8 = *(v6 - 1);
      id v9 = v7;
      id v10 = [v8 image];
      if (v10)
      {
        double v11 = v10;
        [v10 size];
        id v12 = [v1 window];
        if (v12)
        {
          uint64_t v13 = v12;
          id v14 = [v12 screen];

          [v14 scale];
        }
        DOCAdaptSizeToRect();
        CGFloat v16 = v15;
        CGFloat v18 = v17;
        CGFloat v20 = v19;
        CGFloat v22 = v21;
        [v8 transform];
        v26.origin.CGFloat x = v16;
        v26.origin.CGFloat y = v18;
        v26.size.CGFloat width = v20;
        v26.size.double height = v22;
        CGRect v27 = CGRectApplyAffineTransform(v26, &v25);
        double height = v27.size.height;

        if (v5 <= height) {
          double v5 = height;
        }
      }
      else
      {
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return a1;
}

id DOCImageContainerFittingView.intrinsicContentSize.getter()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    [*(id *)(*(void *)v1 + 32) fittingSize];
  }
  else
  {
    double v3 = 0.0;
    double v2 = 0.0;
  }
  return [v0 systemLayoutSizeFittingSize:v2 v3];
}

Swift::Void __swiftcall DOCImageContainerFittingView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for DOCImageContainerFittingView();
  [super layoutSubviews];
  DOCImageContainerFittingView.updateContentFrame()();
  [v0 setContentOffsetFromTop:0.0];
}

Swift::Void __swiftcall DOCImageContainerFittingView.updateContentFrame()()
{
  [v0 bounds];
  objc_super v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2)
  {
    double v3 = (void **)(swift_bridgeObjectRetain() + 40);
    do
    {
      double v17 = *v3;
      id v18 = *(v3 - 1);
      id v19 = v17;
      id v20 = v18;
      id v21 = v19;
      [v20 intrinsicContentSize];
      id v22 = [v0 window];
      if (v22)
      {
        uint64_t v4 = v22;
        id v5 = [v22 screen];

        [v5 scale];
      }
      DOCAdaptSizeToRect();
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      id v14 = v20;
      v23.origin.CGFloat x = v7;
      v23.origin.CGFloat y = v9;
      v23.size.CGFloat width = v11;
      v23.size.double height = v13;
      double MidX = CGRectGetMidX(v23);
      v24.origin.CGFloat x = v7;
      v24.origin.CGFloat y = v9;
      v24.size.CGFloat width = v11;
      v24.size.double height = v13;
      [v14 setCenter:MidX, CGRectGetMidY(v24)];

      id v16 = v14;
      [v16 bounds];
      [v16 setBounds:];

      [v16 center];
      [v21 setCenter:];
      [v16 bounds];
      [v21 bounds];
      [v21 setBounds:];

      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

void sub_1002438FC()
{
  objc_super v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v5 = 0;
    CGFloat b = CGAffineTransformIdentity.b;
    tCGFloat x = CGAffineTransformIdentity.tx;
    CGFloat d = CGAffineTransformIdentity.d;
    CGFloat c = CGAffineTransformIdentity.c;
    tCGFloat y = CGAffineTransformIdentity.ty;
    while (v5 < *(void *)(v2 + 16))
    {
      uint64_t v9 = v2 + 32 + 16 * v5;
      double v10 = *(void **)v9;
      CGFloat v11 = *(void **)(v9 + 8);
      if (v5)
      {
        t1.CGFloat a = 0.0;
        id v12 = v10;
        id v13 = v11;
        while (1)
        {
          swift_stdlib_random();
          if ((unint64_t)(0x20000000000001 * *(void *)&t1.a) >= 0x1FFFFFFFFFF801) {
            break;
          }
          t1.CGFloat a = 0.0;
        }
        unint64_t v14 = (*(unint64_t *)&t1.a * (unsigned __int128)0x20000000000001uLL) >> 64;
        double v15 = (double)v14 * 1.11022302e-16 * 4.0 + 3.0;
        if (v14 == 0x20000000000000) {
          double v15 = 7.0;
        }
        if ((v5 & 1) == 0) {
          double v15 = -v15;
        }
        CGAffineTransformMakeRotation(&t1, v15 * 3.14159265 / 180.0);
        CGFloat a = t1.a;
        CGFloat v17 = t1.b;
        CGFloat v18 = t1.c;
        CGFloat v19 = t1.d;
        CGFloat v20 = t1.tx;
        CGFloat v21 = t1.ty;
      }
      else
      {
        id v22 = v10;
        id v23 = v11;
        CGFloat v17 = b;
        CGFloat a = CGAffineTransformIdentity.a;
        CGFloat v19 = d;
        CGFloat v18 = c;
        CGFloat v20 = tx;
        CGFloat v21 = ty;
      }
      if (*v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      CGFloat v26 = b;
      CGFloat v25 = CGAffineTransformIdentity.a;
      CGFloat v28 = d;
      CGFloat v27 = c;
      CGFloat v29 = tx;
      CGFloat v30 = ty;
      if (v24 >= 2)
      {
        CGAffineTransformMakeScale(&t1, 0.95, 0.95);
        CGFloat v25 = t1.a;
        CGFloat v26 = t1.b;
        CGFloat v27 = t1.c;
        CGFloat v28 = t1.d;
        CGFloat v29 = t1.tx;
        CGFloat v30 = t1.ty;
      }
      ++v5;
      t1.CGFloat a = a;
      t1.CGFloat b = v17;
      t1.CGFloat c = v18;
      t1.CGFloat d = v19;
      t1.tCGFloat x = v20;
      t1.tCGFloat y = v21;
      t2.CGFloat a = v25;
      t2.CGFloat b = v26;
      t2.CGFloat c = v27;
      t2.CGFloat d = v28;
      t2.tCGFloat x = v29;
      t2.tCGFloat y = v30;
      CGAffineTransformConcat(&v34, &t1, &t2);
      CGAffineTransform t1 = v34;
      [v10 setTransform:&t1];
      [v10 transform];
      [v11 setTransform:&t1];
      id v8 = [v10 layer];
      [v8 setAllowsEdgeAntialiasing:1];

      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0()
{
  uint64_t v35 = OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes;
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes);
  if (v1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    id v37 = self;
    uint64_t v3 = (unsigned __int8 *)(v36 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden);
    uint64_t v34 = v36 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
    swift_beginAccess();
    double v33 = v3;
    swift_beginAccess();
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v32 = v2;
    while (1)
    {
      uint64_t v14 = *(void *)(v36 + v35);
      if ((v14 & 0xC000000000000001) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      double v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_12:
      swift_getObjectType();
      if (DOCNode.areDiskPropertiesSupported.getter()) {
        unsigned int v16 = 2;
      }
      else {
        unsigned int v16 = [v15 isFolder];
      }
      swift_unknownObjectRelease();
      if (v5 >= *(void *)(*(void *)v34 + 16)) {
        goto LABEL_27;
      }
      uint64_t v17 = *(void *)v34 + v4;
      CGFloat v18 = *(void **)(v17 + 32);
      id v19 = *(id *)(v17 + 40);
      id v20 = v18;
      id v21 = [v20 layer];
      if (v16)
      {
        id v22 = [v37 clearColor];
        CGFloat a = COERCE_DOUBLE([v22 CGColor]);
      }
      else
      {
        type metadata accessor for CGColor(0);
        _CGColorInitTrampoline.init(_colorLiteralRed:green:blue:alpha:)();
        CGFloat a = v38.a;
      }
      [v21 setBorderColor:a, v32];

      [v19 setHidden:*v33];
      id v24 = [v19 layer];
      if (v16 == 1)
      {
        [v19 bounds];
        double v26 = v25;
        double v28 = v27;
        sub_1002454F4();
        CGFloat v29 = (void *)static UIBezierPath.folder.getter();
        CGFloat v30 = v29;
        if (v26 > 0.0 && v28 > 0.0)
        {
          [v29 bounds];
          CGAffineTransformMakeScale(&v38, v26 / v31, v26 / v31);
          [v30 applyTransform:&v38];
          CGAffineTransformMakeTranslation(&v38, 0.0, 0.0);
          [v30 applyTransform:&v38];
        }
        id v6 = [v30 CGPath];
      }
      else
      {
        id v6 = 0;
      }
      ++v5;
      [v24 setShadowPath:v6];

      id v7 = [v19 layer];
      id v8 = &selRef_systemBackgroundColor;
      if (v16) {
        id v8 = &selRef_clearColor;
      }
      id v9 = [v37 *v8];
      id v10 = [v9 CGColor];

      [v7 setBackgroundColor:v10];
      id v11 = [v19 layer];
      id v12 = [v37 blackColor];
      id v13 = [v12 CGColor];

      [v11 setShadowColor:v13];
      v4 += 16;
      if (v32 == v5) {
        return;
      }
    }
    if (v5 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      double v15 = *(void **)(v14 + 8 * v5 + 32);
      swift_unknownObjectRetain();
      goto LABEL_12;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
  }
}

void DOCImageContainerFittingView.thumbnailLoaded(_:)(void *a1)
{
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1002451A8(v2, a1);
  char v5 = v4;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v5 & 1) == 0) {
    sub_100244224(a1, v3);
  }
}

void sub_100244224(void *a1, unint64_t a2)
{
  id v7 = &v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(*(void *)v7 + 16) <= a2)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11 > 1) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  a2 = (unint64_t)*(id *)(*(void *)v7 + 16 * a2 + 32);
  id v7 = (char *)[(id)a2 image];
  char v4 = &selRef_setManageButtonTitle_;
  unint64_t v3 = (char *)[a1 thumbnail];
  unint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes];
  if (v8 >> 62) {
    goto LABEL_11;
  }
  if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
LABEL_7:

    goto LABEL_8;
  }
LABEL_5:
  if (v7)
  {
    id v7 = v7;
    [v7 size];
    [v7 size];
    [v3 size];
    [v3 size];

    unint64_t v3 = v7;
    goto LABEL_7;
  }
LABEL_8:

  id v9 = (id)a2;
  id v10 = [a1 v4[132]];
  [v9 setImage:v10];

  DOCImageContainerFittingView.updateContentFrame()();
  [v2 setNeedsLayout];
}

id DOCImageContainerFittingView.__deallocating_deinit()
{
  return sub_100245098(type metadata accessor for DOCImageContainerFittingView);
}

double DOCContainerFittingView.intrinsicContentSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize;
  swift_beginAccess();
  return *(double *)v1;
}

id DOCContainerFittingView.fittingSize.setter(double a1, double a2)
{
  char v5 = (double *)&v2[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  swift_beginAccess();
  double *v5 = a1;
  v5[1] = a2;
  return [v2 invalidateIntrinsicContentSize];
}

id (*DOCContainerFittingView.fittingSize.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1002445D8;
}

id sub_1002445D8(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    char v5 = *(void **)(a1 + 24);
    return [v5 invalidateIntrinsicContentSize];
  }
  return result;
}

double DOCContainerFittingView.contentOffsetFromTop.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t DOCContainerFittingView.contentOffsetFromTop.setter(double a1)
{
  unint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

char *DOCContainerFittingView.__allocating_init(containedViewController:)(void *a1)
{
  unint64_t v3 = objc_allocWithZone(v1);
  char v4 = &v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  void *v4 = 0;
  v4[1] = 0;
  v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files23DOCContainerFittingView_containedViewController] = a1;
  v11.receiver = v3;
  v11.super_class = v1;
  id v5 = a1;
  id v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t result = (char *)[v5 view];
  if (result)
  {
    unint64_t v8 = result;
    [v6 addSubview:result];

    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v9 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();

    swift_release();
    swift_release();

    id v10 = *(void **)&v6[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext];
    *(void *)&v6[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = v9;

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *DOCContainerFittingView.init(containedViewController:)(void *a1)
{
  unint64_t v3 = &v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  void *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCContainerFittingView_containedViewController] = a1;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCContainerFittingView();
  id v4 = a1;
  id v5 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t result = (char *)[v4 view];
  if (result)
  {
    id v7 = result;
    [v5 addSubview:result];

    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();

    swift_release();
    swift_release();

    uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext];
    *(void *)&v5[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = v8;

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100244A88()
{
  sub_1000CBE70(&qword_10070BAA8);
  NSKeyValueObservedChange.oldValue.getter();
  NSKeyValueObservedChange.newValue.getter();
  if (v5)
  {
    if (v8) {
      return;
    }
    goto LABEL_9;
  }
  if ((v8 & 1) != 0 || (v3 == v6 ? (BOOL v0 = v4 == v7) : (BOOL v0 = 0), !v0))
  {
LABEL_9:
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v2 = Strong;
      [Strong invalidateIntrinsicContentSize];
      [v2 setNeedsLayout];
      [v2 layoutIfNeeded];
      *((unsigned char *)v2 + OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates) = 0;
    }
  }
}

Swift::Void __swiftcall DOCContainerFittingView.layoutSubviews()()
{
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for DOCContainerFittingView();
  [super layoutSubviews];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_containedViewController];
  [v9 preferredContentSize];
  id v10 = [v0 window];
  if (v10)
  {
    objc_super v11 = v10;
    id v12 = [v10 screen];

    [v12 scale];
  }
  DOCAdaptSizeToRect();
  double v14 = v13;
  CGFloat v16 = v15;
  double v18 = v17;
  double v20 = v19;
  v32.origin.CGFloat x = v2;
  v32.origin.CGFloat y = v4;
  v32.size.CGFloat width = v6;
  v32.size.double height = v8;
  double MaxY = CGRectGetMaxY(v32);
  v33.origin.CGFloat x = v14;
  v33.origin.CGFloat y = v16;
  v33.size.CGFloat width = v18;
  v33.size.double height = v20;
  double Height = CGRectGetHeight(v33);
  id v23 = [v9 view];
  if (!v23)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v24 = v23;
  [v23 setFrame:v14 MaxY - Height, v18, v20];

  if (v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates]) {
    return;
  }
  [v0 frame];
  double v26 = v25;
  id v27 = [v9 view];
  if (!v27)
  {
LABEL_9:
    __break(1u);
    return;
  }
  double v28 = v27;
  [v27 frame];
  double v30 = v29;

  [v0 setContentOffsetFromTop:v26 - v30];
}

id DOCInlineRenameOverlayView.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

void DOCContainerFittingView.init(coder:)()
{
  double v1 = &v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_fittingSize];
  *double v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_preventContentOffsetUpdates] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_contentOffsetFromTop] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCContainerFittingView_observationContext] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id DOCInlineRenameOverlayView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithFrame:a1, a2, a3, a4];
}

void DOCContainerFittingView.init(frame:)()
{
}

id DOCContainerFittingView.__deallocating_deinit()
{
  return sub_100245098(type metadata accessor for DOCContainerFittingView);
}

id sub_100245098(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

unint64_t sub_10024511C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    uint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002451A8(unint64_t a1, void *a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
LABEL_3:
  for (uint64_t i = 0; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      CGFloat v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      CGFloat v6 = *(void **)(a1 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    id v7 = [v6 hash];
    id v8 = [a2 hash];
    swift_unknownObjectRelease();
    if (v7 == v8) {
      break;
    }
    uint64_t v9 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    if (v9 == v4) {
      return 0;
    }
  }
  return i;
}

void _s5Files28DOCImageContainerFittingViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_metrics] = 0x4014000000000000;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_contentOffsetFromTop] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_thumbnails] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_displayedNodes] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_maxThumbnailCount] = 3;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for DOCImageContainerFittingView()
{
  return self;
}

const char *sub_1002453C4()
{
  return "preferredContentSize";
}

id sub_1002453D0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 preferredContentSize];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_100245404(double *a1, id *a2)
{
  return [*a2 setPreferredContentSize:*a1, a1[1]];
}

uint64_t sub_100245418()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100245450()
{
}

uint64_t type metadata accessor for DOCContainerFittingView()
{
  return self;
}

uint64_t assignWithCopy for DOCImageContainerFittingView.ViewPair(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for DOCImageContainerFittingView.ViewPair()
{
  return &type metadata for DOCImageContainerFittingView.ViewPair;
}

ValueMetadata *type metadata accessor for DOCImageContainerFittingView.Metrics()
{
  return &type metadata for DOCImageContainerFittingView.Metrics;
}

unint64_t sub_1002454F4()
{
  unint64_t result = qword_10070ACC0;
  if (!qword_10070ACC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070ACC0);
  }
  return result;
}

unint64_t sub_10024553C()
{
  unint64_t result = qword_10070BAB0;
  if (!qword_10070BAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BAB0);
  }
  return result;
}

uint64_t sub_100245590()
{
  return sub_100246D20((unint64_t *)&unk_100707F90, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

uint64_t sub_1002455D8()
{
  uint64_t v0 = sub_1000CBE70(&qword_10070BB20);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_10070BB28);
  __chkstk_darwin(v1);
  sub_1002465DC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005DFA70;
  v2._countAndFlagsBits = 0xD00000000000001FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_10070BB30);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100245778(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for OpenURLIntent();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  sub_1000CBE70(&qword_1007076B0);
  v2[20] = swift_task_alloc();
  uint64_t Name = type metadata accessor for DeepLinkComponents.QueryName();
  v2[21] = Name;
  v2[22] = *(void *)(Name - 8);
  v2[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DeepLinkComponents.Scheme();
  v2[24] = v5;
  v2[25] = *(void *)(v5 - 8);
  v2[26] = swift_task_alloc();
  sub_1000CBE70(&qword_10070BB00);
  v2[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URLComponents();
  v2[28] = v6;
  v2[29] = *(void *)(v6 - 8);
  v2[30] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v2[31] = v7;
  v2[32] = *(void *)(v7 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = type metadata accessor for DOCFileEntity();
  v2[38] = swift_task_alloc();
  return _swift_task_switch(sub_100245A60, 0, 0);
}

uint64_t sub_100245A60()
{
  uint64_t v2 = v0[37];
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[35];
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = *(void **)(v1 + *(int *)(v2 + 32));
  v0[39] = v4;
  id v5 = v4;
  sub_100117404(v1);
  id v6 = [self defaultManager];
  v0[40] = v6;
  v0[2] = v0;
  v0[7] = v3;
  v0[3] = sub_100245BBC;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100388CB0;
  v0[13] = &unk_10069AEA0;
  v0[14] = v7;
  [v6 fetchURLForItem:v5 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100245BBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 328) = v1;
  if (v1) {
    uint64_t v2 = sub_100246374;
  }
  else {
    uint64_t v2 = sub_100245CCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100245CCC()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[27];
  id v5 = *(void (**)(void))(v0[32] + 32);
  ((void (*)(void, void, void))v5)(v0[36], v0[35], v0[31]);

  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    id v6 = (void *)v0[39];
    uint64_t v7 = v0[36];
    uint64_t v9 = v0[31];
    uint64_t v8 = v0[32];
    sub_1000CBBA4(v0[27], &qword_10070BB00);
    uint64_t v10 = type metadata accessor for DeepLinkError();
    sub_100246D20(&qword_10070BB08, (void (*)(uint64_t))&type metadata accessor for DeepLinkError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for DeepLinkError.deeplinkConstructionError(_:), v10);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_7;
  }
  id v40 = v5;
  uint64_t v43 = v0[32];
  uint64_t v45 = v0[31];
  uint64_t v12 = v0[26];
  uint64_t v14 = v0[24];
  uint64_t v13 = v0[25];
  uint64_t v15 = v0[22];
  uint64_t v16 = v0[23];
  uint64_t v41 = v0[21];
  uint64_t v42 = v0[20];
  (*(void (**)(void, void, void))(v0[29] + 32))(v0[30], v0[27], v0[28]);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, enum case for DeepLinkComponents.Scheme.shareddocuments(_:), v14);
  DeepLinkComponents.Scheme.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  URLComponents.scheme.setter();
  sub_1000CBE70(&qword_10070BB10);
  type metadata accessor for URLQueryItem();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005A0030;
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v16, enum case for DeepLinkComponents.QueryName.open(_:), v41);
  DeepLinkComponents.QueryName.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v41);
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v42, 1, v45);
  uint64_t v44 = (void *)v0[39];
  if (v17 == 1)
  {
    uint64_t v18 = v0[36];
    uint64_t v19 = v0[31];
    uint64_t v20 = v0[32];
    uint64_t v22 = v0[29];
    uint64_t v21 = v0[30];
    uint64_t v23 = v0[28];
    sub_1000CBBA4(v0[20], &qword_1007076B0);
    uint64_t v24 = type metadata accessor for DeepLinkError();
    sub_100246D20(&qword_10070BB08, (void (*)(uint64_t))&type metadata accessor for DeepLinkError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, enum case for DeepLinkError.deeplinkConstructionError(_:), v24);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    goto LABEL_5;
  }
  uint64_t v39 = v0[36];
  uint64_t v27 = v0[34];
  uint64_t v28 = v0[32];
  uint64_t v29 = v0[33];
  uint64_t v30 = v0[31];
  uint64_t v31 = v0[29];
  uint64_t v37 = v0[28];
  uint64_t v38 = v0[30];
  uint64_t v32 = v0[19];
  uint64_t v33 = v0[17];
  uint64_t v34 = v0[18];
  v40(v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v29, v27, v30);
  OpenURLIntent.init(_:)();
  sub_100246D20(&qword_10070BB18, (void (*)(uint64_t))&type metadata accessor for OpenURLIntent);
  static IntentResult.result<A>(opensIntent:)();

  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v35(v27, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v38, v37);
  v35(v39, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v26 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v26();
}

uint64_t sub_100246374()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = (void *)v0[39];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10024647C()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1002464A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileEntity();
  __chkstk_darwin(v2 - 8);
  sub_1001173A0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_100117404(a1);
}

void (*sub_100246530(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10024658C;
}

void sub_10024658C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_1002465DC()
{
  unint64_t result = qword_10070BAB8;
  if (!qword_10070BAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BAB8);
  }
  return result;
}

unint64_t sub_100246634()
{
  unint64_t result = qword_10070BAC0;
  if (!qword_10070BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BAC0);
  }
  return result;
}

unint64_t sub_10024668C()
{
  unint64_t result = qword_10070BAC8;
  if (!qword_10070BAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BAC8);
  }
  return result;
}

uint64_t sub_1002466E0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100246714()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100246730(uint64_t a1)
{
  unint64_t v2 = sub_100246D94();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_100246784(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10000CB70;
  return sub_100245778(a1, v4);
}

uint64_t sub_100246824@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100246968();
  *a1 = result;
  return result;
}

uint64_t sub_10024684C(uint64_t a1)
{
  unint64_t v2 = sub_1002465DC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10024688C()
{
  unint64_t result = qword_10070BAD8;
  if (!qword_10070BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BAD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenFileIntent()
{
  return &type metadata for OpenFileIntent;
}

uint64_t sub_1002468F0()
{
  return sub_100073DF0(&qword_10070BAE0, &qword_10070BAE8);
}

uint64_t sub_10024692C()
{
  return sub_100073DF0(&qword_10070BAF0, &qword_10071B630);
}

uint64_t sub_100246968()
{
  uint64_t v21 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_1007075E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_100707AF0);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = type metadata accessor for DOCFileEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  uint64_t v17 = type metadata accessor for IntentDialog();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v8, 1, 1, v17);
  v18(v6, 1, 1, v17);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v21);
  sub_100246D20(&qword_1007075F0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  return IntentParameter<>.init(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_100246D20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100246D68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100246D94()
{
  unint64_t result = qword_10070BB38;
  if (!qword_10070BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB38);
  }
  return result;
}

uint64_t sub_100246DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v24 - v8;
  v10.super.super.Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  uint64_t v11 = self;
  id v12 = [v11 sharedStore];
  id v13 = [v12 interfaceStateForConfiguration:a2];

  if (v13)
  {
    [v13 setSizeSetting:v10.super.super.isa];
    id v14 = [v11 sharedStore];
    [v14 updateInterfaceState:v13 forConfiguration:a2];

    static Logger.StateStore.getter();
    uint64_t v15 = v10.super.super.isa;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v29 = v25;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v27 = v4;
      uint64_t v28 = sub_10009B0E4(0xD000000000000028, 0x80000001005DFA90, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 12) = 2112;
      uint64_t v26 = v3;
      uint64_t v28 = (uint64_t)v15;
      uint64_t v19 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v15;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s saving new size setting with raw value: %@ to defaults", (uint8_t *)v18, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v26);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    static Logger.StateStore.getter();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_10009B0E4(0xD000000000000028, 0x80000001005DFA90, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s - failed to save default size setting, state store was nil", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

uint64_t sub_10024726C()
{
  uint64_t v1 = type metadata accessor for DOCDebugInfoManager.OutputKind();
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100704EB0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100736E80;
  uint64_t v5 = qword_100704EA8;
  id v6 = v0;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = [v6 internalNavigationController];
  id v8 = [v7 navigationBar];

  void *v3 = v6;
  v3[1] = v8;
  swift_storeEnumTagMultiPayload();
  id v9 = v6;
  sub_100195250(v4, v9, (uint64_t)v3, (uint64_t (*)(void))sub_1002473F0, 0);

  return sub_100197C54((uint64_t)v3);
}

uint64_t sub_1002473F0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Did complete debug info gathering", v6, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_10024756C()
{
  uint64_t v1 = v0;
  id v2 = [v0 internalNavigationController];
  type metadata accessor for DOCFullDocumentManagerNavigationController();
  id v21 = [(id)swift_dynamicCastClassUnconditional() navigationBar];

  id v3 = [v21 viewWithTag:3292022];
  if (!v3)
  {
    id v4 = [self standardUserDefaults];
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 stringForKey:v5];

    if (v6)
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v9 = v8;
    }
    else
    {
      unint64_t v9 = 0xE600000000000000;
      uint64_t v7 = 0x2A454E4F4E2ALL;
    }
    if (*(void *)"tory")
    {
      if (*(void *)"clearHistory" == v7 && *(void *)"tory" == v9)
      {
        uint64_t v20 = v1;
        uint64_t v19 = v7;
LABEL_15:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1000C0640(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1000C0640(0);
        swift_bridgeObjectRetain();
        v10._countAndFlagsBits = 0x6948207261656C43;
        v10._object = *(void **)"story";
        String.append(_:)(v10);
        swift_bridgeObjectRelease();
        v11._countAndFlagsBits = 10;
        v11._object = (void *)0xE100000000000000;
        String.append(_:)(v11);
        NSString v12 = String._bridgeToObjectiveC()();
        NSString v13 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v14 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:1];

        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = v19;
        *(void *)(v15 + 24) = *(void *)"tory";
        strcpy((char *)(v15 + 32), "Clear History");
        *(_WORD *)(v15 + 46) = unk_10068A2AE;
        *(_OWORD *)(v15 + 48) = xmmword_10068A2B0;
        *(void *)(v15 + 64) = sub_100247F0C;
        *(void *)(v15 + 72) = 0;
        *(_OWORD *)(v15 + 80) = xmmword_10068A2D0;
        *(void *)(v15 + 96) = v20;
        *(void *)(v15 + 104) = v14;
        aBlock[4] = sub_10024866C;
        aBlock[5] = v15;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_10069AEE0;
        uint64_t v16 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1000C0640(0);
        id v17 = v20;
        id v18 = v14;
        swift_release();
        [v17 presentViewController:v18 animated:1 completion:v16];
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000A7258(0);

        _Block_release(v16);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1000A7258(0);
        return;
      }
      if (_stringCompareWithSmolCheck(_:_:expecting:)())
      {
        uint64_t v20 = v1;
        uint64_t v19 = *(void *)"clearHistory";
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100247BB4(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  void (*v19)(void *__return_ptr, long long *);
  uint64_t v20;
  void *v22;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void v28[10];
  long long v29;
  long long v30;
  long long v31;
  long long v32;
  long long v33;

  swift_retain();
  specialized ContiguousArray.reserveCapacity(_:)();
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  char v3 = 0;
  uint64_t v4 = 0;
  do
  {
    char v14 = v3;
    uint64_t v15 = &off_10068A330 + 10 * v4;
    long long v16 = v15[6];
    long long v17 = v15[4];
    uint64_t v32 = v15[5];
    uint64_t v33 = v16;
    long long v18 = v15[2];
    uint64_t v30 = v15[3];
    uint64_t v31 = v17;
    uint64_t v29 = v18;
    uint64_t v20 = *((void *)&v16 + 1);
    uint64_t v19 = (void (*)(void *__return_ptr, long long *))v16;
    uint64_t v27 = v14;
    if ((void)v16)
    {
      sub_100248824((uint64_t)&v29);
      sub_1000C0640((uint64_t)v19);
      v19(v28, &v29);
      sub_1000A7258((uint64_t)v19);
      uint64_t v19 = (void (*)(void *__return_ptr, long long *))v28[8];
      uint64_t v20 = v28[9];
      uint64_t v5 = v28[7];
      uint64_t v6 = v28[4];
      uint64_t v25 = v28[6];
      uint64_t v26 = v28[5];
      uint64_t v7 = v28[2];
      uint64_t v8 = v28[3];
      uint64_t v10 = v28[0];
      uint64_t v9 = v28[1];
    }
    else
    {
      uint64_t v5 = *((void *)&v32 + 1);
      uint64_t v25 = v32;
      uint64_t v26 = *((void *)&v31 + 1);
      uint64_t v6 = v31;
      uint64_t v8 = *((void *)&v30 + 1);
      uint64_t v7 = v30;
      uint64_t v9 = *((void *)&v29 + 1);
      uint64_t v10 = v29;
      sub_100248824((uint64_t)&v29);
      sub_100248824((uint64_t)&v29);
    }
    Swift::String v11 = (void *)swift_allocObject();
    v11[2] = a3;
    v11[3] = v10;
    v11[4] = v9;
    v11[5] = v7;
    v11[6] = v8;
    v11[7] = v6;
    v11[8] = v26;
    v11[9] = v25;
    v11[10] = v5;
    v11[11] = v19;
    v11[12] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000C0640((uint64_t)v19);
    os_log_type_t v22 = v11;
    NSString v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v13 = String._bridgeToObjectiveC()();
    [v12 setTitle:v13];

    [v12 setState:v6];
    [v12 setAttributes:v26];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000A7258((uint64_t)v19);
    sub_1002488F4((uint64_t)&v29);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    char v3 = 1;
    uint64_t v4 = 1;
  }
  while ((v27 & 1) == 0);
  swift_release();
  swift_arrayDestroy();
  a1(_swiftEmptyArrayStorage);
  return swift_release();
}

void sub_100247EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    (*(void (**)(void))(a3 + 48))();
  }
}

void sub_100247F0C(void *a1)
{
  uint64_t v1 = (char *)[a1 dataSource];
  id v2 = *(id *)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  sub_1000877C0();
}

void sub_100247F9C()
{
  byte_10070BB40 = (byte_10070BB40 & 1) == 0;
}

__n128 sub_100247FB4@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v4 = byte_10070BB40;
  if (byte_10070BB40) {
    uint64_t v5 = 695095080;
  }
  else {
    uint64_t v5 = 0x2966664F28;
  }
  if (byte_10070BB40) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  unint64_t v9 = *(void *)(a1 + 40);
  unint64_t v10 = *(void *)(a1 + 64);
  unint64_t v11 = *(void *)(a1 + 72);
  long long v16 = *(_OWORD *)(a1 + 16);
  unint64_t v15 = v10;
  __n128 v14 = *(__n128 *)(a1 + 48);
  unint64_t v12 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  sub_100248824(a1);
  swift_bridgeObjectRelease();
  sub_100220180((uint64_t)&v16);
  a2->n128_u64[0] = v7;
  a2->n128_u64[1] = v8;
  a2[1].n128_u64[0] = 0x20656C706D617845;
  a2[1].n128_u64[1] = 0xEF20656C67676F54;
  a2[2].n128_u64[0] = v4;
  a2[2].n128_u64[1] = v9;
  __n128 result = v14;
  a2[3] = v14;
  a2[4].n128_u64[0] = v15;
  a2[4].n128_u64[1] = v11;
  return result;
}

Class sub_1002480B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong && (uint64_t v1 = (void *)Strong, v2 = (void *)swift_unknownObjectWeakLoadStrong(), v1, v2))
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1005A04F0;
    unint64_t v4 = self;
    uint64_t v5 = (void *)swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4]._rawValue = sub_10024881C;
    aBlock[5]._rawValue = v5;
    aBlock[0]._rawValue = _NSConcreteStackBlock;
    aBlock[1]._rawValue = (void *)1107296256;
    aBlock[2]._rawValue = sub_100514064;
    aBlock[3]._rawValue = &unk_10069AF80;
    unint64_t v6 = _Block_copy(aBlock);
    swift_release();
    id v7 = [v4 elementWithUncachedProvider:v6];
    _Block_release(v6);
    *(void *)(v3 + 32) = v7;
    aBlock[0]._rawValue = (void *)v3;
    specialized Array._endMutation()();
    v8._countAndFlagsBits = 0x704F206775626544;
    v8._object = (void *)0xED0000736E6F6974;
    v13.value.super.Class isa = 0;
    v13.is_nil = 0;
    v9.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v13, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock[0]._rawValue, aBlock[0]).super.super.isa;
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v14.value.super.Class isa = 0;
    v14.is_nil = 0;
    return (Class)UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v14, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, aBlock[0]);
  }
  return v9.super.super.isa;
}

uint64_t sub_1002483F0()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_menuInteraction));

  return swift_unknownObjectWeakDestroy();
}

id sub_100248430()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s18DOCDebugMenuButtonCMa();
  return [super dealloc];
}

uint64_t _s18DOCDebugMenuButtonCMa()
{
  return self;
}

char *sub_1002484D8(void *a1)
{
  _s18DOCDebugMenuButtonCMa();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v2 setTag:3292022];
  swift_unknownObjectWeakAssign();
  uint64_t v3 = (char *)v2;
  [a1 center];
  [v3 setFrame:];

  [a1 addSubview:v3];
  id v4 = [objc_allocWithZone((Class)UIContextMenuInteraction) initWithDelegate:v3];
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_menuInteraction];
  *(void *)&v3[OBJC_IVAR____TtCFE5FilesCSo36DOCFullDocumentManagerViewControllerP33_C692D976BBFE9B383C702F853E4B344B16presentDebugMenuFT_T_L_18DOCDebugMenuButton_menuInteraction] = v4;
  id v6 = v4;

  [v3 addInteraction:v6];
  [v3 center];
  [v6 _presentMenuAtLocation:];

  return v3;
}

uint64_t sub_100248604()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 80)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 112, 7);
}

id sub_10024866C()
{
  uint64_t v1 = *(void **)(v0 + 104);
  (*(void (**)(void))(v0 + 64))(*(void *)(v0 + 96));

  return [v1 dismissViewControllerAnimated:1 completion:0];
}

id sub_1002486BC()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = self;
  v5[4] = sub_100248814;
  v5[5] = v0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1001FCE6C;
  v5[3] = &unk_10069AF30;
  id v2 = _Block_copy(v5);
  swift_retain_n();
  swift_release();
  id v3 = [v1 configurationWithIdentifier:0 previewProvider:0 actionProvider:v2];
  swift_release();
  _Block_release(v2);
  swift_release();
  return v3;
}

uint64_t sub_1002487DC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

Class sub_100248814()
{
  return sub_1002480B8();
}

uint64_t sub_10024881C(void (*a1)(void *), uint64_t a2)
{
  return sub_100247BB4(a1, a2, v2);
}

uint64_t sub_100248824(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000C0640(v2);
  return a1;
}

uint64_t sub_100248888()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 104, 7);
}

void sub_1002488E8(uint64_t a1)
{
  sub_100247EA4(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_1002488F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000A7258(v2);
  return a1;
}

uint64_t _s15DebugMenuActionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 64))
  {
    return swift_release();
  }
  return result;
}

uint64_t _s15DebugMenuActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  Swift::String v8 = (_OWORD *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v8;
  }
  return a1;
}

void *_s15DebugMenuActionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  a1[7] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[8];
  if (!a1[8])
  {
    if (v5)
    {
      uint64_t v7 = a2[9];
      a1[8] = v5;
      a1[9] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[9];
  a1[8] = v5;
  a1[9] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s8SettingsVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s15DebugMenuActionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_release();
  uint64_t v7 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  swift_release();
  return a1;
}

uint64_t _s15DebugMenuActionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15DebugMenuActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15DebugMenuActionVMa()
{
  return &_s15DebugMenuActionVN;
}

void sub_100248CC4()
{
  qword_1007371D8 = 0x4060000000000000;
}

Swift::Int sub_100248CD4()
{
  Swift::UInt64 v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_100248D20()
{
  Swift::UInt64 v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

ValueMetadata *type metadata accessor for DOCItemCellIconWidth()
{
  return &type metadata for DOCItemCellIconWidth;
}

unint64_t sub_100248D7C()
{
  unint64_t result = qword_10070BB80;
  if (!qword_10070BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BB80);
  }
  return result;
}

uint64_t sub_100248DD0()
{
  Swift::UInt64 v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v16.receiver = v1;
  v16.super_class = ObjectType;
  [super layoutAttributesForSupplementaryViewOfKind:v3 atIndexPath:isa];

  if (!v5) {
    return 0;
  }
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout;
  swift_beginAccess();
  sub_1000CB78C(v6, (uint64_t)v15, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = v5;
  unint64_t v14 = inited;
  specialized Array._endMutation()();
  id v8 = v5;
  unint64_t v9 = sub_1000D404C(v14);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_12;
  }
  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:

    id v12 = 0;
    goto LABEL_13;
  }
LABEL_5:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(v9 + 32);
LABEL_8:
    id v12 = v11;
    swift_bridgeObjectRelease();

LABEL_13:
    sub_1000CB730((uint64_t)v15);
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

id sub_10024928C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = 0;
  unint64_t v9 = &v4[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  long long v10 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)unint64_t v9 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v9 + 1) = v10;
  uint64_t v11 = (uint64_t)&v4[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  LOBYTE(aBlock) = 0;
  uint64_t v21 = 0;
  long long v18 = 0;
  uint64_t v19 = 0;
  uint64_t v17 = 0;
  swift_unknownObjectWeakInit();
  sub_1000CB78C((uint64_t)&aBlock, v11, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  long long v18 = sub_1000148B8;
  uint64_t v19 = &unk_10069B168;
  id v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v15.receiver = v4;
  v15.super_class = ObjectType;
  id v13 = [super initWithSectionProvider:v12 configuration:a3];
  swift_release();

  _Block_release(v12);
  return v13;
}

id sub_10024946C(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  long long v5 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v4 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v4 + 1) = v5;
  uint64_t v6 = (uint64_t)&v1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  v10[0] = 0;
  uint64_t v14 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v11 = 0;
  swift_unknownObjectWeakInit();
  sub_1000CB78C((uint64_t)v10, v6, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super initWithCoder:a1];

  return v7;
}

uint64_t assignWithCopy for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t initializeWithTake for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D3C78(a1, a2, a3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
}

uint64_t assignWithTake for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionCoreFooterAwareLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 40) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)(a1 + 32) & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionCoreFooterAwareLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      *(void *)(result + 40) = 1;
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionCoreFooterAwareLayout()
{
  return &type metadata for DOCItemCollectionCoreFooterAwareLayout;
}

BOOL sub_1002496EC(uint64_t a1)
{
  sub_1000CB78C(v1, (uint64_t)v17, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  sub_10024986C(a1, (uint64_t)v14);
  if (v16 == 0.0)
  {
    sub_1000CBBA4((uint64_t)v14, &qword_10070BBD0);
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_10070BBE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    memset(v11, 0, sizeof(v11));
    uint64_t v12 = 0;
    uint64_t v13 = 1;
LABEL_10:
    sub_1000CB730((uint64_t)v17);
    sub_1000CBBA4((uint64_t)v11, &qword_10070BBD8);
    return 1;
  }
  if (!v12 && v13 == 1) {
    goto LABEL_10;
  }
  sub_1000CB78C((uint64_t)v11, (uint64_t)v14, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  double v4 = v18;
  double v3 = v19;
  double v6 = v15;
  double v5 = v16;
  sub_1000CB78C((uint64_t)v17, (uint64_t)v11, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  sub_1000CB78C((uint64_t)v14, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  if (v4 == v6 && v3 == v5)
  {
    double v7 = *((double *)v11 + 1);
    sub_1000CB730((uint64_t)v11);
    double v8 = *(double *)&v10[1];
    sub_1000CB730((uint64_t)v10);
    return v7 != v8;
  }
  sub_1000CB730((uint64_t)v10);
  sub_1000CB730((uint64_t)v11);
  return 1;
}

uint64_t sub_10024986C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070BBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002498D4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_100249914(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5 = 2;
  if (a5 == 1)
  {
    id v10 = a2;
    id v11 = [v10 status];
    if (v11)
    {
      if (v11 == (id)1)
      {
        sub_10047DB60();
        id v12 = [v10 identifier];
        char v13 = sub_1005350BC();

        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0 && [v10 status])
        {
          id v14 = [v10 status];
          sub_10010EDB8(a2, a3, a4, 1u);
          return v14 != (id)2;
        }
LABEL_12:
        sub_10010EDB8(a2, a3, a4, 1u);
        return 0;
      }
      if (v11 != (id)2) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v5 = 1;
    }
    sub_10010EDB8(a2, a3, a4, 1u);
  }
  return v5;
}

BOOL DOCDocumentSource.isEnabled.getter()
{
  return ((unint64_t)[v0 status] & 0xFFFFFFFFFFFFFFFDLL) == 0;
}

id sub_100249AB0()
{
  id v1 = [v0 identifier];
  id v2 = [v0 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = objc_allocWithZone((Class)DOCConcreteLocation);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithSourceIdentifier:v1 title:v4];

  self;
  [v5 setIsFPV2:swift_dynamicCastObjCClass() == 0];
  NSString v6 = [v0 promptText];
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v5 setPromptText:v6];

  return v5;
}

uint64_t sub_100249BF4(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      id v9 = [(id)a1 providerName];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10010EDB8((id)a1, a2, a3, 1u);
      break;
    case 2:
      id v10 = [(id)a1 displayName];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10010EDB8((id)a1, a2, a3, 2u);
      break;
    case 3:
      id v11 = (id)a1;
      id v12 = [v11 displayName];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      break;
    case 4:
      id v13 = [(id)a1 providerName];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10010EDB8((id)a1, a2, a3, 4u);
      break;
    case 5:
      if (a3 | a2 | a1) {
        id v14 = [self sharedItemsLocation];
      }
      else {
        id v14 = [self recentDocumentsLocation];
      }
      id v15 = [v14 displayName];

      if (v15)
      {
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v8 = 0;
      }
      break;
    default:
      id v7 = [(id)a1 displayName];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10010EDB8((id)a1, a2, a3, 0);
      break;
  }
  return v8;
}

unint64_t sub_100249E60(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      id v30 = [(id)a1 identifier];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10010EDB8((id)a1, a2, a3, 1u);
      return v31;
    case 2:
      id v32 = [(id)a1 displayName];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10010EDB8((id)a1, a2, a3, 2u);
      return v31;
    case 3:
      id v33 = (id)a1;
      id v34 = [v33 itemID];
      id v35 = [v34 providerID];

      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRetain();
      v37._countAndFlagsBits = 3092271;
      v37._object = (void *)0xE300000000000000;
      String.append(_:)(v37);
      swift_bridgeObjectRelease();
      uint64_t v38 = v36;
      id v39 = [v33 itemID];
      id v40 = [v39 domainIdentifier];

      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v42;

      swift_bridgeObjectRetain();
      v44._countAndFlagsBits = v41;
      v44._object = v43;
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v45._countAndFlagsBits = 3092271;
      v45._object = (void *)0xE300000000000000;
      String.append(_:)(v45);
      swift_bridgeObjectRelease();
      id v46 = [v33 itemID];
      id v47 = [v46 identifier];

      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v49;

      uint64_t v57 = v38;
      swift_bridgeObjectRetain();
      v51._countAndFlagsBits = v48;
      v51._object = v50;
      String.append(_:)(v51);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v57;
    case 4:
      id v52 = [(id)a1 identifier];
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v57 = v53;
      swift_bridgeObjectRetain();
      v54._countAndFlagsBits = 3092271;
      v54._object = (void *)0xE300000000000000;
      String.append(_:)(v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v55._countAndFlagsBits = 0xD000000000000012;
      v55._object = (void *)0x80000001005DFCE0;
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)a1;
      uint64_t v27 = a2;
      uint64_t v28 = a3;
      unsigned __int8 v29 = 4;
      goto LABEL_7;
    case 5:
      if (a2 | a1 | a3) {
        return 0xD000000000000010;
      }
      else {
        return 0xD000000000000011;
      }
    default:
      id v7 = (id)a1;
      id v8 = [v7 itemID];
      id v9 = [v8 providerID];

      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = 3092271;
      v11._object = (void *)0xE300000000000000;
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      uint64_t v12 = v10;
      id v13 = [v7 itemID];
      id v14 = [v13 domainIdentifier];

      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      swift_bridgeObjectRetain();
      v18._countAndFlagsBits = v15;
      v18._object = v17;
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v19._countAndFlagsBits = 3092271;
      v19._object = (void *)0xE300000000000000;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      id v20 = [v7 itemID];
      id v21 = [v20 identifier];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      uint64_t v57 = v12;
      swift_bridgeObjectRetain();
      v25._countAndFlagsBits = v22;
      v25._object = v24;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)a1;
      uint64_t v27 = a2;
      uint64_t v28 = a3;
      unsigned __int8 v29 = 0;
LABEL_7:
      sub_10010EDB8(v26, v27, v28, v29);
      return v57;
  }
}

uint64_t sub_10024A3B4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3) {
    return 1;
  }
  if (a5 != 1) {
    return a5 == 0;
  }
  id v10 = a2;
  id v11 = [v10 identifier];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {

    goto LABEL_14;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_15:
    sub_10010EDB8(a2, a3, a4, 1u);
    return 0;
  }
  id v18 = [v10 identifier];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
  {

LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10010EDB8(a2, a3, a4, 1u);
  uint64_t result = 0;
  if ((v23 & 1) == 0) {
    return sub_100249914(a1, a2, a3, a4, 1);
  }
  return result;
}

uint64_t sub_10024A5A0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
      id v7 = self;
      id v8 = a1;
      id v9 = [v7 defaultManager];
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1005A04F0;
      *(void *)(v10 + 32) = v8;
      specialized Array._endMutation()();
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      id v11 = v8;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v13 = [v9 eligibleActionsForItems:isa];

      type metadata accessor for FPAction(0);
      sub_10024E270();
      uint64_t v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      id v15 = FPActionRename;
      LOBYTE(isa) = sub_1005350BC(v15, v14);
      swift_bridgeObjectRelease();
      sub_10010EDB8(a1, a2, a3, 0);

      uint64_t result = isa & 1;
      break;
    case 1:
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t result = swift_dynamicCastClass();
      if (result)
      {
        char v17 = (*(uint64_t (**)(void *))((swift_isaMask & *(void *)result) + 0x128))(a1);
        sub_10010EDB8(a1, a2, a3, 1u);
        uint64_t result = v17 & 1;
      }
      break;
    case 2:
      uint64_t result = 1;
      break;
    case 3:
      id v18 = self;
      id v19 = a1;
      id v20 = [v18 defaultManager];
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1005A04F0;
      *(void *)(v21 + 32) = v19;
      specialized Array._endMutation()();
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      id v22 = v19;
      Class v23 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v24 = [v20 eligibleActionsForItems:v23];

      type metadata accessor for FPAction(0);
      sub_10024E270();
      uint64_t v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      id v26 = FPActionRename;
      LOBYTE(v23) = sub_1005350BC(v26, v25);

      swift_bridgeObjectRelease();
      uint64_t result = v23 & 1;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

id sub_10024A91C(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v7 = 0;
  switch(a4)
  {
    case 1:
      type metadata accessor for DOCSourceListInterface_Default();
      id v8 = (id)a1;
      uint64_t inited = (void *)swift_initStaticObject();
      id v7 = [inited iconForSource:v8];
      [inited iconForSourceRequireHierarchicalColors:v8];
      sub_10010EDB8((id)a1, a2, a3, 1u);
      break;
    case 4:
      type metadata accessor for DOCSourceListInterface_Default();
      id v10 = (id)a1;
      id v11 = (void *)swift_initStaticObject();
      id v7 = [v11 iconForSource:v10];
      [v11 iconForSourceRequireHierarchicalColors:v10];
      sub_10010EDB8((id)a1, a2, a3, 4u);
      break;
    case 5:
      if (a3 | a2 | a1)
      {
        type metadata accessor for DOCSourceListInterface_Default();
        id v12 = [(id)swift_initStaticObject() iconForShared];
      }
      else
      {
        type metadata accessor for DOCSourceListInterface_Default();
        id v12 = [(id)swift_initStaticObject() iconForRecents];
      }
      id v7 = v12;
      break;
    default:
      return v7;
  }
  return v7;
}

id sub_10024AAE8(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      id v14 = (id)a1;
      id v9 = sub_100249AB0();
      id v10 = (void *)a1;
      uint64_t v11 = a2;
      uint64_t v12 = a3;
      unsigned __int8 v13 = 1;
      goto LABEL_11;
    case 2:
      id v15 = objc_allocWithZone((Class)DOCConcreteLocation);
      return [v15 initWithTaggedItemsSourceRepresentedTag:a1];
    case 3:
      id v17 = (id)a1;
      uint64_t v18 = sub_10024AAE8(a1, 0, 0, 0);

      return (id)v18;
    case 4:
      id v19 = (id)a1;
      id v20 = [v19 identifier];
      id v21 = [v19 displayName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v22 = objc_allocWithZone((Class)DOCConcreteLocation);
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = [v22 initWithSourceIdentifier:v20 title:v23];

      self;
      [v9 setIsFPV2:swift_dynamicCastObjCClass() == 0];
      NSString v24 = [v19 promptText];
      if (!v24)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v9 setPromptText:v24];

      sub_10010EDB8((id)a1, a2, a3, 4u);
      id v10 = (void *)a1;
      uint64_t v11 = a2;
      uint64_t v12 = a3;
      unsigned __int8 v13 = 4;
      goto LABEL_11;
    case 5:
      if (a3 | a2 | a1) {
        id v25 = [self sharedItemsLocation];
      }
      else {
        id v25 = [self recentDocumentsLocation];
      }
      return v25;
    default:
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      id v7 = (id)a1;
      id v8 = (void *)DOCNode.sourceIdentifier.getter();
      id v9 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v8 node:v7];

      [v9 setIsFPV2:1];
      id v10 = (void *)a1;
      uint64_t v11 = a2;
      uint64_t v12 = a3;
      unsigned __int8 v13 = 0;
LABEL_11:
      sub_10010EDB8(v10, v11, v12, v13);
      return v9;
  }
}

uint64_t sub_10024AE30(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v4 = v3;
  uint64_t v8 = type metadata accessor for DOCTagManagerAction();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for DOCTagManager();
  uint64_t v12 = (void *)static DOCTagManager.shared.getter();
  *uint64_t v11 = v4;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DOCTagManagerAction.findAll(_:), v8);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v14 = (void *)swift_allocObject();
  uint64_t v14[2] = v13;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a1;
  id v15 = v4;
  swift_retain();
  swift_retain();
  id v16 = a1;
  dispatch thunk of DOCTagManager.scheduleAction(_:completionBlock:)();

  swift_release();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_10024AFE0(char a1, void *a2)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = (void *)v4;
    id v6 = a2;
    id v7 = [v5 pickerExtension];
    id v8 = [v5 providerDomain];
    id v9 = [v5 isExtensionOptedIn];
    if (a1)
    {
      [v5 setIsExtensionOptedIn:0];
      uint64_t aBlock = 0;
      unsigned __int8 v10 = [v7 attemptOptOut:&aBlock];
      uint64_t v11 = aBlock;
      if ((v10 & 1) == 0)
      {
LABEL_4:
        uint64_t v12 = v11;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        [v5 setIsExtensionOptedIn:v9];

        swift_errorRelease();
        return;
      }
    }
    else
    {
      [v5 setIsExtensionOptedIn:1];
      uint64_t aBlock = 0;
      unsigned int v23 = [v7 attemptOptIn:&aBlock];
      uint64_t v11 = aBlock;
      if (!v23) {
        goto LABEL_4;
      }
    }
    NSString v24 = v11;
    if (v8)
    {
      id v25 = v8;
      id v26 = [v5 isExtensionOptedIn];
      uint64_t v27 = (void *)swift_allocObject();
      void v27[2] = v25;
      v27[3] = DOCSplitBrowserViewController.didCommitPreview(of:);
      v27[4] = 0;
      v27[5] = v7;
      uint64_t v38 = sub_10024E2C8;
      id v39 = v27;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = sub_1001950CC;
      Swift::String v37 = &unk_10069B658;
      uint64_t v28 = _Block_copy(&aBlock);
      id v29 = v25;
      id v30 = v7;
      swift_release();
      [v29 setEnabled:v26 completionHandler:v28];

      _Block_release(v28);
    }
    else
    {
      [v7 optedIn];
    }
  }
  else
  {
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v13 = swift_dynamicCastClass();
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = *(void **)(v13 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (v15)
      {
        id v16 = a2;
        id v17 = v15;
        if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
          && [v17 isiCloudDriveProvider])
        {
          char v18 = *(unsigned char *)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
          *(unsigned char *)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (a1 & 1) == 0;
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v17;
          *(void *)(v19 + 24) = v14;
          *(unsigned char *)(v19 + 32) = v18;
          *(void *)(v19 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
          *(void *)(v19 + 48) = 0;
          uint64_t v38 = sub_10024DE74;
          id v39 = (void *)v19;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v35 = 1107296256;
          uint64_t v36 = sub_1001950CC;
          Swift::String v37 = &unk_10069B608;
          id v20 = _Block_copy(&aBlock);
          id v21 = v16;
          id v22 = v17;
          swift_release();
          [v22 setHiddenByUser:a1 & 1 completionHandler:v20];
        }
        else
        {
          char v31 = *(unsigned char *)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
          BOOL v32 = (a1 & 1) == 0;
          *(unsigned char *)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = v32;
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = v17;
          *(void *)(v33 + 24) = v14;
          *(unsigned char *)(v33 + 32) = v31;
          *(void *)(v33 + 40) = DOCSplitBrowserViewController.didCommitPreview(of:);
          *(void *)(v33 + 48) = 0;
          uint64_t v38 = sub_10024DE48;
          id v39 = (void *)v33;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v35 = 1107296256;
          uint64_t v36 = sub_1001950CC;
          Swift::String v37 = &unk_10069B5B8;
          id v20 = _Block_copy(&aBlock);
          id v21 = v16;
          id v22 = v17;
          swift_release();
          [v22 setEnabled:v32 completionHandler:v20];
        }

        _Block_release(v20);
      }
    }
  }
}

Swift::Int sub_10024B4BC()
{
  unint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 24);
  Hasher.init(_seed:)();
  sub_100249E60(v1, v2, v3, v4);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10024B53C()
{
  sub_100249E60(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10024B598()
{
  unint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(unsigned char *)(v0 + 24);
  Hasher.init(_seed:)();
  sub_100249E60(v1, v2, v3, v4);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10024B614()
{
  v1._countAndFlagsBits = sub_100249BF4(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_10024B67C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  unint64_t v6 = sub_100249E60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v8 = v7;
  if (v6 == sub_100249E60(v2, v3, v4, v5) && v8 == v9) {
    char v11 = 1;
  }
  else {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void sub_10024B734(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  *(unsigned char *)(v6 + 32) = a1;
  v8[4] = sub_10024E130;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000666D8;
  v8[3] = &unk_10069B6A8;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
}

void sub_10024B810(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  unsigned __int8 v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  void v10[6] = a5;
  v14[4] = sub_10024DF38;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  uint64_t v14[2] = sub_1000666D8;
  v14[3] = &unk_10069B3B0;
  char v11 = _Block_copy(v14);
  swift_errorRetain();
  id v12 = a2;
  swift_retain();
  id v13 = a5;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v11);
}

uint64_t sub_10024B910(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    static Logger.DocumentManager.getter();
    swift_errorRetain();
    id v13 = a2;
    swift_errorRetain();
    id v14 = v13;
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v33 = v10;
      uint64_t v19 = v18;
      id v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412546;
      uint64_t v35 = a3;
      uint64_t v36 = (uint64_t)v14;
      os_log_t v32 = v15;
      id v34 = a5;
      id v20 = v14;
      int v31 = v17;
      uint64_t v21 = v9;
      id v22 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unsigned int v23 = v30;
      void *v30 = v14;

      uint64_t v9 = v21;
      *(_WORD *)(v19 + 12) = 2112;
      swift_errorRetain();
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v36 = v24;
      a5 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v23[1] = v24;
      a3 = v35;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v25 = v32;
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v31, "Failed to enable the corresponding provider domain: %@ error: %@", (uint8_t *)v19, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v10 = v33;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  unsigned int v26 = [a5 optedIn] ^ 1;
  if (a1) {
    uint64_t v27 = 1;
  }
  else {
    uint64_t v27 = v26;
  }
  return a3(v27);
}

uint64_t sub_10024BBF0(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t (*a5)(BOOL), uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    static Logger.DocumentManager.getter();
    swift_errorRetain();
    id v15 = a2;
    swift_errorRetain();
    id v16 = v15;
    int v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v34 = v12;
      uint64_t v21 = v20;
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v36 = (uint64_t)v16;
      uint64_t v37 = v32;
      *(_DWORD *)uint64_t v21 = 138412546;
      int v31 = v19;
      uint64_t v33 = v11;
      uint64_t v29 = v14;
      id v22 = v16;
      os_log_t v30 = v17;
      id v23 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v28 = v16;

      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v24 = Error.localizedDescription.getter();
      uint64_t v36 = sub_10009B0E4(v24, v25, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v26 = v30;
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v31, "Failed to set the provider: %@ hiddenByUserFlag Error: %s", (uint8_t *)v21, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v33);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    *(unsigned char *)(a3 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = a4;
  }
  return a5(a1 != 0);
}

void sub_10024BF44(uint64_t a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 32) = a3;
  *(unsigned char *)(v16 + 40) = a4;
  *(void *)(v16 + 48) = a5;
  *(void *)(v16 + 56) = a6;
  v20[4] = a8;
  v20[5] = v16;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  _OWORD v20[2] = sub_1000666D8;
  v20[3] = a9;
  int v17 = _Block_copy(v20);
  swift_errorRetain();
  id v18 = a2;
  id v19 = a3;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v17);
}

uint64_t sub_10024C040(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v34 = a3;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    static Logger.DocumentManager.getter();
    swift_errorRetain();
    id v15 = a2;
    swift_errorRetain();
    id v16 = v15;
    int v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    int v33 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = v11;
      uint64_t v20 = v19;
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412546;
      uint64_t v31 = a6;
      uint64_t v32 = a5;
      uint64_t v35 = (uint64_t)v16;
      int v30 = a4;
      id v22 = v16;
      os_log_t v28 = v17;
      uint64_t v23 = v12;
      id v24 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v21 = v16;

      uint64_t v12 = v23;
      *(_WORD *)(v20 + 12) = 2112;
      swift_errorRetain();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v35 = v25;
      LOBYTE(a4) = v30;
      a5 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v21[1] = v25;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v26 = v28;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v33, "Failed to set the provider %@ error: %@", (uint8_t *)v20, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v11 = v29;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(unsigned char *)(v34 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = a4;
  }
  return a5(a1 != 0);
}

void sub_10024C31C(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void *a6)
{
  uint64_t v10 = type metadata accessor for DOCTagManagerAction();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (id *)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v16 >= 1)
      {
LABEL_4:
        id v52 = a6;
        v17._countAndFlagsBits = 0xD000000000000020;
        v18._object = (void *)0x80000001005DFD50;
        v17._object = (void *)0x80000001005DFD90;
        v18._countAndFlagsBits = 0x100000000000003BLL;
        DOCLocalizedDictionaryString(_:comment:)(v18, v17);
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_10059B760;
        id v20 = [v15 displayName];
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v23 = v22;

        *(void *)(v19 + 56) = &type metadata for String;
        unint64_t v24 = sub_100073F48();
        *(void *)(v19 + 32) = v21;
        *(void *)(v19 + 40) = v23;
        *(void *)(v19 + 96) = &type metadata for Int;
        *(void *)(v19 + 104) = &protocol witness table for Int;
        *(void *)(v19 + 64) = v24;
        *(void *)(v19 + 72) = v16;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v26 = [self alertControllerWithTitle:0 message:v25 preferredStyle:1];

        id v27 = (id)_DocumentManagerBundle();
        if (v27)
        {
          os_log_t v28 = v27;
          v59._object = (void *)0x80000001005DFDC0;
          v29._countAndFlagsBits = 0x6C65636E6143;
          v29._object = (void *)0xE600000000000000;
          v30._countAndFlagsBits = 0x617A696C61636F4CLL;
          v30._object = (void *)0xEB00000000656C62;
          v31._countAndFlagsBits = 0;
          v31._object = (void *)0xE000000000000000;
          v59._countAndFlagsBits = 0xD00000000000001BLL;
          DOCLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v59);

          uint64_t v32 = swift_allocObject();
          *(void *)(v32 + 16) = a4;
          *(void *)(v32 + 24) = a5;
          swift_retain();
          NSString v33 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v57 = sub_1002200B0;
          id v58 = (void *)v32;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v54 = 1107296256;
          Swift::String v55 = sub_10041B2E4;
          id v56 = &unk_10069B748;
          uint64_t v34 = _Block_copy(&aBlock);
          swift_release();
          uint64_t v35 = self;
          id v36 = [v35 actionWithTitle:v33 style:1 handler:v34];
          _Block_release(v34);

          [v26 addAction:v36];
          id v37 = (id)_DocumentManagerBundle();
          if (v37)
          {
            uint64_t v38 = v37;
            v60._countAndFlagsBits = 0xD000000000000025;
            v60._object = (void *)0x80000001005DFDE0;
            v39._countAndFlagsBits = 0x54206574656C6544;
            v39._object = (void *)0xEA00000000006761;
            v40._countAndFlagsBits = 0x617A696C61636F4CLL;
            v40._object = (void *)0xEB00000000656C62;
            v41._countAndFlagsBits = 0;
            v41._object = (void *)0xE000000000000000;
            DOCLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v60);

            uint64_t v42 = (void *)swift_allocObject();
            v42[2] = v15;
            v42[3] = a4;
            unsigned char v42[4] = a5;
            swift_retain();
            id v43 = v15;
            NSString v44 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v57 = sub_10024E264;
            id v58 = v42;
            uint64_t aBlock = _NSConcreteStackBlock;
            uint64_t v54 = 1107296256;
            Swift::String v55 = sub_10041B2E4;
            id v56 = &unk_10069B798;
            Swift::String v45 = _Block_copy(&aBlock);
            swift_release();
            id v46 = [v35 actionWithTitle:v44 style:2 handler:v45];
            _Block_release(v45);

            [v26 addAction:v46];
            [v52 presentViewController:v26 animated:1 completion:0];

LABEL_9:
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16 >= 1) {
        goto LABEL_4;
      }
    }
    id v47 = [self sharedInstance];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1005A04F0;
    *(void *)(v48 + 32) = v15;
    uint64_t aBlock = (void **)v48;
    specialized Array._endMutation()();
    sub_10009E6C4(0, &qword_10070E2D0);
    id v49 = v15;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v47 removeTags:isa];

    type metadata accessor for DOCTagManager();
    Swift::String v51 = (void *)static DOCTagManager.shared.getter();
    *uint64_t v13 = v49;
    (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DOCTagManagerAction.deleteAll(_:), v10);
    id v26 = v49;
    dispatch thunk of DOCTagManager.scheduleAction(_:completionBlock:)();

    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    a4(1);
    goto LABEL_9;
  }
}

uint64_t sub_10024C9F8(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = type metadata accessor for DOCTagManagerAction();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = [self sharedInstance];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A04F0;
  *(void *)(v10 + 32) = a2;
  v16[1] = v10;
  specialized Array._endMutation()();
  sub_10009E6C4(0, &qword_10070E2D0);
  id v11 = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 removeTags:isa];

  type metadata accessor for DOCTagManager();
  uint64_t v13 = (void *)static DOCTagManager.shared.getter();
  *uint64_t v8 = v11;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DOCTagManagerAction.deleteAll(_:), v5);
  id v14 = v11;
  dispatch thunk of DOCTagManager.scheduleAction(_:completionBlock:)();

  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  return a3(1);
}

void sub_10024CBF4()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_10070BC60 = v2;
}

void destroy for DOCSidebarItem(uint64_t a1)
{
}

uint64_t initializeWithCopy for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10010ED28(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10010ED28(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10010EDB8(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCSidebarItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10010EDB8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSidebarItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSidebarItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10024CE5C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 4u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_10024CE74(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 5;
  if (a2 >= 5)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 5;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

unint64_t sub_10024CE94()
{
  unint64_t result = qword_10070BC68;
  if (!qword_10070BC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BC68);
  }
  return result;
}

void sub_10024CEE8(char a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  *(void *)(v16 + 32) = a5;
  *(void *)(v16 + 40) = a6;
  *(void *)(v16 + 48) = a7;
  *(unsigned char *)(v16 + 56) = a8;
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    Swift::String v18 = (void *)v17;
    id v60 = a3;
    id v59 = a4;
    sub_10010ED28(a5, a6, a7, a8);
    id v61 = a2;
    id v19 = [v18 pickerExtension];
    id v62 = [v18 providerDomain];
    id v20 = [v18 isExtensionOptedIn];
    id v63 = v19;
    if (a1)
    {
      [v18 setIsExtensionOptedIn:0];
      uint64_t aBlock = 0;
      unsigned __int8 v21 = [v19 attemptOptOut:&aBlock];
      uint64_t v22 = aBlock;
      if ((v21 & 1) == 0)
      {
LABEL_4:
        uint64_t v23 = v22;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        [v18 setIsExtensionOptedIn:v20];
        sub_10047D7F8(v59);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          NSString v25 = (void *)Strong;
          id v26 = sub_10024AAE8((unint64_t)a5, a6, a7, a8);
          [v25 sidebarViewController:v60 didSelect:v26];

          swift_unknownObjectRelease();
        }
        else
        {
        }
        swift_errorRelease();
LABEL_24:
        swift_release();
        return;
      }
    }
    else
    {
      [v18 setIsExtensionOptedIn:1];
      uint64_t aBlock = 0;
      unsigned int v39 = [v19 attemptOptIn:&aBlock];
      uint64_t v22 = aBlock;
      if (!v39) {
        goto LABEL_4;
      }
    }
    Swift::String v40 = v22;
    if (v62)
    {
      id v41 = v62;
      id v42 = [v18 isExtensionOptedIn];
      id v43 = (void *)swift_allocObject();
      v43[2] = v41;
      v43[3] = sub_10024E03C;
      v43[4] = v16;
      v43[5] = v63;
      uint64_t v69 = sub_10024E2C8;
      unint64_t v70 = v43;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v66 = 1107296256;
      uint64_t v67 = sub_1001950CC;
      id v68 = &unk_10069B568;
      NSString v44 = _Block_copy(&aBlock);
      id v45 = v41;
      swift_retain();
      id v46 = v63;
      swift_release();
      [v45 setEnabled:v42 completionHandler:v44];

      _Block_release(v44);
      swift_release();

      return;
    }
    unsigned int v49 = [v63 optedIn];
    sub_10047D7F8(v59);
    if (v49)
    {
      uint64_t v50 = swift_unknownObjectWeakLoadStrong();
      if (v50)
      {
        Swift::String v51 = (void *)v50;
        id v52 = sub_10024AAE8((unint64_t)a5, a6, a7, a8);
        [v51 sidebarViewController:v60 didSelect:v52];
        swift_release();

        swift_unknownObjectRelease();
        return;
      }
    }

    goto LABEL_24;
  }
  char v64 = a1;
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v27 = swift_dynamicCastClass();
  if (v27)
  {
    uint64_t v28 = v27;
    Swift::String v29 = *(void **)(v27 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v29)
    {
      id v30 = a3;
      id v31 = a4;
      sub_10010ED28(a5, a6, a7, a8);
      id v32 = a2;
      id v33 = v29;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
        && [v33 isiCloudDriveProvider])
      {
        char v34 = *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
        *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (v64 & 1) == 0;
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v33;
        *(void *)(v35 + 24) = v28;
        *(unsigned char *)(v35 + 32) = v34;
        *(void *)(v35 + 40) = sub_10024E03C;
        *(void *)(v35 + 48) = v16;
        uint64_t v69 = sub_10024DE74;
        unint64_t v70 = (void *)v35;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v66 = 1107296256;
        uint64_t v67 = sub_1001950CC;
        id v68 = &unk_10069B518;
        id v36 = _Block_copy(&aBlock);
        id v37 = v32;
        swift_retain();
        id v38 = v33;
        swift_release();
        [v38 setHiddenByUser:v64 & 1 completionHandler:v36];

        _Block_release(v36);
      }
      else
      {
        char v53 = *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
        BOOL v54 = (v64 & 1) == 0;
        *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = v54;
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = v33;
        *(void *)(v55 + 24) = v28;
        *(unsigned char *)(v55 + 32) = v53;
        *(void *)(v55 + 40) = sub_10024E03C;
        *(void *)(v55 + 48) = v16;
        uint64_t v69 = sub_10024DE48;
        unint64_t v70 = (void *)v55;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v66 = 1107296256;
        uint64_t v67 = sub_1001950CC;
        id v68 = &unk_10069B4C8;
        id v56 = _Block_copy(&aBlock);
        id v57 = v32;
        swift_retain();
        id v58 = v33;
        swift_release();
        [v58 setEnabled:v54 completionHandler:v56];

        _Block_release(v56);
      }
      goto LABEL_24;
    }
  }
  id v47 = a3;
  id v48 = a4;
  sub_10010ED28(a5, a6, a7, a8);

  swift_release();
}

void sub_10024D640(char a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7, void *a8)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  *(void *)(v16 + 32) = a5;
  *(void *)(v16 + 40) = a6;
  *(unsigned char *)(v16 + 48) = a7;
  *(void *)(v16 + 56) = a8;
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    Swift::String v18 = (void *)v17;
    swift_retain();
    sub_10010ED28(a4, a5, a6, a7);
    a8;
    id v55 = a2;
    id v19 = [v18 pickerExtension];
    id v57 = [v18 providerDomain];
    id v20 = [v18 isExtensionOptedIn];
    id v56 = v19;
    if (a1)
    {
      [v18 setIsExtensionOptedIn:0];
      uint64_t aBlock = 0;
      unsigned __int8 v21 = [v19 attemptOptOut:&aBlock];
      uint64_t v22 = aBlock;
      if ((v21 & 1) == 0)
      {
LABEL_4:
        uint64_t v23 = v22;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        [v18 setIsExtensionOptedIn:v20];
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          NSString v25 = (void *)Strong;
          if (a7 == 1)
          {
            sub_10010ED28(a4, a5, a6, 1u);
            swift_retain();
            sub_10047D7F8(a4);
            swift_release();
            sub_10010EDB8(a4, a5, a6, 1u);
          }

          id v26 = v57;
        }
        else
        {
          id v26 = v56;
          NSString v25 = v57;
        }

        swift_errorRelease();
LABEL_31:
        swift_release();
        return;
      }
    }
    else
    {
      [v18 setIsExtensionOptedIn:1];
      uint64_t aBlock = 0;
      unsigned int v38 = [v19 attemptOptIn:&aBlock];
      uint64_t v22 = aBlock;
      if (!v38) {
        goto LABEL_4;
      }
    }
    unsigned int v39 = v22;
    if (v57)
    {
      id v40 = v57;
      id v41 = [v18 isExtensionOptedIn];
      id v42 = (void *)swift_allocObject();
      v42[2] = v40;
      v42[3] = sub_10024DE30;
      unsigned char v42[4] = v16;
      v42[5] = v19;
      id v63 = sub_10024DEDC;
      char v64 = v42;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v60 = 1107296256;
      id v61 = sub_1001950CC;
      id v62 = &unk_10069B360;
      id v43 = _Block_copy(&aBlock);
      id v44 = v40;
      swift_retain();
      id v45 = v56;
      swift_release();
      [v44 setEnabled:v41 completionHandler:v43];

      _Block_release(v43);
      swift_release();

      return;
    }
    unsigned __int8 v47 = [v19 optedIn];
    swift_beginAccess();
    uint64_t v48 = swift_unknownObjectWeakLoadStrong();
    if (v48)
    {
      unsigned int v49 = (void *)v48;
      if (a7 == 1)
      {
        sub_10010ED28(a4, a5, a6, 1u);
        swift_retain();
        sub_10047D7F8(a4);
        swift_release();
        sub_10010EDB8(a4, a5, a6, 1u);
      }
      if ((v47 & 1) == 0)
      {
        uint64_t v50 = swift_retain();
        BOOL v51 = sub_100249914(v50, a4, a5, a6, a7);
        swift_release();
        sub_100429BD0(v51);
      }

      id v52 = v56;
    }
    else
    {
      unsigned int v49 = v56;
      id v52 = v55;
    }

    goto LABEL_31;
  }
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v27 = swift_dynamicCastClass();
  if (v27)
  {
    uint64_t v28 = v27;
    char v58 = a1;
    Swift::String v29 = *(void **)(v27 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v29)
    {
      swift_retain();
      sub_10010ED28(a4, a5, a6, a7);
      id v30 = a8;
      id v31 = a2;
      id v32 = v29;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0
        && [v32 isiCloudDriveProvider])
      {
        char v33 = *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
        *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (v58 & 1) == 0;
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v32;
        *(void *)(v34 + 24) = v28;
        *(unsigned char *)(v34 + 32) = v33;
        *(void *)(v34 + 40) = sub_10024DE30;
        *(void *)(v34 + 48) = v16;
        id v63 = sub_10024DE74;
        char v64 = (void *)v34;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v60 = 1107296256;
        id v61 = sub_1001950CC;
        id v62 = &unk_10069B310;
        uint64_t v35 = _Block_copy(&aBlock);
        id v36 = v31;
        swift_retain();
        id v37 = v32;
        swift_release();
        [v37 setHiddenByUser:v58 & 1 completionHandler:v35];
      }
      else
      {
        char v53 = *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled);
        *(unsigned char *)(v28 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled) = (v58 & 1) == 0;
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = v32;
        *(void *)(v54 + 24) = v28;
        *(unsigned char *)(v54 + 32) = v53;
        *(void *)(v54 + 40) = sub_10024DE30;
        *(void *)(v54 + 48) = v16;
        id v63 = sub_10024DE48;
        char v64 = (void *)v54;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v60 = 1107296256;
        id v61 = sub_1001950CC;
        id v62 = &unk_10069B2C0;
        uint64_t v35 = _Block_copy(&aBlock);
        id v36 = v31;
        swift_retain();
        id v37 = v32;
        swift_release();
        [v37 setEnabled:(v58 & 1) == 0 completionHandler:v35];
      }

      _Block_release(v35);
      goto LABEL_31;
    }
  }
  swift_retain();
  sub_10010ED28(a4, a5, a6, a7);
  id v46 = a8;

  swift_release();
}

uint64_t sub_10024DDE0()
{
  swift_release();
  sub_10010EDB8(*(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10024DE30(char a1)
{
  sub_10028C970(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

void sub_10024DE48(uint64_t a1)
{
}

void sub_10024DE74(uint64_t a1)
{
}

void sub_10024DE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10024BF44(a1, *(void **)(v4 + 16), *(void **)(v4 + 24), *(unsigned char *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), a2, a3, a4);
}

void sub_10024DEDC(uint64_t a1)
{
  sub_10024B810(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10024DEE8()
{
  swift_errorRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10024DF38()
{
  return sub_10024B910(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_10024DF4C()
{
  return sub_10024DFD0((uint64_t (*)(void, void, void, void, void, void))sub_10024BBF0);
}

uint64_t sub_10024DF68()
{
  swift_errorRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10024DFB8()
{
  return sub_10024DFD0((uint64_t (*)(void, void, void, void, void, void))sub_10024C040);
}

uint64_t sub_10024DFD0(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10024DFEC()
{
  sub_10010EDB8(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return _swift_deallocObject(v0, 57, 7);
}

void sub_10024E03C(char a1)
{
  sub_10028BDD4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
}

uint64_t sub_10024E064()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10024E0B0()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10024E0F8()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10024E130()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10024E160()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10024E198()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10024E1E0(uint64_t a1, unint64_t a2)
{
  sub_10024C31C(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_10024E1EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10024E224()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10024E264(uint64_t a1)
{
  return sub_10024C9F8(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

unint64_t sub_10024E270()
{
  unint64_t result = qword_1007069D0;
  if (!qword_1007069D0)
  {
    type metadata accessor for FPAction(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007069D0);
  }
  return result;
}

uint64_t sub_10024E324(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v6) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_30;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_30;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_22:
    sub_10008E1D0(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v25);
    v23[0] = v25[0];
    v23[1] = v25[1];
    uint64_t v24 = v26;
    sub_10008E1D0((uint64_t)v23, (uint64_t)v20);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
    uint64_t result = sub_10008E17C((uint64_t)v23);
    uint64_t v15 = v22;
    if (v22)
    {
      uint64_t v16 = v21;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000825D0(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v18 = v9[2];
      unint64_t v17 = v9[3];
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000825D0((void *)(v17 > 1), v18 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v18 + 1;
      id v19 = &v9[2 * v18];
      v19[4] = v16;
      v19[5] = v15;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_10024E5C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v75 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v70 - v9;
  __chkstk_darwin(v8);
  int64_t v12 = (char *)&v70 - v11;
  static Logger.Application.getter();
  id v13 = a1;
  int64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  int v16 = v15;
  BOOL v17 = os_log_type_enabled(v14, v15);
  uint64_t v76 = (uint64_t)v10;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    id v74 = (id)swift_slowAlloc();
    uint64_t v79 = (uint64_t)v74;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v77 = v2;
    uint64_t v78 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0550, &v79);
    LODWORD(v73) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v72 = v18 + 14;
    uint64_t v19 = v5;
    uint64_t v20 = v4;
    id v21 = [v13 session];
    id v22 = [v21 persistentIdentifier];

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v25 = v24;

    uint64_t v26 = v23;
    uint64_t v4 = v20;
    uint64_t v5 = v19;
    uint64_t v78 = sub_10009B0E4(v26, v25, &v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v2 = v77;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v73, "%s: identifier: %s freeing resources", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v27 = v19;
  }
  else
  {

    uint64_t v27 = v5;
  }
  uint64_t v28 = *(void (**)(char *, uint64_t))(v27 + 8);
  v28(v12, v4);
  uint64_t v29 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController;
  id v30 = *(void **)(v2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v30)
  {
    id v74 = [v30 configuration];
    id v31 = [self sharedApplication];
    id v32 = [v31 openSessions];

    sub_10009E6C4(0, (unint64_t *)&unk_10070D320);
    sub_1000B86A8((unint64_t *)&unk_10070BDC0, (unint64_t *)&unk_10070D320);
    uint64_t v33 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v34 = [v13 session];
    char v35 = sub_1005354CC(v34, v33);

    swift_bridgeObjectRelease();
    if (v35)
    {
      uint64_t v73 = v4;
      uint64_t v36 = v76;
      static Logger.Application.getter();
      id v37 = v13;
      unsigned int v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v72 = v5;
        uint64_t v41 = v40;
        uint64_t v77 = swift_slowAlloc();
        uint64_t v79 = v77;
        *(_DWORD *)uint64_t v41 = 136315394;
        uint64_t v78 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0550, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v41 + 12) = 2080;
        os_log_type_t v75 = (char *)(v41 + 14);
        uint64_t v42 = v2;
        id v43 = [v37 session];
        id v44 = [v43 persistentIdentifier];

        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v71 = (void (*)(uint64_t, uint64_t))v28;
        unint64_t v47 = v46;

        uint64_t v48 = v45;
        uint64_t v2 = v42;
        uint64_t v78 = sub_10009B0E4(v48, v47, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s: identifier: %s was disconnected but session still exists. Keeping state.", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v71(v76, v73);
      }
      else
      {

        v28((char *)v36, v73);
      }
    }
    else
    {
      uint64_t v77 = v2;
      unsigned int v49 = v75;
      static Logger.Application.getter();
      id v50 = v13;
      BOOL v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = swift_slowAlloc();
        uint64_t v72 = v5;
        uint64_t v54 = v53;
        uint64_t v76 = swift_slowAlloc();
        uint64_t v79 = v76;
        *(_DWORD *)uint64_t v54 = 136315394;
        uint64_t v78 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0550, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v54 + 12) = 2080;
        id v55 = [v50 session];
        uint64_t v73 = v4;
        id v56 = v55;
        id v57 = [v55 persistentIdentifier];
        unint64_t v71 = (void (*)(uint64_t, uint64_t))v28;
        id v58 = v57;

        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v61 = v60;

        uint64_t v78 = sub_10009B0E4(v59, v61, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s: identifier: %s was disconnected and session is gone. Clearing state.", (uint8_t *)v54, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v71((uint64_t)v75, v73);
      }
      else
      {

        v28(v49, v4);
      }
      id v62 = [self sharedStore];
      id v63 = v74;
      [v62 purgeStateForConfiguration:v74];

      uint64_t v2 = v77;
    }
  }
  uint64_t v64 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window;
  id v65 = *(void **)(v2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  if (v65 && ([v65 setHidden:1], (uint64_t v66 = *(void **)(v2 + v64)) != 0))
  {
    [v66 setRootViewController:0];
    uint64_t v67 = *(void **)(v2 + v64);
  }
  else
  {
    uint64_t v67 = 0;
  }
  *(void *)(v2 + v64) = 0;

  id v68 = *(void **)(v2 + v29);
  *(void *)(v2 + v29) = 0;

  uint64_t v69 = *(void **)(v2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController);
  *(void *)(v2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController) = 0;
}

void sub_10024EED4(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v61 = a3;
  id v62 = a4;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v58 = (char *)&v54 - v10;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - v19;
  sub_1000CBC00(a1, (uint64_t)v13, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    id v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v30(v20, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    unint64_t v31 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v61;
    *(void *)(v32 + 16) = v61;
    v30((char *)(v32 + v31), v18, v14);
    id v34 = v62;
    *(void *)(v32 + ((v16 + v31 + 7) & 0xFFFFFFFFFFFFFFF8)) = v62;
    uint64_t v67 = sub_10026AFCC;
    uint64_t v68 = v32;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    id v65 = sub_1000666D8;
    uint64_t v66 = &unk_10069C508;
    char v35 = _Block_copy(&aBlock);
    id v36 = v33;
    id v37 = v34;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v35);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    return;
  }
  id v21 = v61;
  id v22 = v62;
  sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
  if (!a2) {
    goto LABEL_9;
  }
  uint64_t v23 = a2;
  id v24 = a2;
  id v25 = [v24 domain];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
  {

    swift_bridgeObjectRelease_n();
LABEL_9:
    static Logger.Application.getter();
    os_log_type_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v69 = sub_10009B0E4(0xD000000000000011, 0x80000001005E05B0, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s: Could not decode FPItem from NSUserActivity.", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v60);
    type metadata accessor for DOCUserActivityController();
    static DOCUserActivityController.deleteActivity(_:item:)();
    return;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38)
  {

    goto LABEL_9;
  }
  uint64_t v42 = v58;
  static Logger.Application.getter();
  id v43 = v24;
  id v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    id v56 = (void *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t aBlock = v57;
    *(_DWORD *)uint64_t v46 = 136315394;
    os_log_t v55 = v44;
    uint64_t v69 = sub_10009B0E4(0xD000000000000011, 0x80000001005E05B0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v46 + 12) = 2112;
    uint64_t v69 = (uint64_t)v43;
    unint64_t v47 = v23;
    id v48 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v56 = v47;

    os_log_t v49 = v55;
    _os_log_impl((void *)&_mh_execute_header, v55, v45, "%s: Could not retrieve URL for item: %@", (uint8_t *)v46, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v60);
  }
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v22;
  *(void *)(v50 + 24) = v21;
  uint64_t v67 = sub_10026AED8;
  uint64_t v68 = v50;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  id v65 = sub_1000666D8;
  uint64_t v66 = &unk_10069C4B8;
  BOOL v51 = _Block_copy(&aBlock);
  id v52 = v21;
  id v53 = v22;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v51);
}

uint64_t sub_10024F678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10025412C(a2, 0, 0, 1, 1);
  if ((result & 1) == 0)
  {
    type metadata accessor for DOCUserActivityController();
    uint64_t v13 = static DOCUserActivityController.alertController(with:)();
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
      if (v15)
      {
        id v16 = v15;
        [v16 presentViewController:v14 animated:1 completion:0];
      }
    }
    static Logger.Application.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v28 = v25;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = sub_10009B0E4(0xD000000000000011, 0x80000001005E05B0, &v28);
      uint64_t v26 = v9;
      uint64_t v27 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v24 = v8;
      sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v27 = sub_10009B0E4(v21, v22, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s: URL decoded FPItem could not be opened: %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v24);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return result;
}

void sub_10024FA3C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DOCUserActivityController();
  uint64_t v3 = (void *)static DOCUserActivityController.alertController(with:)();
  if (v3)
  {
    uint64_t v4 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v4)
    {
      id v6 = v3;
      id v5 = v4;
      [v5 presentViewController:v6 animated:1 completion:0];

      uint64_t v3 = v6;
    }
  }
}

void sub_10024FCAC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v12 = sub_10009B0E4(0xD000000000000019, 0x80000001005E0660, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2048;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s [App Shortcut] finished creating %ld app shortcuts.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v10 = [self sharedApplication];
  sub_10009E6C4(0, &qword_100708730);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v10 setShortcutItems:isa];
}

uint64_t sub_10024FF74(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v27 - v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
  uint64_t v9 = (void *)(v8 + 16);
  static Logger.UI.getter();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v29 = v2;
  if (v12)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v36 = sub_10009B0E4(0xD000000000000015, 0x80000001005E0680, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s [App Shortcut] 1. Start", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v14 = *(void (**)(char *, uint64_t))(v33 + 8);
  v14(v7, v2);
  sub_100261E3C();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_100261FE0();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  static Logger.UI.getter();
  swift_retain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    v35[0] = sub_10009B0E4(0xD000000000000015, 0x80000001005E0680, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    swift_beginAccess();
    uint64_t v28 = v5;
    sub_10009E6C4(0, &qword_100708730);
    os_log_type_t v18 = v14;
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_10009B0E4(v19, v21, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s [App Shortcut] 2. Start getting provider locations %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v18(v28, v29);
  }
  else
  {

    swift_release_n();
    v14(v5, v2);
  }
  unint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v30;
  uint64_t v24 = v31;
  v22[2] = v8;
  v22[3] = v23;
  uint64_t v25 = v32;
  v22[4] = v24;
  v22[5] = v25;
  swift_retain();
  swift_retain();
  sub_100262694((uint64_t)sub_10026B0D0, (uint64_t)v22, (uint64_t)v25);
  swift_release();
  return swift_release();
}

Swift::Int sub_100250578(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  unint64_t v61 = (char *)v59 - v8;
  __chkstk_darwin(v7);
  id v10 = (char *)v59 - v9;
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  os_log_type_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v63 = v3;
  uint64_t v64 = v2;
  id v62 = v6;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v67 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    id v66 = (id)sub_10009B0E4(0xD000000000000018, 0x80000001005E0460, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v60 = (void (*)(char *, uint64_t))(v14 + 14);
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    swift_bridgeObjectRetain();
    uint64_t v15 = Set.description.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v18 = v15;
    uint64_t v2 = v64;
    id v66 = (id)sub_10009B0E4(v18, v17, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v63;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: urlContexts: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v10, v2);
  uint64_t v60 = v19;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v20 = (uint64_t)&_swiftEmptySetSingleton;
    uint64_t v67 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    uint64_t v21 = __CocoaSet.Iterator.next()();
    if (v21)
    {
      uint64_t v22 = v21;
      sub_10009E6C4(0, &qword_10070BDA0);
      do
      {
        uint64_t v65 = v22;
        swift_dynamicCast();
        id v23 = [v66 options];
        unsigned __int8 v24 = [v23 _openAsDownload];

        id v25 = v66;
        if (v24)
        {
          uint64_t v26 = v67;
          unint64_t v27 = v67[2];
          if (v67[3] <= v27)
          {
            sub_1000F0770(v27 + 1);
            uint64_t v26 = v67;
          }
          Swift::Int result = NSObject._rawHashValue(seed:)(v26[5]);
          uint64_t v29 = (char *)(v26 + 7);
          uint64_t v30 = -1 << *((unsigned char *)v26 + 32);
          unint64_t v31 = result & ~v30;
          unint64_t v32 = v31 >> 6;
          if (((-1 << v31) & ~v26[(v31 >> 6) + 7]) != 0)
          {
            unint64_t v33 = __clz(__rbit64((-1 << v31) & ~v26[(v31 >> 6) + 7])) | v31 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v34 = 0;
            unint64_t v35 = (unint64_t)(63 - v30) >> 6;
            do
            {
              if (++v32 == v35 && (v34 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v36 = v32 == v35;
              if (v32 == v35) {
                unint64_t v32 = 0;
              }
              v34 |= v36;
              uint64_t v37 = *(void *)&v29[8 * v32];
            }
            while (v37 == -1);
            unint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
          }
          *(void *)&v29[(v33 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v33;
          *(void *)(v26[6] + 8 * v33) = v25;
          ++v26[2];
        }
        else
        {
        }
        uint64_t v22 = __CocoaSet.Iterator.next()();
      }
      while (v22);
      uint64_t v20 = (uint64_t)v67;
      uint64_t v2 = v64;
      uint64_t v19 = v60;
    }
    os_log_type_t v39 = v61;
    swift_release();
  }
  else
  {
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_100263B68(v38);
    os_log_type_t v39 = v61;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = (uint64_t)sub_100250FA4(v20, a1);
  static Logger.Application.getter();
  swift_retain_n();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    id v44 = (void *)swift_slowAlloc();
    uint64_t v67 = v44;
    *(_DWORD *)uint64_t v43 = 136315650;
    id v66 = (id)sub_10009B0E4(0xD000000000000018, 0x80000001005E0460, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2048;
    v59[1] = v44;
    if ((v20 & 0xC000000000000001) != 0) {
      os_log_type_t v45 = (void *)__CocoaSet.count.getter();
    }
    else {
      os_log_type_t v45 = *(void **)(v20 + 16);
    }
    id v66 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v43 + 22) = 2080;
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    swift_retain();
    uint64_t v46 = Set.description.getter();
    unint64_t v48 = v47;
    swift_release();
    id v66 = (id)sub_10009B0E4(v46, v48, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s: urls to import directly to Downloads folder (%ld): %s", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v64;
    uint64_t v19 = v60;
    v60(v61, v64);
  }
  else
  {

    swift_release_n();
    v19(v39, v2);
  }
  os_log_t v49 = v62;
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    id v53 = (char *)swift_slowAlloc();
    uint64_t v67 = v53;
    *(_DWORD *)uint64_t v52 = 136315650;
    id v66 = (id)sub_10009B0E4(0xD000000000000018, 0x80000001005E0460, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v52 + 12) = 2048;
    unint64_t v61 = v53;
    if ((v40 & 0xC000000000000001) != 0) {
      uint64_t v54 = (void *)__CocoaSet.count.getter();
    }
    else {
      uint64_t v54 = *(void **)(v40 + 16);
    }
    id v66 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 22) = 2080;
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    swift_bridgeObjectRetain();
    uint64_t v55 = Set.description.getter();
    unint64_t v57 = v56;
    swift_bridgeObjectRelease();
    id v66 = (id)sub_10009B0E4(v55, v57, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s: urls to import via the picker (%ld): %s", (uint8_t *)v52, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v60(v62, v64);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v19(v49, v2);
  }
  id v58 = (void *)v59[2];
  if ((v20 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (*(void *)(v20 + 16)) {
LABEL_40:
  }
    sub_100251778(v20, v58);
LABEL_41:
  swift_release();
  if ((v40 & 0xC000000000000001) == 0)
  {
    if (!*(void *)(v40 + 16)) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_43;
  }
  if (__CocoaSet.count.getter()) {
LABEL_43:
  }
    sub_1002510AC(v40);
  return swift_bridgeObjectRelease();
}

void *sub_100250FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.count.getter();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_100263EA0(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= __CocoaSet.count.getter() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = __CocoaSet.count.getter();
  Swift::Int v7 = sub_1004FDA44(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_100264198(a1, v2);
}

uint64_t sub_1002510AC(uint64_t a1)
{
  uint64_t v43 = type metadata accessor for URL();
  uint64_t v2 = *(char **)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  int v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    LODWORD(v40) = v10;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v46[0] = v38;
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v45 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005E0480, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2048;
    os_log_type_t v39 = v2;
    os_log_t v41 = v9;
    uint64_t v42 = v5;
    unint64_t v37 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0) {
      uint64_t v12 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v12 = *(void *)(a1 + 16);
    }
    uint64_t v45 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2080;
    v36[1] = v11 + 24;
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    swift_bridgeObjectRetain();
    uint64_t v17 = Set.description.getter();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_10009B0E4(v17, v19, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v20 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s: Calling openInputURL: for %ld urlContexts: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v42);
    uint64_t v2 = v39;
    if (!v37) {
      goto LABEL_8;
    }
LABEL_5:
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v46[0];
    uint64_t v42 = v46[1];
    uint64_t v14 = v46[2];
    uint64_t v15 = v46[3];
    unint64_t v16 = v46[4];
    goto LABEL_12;
  }

  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((a1 & 0xC000000000000001) != 0) {
    goto LABEL_5;
  }
LABEL_8:
  uint64_t v21 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v42 = a1 + 56;
  uint64_t v14 = ~v21;
  uint64_t v23 = -v21;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  unint64_t v16 = v24 & v22;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
LABEL_12:
  uint64_t v38 = v14;
  uint64_t v40 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  os_log_t v41 = (os_log_t)((unint64_t)(v14 + 64) >> 6);
  id v25 = (uint64_t (**)(char *, uint64_t))(v2 + 8);
  os_log_type_t v39 = (char *)&type metadata for Swift.AnyObject + 8;
  if (a1 < 0) {
    goto LABEL_15;
  }
  while (1)
  {
    if (v16)
    {
      uint64_t v26 = (v16 - 1) & v16;
      unint64_t v27 = __clz(__rbit64(v16)) | (v15 << 6);
      uint64_t v28 = v15;
      goto LABEL_32;
    }
    uint64_t v31 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v31 >= (uint64_t)v41) {
      return sub_10026AD14();
    }
    unint64_t v32 = *(void *)(v42 + 8 * v31);
    uint64_t v28 = v15 + 1;
    if (!v32)
    {
      uint64_t v28 = v15 + 2;
      if (v15 + 2 >= (uint64_t)v41) {
        return sub_10026AD14();
      }
      unint64_t v32 = *(void *)(v42 + 8 * v28);
      if (!v32)
      {
        uint64_t v28 = v15 + 3;
        if (v15 + 3 >= (uint64_t)v41) {
          return sub_10026AD14();
        }
        unint64_t v32 = *(void *)(v42 + 8 * v28);
        if (!v32)
        {
          uint64_t v28 = v15 + 4;
          if (v15 + 4 >= (uint64_t)v41) {
            return sub_10026AD14();
          }
          unint64_t v32 = *(void *)(v42 + 8 * v28);
          if (!v32)
          {
            os_log_t v33 = (os_log_t)(v15 + 5);
            while (v41 != v33)
            {
              unint64_t v32 = *(void *)(v42 + 8 * (void)v33);
              os_log_t v33 = (os_log_t)((char *)v33 + 1);
              if (v32)
              {
                uint64_t v28 = (uint64_t)&v33[-1].isa + 7;
                goto LABEL_31;
              }
            }
            return sub_10026AD14();
          }
        }
      }
    }
LABEL_31:
    uint64_t v26 = (v32 - 1) & v32;
    unint64_t v27 = __clz(__rbit64(v32)) + (v28 << 6);
LABEL_32:
    id v30 = *(id *)(*(void *)(a1 + 48) + 8 * v27);
    if (!v30) {
      return sub_10026AD14();
    }
    while (1)
    {
      id v34 = [v30 URL];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      type metadata accessor for DeepLinkNavigator();
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(void *)(v35 + 32) = 0;
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(void *)(v35 + 32) = &off_10069B8F0;
      swift_unknownObjectWeakAssign();
      sub_1004E06FC((uint64_t)v4, v30);

      swift_release();
      uint64_t result = (*v25)(v4, v43);
      uint64_t v15 = v28;
      unint64_t v16 = v26;
      if ((a1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_15:
      uint64_t v29 = __CocoaSet.Iterator.next()();
      if (v29)
      {
        uint64_t v44 = v29;
        sub_10009E6C4(0, &qword_10070BDA0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v30 = (id)v45;
        swift_unknownObjectRelease();
        uint64_t v28 = v15;
        uint64_t v26 = v16;
        if (v30) {
          continue;
        }
      }
      return sub_10026AD14();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100251778(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v27 = a2;
    uint64_t v28 = v4;
    uint64_t v14 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    os_log_t v33 = (void *)sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E04A0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2048;
    if ((a1 & 0xC000000000000001) != 0) {
      uint64_t v15 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v15 = *(void *)(a1 + 16);
    }
    os_log_t v33 = (void *)v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: starting to import (%ld) items directly to Downloads folder.", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a2 = v27;
    uint64_t v4 = v28;
    if ((a1 & 0xC000000000000001) == 0) {
      goto LABEL_8;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((a1 & 0xC000000000000001) == 0)
    {
LABEL_8:
      uint64_t v16 = *(void *)(a1 + 16);
      goto LABEL_9;
    }
  }
  uint64_t v16 = __CocoaSet.count.getter();
LABEL_9:
  char v17 = v16 == 1;
  unint64_t v18 = dispatch_group_create();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = _swiftEmptyArrayStorage;
  id v20 = a2;
  sub_100266A64(a1, v18, v20, v17, v19);

  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v19;
  *(void *)(v22 + 24) = v20;
  aBlock[4] = (uint64_t)sub_10026AD58;
  aBlock[5] = v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_10069C328;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v20;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  os_log_t v33 = _swiftEmptyArrayStorage;
  sub_100265880((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  id v25 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();

  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v31);
  swift_release();
  return swift_release();
}

void sub_100251CDC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t a6, NSObject *a7)
{
  dispatch_group_t v40 = a7;
  uint64_t v35 = a6;
  id v36 = a5;
  uint64_t v37 = a4;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  id v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v35 - v21;
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v42 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E04A0, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v42 = a2;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076E0);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v42 = sub_10009B0E4(v26, v27, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: could not import to Downloads or it was cancelled: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v28(v22, v15, v16);
    if (a3)
    {
      id v29 = [v36 options];
      sub_10025412C((uint64_t)v22, v29, 1, 1, 1);
    }
    else
    {
      id v30 = (unint64_t *)(v35 + 16);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
      swift_beginAccess();
      unint64_t v31 = *v30;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v30 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v31 = sub_10018F80C(0, *(void *)(v31 + 16) + 1, 1, v31);
        unint64_t *v30 = v31;
      }
      unint64_t v34 = *(void *)(v31 + 16);
      unint64_t v33 = *(void *)(v31 + 24);
      if (v34 >= v33 >> 1)
      {
        unint64_t v31 = sub_10018F80C(v33 > 1, v34 + 1, 1, v31);
        unint64_t *v30 = v31;
      }
      *(void *)(v31 + 16) = v34 + 1;
      v28((char *)(v31+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v34), v20, v16);
      swift_endAccess();
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }
  dispatch_group_leave(v40);
}

uint64_t sub_1002521E4(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    static Logger.Application.getter();
    swift_retain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v4;
      uint64_t v26 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      v25[0] = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E04A0, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2048;
      swift_beginAccess();
      uint64_t v24 = *(void *)(*(void *)(a1 + 16) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: imported %ld urls. Revealing with selection.", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v23);
    }
    else
    {

      swift_release();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    uint64_t v19 = *(void **)&a2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    if (v19)
    {
      swift_retain();
      id v20 = a2;
      id v21 = v19;
      sub_10039C6A4(1, v21, v20, 2, a1);

      return swift_release();
    }
  }
  else
  {
    static Logger.Application.getter();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v26 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E04A0, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: imported 0 urls. Nothing to do.", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_1002525E0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(result + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v3)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = a2;
    v7[3] = a3;
    v7[4] = v6;
    id v8 = v3;
    swift_retain();
    id v9 = v6;
    id v10 = [v8 namedLocationResolver];
    uint64_t v11 = (void *)swift_allocObject();
    _OWORD v11[2] = v8;
    v11[3] = sub_10026ADA0;
    v11[4] = v7;
    id v12 = v8;
    swift_retain();
    sub_1003FF82C(a2, (uint64_t)sub_10026ADF4, (uint64_t)v11);

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100252710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = a4;
    uint64_t v14 = v13;
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v21 = v7;
    uint64_t v24 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E04A0, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v24 = a2;
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v24 = sub_10009B0E4(v15, v16, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2048;
    swift_beginAccess();
    uint64_t v17 = *(void *)(*(void *)(a3 + 16) + 16);
    swift_release();
    uint64_t v23 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: revealed %s. Selecting %ld items.", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_beginAccess();
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_100255768(v18);
  return swift_bridgeObjectRelease();
}

void sub_1002529F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  int v11 = v10;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = swift_slowAlloc();
    id v30 = v2;
    uint64_t v13 = v12;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v31 = sub_10009B0E4(0xD000000000000015, 0x80000001005E0370, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    v26[1] = v13 + 14;
    id v14 = v8;
    uint64_t v28 = v4;
    id v15 = v14;
    id v16 = [v14 description];
    int v27 = v11;
    uint64_t v17 = v5;
    id v18 = v16;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    uint64_t v31 = sub_10009B0E4(v19, v21, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v27, "%s shortcutItem: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v30;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v22 = *(void **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (v22)
  {
    id v23 = v8;
    uint64_t v24 = v2;
    uint64_t v25 = v22;
    sub_10039C060(1, 0, 0, v25, v24, v23);
  }
}

void sub_100252CE8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v4)
  {
    id v5 = [v4 effectiveFullBrowser];
    [v5 dismissSearch];
  }

  sub_100252D64(a2, a1);
}

void sub_100252D64(void *a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v58 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v58 - 8);
  uint64_t v4 = __chkstk_darwin(v58);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v54 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v54 - v13;
  id v15 = [a1 type];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (v16 == 0xD000000000000026 && v18 == 0x80000001005E0390
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    static Logger.Application.getter();
    id v19 = a1;
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      aBlock[0] = v55;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v60 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0420, aBlock);
      uint64_t v56 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2112;
      uint64_t v60 = (uint64_t)v19;
      id v24 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v23 = v19;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s scan document %@", (uint8_t *)v22, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v58);
    }
    uint64_t v25 = *(void **)(v57 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v25)
    {
      uint64_t v26 = v25;
      sub_10039A90C(1, 0, 0, v26, v26);
LABEL_17:
    }
  }
  else if (v16 == 0xD000000000000020 && v18 == 0x80000001005E03C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    static Logger.Application.getter();
    id v27 = a1;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      aBlock[0] = v55;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v60 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0420, aBlock);
      uint64_t v56 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2112;
      uint64_t v60 = (uint64_t)v27;
      id v32 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v31 = v27;

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s search %@", (uint8_t *)v30, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v12, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v58);
    }
    unint64_t v33 = *(void **)(v57 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v33)
    {
      id v34 = [v33 effectiveFullBrowser];
      uint64_t v26 = (char *)sub_100066A5C();
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v36 = (void *)swift_allocObject();
      void v36[2] = v35;
      v36[3] = 0;
      v36[4] = 0;
      v36[5] = 0;
      v36[6] = 0xE000000000000000;
      aBlock[4] = (uint64_t)sub_10026AD10;
      aBlock[5] = (uint64_t)v36;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000666D8;
      aBlock[3] = (uint64_t)&unk_10069C2B0;
      uint64_t v37 = _Block_copy(aBlock);
      swift_release();
      [v26 performAfterSearchInitialization:v37];
      _Block_release(v37);

      goto LABEL_17;
    }
  }
  else
  {
    if (v16 == 0xD000000000000020 && v18 == 0x80000001005E03F0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v38 & 1) == 0)
      {
        uint64_t v56 = v3;
        static Logger.Application.getter();
        id v48 = a1;
        os_log_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = swift_slowAlloc();
          uint64_t v52 = (void *)swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          aBlock[0] = v57;
          *(_DWORD *)uint64_t v51 = 136315394;
          uint64_t v60 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0420, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v51 + 12) = 2112;
          uint64_t v60 = (uint64_t)v48;
          id v53 = v48;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v52 = v48;

          _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s Encountered unknown shortcut item type: %@", (uint8_t *)v51, 0x16u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v56 + 8))(v6, v58);
        return;
      }
    }
    static Logger.Application.getter();
    id v39 = a1;
    dispatch_group_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      aBlock[0] = v55;
      *(_DWORD *)uint64_t v42 = 136315394;
      uint64_t v60 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0420, aBlock);
      uint64_t v56 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 12) = 2112;
      uint64_t v60 = (uint64_t)v39;
      id v44 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v43 = v39;

      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s domain %@", (uint8_t *)v42, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v58);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v58);
    }
    id v45 = [v39 userInfo];
    if (v45)
    {
      uint64_t v46 = v45;
      sub_1000CBE70(&qword_10070BD98);
      uint64_t v47 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = (char *)sub_100253898(v47);
      swift_bridgeObjectRelease();
      if (v26)
      {
        sub_10025B9D0(v26, 0, 0);
        goto LABEL_17;
      }
    }
  }
}

id sub_100253898(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v36 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = DOCUserActivityLocationKey.getter();
  if (!*(void *)(a1 + 16) || (uint64_t v15 = sub_100042F50(v13, v14), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v17 = *(void **)(*(void *)(a1 + 56) + 8 * v15);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v43 = v17;
  sub_1000CBE70(&qword_10070BD98);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    static Logger.Application.getter();
    os_log_type_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)id v23 = 136315138;
      id v43 = (id)sub_10009B0E4(0xD000000000000014, 0x80000001005E0440, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s Location data not found in user info", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    return 0;
  }
  uint64_t v41 = v2;
  uint64_t v18 = v42[0];
  unint64_t v19 = v42[1];
  sub_10009E6C4(0, &qword_10070B710);
  sub_1000CBE70(&qword_100719C30);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
  *(void *)(v20 + 32) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v18;
  if (!v42[3])
  {
    sub_1000CBBA4((uint64_t)v42, (uint64_t *)&unk_100705D60);
LABEL_17:
    static Logger.Application.getter();
    id v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)id v34 = 136315138;
      id v43 = (id)sub_10009B0E4(0xD000000000000014, 0x80000001005E0440, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s Could not unarchive location", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v35 = v40;
    }
    else
    {
      uint64_t v35 = v18;
    }
    sub_100021020(v35, v19);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v41);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v18 = v40;
    goto LABEL_17;
  }
  id v26 = v43;
  static Logger.Application.getter();
  id v24 = v26;
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    char v38 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v42[0] = v39;
    *(_DWORD *)uint64_t v29 = 136315394;
    id v43 = (id)sub_10009B0E4(0xD000000000000014, 0x80000001005E0440, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2112;
    os_log_t v37 = v27;
    id v43 = v24;
    id v30 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v38 = v24;

    os_log_t v31 = v37;
    _os_log_impl((void *)&_mh_execute_header, v37, v28, "%s Success! Unarchived location: %@. Restoring to it now.", (uint8_t *)v29, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100021020(v40, v19);
  }
  else
  {

    sub_100021020(v40, v19);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v41);
  return v24;
}

uint64_t sub_10025412C(uint64_t a1, void *a2, int a3, int a4, int a5)
{
  uint64_t v6 = v5;
  LODWORD(v88) = a5;
  int v84 = a4;
  int v86 = a3;
  id v83 = a2;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v89 = *(void *)(v8 - 8);
  id v90 = (id)v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v87 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v82 = (char *)&v79 - v11;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(char **)(v12 - 8);
  uint64_t v14 = *((void *)v13 + 8);
  uint64_t v15 = __chkstk_darwin(v12);
  char v16 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v81 = (char *)&v79 - v18;
  __chkstk_darwin(v17);
  uint64_t v85 = (char *)&v79 - v19;
  uint64_t v20 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v20 - 8);
  unint64_t v80 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v22 - 8);
  id v24 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for UTType();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  os_log_type_t v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((URL.isFileURL.getter() & 1) == 0)
  {
    id v34 = v87;
    static Logger.Application.getter();
    (*((void (**)(char *, uint64_t, uint64_t))v13 + 2))(v16, a1, v12);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      aBlock[0] = v88;
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v92 = sub_10009B0E4(0xD000000000000056, 0x80000001005E0310, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2080;
      sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = sub_10009B0E4(v38, v39, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v13 + 1))(v16, v12);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s: aborting attempt to open a non-file URL: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*((void (**)(char *, uint64_t))v13 + 1))(v16, v12);
    }

    (*(void (**)(char *, id))(v89 + 8))(v34, v90);
    return 0;
  }
  uint64_t v29 = a1;
  uint64_t v87 = v13;
  id v30 = *(void **)&v6[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (!v30)
  {
    uint64_t v40 = v82;
    static Logger.Application.getter();
    uint64_t v41 = (void (**)(char *, uint64_t))v87;
    uint64_t v42 = v81;
    uint64_t v43 = v12;
    (*((void (**)(char *, uint64_t, uint64_t))v87 + 2))(v81, a1, v12);
    id v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      aBlock[0] = v88;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v92 = sub_10009B0E4(0xD000000000000056, 0x80000001005E0310, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2080;
      sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = sub_10009B0E4(v47, v48, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v41[1](v42, v43);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s: could not reveal, invalid scene. URL: %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v41[1](v42, v12);
    }

    (*(void (**)(char *, id))(v89 + 8))(v40, v90);
    return 0;
  }
  id v90 = v30;
  BOOL v31 = URL.startAccessingSecurityScopedResource()();
  URL.promisedContentType.getter();
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
  LODWORD(v89) = v31;
  if (v32 == 1)
  {
    sub_1000CBBA4((uint64_t)v24, &qword_100708110);
LABEL_13:
    char v51 = 0;
    LODWORD(v88) = 0;
    char v50 = 1;
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
  char v49 = UTType.isFolderUTI.getter();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  if ((v49 & 1) == 0) {
    goto LABEL_13;
  }
  char v50 = 0;
  char v51 = 1;
LABEL_14:
  uint64_t v52 = v12;
  char v53 = v84;
  uint64_t v79 = v6;
  if (!v83) {
    goto LABEL_19;
  }
  id v54 = [v83 sourceApplication];
  if (!v54) {
    goto LABEL_19;
  }
  uint64_t v55 = v54;
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = v52;
  uint64_t v59 = v58;

  LOBYTE(v56) = sub_100109128(v56, v59, &off_100689658);
  swift_arrayDestroy();
  uint64_t v52 = v57;
  swift_bridgeObjectRelease();
  if (v56)
  {
    if ((v51 & 1) == 0)
    {
      char v76 = [self quickLookInSeparateProcess];
      uint64_t v77 = v87;
      uint64_t v78 = (uint64_t)v80;
      uint64_t v61 = v29;
      (*((void (**)(char *, uint64_t, uint64_t))v87 + 2))(v80, v29, v57);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v77 + 7))(v78, 0, 1, v57);
      sub_100393B30(v78, 0, v76, 0, 0);
      sub_1000CBBA4(v78, &qword_1007076B0);
      char v60 = 0;
      goto LABEL_21;
    }
    char v60 = 0;
  }
  else
  {
LABEL_19:
    char v60 = v50 & v53;
  }
  uint64_t v61 = v29;
LABEL_21:
  char v62 = v53;
  URL._bridgeToObjectiveC()(v33);
  uint64_t v64 = v63;
  uint64_t v65 = (void (**)(unint64_t, char *, uint64_t))v87;
  id v66 = v85;
  (*((void (**)(char *, uint64_t, uint64_t))v87 + 2))(v85, v61, v52);
  uint64_t v67 = v52;
  unint64_t v68 = (*((unsigned __int8 *)v65 + 80) + 40) & ~(unint64_t)*((unsigned __int8 *)v65 + 80);
  uint64_t v69 = swift_allocObject();
  uint64_t v70 = v90;
  *(void *)(v69 + 16) = v90;
  *(unsigned char *)(v69 + 24) = v60;
  *(unsigned char *)(v69 + 25) = v86 & 1;
  unint64_t v71 = v79;
  *(void *)(v69 + 32) = v79;
  v65[4](v69 + v68, v66, v67);
  aBlock[4] = (uint64_t)sub_10026AC44;
  aBlock[5] = v69;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001B6B50;
  aBlock[3] = (uint64_t)&unk_10069C238;
  uint64_t v72 = _Block_copy(aBlock);
  id v73 = v70;
  id v74 = v71;
  swift_release();
  [v73 revealDocumentAtURL:v64 importIfNeeded:0 openDocument:v62 & 1 revealContents:v88 & 1 updateLastUsedDate:1 completion:v72];
  _Block_release(v72);

  if (v89) {
    URL.stopAccessingSecurityScopedResource()();
  }

  return 1;
}

void sub_100254B5C(uint64_t a1, uint64_t a2, void *a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v70 = a7;
  uint64_t v73 = a6;
  int v65 = a4;
  uint64_t v67 = a3;
  uint64_t v69 = type metadata accessor for URLResourceValues();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v77 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v63 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  id v74 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  id v66 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  char v76 = (char *)&v61 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v61 - v28;
  if (a2)
  {
    uint64_t v71 = a1;
    int v72 = a5;
    uint64_t v78 = v21;
    swift_errorRetain();
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    id v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v75 = v23;
      uint64_t v33 = v32;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v64 = v17;
      uint64_t v61 = v34;
      uint64_t v80 = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v79 = sub_10009B0E4(0xD000000000000056, 0x80000001005E0310, &v80);
      uint64_t v62 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v35 = Error.localizedDescription.getter();
      uint64_t v79 = sub_10009B0E4(v35, v36, &v80);
      uint64_t v16 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s: failed to reveal the item. Error: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      uint64_t v17 = v64;
      swift_slowDealloc();
      uint64_t v23 = v75;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
    uint64_t v21 = v78;
    LOBYTE(a5) = v72;
    a1 = v71;
  }
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
    if (a5)
    {
      uint64_t v37 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController;
      uint64_t v38 = v73;
      unint64_t v39 = *(void **)(v73 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController);
      if (v39) {
        goto LABEL_26;
      }
      uint64_t v40 = v23;
      uint64_t v41 = v22;
      uint64_t v42 = v66;
      static Logger.Application.getter();
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v43, v44))
      {
        os_log_type_t v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v45 = 136315138;
        uint64_t v79 = sub_10009B0E4(0xD000000000000056, 0x80000001005E0310, &v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s: fileImportController was nil, creating a new one.", v45, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v40 + 8))(v66, v41);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
      }
      id v57 = [objc_allocWithZone((Class)type metadata accessor for DOCImportFileController()) init];
      uint64_t v58 = *(void **)(v38 + v37);
      *(void *)(v38 + v37) = v57;

      uint64_t v59 = *(void *)(v38 + v37);
      if (!v59) {
        goto LABEL_28;
      }
      *(void *)(v59 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate + 8) = &off_10069B910;
      swift_unknownObjectWeakAssign();
      unint64_t v39 = *(void **)(v38 + v37);
      if (v39)
      {
LABEL_26:
        id v60 = v39;
        sub_100548BD0(v70);
      }
      else
      {
LABEL_28:
        __break(1u);
      }
    }
    return;
  }
  uint64_t v75 = v23;
  uint64_t v73 = v22;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v16);
  Swift::Bool v46 = URL.startAccessingSecurityScopedResource()();
  sub_1000CBE70(&qword_10070BD90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(void *)(inited + 32) = NSURLIsDirectoryKey;
  *(void *)(inited + 40) = NSURLIsPackageKey;
  unint64_t v48 = NSURLIsDirectoryKey;
  char v49 = NSURLIsPackageKey;
  sub_1004A0E10(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  char v50 = v77;
  URL.promisedItemResourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  uint64_t v51 = URLResourceValues.isDirectory.getter();
  char v52 = URLResourceValues.isPackage.getter();
  if (v52 == 2)
  {
    uint64_t v53 = v69;
    uint64_t v54 = v68;
    if ((v51 & 1) == 0) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v53 = v69;
    uint64_t v54 = v68;
    if (v51 & 1) == 0 || (v52)
    {
LABEL_19:
      if (v65)
      {
        char v55 = [self quickLookInSeparateProcess];
        uint64_t v56 = (uint64_t)v63;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v63, v21, v16);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v56, 0, 1, v16);
        sub_100393B30(v56, 0, v55, 0, 0);
        sub_1000CBBA4(v56, &qword_1007076B0);
      }
      goto LABEL_21;
    }
  }
  sub_100390428(1, v67);
LABEL_21:
  (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v53);
  if (v46) {
    URL.stopAccessingSecurityScopedResource()();
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
}

uint64_t sub_100255768(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v49 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void **)(v9 - 8);
  uint64_t v11 = v10[8];
  uint64_t v12 = __chkstk_darwin(v9);
  id v66 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v65 = (char *)v48 - v13;
  uint64_t v14 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = _swiftEmptyArrayStorage;
  dispatch_group_t v68 = dispatch_group_create();
  uint64_t v17 = a1;
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v54 = v2;
  uint64_t v53 = v3;
  char v52 = v5;
  uint64_t v51 = v6;
  uint64_t v50 = v7;
  v48[1] = v17;
  if (v18)
  {
    uint64_t v20 = (void (*)(char *, uint64_t, uint64_t))v10[2];
    uint64_t v19 = v10 + 2;
    uint64_t v71 = v20;
    uint64_t v21 = *((unsigned __int8 *)v19 + 64);
    uint64_t v22 = v17 + ((v21 + 32) & ~v21);
    uint64_t v23 = v19[7];
    uint64_t v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 5);
    uint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 4);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v19 + 2);
    uint64_t v62 = v23;
    uint64_t v59 = v21 | 7;
    uint64_t v60 = (v21 + 24) & ~v21;
    unint64_t v58 = (v11 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v57 = v58 + 8;
    uint64_t v56 = (void (**)(char *, uint64_t))(v19 - 1);
    swift_bridgeObjectRetain();
    uint64_t v63 = v16;
    uint64_t v24 = v65;
    uint64_t v25 = v68;
    while (1)
    {
      v71(v16, v22, v9);
      uint64_t v26 = *v67;
      (*v67)(v16, 0, 1, v9);
      if ((*v64)(v16, 1, v9) == 1) {
        break;
      }
      char v55 = v26;
      uint64_t v70 = v22;
      uint64_t v27 = *v61;
      (*v61)(v24, v16, v9);
      dispatch_group_enter(v25);
      id v28 = [self defaultManager];
      uint64_t v29 = v18;
      uint64_t v30 = v9;
      os_log_type_t v31 = v66;
      v71(v66, (uint64_t)v24, v30);
      uint64_t v32 = v19;
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v25;
      uint64_t v34 = v31;
      uint64_t v9 = v30;
      v27((char *)(v33 + v60), v34, v30);
      uint64_t v35 = v70;
      *(void *)(v33 + v58) = v69;
      unint64_t v36 = v25;
      swift_retain();
      FPItemManager.doc_fetchItem(for:completionHandler:)();

      uint64_t v19 = v32;
      uint64_t v16 = v63;
      swift_release();
      (*v56)(v24, v30);
      uint64_t v22 = v35 + v62;
      uint64_t v18 = v29 - 1;
      if (v29 == 1)
      {
        v55(v16, 1, 1, v9);
        break;
      }
    }
  }
  else
  {
    uint64_t v37 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
    swift_bridgeObjectRetain();
    v37(v16, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v38 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = (void *)v48[2];
  *(void *)(v39 + 16) = v69;
  *(void *)(v39 + 24) = v40;
  aBlock[4] = sub_10026A9D0;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_10069C198;
  uint64_t v41 = _Block_copy(aBlock);
  swift_retain();
  id v42 = v40;
  uint64_t v43 = v49;
  static DispatchQoS.unspecified.getter();
  int v72 = _swiftEmptyArrayStorage;
  sub_100265880((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  os_log_type_t v44 = v52;
  uint64_t v45 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch_group_t v46 = v68;
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v45);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v51);
  swift_release();
  return swift_release();
}

void sub_100255E38(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  dispatch_group_t v32 = a3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    id v17 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(a5 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a5 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
    static Logger.UI.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = Logger.logObject.getter();
    int v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      int v28 = v19;
      os_log_t v31 = v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v34[0] = v30;
      *(_DWORD *)uint64_t v20 = 136315394;
      v27[1] = v20 + 4;
      sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v33 = sub_10009B0E4(v21, v22, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(_WORD *)(v20 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v33 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        uint64_t v33 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v23 = 0;
      }
      os_log_type_t v24 = v28;
      *uint64_t v29 = v23;
      swift_errorRelease();
      swift_errorRelease();
      os_log_type_t v25 = v24;
      os_log_t v26 = v31;
      _os_log_impl((void *)&_mh_execute_header, v31, v25, "Failed to fetch item to reveal from URL: %s with error: %@", (uint8_t *)v20, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  dispatch_group_leave(v32);
}

void sub_1002562B4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11 < 1) {
      return;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return;
  }
  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v5)
  {
    id v6 = [v5 splitBrowserViewController];
    id v7 = [v6 fullDocumentManagerViewController];

    id v8 = [v7 effectiveBrowserViewController];
    if (v8)
    {
      swift_beginAccess();
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v12[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
      void v12[5] = 0;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      v12[2] = sub_10000A884;
      v12[3] = &unk_10069C1E8;
      uint64_t v10 = _Block_copy(v12);
      [v8 revealWithItems:isa selectEvenIfVisible:1 completionBlock:v10];
      _Block_release(v10);
    }
  }
}

void sub_100256498(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - v12;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v15 = (void *)Strong;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    id v46 = v15;
    if (v30) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v46 = v15;
    if (v16)
    {
LABEL_4:
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v17 = *(id *)(a1 + 32);
      }
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      id v19 = [v18 fileURL];

      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v20(v6, v11, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v20(v13, v6, v7);
        id v45 = [self defaultManager];
        URL._bridgeToObjectiveC()(v21);
        os_log_type_t v44 = v22;
        uint64_t v23 = swift_allocObject();
        id v24 = v46;
        swift_unknownObjectWeakInit();
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
        unint64_t v25 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v23;
        v20((char *)(v26 + v25), v11, v7);
        char v49 = sub_10026A554;
        uint64_t v50 = v26;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10000CAE4;
        unint64_t v48 = &unk_10069BF68;
        uint64_t v27 = _Block_copy(aBlock);
        swift_release();
        uint64_t v29 = v44;
        id v28 = v45;
        [v45 fetchItemForURL:v44 completionHandler:v27];
        _Block_release(v27);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return;
      }
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_11:
  sub_1000CBBA4((uint64_t)v6, &qword_1007076B0);
  sub_1000CBC00(a2, (uint64_t)aBlock, (uint64_t *)&unk_100705D60);
  if (v48)
  {
    type metadata accessor for DOCActionContext();
    if (swift_dynamicCast())
    {
      os_log_t v31 = v51;
      uint64_t v32 = OBJC_IVAR____TtC5Files16DOCActionContext_userInfo;
      uint64_t v33 = *(void *)&v51[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo];
      if (*(void *)(v33 + 16)
        && (uint64_t v34 = sub_100042F50(0xD000000000000036, 0x80000001005E0230), (v35 & 1) != 0)
        && (sub_10009B208(*(void *)(v33 + 56) + 32 * v34, (uint64_t)aBlock),
            sub_10009E6C4(0, (unint64_t *)&unk_1007085C0),
            (swift_dynamicCast() & 1) != 0))
      {
        unint64_t v36 = v51;
        uint64_t v37 = *(void *)&v31[v32];
        if (*(void *)(v37 + 16) && (uint64_t v38 = sub_100042F50(0xD000000000000035, 0x80000001005E0270), (v39 & 1) != 0))
        {
          sub_10009B208(*(void *)(v37 + 56) + 32 * v38, (uint64_t)aBlock);
          int v40 = swift_dynamicCast();
          if (v40) {
            uint64_t v41 = v51;
          }
          else {
            uint64_t v41 = 0;
          }
          if (v40) {
            unint64_t v42 = v52;
          }
          else {
            unint64_t v42 = 0;
          }
        }
        else
        {
          uint64_t v41 = 0;
          unint64_t v42 = 0;
        }
        id v43 = v46;
        sub_10025753C(v36, v41, v42);

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {
    }
  }
  else
  {

    sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_100705D60);
  }
}

void sub_100256A6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v41 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = (void *)Strong;
    uint64_t v39 = v13;
    if (a1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a4, v6);
      unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a1;
      *(void *)(v19 + 24) = v17;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v10, v6);
      aBlock[4] = (uint64_t)sub_10026A570;
      aBlock[5] = v19;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000666D8;
      void aBlock[3] = (uint64_t)&unk_10069BFB8;
      uint64_t v20 = _Block_copy(aBlock);
      id v21 = a1;
      id v22 = v17;
      swift_release();
      DOCRunInMainThread();

      _Block_release(v20);
    }
    else
    {
      static Logger.Application.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a4, v6);
      uint64_t v23 = v40;
      swift_errorRetain();
      swift_errorRetain();
      id v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v38 = v15;
        uint64_t v28 = v27;
        uint64_t v37 = swift_slowAlloc();
        aBlock[0] = v37;
        *(_DWORD *)uint64_t v28 = 136315650;
        uint64_t v43 = sub_10009B0E4(0xD000000000000017, 0x80000001005E02B0, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        int v36 = v26;
        *(_WORD *)(v28 + 12) = 2080;
        os_log_t v35 = v24;
        sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v43 = sub_10009B0E4(v29, v30, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        *(_WORD *)(v28 + 22) = 2080;
        uint64_t v43 = v23;
        swift_errorRetain();
        sub_1000CBE70((uint64_t *)&unk_1007076E0);
        uint64_t v31 = String.init<A>(describing:)();
        uint64_t v43 = sub_10009B0E4(v31, v32, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v33 = v35;
        _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v36, "%s item was nil for URL: %s error: %s", (uint8_t *)v28, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v39);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v39);
      }
    }
  }
}

void sub_100256FA8(void *a1, uint64_t a2, uint64_t a3)
{
  if ([a1 isFolder])
  {
    sub_1002570BC(a3);
    return;
  }
  sub_100397430(a3);
  if (!v6)
  {
    id v9 = a1;
    sub_10039832C(v9);
    uint64_t v7 = v10;

    if (!v7)
    {
      sub_100257324(a3, 0);
      return;
    }
    uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    id v11 = 0;
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  id v11 = [v8 windowScene];
LABEL_10:
  id v12 = v11;
  sub_1003BD860(v7, v11);
}

void sub_1002570BC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  id v6 = [objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions) init];
  id v7 = *(id *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  id v8 = v6;
  if (v7) {
    id v7 = [v7 windowScene];
  }
  [v6 setRequestingScene:v7];

  id v9 = [self defaultManager];
  URL._bridgeToObjectiveC()(v10);
  id v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v6;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v13, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_10026A658;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  void aBlock[3] = &unk_10069C008;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v6;
  swift_release();
  [v9 fetchItemForURL:v12 completionHandler:v15];
  _Block_release(v15);
}

void sub_100257324(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [self defaultManager];
  URL._bridgeToObjectiveC()(v8);
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(unsigned char *)(v13 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100268C8C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  void aBlock[3] = &unk_10069BA68;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  [v7 fetchItemForURL:v10 completionHandler:v14];
  _Block_release(v14);
}

uint64_t sub_10025753C(void *a1, void *a2, unint64_t a3)
{
  unint64_t v48 = a2;
  unint64_t v49 = type metadata accessor for Logger();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions) init];
  id v13 = *(id *)(v3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window);
  id v14 = v12;
  if (v13) {
    id v13 = [v13 windowScene];
  }
  [v12 setRequestingScene:v13];

  uint64_t v15 = self;
  id v51 = 0;
  id v16 = [v15 archivedDataWithRootObject:a1 requiringSecureCoding:1 error:&v51];
  id v17 = v51;
  if (v16)
  {
    uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v19;

    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DOCUserActivityIdentifier.location(_:), v8);
    DOCUserActivityIdentifier.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v20 = objc_allocWithZone((Class)NSUserActivity);
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [v20 initWithActivityType:v21];

    sub_1000CBE70(&qword_100707EF0);
    uint64_t inited = swift_initStackObject();
    long long v46 = xmmword_10059B760;
    *(_OWORD *)(inited + 16) = xmmword_10059B760;
    *(void *)(inited + 32) = DOCUserActivityLocationKey.getter();
    *(void *)(inited + 40) = v24;
    *(void *)(inited + 48) = DOCUserActivityTagNameKey.getter();
    *(void *)(inited + 56) = v25;
    sub_10049D5B0(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 setRequiredUserInfoKeys:isa];

    sub_1000CBE70(&qword_10070BD40);
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = v46;
    id v51 = (id)DOCUserActivityLocationKey.getter();
    uint64_t v52 = v28;
    AnyHashable.init<A>(_:)();
    *(void *)(v27 + 96) = &type metadata for Data;
    uint64_t v47 = v18;
    unint64_t v29 = v49;
    *(void *)(v27 + 72) = v18;
    *(void *)(v27 + 80) = v29;
    sub_100168CBC(v18, v29);
    id v51 = (id)DOCUserActivityTagNameKey.getter();
    uint64_t v52 = v30;
    AnyHashable.init<A>(_:)();
    *(void *)(v27 + 168) = &type metadata for String;
    uint64_t v31 = v48;
    if (!a3) {
      uint64_t v31 = 0;
    }
    unint64_t v32 = 0xE000000000000000;
    if (a3) {
      unint64_t v32 = a3;
    }
    *(void *)(v27 + 144) = v31;
    *(void *)(v27 + 152) = v32;
    swift_bridgeObjectRetain();
    sub_100494384(v27);
    Class v33 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 addUserInfoEntriesFromDictionary:v33];

    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v22;
    uint64_t v34[3] = v12;
    v34[4] = a1;
    char v55 = sub_10026A9B8;
    uint64_t v56 = v34;
    id v51 = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    uint64_t v53 = sub_1000666D8;
    uint64_t v54 = &unk_10069C0F8;
    os_log_t v35 = _Block_copy(&v51);
    id v36 = v12;
    id v37 = v22;
    id v38 = a1;
    swift_release();
    DOCRunInMainThread();

    _Block_release(v35);
    return sub_100021020(v47, v49);
  }
  else
  {
    uint64_t v40 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      unint64_t v48 = (void *)swift_slowAlloc();
      id v51 = v48;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v50 = sub_10009B0E4(0xD00000000000001BLL, 0x80000001005E02F0, (uint64_t *)&v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v44 = Error.localizedDescription.getter();
      uint64_t v50 = sub_10009B0E4(v44, v45, (uint64_t *)&v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s: Failed to encode DOCConcrete Location in to data. Error: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(char *, unint64_t))(v47 + 8))(v7, v49);
  }
}

uint64_t sub_100257C44(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_20;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_20:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_24;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_23;
        }
LABEL_17:
        unsigned __int8 v8 = [v6 doc_isCollaborationInvitation];
        swift_unknownObjectRelease();
        if ((v8 & 1) == 0)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_19;
        }
      }
      uint64_t v6 = *(void **)(v10 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_17;
      }
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_100257E34(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    static Logger.Application.getter();
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v16 = 136315138;
      v17[1] = sub_10009B0E4(0xD000000000000017, 0x80000001005E01A0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: items was empty.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(a1 + 32);
LABEL_6:
    unsigned __int8 v8 = v7;
    swift_bridgeObjectRelease();
    id v9 = [self defaultManager];
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v8;
    aBlock[4] = (uint64_t)sub_10026A410;
    aBlock[5] = v11;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001B6B50;
    void aBlock[3] = (uint64_t)&unk_10069BE50;
    long long v12 = _Block_copy(aBlock);
    id v13 = v8;
    swift_release();
    [v9 fetchURLForItem:v13 completionHandler:v12];
    _Block_release(v12);

    return;
  }
  __break(1u);
}

uint64_t sub_100258198(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v42 = a2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  unsigned __int8 v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  id v16 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v39 - v17;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v20 = (void *)result;
    sub_1000CBC00(a1, (uint64_t)v11, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
      NSString v21 = v8;
      static Logger.Application.getter();
      id v22 = a4;
      uint64_t v23 = v42;
      swift_errorRetain();
      id v24 = v22;
      swift_errorRetain();
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = (void *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        aBlock[0] = v41;
        *(_DWORD *)uint64_t v27 = 136315650;
        os_log_t v39 = v25;
        uint64_t v46 = sub_10009B0E4(0xD000000000000017, 0x80000001005E01A0, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v27 + 12) = 2112;
        uint64_t v46 = (uint64_t)v24;
        id v29 = v24;
        uint64_t v40 = v21;
        id v30 = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v28 = v24;

        *(_WORD *)(v27 + 22) = 2080;
        uint64_t v46 = v23;
        swift_errorRetain();
        sub_1000CBE70((uint64_t *)&unk_1007076E0);
        uint64_t v31 = String.init<A>(describing:)();
        uint64_t v46 = sub_10009B0E4(v31, v32, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v33 = v39;
        _os_log_impl((void *)&_mh_execute_header, v39, v26, "%s: Failed to fetch URL for: %@ error: %s", (uint8_t *)v27, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v40, v44);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();

        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v8, v44);
      }
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v34(v18, v11, v12);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
      unint64_t v35 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v20;
      v34((char *)(v36 + v35), v16, v12);
      aBlock[4] = (uint64_t)sub_10026A41C;
      aBlock[5] = v36;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000666D8;
      void aBlock[3] = (uint64_t)&unk_10069BEA0;
      id v37 = _Block_copy(aBlock);
      id v38 = v20;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v37);

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }
  }
  return result;
}

uint64_t sub_100258758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v8 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a2, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    id v11 = v8;
    sub_100393B30((uint64_t)v7, 0, 0, 0, 0);

    return sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
  }
  return result;
}

void sub_1002588A8(void *a1)
{
  uint64_t v90 = type metadata accessor for Logger();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v92 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v4 = __chkstk_darwin(v3);
  int v86 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v91 = (uint64_t)&v76 - v6;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v98 = *(void *)(v7 - 8);
  unint64_t v99 = (void **)v7;
  __chkstk_darwin(v7);
  uint64_t v88 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v94 = *(void *)(v9 - 8);
  uint64_t v95 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v76 - v13;
  uint64_t v97 = type metadata accessor for DispatchTimeInterval();
  uint64_t v15 = *(void *)(v97 - 8);
  uint64_t v16 = __chkstk_darwin(v97);
  uint64_t v87 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  id v20 = (char *)&v76 - v19;
  __chkstk_darwin(v18);
  uint64_t v96 = (char *)&v76 - v21;
  uint64_t v22 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v93 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v25);
  if (a1)
  {
    uint64_t v84 = v15;
    id v26 = a1;
    id v27 = [v26 userInfo];
    if (v27)
    {
      uint64_t v28 = v27;
      id v83 = v20;
      id v85 = v26;
      uint64_t v29 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v30 = *(void *)(v100 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey + 8);
      uint64_t v101 = *(void *)(v100 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey);
      uint64_t v102 = v30;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v29 + 16) && (unint64_t v31 = sub_10008E070((uint64_t)&aBlock), (v32 & 1) != 0))
      {
        sub_10009B208(*(void *)(v29 + 56) + 32 * v31, (uint64_t)&v109);
      }
      else
      {
        long long v109 = 0u;
        long long v110 = 0u;
      }
      sub_10008E17C((uint64_t)&aBlock);
      swift_bridgeObjectRelease();
      if (*((void *)&v110 + 1))
      {
        if ((swift_dynamicCast() & 1) == 0)
        {

          return;
        }
        uint64_t v34 = (uint64_t)aBlock;
        unint64_t v33 = v104;
        uint64_t v35 = swift_allocBox();
        uint64_t v36 = *(void (**)(uint64_t, void, uint64_t, void **))(v98 + 56);
        uint64_t v79 = v37;
        uint64_t v78 = v98 + 56;
        uint64_t v77 = v36;
        v36(v37, 1, 1, v99);
        id v38 = (void *)swift_allocObject();
        v38[2] = v34;
        v38[3] = v33;
        v38[4] = v35;
        uint64_t v107 = sub_10026A400;
        id v108 = v38;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v104 = 1107296256;
        os_log_t v105 = sub_1000666D8;
        uint64_t v106 = &unk_10069BE00;
        _Block_copy(&aBlock);
        *(void *)&long long v109 = _swiftEmptyArrayStorage;
        uint64_t v82 = v34;
        unint64_t v80 = v33;
        sub_100168CBC(v34, v33);
        sub_100265880((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        uint64_t v81 = v35;
        swift_retain();
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_1000B921C();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for DispatchWorkItem();
        swift_allocObject();
        uint64_t v39 = DispatchWorkItem.init(flags:block:)();
        swift_release();
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        uint64_t v40 = v93;
        (*(void (**)(char *, void, uint64_t))(v93 + 104))(v24, enum case for DispatchQoS.QoSClass.userInitiated(_:), v22);
        uint64_t v41 = (void *)static OS_dispatch_queue.global(qos:)();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v22);
        OS_dispatch_queue.async(execute:)();

        uint64_t v42 = v96;
        uint64_t v43 = v97;
        *(void *)uint64_t v96 = 2;
        uint64_t v44 = v84;
        (*(void (**)(char *, void, uint64_t))(v84 + 104))(v42, enum case for DispatchTimeInterval.seconds(_:), v43);
        static DispatchTime.now()();
        + infix(_:_:)();
        unint64_t v45 = *(void (**)(char *, uint64_t))(v94 + 8);
        uint64_t v46 = v12;
        uint64_t v47 = v95;
        v45(v46, v95);
        dispatch thunk of DispatchWorkItem.wait(timeout:)();
        v45(v14, v47);
        if ((static DispatchTimeoutResult.== infix(_:_:)() & 1) == 0)
        {
          uint64_t v100 = v39;
          uint64_t v53 = v92;
          static Logger.Application.getter();
          uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
          char v55 = v83;
          v54(v83, v42, v43);
          uint64_t v56 = Logger.logObject.getter();
          os_log_type_t v57 = static os_log_type_t.error.getter();
          int v58 = v57;
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v59 = swift_slowAlloc();
            unint64_t v99 = (void **)swift_slowAlloc();
            uint64_t aBlock = v99;
            *(_DWORD *)uint64_t v59 = 136315394;
            LODWORD(v98) = v58;
            *(void *)&long long v109 = sub_10009B0E4(0xD000000000000017, 0x80000001005E01A0, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v59 + 12) = 2080;
            v54(v87, v55, v43);
            uint64_t v60 = String.init<A>(describing:)();
            *(void *)&long long v109 = sub_10009B0E4(v60, v61, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v62 = *(void (**)(char *, uint64_t))(v44 + 8);
            v62(v55, v43);
            _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v98, "%s: Bookmark data resolution has timed out (max %s", (uint8_t *)v59, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_release();
            sub_100021020(v82, v80);
            (*(void (**)(char *, uint64_t))(v89 + 8))(v92, v90);
            v62(v96, v43);
          }
          else
          {

            swift_release();
            uint64_t v71 = *(void (**)(char *, uint64_t))(v44 + 8);
            v71(v55, v43);
            sub_100021020(v82, v80);
            (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v90);
            v71(v42, v43);
          }
          goto LABEL_37;
        }
        uint64_t v48 = v79;
        swift_beginAccess();
        uint64_t v49 = v48;
        uint64_t v50 = v91;
        sub_1000CBC00(v49, v91, &qword_1007076B0);
        uint64_t v52 = v98;
        id v51 = v99;
        if ((*(unsigned int (**)(uint64_t, uint64_t, void **))(v98 + 48))(v50, 1, v99) == 1)
        {
          (*(void (**)(char *, uint64_t))(v84 + 8))(v42, v43);

          sub_100021020(v82, v80);
          swift_release();
          sub_1000CBBA4(v50, &qword_1007076B0);
LABEL_37:
          swift_release();
          return;
        }
        uint64_t v63 = v88;
        (*(void (**)(char *, uint64_t, void **))(v52 + 32))(v88, v50, v51);
        id v64 = [v85 userInfo];
        if (v64)
        {
          int v65 = v64;
          uint64_t v66 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          *(void *)&long long v109 = DOCUserActivityQuickLookStateRestorationUserInfoKey.getter();
          *((void *)&v109 + 1) = v67;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v66 + 16))
          {
            unint64_t v68 = sub_10008E070((uint64_t)&aBlock);
            unint64_t v69 = v80;
            if (v70)
            {
              sub_10009B208(*(void *)(v66 + 56) + 32 * v68, (uint64_t)&v109);
            }
            else
            {
              long long v109 = 0u;
              long long v110 = 0u;
            }
          }
          else
          {
            long long v109 = 0u;
            long long v110 = 0u;
            unint64_t v69 = v80;
          }
          sub_10008E17C((uint64_t)&aBlock);
          swift_bridgeObjectRelease();
          if (*((void *)&v110 + 1))
          {
            sub_1000CBE70(&qword_10070BD48);
            if (swift_dynamicCast()) {
              uint64_t v72 = (uint64_t)aBlock;
            }
            else {
              uint64_t v72 = 0;
            }
LABEL_33:
            uint64_t v73 = *(void **)(v100 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
            if (v73)
            {
              uint64_t v74 = (uint64_t)v86;
              (*(void (**)(char *, char *, void **))(v52 + 16))(v86, v63, v51);
              v77(v74, 0, 1, v51);
              id v75 = v73;
              sub_100393B30(v74, 0, 0, 0, v72);

              swift_release();
              swift_bridgeObjectRelease();
              sub_100021020(v82, v69);
              sub_1000CBBA4(v74, &qword_1007076B0);
            }
            else
            {
              swift_release();

              swift_bridgeObjectRelease();
              sub_100021020(v82, v69);
            }
            (*(void (**)(char *, void **))(v52 + 8))(v63, v51);
            (*(void (**)(char *, uint64_t))(v84 + 8))(v42, v97);
            goto LABEL_37;
          }
        }
        else
        {
          long long v109 = 0u;
          long long v110 = 0u;
          unint64_t v69 = v80;
        }
        sub_1000CBBA4((uint64_t)&v109, (uint64_t *)&unk_100705D60);
        uint64_t v72 = 0;
        goto LABEL_33;
      }
    }
    else
    {
      long long v109 = 0u;
      long long v110 = 0u;
    }
    sub_1000CBBA4((uint64_t)&v109, (uint64_t *)&unk_100705D60);
  }
}

uint64_t sub_1002596BC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_projectBox();
  LOBYTE(v39) = 0;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v17(v11, 1, 1, v12);
  uint64_t v34 = a1;
  unint64_t v18 = a2;
  URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)();
  sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
  URL.checkResourceIsReachable()();
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    id v20 = v37;
    static Logger.Application.getter();
    uint64_t v21 = v34;
    unint64_t v22 = v18;
    sub_100168CBC(v34, v18);
    swift_errorRetain();
    sub_100168CBC(v21, v18);
    swift_errorRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v38[0] = v33;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v39 = sub_10009B0E4(0xD000000000000017, 0x80000001005E01A0, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2080;
      sub_100168CBC(v21, v18);
      uint64_t v26 = Data.description.getter();
      uint64_t v27 = v21;
      unint64_t v29 = v28;
      sub_100021020(v27, v22);
      uint64_t v39 = sub_10009B0E4(v26, v29, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100021020(v27, v22);
      sub_100021020(v27, v22);
      *(_WORD *)(v25 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v30 = Error.localizedDescription.getter();
      uint64_t v39 = sub_10009B0E4(v30, v31, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Failed to create document URL from bookmark data or document is unreachable: %s, error: %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v37, v36);
    }
    else
    {
      swift_errorRelease();
      sub_100021020(v21, v18);
      sub_100021020(v21, v18);
      swift_errorRelease();
      swift_errorRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v20, v36);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v15, v12);
    v17(v9, 0, 1, v12);
    swift_beginAccess();
    return sub_10014B834((uint64_t)v9, v16);
  }
}

id sub_100259BE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = v5;
    uint64_t v12 = v11;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = v22;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v24 = sub_10009B0E4(0xD000000000000022, 0x80000001005E0170, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v13 = v2;
    id v14 = [v8 shortDescription:v12 + 14];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v4;
    uint64_t v16 = v15;
    unint64_t v18 = v17;

    uint64_t v2 = v13;
    uint64_t v24 = sub_10009B0E4(v16, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: Restore concrete location: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id result = *(id *)(v2 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (result) {
    return [result switchToLocation:v8];
  }
  return result;
}

void sub_100259E98(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v57[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  id v14 = &v57[-v13];
  static Logger.Application.getter();
  id v15 = a1;
  swift_bridgeObjectRetain_n();
  id v16 = v15;
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  int v19 = v18;
  BOOL v20 = os_log_type_enabled(v17, v18);
  id v64 = v16;
  uint64_t v61 = a2;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v60 = v4;
    uint64_t v22 = v21;
    uint64_t v59 = swift_slowAlloc();
    uint64_t v66 = v59;
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v63 = v8;
    uint64_t v65 = sub_10009B0E4(0xD000000000000031, 0x80000001005E0130, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v65 = (uint64_t)v16;
    type metadata accessor for DOCIntentLocationType(0);
    id v23 = v64;
    int v58 = v19;
    uint64_t v24 = a2;
    id v25 = v23;
    uint64_t v62 = v9;
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v65 = sub_10009B0E4(v26, v27, &v66);
    uint64_t v8 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10009B0E4(v24, a3, &v66);
    uint64_t v9 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v58, "%s: Restore semantic location type: %s ID: %s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v60;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v28(v14, v8);
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;
  if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33)
  {
LABEL_8:
    uint64_t v34 = *(void **)(v4 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v34) {
      [v34 switchToTab:0];
    }
    return;
  }
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;
  if (v35 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v37 == v38)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v39)
  {
LABEL_14:
    uint64_t v40 = *(void **)(v4 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v40)
    {
      uint64_t v41 = self;
      id v42 = v40;
      id v43 = [v41 sharedItemsLocation];
      [v42 switchToLocation:v43];
    }
    return;
  }
  static Logger.Application.getter();
  id v44 = v64;
  swift_bridgeObjectRetain_n();
  unint64_t v45 = a3;
  id v46 = v44;
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    id v64 = v12;
    uint64_t v50 = v49;
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315650;
    uint64_t v65 = sub_10009B0E4(0xD000000000000031, 0x80000001005E0130, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2080;
    uint64_t v65 = (uint64_t)v46;
    type metadata accessor for DOCIntentLocationType(0);
    uint64_t v63 = v8;
    id v51 = v46;
    uint64_t v62 = v9;
    id v52 = v51;
    uint64_t v53 = String.init<A>(describing:)();
    uint64_t v65 = sub_10009B0E4(v53, v54, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10009B0E4(v61, v45, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s: Unexpected location type: %s ID: %s", (uint8_t *)v50, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v55 = v63;
    uint64_t v56 = v64;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v56 = v12;
    uint64_t v55 = v8;
  }
  v28(v56, v55);
}

void sub_10025A550(uint64_t a1, unint64_t a2)
{
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v43 - 8);
  uint64_t v5 = __chkstk_darwin(v43);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v37 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v37 - v11;
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = v7;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v41 = v10;
    uint64_t v45 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v44 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005E0110, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_10009B0E4(a1, a2, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: Tag ID: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    uint64_t v10 = v41;
    swift_slowDealloc();
    uint64_t v7 = v40;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v12, v43);
  id v19 = [self sharedInstance];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 tagForName:v20];

  if (v21)
  {
    uint64_t v40 = (char *)a1;
    static Logger.Application.getter();
    swift_bridgeObjectRetain_n();
    id v22 = v21;
    id v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      char v39 = v18;
      uint64_t v26 = v25;
      v37[0] = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = v38;
      *(_DWORD *)uint64_t v26 = 136315650;
      uint64_t v44 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005E0110, &v45);
      uint64_t v41 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2112;
      uint64_t v44 = (uint64_t)v22;
      id v27 = v22;
      v37[1] = v4;
      id v28 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)v37[0] = v21;

      *(_WORD *)(v26 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_10009B0E4((uint64_t)v40, a2, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Found tag: %@ using ID: %s", (uint8_t *)v26, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v39(v41, v43);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v18(v10, v43);
    }
    id v34 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithTaggedItemsSourceRepresentedTag:v22];
    uint64_t v35 = *(void **)(v42 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v35)
    {
      id v36 = v35;
      [v36 switchToLocation:v34];
    }
  }
  else
  {
    static Logger.Application.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v40 = v7;
      uint64_t v32 = v31;
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v44 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005E0110, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_10009B0E4(a1, a2, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s: Error! Can not find tag by ID: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v33 = (uint64_t)v40;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v33 = (uint64_t)v7;
    }
    v18((char *)v33, v43);
  }
}

void sub_10025AC84(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    id v23 = v2;
    uint64_t v12 = v11;
    NSString v20 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v24 = sub_10009B0E4(0xD000000000000013, 0x80000001005E00F0, aBlock);
    uint64_t v22 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v24 = (uint64_t)v8;
    id v13 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v20 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: location: %@.", (uint8_t *)v12, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v23;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v14 = [self defaultManager];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v8;
  *(void *)(v15 + 24) = v2;
  aBlock[4] = (uint64_t)sub_10026A35C;
  aBlock[5] = v15;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001B6B50;
  void aBlock[3] = (uint64_t)&unk_10069BD10;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v8;
  id v18 = v2;
  swift_release();
  [v14 fetchURLForItem:v17 completionHandler:v16];
  _Block_release(v16);
}

uint64_t sub_10025AFEC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  char v39 = a4;
  uint64_t v40 = a2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v38 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  os_log_type_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v17 = (char *)&v37 - v16;
  sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    char v39 = (void *)v6;
    sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    static Logger.Application.getter();
    id v18 = a3;
    swift_errorRetain();
    id v19 = v18;
    swift_errorRetain();
    NSString v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = v38;
    if (v22)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      aBlock[0] = v37;
      *(_DWORD *)uint64_t v24 = 136315650;
      uint64_t v43 = sub_10009B0E4(0xD000000000000013, 0x80000001005E00F0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v24 + 12) = 2112;
      uint64_t v43 = (uint64_t)v19;
      id v26 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v25 = v19;

      *(_WORD *)(v24 + 22) = 2080;
      uint64_t v43 = v40;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076E0);
      uint64_t v27 = String.init<A>(describing:)();
      uint64_t v43 = sub_10009B0E4(v27, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: got nil URL for item: %@. Error: %s", (uint8_t *)v24, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    return (*(uint64_t (**)(char *, void *))(v23 + 8))(v41, v39);
  }
  else
  {
    uint64_t v41 = *(char **)(v12 + 32);
    ((void (*)(char *, char *, uint64_t))v41)(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    unint64_t v29 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v30 = (v13 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v39;
    *(void *)(v31 + 16) = v39;
    ((void (*)(unint64_t, char *, uint64_t))v41)(v31 + v29, v15, v11);
    *(void *)(v31 + v30) = a3;
    aBlock[4] = (uint64_t)sub_10026A368;
    aBlock[5] = v31;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    void aBlock[3] = (uint64_t)&unk_10069BD60;
    uint64_t v33 = _Block_copy(aBlock);
    id v34 = a3;
    id v35 = v32;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v33);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

void sub_10025B578(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v3)
  {
    id v5 = v3;
    URL._bridgeToObjectiveC()(v6);
    uint64_t v8 = v7;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a3;
    v12[4] = sub_10026A3B8;
    void v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_1001B6B50;
    v12[3] = &unk_10069BDB0;
    os_log_type_t v10 = _Block_copy(v12);
    id v11 = a3;
    swift_release();
    [v5 revealDocumentAtURL:v8 importIfNeeded:0 openDocument:0 revealContents:1 updateLastUsedDate:1 completion:v10];
    _Block_release(v10);
  }
}

uint64_t sub_10025B698(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    static Logger.Application.getter();
    swift_errorRetain();
    id v10 = a3;
    swift_errorRetain();
    id v11 = v10;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      NSString v20 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v25 = v23;
      *(_DWORD *)uint64_t v14 = 136315650;
      os_log_t v21 = v12;
      uint64_t v24 = sub_10009B0E4(0xD000000000000013, 0x80000001005E00F0, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2112;
      uint64_t v24 = (uint64_t)v11;
      id v15 = v11;
      uint64_t v22 = v5;
      id v16 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *NSString v20 = v11;

      *(_WORD *)(v14 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v17 = Error.localizedDescription.getter();
      uint64_t v24 = sub_10009B0E4(v17, v18, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v19 = v21;
      _os_log_impl((void *)&_mh_execute_header, v21, v13, "%s: Failed to reveal folder for item: %@. Error: %s", (uint8_t *)v14, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v22);
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

void sub_10025B9D0(void *a1, uint64_t a2, unint64_t a3)
{
  id v6 = [a1 sourceIdentifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_15:

    uint64_t v23 = (void **)&DOCIntentLocationTypeRecents;
LABEL_16:
    uint64_t v24 = *v23;
    sub_100259E98(v24, 0, 0xE000000000000000);
    return;
  }
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_20:

    uint64_t v23 = (void **)&DOCIntentLocationTypeShared;
    goto LABEL_16;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_22:
    if (a3)
    {
      sub_10025A550(a2, a3);
    }
    return;
  }

  sub_100259BE0(a1);
}

uint64_t sub_10025BC2C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v93 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v90 = *(void *)(v5 - 8);
  uint64_t v91 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v85 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v81 - v8;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v81 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v88 = (char *)v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v84 = (char *)v81 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v94 = (char *)v81 - v23;
  __chkstk_darwin(v22);
  uint64_t v24 = *(void (**)(void))(v17 + 16);
  uint64_t v92 = (char *)v81 - v25;
  id v83 = (void *)(v17 + 16);
  uint64_t v82 = v24;
  v24();
  id v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v89 = a2;
  v26(a2, 1, 1, v16);
  id v86 = self;
  id v27 = [v86 defaultManager];
  uint64_t v87 = a3;
  URL._bridgeToObjectiveC()(v28);
  unint64_t v30 = v29;
  id v96 = 0;
  id v31 = [v27 URLForDirectory:99 inDomain:1 appropriateForURL:v29 create:1 error:&v96];

  id v32 = v96;
  if (!v31)
  {
    uint64_t v89 = v17;
    id v55 = v96;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      id v96 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136315394;
      uint64_t v95 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0510, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v58 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v59 = Error.localizedDescription.getter();
      uint64_t v95 = sub_10009B0E4(v59, v60, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s: could create temporary directory. Error: %s", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v9, v91);
    uint64_t v53 = v92;
    uint64_t v54 = v93;
    uint64_t v36 = v16;
    uint64_t v37 = v89;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v54, v53, v36);
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v33 = v32;

  uint64_t v34 = v89;
  sub_1000CBBA4(v89, &qword_1007076B0);
  v26((uint64_t)v15, 0, 1, v16);
  sub_1000CBE0C((uint64_t)v15, v34, &qword_1007076B0);
  sub_1000CBC00(v34, (uint64_t)v13, &qword_1007076B0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16);
  if (result != 1)
  {
    uint64_t v36 = v16;
    uint64_t v37 = v17;
    uint64_t v38 = v87;
    URL.lastPathComponent.getter();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v39 = v17 + 8;
    uint64_t v41 = v13;
    uint64_t v42 = v40;
    v40(v41, v36);
    id v43 = [v86 defaultManager];
    URL._bridgeToObjectiveC()(v44);
    id v46 = v45;
    URL._bridgeToObjectiveC()(v47);
    uint64_t v49 = v48;
    id v96 = 0;
    unsigned int v50 = [v43 moveItemAtURL:v46 toURL:v48 error:&v96];

    id v51 = v88;
    if (v50)
    {
      id v52 = v96;
      uint64_t v53 = v92;
      v42(v92, v36);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v53, v94, v36);
      uint64_t v54 = v93;
    }
    else
    {
      v81[1] = v39;
      id v86 = v42;
      id v61 = v96;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v62 = v85;
      static Logger.Application.getter();
      uint64_t v63 = v84;
      id v64 = v82;
      ((void (*)(char *, NSObject *, uint64_t))v82)(v84, v38, v36);
      uint64_t v65 = v94;
      ((void (*)(char *, char *, uint64_t))v64)(v51, v94, v36);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v66 = Logger.logObject.getter();
      os_log_type_t v67 = static os_log_type_t.error.getter();
      int v68 = v67;
      uint64_t v87 = v66;
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v69 = swift_slowAlloc();
        uint64_t v89 = v37;
        uint64_t v70 = v69;
        id v83 = (void *)swift_slowAlloc();
        id v96 = v83;
        *(_DWORD *)uint64_t v70 = 136315906;
        uint64_t v95 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0510, (uint64_t *)&v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v70 + 12) = 2080;
        sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
        LODWORD(v82) = v68;
        uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v95 = sub_10009B0E4(v71, v72, (uint64_t *)&v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v73 = v63;
        uint64_t v74 = (void (*)(char *, uint64_t))v86;
        ((void (*)(char *, uint64_t))v86)(v73, v36);
        *(_WORD *)(v70 + 22) = 2080;
        uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v95 = sub_10009B0E4(v75, v76, (uint64_t *)&v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v74(v51, v36);
        *(_WORD *)(v70 + 32) = 2080;
        swift_getErrorValue();
        uint64_t v77 = Error.localizedDescription.getter();
        uint64_t v95 = sub_10009B0E4(v77, v78, (uint64_t *)&v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        uint64_t v79 = v87;
        _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v82, "%s: could not move file in at: %s to: %s. Error: %s", (uint8_t *)v70, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v37 = v89;
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v90 + 8))(v85, v91);
        v74(v94, v36);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        unint64_t v80 = (void (*)(char *, uint64_t))v86;
        ((void (*)(char *, uint64_t))v86)(v51, v36);
        v80(v63, v36);
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v90 + 8))(v62, v91);
        v80(v65, v36);
      }
      uint64_t v53 = v92;
      uint64_t v54 = v93;
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v54, v53, v36);
  }
  __break(1u);
  return result;
}

id sub_10025C6E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BrowserSceneDelegate();
  return [super dealloc];
}

uint64_t initializeWithCopy for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  long long v8 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v8;
  return a1;
}

__n128 initializeWithTake for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DOCWindowSceneSpecification(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCWindowSceneSpecification(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCWindowSceneSpecification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCWindowSceneSpecification()
{
  return &type metadata for DOCWindowSceneSpecification;
}

__n128 initializeWithCopy for DOCWindowSceneSpecification.Restrictions(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCWindowSceneSpecification.Restrictions(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCWindowSceneSpecification.Restrictions(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCWindowSceneSpecification.Restrictions()
{
  return &type metadata for DOCWindowSceneSpecification.Restrictions;
}

void *sub_10025CA00()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  long long v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v5 - 8);
  long long v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v8 = *(void **)(v0 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = (uint64_t)v8 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL;
  swift_beginAccess();
  sub_1000CBC00(v9, (uint64_t)v7, &qword_1007076B0);
  if (!(*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
    id v21 = v8;
    sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
    uint64_t v13 = (void *)URL.absoluteString.getter();

    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
    return v13;
  }
  id v10 = v8;
  sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
  id v11 = [v10 effectiveFullBrowser];
  uint64_t v12 = (char *)[v11 effectiveBrowserViewController];
  uint64_t v13 = v12;
  if (!v12)
  {

    return v13;
  }
  uint64_t v14 = (void **)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (!v15)
  {

    return 0;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  if (!swift_dynamicCastClass())
  {

    return 0;
  }
  id v16 = v15;

  DOCItemCollectionViewController.getCurrentLocation()();
  uint64_t v18 = v17;

  if (!v18
    || (id v19 = [v18 fileProviderItem], v18, !v19))
  {

    return 0;
  }
  id v20 = [v19 itemID];
  uint64_t v13 = (void *)FPItemID.identifierString.getter();

  return v13;
}

void sub_10025CD34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v152[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v167 = &v152[-v7];
  __chkstk_darwin(v6);
  id v168 = &v152[-v8];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v166 = &v152[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v14 = &v152[-v13];
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  id v19 = &v152[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = &v152[-v23];
  __chkstk_darwin(v22);
  unint64_t v28 = &v152[-v27];
  unint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (!v29) {
    return;
  }
  uint64_t v162 = v25;
  id v163 = v26;
  uint64_t v164 = (uint64_t)v14;
  uint64_t v169 = v29;
  id v30 = [v169 viewIfLoaded];
  if (v30
    && (id v31 = v30,
        uint64_t v165 = v16,
        id v32 = [v30 window],
        v31,
        v32)
    && (id v33 = [v32 windowScene], v32, v33))
  {
    uint64_t v160 = v9;
    static Logger.Application.getter();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    id v158 = v33;
    uint64_t v159 = v10;
    uint64_t v157 = v5;
    uint64_t v161 = v15;
    if (v36)
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v171 = sub_10009B0E4(0xD000000000000021, 0x80000001005DFF90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[Interaction] %s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v15 = v161;
      swift_slowDealloc();
    }

    uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v165 + 8);
    v38(v28, v15);
    id v39 = [v169 presentedViewController];
    if (!v39) {
      goto LABEL_12;
    }
    uint64_t v40 = v39;
    uint64_t v41 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
    uint64_t v42 = *(void **)&v169[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    if (!v42
      || (sub_10009E6C4(0, (unint64_t *)&qword_100707710),
          id v43 = v42,
          id v44 = v40,
          char v45 = static NSObject.== infix(_:_:)(),
          v44,
          v43,
          (v45 & 1) == 0)
      || (objc_msgSend(v44, "doc_hasDisappearedOrIsDisappearing") & 1) != 0)
    {

      uint64_t v15 = v161;
LABEL_12:
      static Logger.Application.getter();
      id v46 = v1;
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 136315138;
        uint64_t v167 = (v49 + 4);
        unsigned int v50 = v46;
        id v168 = v46;
        id v51 = v50;
        id v52 = [v50 description];
        uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v156 = v38;
        uint64_t v54 = v53;
        unint64_t v56 = v55;

        uint64_t v171 = sub_10009B0E4(v54, v56, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v46 = v168;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "[Interaction] update scene activation contditions on: %s for no presented view controller", v49, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v156(v19, v161);
      }
      else
      {

        v38(v19, v15);
      }
      uint64_t v58 = (uint64_t)v157;
      uint64_t v59 = v158;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56))(v157, 1, 1, v160);
      sub_10025E090(v58, v46, (uint64_t)v169, v59);

      goto LABEL_19;
    }
    static Logger.Application.getter();
    id v60 = v44;
    id v61 = v1;
    id v62 = v60;
    uint64_t v63 = v61;
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    int v66 = v65;
    BOOL v67 = os_log_type_enabled(v64, v65);
    unint64_t v154 = v63;
    if (v67)
    {
      uint64_t v68 = swift_slowAlloc();
      int v153 = v66;
      uint64_t v69 = v68;
      id v156 = (void (*)(unsigned char *, uint64_t))swift_slowAlloc();
      aBlock[0] = (uint64_t)v156;
      *(_DWORD *)uint64_t v69 = 136315906;
      uint64_t v171 = sub_10009B0E4(0xD000000000000021, 0x80000001005DFF90, aBlock);
      id v155 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v69 + 12) = 2080;
      uint64_t v70 = v63;
      id v71 = [v70 description];
      uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v74 = v73;

      uint64_t v171 = sub_10009B0E4(v72, v74, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 22) = 2080;
      id v75 = v155;
      id v76 = [v75 description];
      uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v79 = v78;

      uint64_t v171 = sub_10009B0E4(v77, v79, aBlock);
      id v62 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 32) = 1024;
      unsigned int v80 = [v75 isBeingDismissed];

      LODWORD(v171) = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v153, "[Interaction] 1. %s on: %s for QLVC: %s isBeingDismissed: %{BOOL}d", (uint8_t *)v69, 0x26u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v156 = *(void (**)(unsigned char *, uint64_t))(v165 + 8);
      v156(v24, v161);
    }
    else
    {

      id v156 = v38;
      v38(v24, v161);
    }
    uint64_t v82 = v159;
    uint64_t v81 = v160;
    uint64_t v83 = v164;
    uint64_t v84 = *(void **)&v169[v41];
    if (!v84 || (id v85 = [v84 currentPreviewItem]) == 0)
    {
      uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
      uint64_t v90 = v168;
      v89(v168, 1, 1, v81);
      goto LABEL_31;
    }
    id v86 = [v85 previewItemURL];
    swift_unknownObjectRelease();
    if (v86)
    {
      uint64_t v87 = v167;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v88 = (uint64_t)v87;
      uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
      v89((char *)v87, 0, 1, v81);
    }
    else
    {
      uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
      uint64_t v88 = (uint64_t)v167;
      v89((char *)v167, 1, 1, v81);
    }
    uint64_t v90 = v168;
    sub_1000CBE0C(v88, (uint64_t)v168, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v90, 1, v81) == 1)
    {
LABEL_31:
      sub_1000CBBA4((uint64_t)v90, &qword_1007076B0);
      uint64_t v91 = *(void **)&v169[v41];
      uint64_t v92 = v158;
      if (v91 && [v91 currentPreviewItem])
      {
        id v155 = v62;
        self;
        uint64_t v93 = (void *)swift_dynamicCastObjCClass();
        if (v93)
        {
          uint64_t v94 = v93;
          uint64_t v95 = (char *)[v93 fpItem];
          if (v95)
          {
            id v96 = v95;
            static Logger.Application.getter();
            uint64_t v97 = v154;
            uint64_t v98 = Logger.logObject.getter();
            os_log_type_t v99 = static os_log_type_t.default.getter();
            LODWORD(v167) = v99;
            BOOL v100 = os_log_type_enabled(v98, v99);
            id v168 = v96;
            if (v100)
            {
              uint64_t v101 = swift_slowAlloc();
              uint64_t v164 = swift_slowAlloc();
              aBlock[0] = v164;
              *(_DWORD *)uint64_t v101 = 136315394;
              uint64_t v171 = sub_10009B0E4(0xD000000000000021, 0x80000001005DFF90, aBlock);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v101 + 12) = 2080;
              uint64_t v162 = v101 + 14;
              uint64_t v102 = v97;
              id v103 = [v102 description];
              uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              os_log_type_t v166 = v97;
              unint64_t v106 = v105;

              uint64_t v81 = v160;
              uint64_t v171 = sub_10009B0E4(v104, v106, aBlock);
              uint64_t v92 = v158;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              uint64_t v97 = v166;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v98, (os_log_type_t)v167, "[Interaction] 2.1 %s on: %s setting predicate to nil before doing async fetch URL", (uint8_t *)v101, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            v156(v163, v161);
            uint64_t v139 = (uint64_t)v157;
            v89(v157, 1, 1, v81);
            sub_10025E090(v139, v97, (uint64_t)v169, v92);
            sub_1000CBBA4(v139, &qword_1007076B0);
            id v140 = [self defaultManager];
            uint64_t v141 = (void *)swift_allocObject();
            os_log_type_t v142 = v169;
            v141[2] = v94;
            v141[3] = v142;
            id v143 = v155;
            v141[4] = v97;
            v141[5] = v143;
            v141[6] = v92;
            aBlock[4] = (uint64_t)sub_1002656B8;
            aBlock[5] = (uint64_t)v141;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1001B6B50;
            void aBlock[3] = (uint64_t)&unk_10069B950;
            id v144 = _Block_copy(aBlock);
            id v145 = v169;
            id v146 = v143;
            unint64_t v147 = v97;
            id v148 = v146;
            int v149 = v147;
            swift_unknownObjectRetain();
            id v150 = v92;
            swift_release();
            int v151 = v168;
            [v140 fetchURLForItem:v168 completionHandler:v144];

            _Block_release(v144);
            swift_unknownObjectRelease();

            return;
          }
        }
        swift_unknownObjectRelease();
        id v62 = v155;
      }
      uint64_t v58 = (uint64_t)v157;
      v89(v157, 1, 1, v81);
      sub_10025E090(v58, v154, (uint64_t)v169, v92);

LABEL_19:
      sub_1000CBBA4(v58, &qword_1007076B0);
      return;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v83, v90, v81);
    uint64_t v107 = v162;
    static Logger.Application.getter();
    id v108 = v166;
    id v163 = *(void (**)(NSObject *, uint64_t, uint64_t))(v82 + 16);
    v163(v166, v83, v81);
    id v109 = v62;
    long long v110 = v154;
    uint64_t v111 = (char *)v109;
    uint64_t v112 = v110;
    unint64_t v113 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.default.getter();
    LODWORD(v155) = v114;
    BOOL v115 = os_log_type_enabled(v113, v114);
    uint64_t v167 = v112;
    id v168 = v111;
    if (v115)
    {
      id v116 = v112;
      uint64_t v117 = swift_slowAlloc();
      id v156 = (void (*)(unsigned char *, uint64_t))swift_slowAlloc();
      aBlock[0] = (uint64_t)v156;
      *(_DWORD *)uint64_t v117 = 136315906;
      unint64_t v154 = v113;
      uint64_t v171 = sub_10009B0E4(0xD000000000000021, 0x80000001005DFF90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v117 + 12) = 2080;
      unint64_t v118 = v116;
      id v119 = [v118 description];
      uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v121 = v111;
      unint64_t v123 = v122;

      uint64_t v171 = sub_10009B0E4(v120, v123, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v117 + 22) = 2080;
      id v124 = v121;
      id v125 = [v124 description];
      uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v128 = v127;

      uint64_t v129 = v126;
      uint64_t v83 = v164;
      uint64_t v171 = sub_10009B0E4(v129, v128, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v81 = v160;
      swift_bridgeObjectRelease();
      *(_WORD *)(v117 + 32) = 2080;
      sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      unint64_t v130 = v166;
      uint64_t v131 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v171 = sub_10009B0E4(v131, v132, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v133 = v159;
      uint64_t v134 = *(void (**)(NSObject *, uint64_t))(v159 + 8);
      v134(v130, v81);
      unint64_t v135 = v154;
      _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v155, "[Interaction] 2. %s on: %s for QLVC: %s with URL: %s", (uint8_t *)v117, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v107, v161);
      uint64_t v136 = (uint64_t)v157;
      uint64_t v137 = v158;
      uint64_t v138 = v133;
    }
    else
    {

      uint64_t v134 = *(void (**)(NSObject *, uint64_t))(v82 + 8);
      v134(v108, v81);

      v156((unsigned char *)v107, v161);
      uint64_t v136 = (uint64_t)v157;
      uint64_t v137 = v158;
      uint64_t v138 = v82;
    }
    v163(v136, v83, v81);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v138 + 56))(v136, 0, 1, v81);
    sub_10025E090(v136, v167, (uint64_t)v169, v137);

    sub_1000CBBA4(v136, &qword_1007076B0);
    v134(v83, v81);
  }
  else
  {
    id v57 = v169;
  }
}

void sub_10025E090(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v57 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = __chkstk_darwin(v56);
  uint64_t v60 = (uint64_t)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v49 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v49 - v16;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v58 = *(void *)(v18 - 8);
  uint64_t v59 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  uint64_t v61 = a1;
  sub_1000CBC00(a1, (uint64_t)v17, &qword_1007076B0);
  id v21 = a2;
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v53 = v9;
    uint64_t v26 = v25;
    uint64_t v52 = swift_slowAlloc();
    v63[0] = v52;
    *(_DWORD *)uint64_t v26 = 136315650;
    unint64_t v55 = a4;
    uint64_t v62 = sub_10009B0E4(0xD000000000000019, 0x80000001005DFFC0, v63);
    int v51 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2080;
    v49[1] = v26 + 14;
    id v27 = v21;
    id v28 = [v27 description];
    os_log_t v50 = v22;
    uint64_t v29 = (uint64_t)v15;
    id v30 = v28;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v8;
    uint64_t v32 = v31;
    uint64_t v33 = a3;
    unint64_t v35 = v34;

    uint64_t v15 = (char *)v29;
    uint64_t v62 = sub_10009B0E4(v32, v35, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a3 = v33;
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    sub_1000CBC00((uint64_t)v17, v29, &qword_1007076B0);
    uint64_t v36 = String.init<A>(describing:)();
    uint64_t v62 = sub_10009B0E4(v36, v37, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = v54;
    swift_bridgeObjectRelease();
    a4 = v55;
    sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
    os_log_t v38 = v50;
    _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "[Interaction] %s on: %s updatePredicateWith: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v53;
    swift_slowDealloc();
  }
  else
  {

    sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
  }
  (*(void (**)(char *, uint64_t))(v58 + 8))(v20, v59);
  uint64_t v39 = v60;
  sub_1000CBC00(v61, v60, &qword_1007076B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v39, 1, v8) == 1)
  {
    sub_1000CBBA4(v39, &qword_1007076B0);
    id v40 = [self predicateWithValue:0];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v15, 1, 1, v8);
    uint64_t v41 = a3 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL;
    swift_beginAccess();
    sub_10014B834((uint64_t)v15, v41);
    swift_endAccess();
  }
  else
  {
    uint64_t v42 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v57, v39, v8);
    sub_10009E6C4(0, &qword_100716480);
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1005A0030;
    uint64_t v44 = URL.absoluteString.getter();
    uint64_t v46 = v45;
    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = sub_100073F48();
    *(void *)(v43 + 32) = v44;
    *(void *)(v43 + 40) = v46;
    id v40 = (id)NSPredicate.init(format:_:)();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v42, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v15, 0, 1, v8);
    uint64_t v47 = a3 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL;
    swift_beginAccess();
    sub_10014B834((uint64_t)v15, v47);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v42, v8);
  }
  id v48 = [a4 activationConditions];
  [v48 setPrefersToActivateForTargetContentIdentifierPredicate:v40];
}

uint64_t sub_10025E72C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  unint64_t v35 = a6;
  uint64_t v36 = a7;
  unint64_t v34 = a5;
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v37 = static OS_dispatch_queue.main.getter();
  sub_1000CBC00(a1, (uint64_t)v18, &qword_1007076B0);
  unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[2] = a3;
  v20[3] = a4;
  id v21 = a4;
  uint64_t v22 = v34;
  os_log_type_t v23 = v35;
  v20[4] = v34;
  v20[5] = v23;
  int v24 = v36;
  void v20[6] = v36;
  sub_1000CBE0C((uint64_t)v18, (uint64_t)v20 + v19, &qword_1007076B0);
  aBlock[4] = sub_100265810;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_10069B9A0;
  uint64_t v25 = _Block_copy(aBlock);
  id v26 = a3;
  id v27 = v21;
  id v28 = v22;
  id v29 = v23;
  id v30 = v24;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100265880((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v31 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v32 = (void *)v37;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v40);
}

void sub_10025EACC(void *a1, char *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v67 = a6;
  uint64_t v62 = a5;
  uint64_t v64 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v10 = __chkstk_darwin(v64);
  uint64_t v63 = &v58[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v13 = &v58[-v12];
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v66 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = &v58[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  unint64_t v19 = &v58[-v18];
  uint64_t v20 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
  uint64_t v68 = a2;
  id v21 = *(void **)&a2[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  if (!v21 || ![v21 currentPreviewItem]) {
    goto LABEL_8;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    swift_unknownObjectRelease();
LABEL_8:
    static Logger.Application.getter();
    sub_1000CBC00(v67, (uint64_t)v13, &qword_1007076B0);
    uint64_t v49 = v68;
    os_log_t v50 = v68;
    int v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315650;
      uint64_t v65 = v14;
      id v69 = (id)sub_10009B0E4(0xD000000000000021, 0x80000001005DFF90, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v53 + 12) = 2080;
      id v69 = [*(id *)&v49[v20] currentPreviewItem];
      sub_1000CBE70(&qword_10070BD60);
      uint64_t v54 = String.init<A>(describing:)();
      id v69 = (id)sub_10009B0E4(v54, v55, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 22) = 2080;
      sub_1000CBC00((uint64_t)v13, (uint64_t)v63, &qword_1007076B0);
      uint64_t v56 = String.init<A>(describing:)();
      id v69 = (id)sub_10009B0E4(v56, v57, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "[Interaction] 2.3 %s previewItem: %s not longer equal to currentPreviewItem: %s. Skipping update.", (uint8_t *)v53, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v17, v65);
    }
    else
    {

      sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v17, v14);
    }
    return;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_10070BD68);
  uint64_t v65 = v14;
  id v22 = a1;
  uint64_t v14 = v65;
  char v23 = static NSObject.== infix(_:_:)();

  swift_unknownObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_8;
  }
  static Logger.Application.getter();
  id v24 = v22;
  id v25 = a3;
  id v26 = a4;
  id v27 = v24;
  id v28 = v25;
  id v29 = v26;
  id v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  int v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v61 = (void *)swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v70 = v64;
    *(_DWORD *)uint64_t v33 = 136315906;
    os_log_t v60 = v30;
    id v69 = (id)sub_10009B0E4(0xD000000000000021, 0x80000001005DFF90, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v33 + 12) = 2080;
    id v34 = v28;
    id v35 = [v34 description];
    uint64_t v63 = v19;
    id v36 = v35;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v59 = v32;
    id v38 = v28;
    uint64_t v39 = v37;
    unint64_t v41 = v40;

    id v69 = (id)sub_10009B0E4(v39, v41, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2080;
    id v42 = v29;
    id v43 = [v42 description];
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v46 = v45;

    id v69 = (id)sub_10009B0E4(v44, v46, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v28 = v38;
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 32) = 2112;
    id v69 = v27;
    id v47 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v61 = v27;

    os_log_t v48 = v60;
    _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v59, "[Interaction] 2.2 %s on: %s for QLVC: %s with previewItem: %@", (uint8_t *)v33, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v63, v65);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v19, v65);
  }
  sub_10025E090(v67, v28, (uint64_t)v68, v62);
}

uint64_t sub_10025F250()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window];
  if (v7)
  {
    id v8 = [v7 windowScene];
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = [v8 session];
      id v11 = sub_100264BF0();
      [v10 setStateRestorationActivity:v11];
    }
  }
  static Logger.Application.getter();
  uint64_t v12 = v1;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v24 = v2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v25 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DFF30, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v16 = *(void **)&v1[v6];
    if (v16)
    {
      id v17 = [v16 windowScene];
      id v18 = v17;
      if (v17)
      {
        id v19 = [v17 session];

        id v18 = [v19 stateRestorationActivity];
      }
    }
    else
    {
      id v18 = 0;
    }
    uint64_t v25 = (uint64_t)v18;
    sub_1000CBE70((uint64_t *)&unk_10070BD30);
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v25 = sub_10009B0E4(v21, v22, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Interaction] %s to: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void *sub_10025F58C()
{
  return sub_10025CA00();
}

void sub_10025F5B0()
{
}

uint64_t sub_10025F5D4()
{
  return sub_10025F250();
}

uint64_t sub_10025F5F8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v49 = a4;
  os_log_t v50 = a3;
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)&long long v46 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v51 = (unint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v48 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v48);
  id v47 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = self;
  id v53 = a1;
  sub_1000CBE70(&qword_10070B670);
  uint64_t v14 = Optional._bridgeToObjectiveC()();
  id v53 = 0;
  id v15 = [v13 archivedDataWithRootObject:v14 requiringSecureCoding:1 error:&v53];
  swift_unknownObjectRelease();
  id v16 = v53;
  if (v15)
  {
    uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v51 = v18;

    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DOCUserActivityIdentifier.folderDrag(_:), v9);
    DOCUserActivityIdentifier.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v19 = objc_allocWithZone((Class)NSUserActivity);
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithActivityType:v20];

    sub_1000CBE70(&qword_100707EF0);
    uint64_t inited = swift_initStackObject();
    long long v46 = xmmword_1005A0030;
    *(_OWORD *)(inited + 16) = xmmword_1005A0030;
    *(void *)(inited + 32) = DOCUserActivityFPItemKey.getter();
    *(void *)(inited + 40) = v23;
    sub_10049D5B0(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 setRequiredUserInfoKeys:isa];

    sub_1000CBE70(&qword_10070BD40);
    uint64_t v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = v46;
    id v53 = (id)DOCUserActivityFPItemKey.getter();
    uint64_t v54 = v26;
    AnyHashable.init<A>(_:)();
    *(void *)(v25 + 96) = &type metadata for Data;
    uint64_t v27 = v17;
    unint64_t v28 = v51;
    *(void *)(v25 + 72) = v17;
    *(void *)(v25 + 80) = v28;
    sub_100168CBC(v17, v28);
    sub_100494384(v25);
    Class v29 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 addUserInfoEntriesFromDictionary:v29];

    id v30 = v47;
    uint64_t v31 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v47, v49, v48);
    unint64_t v32 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v33 = swift_allocObject();
    id v34 = v50;
    *(void *)(v33 + 16) = v21;
    *(void *)(v33 + 24) = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33 + v32, v30, v31);
    unint64_t v57 = sub_10026A7E0;
    uint64_t v58 = v33;
    id v53 = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    unint64_t v55 = sub_1000666D8;
    uint64_t v56 = &unk_10069C058;
    id v35 = _Block_copy(&v53);
    id v36 = v21;
    id v37 = v34;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v35);

    return sub_100021020(v27, v51);
  }
  else
  {
    uint64_t v39 = v16;
    uint64_t v40 = v46;
    os_log_t v50 = (void *)v5;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      id v53 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v52 = sub_10009B0E4(0xD000000000000013, 0x80000001005E02D0, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v44 = Error.localizedDescription.getter();
      uint64_t v52 = sub_10009B0E4(v44, v45, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s: Failed to encode FPItem in to data. Error: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return (*(uint64_t (**)(unint64_t, void *))(v40 + 8))(v51, v50);
  }
}

void sub_10025FD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [self sharedApplication];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10026A900;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10044D134;
  void aBlock[3] = &unk_10069C0A8;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [v9 requestSceneSessionActivation:0 userActivity:a1 options:a2 errorHandler:v12];
  _Block_release(v12);
}

uint64_t sub_10025FF08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Logger.Application.getter();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = v7;
    uint64_t v15 = v14;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v26 = sub_10009B0E4(0xD000000000000013, 0x80000001005E02D0, &v27);
    int v22 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v23 = v8;
    sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v26 = sub_10009B0E4(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    *(_WORD *)(v15 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v18 = Error.localizedDescription.getter();
    uint64_t v26 = sub_10009B0E4(v18, v19, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v22, "%s: Failed to create new scene for URL: %s Error: %s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v23 + 8))(v10, v25);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1002602E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = [self sharedApplication];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  v10[4] = sub_10026A9C4;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10044D134;
  v10[3] = &unk_10069C148;
  uint64_t v8 = _Block_copy(v10);
  id v9 = a3;
  swift_release();
  [v6 requestSceneSessionActivation:0 userActivity:a1 options:a2 errorHandler:v8];
  _Block_release(v8);
}

uint64_t sub_1002603FC(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v7 = a2;
  swift_errorRetain();
  id v8 = v7;
  swift_errorRetain();
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v3;
    uint64_t v12 = v11;
    int v13 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v23 = sub_10009B0E4(0xD00000000000001BLL, 0x80000001005E02F0, &v24);
    os_log_t v19 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v20 = v4;
    uint64_t v23 = (uint64_t)v8;
    id v14 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v13 = v8;

    *(_WORD *)(v12 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v15 = Error.localizedDescription.getter();
    uint64_t v23 = sub_10009B0E4(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v17 = v19;
    _os_log_impl((void *)&_mh_execute_header, v19, v10, "%s: Failed to create new scene for Location: %@ Error: %s", (uint8_t *)v12, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v22);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_100260724(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_t v17 = (void *)Strong;
    if (a1)
    {
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = a1;
      *(unsigned char *)(v18 + 32) = a4 & 1;
      aBlock[4] = (uint64_t)sub_100268D54;
      aBlock[5] = v18;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000666D8;
      void aBlock[3] = (uint64_t)&unk_10069BAB8;
      os_log_t v19 = _Block_copy(aBlock);
      id v20 = a1;
      id v21 = v17;
      swift_release();
      DOCRunInMainThread();

      _Block_release(v19);
    }
    else
    {
      static Logger.Application.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      int v24 = v23;
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        aBlock[0] = v34;
        *(_DWORD *)uint64_t v25 = 136315650;
        os_log_t v33 = v22;
        uint64_t v37 = sub_10009B0E4(0xD000000000000027, 0x80000001005E0010, aBlock);
        int v32 = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v25 + 12) = 2080;
        v31[1] = v25 + 14;
        sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v37 = sub_10009B0E4(v26, v27, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        *(_WORD *)(v25 + 22) = 2080;
        uint64_t v37 = a2;
        swift_errorRetain();
        sub_1000CBE70((uint64_t *)&unk_1007076E0);
        uint64_t v28 = String.init<A>(describing:)();
        uint64_t v37 = sub_10009B0E4(v28, v29, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v30 = v33;
        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v32, "%s item was nil for URL: %s error: %s", (uint8_t *)v25, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        swift_errorRelease();
        swift_errorRelease();
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v13);
    }
  }
}

void sub_100260BF4(char *a1, void *a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)&a1[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  if (!v10)
  {
    static Logger.Application.getter();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      os_log_t v30 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)os_log_t v30 = 136315138;
      uint64_t aBlock[6] = sub_10009B0E4(0xD000000000000027, 0x80000001005E0010, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s: Unable to continue activity since main view controller not set, of search query string not is nil", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return;
  }
  id v11 = v10;
  id v12 = [v11 effectiveFullBrowser];
  uint64_t v13 = (char *)[v12 effectiveBrowserViewController];
  if (!v13)
  {

    goto LABEL_22;
  }
  uint64_t v14 = v13;
  uint64_t v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  unint64_t v16 = *v15;
  if (!*v15 || (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v17 = swift_dynamicCastClass()) == 0))
  {

LABEL_22:
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
    *(void *)(inited + 32) = a2;
    aBlock[0] = inited;
    specialized Array._endMutation()();
    unint64_t v32 = aBlock[0];
    id v33 = a2;
    sub_100268D60(v32, a2, a3 & 1);
    swift_bridgeObjectRelease();
LABEL_23:

    return;
  }
  uint64_t v18 = (char *)v17;
  id v19 = v16;

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  char v21 = *(unsigned char *)(*(void *)&v18[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                 + 8);
  id v22 = [self quickLookEntireFolderInWindow];
  unsigned int v23 = [v22 isEnabled];

  if (!v23 || (v21 & 1) != 0)
  {
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v20;
    *(void *)(v34 + 24) = v18;
    *(void *)(v34 + 32) = a1;
    *(void *)(v34 + 40) = a2;
    *(unsigned char *)(v34 + 48) = a3 & 1;
    aBlock[4] = (uint64_t)sub_100269A94;
    aBlock[5] = v34;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100411BA4;
    void aBlock[3] = (uint64_t)&unk_10069BB30;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = a2;
    id v37 = v19;
    id v38 = a1;
    swift_retain();
    swift_release();
    [v18 getCellFor:v36 :v35];

    _Block_release(v35);
    swift_release();
    return;
  }
  id v45 = v19;
  int v24 = &v18[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  unint64_t v25 = *((void *)v24 + 1);
  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    if (v26) {
      goto LABEL_9;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v39 = _swiftEmptyArrayStorage;
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = a2;
    *(void *)(v40 + 24) = a1;
    *(void *)(v40 + 32) = v20;
    *(unsigned char *)(v40 + 40) = a3 & 1;
    id v41 = a2;
    os_log_type_t v42 = a1;
    swift_retain();
    sub_100269AFC((uint64_t)v39, (uint64_t)sub_100269AEC, v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();

    goto LABEL_23;
  }
  uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v26) {
    goto LABEL_27;
  }
LABEL_9:
  uint64_t v43 = v20;
  id v44 = v11;
  if (v26 >= 1)
  {
    for (uint64_t i = 0; i != v26; ++i)
    {
      if ([(id)swift_unknownObjectRetain() isFolder])
      {
        swift_unknownObjectRelease();
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = (void *)v46;
    uint64_t v20 = v43;
    id v11 = v44;
    goto LABEL_28;
  }
  __break(1u);
}

void sub_100261200(unint64_t a1, void *a2, void *a3, uint64_t a4, char a5)
{
  unint64_t v9 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 >= 1) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1005A04F0;
    *(void *)(v11 + 32) = a2;
    v17[0] = v11;
    specialized Array._endMutation()();
    unint64_t v9 = v17[0];
    id v12 = a2;
    goto LABEL_6;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
    goto LABEL_5;
  }
LABEL_3:
  swift_bridgeObjectRetain();
LABEL_6:
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = v9;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a4;
  *(unsigned char *)(v13 + 48) = a5 & 1;
  v17[4] = sub_10026A304;
  v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_1000666D8;
  v17[3] = &unk_10069BC70;
  uint64_t v14 = _Block_copy(v17);
  id v15 = a2;
  id v16 = a3;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v14);
}

void sub_10026138C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, int a5)
{
  swift_beginAccess();
  id v9 = *(id *)(a4 + 16);
  sub_100268D60(a2, a3, a5);
}

void sub_10026140C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  uint64_t v8 = (id *)(a2 + 16);
  if (a1)
  {
    id v9 = a1;
    id v10 = DOCItemCollectionViewController.targetPreview(for:)(v9);

    swift_beginAccess();
    id v11 = *v8;
    *uint64_t v8 = v10;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = a5;
  unint64_t v15 = inited;
  specialized Array._endMutation()();
  swift_beginAccess();
  id v13 = *v8;
  id v14 = a5;
  sub_100268D60(v15, a5, a6 & 1);
  swift_bridgeObjectRelease();
}

void sub_100261504(void *a1, NSObject *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    id v12 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
    static Logger.Application.getter();
    swift_unknownObjectRetain_n();
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v20[0] = v19;
      *(_DWORD *)uint64_t v15 = 136315394;
      uint64_t v21 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E0040, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2080;
      uint64_t v21 = a3;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v16 = String.init<A>(describing:)();
      uint64_t v21 = sub_10009B0E4(v16, v17, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s failed to fetch item from node: %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  dispatch_group_leave(a2);
}

uint64_t sub_1002617E4(uint64_t a1, void (*a2)(void), uint64_t a3, double a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void *)(a1 + 16);
  double Current = CFAbsoluteTimeGetCurrent();
  static Logger.Application.getter();
  swift_retain();
  os_log_type_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v21[0] = v8;
    v21[1] = a3;
    id v22 = a2;
    double v16 = Current - a4;
    uint64_t v17 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v24 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E0040, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2048;
    swift_beginAccess();
    if (*v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    double v23 = *(double *)&v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v17 + 22) = 2048;
    double v23 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s finished preparing: %ld items. Took: %f", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void))(v9 + 8))(v11, v21[0]);
    a2 = v22;
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess();
  uint64_t v19 = swift_bridgeObjectRetain();
  a2(v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100261AEC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a2;
  swift_errorRetain();
  id v9 = v8;
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  int v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    int v21 = v11;
    uint64_t v23 = v5;
    uint64_t v24 = v4;
    uint64_t v12 = swift_slowAlloc();
    id v13 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v25 = sub_10009B0E4(0xD00000000000003BLL, 0x80000001005E0070, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v25 = (uint64_t)v9;
    id v14 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v13 = v9;

    *(_WORD *)(v12 + 22) = 2080;
    if (a1)
    {
      swift_getErrorValue();
      uint64_t v15 = Error.localizedDescription.getter();
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
    }
    uint64_t v25 = v15;
    uint64_t v26 = v16;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v25 = sub_10009B0E4(v18, v19, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v21, "%s: Failed to create new scene for item: %@ Error: %s", (uint8_t *)v12, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id sub_100261E3C()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v11._countAndFlagsBits = 0xD00000000000004FLL;
    v11._object = (void *)0x80000001005E07B0;
    v2._object = (void *)0x80000001005E0780;
    v2._countAndFlagsBits = 0xD000000000000023;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0x636F44206E616353;
    v4._object = (void *)0xEE0073746E656D75;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v11);

    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [self iconWithSystemImageName:v5];

    id v7 = objc_allocWithZone((Class)UIApplicationShortcutItem);
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v10 = [v7 initWithType:v8 localizedTitle:v9 localizedSubtitle:0 icon:v6 userInfo:0];

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100261FE0()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v2._countAndFlagsBits = 0xD000000000000025;
    v11._countAndFlagsBits = 0xD000000000000045;
    v11._object = (void *)0x80000001005E0730;
    v2._object = (void *)0x80000001005E0700;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0x686372616553;
    v4._object = (void *)0xE600000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v11);

    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [self iconWithSystemImageName:v5];

    id v7 = objc_allocWithZone((Class)UIApplicationShortcutItem);
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v10 = [v7 initWithType:v8 localizedTitle:v9 localizedSubtitle:0 icon:v6 userInfo:0];

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100262178(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = DOCFileProviderSource.appMenuIconPreferingSymbolImages.getter();
  id v7 = [self iconWithCustomImage:v6 isTemplate:0];
  NSString v8 = (void *)sub_100494A5C((uint64_t)_swiftEmptyArrayStorage);
  id v9 = [a1 identifier];
  id v10 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v9 node:0];

  Swift::String v11 = self;
  id v47 = 0;
  id v12 = [v11 archivedDataWithRootObject:v10 requiringSecureCoding:1 error:&v47];
  if (v12)
  {
    id v13 = v12;
    id v14 = v47;
    uint64_t v15 = DOCUserActivityLocationKey.getter();
    uint64_t v17 = v16;
    id v18 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v47 = v8;
    sub_100264A80((uint64_t)v18, v15, v17, isUniquelyReferenced_nonNull_native, &v47);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v45 = v3;
    id v20 = v47;
    uint64_t v21 = _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.Application.getter();
    id v22 = a1;
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      int v40 = v25;
      uint64_t v27 = v26;
      uint64_t v39 = (void *)swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      id v47 = v43;
      *(_DWORD *)uint64_t v27 = 136315394;
      id v44 = v7;
      uint64_t v46 = sub_10009B0E4(0xD000000000000020, 0x80000001005E06D0, (uint64_t *)&v47);
      uint64_t v42 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 12) = 2112;
      uint64_t v41 = v2;
      uint64_t v46 = (uint64_t)v22;
      id v28 = v22;
      os_log_t v38 = v23;
      id v29 = v28;
      id v7 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v39 = v22;

      os_log_t v30 = v38;
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v40, "%s [App Shortcut] Failed to encode DOCConcreteLocation: %@", (uint8_t *)v27, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v41);
    }
    else
    {

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v2);
    }
  }
  id v31 = [a1 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v32 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10070BD98);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v36 = [v32 initWithType:v33 localizedTitle:v34 localizedSubtitle:0 icon:v7 userInfo:isa];

  return v36;
}

void sub_100262694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  Swift::String v11 = *(void **)(a3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v11)
  {
    uint64_t v24 = a2;
    id v23 = v11;
    static Logger.UI.getter();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v21 = a1;
      id v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v22 = a3;
      *(_DWORD *)id v14 = 136315138;
      uint64_t v25 = sub_10009B0E4(0xD000000000000028, 0x80000001005E06A0, &v26);
      a1 = v21;
      a3 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s [App Shortcut] 3.1 Creating source observer", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    id v15 = v23;
    id v16 = [v23 configuration];
    id v17 = [v15 sourceObserver];
    id v18 = (void *)swift_allocObject();
    v18[2] = v10;
    void v18[3] = a1;
    v18[4] = v24;
    objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    swift_retain();
    swift_retain();
    unint64_t v19 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v16, v17, (uint64_t)sub_10026B11C, (uint64_t)v18);
    id v20 = *(void **)(a3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver);
    *(void *)(a3 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver) = v19;
    swift_release();
  }
  else
  {
    swift_release();
  }
}

void sub_1002629BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a2;
  uint64_t v43 = a4;
  uint64_t v41 = a3;
  NSString v5 = (void *)type metadata accessor for Logger();
  uint64_t v6 = *(v5 - 1);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  id v9 = Logger.logObject.getter();
  unint64_t v10 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled(v9, (os_log_type_t)v10))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, void *))(v6 + 8))(v8, v5);
LABEL_8:
    if (*(void *)(a1 + 16))
    {
      unint64_t v21 = sub_10004F108(0);
      if (v22)
      {
        unint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8 * v21);
        NSString v5 = _swiftEmptyArrayStorage;
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        if (!(v10 >> 62))
        {
          uint64_t v23 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v23)
          {
LABEL_12:
            if (v23 < 1)
            {
              __break(1u);
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
            for (uint64_t i = 0; i != v23; ++i)
            {
              if ((v10 & 0xC000000000000001) != 0) {
                id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v25 = *(id *)(v10 + 8 * i + 32);
              }
              uint64_t v26 = v25;
              type metadata accessor for DOCFileProviderSource(0);
              if (swift_dynamicCastClass())
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              else
              {
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v27 = aBlock[0];
LABEL_28:
            swift_bridgeObjectRelease();
            aBlock[0] = (uint64_t)v5;
            if (v27 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v28)
              {
LABEL_30:
                if (v28 >= 1)
                {
                  for (uint64_t j = 0; j != v28; ++j)
                  {
                    if ((v27 & 0xC000000000000001) != 0) {
                      os_log_t v30 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      os_log_t v30 = (char *)*(id *)(v27 + 8 * j + 32);
                    }
                    id v31 = v30;
                    if (((unint64_t)[v30 status] | 2) == 2
                      && *(void *)&v31[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain])
                    {
                      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized ContiguousArray._endMutation()();
                    }
                    else
                    {
                    }
                  }
                  swift_bridgeObjectRelease();
                  id v32 = (void *)aBlock[0];
                  goto LABEL_43;
                }
                goto LABEL_45;
              }
            }
            else
            {
              uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v28) {
                goto LABEL_30;
              }
            }
            swift_bridgeObjectRelease();
            id v32 = _swiftEmptyArrayStorage;
LABEL_43:
            NSString v33 = (void *)swift_allocObject();
            uint64_t v34 = v41;
            uint64_t v35 = v42;
            v33[2] = v32;
            uint64_t v33[3] = v35;
            uint64_t v36 = v43;
            v33[4] = v34;
            void v33[5] = v36;
            aBlock[4] = (uint64_t)sub_10026B170;
            aBlock[5] = (uint64_t)v33;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1000666D8;
            void aBlock[3] = (uint64_t)&unk_10069C5D0;
            id v37 = _Block_copy(aBlock);
            swift_retain();
            swift_retain();
            swift_release();
            DOCRunInMainThread();
            _Block_release(v37);
            return;
          }
LABEL_27:
          swift_bridgeObjectRelease();
          unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
          goto LABEL_28;
        }
LABEL_26:
        swift_bridgeObjectRetain_n();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        if (v23) {
          goto LABEL_12;
        }
        goto LABEL_27;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v11 = swift_slowAlloc();
  uint64_t v12 = swift_slowAlloc();
  aBlock[0] = v12;
  *(_DWORD *)uint64_t v11 = 136315650;
  uint64_t v44 = sub_10009B0E4(0xD000000000000028, 0x80000001005E06A0, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v11 + 12) = 2080;
  if (!*(void *)(a1 + 16))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  sub_10004F108(0);
  if ((v13 & 1) == 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v38[1] = v12;
  int v39 = v10;
  int v40 = v5;
  sub_10009E6C4(0, &qword_100707CD0);
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v44 = sub_10009B0E4(v14, v16, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 22) = 2080;
  if (!*(void *)(a1 + 16))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  unint64_t v17 = sub_10004F108(1);
  if (v18)
  {
    NSString v5 = *(void **)(*(void *)(a1 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v10 = v20;
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_10009B0E4(v19, v10, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v39, "%s [App Shortcut] 3.2. Ordered sources regularSources: %s sharedSources: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void *))(v6 + 8))(v8, v40);
    goto LABEL_8;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_10026302C(unint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  v24[2] = a4;
  id v25 = a3;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v26 = v6;
    uint64_t v27 = v5;
    if (!v9) {
      break;
    }
    v29[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v9 < 0)
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v11 = v8;
    uint64_t v12 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = (char *)(a1 & 0xC000000000000001);
    while (v9 != v12)
    {
      if (v8) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v14 = v13;
      uint64_t v30 = (uint64_t)v13;
      sub_100263448((void **)&v30, v28);

      ++v12;
      uint64_t v5 = v28[0];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v9 == v12)
      {
        unint64_t v10 = (void *)v29[0];
        uint64_t v8 = v11;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_12:
  swift_beginAccess();
  sub_100169BA8((unint64_t)v10);
  swift_endAccess();
  static Logger.Application.getter();
  swift_retain_n();
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    v28[0] = sub_10009B0E4(0xD000000000000028, 0x80000001005E06A0, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    v24[1] = v17 + 14;
    swift_beginAccess();
    sub_10009E6C4(0, &qword_100708730);
    char v18 = v8;
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_10009B0E4(v19, v21, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s [App Shortcut] 3.4 Calling completion with %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v27);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  }
  swift_beginAccess();
  uint64_t v22 = swift_bridgeObjectRetain();
  v25(v22);
  return swift_bridgeObjectRelease();
}

id sub_100263448@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  static Logger.Application.getter();
  unint64_t v10 = v9;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v33 = v5;
    uint64_t v15 = v14;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v37 = v32;
    *(_DWORD *)uint64_t v15 = 136315906;
    uint64_t v35 = v2;
    id v36 = (id)sub_10009B0E4(0xD000000000000028, 0x80000001005E06A0, &v37);
    int v30 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    id v16 = [v10 displayName];
    uint64_t v34 = a2;
    id v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v6;
    unint64_t v20 = v19;

    id v36 = (id)sub_10009B0E4(v18, v20, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    id v21 = [v10 providerName];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;

    id v36 = (id)sub_10009B0E4(v22, v24, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 2080;
    id v36 = *(id *)&v10[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    id v25 = v36;
    sub_1000CBE70(&qword_10070BDE8);
    uint64_t v26 = String.init<A>(describing:)();
    id v36 = (id)sub_10009B0E4(v26, v27, &v37);
    a2 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v30, "%s [App Shortcut] 3.3 Source %s providerName: %s providerDomain: %s", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id result = sub_100262178(v10);
  *a2 = result;
  return result;
}

void sub_100263804(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v11 = swift_bridgeObjectRetain();
  sub_100169BA8(v11);
  swift_endAccess();
  static Logger.UI.getter();
  swift_retain_n();
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = v8;
    uint64_t v16 = v15;
    uint64_t v27 = swift_slowAlloc();
    v32[0] = v27;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v29 = a5;
    uint64_t v31 = sub_10009B0E4(0xD000000000000015, 0x80000001005E0680, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2080;
    v24[1] = v16 + 14;
    swift_beginAccess();
    uint64_t v26 = v7;
    sub_10009E6C4(0, &qword_100708730);
    int v25 = v14;
    id v17 = a3;
    swift_bridgeObjectRetain();
    uint64_t v18 = Array.description.getter();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v21 = v18;
    a3 = v17;
    uint64_t v30 = sub_10009B0E4(v21, v20, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    a5 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v25, "%s [App Shortcut] 4. Calling completion with %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v26);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_beginAccess();
  uint64_t v22 = swift_bridgeObjectRetain();
  a3(v22);
  swift_bridgeObjectRelease();
  unint64_t v23 = *(void **)(a5 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver);
  *(void *)(a5 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_sourceOrderObserver) = 0;
}

uint64_t sub_100263B68(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    sub_100263CCC((unint64_t *)((char *)&v11 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    uint64_t v7 = v6;
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v5);
    sub_100263CCC((unint64_t *)v8, v4, v2);
    uint64_t v7 = v9;
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

void sub_100263CCC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v4);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    id v12 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    id v13 = [v12 options];
    unsigned int v14 = [v13 _openAsDownload];

    if (v14)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_10056CE9C(a1, a2, v21, a3);
        return;
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
    int64_t v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v4);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_100263EA0(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10009E6C4(0, &qword_10070BDA0);
      sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
      Set.Iterator.init(_cocoa:)();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_10026AD14();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        int64_t v17 = (void *)sub_1004FDAFC(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          sub_10009E6C4(0, &qword_10070BDA0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

void *sub_100264198(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v46;
    uint64_t v4 = v47;
    uint64_t v6 = v48;
    int64_t v5 = v49;
    unint64_t v7 = v50;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v4;
  uint64_t v43 = v6;
  int64_t v44 = v5;
  unint64_t v45 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        int64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        int64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v42 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          int64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v44 = v5;
          unint64_t v45 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v42 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v42 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          int64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      int64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (!v16
      || (uint64_t v39 = v16,
          sub_10009E6C4(0, &qword_10070BDA0),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          int64_t v14 = v40,
          swift_unknownObjectRelease(),
          !v40))
    {
LABEL_53:
      sub_10026AD14();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_10009E6C4(0, &qword_10070BDA0);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = static NSObject.== infix(_:_:)();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v41;
    uint64_t v6 = v43;
    int64_t v5 = v44;
    unint64_t v7 = v45;
  }
LABEL_47:

  char v31 = *(unsigned char *)(v2 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v33);
    sub_1002646F0((unint64_t *)((char *)&v39 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v2, v19, &v41);
    uint64_t v35 = v34;
    swift_release();
    sub_10026AD14();
  }
  else
  {
    id v36 = (void *)swift_slowAlloc();
    memcpy(v36, (const void *)(v2 + 56), v33);
    sub_1002646F0((unint64_t *)v36, v32, v2, v19, &v41);
    uint64_t v35 = v37;
    swift_release();
    sub_10026AD14();
    swift_slowDealloc();
  }
  return (void *)v35;
}

void sub_1002646F0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v36 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v7;
    do
    {
      while (1)
      {
        if ((*a5 & 0x8000000000000000) == 0)
        {
          int64_t v9 = a5[3];
          unint64_t v8 = a5[4];
          if (v8)
          {
            uint64_t v10 = (v8 - 1) & v8;
            unint64_t v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_7:
            uint64_t v12 = *(void **)(*(void *)(*a5 + 48) + 8 * v11);
            id v13 = v12;
            goto LABEL_8;
          }
          int64_t v26 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          int64_t v27 = (unint64_t)(a5[2] + 64) >> 6;
          if (v26 >= v27)
          {
            uint64_t v12 = 0;
            uint64_t v10 = 0;
            goto LABEL_8;
          }
          uint64_t v28 = a5[1];
          unint64_t v29 = *(void *)(v28 + 8 * v26);
          if (v29)
          {
LABEL_22:
            uint64_t v10 = (v29 - 1) & v29;
            unint64_t v11 = __clz(__rbit64(v29)) + (v26 << 6);
            int64_t v9 = v26;
            goto LABEL_7;
          }
          int64_t v31 = v9 + 2;
          if (v9 + 2 >= v27) {
            goto LABEL_41;
          }
          unint64_t v29 = *(void *)(v28 + 8 * v31);
          if (v29)
          {
LABEL_29:
            int64_t v26 = v31;
            goto LABEL_22;
          }
          if (v9 + 3 < v27)
          {
            unint64_t v29 = *(void *)(v28 + 8 * (v9 + 3));
            if (v29)
            {
              int64_t v26 = v9 + 3;
              goto LABEL_22;
            }
            int64_t v31 = v9 + 4;
            if (v9 + 4 >= v27)
            {
              uint64_t v12 = 0;
              uint64_t v10 = 0;
              v9 += 3;
LABEL_8:
              a5[3] = v9;
              a5[4] = v10;
              if (!v12) {
                goto LABEL_47;
              }
              goto LABEL_12;
            }
            unint64_t v29 = *(void *)(v28 + 8 * v31);
            if (v29) {
              goto LABEL_29;
            }
            int64_t v26 = v9 + 5;
            if (v9 + 5 < v27)
            {
              unint64_t v29 = *(void *)(v28 + 8 * v26);
              if (v29) {
                goto LABEL_22;
              }
              int64_t v26 = v27 - 1;
              int64_t v32 = v9 + 6;
              while (v27 != v32)
              {
                unint64_t v29 = *(void *)(v28 + 8 * v32++);
                if (v29)
                {
                  int64_t v26 = v32 - 1;
                  goto LABEL_22;
                }
              }
LABEL_41:
              uint64_t v12 = 0;
              uint64_t v10 = 0;
              int64_t v9 = v26;
              goto LABEL_8;
            }
          }
          uint64_t v12 = 0;
          uint64_t v10 = 0;
          int64_t v9 = v31;
          goto LABEL_8;
        }
        if (!__CocoaSet.Iterator.next()()
          || (sub_10009E6C4(0, &qword_10070BDA0),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              uint64_t v12 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_47:
          swift_retain();
          sub_10056CE9C(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        Swift::Int v14 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
        uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v16 = v14 & ~v15;
        unint64_t v17 = v16 >> 6;
        uint64_t v18 = 1 << v16;
        if (((1 << v16) & *(void *)(v36 + 8 * (v16 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_10009E6C4(0, &qword_10070BDA0);
        id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v16);
        char v20 = static NSObject.== infix(_:_:)();

        if (v20) {
          break;
        }
        uint64_t v21 = ~v15;
        for (unint64_t i = v16 + 1; ; unint64_t i = v23 + 1)
        {
          unint64_t v23 = i & v21;
          if (((*(void *)(v36 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0) {
            break;
          }
          id v24 = *(id *)(*(void *)(a3 + 48) + 8 * v23);
          char v25 = static NSObject.== infix(_:_:)();

          if (v25)
          {

            unint64_t v17 = v23 >> 6;
            uint64_t v18 = 1 << v23;
            goto LABEL_25;
          }
        }
LABEL_3:
      }
LABEL_25:
      unint64_t v30 = a1[v17];
      a1[v17] = v30 & ~v18;
    }
    while ((v18 & v30) == 0);
    uint64_t v7 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_100264A80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = (void *)*a5;
  unint64_t v12 = sub_100042F50(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100359630();
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034FF88(v15, a4 & 1);
  uint64_t v21 = sub_100042F50(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

id sub_100264BF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v9 = (char *)v55 - v8;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  BOOL v14 = *(char **)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (!v14) {
    return 0;
  }
  *(void *)&long long v62 = v3;
  uint64_t v63 = (char *)v55 - v12;
  uint64_t v64 = v13;
  uint64_t v15 = &v14[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  swift_beginAccess();
  uint64_t v16 = (uint64_t)v15;
  uint64_t v17 = v64;
  sub_1000CBC00(v16, (uint64_t)v9, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v10) == 1)
  {
    sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
    return 0;
  }
  uint64_t v59 = v2;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v63, v9, v10);
  uint64_t v61 = v14;
  BOOL v60 = URL.startAccessingSecurityScopedResource()();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v7, 1, 1, v10);
  uint64_t v20 = URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)();
  uint64_t v57 = 0;
  uint64_t v59 = v10;
  unint64_t v22 = v21;
  uint64_t v23 = v20;
  sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
  id v24 = objc_allocWithZone((Class)NSUserActivity);
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [v24 initWithActivityType:v25];

  sub_1000CBE70(&qword_100707EF0);
  uint64_t inited = swift_initStackObject();
  long long v62 = xmmword_1005A0030;
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  Swift::Int v28 = *(void *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey);
  uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_stateRestorationURLKey + 8);
  *(void *)(inited + 32) = v28;
  *(void *)(inited + 40) = v27;
  swift_bridgeObjectRetain();
  sub_10049D5B0(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setRequiredUserInfoKeys:isa];

  v55[1] = sub_1000CBE70(&qword_10070BD40);
  uint64_t v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = v62;
  Swift::Int v65 = v28;
  uint64_t v66 = v27;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(v30 + 96) = &type metadata for Data;
  *(void *)(v30 + 72) = v23;
  *(void *)(v30 + 80) = v22;
  sub_100168CBC(v23, v22);
  sub_100494384(v30);
  Class v31 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setUserInfo:v31];

  int64_t v32 = *(void **)&v61[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  size_t v33 = v61;
  if (v32)
  {
    uint64_t v56 = v23;
    unint64_t v58 = v22;
    id v34 = [v32 userActivity];
    uint64_t v35 = v64;
    uint64_t v36 = v59;
    if (v34
      && (v37 = v34, id v38 = [v34 userInfo], v37, v38))
    {
      uint64_t v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v41 = sub_10024E324(v40);
      swift_bridgeObjectRelease();
      id v42 = [v18 requiredUserInfoKeys];
      if (v42)
      {
        uint64_t v43 = v42;
        uint64_t v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v67 = v44;
        uint64_t v45 = *(void *)(v41 + 16);
        if (v45)
        {
          uint64_t v46 = v36;
          uint64_t v47 = (Swift::Int *)(v41 + 40);
          do
          {
            Swift::Int v48 = *(v47 - 1);
            Swift::Int v49 = *v47;
            swift_bridgeObjectRetain();
            sub_1000EDD5C(&v65, v48, v49);
            swift_bridgeObjectRelease();
            v47 += 2;
            --v45;
          }
          while (v45);
          swift_bridgeObjectRelease();
          uint64_t v44 = v67;
          size_t v33 = v61;
          uint64_t v36 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (v44)
        {
          v51.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        else
        {
          v51.super.Class isa = 0;
        }
        [v18 setRequiredUserInfoKeys:v51.super.isa];
      }
      else
      {
        swift_bridgeObjectRelease();
        [v18 setRequiredUserInfoKeys:0];
      }
      uint64_t v52 = swift_initStackObject();
      *(_OWORD *)(v52 + 16) = v62;
      Swift::Int v65 = DOCUserActivityQuickLookStateRestorationUserInfoKey.getter();
      uint64_t v66 = v53;
      AnyHashable.init<A>(_:)();
      *(void *)(v52 + 96) = sub_1000CBE70(&qword_10070BD48);
      *(void *)(v52 + 72) = v39;
      sub_100494384(v52);
      Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 addUserInfoEntriesFromDictionary:v54];
      sub_100021020(v56, v58);

      uint64_t v35 = v64;
    }
    else
    {
      sub_100021020(v56, v58);
    }
  }
  else
  {
    sub_100021020(v23, v22);
    uint64_t v35 = v64;
    uint64_t v36 = v59;
  }
  if (v60)
  {
    unint64_t v50 = v63;
    URL.stopAccessingSecurityScopedResource()();

    (*(void (**)(char *, uint64_t))(v35 + 8))(v50, v36);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v63, v36);
  }
  return v18;
}

uint64_t sub_100265660()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002656B8(uint64_t a1, uint64_t a2)
{
  return sub_10025E72C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1002656C8()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))((char *)v0 + v3, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100265810()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (char *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10025EACC(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100265880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002658C8(NSObject *a1, char *a2, int a3, void *a4, void *a5, uint64_t a6, NSObject *a7)
{
  unint64_t v147 = a7;
  uint64_t v148 = a6;
  int v149 = a5;
  id v150 = a4;
  int v146 = a3;
  id v140 = a2;
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  id v145 = (char *)v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for Logger();
  uint64_t v162 = *(void *)(v157 - 8);
  uint64_t v10 = __chkstk_darwin(v157);
  uint64_t v139 = (char *)v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v135 = (char *)v134 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v138 = (char *)v134 - v15;
  __chkstk_darwin(v14);
  uint64_t v161 = (char *)v134 - v16;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  int v153 = (char *)v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v159 = (char *)v134 - v22;
  __chkstk_darwin(v21);
  id v155 = (char *)v134 - v23;
  uint64_t v24 = sub_1000CBE70((uint64_t *)&unk_10070BDB0);
  uint64_t v25 = __chkstk_darwin(v24);
  id v143 = (char *)v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v136 = (char *)v134 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v158 = (uint64_t)v134 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  os_log_type_t v142 = ((char *)v134 - v32);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)v134 - v34;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)v134 - v36;
  BOOL v156 = URL.startAccessingSecurityScopedResource()();
  uint64_t v38 = (uint64_t)&v37[*(int *)(v24 + 48)];
  unint64_t v154 = a1;
  sub_10025BC2C((uint64_t)v37, v38, a1);
  BOOL v144 = URL.startAccessingSecurityScopedResource()();
  id v137 = self;
  id v39 = [v137 defaultManager];
  uint64_t v163 = v24;
  uint64_t v40 = (uint64_t)&v35[*(int *)(v24 + 48)];
  uint64_t v41 = v18 + 16;
  uint64_t v165 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v165(v35, v37, v17);
  uint64_t v160 = v38;
  sub_1000CBC00(v38, v40, &qword_1007076B0);
  URL._bridgeToObjectiveC()(v42);
  uint64_t v44 = v43;
  sub_1000CBBA4(v40, &qword_1007076B0);
  uint64_t v151 = v18;
  uint64_t v46 = v18 + 8;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v47 = v35;
  uint64_t v164 = v17;
  uint64_t v152 = v45;
  v45(v35, v17);
  id v168 = 0;
  id v48 = [v39 _doc_importItemAtURL:v44 toDestination:1 error:&v168];

  id v49 = v168;
  if (v48)
  {
    unint64_t v50 = v155;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    static Logger.Application.getter();
    uint64_t v51 = v164;
    uint64_t v52 = v142;
    uint64_t v53 = (char *)v142 + *(int *)(v163 + 48);
    Class v54 = v165;
    v165((char *)v142, v37, v164);
    sub_1000CBC00(v160, (uint64_t)v53, &qword_1007076B0);
    sub_1000CBE0C((uint64_t)v52, v158, (uint64_t *)&unk_10070BDB0);
    v54(v159, v50, v51);
    unint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    int v57 = v56;
    os_log_type_t v142 = v55;
    BOOL v58 = os_log_type_enabled(v55, v56);
    uint64_t v59 = v50;
    uint64_t v60 = (uint64_t)v37;
    uint64_t v61 = (void (*)(char *, uint64_t, uint64_t))v54;
    uint64_t v141 = v41;
    if (v58)
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v139 = (char *)swift_slowAlloc();
      id v168 = v139;
      *(_DWORD *)uint64_t v62 = 136315650;
      uint64_t v166 = sub_10009B0E4(0xD000000000000031, 0x80000001005E04D0, (uint64_t *)&v168);
      v134[1] = &v167;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v62 + 12) = 2080;
      v134[0] = v62 + 14;
      uint64_t v63 = v163;
      uint64_t v64 = *(int *)(v163 + 48);
      LODWORD(v138) = v57;
      Swift::Int v65 = v47;
      uint64_t v66 = (uint64_t)&v47[v64];
      id v140 = v37;
      uint64_t v67 = v158;
      uint64_t v68 = v158 + v64;
      uint64_t v69 = v164;
      v61(v65, v158, v164);
      sub_1000CBC00(v68, v66, &qword_1007076B0);
      uint64_t v70 = &v136[*(int *)(v63 + 48)];
      uint64_t v71 = v151;
      (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v136, v65, v69);
      uint64_t v72 = (uint64_t)v70;
      uint64_t v60 = (uint64_t)v140;
      sub_1000CBE0C(v66, v72, &qword_1007076B0);
      uint64_t v73 = String.init<A>(describing:)();
      uint64_t v166 = sub_10009B0E4(v73, v74, (uint64_t *)&v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000CBBA4(v67, (uint64_t *)&unk_10070BDB0);
      *(_WORD *)(v62 + 22) = 2080;
      sub_100265880((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      id v75 = v159;
      uint64_t v76 = v164;
      uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v166 = sub_10009B0E4(v77, v78, (uint64_t *)&v168);
      unint64_t v79 = v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v80 = v46;
      uint64_t v81 = v152;
      v152(v75, v76);
      uint64_t v82 = v81;
      uint64_t v83 = v142;
      _os_log_impl((void *)&_mh_execute_header, v142, (os_log_type_t)v138, "%s: imported URL: %s to downloads at URL: %s", (uint8_t *)v62, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v84 = v161;
      uint64_t v161 = *(char **)(v162 + 8);
      ((void (*)(char *, uint64_t))v161)(v84, v157);
      id v85 = (void (*)(char *, uint64_t, uint64_t))v165;
      uint64_t v86 = v76;
      uint64_t v59 = v79;
    }
    else
    {
      sub_1000CBBA4(v158, (uint64_t *)&unk_10070BDB0);
      uint64_t v94 = v164;
      uint64_t v80 = v46;
      uint64_t v95 = v152;
      v152(v159, v164);
      uint64_t v82 = v95;

      id v96 = v161;
      uint64_t v161 = *(char **)(v162 + 8);
      ((void (*)(char *, uint64_t))v161)(v96, v157);
      id v85 = v61;
      uint64_t v71 = v151;
      uint64_t v86 = v94;
    }
    uint64_t v97 = v153;
    uint64_t v98 = v143;
    uint64_t v99 = (uint64_t)&v143[*(int *)(v163 + 48)];
    v85(v143, v60, v86);
    sub_1000CBC00(v160, v99, &qword_1007076B0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v99, 1, v86) == 1)
    {
      sub_1000CBBA4(v99, &qword_1007076B0);
      v82(v98, v86);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v97, v99, v86);
      BOOL v100 = v82;
      uint64_t v101 = v80;
      v100(v98, v86);
      id v102 = [v137 defaultManager];
      URL._bridgeToObjectiveC()(v103);
      unint64_t v105 = v104;
      id v168 = 0;
      unsigned __int8 v106 = [v102 removeItemAtURL:v104 error:&v168];

      if (v106)
      {
        id v107 = v168;
        v100(v97, v86);
        uint64_t v82 = v100;
      }
      else
      {
        uint64_t v163 = v101;
        uint64_t v119 = v86;
        id v140 = (char *)v60;
        id v120 = v168;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v121 = v135;
        static Logger.Application.getter();
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v122 = Logger.logObject.getter();
        os_log_type_t v123 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v122, v123))
        {
          id v124 = v59;
          uint64_t v125 = swift_slowAlloc();
          id v168 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = 136315394;
          uint64_t v166 = sub_10009B0E4(0xD000000000000031, 0x80000001005E04D0, (uint64_t *)&v168);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v125 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v126 = Error.localizedDescription.getter();
          uint64_t v166 = sub_10009B0E4(v126, v127, (uint64_t *)&v168);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v122, v123, "%s: Failed to delete temporary directory. Error: %s", (uint8_t *)v125, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v59 = v124;
          uint64_t v71 = v151;
          swift_slowDealloc();

          swift_errorRelease();
          unint64_t v128 = v135;
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
          unint64_t v128 = v121;
        }
        ((void (*)(char *, uint64_t))v161)(v128, v157);
        uint64_t v86 = v119;
        uint64_t v82 = v152;
        v152(v153, v119);
        uint64_t v60 = (uint64_t)v140;
      }
    }
    uint64_t v129 = (uint64_t)v145;
    v165(v145, v59, v86);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v129, 0, 1, v86);
    sub_100251CDC(v129, 0, v146 & 1, (uint64_t)v150, v149, v148, v147);
    sub_1000CBBA4(v129, &qword_1007076B0);
    if (v144) {
      URL.stopAccessingSecurityScopedResource()();
    }
    v82(v59, v86);
    sub_1000CBBA4(v60, (uint64_t *)&unk_10070BDB0);
  }
  else
  {
    uint64_t v87 = v49;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_10070BDB0);
    uint64_t v88 = v138;
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = swift_slowAlloc();
      id v168 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v91 = 136315394;
      uint64_t v166 = sub_10009B0E4(0xD000000000000031, 0x80000001005E04D0, (uint64_t *)&v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v91 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v92 = Error.localizedDescription.getter();
      uint64_t v166 = sub_10009B0E4(v92, v93, (uint64_t *)&v168);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v89, v90, "%s: import to Downloads failed. Error: %s", (uint8_t *)v91, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v108 = *(void (**)(char *, uint64_t))(v162 + 8);
    id v109 = v88;
    uint64_t v110 = v157;
    v108(v109, v157);
    uint64_t v111 = v139;
    uint64_t v112 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController;
    unint64_t v113 = v140;
    os_log_type_t v114 = *(void **)&v140[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController];
    if (!v114)
    {
      static Logger.Application.getter();
      BOOL v115 = Logger.logObject.getter();
      os_log_type_t v116 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v115, v116))
      {
        uint64_t v117 = (uint8_t *)swift_slowAlloc();
        id v168 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v117 = 136315138;
        uint64_t v166 = sub_10009B0E4(0xD000000000000031, 0x80000001005E04D0, (uint64_t *)&v168);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v115, v116, "%s: fileImportController was nil, creating a new one.", v117, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        unint64_t v113 = v140;
        swift_slowDealloc();

        unint64_t v118 = v139;
      }
      else
      {

        unint64_t v118 = v111;
      }
      v108(v118, v110);
      id v130 = [objc_allocWithZone((Class)type metadata accessor for DOCImportFileController()) init];
      uint64_t v131 = *(void **)&v113[v112];
      *(void *)&v113[v112] = v130;

      uint64_t v132 = *(void *)&v113[v112];
      if (!v132
        || (*(void *)(v132 + OBJC_IVAR____TtC5Files23DOCImportFileController_delegate + 8) = &off_10069B910,
            swift_unknownObjectWeakAssign(),
            (os_log_type_t v114 = *(void **)&v113[v112]) == 0))
      {

        swift_release();
        __break(1u);
        return;
      }
    }
    id v133 = v114;
    sub_100548BD0((uint64_t)v154);

    swift_errorRelease();
  }
  if (v156) {
    URL.stopAccessingSecurityScopedResource()();
  }
}

void sub_100266A64(uint64_t a1, NSObject *a2, void *a3, char a4, uint64_t a5)
{
  dispatch_group_t v38 = a2;
  id v39 = a3;
  uint64_t v37 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v10 = ((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    Set.Iterator.init(_cocoa:)();
    a1 = v42;
    uint64_t v34 = v43;
    uint64_t v11 = v44;
    uint64_t v12 = v45;
    unint64_t v13 = v46;
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v34 = a1 + 56;
    uint64_t v16 = ~v14;
    uint64_t v17 = -v14;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v13 = v18 & v15;
    swift_bridgeObjectRetain();
    uint64_t v11 = v16;
    uint64_t v12 = 0;
  }
  v32[1] = v11;
  int64_t v33 = (unint64_t)(v11 + 64) >> 6;
  uint64_t v36 = (void (**)(NSObject *, uint64_t))(v8 + 8);
  int v35 = a4 & 1;
  uint64_t v32[3] = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v40 = a1;
  if (a1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v13)
    {
      uint64_t v19 = (v13 - 1) & v13;
      unint64_t v20 = __clz(__rbit64(v13)) | (v12 << 6);
      uint64_t v21 = v12;
      goto LABEL_29;
    }
    int64_t v24 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v24 >= v33) {
      goto LABEL_32;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v24);
    uint64_t v21 = v12 + 1;
    if (!v25)
    {
      uint64_t v21 = v12 + 2;
      if (v12 + 2 >= v33) {
        goto LABEL_32;
      }
      unint64_t v25 = *(void *)(v34 + 8 * v21);
      if (!v25)
      {
        uint64_t v21 = v12 + 3;
        if (v12 + 3 >= v33) {
          goto LABEL_32;
        }
        unint64_t v25 = *(void *)(v34 + 8 * v21);
        if (!v25)
        {
          uint64_t v21 = v12 + 4;
          if (v12 + 4 >= v33) {
            goto LABEL_32;
          }
          unint64_t v25 = *(void *)(v34 + 8 * v21);
          if (!v25)
          {
            uint64_t v21 = v12 + 5;
            if (v12 + 5 >= v33) {
              goto LABEL_32;
            }
            unint64_t v25 = *(void *)(v34 + 8 * v21);
            if (!v25)
            {
              uint64_t v26 = v12 + 6;
              while (v33 != v26)
              {
                unint64_t v25 = *(void *)(v34 + 8 * v26++);
                if (v25)
                {
                  uint64_t v21 = v26 - 1;
                  a1 = v40;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10026AD14();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v19 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v21 << 6);
LABEL_29:
    id v23 = *(id *)(*(void *)(a1 + 48) + 8 * v20);
    if (!v23) {
      goto LABEL_32;
    }
    while (1)
    {
      dispatch_group_t v27 = v38;
      dispatch_group_enter(v38);
      id v28 = [v23 URL];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v29 = (char *)v39;
      id v30 = v23;
      swift_retain();
      uint64_t v31 = v27;
      sub_1002658C8(v10, v29, v35, v29, v30, a5, v31);

      swift_release();
      (*v36)(v10, v37);

      uint64_t v12 = v21;
      unint64_t v13 = v19;
      a1 = v40;
      if ((v40 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v22 = __CocoaSet.Iterator.next()();
      if (v22)
      {
        uint64_t v41 = v22;
        sub_10009E6C4(0, &qword_10070BDA0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v23 = v47;
        swift_unknownObjectRelease();
        uint64_t v21 = v12;
        uint64_t v19 = v13;
        if (v23) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_100266E84(void *a1)
{
  uint64_t v2 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v114 = *(void *)(v2 - 8);
  uint64_t v115 = v2;
  __chkstk_darwin(v2);
  unint64_t v113 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v120 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v109 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  os_log_type_t v116 = (char *)&v109 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v117 = (char *)&v109 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v109 - v15;
  static Logger.Application.getter();
  uint64_t v17 = a1;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  int v20 = v19;
  BOOL v21 = os_log_type_enabled(v18, v19);
  uint64_t v22 = &selRef_setManageButtonTitle_;
  uint64_t v111 = v7;
  if (v21)
  {
    uint64_t v23 = swift_slowAlloc();
    LODWORD(v118) = v20;
    uint64_t v24 = v23;
    id aBlock = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v110 = v10;
    *(void *)&long long v129 = sub_10009B0E4(0xD000000000000012, 0x80000001005E0590, (uint64_t *)&aBlock);
    uint64_t v112 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2080;
    id v25 = [v17 activityType:v24 + 14];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    uint64_t v29 = v120;
    uint64_t v10 = v110;
    *(void *)&long long v129 = sub_10009B0E4(v26, v28, (uint64_t *)&aBlock);
    uint64_t v4 = v112;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v118, "%s: continue activity: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v30 = v29;
    uint64_t v22 = &selRef_setManageButtonTitle_;
  }
  else
  {

    uint64_t v30 = v120;
  }
  unint64_t v118 = *(void (**)(char *, uint64_t))(v30 + 8);
  v118(v16, v4);
  id v31 = [v17 v22[244]];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v31) = static DOCUserActivityIdentifier.identifierSupportsRestoration(_:)();
  swift_bridgeObjectRelease();
  if (v31)
  {
    type metadata accessor for DOCUserActivityController();
    uint64_t v32 = swift_allocObject();
    int64_t v33 = v119;
    *(void *)(v32 + 16) = v119;
    *(void *)(v32 + 24) = v17;
    uint64_t v34 = v17;
    id v35 = v33;
    static DOCUserActivityController.fetchURLFrom(activity:completion:)();
    swift_release();
    return;
  }
  id v36 = [self intentFromActivity:v17];
  if (!v36)
  {
    unint64_t v46 = v22[244];
    uint64_t v117 = v17;
    id v47 = [v17 v46];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    uint64_t v51 = v113;
    uint64_t v52 = v114;
    uint64_t v53 = v115;
    (*(void (**)(char *, void, uint64_t))(v114 + 104))(v113, enum case for DOCUserActivityIdentifier.folderDrag(_:), v115);
    uint64_t v54 = DOCUserActivityIdentifier.rawValue.getter();
    uint64_t v56 = v55;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    if (v48 == v54 && v50 == v56)
    {
      swift_bridgeObjectRelease_n();
LABEL_15:
      uint64_t v64 = v116;
      static Logger.Application.getter();
      Swift::Int v65 = v117;
      uint64_t v66 = Logger.logObject.getter();
      os_log_type_t v67 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        id aBlock = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 136315394;
        *(void *)&long long v129 = sub_10009B0E4(0xD000000000000012, 0x80000001005E0590, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v68 + 12) = 2080;
        id v69 = [v65 activityType];
        uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v112 = v4;
        unint64_t v72 = v71;

        *(void *)&long long v129 = sub_10009B0E4(v70, v72, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s: Continue folder drop activity: %s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v73 = v116;
        uint64_t v74 = v112;
LABEL_41:
        v118(v73, v74);
        return;
      }

      uint64_t v73 = v64;
LABEL_40:
      uint64_t v74 = v4;
      goto LABEL_41;
    }
    char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_15;
    }
    id v75 = [v117 activityType];
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = v77;

    if (v76 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v78 == v79)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v80 & 1) == 0) {
        return;
      }
    }
    static Logger.Application.getter();
    uint64_t v81 = v117;
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      uint64_t v117 = (char *)swift_slowAlloc();
      id aBlock = v117;
      *(_DWORD *)uint64_t v84 = 136315394;
      *(void *)&long long v129 = sub_10009B0E4(0xD000000000000012, 0x80000001005E0590, (uint64_t *)&aBlock);
      uint64_t v110 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v84 + 12) = 2080;
      id v85 = [v81 activityType];
      uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v112 = v4;
      unint64_t v88 = v87;

      uint64_t v89 = v118;
      *(void *)&long long v129 = sub_10009B0E4(v86, v88, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v4 = v112;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "%s: Continue Spotlight search activity: %s", (uint8_t *)v84, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v89(v110, v4);
    }
    else
    {

      v118(v10, v4);
    }
    os_log_type_t v90 = v111;
    uint64_t v91 = *(void **)&v119[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    if (v91)
    {
      id v92 = v91;
      id v93 = [v81 userInfo];
      if (v93)
      {
        uint64_t v94 = v93;
        uint64_t v95 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v128 = v96;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v95 + 16) && (unint64_t v97 = sub_10008E070((uint64_t)&aBlock), (v98 & 1) != 0))
        {
          sub_10009B208(*(void *)(v95 + 56) + 32 * v97, (uint64_t)&v129);
        }
        else
        {
          long long v129 = 0u;
          long long v130 = 0u;
        }
        sub_10008E17C((uint64_t)&aBlock);
        swift_bridgeObjectRelease();
        if (*((void *)&v130 + 1))
        {
          if (swift_dynamicCast())
          {
            id v100 = aBlock;
            uint64_t v99 = v122;
            id v101 = [v92 effectiveFullBrowser];
            id v102 = sub_100066A5C();
            uint64_t v103 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v104 = (void *)swift_allocObject();
            v104[2] = v103;
            v104[3] = 0;
            v104[4] = 0;
            v104[5] = v100;
            v104[6] = v99;
            uint64_t v125 = sub_10026AD10;
            uint64_t v126 = v104;
            id aBlock = _NSConcreteStackBlock;
            uint64_t v122 = 1107296256;
            os_log_type_t v123 = sub_1000666D8;
            id v124 = &unk_10069C3C8;
            unint64_t v105 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            swift_release();
            [v102 performAfterSearchInitialization:v105];
            _Block_release(v105);

            swift_bridgeObjectRelease();
            return;
          }

          goto LABEL_37;
        }
      }
      else
      {
        long long v129 = 0u;
        long long v130 = 0u;
      }

      sub_1000CBBA4((uint64_t)&v129, (uint64_t *)&unk_100705D60);
    }
LABEL_37:
    static Logger.Application.getter();
    unsigned __int8 v106 = Logger.logObject.getter();
    os_log_type_t v107 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v106, v107))
    {
      id v108 = (uint8_t *)swift_slowAlloc();
      id aBlock = (id)swift_slowAlloc();
      *(_DWORD *)id v108 = 136315138;
      *(void *)&long long v129 = sub_10009B0E4(0xD000000000000012, 0x80000001005E0590, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "%s: Unable to continue activity since main view controller not set, of search query string not is nil", v108, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v73 = v90;
    goto LABEL_40;
  }
  uint64_t v37 = v36;
  dispatch_group_t v38 = v117;
  static Logger.Application.getter();
  id v39 = v17;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    id aBlock = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315394;
    *(void *)&long long v129 = sub_10009B0E4(0xD000000000000012, 0x80000001005E0590, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 12) = 2080;
    *(void *)&long long v129 = [v39 interaction];
    sub_1000CBE70(&qword_10070BDE0);
    uint64_t v43 = String.init<A>(describing:)();
    *(void *)&long long v129 = sub_10009B0E4(v43, v44, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s: Handle Shortcuts open folder action: %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v45 = v117;
  }
  else
  {

    uint64_t v45 = v38;
  }
  v118(v45, v4);
  type metadata accessor for DOCOpenLocationIntentActionResolver();
  swift_allocObject();
  id v57 = v37;
  DOCOpenLocationIntentActionResolver.init(with:)();
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v119;
  *(void *)(v58 + 16) = v119;
  id v60 = v59;
  dispatch thunk of DOCOpenLocationIntentActionResolver.semanticLocationResolutionHandler.setter();
  *(void *)(swift_allocObject() + 16) = v60;
  id v61 = v60;
  dispatch thunk of DOCOpenLocationIntentActionResolver.urlLocationResolutionHandler.setter();
  *(void *)(swift_allocObject() + 16) = v61;
  id v62 = v61;
  dispatch thunk of DOCOpenLocationIntentActionResolver.tagLocationResolutionHandler.setter();
  dispatch thunk of DOCOpenLocationIntentActionResolver.startResolving()();

  swift_release();
}

Swift::Int sub_100267E38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v20 = v17;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v19 = sub_10009B0E4(0xD000000000000019, 0x80000001005E0840, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v15 = v10 + 14;
    uint64_t v16 = v4;
    uint64_t v18 = v2;
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    swift_bridgeObjectRetain();
    uint64_t v11 = Set.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_10009B0E4(v11, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s URLContexts: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_100250578(a1);
}

uint64_t sub_100268100(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v10 = a1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = v7;
    uint64_t v14 = v13;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v30 = v25;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v29 = sub_10009B0E4(0xD000000000000032, 0x80000001005E0800, &v30);
    uint64_t v27 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v23 = v14 + 14;
    id v15 = v10;
    uint64_t v28 = a3;
    id v16 = v15;
    id v17 = [v15 description];
    uint64_t v24 = v6;
    id v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    uint64_t v29 = sub_10009B0E4(v19, v21, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a3 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s shortcutItem: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_1002529F8(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, 1);
}

uint64_t sub_1002683CC()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_10009B0E4(0xD000000000000019, 0x80000001005E0660, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s [App Shortcut] begin creating app shortcuts", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_10024FF74((uint64_t)sub_10024FCAC, 0);
}

void sub_1002685C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v48 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v45 = v8;
  unint64_t v46 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v47 = (char *)&v40 - v10;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    unint64_t v44 = v6;
    uint64_t v18 = v17;
    uint64_t v41 = swift_slowAlloc();
    aBlock[0] = v41;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v42 = v12;
    uint64_t v49 = sub_10009B0E4(0xD00000000000002FLL, 0x80000001005DFFE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    uint64_t v40 = v11;
    unint64_t v20 = v2;
    uint64_t v21 = v19;
    uint64_t v43 = v7;
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v24 = v21;
    uint64_t v2 = v20;
    uint64_t v49 = sub_10009B0E4(v24, v23, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v7 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: URLs: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v44;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v40);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v25 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController;
  uint64_t v26 = *(char **)&v2[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_fileImportController];
  if (v26)
  {
    *(void *)&v26[OBJC_IVAR____TtC5Files23DOCImportFileController_delegate + 8] = 0;
    swift_unknownObjectWeakAssign();
    uint64_t v26 = *(char **)&v2[v25];
  }
  *(void *)&v2[v25] = 0;

  if (*(void *)(a1 + 16) == 1)
  {
    uint64_t v27 = v48;
    uint64_t v28 = *(unsigned __int8 *)(v48 + 80);
    uint64_t v29 = a1 + ((v28 + 32) & ~v28);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
    v30(v6, v29, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v7) == 1)
    {
      sub_1000CBBA4((uint64_t)v6, &qword_1007076B0);
    }
    else
    {
      id v31 = v6;
      unint64_t v44 = (char *)~v28;
      uint64_t v32 = v47;
      uint64_t v33 = v48;
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      v34(v47, v31, v7);
      id v35 = v46;
      v30(v46, (uint64_t)v32, v7);
      uint64_t v36 = (v28 + 24) & (unint64_t)v44;
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v2;
      v34((char *)(v37 + v36), v35, v7);
      aBlock[4] = (uint64_t)sub_100268B4C;
      aBlock[5] = v37;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000666D8;
      void aBlock[3] = (uint64_t)&unk_10069B9F0;
      dispatch_group_t v38 = _Block_copy(aBlock);
      id v39 = v2;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v38);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v7);
    }
  }
}

uint64_t sub_100268B4C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  return sub_10025412C(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), 0, 0, 1, 1);
}

uint64_t sub_100268BC0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100268C8C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100260724(a1, a2, v6, v7, v8);
}

uint64_t sub_100268D14()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_100268D54()
{
  sub_100260BF4(*(char **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100268D60(unint64_t a1, void *a2, int a3)
{
  LODWORD(v91) = a3;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  uint64_t v96 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v83[-v12];
  __chkstk_darwin(v11);
  uint64_t v94 = &v83[-v14];
  uint64_t v15 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v83[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_3:
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          __break(1u);
        }
        id v20 = *(id *)(a1 + 32);
      }
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      id v22 = a2;
      if (!a2) {
        id v22 = v21;
      }
      Class v92 = (Class)v21;
      unint64_t v23 = self;
      id v98 = 0;
      id v24 = a2;
      id v93 = v22;
      id v25 = [v23 archivedDataWithRootObject:v22 requiringSecureCoding:1 error:&v98];
      id v26 = v98;
      if (v25)
      {
        uint64_t v89 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v90 = v27;

        uint64_t v28 = *(void **)&v3[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
        unint64_t v87 = v3;
        unint64_t v88 = v10;
        if (v28) {
          id v29 = [v28 configuration];
        }
        else {
          id v29 = [self configurationForImportingDocumentContentTypes:0 mode:1];
        }
        id v31 = v29;
        id v98 = 0;
        id v32 = [v23 archivedDataWithRootObject:v31 requiringSecureCoding:1 error:&v98];
        id v33 = v98;
        if (v32)
        {
          id v86 = v31;
          uint64_t v34 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v88 = (unsigned char *)v35;

          (*(void (**)(unsigned char *, void, uint64_t))(v16 + 104))(v18, enum case for DOCUserActivityIdentifier.quickLook(_:), v15);
          DOCUserActivityIdentifier.rawValue.getter();
          (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
          id v36 = objc_allocWithZone((Class)NSUserActivity);
          NSString v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v38 = [v36 initWithActivityType:v37];

          sub_1000CBE70(&qword_100707EF0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10059B760;
          *(void *)(inited + 32) = DOCUserActivityFPItemKey.getter();
          *(void *)(inited + 40) = v40;
          *(void *)(inited + 48) = 0xD00000000000001ELL;
          *(void *)(inited + 56) = 0x80000001005E00B0;
          sub_10049D5B0(inited);
          swift_setDeallocating();
          swift_arrayDestroy();
          Class isa = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v38 setRequiredUserInfoKeys:isa];

          sub_1000CBE70(&qword_10070BD40);
          uint64_t v42 = swift_initStackObject();
          *(_OWORD *)(v42 + 16) = xmmword_1005A0230;
          id v98 = (id)DOCUserActivityFPItemKey.getter();
          unint64_t v99 = v43;
          AnyHashable.init<A>(_:)();
          *(void *)(v42 + 96) = &type metadata for Data;
          uint64_t v44 = v89;
          unint64_t v45 = v90;
          *(void *)(v42 + 72) = v89;
          *(void *)(v42 + 80) = v45;
          id v98 = (id)0xD00000000000001ELL;
          unint64_t v99 = 0x80000001005E00B0;
          sub_100168CBC(v44, v45);
          AnyHashable.init<A>(_:)();
          *(void *)(v42 + 168) = &type metadata for Data;
          unint64_t v46 = (unint64_t)v88;
          *(void *)(v42 + 144) = v34;
          *(void *)(v42 + 152) = v46;
          id v98 = (id)0xD000000000000019;
          unint64_t v99 = 0x80000001005E00D0;
          uint64_t v85 = v34;
          sub_100168CBC(v34, v46);
          AnyHashable.init<A>(_:)();
          *(void *)(v42 + 240) = &type metadata for Bool;
          *(unsigned char *)(v42 + 216) = v91 & 1;
          sub_100494384(v42);
          Class v47 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v38 addUserInfoEntriesFromDictionary:v47];

          uint64_t v48 = (char *)[objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions) init];
          id v101 = (void *)type metadata accessor for UIWindowSceneProminentPlacement();
          uint64_t v102 = sub_100265880(&qword_10070BD78, (void (*)(uint64_t))&type metadata accessor for UIWindowSceneProminentPlacement);
          sub_100052C70((uint64_t *)&v98);
          static UIWindowScenePlacement<>._largeProminentPlacement()();
          UIWindowSceneActivationRequestOptions.placement.setter();
          id v49 = *(id *)&v87[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window];
          uint64_t v50 = v48;
          if (v49) {
            id v49 = [v49 windowScene];
          }
          Class v58 = v92;
          [v48 setRequestingScene:v49];

          sub_10009E6C4(0, (unint64_t *)&unk_10070BD80);
          id v59 = v38;
          v104.value.super.super.Class isa = 0;
          v104.is_nil = 0;
          Class v92 = UIWindowSceneActivationConfiguration.init(userActivity:options:preview:)((NSUserActivity)v59, v104, v105).super.isa;
          [(objc_class *)v92 setOptions:v48];
          static Logger.Application.getter();
          id v60 = v58;
          id v61 = v59;
          id v62 = v60;
          id v63 = v61;
          uint64_t v64 = Logger.logObject.getter();
          os_log_type_t v65 = static os_log_type_t.debug.getter();
          int v66 = v65;
          BOOL v67 = os_log_type_enabled(v64, v65);
          uint64_t v91 = v62;
          if (v67)
          {
            uint64_t v68 = swift_slowAlloc();
            id v69 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v68 = 138412546;
            unint64_t v87 = v48;
            id v70 = v63;
            int v84 = v66;
            id v98 = v62;
            unint64_t v71 = v62;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *id v69 = v62;

            *(_WORD *)(v68 + 12) = 2112;
            id v98 = v63;
            id v72 = v63;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v69[1] = v70;

            id v63 = v70;
            uint64_t v48 = v87;
            _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v84, "Requesting new Quick Look scene creation for item: %@ with activation activity: %@", (uint8_t *)v68, 0x16u);
            sub_1000CBE70(&qword_100707CC0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v64 = v62;
          }
          id v73 = v93;
          uint64_t v74 = v86;

          (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v94, v95);
          id v75 = [self sharedApplication];
          uint64_t v76 = swift_allocObject();
          *(void *)(v76 + 16) = v73;
          uint64_t v102 = (uint64_t)sub_10026A314;
          uint64_t v103 = v76;
          id v98 = _NSConcreteStackBlock;
          unint64_t v99 = 1107296256;
          id v100 = sub_1001950CC;
          id v101 = &unk_10069BCC0;
          uint64_t v77 = _Block_copy(&v98);
          uint64_t v78 = v92;
          id v79 = v73;
          swift_release();
          [v75 _requestSceneSessionActivationWithConfiguration:v78 errorHandler:v77];

          _Block_release(v77);
          sub_100021020(v85, (unint64_t)v88);

          return sub_100021020(v89, v90);
        }
        uint64_t v51 = v33;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        sub_100021020(v89, v90);
        uint64_t v10 = v88;
      }
      else
      {
        uint64_t v30 = v26;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }
      static Logger.Application.getter();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = swift_slowAlloc();
        id v98 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 136315394;
        uint64_t v97 = sub_10009B0E4(0xD00000000000003BLL, 0x80000001005E0070, (uint64_t *)&v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v54 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v55 = Error.localizedDescription.getter();
        uint64_t v97 = sub_10009B0E4(v55, v56, (uint64_t *)&v98);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s: Failed to encode FPItem in to data. Error: %s", (uint8_t *)v54, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v96 + 8))(v10, v95);
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  static Logger.Application.getter();
  char v80 = Logger.logObject.getter();
  os_log_type_t v81 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    id v98 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 136315138;
    uint64_t v97 = sub_10009B0E4(0xD00000000000003BLL, 0x80000001005E0070, (uint64_t *)&v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s: items was empty.", v82, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v96 + 8))(v13, v95);
}

uint64_t sub_100269A44()
{
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

void sub_100269A94(void *a1)
{
  sub_10026140C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_100269AA4()
{
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

void sub_100269AEC(unint64_t a1)
{
  sub_100261200(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_100269AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v43 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v41 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v13 = dispatch_group_create();
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  unint64_t v16 = (unint64_t)a1 >> 62;
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_6;
  }
  uint64_t v37 = v7;
  uint64_t v38 = v4;
  uint64_t v4 = swift_slowAlloc();
  uint64_t v35 = swift_slowAlloc();
  aBlock[0] = v35;
  *(_DWORD *)uint64_t v4 = 136315394;
  unint64_t v46 = (void *)sub_10009B0E4(0xD00000000000002ALL, 0x80000001005E0040, aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v4 + 12) = 2048;
  unint64_t v36 = (unint64_t)a1 >> 62;
  if (v16) {
    goto LABEL_22;
  }
  uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    unint64_t v46 = (void *)v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s start preparing items from: %ld nodes", (uint8_t *)v4, 0x16u);
    os_log_type_t v15 = v35;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v37);
    uint64_t v4 = v38;
    unint64_t v16 = v36;
LABEL_6:
    if (v16)
    {
      if (a1 < 0) {
        os_log_type_t v15 = a1;
      }
      else {
        os_log_type_t v15 = a1 & 0xF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v8) {
        goto LABEL_15;
      }
    }
    if (v8 >= 1) {
      break;
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      ++v18;
      dispatch_group_enter(v13);
      swift_getObjectType();
      id v20 = (void *)swift_allocObject();
      _OWORD v20[2] = v13;
      uint64_t v20[3] = v19;
      v20[4] = v11;
      swift_retain();
      uint64_t v21 = v13;
      swift_unknownObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();
      swift_unknownObjectRelease();
      swift_release();
    }
    while (v8 != v18);
  }
  else
  {
    uint64_t v22 = 0;
    do
    {
      uint64_t v23 = *(void *)(a1 + 8 * v22++ + 32);
      swift_unknownObjectRetain();
      dispatch_group_enter(v13);
      swift_getObjectType();
      id v24 = (void *)swift_allocObject();
      void v24[2] = v13;
      void v24[3] = v23;
      v24[4] = v11;
      swift_retain();
      id v25 = v13;
      swift_unknownObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();
      swift_unknownObjectRelease();
      swift_release();
    }
    while (v8 != v22);
  }
LABEL_15:
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v26 = (void *)static OS_dispatch_queue.main.getter();
  unint64_t v27 = (CFAbsoluteTime *)swift_allocObject();
  void v27[2] = Current;
  uint64_t v28 = v39;
  uint64_t v29 = v40;
  *((void *)v27 + 3) = v11;
  *((void *)v27 + 4) = v28;
  *((void *)v27 + 5) = v29;
  aBlock[4] = (uint64_t)sub_10026A258;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  void aBlock[3] = (uint64_t)&unk_10069BBF8;
  uint64_t v30 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v31 = v41;
  static DispatchQoS.unspecified.getter();
  unint64_t v46 = _swiftEmptyArrayStorage;
  sub_100265880((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  id v32 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();

  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v4);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v44);
  swift_release();
  return swift_release();
}

void sub_10026A20C(void *a1)
{
  sub_100261504(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10026A218()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10026A258()
{
  return sub_1002617E4(*(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(double *)(v0 + 16));
}

uint64_t sub_10026A26C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026A2B4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

void sub_10026A304()
{
  sub_10026138C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_10026A314(uint64_t a1)
{
  return sub_100261AEC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10026A31C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10026A35C(uint64_t a1, uint64_t a2)
{
  return sub_10025AFEC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10026A368()
{
  return sub_10026AFE4((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_10025B578);
}

uint64_t sub_10026A380()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026A3B8(uint64_t a1, uint64_t a2)
{
  return sub_10025B698(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10026A3C0()
{
  sub_100021020(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026A400()
{
  return sub_1002596BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10026A410(uint64_t a1, uint64_t a2)
{
  return sub_100258198(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10026A41C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100258758(v2, v3);
}

void sub_10026A480(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_10026A488()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10026A554(uint64_t a1, uint64_t a2)
{
  return sub_10026A670(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100256A6C);
}

uint64_t sub_10026A570()
{
  return sub_10026A7F8((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100256FA8);
}

uint64_t sub_10026A58C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10026A658(uint64_t a1, uint64_t a2)
{
  return sub_10026A670(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10025F5F8);
}

uint64_t sub_10026A670(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7, v8);
}

uint64_t sub_10026A70C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10026A7E0()
{
  return sub_10026A7F8((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10025FD24);
}

uint64_t sub_10026A7F8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4, v5);
}

uint64_t sub_10026A870()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10026A900(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10025FF08(a1, v4);
}

uint64_t sub_10026A970()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10026A9B8()
{
  sub_1002602E0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10026A9C4(uint64_t a1)
{
  return sub_1002603FC(a1, *(void **)(v1 + 16));
}

void sub_10026A9D0()
{
  sub_1002562B4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10026A9D8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10026AAC0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(NSObject **)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100255E38(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_10026AB70()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10026AC44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(void **)(v2 + 16);
  int v7 = *(unsigned __int8 *)(v2 + 24);
  int v8 = *(unsigned __int8 *)(v2 + 25);
  uint64_t v9 = *(void *)(v2 + 32);
  uint64_t v10 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100254B5C(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_10026ACD4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026AD14()
{
  return swift_release();
}

uint64_t sub_10026AD1C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10026AD58()
{
  return sub_1002521E4(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10026AD60()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026ADA0(uint64_t a1)
{
  return sub_100252710(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10026ADAC()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10026ADF4(uint64_t a1)
{
  return sub_1003010D4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10026AE04()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10026AE54()
{
  sub_1004DE320(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_10026AE64(void *a1, uint64_t a2, unint64_t a3)
{
}

void sub_10026AE88(void *a1)
{
}

void sub_10026AEAC(uint64_t a1, unint64_t a2)
{
}

void sub_10026AED0(uint64_t a1, void *a2)
{
  sub_10024EED4(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

void sub_10026AED8()
{
  sub_10024FA3C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10026AEE4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10026AFCC()
{
  return sub_10026AFE4((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_10024F678);
}

uint64_t sub_10026AFE4(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v4, v1 + v3, v5);
}

uint64_t sub_10026B088()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10026B0D0(uint64_t a1)
{
  sub_100263804(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10026B0DC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10026B11C(uint64_t a1)
{
  sub_1002629BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10026B128()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10026B170()
{
  return sub_10026302C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

id sub_10026B284(char a1)
{
  if (!a1)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v2 = result;
      unint64_t v3 = 0xD00000000000001DLL;
      unint64_t v4 = 0xD00000000000004ELL;
      unint64_t v10 = 0x80000001005E0950;
      uint64_t v5 = "Could not infer parent folder";
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (a1 == 1)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v2 = result;
      unint64_t v3 = 0xD00000000000001BLL;
      unint64_t v4 = 0xD000000000000036;
      unint64_t v10 = 0x80000001005E08F0;
      uint64_t v5 = "Folder could not be created";
LABEL_7:
      unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
LABEL_10:
      v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v7._object = (void *)0xEB00000000656C62;
      v8._uint64_t countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v7, (NSBundle)v2, v8, *(Swift::String *)&v4)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v2 = result;
    unint64_t v4 = 0xD00000000000004CLL;
    unint64_t v10 = 0x80000001005E0880;
    unint64_t v6 = 0x80000001005E0860;
    unint64_t v3 = 0xD000000000000014;
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

id sub_10026B3F0()
{
  return sub_10026B284(*v0);
}

unint64_t sub_10026B408()
{
  unint64_t result = qword_100712F80;
  if (!qword_100712F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712F80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCLinkDeferredLocalizedError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10026B528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCLinkDeferredLocalizedError()
{
  return &type metadata for DOCLinkDeferredLocalizedError;
}

unint64_t sub_10026B564()
{
  unint64_t result = qword_10070BE50;
  if (!qword_10070BE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BE50);
  }
  return result;
}

id DOCBarButtonItem.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBarButtonItem();
  return [super init];
}

uint64_t type metadata accessor for DOCBarButtonItem()
{
  return self;
}

id DOCBarButtonItem.__deallocating_deinit()
{
  return sub_10026B920(type metadata accessor for DOCBarButtonItem);
}

id sub_10026B830(char a1)
{
  int v2 = a1 & 1;
  id result = [v1 isHidden];
  if (result != v2)
  {
    unsigned __int8 v4 = [v1 isHidden];
    uint64_t v5 = OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup__isHiddenExternalClientSetting;
    v1[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup__isHiddenExternalClientSetting] = v4;
    unsigned int v6 = (objc_class *)type metadata accessor for DOCBarButtonItemGroup();
    v9.receiver = v1;
    v9.super_class = v6;
    id result = [super isHidden];
    if (v1[v5] == 1)
    {
      if (result) {
        return result;
      }
      uint64_t v7 = 1;
    }
    else if (v1[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_hasVisibleItems] == 1)
    {
      if ((result & 1) == 0) {
        return result;
      }
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = v1[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_autoHideIfItemsHidden];
      if (result == v7) {
        return result;
      }
    }
    v8.receiver = v1;
    v8.super_class = v6;
    return [super setHidden:v7];
  }
  return result;
}

id sub_10026B908()
{
  return sub_10026B920(type metadata accessor for DOCBarButtonItemGroup);
}

id sub_10026B920(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCBarButtonItemStorage()
{
  return self;
}

uint64_t sub_10026B97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_10026B984(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  objc_super v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t sub_10026B9DC(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_10026BA38(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)id result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)id result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCBarButtonItemStorage.ItemStorage()
{
  return sub_1000D21B0();
}

id sub_10026BAA0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isHidden];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10026BAD4(unsigned __int8 *a1, id *a2)
{
  return [*a2 setHidden:*a1];
}

uint64_t sub_10026BAE8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10026BB24()
{
  unint64_t result = qword_10070BFE0;
  if (!qword_10070BFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFE0);
  }
  return result;
}

unint64_t sub_10026BB7C()
{
  unint64_t result = qword_10070BFE8;
  if (!qword_10070BFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070BFE8);
  }
  return result;
}

uint64_t sub_10026BBD0()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10026BC04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10026BC20()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_100737200);
  sub_10009D098(v6, (uint64_t)qword_100737200);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_10026BE38()
{
  uint64_t v0 = sub_1000CBE70(&qword_10070C080);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_10070C088);
  __chkstk_darwin(v1);
  sub_10026DB38();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005E0C40;
  v2._uint64_t countAndFlagsBits = 0xD000000000000025;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_10070C090);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10026BFD8()
{
  uint64_t v0 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v0, qword_100737218);
  uint64_t v1 = sub_10009D098(v0, (uint64_t)qword_100737218);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

void *sub_10026C060()
{
  uint64_t v0 = type metadata accessor for DOCFileEntity();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  IntentParameter.wrappedValue.getter();
  unint64_t v4 = v12;
  uint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v8 = *(void *)(v1 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001173A0(v7, (uint64_t)v3);
      id v9 = *(id *)&v3[*(int *)(v0 + 32)];
      sub_100117404((uint64_t)v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)v12;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10026C1EC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  v2[8] = *(void *)(type metadata accessor for DOCFileEntity() - 8);
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_10026C344, 0, 0);
}

uint64_t sub_10026C344()
{
  static Logger.AppIntents.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[DuplicateFiles] Performing DuplicateFiles intent", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[18] = v7;
  v0[19] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  static Logger.AppIntents.getter();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[DuplicateFiles] Fetching items", v10, 2u);
    swift_slowDealloc();
  }
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[10];

  v7(v11, v12);
  unint64_t v13 = (unint64_t)sub_10026C060();
  unint64_t v14 = v13;
  v0[20] = v13;
  unint64_t v15 = v13 >> 62;
  if (!(v13 >> 62))
  {
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    static Logger.AppIntents.getter();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[DuplicateFiles] Error while fetching items", v46, 2u);
      swift_slowDealloc();
    }
    uint64_t v47 = v0[12];
    uint64_t v48 = v0[10];

    v7(v47, v48);
    sub_10026DB8C();
    swift_allocError();
    *id v49 = 0;
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v43) {
    goto LABEL_31;
  }
LABEL_7:
  id v16 = [objc_allocWithZone((Class)type metadata accessor for DOCActionManager()) init];
  swift_bridgeObjectRetain();
  if (v15)
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t v17 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    unint64_t v17 = v14;
  }
  char v18 = sub_1003E5230(v17, 0);
  swift_bridgeObjectRelease();

  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    static Logger.AppIntents.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[DuplicateFiles] Error: canDuplicate returned NO", v25, 2u);
      swift_slowDealloc();
    }
    uint64_t v26 = v0[13];
    uint64_t v27 = v0[10];

    v7(v26, v27);
    sub_10026DB8C();
    swift_allocError();
    *uint64_t v28 = 1;
LABEL_34:
    swift_willThrow();
    goto LABEL_35;
  }
  static Logger.AppIntents.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 134217984;
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v0[5] = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[DuplicateFiles] Duplicating %ld items", v21, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v7(v0[15], v0[10]);
  id v29 = [self defaultManager];
  v0[21] = v29;
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_22;
    }
  }
  else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    uint64_t v30 = (void *)swift_task_alloc();
    v0[22] = v30;
    v30[2] = v14;
    v30[3] = _swiftEmptyArrayStorage;
    v30[4] = v29;
    id v31 = (void *)swift_task_alloc();
    v0[23] = v31;
    uint64_t v32 = sub_1000CBE70(&qword_100708810);
    *id v31 = v0;
    v31[1] = sub_10026CBB0;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000023, 0x80000001005E0C10, sub_10026DBE0, v30, v32);
  }
  sub_10026DBEC();
  static NSError.noSuchFileError.getter();
  swift_willThrow();

  swift_bridgeObjectRelease();
  static Logger.AppIntents.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v36 = 138412290;
    swift_errorRetain();
    uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v37 = v38;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[DuplicateFiles] Error: Generic error: %@", v36, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v39 = (void (*)(uint64_t, uint64_t))v0[18];
  uint64_t v40 = v0[14];
  uint64_t v41 = v0[10];

  v39(v40, v41);
  sub_10026DB8C();
  swift_allocError();
  unsigned char *v42 = 1;
  swift_willThrow();
  swift_errorRelease();
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = (uint64_t (*)(void))v0[1];
  return v50();
}

uint64_t sub_10026CBB0()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_10026CF04;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_10026CCCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10026CCCC()
{
  uint64_t v1 = (void *)v0[21];
  swift_bridgeObjectRelease();

  unint64_t v2 = v0[2];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_100190F48(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v0[8];
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5 + 32);
    }
    sub_100162CCC(v7, v0[9]);
    unint64_t v9 = _swiftEmptyArrayStorage[2];
    unint64_t v8 = _swiftEmptyArrayStorage[3];
    if (v9 >= v8 >> 1) {
      sub_100190F48(v8 > 1, v9 + 1, 1);
    }
    uint64_t v10 = v0[9];
    ++v5;
    _swiftEmptyArrayStorage[2] = v9 + 1;
    sub_100142DFC(v10, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v9);
  }
  while (v3 != v5);
LABEL_13:
  swift_bridgeObjectRelease();
  v0[4] = _swiftEmptyArrayStorage;
  sub_1000CBE70((uint64_t *)&unk_10070C060);
  sub_100142E60();
  static IntentResult.result<A>(value:)();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10026CF04()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  static Logger.AppIntents.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[DuplicateFiles] Error: Generic error: %@", v3, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 80);

  v6(v7, v8);
  sub_10026DB8C();
  swift_allocError();
  *unint64_t v9 = 1;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10026D15C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_100704FC8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100737200, a1);
}

uint64_t sub_10026D194@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_100704FD0, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100737218, a1);
}

uint64_t sub_10026D1D0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10000CB70;
  return sub_10026C1EC(a1, v4);
}

uint64_t sub_10026D270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10026D55C();
  *a1 = result;
  return result;
}

uint64_t sub_10026D298(uint64_t a1)
{
  unint64_t v2 = sub_10026DB38();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for DuplicateFilesIntent()
{
  return &type metadata for DuplicateFilesIntent;
}

uint64_t sub_10026D2E4()
{
  return sub_100073DF0(&qword_10070BFF8, (uint64_t *)&unk_10070C000);
}

uint64_t sub_10026D320()
{
  return sub_100073DF0((unint64_t *)&unk_100707AB0, (uint64_t *)&unk_10070C010);
}

uint64_t sub_10026D35C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10026D554()
{
  return sub_10026D35C();
}

uint64_t sub_10026D55C()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  id v29 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v28 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v27 = (char *)&v22 - v5;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v6 - 8);
  id v25 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v23 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  os_log_type_t v24 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000CBE70(&qword_1007075E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v17(v11, v16, v8);
  char v18 = v25;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v23);
  uint64_t v32 = 0;
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  uint64_t v19 = type metadata accessor for IntentDialog();
  os_log_type_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v27, 1, 1, v19);
  v20(v28, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, enum case for InputConnectionBehavior.default(_:), v31);
  sub_1000CBF40(&qword_1007075F0);
  return IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

unint64_t sub_10026DB38()
{
  unint64_t result = qword_10070C040;
  if (!qword_10070C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10070C040);
  }
  return result;
}

unint64_t sub_10026DB8C()
{
  unint64_t result = qword_10070C058;
  if (!qword_10070C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C058);
  }
  return result;
}

uint64_t sub_10026DBE0(uint64_t a1)
{
  return sub_10053FB0C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

unint64_t sub_10026DBEC()
{
  unint64_t result = qword_100707ED0;
  if (!qword_100707ED0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100707ED0);
  }
  return result;
}

uint64_t sub_10026DC2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DuplicateFilesIntent.DuplicateFilesIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10026DD24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateFilesIntent.DuplicateFilesIntentError()
{
  return &type metadata for DuplicateFilesIntent.DuplicateFilesIntentError;
}

unint64_t sub_10026DD60()
{
  unint64_t result = qword_10070C098;
  if (!qword_10070C098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C098);
  }
  return result;
}

Files::DOCPreviewRouter::InAppContext __swiftcall DOCPreviewRouter.InAppContext.init(animated:presentingVC:)(Swift::Bool animated, UIViewController presentingVC)
{
  Swift::Bool v2 = animated;
  result.presentingVC = presentingVC;
  result.animateCGFloat d = v2;
  return result;
}

uint64_t *DOCPreviewRouter.shared.unsafeMutableAddressor()
{
  if (qword_100704FD8 != -1) {
    swift_once();
  }
  return &static DOCPreviewRouter.shared;
}

uint64_t sub_10026DE08()
{
  type metadata accessor for DOCPreviewRouter();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  static DOCPreviewRouter.shareCGFloat d = result;
  return result;
}

uint64_t static DOCPreviewRouter.shared.getter()
{
  if (qword_100704FD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static DOCPreviewRouter.shared.setter(uint64_t a1)
{
  if (qword_100704FD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static DOCPreviewRouter.shareCGFloat d = a1;
  return swift_release();
}

uint64_t (*static DOCPreviewRouter.shared.modify())()
{
  if (qword_100704FD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_10026DFBC(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Preview.getter();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v13[1] = a2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    v13[2] = sub_10009B0E4(0xD000000000000038, 0x80000001005E0D60, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Interaction] 2. %s presentation completed. Calling handler", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (a1) {
    return a1(result);
  }
  return result;
}

void _s5Files16DOCPreviewRouterC7present10contentsOf24contextIfPresentingInApp10didPresentyAA27DOCQLItemsPreviewControllerC_AC0jK7ContextVyycSgtF_0(void *a1, int a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = a3;
  static Logger.Preview.getter();
  id v15 = v14;
  id v16 = a1;
  id v17 = v15;
  id v18 = v16;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v37 = v10;
    uint64_t v23 = v22;
    uint64_t v24 = swift_slowAlloc();
    int v34 = v21;
    id v25 = (void *)v24;
    uint64_t v36 = swift_slowAlloc();
    aBlock[0] = v36;
    *(_DWORD *)uint64_t v23 = 136315650;
    int v39 = a2;
    uint64_t v40 = sub_10009B0E4(0xD000000000000038, 0x80000001005E0D60, aBlock);
    uint64_t v38 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2112;
    uint64_t v35 = v11;
    uint64_t v40 = (uint64_t)v17;
    id v26 = v17;
    os_log_t v33 = v19;
    uint64_t v27 = a5;
    id v28 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v25 = v17;

    *(_WORD *)(v23 + 22) = 2112;
    uint64_t v40 = (uint64_t)v18;
    id v29 = v18;
    a4 = v38;
    LOBYTE(a2) = v39;
    a5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v25[1] = v18;

    os_log_t v30 = v33;
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v34, "[Interaction] 1. %s Received request to present (on %@): %@", (uint8_t *)v23, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a4;
  *(void *)(v31 + 24) = a5;
  aBlock[4] = (uint64_t)sub_10026E6B8;
  aBlock[5] = v31;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  void aBlock[3] = (uint64_t)&unk_10069C868;
  uint64_t v32 = _Block_copy(aBlock);
  sub_1000C0640(a4);
  swift_release();
  [v17 presentViewController:v18 animated:a2 & 1 completion:v32];
  _Block_release(v32);
}

uint64_t type metadata accessor for DOCPreviewRouter()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCPreviewRouter.InAppContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v3 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCPreviewRouter.InAppContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v3 = *(void **)(a2 + 8);
  id v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for DOCPreviewRouter.InAppContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for DOCPreviewRouter.InAppContext()
{
  return &type metadata for DOCPreviewRouter.InAppContext;
}

uint64_t sub_10026E678()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10026E6B8()
{
  return sub_10026DFBC(*(uint64_t (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24));
}

char *sub_10026E6C4()
{
  uint64_t result = (char *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v35._object = (void *)0x80000001005E0E40;
    v2._uint64_t countAndFlagsBits = 0x73746E65636552;
    v2._object = (void *)0xE700000000000000;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v35._uint64_t countAndFlagsBits = 0xD000000000000043;
    Swift::String v5 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v35);

    BOOL v6 = sub_10026E944();
    uint64_t v7 = (objc_class *)type metadata accessor for DOCEverywhereSearchScope();
    uint64_t v8 = (char *)objc_allocWithZone(v7);
    uint64_t v9 = OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_trashedItemsMembership;
    *(void *)&v8[OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_trashedItemsMembership] = 1;
    *(Swift::String *)&v8[OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_displayName] = v5;
    *(void *)&v8[v9] = v6;
    v34.receiver = v8;
    v34.super_class = v7;
    id v10 = [super init];
    uint64_t v11 = sub_10018EEE8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_10018EEE8((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    id v14 = &v11[16 * v13];
    *((void *)v14 + 4) = v10;
    *((void *)v14 + 5) = &off_1006B4DE8;
    id v15 = sub_10026EA30();
    if (v15)
    {
      unint64_t v16 = *((void *)v11 + 2);
      unint64_t v17 = *((void *)v11 + 3);
      id v18 = v15;
      if (v16 >= v17 >> 1) {
        uint64_t v11 = sub_10018EEE8((char *)(v17 > 1), v16 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v16 + 1;
      uint64_t v19 = &v11[16 * v16];
      *((void *)v19 + 4) = v18;
      *((void *)v19 + 5) = &off_1006B4DA8;
    }
    sub_10026EC88();
    if (v20)
    {
      uint64_t v22 = v20;
      uint64_t v23 = v21;
      unint64_t v24 = *((void *)v11 + 2);
      unint64_t v25 = *((void *)v11 + 3);
      swift_unknownObjectRetain();
      if (v24 >= v25 >> 1) {
        uint64_t v11 = sub_10018EEE8((char *)(v25 > 1), v24 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v24 + 1;
      id v26 = &v11[16 * v24];
      *((void *)v26 + 4) = v22;
      *((void *)v26 + 5) = v23;
      swift_unknownObjectRelease();
    }
    id v27 = sub_10026EF74();
    if (v27)
    {
      id v29 = v27;
      uint64_t v30 = v28;
      unint64_t v31 = *((void *)v11 + 2);
      unint64_t v32 = *((void *)v11 + 3);
      swift_unknownObjectRetain();
      if (v31 >= v32 >> 1) {
        uint64_t v11 = sub_10018EEE8((char *)(v32 > 1), v31 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v31 + 1;
      os_log_t v33 = &v11[16 * v31];
      *((void *)v33 + 4) = v29;
      *((void *)v33 + 5) = v30;
      swift_unknownObjectRelease();
    }
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10026E944()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  Swift::String v2 = *(id *)((char *)v1 + *(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 48));
  if (v2 && ([v2 isTrashed] & 1) != 0) {
    return 0;
  }
  id v4 = [*v1 identifier];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  BOOL v3 = (v5 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v7 != v8)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_10026EA30()
{
  sub_10026F29C();
  if ((v1 & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v3 = (void *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v4 = (void *)v3[1];
    swift_unknownObjectRetain();
    if (v4) {
      goto LABEL_7;
    }
LABEL_15:
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  id v4 = *(void **)(*v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
  swift_unknownObjectRetain();
LABEL_7:
  id v6 = [v4 providerDomainID];
  swift_unknownObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  id v9 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) displayName];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (((*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
     || (id v13 = *(id *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
         self,
         uint64_t v14 = swift_dynamicCastObjCClass(),
         v13,
         !v14))
    && (id v15 = [*(id *)(v0 + v8) supportedSearchFilters]) != 0)
  {

    char v16 = 1;
  }
  else
  {
    char v16 = 0;
  }
  BOOL v17 = sub_10026E944();
  id v18 = (objc_class *)type metadata accessor for DOCFileProviderSearchScope();
  uint64_t v19 = objc_allocWithZone(v18);
  uint64_t v20 = OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_shouldPerformServerSearch;
  v19[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_shouldPerformServerSearch] = 0;
  uint64_t v21 = OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_trashedItemsMembership;
  *(void *)&v19[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_trashedItemsMembership] = 1;
  uint64_t v22 = (uint64_t *)&v19[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_displayName];
  *uint64_t v22 = v10;
  v22[1] = v12;
  *(void *)&v19[OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_providerDomainIdentifier] = v7;
  v19[v20] = v16;
  *(void *)&v19[v21] = v17;
  v23.receiver = v19;
  v23.super_class = v18;
  return [super init];
}

void sub_10026EC88()
{
  uint64_t v1 = v0;
  sub_10026F3A8();
  if ((v2 & 1) == 0) {
    return;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v3)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v6 = v5;
    uint64_t v11 = sub_10026F564();
    uint64_t v13 = v12;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      id v14 = v6;
    }
    else
    {
      id v15 = *(void **)(v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      id v16 = v6;
      id v17 = v15;
      self;
      uint64_t v18 = swift_dynamicCastObjCClass();

      if (v18) {
        goto LABEL_13;
      }
    }
    id v19 = [*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
    if (v19)
    {

      char v20 = 1;
LABEL_14:
      BOOL v21 = sub_10026E944();
      uint64_t v22 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      objc_super v23 = objc_allocWithZone(v22);
      uint64_t v24 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v23[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      uint64_t v25 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(void *)&v23[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      id v26 = (uint64_t *)&v23[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName];
      *id v26 = v11;
      v26[1] = v13;
      id v27 = &v23[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source];
      *(void *)id v27 = v5;
      v27[8] = 1;
      v23[v24] = v20;
      *(void *)&v23[v25] = v21;
      uint64_t v41 = v23;
      uint64_t v28 = (objc_super *)&v41;
LABEL_20:
      v28->super_class = v22;
      [(objc_super *)v28 init];

      return;
    }
LABEL_13:
    char v20 = 0;
    goto LABEL_14;
  }
  swift_unknownObjectRetain();
  swift_getObjectType();
  id v6 = (id)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v6)
  {
    uint64_t v7 = sub_10026F564();
    uint64_t v9 = v8;
    if (*(unsigned char *)(v4 + 16))
    {
      id v10 = v6;
    }
    else
    {
      id v29 = *(void **)v4;
      id v30 = v6;
      id v31 = v29;
      self;
      uint64_t v32 = swift_dynamicCastObjCClass();

      if (v32) {
        goto LABEL_18;
      }
    }
    id v33 = [*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
    if (v33)
    {

      char v34 = 1;
LABEL_19:
      BOOL v35 = sub_10026E944();
      uint64_t v22 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
      uint64_t v36 = objc_allocWithZone(v22);
      uint64_t v37 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch;
      v36[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
      uint64_t v38 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership;
      *(void *)&v36[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
      int v39 = (uint64_t *)&v36[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName];
      *int v39 = v7;
      v39[1] = v9;
      uint64_t v40 = &v36[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source];
      *(void *)uint64_t v40 = v6;
      v40[8] = 0;
      v36[v37] = v34;
      *(void *)&v36[v38] = v35;
      v42.receiver = v36;
      uint64_t v28 = &v42;
      goto LABEL_20;
    }
LABEL_18:
    char v34 = 0;
    goto LABEL_19;
  }
}

id sub_10026EF74()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5)
  {

    id result = (id)swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v9)
  {
    uint64_t v10 = v9 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v10 + 16)) {
      return 0;
    }
    id v11 = *(id *)v10;
    id v12 = *(id *)v10;
    uint64_t v13 = sub_10026F564();
    uint64_t v15 = v14;
    id v16 = (objc_class *)type metadata accessor for DOCItemCollectionSearchScope();
    id v17 = objc_allocWithZone(v16);
    uint64_t v18 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch;
    v17[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch] = 0;
    uint64_t v19 = OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership;
    *(void *)&v17[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership] = 1;
    char v20 = (uint64_t *)&v17[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName];
    *char v20 = v13;
    v20[1] = v15;
    BOOL v21 = &v17[OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source];
    *(void *)BOOL v21 = v11;
    v21[8] = 1;
    v17[v18] = 0;
    *(void *)&v17[v19] = 2;
    v22.receiver = v17;
    v22.super_class = v16;
    return [super init];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10026F110()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v2 + 16) & 1) != 0
      || (id v3 = *(id *)v2, self, v4 = swift_dynamicCastObjCClass(), v3, !v4))
    {
      char v12 = 0;
      return v12 & 1;
    }
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
       + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type;
    if (*(unsigned char *)(v5 + 8))
    {
      id v6 = *(void **)v5;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
      if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10) {
        char v12 = 1;
      }
      else {
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      id v13 = v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return v12 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10026F29C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    if (!swift_unknownObjectRetain()) {
      return;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
  if (v3)
  {

    id v4 = [*(id *)(v0 + v2) supportedSearchFilters];
    if (v4)
    {
      uint64_t v5 = v4;
      type metadata accessor for NSFileProviderSearchFilter(0);
      uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v7 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      if (!v7) {
        return;
      }
      goto LABEL_8;
    }
LABEL_14:
    __break(1u);
    return;
  }
LABEL_8:
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    if (swift_unknownObjectRetain()) {
      swift_unknownObjectRelease();
    }
  }
}

void sub_10026F3A8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16)) {
    goto LABEL_5;
  }
  if (!swift_unknownObjectRetain()) {
    goto LABEL_7;
  }
  swift_unknownObjectRelease();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
LABEL_5:
    id v3 = *(void **)(*v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    id v3 = (void *)v2[1];
    swift_unknownObjectRetain();
    if (!v3) {
      goto LABEL_12;
    }
  }
  unsigned __int8 v4 = [v3 isRootItem];
  swift_unknownObjectRelease();
  if ((v4 & 1) == 0)
  {
LABEL_12:
    uint64_t v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
    id v8 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) supportedSearchFilters];
    if (!v8) {
      return;
    }

    id v9 = [*(id *)(v0 + v7) supportedSearchFilters];
    if (v9)
    {
      uint64_t v10 = v9;
      type metadata accessor for NSFileProviderSearchFilter(0);
      uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v12 = NSFileProviderSearchFilterScopedToDirectory;
      sub_100082AC0(v12, v11);
      swift_bridgeObjectRelease();

      return;
    }
LABEL_17:
    __break(1u);
    return;
  }
LABEL_7:
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v5 = *(id *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();

    if (v6) {
      sub_10026F110();
    }
  }
}

uint64_t sub_10026F564()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
LABEL_25:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
    || (id v2 = *(id *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
        self,
        uint64_t v3 = swift_dynamicCastObjCClass(),
        v2,
        !v3))
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        uint64_t v11 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
        {
LABEL_12:
          id v12 = *(void **)(*(void *)v11 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
          swift_unknownObjectRetain();
LABEL_23:
          id v22 = [v12 displayName];
          swift_unknownObjectRelease();
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v23 = String.doc_localizedQuotedString.getter();
          swift_bridgeObjectRelease();
          return v23;
        }
        if (swift_unknownObjectRetain())
        {
          swift_unknownObjectRelease();
          if (*(unsigned char *)(v11 + 16)) {
            goto LABEL_12;
          }
          id v12 = *(void **)(v11 + 8);
          swift_unknownObjectRetain();
          if (v12) {
            goto LABEL_23;
          }
        }
        goto LABEL_25;
      }
    }
  }
  uint64_t v13 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  uint64_t v14 = *(void **)(v13 + 24);
  if (!v14)
  {
LABEL_20:
    id v20 = [*(id *)v13 displayName];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v21;
  }
  id v15 = v14;
  id v16 = [v15 displayName];
  if (!v16)
  {

    goto LABEL_20;
  }
  id v17 = v16;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  if ([v15 isTaggedItemsSource])
  {
    uint64_t v18 = String.doc_localizedQuotedString.getter();

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v18;
}

id sub_10026F8A4(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  id v9 = objc_allocWithZone((Class)UILabel);
  char v10 = v4;
  id v11 = [v9 init];
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_label] = v11;
  id v12 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity] = v12;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0C30;
  *(void *)(v13 + 32) = v12;
  *(void *)(v13 + 40) = v11;
  uint64_t v24 = v13;
  specialized Array._endMutation()();
  id v14 = objc_allocWithZone((Class)UIStackView);
  sub_100270024();
  id v15 = v12;
  id v16 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v14 initWithArrangedSubviews:isa];

  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_stackView] = v18;
  v23.receiver = v10;
  v23.super_class = (Class)type metadata accessor for DOCItemCollectionLoadingView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_10026FB80();
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
  *(void *)(v20 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v20 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v21 = v19;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v21;
}

void sub_10026FB80()
{
  uint64_t v1 = self;
  id v2 = [v1 clearColor];
  [v0 setBackgroundColor:v2];

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_label];
  id v4 = [v1 secondaryLabelColor];
  [v3 setTextColor:v4];

  id v5 = (id)_DocumentManagerBundle();
  if (v5)
  {
    uint64_t v6 = v5;
    v24._object = (void *)0x80000001005E0FE0;
    v7._uint64_t countAndFlagsBits = 0x474E4944414F4CLL;
    v7._object = (void *)0xE700000000000000;
    v8._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v8._object = (void *)0xEB00000000656C62;
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0xD000000000000046;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v24);

    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v10];

    id v11 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
    [v3 setFont:v11];

    [v3 setAdjustsFontForContentSizeCategory:1];
    id v12 = [v0 traitCollection];
    id v13 = [v12 preferredContentSizeCategory];

    LOBYTE(v12) = UIContentSizeCategory.isAccessibilityCategory.getter();
    id v14 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity];
    if (v12) {
      uint64_t v15 = 101;
    }
    else {
      uint64_t v15 = 100;
    }
    [*(id *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity] setActivityIndicatorViewStyle:v15];
    [v14 startAnimating];
    id v16 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_stackView];
    [v16 setAlignment:3];
    [v16 setAxis:1];
    [v16 setSpacing:10.0];
    [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v0 addSubview:v16];
    id v17 = [v16 centerXAnchor];
    id v18 = [v0 centerXAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    [v19 setActive:1];
    id v20 = [v16 centerYAnchor];
    id v21 = [v0 centerYAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21];

    [v22 setActive:1];
  }
  else
  {
    __break(1u);
  }
}

void sub_10026FF20()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity);
}

id sub_10026FF70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionLoadingView();
  [super dealloc];
}

uint64_t type metadata accessor for DOCItemCollectionLoadingView()
{
  return self;
}

unint64_t sub_100270024()
{
  unint64_t result = qword_10070A1A0;
  if (!qword_10070A1A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070A1A0);
  }
  return result;
}

id sub_100270064(char *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(v2) = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v4 = *(void **)&a1[OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_activity];
  if (v2) {
    uint64_t v5 = 101;
  }
  else {
    uint64_t v5 = 100;
  }

  return [v4 setActivityIndicatorViewStyle:v5];
}

void sub_100270224(char *a1, void (*a2)(double, double, double, double))
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_34;
  }
  id v4 = Strong;
  id v5 = [Strong dataSource];

  unint64_t v6 = sub_10008A504();
  if (v6 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
    {
LABEL_33:
      uint64_t Strong = (void *)swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  unint64_t v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
  }
  else if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v6 + 8 * v8 + 32);
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_31;
  }
  id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
  NSString v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 toolbarItems];

  if (!v11)
  {
LABEL_34:
    ((void (*)(void *, double, double, double, double))a2)(Strong, 0.0, 0.0, 0.0, 0.0);
    return;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v38 = a2;
  if (!(v6 >> 62))
  {
    a2 = *(void (**)(double, double, double, double))((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v12 = a1;
    swift_bridgeObjectRetain();
    if (a2) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v37 = a1;
  swift_bridgeObjectRetain();
  a2 = (void (*)(double, double, double, double))_CocoaArrayWrapper.endIndex.getter();
  if (!a2)
  {
LABEL_32:

    swift_bridgeObjectRelease();
    a2 = v38;
    goto LABEL_33;
  }
LABEL_12:
  unint64_t v13 = v6 & 0xC000000000000001;
  uint64_t v39 = OBJC_IVAR____TtC5Files40DOCServiceActionPopoverTrackerController_action;
  unint64_t v40 = v6;
  uint64_t v14 = 4;
  while (1)
  {
    if (v13) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v6 + 8 * v14);
    }
    id v16 = v15;
    id v17 = (void (*)(double, double, double, double))(v14 - 3);
    if (__OFADD__(v14 - 4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    type metadata accessor for DOCActionToolBarItem();
    uint64_t v18 = swift_dynamicCastClass();
    if (v18)
    {
      id v19 = (void *)v18;
      id v20 = *(void **)(v18 + OBJC_IVAR____TtC5Files20DOCActionToolBarItem_docAction);
      if (v20)
      {
        unint64_t v21 = v13;
        id v22 = a2;
        objc_super v23 = *(void **)&a1[v39];
        sub_10009E6C4(0, &qword_100708700);
        id v24 = v16;
        id v25 = v23;
        id v26 = v20;
        char v27 = static NSObject.== infix(_:_:)();

        a2 = v22;
        unint64_t v13 = v21;
        unint64_t v6 = v40;

        if (v27) {
          break;
        }
      }
    }

    ++v14;
    if (v17 == a2) {
      goto LABEL_32;
    }
  }

  swift_bridgeObjectRelease_n();
  id v42 = v24;
  id v28 = [v19 _doc_ipi_viewForPresenting];
  [v19 _doc_ipi_rectForPresenting];
  [v28 convertRect:0 toView:];
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;
  double v36 = v35;

  v38(v30, v32, v34, v36);
}

id sub_100270754()
{
  return sub_100271C48(type metadata accessor for DOCServiceActionPopoverTrackerController);
}

uint64_t type metadata accessor for DOCServiceActionPopoverTrackerController()
{
  return self;
}

uint64_t sub_100270874(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  id v10 = [*(id *)&v4[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_configuration] hostIdentifier];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id v14 = [self mainBundle];
  id v15 = [v14 bundleIdentifier];

  if (v15)
  {
    uint64_t v28 = a4;
    uint64_t v16 = a3;
    uint64_t v17 = a1;
    char v18 = a2;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    if (v11 == v19 && v13 == v21)
    {
      swift_bridgeObjectRelease_n();
      a2 = v18;
      a1 = v17;
      a3 = v16;
      a4 = v28;
      goto LABEL_11;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v18;
    a1 = v17;
    a3 = v16;
    a4 = v28;
    if (v23) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v9 + 16) = 1;
LABEL_11:
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v4;
  *(void *)(v24 + 24) = a3;
  *(void *)(v24 + 32) = a4;
  *(void *)(v24 + 40) = a1;
  *(unsigned char *)(v24 + 48) = a2 & 1;
  *(void *)(v24 + 56) = v9;
  aBlock[4] = sub_100271E58;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_10069CA78;
  id v25 = _Block_copy(aBlock);
  id v26 = v4;
  swift_retain();
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v25);
  return swift_release();
}

uint64_t sub_100270AC4(char *a1, void (*a2)(double, double, double, double), uint64_t a3, void **a4, char a5, uint64_t a6)
{
  uint64_t v24 = a4;
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (void (*)(char *, uint64_t))((char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return ((uint64_t (*)(uint64_t, double, double, double, double))a2)(Strong, 0.0, 0.0, 0.0, 0.0);
  }
  uint64_t v19 = (void *)Strong;
  sub_1001BAD5C(*(void **)&a1[OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node], (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {

    uint64_t Strong = sub_10011631C((uint64_t)v13);
    return ((uint64_t (*)(uint64_t, double, double, double, double))a2)(Strong, 0.0, 0.0, 0.0, 0.0);
  }
  (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v15 + 32))(v17, v13, v14);
  uint64_t v21 = v19;
  id v22 = a1;
  swift_retain();
  swift_retain();
  sub_100215ADC(v17, v21, v21, v22, v24, a5 & 1, a6, a2, a3);

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_100270D00(char *a1, uint64_t a2, void **a3, int a4, uint64_t a5, void (*a6)(double, double, double, double), uint64_t a7)
{
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC5Files38DOCServiceItemPopoverTrackerController_node);
  swift_beginAccess();
  LOBYTE(a5) = *(unsigned char *)(a5 + 16);
  swift_retain();
  sub_100212318(v13, a3, a4, a5, a1, a6, a7);
  return swift_release();
}

uint64_t sub_100270DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

id sub_100270EA8()
{
  return sub_100271C48(type metadata accessor for DOCServiceItemPopoverTrackerController);
}

uint64_t type metadata accessor for DOCServiceItemPopoverTrackerController()
{
  return self;
}

void sub_100270F40(uint64_t a1, char a2, char a3, double a4)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v9 = Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress;
  id v10 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress);
  id v29 = (id)Strong;
  if (a2)
  {
    if (v10
      && (sub_1002211F8(v10),
          swift_unknownObjectRetain(),
          sub_10021FC9C(v10),
          swift_getObjectType(),
          unint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node),
          char v12 = DOCNode.isEqualTo(node:)(),
          swift_unknownObjectRelease(),
          (v12 & 1) != 0))
    {
      if (!*(void *)v9)
      {
LABEL_29:
        __break(1u);
        return;
      }
      unint64_t v13 = *(void *)(v9 + 8);
      id v14 = *(id *)v9;
    }
    else
    {
      id v14 = [objc_allocWithZone((Class)NSProgress) init];
      unint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
      unint64_t v11 = v13;
    }
    swift_unknownObjectRetain();
    if (a3)
    {
      uint64_t v20 = -1;
      uint64_t v21 = &selRef_setTotalUnitCount_;
      goto LABEL_18;
    }
    [v14 setTotalUnitCount:1000];
    double v22 = a4 * 1000.0;
    if ((~COERCE__INT64(a4 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v22 > -9.22337204e18)
      {
        if (v22 < 9.22337204e18)
        {
          uint64_t v20 = (uint64_t)v22;
          uint64_t v21 = &selRef_setCompletedUnitCount_;
LABEL_18:
          [v14 *v21 v20];
          uint64_t v23 = sub_1001DB1A4(v11);
          if (v23)
          {
            uint64_t v24 = v23;
            id v25 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v23) + 0x1F8))();

            if (v25)
            {
              id v26 = *(void **)&v25[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress];
              *(void *)&v25[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = v14;
              id v27 = v14;
              sub_100090210(v26);
            }
          }
          id v28 = *(id *)v9;
          *(void *)uint64_t v9 = v14;
          *(void *)(v9 + 8) = v13;
          id v19 = v14;
          swift_unknownObjectRetain();
          sub_10021FC9C(v28);
          swift_unknownObjectRelease();
          goto LABEL_22;
        }
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  *(void *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  sub_10021FC9C(v10);
  uint64_t v15 = sub_1001DB1A4(*(void *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node));
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v15) + 0x1F8))();

    if (v17)
    {
      char v18 = *(void **)&v17[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress];
      *(void *)&v17[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = 0;
      sub_100090210(v18);

      id v19 = v29;
      id v29 = v18;
LABEL_22:
    }
  }
}

uint64_t sub_100271388(uint64_t a1, void (*a2)(id, uint64_t, double, double, double, double), uint64_t a3, char a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v13 = (char *)Strong;
    id v14 = *(void **)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
    swift_retain();
    sub_10021511C(v14, 0, a4 & 1, 0, v13, a2, a3);

    return swift_release();
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      char v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)char v18 = 136315138;
      v19[1] = v18 + 4;
      void v19[2] = sub_10009B0E4(0xD00000000000002DLL, 0x80000001005E11A0, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s itemCollection is nil. Can not get display imformation.", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return ((uint64_t (*)(void, void, double, double, double, double))a2)(0, 0, 0.0, 0.0, 0.0, 0.0);
  }
}

uint64_t sub_100271618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

void sub_10027176C(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node);
    id v4 = (void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility);
    void *v4 = 0;
    v4[1] = v3;
    id v8 = (id)Strong;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    id v5 = sub_1001DB1A4(v3);
    if (v5)
    {
      unint64_t v6 = v5;
      id v7 = *(id *)&v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];

      [v7 setHidden:1];
    }
  }
}

uint64_t sub_100271874(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v7 = (char *)result;
    id v8 = (void *)(result + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility);
    *id v8 = 0;
    v8[1] = 0;
    swift_unknownObjectRelease();
    uint64_t v9 = sub_1001DB1A4(*(void *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_node));
    if (v9)
    {
      uint64_t v10 = v9;
      id v11 = *(id *)&v9[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];

      [v11 setHidden:0];
    }
    char v12 = &v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    sub_10000F3B0(*(void *)v12 == 2, (uint64_t)_swiftEmptyArrayStorage);
    if (*(void *)(a1 + OBJC_IVAR____TtC5Files30DOCServiceTransitionController_sceneIdentifier + 8))
    {
      swift_bridgeObjectRetain();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v13 = 0;
    }
    id v14 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v13);

    uint64_t v15 = (void **)&v14[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess();
    uint64_t v16 = *v15;
    *uint64_t v15 = 0;
    sub_1000D7C50(v16);

    static Logger.UI.getter();
    os_log_type_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

void sub_100271B3C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  v11[4] = a4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_1000666D8;
  v11[3] = a5;
  uint64_t v9 = _Block_copy(v11);
  id v10 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v9);
}

id sub_100271C30()
{
  return sub_100271C48(type metadata accessor for DOCServiceTransitionController);
}

id sub_100271C48(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCServiceTransitionController()
{
  return self;
}

uint64_t sub_100271D04()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100271D3C()
{
  return sub_100271874(*(void *)(v0 + 16));
}

void sub_100271D44()
{
  sub_10027176C(*(void *)(v0 + 16));
}

uint64_t sub_100271D4C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100271D84()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100271D9C()
{
  return sub_100271E9C(41);
}

uint64_t sub_100271DA4()
{
  return sub_100271388(*(void *)(v0 + 16), *(void (**)(id, uint64_t, double, double, double, double))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_100271DB4()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100271DEC()
{
  sub_100270F40(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25), *(double *)(v0 + 32));
}

uint64_t sub_100271E00()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100271E10()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100271E58()
{
  return sub_100270AC4(*(char **)(v0 + 16), *(void (**)(double, double, double, double))(v0 + 24), *(void *)(v0 + 32), *(void ***)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_100271E70()
{
  return sub_100271E9C(40);
}

void sub_100271E78()
{
  sub_100270224(*(char **)(v0 + 16), *(void (**)(double, double, double, double))(v0 + 24));
}

uint64_t sub_100271E84()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100271E94()
{
  return sub_100271E9C(40);
}

uint64_t sub_100271E9C(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_100271F34()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  swift_release();
  if (!v7 && swift_dynamicCastObjCProtocolConditional())
  {
    id v3 = v1;
    uint64_t v4 = (void *)UIViewController.associatedObjectStorage.getter();
    swift_getKeyPath();
    type metadata accessor for DOCPresentationPreheatController();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = 0x3FE0000000000000;
    swift_unknownObjectWeakInit();
    *(void *)(v5 + 32) = _swiftEmptyArrayStorage;
    *(unsigned char *)(v5 + 40) = 0;
    swift_unknownObjectWeakAssign();
    uint64_t v7 = v5;
    dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  }
  unint64_t v6 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  if (v7)
  {
    sub_10010FFB0(2);
    swift_release();
  }
}

uint64_t sub_100272094()
{
  uint64_t v0 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UIButton.Configuration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100705278 != -1) {
    swift_once();
  }
  id v7 = [(id)qword_100737698 ellipsisMenuItemImageName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self systemImageNamed:v8];

  sub_100301B28(v9);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  UIButton.configuration.setter();

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100272510(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton) = a1;
  if (v3 != (a1 & 1))
  {
    uint64_t v4 = v1;
    id v5 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_100274360);
    [v5 setHidden:(*(unsigned char *)(v4 + v2) & 1) == 0];

    unint64_t v6 = sub_1002725F0();
    if (v6)
    {
      id v7 = v6;
      int v8 = *(unsigned __int8 *)(v4 + v2);
      int v9 = v6[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown];
      v6[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown] = v8;
      if (v8 != v9) {
        sub_100301F9C();
      }
    }
    sub_100272660();
  }
}

unsigned char *sub_1002725F0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView;
  uint64_t v2 = *(unsigned char **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView);
  int v3 = v2;
  if (v2 == (unsigned char *)1)
  {
    int v3 = sub_100274264(v0);
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_1000D8158(v4);
  }
  sub_1000D8148(v2);
  return v3;
}

void sub_100272660()
{
  uint64_t v1 = v0;
  if (![v0 isViewLoaded]) {
    return;
  }
  uint64_t v2 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 != 1) {
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)&v1[v2];
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    double v9 = *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 16];
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_15;
  }
LABEL_7:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v7 = *(void **)(v5 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v8 = [v7 isShared];
  swift_unknownObjectRelease();
  double v9 = 4.0;
  if ((v8 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_17:
  id v10 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow, (uint64_t (*)(uint64_t))sub_100274ECC);
  id v11 = [v10 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62) {
    goto LABEL_60;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v14 = 4;
    while (1)
    {
      id v15 = (v12 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v12 + 8 * v14);
      uint64_t v16 = v15;
      uint64_t v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      unsigned __int8 v18 = [v15 isHidden];

      if ((v18 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        double v19 = *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 24];
        goto LABEL_28;
      }
      ++v14;
      if (v17 == v13) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_60:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  double v19 = 4.0;
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v20 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  uint64_t v21 = &v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  double v22 = *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  uint64_t v23 = (char *)*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView];
  uint64_t v24 = (char *)sub_100272F88();
  id v25 = (char *)sub_100275B48(v24);
  if (v25)
  {
    id v26 = v25;
    [*(id *)&v23[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v25 afterView:v22];

    uint64_t v23 = v24;
    uint64_t v24 = v26;
  }

  double v27 = *((double *)v21 + 1);
  id v28 = (char *)*(id *)&v1[v20];
  id v29 = sub_100273048();
  double v30 = sub_100275B48(v29);
  if (v30)
  {
    double v31 = v30;
    [*(id *)&v28[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v30 afterView:v27];

    id v28 = v29;
    id v29 = v31;
  }

  double v32 = (char *)*(id *)&v1[v20];
  double v33 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
  double v34 = sub_100275B48(v33);
  if (v34)
  {
    double v35 = v34;
    [*(id *)&v32[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v34 afterView:v9];

    double v32 = v33;
    double v33 = v35;
  }

  double v36 = (char *)*(id *)&v1[v20];
  uint64_t v37 = (char *)sub_100273200();
  uint64_t v38 = (char *)sub_100275B48(v37);
  if (v38)
  {
    uint64_t v39 = v38;
    [*(id *)&v36[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v38 afterView:16.0];

    double v36 = v37;
    uint64_t v37 = v39;
  }

  unint64_t v40 = (char *)*(id *)&v1[v20];
  uint64_t v41 = (char *)sub_100274C18();
  id v42 = (char *)sub_100275B48(v41);
  if (v42)
  {
    uint64_t v43 = v42;
    [*(id *)&v40[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v42 afterView:16.0];

    unint64_t v40 = v41;
    uint64_t v41 = v43;
  }

  uint64_t v44 = (char *)*(id *)&v1[v20];
  id v45 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow, (uint64_t (*)(uint64_t))sub_100274ECC);
  unint64_t v46 = sub_100275B48(v45);
  if (!v46)
  {

    if (v21[56] == 1) {
      goto LABEL_40;
    }
LABEL_44:
    int v52 = 0;
    goto LABEL_45;
  }
  uint64_t v47 = v46;
  [*(id *)&v44[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v46 afterView:v19];

  if ((v21[56] & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v48 = (char *)*(id *)&v1[v20];
  id v49 = (char *)sub_10027377C(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator);
  uint64_t v50 = (char *)sub_100275B48(v49);
  if (v50)
  {
    uint64_t v51 = v50;
    [*(id *)&v48[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v50 afterView:18.0];

    uint64_t v48 = v49;
    id v49 = v51;
  }

  int v52 = 1;
LABEL_45:
  double v53 = *((double *)v21 + 4);
  uint64_t v54 = (char *)*(id *)&v1[v20];
  uint64_t v55 = (char *)sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_10027335C, (uint64_t (*)(void))sub_10027355C);
  unint64_t v56 = (char *)sub_100275B48(v55);
  if (v56)
  {
    id v57 = v56;
    [*(id *)&v54[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v56 afterView:v53];

    uint64_t v54 = v55;
    uint64_t v55 = v57;
  }

  double v58 = *((double *)v21 + 5);
  id v59 = (char *)*(id *)&v1[v20];
  id v60 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_100273614);
  id v61 = sub_100275B48(v60);
  if (v61)
  {
    id v62 = v61;
    [*(id *)&v59[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v61 afterView:v58];

    if ((v52 & 1) == 0) {
      goto LABEL_54;
    }
LABEL_51:
    id v63 = (char *)*(id *)&v1[v20];
    uint64_t v64 = (char *)sub_10027377C(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator);
    os_log_type_t v65 = (char *)sub_100275B48(v64);
    if (v65)
    {
      int v66 = v65;
      [*(id *)&v63[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v65 afterView:21.0];

      id v63 = v64;
      uint64_t v64 = v66;
    }

    goto LABEL_54;
  }

  if (v52) {
    goto LABEL_51;
  }
LABEL_54:
  double v67 = *((double *)v21 + 6);
  uint64_t v68 = (char *)*(id *)&v1[v20];
  unint64_t v71 = (char *)sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_100273930, (uint64_t (*)(void))sub_100273950);
  id v69 = (char *)sub_100275B48(v71);
  if (v69)
  {
    id v70 = v69;
    [*(id *)&v68[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] setCustomSpacing:v69 afterView:v67];

    uint64_t v68 = v71;
    unint64_t v71 = v70;
  }
}

id sub_100272F04()
{
  return sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_100273614);
}

id sub_100272F24(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100272F88()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView);
  }
  else
  {
    type metadata accessor for DOCImageContainerFittingView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v5 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"documentPreviewTappedWithSender:"];
    [v4 addGestureRecognizer:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

unsigned char *sub_100273048()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel);
  if (v2)
  {
    id v3 = *(unsigned char **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel);
  }
  else
  {
    id v4 = sub_1002817B0();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

unsigned char *sub_1002730A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(unsigned char **)(v1 + *a1);
  }
  else
  {
    id v5 = sub_100273108(v1);
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

unsigned char *sub_100273108(uint64_t a1)
{
  type metadata accessor for DOCCopyableLabel();
  uint64_t v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v3 = v2;
  uint64_t v4 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy;
  char v5 = v2[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy];
  v2[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 1;
  if ((v5 & 1) == 0)
  {
    [v2 setUserInteractionEnabled:1];
    id v6 = sub_100222E74();
    char v7 = v6[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled];
    v6[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = v3[v4];
    sub_1004DF730(v7);
  }
  id v8 = [self secondaryLabelColor];
  sub_1002235E8(v8);

  [v3 setFont:*(void *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 64)];
  return v3;
}

id sub_100273200()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) init];
    id v5 = [self secondaryLabelColor];
    [v4 setTextColor:v5];

    [v4 setFont:*(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 64)];
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1002732D4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)DOCItemInfoOpenButton) init];
    [v4 setDelegate:v0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10027335C()
{
  return sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataSectionLabel, (uint64_t (*)(uint64_t))sub_10027337C);
}

id sub_10027337C(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:4];
  [v2 setFont:*(void *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 72)];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v3) = 1148829696;
  [v2 setContentHuggingPriority:1 forAxis:v3];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v5 = result;
    v10._object = (void *)0x80000001005E1F00;
    v6._uint64_t countAndFlagsBits = 0x74616D726F666E49;
    v6._object = (void *)0xEB000000006E6F69;
    v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 0xD000000000000037;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v10);

    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setText:v9];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002734FC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *a1;
  id v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = sub_1002737EC(v3, a2, a3);
    Swift::String v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    id v5 = 0;
  }
  id v9 = v5;
  return v6;
}

char *sub_10027355C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0
                  + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_100273614);
    id v6 = objc_allocWithZone((Class)type metadata accessor for DOCLevelOfDetailButton(0));
    id v7 = sub_10046B55C(v5);
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    Swift::String v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    uint64_t v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

char *sub_100273614(uint64_t a1)
{
  if (qword_100705248 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1007375C8;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
  objc_allocWithZone((Class)type metadata accessor for DOCMetadataView());
  swift_bridgeObjectRetain();
  id v4 = v3;
  id v5 = sub_100471E14(v2, v3);
  id v6 = v5;
  char v7 = v5[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment];
  v5[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment] = 1;
  if ((v7 & 1) == 0) {
    [v5 setNeedsLayout];
  }
  sub_100471788(1);
  [v6 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  Swift::String v8 = self;
  id v9 = v6;
  id v10 = [v8 clearColor];
  [v9 setBackgroundColor:v10];

  *(void *)&v9[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate + 8] = &off_10069CD30;
  swift_unknownObjectWeakAssign();
  return v9;
}

id sub_10027377C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)DOCSeparatorView) init];
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1002737EC(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0C30;
  *(void *)(v5 + 32) = a2();
  *(void *)(v5 + 40) = a3();
  specialized Array._endMutation()();
  id v6 = objc_allocWithZone((Class)UIStackView);
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithArrangedSubviews:isa];

  LODWORD(v9) = 1148829696;
  [v8 setContentHuggingPriority:1 forAxis:v9];
  [v8 setDistribution:0];
  [v8 setSpacing:15.0];
  [v8 setAlignment:2];
  return v8;
}

id sub_100273930()
{
  return sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsSectionTitleLabel, (uint64_t (*)(uint64_t))sub_100273C90);
}

objc_class *sub_100273950()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton;
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton);
  if (v6)
  {
    id v7 = *(objc_class **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton);
  }
  else
  {
    type metadata accessor for DOCButton();
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v24.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v24).super.super.super.super.isa;
    [(objc_class *)isa setTranslatesAutoresizingMaskIntoConstraints:0];
    LODWORD(v9) = 1148846080;
    [(objc_class *)isa setContentHuggingPriority:0 forAxis:v9];
    LODWORD(v10) = 1148846080;
    [(objc_class *)isa setContentHuggingPriority:1 forAxis:v10];
    id v11 = self;
    unint64_t v12 = isa;

    static UIButton.Configuration.borderless()();
    uint64_t v13 = type metadata accessor for UIButton.Configuration();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 0, 1, v13);
    UIButton.configuration.setter();

    uint64_t v14 = sub_10027355C();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v14;
    aBlock[4] = sub_100282F28;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10041B2E4;
    void aBlock[3] = &unk_10069D418;
    uint64_t v17 = _Block_copy(aBlock);
    unsigned __int8 v18 = v12;
    double v19 = v14;
    swift_release();
    [(objc_class *)v18 setConfigurationUpdateHandler:v17];
    _Block_release(v17);

    uint64_t v20 = *(void **)(v1 + v5);
    *(void *)(v1 + v5) = v18;
    id v7 = v18;

    id v6 = 0;
  }
  id v21 = v6;
  return v7;
}

id sub_100273C90(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:4];
  [v2 setFont:*(void *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 72)];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v3) = 1148829696;
  [v2 setContentHuggingPriority:1 forAxis:v3];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v5 = result;
    v10._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v10._object = (void *)0x80000001005E1EE0;
    v6._object = (void *)0x80000001005E1EC0;
    v6._uint64_t countAndFlagsBits = 0xD000000000000013;
    v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._uint64_t countAndFlagsBits = 1936154964;
    v8._object = (void *)0xE400000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v10);

    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setText:v9];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100273E14()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100273E68();
  }
}

void sub_100273E68()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_unknownObjectRetain();
          }
          swift_getObjectType();
          uint64_t v6 = DOCNode.fpfs_syncFetchFPItem()();
          swift_unknownObjectRelease();
          if (v6)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 beginAddTagsWithItems:isa controller:v0];
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  Class isa = (Class)sub_100273950();
  _s5Files32DOCItemInfoContentViewControllerC014tagsCollectionE0_21didSelectAddTagButtonySo07DOCTagshE0C_So6UIViewCtF_0(isa);
LABEL_18:
}

void sub_100274080(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = (void *)Strong;
    id v4 = (id)_DocumentManagerBundle();
    if (v4)
    {
      uint64_t v5 = v4;
      v11._uint64_t countAndFlagsBits = 0xD000000000000023;
      v11._object = (void *)0x80000001005E1E90;
      v6._object = (void *)0x80000001005E1E70;
      v6._uint64_t countAndFlagsBits = 0xD000000000000017;
      v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v7._object = (void *)0xEB00000000656C62;
      v8._uint64_t countAndFlagsBits = 0x7367615420646441;
      v8._object = (void *)0xE800000000000000;
      Swift::String v9 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v11);

      id v10 = [v3 viewIfLoaded];
      sub_10046B030(v9._countAndFlagsBits, (uint64_t)v9._object, a1, v10);

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1002741C8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)DOCTagsCollectionView) init];
    [v4 setShowsAddTagButton:0];
    [v4 setDelegate:v0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

unsigned char *sub_100274264(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsActionsView) != 1) {
    return 0;
  }
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager);
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
  objc_allocWithZone((Class)type metadata accessor for DOCInfoActionsView());
  id v3 = v1;
  id v4 = sub_100301C0C(v1, v2);
  char v5 = v4[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isLeadingSpacerShown];
  v4[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isLeadingSpacerShown] = 1;
  if ((v5 & 1) == 0) {
    sub_100301F9C();
  }
  char v6 = v4[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown];
  v4[OBJC_IVAR____TtC5Files18DOCInfoActionsView_isTrailingSpacerShown] = 1;
  if ((v6 & 1) == 0) {
    sub_100301F9C();
  }
  swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v4;
}

id sub_100274360()
{
  uint64_t v0 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UIButton.Configuration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  Swift::String v8 = (objc_class *)type metadata accessor for DOCShareButton();
  v19.receiver = objc_allocWithZone(v8);
  v19.super_class = v8;
  swift_retain();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1002826E0;
  *(void *)(v10 + 24) = v7;
  id v11 = v9;
  swift_retain();
  unint64_t v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v11 setDoc_primaryAction:v12];

  if (qword_100705278 != -1) {
    swift_once();
  }
  id v13 = [(id)qword_100737698 ellipsisMenuItemImageName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self systemImageNamed:v14];

  sub_100301B28(v15);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  UIButton.configuration.setter();

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release_n();
  LODWORD(v16) = 1148846080;
  [v11 setContentCompressionResistancePriority:1 forAxis:v16];
  LODWORD(v17) = 1148846080;
  [v11 setContentCompressionResistancePriority:0 forAxis:v17];
  return v11;
}

void sub_100274700()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100274754();
  }
}

uint64_t sub_100274754()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v28 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v9 = dispatch_group_create();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  unint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  double v30 = v5;
  uint64_t v31 = v6;
  uint64_t v29 = v7;
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v27 = static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v10;
    *(void *)(v19 + 24) = v1;
    uint64_t v37 = sub_10028278C;
    uint64_t v38 = (void *)v19;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    double v35 = sub_1000666D8;
    double v36 = &unk_10069CEC8;
    uint64_t v20 = _Block_copy(&aBlock);
    swift_retain();
    id v21 = v1;
    double v22 = v28;
    static DispatchQoS.unspecified.getter();
    double v32 = _swiftEmptyArrayStorage;
    sub_1000BAB34((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v23 = v30;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    UIAction_optional v24 = (void *)v27;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v2);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v31);
    swift_release();
    return swift_release();
  }
  if (v12 >= 1)
  {
    id v25 = v1;
    uint64_t v26 = v3;
    uint64_t v27 = v2;
    uint64_t v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
      {
        id v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v15 = *(void **)(v11 + 8 * v14 + 32);
        swift_unknownObjectRetain();
      }
      ++v14;
      dispatch_group_enter(v9);
      double v16 = (void *)swift_allocObject();
      void v16[2] = v9;
      v16[3] = v15;
      v16[4] = v10;
      uint64_t v37 = sub_100282768;
      uint64_t v38 = v16;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      double v35 = sub_1001B6B50;
      double v36 = &unk_10069CE78;
      double v17 = _Block_copy(&aBlock);
      unsigned __int8 v18 = v9;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      [v15 fetchURL:v17];
      _Block_release(v17);
      swift_unknownObjectRelease();
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    uint64_t v2 = v27;
    uint64_t v1 = v25;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id sub_100274C18()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    specialized Array._endMutation()();
    id v6 = objc_allocWithZone((Class)UIStackView);
    sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v8 = [v6 initWithArrangedSubviews:isa];

    [v8 setAxis:1];
    dispatch_group_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

uint64_t sub_100274D40()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance;
  uint64_t v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance);
  if (v2 != 10) {
    return v2;
  }
  uint64_t v3 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 != 1) {
      goto LABEL_18;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_18;
  }
  unint64_t v5 = *(void *)(v0 + v3);
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_6;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_17;
  }
LABEL_6:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
    swift_bridgeObjectRelease();
    if ([v8 isCloudItem]
      && ([v8 isItemPinned] & 1) != 0
      && ![v8 isExternalDownloadPlaceholder])
    {
      uint64_t v2 = 9;
      *(unsigned char *)(v0 + v1) = 9;
      swift_unknownObjectRelease();
      return v2;
    }
    swift_unknownObjectRelease();
LABEL_18:
    uint64_t v2 = 2;
    *(unsigned char *)(v0 + v1) = 2;
    return v2;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(void **)(v5 + 32);
    swift_unknownObjectRetain();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_100274ECC(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UIStackView) init];
  [v2 setDistribution:0];
  [v2 setAlignment:3];
  uint64_t v3 = self;
  id v4 = v2;
  [v3 itemInfoView];
  swift_getObjCClassMetadata();
  NSString v5 = [(id)swift_getObjCClassFromMetadata() actionsContainer];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v4 setAccessibilityIdentifier:v5];

  uint64_t v6 = sub_1002725F0();
  if (v6)
  {
    uint64_t v7 = v6;
    type metadata accessor for UILayoutPriority(0);
    sub_1000BAB34((unint64_t *)&unk_10070C660, type metadata accessor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v8) = v17;
    [v7 setContentCompressionResistancePriority:0 forAxis:v8];
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_allowOpenButton) == 1)
  {
    id v9 = sub_1002732D4();
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

    id v10 = sub_1002732D4();
    [v4 addArrangedSubview:v10];

    sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    unint64_t v11 = (void *)static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter();
    [v4 addArrangedSubview:v11];
  }
  uint64_t v12 = sub_1002725F0();
  if (v12)
  {
    id v13 = v12;
    [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 addArrangedSubview:v13];
  }
  id v14 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_100274360);
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v15 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_100274360);
  [v4 addArrangedSubview:v15];

  return v4;
}

char *sub_100275188()
{
  uint64_t v1 = OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView;
  id v2 = objc_allocWithZone((Class)UIStackView);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews] = _swiftEmptyArrayStorage;

  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack();
  id v4 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v5 = OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView;
  uint64_t v6 = *(void **)&v4[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView];
  uint64_t v7 = self;
  double v8 = v4;
  id v9 = v6;
  id v10 = [v7 clearColor];
  [v9 setBackgroundColor:v10];

  unint64_t v11 = *(void **)&v4[v5];
  [v11 setLayoutMarginsRelativeArrangement:1];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setAxis:1];
  [v11 setSpacing:15.0];
  [v8 addSubview:v11];
  Class isa = (Class)(id)DOCConstraintsToResizeWithSuperview();
  if (!isa)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [self activateConstraints:isa];

  return v8;
}

void sub_1002754B4(void *a1)
{
  id v2 = v1;
  id v4 = objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView());
  uint64_t v5 = sub_1002755CC(a1, 0);
  uint64_t v6 = &v2[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews];
  swift_beginAccess();
  uint64_t v7 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  double v8 = v7;
  [v2 layoutMargins];
  UIEdgeInsets.horizontalInsetsOnly.getter();
  [v8 setLayoutMargins:];

  [*(id *)&v2[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView] addArrangedSubview:v8];
}

char *sub_1002755CC(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver] = 0;
  *(void *)&v2[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView] = a1;
  *(void *)&v2[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_trailingButton] = a2;
  v31.receiver = v2;
  v31.super_class = (Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView();
  id v5 = a1;
  id v29 = a2;
  uint64_t v6 = (char *)objc_msgSendSuper2(&v31, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v6 addSubview:v5];
  [v6 setPreservesSuperviewLayoutMargins:0];
  [v6 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005A1560;
  id v9 = [v5 leadingAnchor];
  id v10 = [v6 layoutMarginsGuide];
  id v11 = [v10 leadingAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11];
  *(void *)(v8 + 32) = v12;
  id v13 = [v5 trailingAnchor];
  id v14 = [v6 layoutMarginsGuide];
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v8 + 40) = v16;
  id v17 = [v5 topAnchor];
  id v18 = [v6 topAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v8 + 48) = v19;
  id v20 = [v5 bottomAnchor];
  id v21 = [v6 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v8 + 56) = v22;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:isa];

  UIAction_optional v24 = *(void **)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView];
  [v6 setHidden:[v24 isHidden]];
  double v30 = v24;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v25 = v24;
  uint64_t v26 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  uint64_t v27 = *(void **)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver];
  *(void *)&v6[OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver] = v26;

  return v6;
}

void sub_1002759F4(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [v3 setHidden:[v1 isHidden]];
  }
}

void sub_100275A84()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_clientView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_trailingButton));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack16StackElementView_visibilityObserver);
}

id sub_100275AD4()
{
  return sub_10027EEE4((uint64_t (*)(void))type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView);
}

void *sub_100275B48(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id v6 = a1;
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_10028128C(v7);
  swift_bridgeObjectRelease();

  if (!v8)
  {
    static Logger.UI.getter();
    id v9 = v6;
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      id v16 = (void *)swift_slowAlloc();
      id v17 = v12;
      *(_DWORD *)id v12 = 138412290;
      id v19 = v9;
      id v13 = v9;
      uint64_t v18 = v3;
      id v14 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v16 = v9;

      uint64_t v3 = v18;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ERROR: stackElement(forClientView:) unable to locate stack element for view %@", v17, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v10 = v9;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v8;
}

uint64_t sub_100275DA0(unint64_t a1)
{
  if (a1)
  {
    unint64_t v2 = a1;
  }
  else
  {
    uint64_t v3 = &v1[OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_arrangedStackElementViews];
    swift_beginAccess();
    unint64_t v2 = *(void *)v3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  [v1 layoutMargins];
  UIEdgeInsets.horizontalInsetsOnly.getter();
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  if (!(v2 >> 62))
  {
    uint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_6;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_6:
  if (v12 >= 1)
  {
    for (uint64_t i = 0; i != v12; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(v2 + 8 * i + 32);
      }
      id v16 = v15;
      [v15 setLayoutMargins:v5, v7, v9, v11];
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_100275F10()
{
}

uint64_t sub_100275F3C()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files32DOCItemInfoContentViewControllerP33_5854F2584B6BB42CC0BFB2F44FFF0F2910RootHStack_stackView));

  return swift_bridgeObjectRelease();
}

id sub_100275F7C()
{
  return sub_10027EEE4((uint64_t (*)(void))type metadata accessor for DOCItemInfoContentViewController.RootHStack);
}

void sub_100275FE0()
{
  id v21 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView);
  id v1 = sub_100272F88();
  sub_1002754B4(v1);

  unint64_t v2 = sub_100273048();
  sub_1002754B4(v2);

  uint64_t v3 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
  sub_1002754B4(v3);

  id v4 = sub_100273200();
  sub_1002754B4(v4);

  id v5 = sub_100274C18();
  sub_1002754B4(v5);

  id v6 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow, (uint64_t (*)(uint64_t))sub_100274ECC);
  sub_1002754B4(v6);

  int v20 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics + 56);
  if (v20 == 1)
  {
    id v7 = sub_10027377C(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator);
    sub_1002754B4(v7);
  }
  id v8 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_10027335C, (uint64_t (*)(void))sub_10027355C);
  sub_1002754B4(v8);

  id v9 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_100273614);
  sub_1002754B4(v9);

  unint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v10 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain_n();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v11)
    {
LABEL_5:
      uint64_t v12 = 4;
      do
      {
        uint64_t v13 = v12 - 4;
        if ((v10 & 0xC000000000000001) != 0)
        {
          id v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v15 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_22;
          }
        }
        else
        {
          id v14 = *(void **)(v10 + 8 * v12);
          swift_unknownObjectRetain();
          uint64_t v15 = v12 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        if ([v14 isRootItem])
        {
          swift_bridgeObjectRelease_n();
          swift_unknownObjectRelease();
          goto LABEL_19;
        }
        unsigned __int8 v16 = [v14 doc_isCollaborationInvitation];
        swift_unknownObjectRelease();
        if (v16)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_19;
        }
        ++v12;
      }
      while (v15 != v11);
    }
  }
  swift_bridgeObjectRelease_n();
  if (v20)
  {
    id v17 = sub_10027377C(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator);
    sub_1002754B4(v17);
  }
  id v18 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_100273930, (uint64_t (*)(void))sub_100273950);
  sub_1002754B4(v18);

  id v19 = sub_1002741C8();
  sub_1002754B4(v19);

LABEL_19:
}

id sub_100276394()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIScrollView) initWithFrame:0.0, 0.0, 500.0, 500.0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100276468(void *a1, uint64_t a2, char a3, void *a4, id a5)
{
  id v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_documentManager;
  *(void *)&v5[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_documentManager] = 0;
  uint64_t v11 = &v5[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  uint64_t v12 = v5;
  sub_1002815C8((uint64_t)v30);
  long long v13 = v30[3];
  *((_OWORD *)v11 + 2) = v30[2];
  *((_OWORD *)v11 + 3) = v13;
  *((_OWORD *)v11 + 4) = v30[4];
  long long v14 = v30[1];
  *(_OWORD *)uint64_t v11 = v30[0];
  *((_OWORD *)v11 + 1) = v14;
  uint64_t v15 = &v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins];
  *(_OWORD *)uint64_t v15 = xmmword_1005A4420;
  *((_OWORD *)v15 + 1) = xmmword_1005A4420;
  swift_unknownObjectWeakInit();
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton] = 1;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataSectionLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsSectionTitleLabel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView] = 1;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView] = 0;
  v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance] = 10;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow] = 0;
  uint64_t v16 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  *(void *)&v12[v16] = [objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack()) init];
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
  *(void *)&v12[v17] = sub_100494A88((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver] = 0;
  v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 0;
  v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat] = 0;
  id v18 = &v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize];
  *(void *)id v18 = 0;
  *((void *)v18 + 1) = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes] = a2;
  *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration] = a1;
  swift_unknownObjectWeakAssign();
  id v19 = *(void **)&v6[v10];
  *(void *)&v6[v10] = a4;
  id v20 = a1;
  id v21 = a4;

  v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_allowOpenButton] = a3;
  if (a5)
  {
    v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsActionsView] = 1;
    *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager] = a5;
    a5 = a5;
  }
  else
  {
    v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsActionsView] = 0;
    *(void *)&v12[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager] = [objc_allocWithZone((Class)type metadata accessor for DOCActionManager()) init];
  }

  v29.receiver = v12;
  v29.super_class = ObjectType;
  id v22 = [super initWithNibName:0 bundle:0];
  sub_1002768AC();
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10059B760;
  *(void *)(v23 + 32) = type metadata accessor for UITraitDisplayScale();
  *(void *)(v23 + 40) = &protocol witness table for UITraitDisplayScale;
  *(void *)(v23 + 48) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v23 + 56) = &protocol witness table for UITraitUserInterfaceStyle;
  id v24 = v22;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return v24;
}

uint64_t sub_1002768AC()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v41 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = _swiftEmptyArrayStorage;
  id v6 = (void *)(v5 + 16);
  id v7 = dispatch_group_create();
  uint64_t v38 = v0;
  unint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v43 = v2;
  uint64_t v44 = v1;
  if (v9)
  {
    uint64_t v49 = v9 - 1;
    if (v9 >= 1)
    {
      uint64_t v11 = 0;
      unint64_t v48 = v8 & 0xC000000000000001;
      id v45 = &v53;
      long long v36 = xmmword_1005A0030;
      unint64_t v47 = v8;
      while (1)
      {
        if (v48)
        {
          uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v15 = *(void **)(v8 + 8 * v11 + 32);
          swift_unknownObjectRetain();
        }
        dispatch_group_enter(v7);
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v5;
        *(void *)(v16 + 24) = v7;
        swift_getObjectType();
        swift_retain_n();
        uint64_t v17 = v7;
        id v18 = [v15 cachedDomain];
        if (!v18) {
          break;
        }
        id v19 = v18;
        if ((DOCNode.isFPItem.getter() & 1) == 0 || (FPProviderDomain.shouldUseDSEnumeration.getter() & 1) == 0)
        {
          swift_beginAccess();
          swift_unknownObjectRetain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          dispatch_group_leave(v17);
          swift_release();
          swift_release();
LABEL_11:

          unint64_t v8 = v47;
LABEL_12:
          swift_unknownObjectRelease();

          if (v49 == v11) {
            goto LABEL_35;
          }
          goto LABEL_13;
        }
        self;
        id v20 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        if ([v20 isRootItem])
        {
          type metadata accessor for DOCRootNode();
          uint64_t v12 = static DOCRootNode.rootNode(for:)();
          if (v12)
          {
            long long v13 = (void *)v12;
            swift_beginAccess();
            id v46 = v13;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            id v14 = v46;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            dispatch_group_leave(v17);
            swift_release();
            swift_release();
          }
          else
          {
            id v46 = (id)static DOCLog.UI.getter();
            LODWORD(v37) = static os_log_type_t.error.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v26 = swift_allocObject();
            *(_OWORD *)(v26 + 16) = v36;
            *(void *)(v26 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
            *(void *)(v26 + 64) = sub_1000C5A24(&qword_10071B8E0, (unint64_t *)&unk_1007076A0);
            *(void *)(v26 + 32) = v19;
            id v19 = v19;
            id v27 = v46;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            swift_beginAccess();
            swift_unknownObjectRetain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            dispatch_group_leave(v17);
            swift_release();
            swift_release();
          }
          swift_unknownObjectRelease();
          goto LABEL_11;
        }
        if (FPProviderDomain.shouldResolveDSNodeAsFPv2.getter())
        {
          id v46 = self;
          id v21 = (void *)swift_allocObject();
          void v21[2] = v20;
          v21[3] = sub_10028285C;
          unsigned char v21[4] = v16;
          v21[5] = v15;
          uint64_t v55 = sub_1002828E0;
          unint64_t v56 = v21;
          id aBlock = _NSConcreteStackBlock;
          uint64_t v52 = 1107296256;
          double v53 = sub_10000CAE4;
          uint64_t v54 = &unk_10069D058;
          id v22 = _Block_copy(&aBlock);
          uint64_t v37 = v56;
          swift_unknownObjectRetain_n();
          id v23 = v19;
          swift_retain();
          swift_release();
          [v46 fiNodeFromItem:v20 inFPv2Domain:v23 completion:v22];
          _Block_release(v22);

          swift_release();
          swift_release();
          swift_unknownObjectRelease_n();
        }
        else
        {
          id v46 = [self defaultManager];
          id v24 = (void *)swift_allocObject();
          void v24[2] = v20;
          void v24[3] = sub_10028285C;
          v24[4] = v16;
          v24[5] = v15;
          uint64_t v55 = sub_100282888;
          unint64_t v56 = v24;
          id aBlock = _NSConcreteStackBlock;
          uint64_t v52 = 1107296256;
          double v53 = sub_1001B6B50;
          uint64_t v54 = &unk_10069D008;
          id v25 = _Block_copy(&aBlock);
          uint64_t v37 = v56;
          swift_unknownObjectRetain_n();
          swift_retain();
          swift_release();
          [v46 fetchURLForItem:v20 completionHandler:v25];
          _Block_release(v25);

          swift_release();
          swift_release();

          swift_unknownObjectRelease_n();
        }
        unint64_t v8 = v47;
        if (v49 == v11) {
          goto LABEL_35;
        }
LABEL_13:
        ++v11;
      }
      swift_beginAccess();
      swift_unknownObjectRetain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      dispatch_group_leave(v17);
      swift_release();
      swift_release();
      goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_35:
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v28 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v29 = swift_allocObject();
    double v30 = v38;
    *(void *)(v29 + 16) = v5;
    *(void *)(v29 + 24) = v30;
    uint64_t v55 = sub_10028287C;
    unint64_t v56 = (void *)v29;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v52 = 1107296256;
    double v53 = sub_1000666D8;
    uint64_t v54 = &unk_10069CFB8;
    objc_super v31 = _Block_copy(&aBlock);
    swift_retain();
    id v32 = v30;
    double v33 = v39;
    static DispatchQoS.unspecified.getter();
    uint64_t v50 = _swiftEmptyArrayStorage;
    sub_1000BAB34((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v34 = v41;
    uint64_t v35 = v44;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v42);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10027731C(char a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 traitCollection];
  uint64_t v5 = sub_10004A150(&off_10068A738);
  swift_arrayDestroy();
  BOOL v6 = sub_1000951EC(v5);
  swift_bridgeObjectRelease();

  if (v6)
  {
    id v7 = (char *)sub_100272F88();
    unint64_t v8 = &v7[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
    swift_beginAccess();
    if (!*(void *)(*(void *)v8 + 16))
    {
LABEL_11:

      return;
    }
    [*(id *)(*(void *)v8 + 32) fittingSize];
    double v10 = v9;
    double v12 = v11;

    if (v10 != 0.0 || v12 != 0.0)
    {
      if ((a1 & 1) != 0
        || (*(double *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize] == v10
          ? (BOOL v13 = *(double *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize + 8] == v12)
          : (BOOL v13 = 0),
            !v13))
      {
        id v14 = (double *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize];
        *id v14 = v10;
        v14[1] = v12;
        id v7 = (char *)sub_100272F88();
        uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
        uint64_t v16 = &v7[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_nodes];
        swift_beginAccess();
        *(void *)uint64_t v16 = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_100242AF4();
        goto LABEL_11;
      }
    }
  }
}

Swift::Void __swiftcall DOCItemInfoContentViewController.loadView()()
{
  id v1 = sub_100276394();
  [v0 setView:v1];
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidLoad()()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55.receiver = v1;
  v55.super_class = ObjectType;
  [super viewDidLoad];
  id v11 = [v1 view];
  if (v11)
  {
    double v12 = v11;
    uint64_t v51 = v7;
    uint64_t v52 = v4;
    [self itemInfoView];
    swift_getObjCClassMetadata();
    NSString v13 = [(id)swift_getObjCClassFromMetadata() infoContainer];
    if (!v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v12 setAccessibilityIdentifier:v13];

    id v14 = sub_100273048();
    [v14 setNumberOfLines:2];

    uint64_t v15 = sub_100273048();
    [v15 setLineBreakMode:5];

    uint64_t v16 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v16 setNumberOfLines:0];

    uint64_t v17 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v17 setAdjustsFontForContentSizeCategory:1];

    id v18 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v18 setTextAlignment:4];

    id v19 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    [v19 setNumberOfLines:0];

    id v20 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    [v20 setAdjustsFontForContentSizeCategory:1];

    id v21 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    [v21 setTextAlignment:4];

    id v22 = sub_100273200();
    [v22 setNumberOfLines:0];

    id v23 = sub_100273200();
    [v23 setAdjustsFontForContentSizeCategory:1];

    id v24 = sub_100273200();
    [v24 setTextAlignment:4];

    uint64_t v25 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
    [*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView] setTranslatesAutoresizingMaskIntoConstraints:0];
    [*(id *)&v1[v25] setLayoutMargins:*(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins], *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins + 8], *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins + 16], *(double *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins + 24]];
    sub_100275FE0();
    sub_100272660();
    id v26 = sub_100276394();
    [v26 addSubview:*(void *)&v1[v25]];

    id v27 = sub_100276394();
    [v27 setContentInsetAdjustmentBehavior:3];

    id v28 = sub_100276394();
    [v28 setAlwaysBounceVertical:1];

    id v29 = sub_100276394();
    [v29 setDelegate:v1];

    id v30 = sub_100276394();
    [v30 setClipsToBounds:0];

    id v31 = (id)DOCConstraintsToResizeWithSuperview();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v54 = v32;
    id v33 = [*(id *)&v1[v25] widthAnchor];
    id v34 = sub_100276394();
    id v35 = [v34 widthAnchor];

    id v36 = [v33 constraintEqualToAnchor:v35 multiplier:1.0];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v37 = sub_100272F88();
    id v38 = [v37 heightAnchor];

    id v39 = sub_100276394();
    id v40 = [v39 frameLayoutGuide];

    id v41 = [v40 heightAnchor];
    id v42 = [v38 constraintLessThanOrEqualToAnchor:v41 multiplier:0.333333333];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v43 = self;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v43 activateConstraints:isa];

    sub_100277F44();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v45 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10027F3C8;
    aBlock[5] = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_10069CC08;
    unint64_t v47 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000BAB34((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v51);
    unint64_t v48 = *(void *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
    if (v48 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v49)
      {
LABEL_10:
        if ((v48 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_13;
        }
        if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          swift_unknownObjectRetain();
LABEL_13:
          swift_bridgeObjectRelease();
          swift_getObjectType();
          swift_allocObject();
          swift_unknownObjectWeakInit();
          swift_retain();
          DOCNode.fpfs_fetchFPItem(completion:)();
          swift_unknownObjectRelease();
          swift_release_n();
          return;
        }
        __break(1u);
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
LABEL_18:
  __break(1u);
}

void sub_100277F44()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  double v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  double v12 = (char *)&v79 - v11;
  if (![v1 isViewLoaded]) {
    return;
  }
  os_log_type_t v83 = v5;
  NSString v13 = (char *)sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_100273614);
  uint64_t v14 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  *(void *)&v13[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes] = *(void *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100473290();

  uint64_t v15 = (void *)FPActionTag;
  unint64_t v16 = *(void *)&v1[v14];
  swift_bridgeObjectRetain();
  LOBYTE(v15) = sub_1000301E0(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  uint64_t v84 = v3;
  uint64_t v85 = v2;
  if (v15)
  {
    uint64_t v86 = v7;
    static Logger.UI.getter();
    id v18 = v1;
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      unint64_t v88 = (uint8_t *)v82;
      os_log_type_t v81 = v22;
      *(_DWORD *)id v22 = 136315138;
      id v79 = v22 + 4;
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v23 = Array.description.getter();
      LODWORD(v80) = v21;
      id v24 = v18;
      uint64_t v25 = v14;
      uint64_t v26 = v23;
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v29 = v26;
      uint64_t v14 = v25;
      uint64_t v87 = sub_10009B0E4(v29, v28, (uint64_t *)&v88);
      uint64_t v17 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v80, "[Info View]: Nodes can be tagged: %s - showing Tag section", v81, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v86 + 8))(v12, v6);
    id v40 = sub_1002741C8();
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    v41.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v40 setNodes:v41.super.isa];
  }
  else
  {
    static Logger.UI.getter();
    id v30 = v1;
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    LODWORD(v82) = v32;
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v81 = (uint8_t *)swift_slowAlloc();
      unint64_t v88 = v81;
      char v80 = v33;
      *(_DWORD *)id v33 = 136315138;
      id v79 = v33 + 4;
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v34 = Array.description.getter();
      uint64_t v86 = v7;
      uint64_t v35 = v14;
      uint64_t v36 = v34;
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v39 = v36;
      uint64_t v14 = v35;
      uint64_t v87 = sub_10009B0E4(v39, v38, (uint64_t *)&v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v17 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v82, "[Info View]: Nodes CANNOT be tagged: %s - hidding Tag section", v80, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v86 + 8))(v10, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    id v42 = sub_10027377C(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator);
    [v42 v17[183] 1];

    id v43 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_100273930, (uint64_t (*)(void))sub_100273950);
    [v43 v17[183] 1];

    v41.super.Class isa = (Class)sub_1002741C8();
    [v41.super.isa v17[183]:1];
  }

  unint64_t v44 = *(void *)&v1[v14];
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v59 != 1) {
      goto LABEL_27;
    }
  }
  else if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_27:
    id v58 = sub_1002732D4();
    [v58 v17[183] 1];
    goto LABEL_28;
  }
  unint64_t v45 = *(void *)&v1[v14];
  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
  uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v46)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
LABEL_15:
  if ((v45 & 0xC000000000000001) != 0)
  {
    unint64_t v47 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_55;
    }
    unint64_t v47 = *(void **)(v45 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v48 = [v47 contentType];
  uint64_t v49 = v83;
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v50 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
  id v51 = [*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration] documentContentTypes];
  uint64_t v52 = v85;
  uint64_t v53 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v51) = UTType.doc_conformsToAny(inContentTypes:)((Swift::OpaquePointer)v53);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v49, v52);
  if (v51 & 1) != 0 || ([v47 isFolder]) {
    uint64_t v54 = 1;
  }
  else {
    uint64_t v54 = (uint64_t)[*(id *)&v1[v50] isFilesApp];
  }
  id v55 = sub_1002732D4();
  [v55 setNode:v47];

  id v56 = sub_1002732D4();
  [v56 setNodeCanBeOpened:v54];

  id v57 = sub_1002732D4();
  [v57 updateDownloadState];

  id v58 = sub_1002732D4();
  [v58 v17[183]];
  swift_unknownObjectRelease();
LABEL_28:

  uint64_t v60 = sub_10027ABCC();
  sub_10027AE4C(v60, v61);
  swift_bridgeObjectRelease();
  sub_10027B068();
  if (v62)
  {
    id v63 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    NSString v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v63 setText:v64];

    os_log_type_t v65 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    [v65 v17[183]];
  }
  else
  {
    os_log_type_t v65 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView);
    [v65 v17[183] 1];
  }

  unint64_t v66 = *(void *)&v1[v14];
  if (v66 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v73 != 1) {
      goto LABEL_45;
    }
  }
  else if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_45:
    id v72 = sub_100273200();
    [v72 v17[183]:1];
    goto LABEL_46;
  }
  unint64_t v67 = *(void *)&v1[v14];
  if (!(v67 >> 62))
  {
    uint64_t v68 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v68) {
      goto LABEL_35;
    }
LABEL_44:
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_44;
  }
LABEL_35:
  if ((v67 & 0xC000000000000001) != 0)
  {
LABEL_55:
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_38;
  }
  if (!*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  swift_unknownObjectRetain();
LABEL_38:
  swift_bridgeObjectRelease();
  swift_getObjectType();
  DOCNode.syncErrorDescription.getter();
  if (!v69)
  {
    swift_unknownObjectRelease();
    goto LABEL_45;
  }
  id v70 = sub_100273200();
  [v70 v17[183]];

  id v71 = sub_100273200();
  id v72 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v71 setText:v72];
  swift_unknownObjectRelease();

LABEL_46:
  uint64_t v74 = sub_1002725F0();
  if (v74)
  {
    id v75 = v74;
    *(void *)&v74[OBJC_IVAR____TtC5Files18DOCInfoActionsView_nodes] = *(void *)&v1[v14];
    swift_bridgeObjectRetain_n();
    char v76 = != infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v76)
    {
      unint64_t v77 = swift_bridgeObjectRetain();
      sub_1003026C4(v77);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    swift_bridgeObjectRelease();
  }
  sub_10027731C(1);
  sub_10027B420(v78);
  sub_100279BE8();
  sub_100272660();
}

void sub_100278A88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v7[3] = type metadata accessor for DOCItemInfoContentViewController();
      v7[0] = v1;
      uint64_t v5 = *(void (**)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t))(v3 + 8);
      id v6 = v1;
      v5(v7, 1, 1, 0, ObjectType, v3);

      swift_unknownObjectRelease();
      sub_10009B1B8((uint64_t)v7);
    }
    else
    {
    }
  }
}

void sub_100278B68(void *a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCFileEntity();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5 - 8);
  uint64_t v9 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - v10;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v13 = Strong;
    if (a1)
    {
      id v14 = a1;
      sub_100162CCC(v14, (uint64_t)v11);
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_1001173A0((uint64_t)v11, (uint64_t)v9);
      type metadata accessor for MainActor();
      id v16 = v13;
      uint64_t v17 = static MainActor.shared.getter();
      unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      id v19 = (void *)swift_allocObject();
      void v19[2] = v17;
      void v19[3] = &protocol witness table for MainActor;
      v19[4] = v16;
      sub_100142DFC((uint64_t)v9, (uint64_t)v19 + v18);
      sub_10003D154((uint64_t)v4, (uint64_t)&unk_10070C628, (uint64_t)v19);

      swift_release();
      sub_100117404((uint64_t)v11);
    }
    else
    {
    }
  }
}

uint64_t sub_100278DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for DOCFileEntity();
  v5[5] = swift_task_alloc();
  sub_1000CBE70((uint64_t *)&unk_10070C630);
  void v5[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100278EA8, v7, v6);
}

id sub_100278EA8()
{
  id v1 = (void *)v0[2];
  swift_release();
  id result = [v1 view];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = v0[6];
    sub_1001173A0(v0[3], v0[5]);
    sub_1000BAB34(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
    EntityIdentifier.init<A>(for:)();
    uint64_t v5 = type metadata accessor for EntityIdentifier();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    UIView.appEntityIdentifier.setter();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return (id)v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100279034(void *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    id v15 = a1;
    a4();
  }
  else
  {
    uint64_t v9 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10059B760;
    *(void *)(v10 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v10 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v10 + 32) = a3;
    id v11 = a3;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v14 = v13;
    *(void *)(v10 + 96) = &type metadata for String;
    *(void *)(v10 + 104) = sub_100073F48();
    *(void *)(v10 + 72) = v12;
    *(void *)(v10 + 80) = v14;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    ((void (*)(uint64_t))a4)(a6);
  }
}

uint64_t sub_1002791D4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  v31[0] = a5;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)v31 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002827DC(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1001939F8((uint64_t)v16);
    int v21 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10059B760;
    *(void *)(v22 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v22 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v22 + 32) = a3;
    v31[1] = a2;
    id v23 = a3;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v26 = v25;
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = sub_100073F48();
    *(void *)(v22 + 72) = v24;
    *(void *)(v22 + 80) = v26;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t))a4)(a6);
  }
  else
  {
    unint64_t v28 = a4;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v14, v20, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    uint64_t v29 = (void *)static FINode.docNode(from:)();
    sub_1001939F8((uint64_t)v14);
    if (v29)
    {
      id v30 = v29;
      v28();
    }
    else
    {
      ((void (*)(uint64_t))a4)(a6);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

void sub_10027953C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  dispatch_group_leave(a3);
}

uint64_t sub_1002795E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  type metadata accessor for DOCMultiNodeObserver();
  swift_allocObject();
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_10050CA20(v7, 1, 0.25);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_10050D390((uint64_t)sub_1002828EC, v9, (uint64_t)v6);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes) == 1) {
    sub_10050D588();
  }
  sub_1002797FC(v8);
  *(void *)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver) = v8;
  return swift_release();
}

void sub_1002797A0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1002797FC(a1);
  }
}

uint64_t sub_1002797FC(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  *(void *)(v2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes) = v3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v10 != 1) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v4 = *(void **)(v3 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance) = 10;
  swift_unknownObjectRetain();
  id v5 = sub_100272F88();
  id v6 = [v5 interactions];

  sub_1000CBE70((uint64_t *)&unk_10070C5F0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
  swift_bridgeObjectRelease();
  if (!v8)
  {
    id v9 = sub_100272F88();
    sub_1002799F4(v4);
  }
  swift_unknownObjectRelease();
LABEL_14:
  sub_100277F44();

  return swift_unknownObjectRelease();
}

void sub_1002799F4(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  id v17 = (id)DOCNode.fpfs_syncFetchFPItem()();
  if (!v17) {
    return;
  }
  id v4 = [a1 providerDomainID];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
LABEL_10:
      if ((DOCNode.areDiskPropertiesSupported.getter() & 1) == 0)
      {
        uint64_t v11 = (objc_class *)type metadata accessor for DOCDragInteraction();
        uint64_t v12 = (char *)objc_allocWithZone(v11);
        *(void *)&v12[OBJC_IVAR____TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2918DOCDragInteraction_node] = a1;
        v18.receiver = v12;
        v18.super_class = v11;
        swift_unknownObjectRetain();
        [super initWithDelegate:v2];
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1005A04F0;
        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        id v15 = v13;
        sub_1000CBE70((uint64_t *)&unk_10070C5F0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v2 setInteractions:isa];

        return;
      }
      goto LABEL_11;
    }
  }
  if ((objc_msgSend(v17, "doc_isAppContainerRoot", v17) & 1) == 0) {
    goto LABEL_10;
  }
LABEL_11:
}

void sub_100279BE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)type metadata accessor for FPItem.SharingStatusOptions();
  unint64_t v73 = *(v2 - 1);
  id v74 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = type metadata accessor for FPItem.SharingStatusStringType();
  uint64_t v72 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCNodeCollaborationType();
  id v9 = *(uint64_t (***)(char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v46 != 1) {
      goto LABEL_39;
    }
  }
  else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_39:
    id v47 = sub_100274C18();
    [v47 setHidden:1];

    id v48 = *(void **)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView];
    if (v48) {
      [v48 setHidden:1];
    }
    uint64_t v49 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v49 setHidden:1];

    id v74 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v74 setText:0];
    id v50 = v74;

    return;
  }
  unint64_t v14 = *(void *)&v1[v12];
  if (v14 >> 62) {
    goto LABEL_37;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  while (1)
  {
    if ((v14 & 0xC000000000000001) != 0)
    {
      id v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_46;
      }
      id v16 = *(void **)(v14 + 32);
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    uint64_t ObjectType = swift_getObjectType();
    DOCNode.collaborationType.getter();
    int v17 = v9[11](v11, v8);
    if (v17 == enum case for DOCNodeCollaborationType.sharedWithYou(_:)) {
      break;
    }
    if (v17 != enum case for DOCNodeCollaborationType.returnToSender(_:))
    {
      v9[1](v11, v8);
      goto LABEL_27;
    }
    uint64_t v23 = DOCNode.documentAttributes.getter();
    if (!v23) {
      goto LABEL_27;
    }
    uint64_t v24 = (void *)v23;
    uint64_t v68 = v16;
    type metadata accessor for DOCAttributionPillView();
    id v9 = (uint64_t (**)(char *, uint64_t))[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    unint64_t v67 = v24;
    id v25 = [v24 sender];
    sub_1002EFE4C(v25);

    uint64_t v26 = UIDocumentBrowserActionAvailabilityAttributionView;
    id v27 = *(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager];
    unint64_t v28 = swift_bridgeObjectRetain();
    unint64_t v5 = (unint64_t)sub_1003EB648(v28, (uint64_t)v1, v26);

    swift_bridgeObjectRelease();
    UIMenuElementSize v75 = (UIMenuElementSize)_swiftEmptyArrayStorage;
    if (!(v5 >> 62))
    {
      uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v29 = v1;
      swift_bridgeObjectRetain();
      if (!v8) {
        goto LABEL_47;
      }
      goto LABEL_16;
    }
LABEL_46:
    id v51 = v1;
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (!v8)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      UIMenuElementSize v45 = (UIMenuElementSize)_swiftEmptyArrayStorage;
LABEL_48:
      swift_bridgeObjectRelease();

      if ((unint64_t)v45 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v54 < 1) {
          goto LABEL_52;
        }
LABEL_50:
        sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
        v52._uint64_t countAndFlagsBits = 0;
        v52._object = (void *)0xE000000000000000;
        v77.value.super.Class isa = 0;
        v77.is_nil = 0;
        v53.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v52, (Swift::String_optional)0, v77, 0, 0xFFFFFFFFFFFFFFFFLL, v45, v65).super.super.isa;
      }
      else
      {
        if (*(uint64_t *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
          goto LABEL_50;
        }
LABEL_52:
        swift_bridgeObjectRelease();
        v53.super.super.Class isa = 0;
      }
      uint64_t v55 = OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu;
      id v56 = *(uint64_t (**)(char *, uint64_t))((char *)v9 + OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu);
      *(uint64_t (**)(char *, uint64_t))((char *)v9 + OBJC_IVAR____TtC5Files22DOCAttributionPillView_menu) = (uint64_t (*)(char *, uint64_t))v53.super.super.isa;
      id v57 = v53.super.super.isa;

      [v9 setContextMenuInteractionEnabled:*(uint64_t (**)(char *, uint64_t))((char *)v9 + v55) != 0];
      [v9 addTarget:v1 action:"didTapAttributionView" forControlEvents:64];
      uint64_t v19 = v67;
LABEL_54:

      id v58 = v9;
      id v59 = sub_100274C18();
      [v59 setHidden:0];

      uint64_t v60 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
      [v60 setText:0];

      uint64_t v61 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
      [v61 setHidden:1];

      uint64_t v62 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView;
      [*(id *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView] removeFromSuperview];
      id v63 = sub_100274C18();
      [v63 addArrangedSubview:v58];
      swift_unknownObjectRelease();

      NSString v64 = *(void **)&v1[v62];
      *(void *)&v1[v62] = v58;

      return;
    }
LABEL_16:
    unint64_t v66 = v9;
    id v74 = (id)(v5 & 0xC000000000000001);
    uint64_t ObjectType = sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    id v70 = v1;
    uint64_t v4 = 4;
    uint64_t v71 = v12;
    uint64_t v72 = v8;
    unint64_t v73 = v5;
    while (1)
    {
      id v30 = v74 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v4);
      unint64_t v14 = (unint64_t)v30;
      uint64_t v7 = (char *)(v4 - 3);
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v9 = *(uint64_t (***)(char *, uint64_t))&v1[v12];
      swift_bridgeObjectRetain();
      id v31 = [(id)v14 localizedTitle];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v32 = [(id)v14 image];
      [(id)v14 actionStyle];
      uint64_t v11 = (char *)swift_allocObject();
      swift_unknownObjectWeakInit();
      id v33 = (void *)swift_allocObject();
      v33[2] = v11;
      uint64_t v33[3] = v14;
      v33[4] = v9;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      ++v4;
      uint64_t v12 = v71;
      uint64_t v8 = v72;
      uint64_t v1 = v70;
      unint64_t v5 = v73;
      if (v7 == (char *)v72)
      {
        swift_bridgeObjectRelease();
        UIMenuElementSize v45 = v75;
        id v9 = v66;
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_38;
    }
  }
  id v18 = [v16 fpfs_fpItem];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = FPItem.collaborationHighlight.getter();
    if (v20)
    {
      int v21 = (void *)v20;
      uint64_t v68 = v16;
      id v9 = (uint64_t (**)(char *, uint64_t))[objc_allocWithZone((Class)SWAttributionView) init];
      id v22 = v21;
      [v9 setHighlight:v22];

      goto LABEL_54;
    }
  }
LABEL_27:
  unsigned int v34 = [v16 isShared];
  id v35 = sub_100274C18();
  uint64_t v36 = v35;
  if (v34)
  {
    [v35 setHidden:0];

    unint64_t v37 = *(void **)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView];
    if (v37) {
      [v37 setHidden:1];
    }
    unint64_t v38 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v38 setHidden:0];

    uint64_t v39 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    uint64_t v40 = v72;
    (*(void (**)(char *, void, unint64_t))(v72 + 104))(v7, enum case for FPItem.SharingStatusStringType.shareOwner(_:), v5);
    sub_10027A6D0();
    DOCNode.localizedSharingStatusDescription(type:options:)();
    (*(void (**)(uint64_t, id))(v73 + 8))(v4, v74);
    (*(void (**)(char *, unint64_t))(v40 + 8))(v7, v5);
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v39 setText:v41];
    swift_unknownObjectRelease();
  }
  else
  {
    [v35 setHidden:1];

    id v42 = *(void **)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView];
    if (v42) {
      [v42 setHidden:1];
    }
    id v43 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v43 setHidden:1];

    unint64_t v44 = sub_1002730A8(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel);
    [v44 setText:0];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_10027A6D0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewWillLayoutSubviews()()
{
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  [super viewWillLayoutSubviews];
  id v1 = [v0 traitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  char v3 = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v4 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_10027335C, (uint64_t (*)(void))sub_10027355C);
  unint64_t v5 = v4;
  if (v3) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = 2;
  }
  [v4 setAlignment:v6];

  id v7 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow, (uint64_t (*)(void))sub_10027335C, (uint64_t (*)(void))sub_10027355C);
  uint64_t v8 = v3 & 1;
  [v7 setAxis:v8];

  id v9 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_100273930, (uint64_t (*)(void))sub_100273950);
  [v9 setAlignment:v6];

  id v10 = sub_1002734FC(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow, (uint64_t (*)(void))sub_100273930, (uint64_t (*)(void))sub_100273950);
  [v10 setAxis:v8];
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidLayoutSubviews()()
{
  v20.receiver = v0;
  v20.super_class = (Class)swift_getObjectType();
  [super viewDidLayoutSubviews];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    return;
  }
  id v2 = v1;
  [v1 frame];
  double v4 = v3;

  uint64_t v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  [*(id *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView] layoutMargins];
  double v7 = v4 - v6;
  [*(id *)&v0[v5] layoutMargins];
  double v9 = v7 - v8;
  id v10 = (char *)sub_100272F88();
  objc_super v11 = &v10[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  if (*(void *)(*(void *)v11 + 16))
  {
    [*(id *)(*(void *)v11 + 32) fittingSize];
    double v13 = v12;

    if (v9 <= 0.0 || v9 == v13) {
      return;
    }
  }
  else
  {

    if (v9 <= 0.0) {
      return;
    }
  }
  uint64_t v15 = (char *)sub_100272F88();
  id v16 = &v15[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = 32;
    do
    {
      [*(id *)(v17 + v19) setFittingSize:v9, v9];
      v19 += 16;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  [v15 invalidateIntrinsicContentSize];

  sub_10027731C(0);
}

uint64_t sub_10027ABCC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 >= 2) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
LABEL_3:
    v3._object = (void *)0x80000001005E1FA0;
    v4._uint64_t countAndFlagsBits = 0x6D65744920756C25;
    v4._object = (void *)0xE900000000000073;
    v3._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
    DOCLocalizedDictionaryString(_:comment:)(v4, v3);
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
    unint64_t v6 = *(void *)(v0 + v1);
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v5 + 56) = &type metadata for Int;
    *(void *)(v5 + 64) = &protocol witness table for Int;
    *(void *)(v5 + 32) = v7;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return countAndFlagsBits;
  }
  unint64_t v10 = *(void *)(v0 + v1);
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_9;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v10 & 0xC000000000000001) != 0)
  {
    double v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    double v13 = *(void **)(v10 + 32);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_getObjectType();
    if (![v13 isRootItem])
    {
      uint64_t countAndFlagsBits = DOCNode.displayName(withHiddenPathExtension:)(0)._countAndFlagsBits;
      goto LABEL_16;
    }
    id v14 = [v13 domainDisplayName];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_16:
      swift_unknownObjectRelease();
      return countAndFlagsBits;
    }
    swift_unknownObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

void sub_10027AE4C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    char v2 = sub_100274D40();
    id v3 = sub_1002813CC();
    id v4 = sub_1004320C0((uint64_t)v3, v2);

    if (v4)
    {
      String.wrappedInDirectionalIsolation(_:)();
      swift_bridgeObjectRetain();
      v5._uint64_t countAndFlagsBits = 32;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      id v6 = objc_allocWithZone((Class)NSMutableAttributedString);
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v8 = [v6 initWithString:v7];

      id v9 = [v8 length];
      unint64_t v10 = [self attributedStringWithAttachment:v4];
      [v8 appendAttributedString:v10];
      id v11 = [self secondaryLabelColor];
      [v8 addAttribute:NSForegroundColorAttributeName value:v11 range:v9];

      double v13 = sub_100273048();
      [v13 setAttributedText:v8];

      goto LABEL_7;
    }
    unint64_t v10 = sub_100273048();
    double v12 = String._bridgeToObjectiveC()();
  }
  else
  {
    unint64_t v10 = sub_100273048();
    double v12 = 0;
  }
  double v13 = v12;
  [v10 setText:];
LABEL_7:
}

id sub_10027B068()
{
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v27 != 1) {
      return 0;
    }
  }
  else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return 0;
  }
  unint64_t v7 = *(void *)(v0 + v5);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v7 & 0xC000000000000001) != 0)
  {
    unint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    unint64_t v10 = *(void **)(v7 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v11 = result;
  v29._uint64_t countAndFlagsBits = 0xD000000000000058;
  v29._object = (void *)0x80000001005E1F40;
  v12._uint64_t countAndFlagsBits = 0x656D756C6F56;
  v12._object = (void *)0xE600000000000000;
  v13._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v13._object = (void *)0xEB00000000656C62;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v29);

  Swift::String v15 = String.lowercased()();
  uint64_t countAndFlagsBits = v15._countAndFlagsBits;
  object = v15._object;
  swift_bridgeObjectRelease();
  swift_getObjectType();
  if (DOCNode.areDiskPropertiesSupported.getter()) {
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  id v18 = [v10 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t countAndFlagsBits = UTType.localizedDescription.getter();
  object = v19;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (object) {
    goto LABEL_13;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    objc_super v20 = result;
    v30._object = (void *)0x80000001005D6F30;
    v21._uint64_t countAndFlagsBits = 0x746E656D75636F44;
    v21._object = (void *)0xE800000000000000;
    v22._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v22._object = (void *)0xEB00000000656C62;
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v30._uint64_t countAndFlagsBits = 0xD000000000000012;
    Swift::String v24 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v30);
    uint64_t countAndFlagsBits = v24._countAndFlagsBits;
    object = v24._object;

LABEL_13:
    if ([v10 isFolder])
    {
      swift_unknownObjectRelease();
    }
    else
    {
      Swift::String v25 = DOCNode.localizedSizeDescription()();
      v28[0] = countAndFlagsBits;
      v28[1] = object;
      v26._uint64_t countAndFlagsBits = 2108704;
      v26._object = (void *)0xE300000000000000;
      String.append(_:)(v26);
      String.append(_:)(v25);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return (id)v28[0];
    }
    return (id)countAndFlagsBits;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_10027B420(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    a1 = swift_bridgeObjectRelease();
    if (v12 != 1) {
      goto LABEL_22;
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_22:
    id v13 = (id)sub_10027355C(a1);
    [v13 setHidden:1];

    return;
  }
  unint64_t v4 = *(void *)(v1 + v2);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_21:
    a1 = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    unint64_t v6 = *(void **)(v4 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  if ([v6 isCloudItem]) {
    uint64_t v7 = [v6 isDownloaded] ^ 1;
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (unsigned __int8 *)sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView, (uint64_t (*)(uint64_t))sub_100273614);
  int v9 = v8[OBJC_IVAR____TtC5Files15DOCMetadataView_canShowAdditionalMetadataValues];

  if (v9 != 2)
  {
    if (v9) {
      uint64_t v7 = v7;
    }
    else {
      uint64_t v7 = 1;
    }
  }
  id v11 = (void *)sub_10027355C(v10);
  [v11 setHidden:v7];

  swift_unknownObjectRelease();
}

Swift::Void __swiftcall DOCItemInfoContentViewController.doc_startPreheatIfNecessary()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat) == 1) {
    sub_100271F34();
  }
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  Swift::Bool is_nil = to.is_nil;
  Class isa = to.value.super.super.super.isa;
  v5.receiver = v2;
  v5.super_class = (Class)swift_getObjectType();
  [super viewDidMoveToWindow:isa shouldAppearOrDisappear:is_nil];
  if (isa) {
    sub_10027731C(0);
  }
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  v23.receiver = v2;
  v23.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1];
  id v4 = [v2 presentedViewController];
  if (v4)
  {
    objc_super v5 = v4;
    type metadata accessor for DOCPreviewController();
    unint64_t v6 = (void *)swift_dynamicCastClass();
    if (v6)
    {
      id v7 = [v6 transitionCoordinator];
      if (v7)
      {
        uint64_t v8 = v7;
        int v9 = (char *)sub_100272F88();
        uint64_t v10 = &v9[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden];
        swift_beginAccess();
        *uint64_t v10 = 1;
        _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();

        if ([v8 isAnimated])
        {
          if ([v8 isInteractive])
          {
            uint64_t v11 = swift_allocObject();
            *(void *)(v11 + 16) = v2;
            Swift::String v21 = sub_10027F3E0;
            uint64_t v22 = v11;
            id aBlock = _NSConcreteStackBlock;
            uint64_t v18 = 1107296256;
            uint64_t v19 = sub_100045AE0;
            objc_super v20 = &unk_10069CCA8;
            uint64_t v12 = _Block_copy(&aBlock);
            id v13 = v2;
            swift_release();
            [v8 notifyWhenInteractionChangesUsingBlock:v12];
          }
          else
          {
            uint64_t v15 = swift_allocObject();
            *(void *)(v15 + 16) = v2;
            Swift::String v21 = sub_10027F3D8;
            uint64_t v22 = v15;
            id aBlock = _NSConcreteStackBlock;
            uint64_t v18 = 1107296256;
            uint64_t v19 = sub_100045AE0;
            objc_super v20 = &unk_10069CC58;
            uint64_t v12 = _Block_copy(&aBlock);
            id v16 = v2;
            swift_release();
            [v8 animateAlongsideTransition:v12 completion:0];
          }

          _Block_release(v12);
          swift_unknownObjectRelease();
          goto LABEL_9;
        }
        swift_unknownObjectRelease();
      }
    }
  }
LABEL_9:
  int v14 = v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes];
  v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 1;
  if (v14 != 1)
  {
    if (*(void *)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver])
    {
      swift_retain();
      sub_10050D588();
      swift_release();
    }
  }
}

void sub_10027BA54(void *a1, void *a2)
{
  if (([a1 isCancelled] & 1) == 0)
  {
    unint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    void v7[4] = sub_100282F00;
    v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000666D8;
    v7[3] = &unk_10069D3C8;
    objc_super v5 = _Block_copy(v7);
    id v6 = a2;
    swift_release();
    [v3 animateWithDuration:v5 animations:0.2];
    _Block_release(v5);
  }
}

void sub_10027BB54()
{
  uint64_t v0 = (char *)sub_100272F88();
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden];
  swift_beginAccess();
  *uint64_t v1 = 0;
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

void sub_10027BBB4()
{
  uint64_t v0 = (char *)sub_100272F88();
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_isShadowHidden];
  swift_beginAccess();
  *uint64_t v1 = 0;
  _s5Files28DOCImageContainerFittingViewC012fittingImageE9DidLayoutyySo010DOCFittinggE0CF_0();
}

Swift::Void __swiftcall DOCItemInfoContentViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  BOOL v3 = a1;
  [super viewDidDisappear:v3];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v5 = Strong;
    [Strong dismissViewControllerAnimated:v3 completion:0];
  }
  char v6 = v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes];
  v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 0;
  if (v6)
  {
    if (*(void *)&v1[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver])
    {
      swift_retain();
      sub_10050D648();
      swift_release();
    }
  }
}

void sub_10027BDD8(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      char v6 = (char *)Strong;
      uint64_t v7 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
      uint64_t v8 = *(void **)(Strong + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
      id v9 = a1;
      if ([v8 useSharedQuickLook] && (objc_msgSend(v9, "isFolder") & 1) == 0)
      {
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_1005A04F0;
        *(void *)(v10 + 32) = v9;
        unint64_t v30 = v10;
        specialized Array._endMutation()();
        unint64_t v11 = v30;
        uint64_t v12 = *(void **)&v6[v7];
        id v13 = v9;
        id v14 = [v12 sceneIdentifier];
        if (v14)
        {
          uint64_t v15 = qword_1007052D8;
          id v16 = v14;
          if (v15 != -1) {
            swift_once();
          }
          uint64_t v17 = (void *)qword_10071B4C0;
          id v18 = [qword_10071B4C0 objectForKey:v16 v30];
          if (!v18)
          {
            id v19 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
            id v18 = DOCPreviewController.init()();
            [v17 setObject:v18 forKey:v16];
          }

          swift_bridgeObjectRetain();
          sub_1001B5B34((uint64_t)v13, v11);
          unint64_t v21 = v20;
          char v23 = v22;
          swift_bridgeObjectRelease();
          DOCPreviewController.set(_:defaultIndex:)(v11, 0, 0, v21, v23 & 1);

          swift_bridgeObjectRelease();
        }
        else
        {
          Swift::String v24 = (void *)static DOCLog.Source.getter();
          static os_log_type_t.debug.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
        }
      }
      Swift::String v25 = (void **)(a3 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
      swift_beginAccess();
      Swift::String v26 = *v25;
      if (*v25)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v27 = v26;
        unint64_t v28 = (char *)v9;
        id v29 = v27;
        static NSObject.== infix(_:_:)();

        char v6 = v28;
      }
    }
  }
}

void sub_10027C090(uint64_t a1, uint64_t a2, void *a3, char *a4, void *a5, uint64_t a6)
{
  id v59 = a4;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v52 - v19;
  if (a2)
  {
    swift_errorRetain();
    unint64_t v21 = a3;
    char v22 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10059B760;
    *(void *)(v23 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v23 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v23 + 32) = v21;
    id v24 = v21;
    uint64_t v25 = _convertErrorToNSError(_:)();
    Swift::String v26 = v59;
    uint64_t v27 = v25;
    *(void *)(v23 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v23 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v23 + 72) = v27;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    unint64_t v28 = (void **)&v26[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess();
    id v29 = *v28;
    *unint64_t v28 = 0;
    sub_1000D7C50(v29);

    swift_errorRelease();
  }
  else
  {
    id v56 = a5;
    uint64_t v57 = a6;
    id v58 = a3;
    uint64_t v30 = v18;
    sub_1002827DC(a1, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v13, 1, v14) == 1)
    {
      sub_1001939F8((uint64_t)v13);
      id v31 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1005A0030;
      *(void *)(v32 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      *(void *)(v32 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
      id v33 = v58;
      *(void *)(v32 + 32) = v58;
      id v34 = v33;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v35 = (void **)&v59[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      uint64_t v36 = *v35;
      *id v35 = 0;
      sub_1000D7C50(v36);
    }
    else
    {
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      uint64_t v55 = v30;
      v54(v20, v13, v14);
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v17, v20, v14);
      unint64_t v37 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      unint64_t v53 = (v15 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v38 = v59;
      unint64_t v39 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v41 = swift_allocObject();
      v54((char *)(v41 + v37), v17, v14);
      id v42 = v58;
      *(void *)(v41 + v53) = v58;
      id v43 = v56;
      *(void *)(v41 + v39) = v56;
      *(void *)(v41 + v40) = v38;
      unint64_t v44 = v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v45 = v57;
      long long v46 = *(_OWORD *)(v57 + 48);
      *(_OWORD *)(v44 + 32) = *(_OWORD *)(v57 + 32);
      *(_OWORD *)(v44 + 48) = v46;
      *(void *)(v44 + 64) = *(void *)(v45 + 64);
      long long v47 = *(_OWORD *)(v45 + 16);
      *(_OWORD *)unint64_t v44 = *(_OWORD *)v45;
      *(_OWORD *)(v44 + 16) = v47;
      aBlock[4] = sub_100282AA4;
      aBlock[5] = v41;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_10069D198;
      id v48 = _Block_copy(aBlock);
      id v49 = v42;
      id v50 = v43;
      id v51 = v38;
      sub_10021E3C0((void *)v45);
      swift_release();
      DOCRunInMainThread();
      _Block_release(v48);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v14);
    }
  }
}

uint64_t sub_10027C5F8(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a2;
  long long v9 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v8 + 80) = v9;
  *(void *)(v8 + 96) = *(void *)(a5 + 64);
  long long v10 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(v8 + 48) = v10;
  id v11 = a4;
  id v12 = a2;
  sub_10021E3C0((void *)a5);
  static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)();

  return swift_release();
}

void sub_10027C6C0(char a1, void *a2, void *a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  long long v9 = *a4;
  *(_OWORD *)(v8 + 56) = a4[1];
  long long v10 = a4[3];
  *(_OWORD *)(v8 + 72) = a4[2];
  *(_OWORD *)(v8 + 88) = v10;
  *(void *)(v8 + 16) = a2;
  *(unsigned char *)(v8 + 24) = a1;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 104) = *((void *)a4 + 8);
  *(_OWORD *)(v8 + 40) = v9;
  v14[4] = sub_100282C50;
  v14[5] = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  uint64_t v14[2] = sub_1000666D8;
  v14[3] = &unk_10069D210;
  id v11 = _Block_copy(v14);
  id v12 = a2;
  id v13 = a3;
  sub_10021E3C0(a4);
  swift_release();
  DOCRunInMainThread();
  _Block_release(v11);
}

void sub_10027C7D4(uint64_t a1, char a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void **)(a1 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  swift_beginAccess();
  id v13 = *v12;
  void *v12 = 0;
  sub_1000D7C50(v13);

  static Logger.UI.getter();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((a2 & 1) == 0) {
    sub_10027F3E8(a3, a4);
  }
}

void _s5Files32DOCItemInfoContentViewControllerC014tagsCollectionE0_21didSelectAddTagButtonySo07DOCTagshE0C_So6UIViewCtF_0(void *a1)
{
  uint64_t v2 = v1;
  [a1 frame];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  id v12 = [v2 view];
  if (v12)
  {
    id v13 = v12;
    id v14 = [v12 window];

    if (v14)
    {
      id v15 = v14;
      [a1 bounds];
      [v15 convertRect:a1 fromCoordinateSpace:];
      double v5 = v16;
      double v7 = v17;
      double v9 = v18;
      double v11 = v19;
    }
    else
    {
      id v15 = a1;
    }
    unint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration];
    unint64_t v21 = (objc_class *)type metadata accessor for DOCServiceInfoViewController();
    char v22 = objc_allocWithZone(v21);
    v22[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
    *(void *)&v22[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = v20;
    id v23 = objc_allocWithZone((Class)DOCItemInfoViewController);
    id v24 = v20;
    swift_bridgeObjectRetain();
    uint64_t v25 = v22;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v23 initWithNodes:isa configuration:v24 actionReporting:0];

    *(void *)&v25[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v27;
    id v28 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v27];
    *(void *)&v25[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v28;
    [v28 _setBuiltinTransitionStyle:1];
    id v29 = v27;
    [v29 displayTagView];

    v34.receiver = v25;
    v34.super_class = v21;
    [super init];

    UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
    id v31 = [v30 popoverPresentationController];
    if (v31)
    {
      uint64_t v32 = v31;
      [v31 setSourceView:v15];
    }
    id v33 = [v30 popoverPresentationController];
    [v33 setSourceRect:v5, v7, v9, v11];

    [v2 presentViewController:v30 animated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
  else
  {
    __break(1u);
  }
}

void sub_10027CCEC(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  double v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  double v19 = (char *)&v33 - v18;
  sub_1002827DC(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1001939F8((uint64_t)v12);
    if (a2)
    {
      swift_errorRetain();
      unint64_t v20 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_10059B760;
      id v22 = [a4 description];
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_100073F48();
      *(void *)(v21 + 32) = v23;
      *(void *)(v21 + 40) = v25;
      uint64_t v26 = _convertErrorToNSError(_:)();
      *(void *)(v21 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v21 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v21 + 72) = v26;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
  }
  else
  {
    id v33 = a3;
    id v27 = (unint64_t *)(a5 + 16);
    id v28 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v28(v19, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    swift_beginAccess();
    unint64_t v29 = *(void *)(a5 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a5 + 16) = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v29 = sub_10018F80C(0, *(void *)(v29 + 16) + 1, 1, v29);
      unint64_t *v27 = v29;
    }
    unint64_t v32 = *(void *)(v29 + 16);
    unint64_t v31 = *(void *)(v29 + 24);
    if (v32 >= v31 >> 1)
    {
      unint64_t v29 = sub_10018F80C(v31 > 1, v32 + 1, 1, v29);
      unint64_t *v27 = v29;
    }
    *(void *)(v29 + 16) = v32 + 1;
    v28((char *)(v29+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v32), v17, v13);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    a3 = v33;
  }
  dispatch_group_leave(a3);
}

void sub_10027D098(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v125 = (char *)v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v9 = (char *)v119 - v8;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119[2] = a1 + 16;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(v13 + 16);
  unint64_t v129 = a2;
  if (v14)
  {
    uint64_t v16 = *(uint64_t **)(v5 + 16);
    uint64_t v15 = v5 + 16;
    uint64_t v128 = v16;
    unint64_t v120 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v17 = v13 + v120;
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v126 = (char **)(v15 + 40);
    id v124 = (uint64_t *)(v15 + 32);
    uint64_t v127 = (void (**)(void, void, void))(v15 + 16);
    uint64_t v122 = (void (**)(char *, uint64_t))(v15 - 8);
    v119[1] = v13;
    swift_bridgeObjectRetain();
    os_log_type_t v123 = _swiftEmptyArrayStorage;
    id v121 = (id)v15;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v128)(v12, v17, v4);
      unint64_t v20 = *v126;
      ((void (*)(char *, void, uint64_t, uint64_t))*v126)(v12, 0, 1, v4);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))*v124)(v12, 1, v4) == 1) {
        break;
      }
      uint64_t v21 = *v127;
      (*v127)(v9, v12, v4);
      if (URL.startAccessingSecurityScopedResource()())
      {
        ((void (*)(char *, char *, uint64_t))v128)(v125, v9, v4);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          os_log_type_t v123 = (void *)sub_10018F80C(0, v123[2] + 1, 1, (unint64_t)v123);
        }
        unint64_t v23 = v123[2];
        unint64_t v22 = v123[3];
        if (v23 >= v22 >> 1) {
          os_log_type_t v123 = (void *)sub_10018F80C(v22 > 1, v23 + 1, 1, (unint64_t)v123);
        }
        double v19 = v123;
        v123[2] = v23 + 1;
        v21((char *)v19 + v120 + v23 * v18, v125, v4);
        a2 = v129;
      }
      (*v122)(v9, v4);
      v17 += v18;
      if (!--v14)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v20)(v12, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    unint64_t v20 = *(char **)(v5 + 56);
    swift_bridgeObjectRetain();
    os_log_type_t v123 = _swiftEmptyArrayStorage;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v20)(v12, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t)sub_100274360;
  id v25 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_100274360);
  id v26 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_100274360);
  [v26 bounds];
  double v28 = v27;

  double v29 = sub_10009D0EC(v28);
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;
  id v36 = [(id)a2 view];
  if (!v36)
  {
    __break(1u);
    goto LABEL_83;
  }
  unint64_t v37 = v36;
  id v38 = [v36 window];

  if (v38)
  {

    id v25 = v38;
    id v39 = sub_100272F24(&OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton, (uint64_t (*)(uint64_t))sub_100274360);
    [v25 convertRect:v39 fromCoordinateSpace:v29, v31, v33, v35];
    double v29 = v40;
    double v31 = v41;
    double v33 = v42;
    double v35 = v43;
  }
  unint64_t v44 = (char **)sub_1002725F0();
  id v121 = v25;
  if (v44)
  {
    uint64_t v45 = v44;
    uint64_t v24 = *(uint64_t *)((char *)v44 + OBJC_IVAR____TtC5Files18DOCInfoActionsView_actionsLayout);
    unint64_t v46 = *(void *)(v24 + 24);
    aBlock[0] = _swiftEmptyArrayStorage;
    if (v46 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
    }
    uint64_t v126 = v45;
    uint64_t v125 = (char *)v24;
    uint64_t v128 = (uint64_t *)(v24 + 32);
    swift_beginAccess();
    if (v47)
    {
      a2 = 0;
      uint64_t v127 = (void (**)(void, void, void))(v46 & 0xC000000000000001);
      uint64_t v48 = v46 & 0xFFFFFFFFFFFFFF8;
      do
      {
        if (v127)
        {
          id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (a2 >= *(void *)(v48 + 16)) {
            goto LABEL_52;
          }
          id v49 = *(id *)(v46 + 8 * a2 + 32);
        }
        id v50 = v49;
        unint64_t v51 = a2 + 1;
        if (__OFADD__(a2, 1)) {
          goto LABEL_51;
        }
        uint64_t v52 = v47;
        unint64_t v53 = v46;
        uint64_t v54 = *v128;
        swift_bridgeObjectRetain();
        id v55 = [v50 identifier];
        uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v57;

        LOBYTE(v55) = sub_10053562C(v56, v24, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v55)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v24 = *(void *)(aBlock[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        unint64_t v46 = v53;
        uint64_t v47 = v52;
        ++a2;
      }
      while (v51 != v52);
      id v58 = (void *)aBlock[0];
      a2 = v129;
    }
    else
    {
      id v58 = _swiftEmptyArrayStorage;
    }

    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    id v58 = _swiftEmptyArrayStorage;
  }
  uint64_t v122 = (void (**)(char *, uint64_t))OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager;
  id v59 = *(void **)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager);
  unint64_t v136 = (unint64_t)v58;
  uint64_t v128 = (uint64_t *)OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v60 = *(void *)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  uint64_t v61 = *(void **)(a2 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration);
  unint64_t v62 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
  id v63 = v59;
  swift_bridgeObjectRetain();
  id v64 = v61;
  unint64_t v65 = sub_1003D66D4(v60, v62, 0, v64, 0);

  swift_bridgeObjectRelease();
  sub_100169238(v65);
  unint64_t v135 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v24 = v136;
  if (v136 >> 62) {
    goto LABEL_53;
  }
  unint64_t v20 = *(char **)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v20)
  {
    uint64_t v66 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
    swift_bridgeObjectRetain();
    while (1)
    {
      unint64_t v67 = (uint64_t *)(a2 + v66);
      uint64_t v127 = (void (**)(void, void, void))sub_1000CBE70(&qword_10070C580);
      uint64_t v68 = 0;
      uint64_t v126 = (char **)(v24 & 0xC000000000000001);
      id v124 = &v130;
      uint64_t v125 = (char *)v24;
      while (1)
      {
        id v75 = v126
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v24 + 8 * (void)v68 + 32);
        uint64_t v24 = (uint64_t)v75;
        id v76 = [v75 filteringPredicate];
        uint64_t v130 = 0x7365646F4E636F64;
        unint64_t v131 = 0xE800000000000000;
        uint64_t v132 = *(uint64_t *)((char *)v128 + a2);
        UIImage_optional v77 = (void *)static _DictionaryStorage.allocate(capacity:)();
        a2 = v130;
        uint64_t v78 = v131;
        uint64_t v79 = v132;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v80 = sub_100042F50(a2, v78);
        if (v81) {
          break;
        }
        v77[(v80 >> 6) + 8] |= 1 << v80;
        uint64_t v82 = (unint64_t *)(v77[6] + 16 * v80);
        *uint64_t v82 = a2;
        v82[1] = v78;
        *(void *)(v77[7] + 8 * v80) = v79;
        uint64_t v83 = v77[2];
        BOOL v84 = __OFADD__(v83, 1);
        uint64_t v85 = v83 + 1;
        if (v84) {
          goto LABEL_50;
        }
        v77[2] = v85;
        sub_1000CBE70(&qword_10070C588);
        swift_arrayDestroy();
        sub_1000CBE70((uint64_t *)&unk_100707B20);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_release();
        unsigned int v87 = [v76 evaluateWithObject:isa];

        if (v87)
        {
          id v88 = [self activityForBrowserAction:v24 actionPerformerProxy:*(void (**)(char *, uint64_t))((char *)v122 + v129)];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v69 = [(id)v24 identifier];
          uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v72 = v71;

          swift_beginAccess();
          id v73 = (id)v24;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v134 = *v67;
          *unint64_t v67 = 0x8000000000000000;
          sub_1003E0F6C((uint64_t)v73, v70, v72, isUniquelyReferenced_nonNull_native);
          *unint64_t v67 = v134;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
        ++v68;

        a2 = v129;
        uint64_t v24 = (uint64_t)v125;
        if (v20 == v68) {
          goto LABEL_57;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      swift_bridgeObjectRetain();
      uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v89 <= 0) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v90 = _CocoaArrayWrapper.endIndex.getter();
      if (!v90) {
        goto LABEL_57;
      }
      unint64_t v20 = (char *)v90;
      if (v90 < 1)
      {
        __break(1u);
LABEL_57:
        swift_bridgeObjectRelease();
        break;
      }
LABEL_83:
      uint64_t v66 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
    }
  }
  unint64_t v91 = *(uint64_t *)((char *)v128 + a2);
  if (v91 >> 62) {
    goto LABEL_73;
  }
  uint64_t v92 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v92)
  {
LABEL_60:
    id v93 = self;
    a2 = v91 & 0xC000000000000001;
    uint64_t v94 = 4;
    while (1)
    {
      uint64_t v95 = v94 - 4;
      if (a2)
      {
        uint64_t v96 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v97 = v94 - 3;
        if (__OFADD__(v95, 1)) {
          goto LABEL_72;
        }
      }
      else
      {
        uint64_t v96 = *(void *)(v91 + 8 * v94);
        swift_unknownObjectRetain();
        uint64_t v97 = v94 - 3;
        if (__OFADD__(v95, 1))
        {
LABEL_72:
          __break(1u);
LABEL_73:
          swift_bridgeObjectRetain_n();
          uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
          if (!v92) {
            break;
          }
          goto LABEL_60;
        }
      }
      id v98 = [v93 defaultPermission];
      id v99 = [v98 dataOwnerStateForNode:v96];
      swift_unknownObjectRelease();

      BOOL v100 = v99 == (id)1;
      ++v94;
      if (v99 == (id)1 || v97 == v92)
      {
        a2 = v129;
        goto LABEL_75;
      }
    }
  }
  BOOL v100 = 0;
LABEL_75:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v102 = swift_bridgeObjectRetain();
  sub_1004F2910(v102);
  swift_bridgeObjectRelease();
  if (v135 >> 62)
  {
    sub_10009E6C4(0, &qword_10070C570);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, &qword_10070C570);
  }
  swift_bridgeObjectRelease();
  id v103 = objc_allocWithZone((Class)UIActivityViewController);
  Class v104 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, &qword_10070C570);
  Class v105 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v106 = [v103 initWithActivityItems:v104 applicationActivities:v105];

  [v106 setSharingStyle:1];
  [v106 setIsContentManaged:v100];
  sub_1000CBE70(&qword_10070C578);
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = xmmword_10059B760;
  id v108 = (void *)DOCSaveToFilesActivityType;
  *(void *)(v107 + 32) = UIActivityTypeCopyToPasteboard;
  *(void *)(v107 + 40) = v108;
  type metadata accessor for ActivityType(0);
  uint64_t v109 = UIActivityTypeCopyToPasteboard;
  id v110 = v108;
  Class v111 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v106 setExcludedActivityTypes:v111];

  id v112 = [v106 popoverPresentationController];
  unint64_t v113 = v121;
  if (v112)
  {
    uint64_t v114 = v112;
    [v112 setSourceView:v121];
  }
  id v115 = [v106 popoverPresentationController];
  [v115 setSourceRect:v29, v31, v33, v35];

  uint64_t v116 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v117 = swift_allocObject();
  *(void *)(v117 + 16) = v123;
  *(void *)(v117 + 24) = v116;
  aBlock[4] = sub_1002827D4;
  aBlock[5] = v117;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10027E354;
  void aBlock[3] = &unk_10069CF18;
  unint64_t v118 = _Block_copy(aBlock);
  swift_release();
  [v106 setCompletionWithItemsHandler:v118];
  _Block_release(v118);
  [(id)a2 presentViewController:v106 animated:1 completion:0];
}

uint64_t sub_10027E0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a5 + 16);
  v27[1] = a6 + 16;
  void v27[2] = a5;
  if (v15)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v18 = a5 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v28 = *(void *)(v16 + 56);
    double v29 = v17;
    unint64_t v19 = v16 + 40;
    unint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v30 = v16;
    unint64_t v22 = (void (**)(char *, uint64_t))(v16 - 8);
    swift_bridgeObjectRetain();
    v27[0] = v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v29(v14, v18, v8);
      unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v19;
      (*(void (**)(char *, void, uint64_t, uint64_t))v19)(v14, 0, 1, v8);
      if ((*v20)(v14, 1, v8) == 1) {
        break;
      }
      (*v21)(v11, v14, v8);
      URL.stopAccessingSecurityScopedResource()();
      (*v22)(v11, v8);
      v18 += v28;
      if (!--v15) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
LABEL_7:
    v23(v14, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v25 = (void *)result;
    id v26 = (void *)(result
                   + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController);
    swift_beginAccess();
    *id v26 = &_swiftEmptyDictionarySingleton;

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10027E354(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  if (a4) {
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v9 = 0;
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v8(a2, a3, v9, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void DOCItemInfoContentViewController.init(nibName:bundle:)()
{
}

void DOCItemInfoContentViewController.previewController(_:viewFor:_:)(uint64_t a1, uint64_t a2, void (*a3)(id))
{
}

UIView_optional __swiftcall DOCItemInfoContentViewController.viewForZooming(in:)(UIScrollView in)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView);
  id v3 = v2;
  uint64_t v5 = (objc_class *)v2;
  result.value.super.super.Class isa = v5;
  result.Swift::Bool is_nil = v4;
  return result;
}

uint64_t DOCItemInfoContentViewController.tagsCollectionItem(_:didDelete:)(uint64_t a1, void *a2)
{
  return sub_100281D84(a2);
}

void sub_10027E72C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = [v1 tags];
    if (!v2)
    {
LABEL_5:

      return;
    }
    id v3 = v2;
    sub_10009E6C4(0, &qword_10070AE60);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v20 = v4;
    swift_bridgeObjectRetain();
    id v5 = (id)FPTagFromDOCTag();
    sub_1001B6090((uint64_t)v5, v4);
    unint64_t v7 = v6;
    char v9 = v8;
    swift_bridgeObjectRelease();

    if ((v9 & 1) == 0)
    {

      id v10 = [self defaultManager];
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1005A04F0;
      *(void *)(v11 + 32) = v1;
      uint64_t v19 = v11;
      specialized Array._endMutation()();
      sub_1000CBE70(&qword_100708DA0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1005A0030;
      *(void *)(v12 + 32) = v20;
      uint64_t v13 = self;
      id v1 = v1;
      id v14 = [v13 shared];
      id v15 = objc_allocWithZone((Class)DOCSetTagsOperation);
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      sub_1000CBE70(&qword_100708DA8);
      Class v17 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v18 = [v15 initWithItems:isa tagsLists:v17 isUndoable:1 shouldClearUndoStack:0 undoManager:v14];

      [v10 scheduleAction:v18];
      goto LABEL_5;
    }

    swift_bridgeObjectRelease();
  }
}

void DOCItemInfoContentViewController.nodeDownloadButton(_:downloadingNode:encounteredError:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v3;
  v8[4] = sub_100281EE8;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000666D8;
  v8[3] = &unk_10069CCF8;
  unint64_t v6 = _Block_copy(v8);
  swift_errorRetain();
  id v7 = v3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v6);
}

void sub_10027EB64()
{
  id v8 = (id)_convertErrorToNSError(_:)();
  id v0 = [v8 domain];
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;

  if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if ([v8 code] == (id)-1009)
  {
    DOCAlertUserTheNetworkIsNotReachable();
    goto LABEL_11;
  }
LABEL_10:
  id v7 = (void *)_convertErrorToNSError(_:)();
  DOCPresentAlertForError();

LABEL_11:
}

void DOCItemInfoContentViewController.nodeDownloadButton(_:requestedOpening:)(uint64_t a1, void *a2)
{
}

id sub_10027EECC()
{
  return sub_10027EEE4((uint64_t (*)(void))type metadata accessor for DOCDragInteraction);
}

id sub_10027EEE4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

void sub_10027F06C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = Strong;
    id v8 = [Strong effectiveAppearance];
    id v9 = *(id *)&v7[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration];
    id v10 = v7;
    unint64_t v11 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v12 = (objc_class *)type metadata accessor for DOCActionContext();
    uint64_t v13 = (char *)objc_allocWithZone(v12);
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v8;
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v9;
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v10;
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(void *)&v13[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v11;
    v16.receiver = v13;
    v16.super_class = v12;
    id v14 = [super init];
    id v15 = *(id *)&v10[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionManager];
    sub_1003EC438(a3, a4, (uint64_t)v14);
  }
}

void sub_10027F1E4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 != 1) {
      return;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return;
  }
  unint64_t v3 = *(void *)(v0 + v1);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v5 = DOCNode.documentAttributes.getter();
  if (v5)
  {
    char v6 = (void *)v5;
    SYDocumentAttributes.performReturnToDocumentRequest()();
  }

  swift_unknownObjectRelease();
}

uint64_t sub_10027F390()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10027F3C8()
{
}

void sub_10027F3D0(void *a1)
{
}

void sub_10027F3D8()
{
}

void sub_10027F3E0(void *a1)
{
  sub_10027BA54(a1, *(void **)(v1 + 16));
}

void sub_10027F3E8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v66 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v67 = (char *)&v65 - v8;
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v65 - v9;
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v10 - 8);
  uint64_t v68 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v13 = swift_allocObject();
  long long v69 = xmmword_1005A0030;
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  id v14 = [a1 displayName];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v18 = sub_100073F48();
  *(void *)(v13 + 64) = v18;
  *(void *)(v13 + 32) = v15;
  *(void *)(v13 + 40) = v17;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  long long v21 = *(_OWORD *)a2;
  *(_OWORD *)(v20 + 40) = *(_OWORD *)(a2 + 16);
  long long v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v20 + 56) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v20 + 72) = v22;
  *(void *)(v20 + 88) = *(void *)(a2 + 64);
  *(_OWORD *)(v20 + 24) = v21;
  sub_10021E3C0((void *)a2);
  if ([a1 isDownloading] && !objc_msgSend(a1, "isDownloaded")) {
    unsigned __int8 v23 = 1;
  }
  else {
    unsigned __int8 v23 = [a1 isExternalDownloadPlaceholder];
  }
  if ([a1 isCloudItem]) {
    char v24 = [a1 isDownloaded] ^ 1;
  }
  else {
    char v24 = 0;
  }
  if ([a1 isFolder])
  {
    id v25 = [a1 fpfs_fpItem];
    id v26 = v70;
    if (v25)
    {
      double v27 = v25;
      uint64_t v28 = qword_100704F60;
      id v29 = v25;
      if (v28 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for RestorableSettings(0);
      uint64_t v31 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v68, 1, 1, v30);
      swift_beginAccess();
      id v32 = v29;
      sub_1004F1DFC(v31, v27, 0);
      swift_endAccess();
    }
    static Logger.UI.getter();
    double v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v34))
    {
      double v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "[TAP] [Interaction] Node is a folder, navigating to the next location.", v35, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v72);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v36 = (void *)DOCNode.sourceIdentifier.getter();
    id v37 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v36 node:a1];

    sub_100282DBC(a2, (uint64_t)v74);
    sub_100282DBC((uint64_t)v74, (uint64_t)v73);
    if (v73[0]) {
      [v73[0] didSelectLocation:v37 atParentLocation:*(void *)(a2 + 48)];
    }
    swift_release();

    return;
  }
  if (*(unsigned char *)(a2 + 42) & 1) != 0 && (*(unsigned char *)(a2 + 56) & 1) == 0 || (*(unsigned char *)(a2 + 57)) {
    goto LABEL_27;
  }
  if ((v23 & 1) == 0)
  {
    if (v24)
    {
      double v42 = (void *)static DOCLog.UI.getter();
      LODWORD(v72) = static os_log_type_t.default.getter();
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = v69;
      id v44 = [a1 displayName];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      *(void *)(v43 + 56) = &type metadata for String;
      *(void *)(v43 + 64) = v18;
      *(void *)(v43 + 32) = v45;
      *(void *)(v43 + 40) = v47;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v48 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v49 = swift_allocObject();
      long long v50 = *(_OWORD *)a2;
      *(_OWORD *)(v49 + 40) = *(_OWORD *)(a2 + 16);
      long long v51 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v49 + 56) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v49 + 72) = v51;
      *(void *)(v49 + 16) = v48;
      uint64_t v52 = *(void *)(a2 + 64);
      *(_OWORD *)(v49 + 24) = v50;
      *(void *)(v49 + 88) = v52;
      *(void *)(v49 + 96) = a1;
      *(void *)(v49 + 104) = sub_100282CD4;
      *(void *)(v49 + 112) = v20;
      sub_10021E3C0((void *)a2);
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      swift_retain();
      swift_retain();
      id v53 = a1;
      DOCNode.fpfs_fetchFPItem(completion:)();
      swift_release();
LABEL_28:
      swift_release();
      goto LABEL_29;
    }
LABEL_27:
    uint64_t v54 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v69;
    id v56 = [a1 displayName];
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v58;

    *(void *)(v55 + 56) = &type metadata for String;
    *(void *)(v55 + 64) = v18;
    *(void *)(v55 + 32) = v57;
    *(void *)(v55 + 40) = v59;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = sub_100282CD4;
    *(void *)(v60 + 24) = v20;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)();
    goto LABEL_28;
  }
  if ([a1 isExternalDownloadPlaceholder])
  {
    id v38 = v67;
    static Logger.UI.getter();
    id v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v39, v40))
    {
      double v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[TAP] [Interaction] Item is a Safari download in progress, don't cancel the D/L, but don't open either", v41, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v72);
    return;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    uint64_t v61 = v66;
    static Logger.UI.getter();
    unint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v62, v63))
    {
      id v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "[TAP] [Interaction] Item is a Download in progress, Cancelling D/L", v64, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v71 + 8))(v61, v72);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)();
    swift_release_n();
    swift_release();
    return;
  }
LABEL_29:

  swift_release();
}

void sub_10027FEC8(void *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
  id v9 = [*(id *)&a2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration] sceneIdentifier];
  uint64_t v10 = _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v9);

  uint64_t v11 = (Class *)((char *)&v10->isa + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  swift_beginAccess();
  if (!*v11)
  {
    if (([a1 isTrashed] & 1) != 0 && (objc_msgSend(a1, "isFolder") & 1) == 0)
    {
      NSString v18 = [a1 displayName];
      if (!v18)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      DOCAlertUserTrashedFileCanNotBeOpened();
    }
    else
    {
      uint64_t v16 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v17 = DOCNode.fpfs_syncFetchFPItem()();
      if (!v17)
      {
LABEL_31:

        return;
      }
      NSString v18 = (NSString)v17;
      id v19 = *(id *)&a2[v8];
      char v20 = sub_1004E84CC(v18, v19);

      if (v20)
      {
        if (([*(id *)&a2[v8] useSharedQuickLook] & 1) != 0
          && ([a1 isFolder] & 1) == 0)
        {
          id v21 = [*(id *)&a2[v8] sceneIdentifier];
          if (v21)
          {
            uint64_t v22 = qword_1007052D8;
            id v23 = v21;
            if (v22 != -1) {
              swift_once();
            }
            char v24 = (void *)qword_10071B4C0;
            id v25 = (char *)[(id)qword_10071B4C0 objectForKey:v23];
            if (!v25)
            {
              id v26 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
              id v64 = v24;
              id v25 = (char *)DOCPreviewController.init()();
              [v64 setObject:v25 forKey:v23];
            }

            double v27 = &v25[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
            swift_beginAccess();
            char *v27 = 1;
            *(void *)&v25[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = &protocol witness table for DOCItemInfoContentViewController;
            swift_unknownObjectWeakAssign();
            sub_1000CBE70((uint64_t *)&unk_1007084E0);
            uint64_t v28 = swift_allocObject();
            *(_OWORD *)(v28 + 16) = xmmword_1005A04F0;
            *(void *)(v28 + 32) = v18;
            *(void *)&long long v66 = v28;
            specialized Array._endMutation()();
            unint64_t v29 = v66;
            id v30 = v18;
            DOCPreviewController.set(_:defaultIndex:)(v29, 0, 0, 0, 1);

            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v31 = (void *)static DOCLog.Source.getter();
            static os_log_type_t.debug.getter();
            os_log(_:dso:log:type:_:)();
          }
        }
        id v64 = v16;
        uint64_t v32 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v32;
        *(void *)(v33 + 24) = v10;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        double v35 = *(void **)&a2[v8];
        id v36 = v10;
        swift_retain();
        LOBYTE(v35) = [v35 useSharedQuickLook];
        unsigned __int8 v37 = [*(id *)&a2[v8] skipDownload];
        *(void *)&long long v66 = Strong;
        *((void *)&v66 + 1) = sub_100283240;
        long long v67 = (unint64_t)v33;
        *(void *)&long long v68 = 0;
        BYTE8(v68) = 0;
        BYTE9(v68) = (_BYTE)v35;
        BYTE10(v68) = 1;
        *(void *)&long long v69 = 0;
        BYTE8(v69) = 1;
        BYTE9(v69) = v37;
        uint64_t v70 = a2;
        id v38 = *(void **)&a2[v8];
        uint64_t v10 = a2;
        if ([v38 shouldOpenInApp])
        {
          v63[1] = Strong;
          if ((objc_msgSend(v18, "doc_isCollaborationInvitation") & 1) == 0)
          {
            id v41 = [*(id *)&a2[v8] sceneIdentifier];
            double v42 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v41);

            uint64_t v43 = (void **)&v42[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
            swift_beginAccess();
            id v44 = *v43;
            *uint64_t v43 = v18;
            id v45 = v18;
            sub_1000D7C50(v44);

            uint64_t v46 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.info.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v47 = swift_allocObject();
            *(_OWORD *)(v47 + 16) = xmmword_1005A0030;
            *(void *)(v47 + 56) = v64;
            *(void *)(v47 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
            *(void *)(v47 + 32) = v45;
            id v48 = v45;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            id v49 = [self defaultManager];
            uint64_t v50 = swift_allocObject();
            long long v51 = v68;
            *(_OWORD *)(v50 + 56) = v67;
            *(void *)(v50 + 16) = v48;
            *(void *)(v50 + 24) = v36;
            *(void *)(v50 + 32) = v10;
            *(_OWORD *)(v50 + 72) = v51;
            *(_OWORD *)(v50 + 88) = v69;
            *(void *)(v50 + 104) = v70;
            *(_OWORD *)(v50 + 40) = v66;
            aBlock[4] = sub_100283244;
            aBlock[5] = v50;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1001B6B50;
            void aBlock[3] = &unk_10069D350;
            uint64_t v52 = _Block_copy(aBlock);
            id v53 = v36;
            uint64_t v54 = v10;
            id v55 = v48;
            swift_unknownObjectRetain();
            sub_1000C0640((uint64_t)sub_100283240);
            sub_1000C0640(0);
            id v56 = v54;
            swift_release();
            [v49 fetchURLForItem:v55 completionHandler:v52];
            swift_unknownObjectRelease();
            swift_release();

            sub_1000A7258((uint64_t)sub_100283240);
            sub_1000A7258(0);

            _Block_release(v52);
            return;
          }
          id v39 = v36;
          if (FPItem.openInvitationIfPossible()())
          {
            swift_unknownObjectRelease();
            swift_release();

            sub_1000A7258((uint64_t)sub_100283240);
            sub_1000A7258(0);
          }
          else
          {
            uint64_t v57 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.error.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v58 = swift_allocObject();
            *(_OWORD *)(v58 + 16) = xmmword_1005A0030;
            id v59 = [v18 displayName];
            uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v62 = v61;

            *(void *)(v58 + 56) = &type metadata for String;
            *(void *)(v58 + 64) = sub_100073F48();
            *(void *)(v58 + 32) = v60;
            *(void *)(v58 + 40) = v62;
            os_log(_:dso:log:type:_:)();
            swift_unknownObjectRelease();
            swift_release();

            sub_1000A7258((uint64_t)sub_100283240);
            sub_1000A7258(0);

            swift_bridgeObjectRelease();
          }
        }
        else
        {
          id v40 = v18;
          sub_10027F3E8(v40, (uint64_t)&v66);
          swift_unknownObjectRelease();
          swift_release();

          sub_1000A7258((uint64_t)sub_100283240);
          sub_1000A7258(0);
        }
        goto LABEL_31;
      }
    }

    return;
  }
  static Logger.UI.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Interaction] An item was selected while there is another one trying to be opened.", v14, 2u);
    swift_slowDealloc();
    uint64_t v15 = v10;
  }
  else
  {
    uint64_t v15 = v12;
    uint64_t v12 = v10;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_100280884(void *a1, char *a2)
{
  id v64 = a1;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration;
  id v8 = [*(id *)&a2[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_configuration] sceneIdentifier];
  id v9 = _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v8);

  uint64_t v65 = v9;
  uint64_t v10 = (char *)v9 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem;
  swift_beginAccess();
  if (!*(void *)v10)
  {
    if (([v64 isTrashed] & 1) != 0
      && ([v64 isFolder] & 1) == 0)
    {
      NSString v16 = [v64 displayName];
      if (!v16)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      DOCAlertUserTrashedFileCanNotBeOpened();
    }
    else
    {
      uint64_t v15 = DOCNode.fpfs_syncFetchFPItem()();
      if (!v15)
      {

        return;
      }
      NSString v16 = (NSString)v15;
      uint64_t v17 = v7;
      NSString v18 = a2;
      id v19 = *(id *)&a2[v17];
      char v20 = sub_1004E84CC(v16, v19);

      if (v20)
      {
        if (([*(id *)&a2[v17] useSharedQuickLook] & 1) != 0
          && ([v64 isFolder] & 1) == 0)
        {
          id v21 = [*(id *)&a2[v17] sceneIdentifier];
          if (v21)
          {
            uint64_t v22 = qword_1007052D8;
            id v23 = v21;
            if (v22 != -1) {
              swift_once();
            }
            char v24 = (void *)qword_10071B4C0;
            id v25 = (char *)[(id)qword_10071B4C0 objectForKey:v23];
            if (!v25)
            {
              id v26 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
              id v25 = (char *)DOCPreviewController.init()();
              [v24 setObject:v25 forKey:v23];
            }

            double v27 = &v25[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
            swift_beginAccess();
            char *v27 = 1;
            *(void *)&v25[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = &protocol witness table for DOCItemInfoContentViewController;
            swift_unknownObjectWeakAssign();
            sub_1000CBE70((uint64_t *)&unk_1007084E0);
            uint64_t v28 = swift_allocObject();
            *(_OWORD *)(v28 + 16) = xmmword_1005A04F0;
            *(void *)(v28 + 32) = v16;
            *(void *)&long long v67 = v28;
            specialized Array._endMutation()();
            unint64_t v29 = v67;
            id v30 = v16;
            DOCPreviewController.set(_:defaultIndex:)(v29, 0, 0, 0, 1);

            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v31 = (void *)static DOCLog.Source.getter();
            static os_log_type_t.debug.getter();
            os_log(_:dso:log:type:_:)();
          }
        }
        uint64_t v32 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v33 = swift_allocObject();
        os_log_type_t v34 = v65;
        *(void *)(v33 + 16) = v32;
        *(void *)(v33 + 24) = v34;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        id v36 = *(void **)&v18[v17];
        unsigned __int8 v37 = v34;
        swift_retain();
        LOBYTE(v36) = [v36 useSharedQuickLook];
        unsigned __int8 v38 = [*(id *)&v18[v17] skipDownload];
        *(void *)&long long v67 = Strong;
        *((void *)&v67 + 1) = sub_100282978;
        long long v68 = (unint64_t)v33;
        *(void *)&long long v69 = 0;
        BYTE8(v69) = 0;
        BYTE9(v69) = (_BYTE)v36;
        BYTE10(v69) = 1;
        *(void *)&long long v70 = 0;
        BYTE8(v70) = 1;
        BYTE9(v70) = v38;
        uint64_t v71 = v18;
        id v39 = *(void **)&v18[v17];
        id v40 = v18;
        if (![v39 shouldOpenInApp])
        {
          id v41 = v16;
          sub_10027F3E8(v41, (uint64_t)&v67);
          swift_unknownObjectRelease();
          swift_release();

          sub_1000A7258((uint64_t)sub_100282978);
          sub_1000A7258(0);

LABEL_30:
          return;
        }
        if (objc_msgSend(v16, "doc_isCollaborationInvitation"))
        {
          if (FPItem.openInvitationIfPossible()())
          {
            swift_unknownObjectRelease();
            swift_release();

            sub_1000A7258((uint64_t)sub_100282978);
            sub_1000A7258(0);
          }
          else
          {
            uint64_t v57 = (void *)static DOCLog.UI.getter();
            LODWORD(v65) = static os_log_type_t.error.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v58 = swift_allocObject();
            *(_OWORD *)(v58 + 16) = xmmword_1005A0030;
            id v59 = [v16 displayName];
            uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v62 = v61;

            *(void *)(v58 + 56) = &type metadata for String;
            *(void *)(v58 + 64) = sub_100073F48();
            *(void *)(v58 + 32) = v60;
            *(void *)(v58 + 40) = v62;
            os_log(_:dso:log:type:_:)();
            swift_unknownObjectRelease();
            swift_release();

            sub_1000A7258((uint64_t)sub_100282978);
            sub_1000A7258(0);

            swift_bridgeObjectRelease();
          }
          goto LABEL_30;
        }
        id v42 = [*(id *)&v18[v17] sceneIdentifier];
        uint64_t v43 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v42);

        id v44 = (void **)&v43[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess();
        id v45 = *v44;
        void *v44 = v16;
        id v46 = v16;
        sub_1000D7C50(v45);

        uint64_t v47 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.info.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1005A0030;
        *(void *)(v48 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        *(void *)(v48 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
        *(void *)(v48 + 32) = v46;
        id v49 = v46;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        NSString v16 = [self defaultManager];
        uint64_t v50 = swift_allocObject();
        long long v51 = v69;
        *(_OWORD *)(v50 + 56) = v68;
        *(void *)(v50 + 16) = v49;
        *(void *)(v50 + 24) = v37;
        *(void *)(v50 + 32) = v40;
        *(_OWORD *)(v50 + 72) = v51;
        *(_OWORD *)(v50 + 88) = v70;
        *(void *)(v50 + 104) = v71;
        *(_OWORD *)(v50 + 40) = v67;
        aBlock[4] = sub_100282984;
        aBlock[5] = v50;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001B6B50;
        void aBlock[3] = &unk_10069D148;
        uint64_t v52 = _Block_copy(aBlock);
        id v53 = v37;
        uint64_t v54 = v40;
        id v55 = v49;
        swift_unknownObjectRetain();
        sub_1000C0640((uint64_t)sub_100282978);
        sub_1000C0640(0);
        id v56 = v54;
        swift_release();
        [v16 fetchURLForItem:v55 completionHandler:v52];
        swift_unknownObjectRelease();
        swift_release();

        sub_1000A7258((uint64_t)sub_100282978);
        sub_1000A7258(0);

        _Block_release(v52);
LABEL_23:

        return;
      }
    }

    goto LABEL_23;
  }
  static Logger.UI.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Interaction] An item was selected while there is another one trying to be opened.", v13, 2u);
    swift_slowDealloc();
    id v14 = v65;
  }
  else
  {
    id v14 = v11;
    uint64_t v11 = v65;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_100281264()
{
}

void *sub_10028128C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      if (static NSObject.== infix(_:_:)())
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1002813CC()
{
  sub_1000CBE70(&qword_100709D60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  uint64_t v1 = UIFontWeightTrait;
  unint64_t v2 = sub_100493E54(inited);
  id v3 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2];
  sub_1000CBE70(&qword_100709D58);
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  *(void *)(v4 + 32) = UIFontDescriptorTraitsAttribute;
  *(void *)(v4 + 64) = sub_1000CBE70((uint64_t *)&unk_10070C650);
  *(void *)(v4 + 40) = v2;
  id v5 = v3;
  uint64_t v6 = UIFontDescriptorTraitsAttribute;
  sub_100493F60(v4);
  type metadata accessor for AttributeName(0);
  sub_1000BAB34((unint64_t *)&qword_1007061C0, type metadata accessor for AttributeName);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v5 fontDescriptorByAddingAttributes:isa];

  id v9 = v8;
  [v9 pointSize];
  id v11 = [self fontWithDescriptor:v9 size:v10];

  return v11;
}

double sub_1002815C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = 1;
  id v10 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  static UIListContentConfiguration.prominentInsetGroupedHeader()();
  UIListContentConfiguration.textProperties.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = UIListContentConfiguration.TextProperties.font.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  char v12 = v15;
  *(_OWORD *)a1 = xmmword_1005A4430;
  *(_OWORD *)(a1 + 16) = xmmword_1005A4440;
  double result = 11.0;
  *(_OWORD *)(a1 + 32) = xmmword_1005A4450;
  *(void *)(a1 + 48) = 0x4026000000000000;
  *(unsigned char *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  return result;
}

unsigned char *sub_1002817B0()
{
  type metadata accessor for DOCCopyableLabel();
  uint64_t v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy;
  char v3 = v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy];
  v0[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = 1;
  if ((v3 & 1) == 0)
  {
    [v0 setUserInteractionEnabled:1];
    uint64_t v4 = sub_100222E74();
    char v5 = v4[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled];
    v4[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = v1[v2];
    sub_1004DF730(v5);
  }
  [v1 setAdjustsFontForContentSizeCategory:1];
  [v1 setTextAlignment:4];
  uint64_t v6 = v1;
  id v7 = sub_1002813CC();
  [v6 setFont:v7];

  return v6;
}

void sub_1002818A8()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_documentManager] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_metrics];
  sub_1002815C8((uint64_t)v8);
  long long v2 = v8[3];
  v1[2] = v8[2];
  v1[3] = v2;
  v1[4] = v8[4];
  long long v3 = v8[1];
  *uint64_t v1 = v8[0];
  v1[1] = v3;
  uint64_t v4 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_layoutMargins];
  _OWORD *v4 = xmmword_1005A4420;
  v4[1] = xmmword_1005A4420;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_showsShareButton] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___thumbnailView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___filenameTitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareStatusLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___kindAndSizeView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___syncingErrorLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___downloadButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataSectionLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRowSeparator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataTitleRow] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___showMoreMetadataButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___metadataView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRowSeparator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsTitleRow] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsSectionTitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___addTagsButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___tagsCollectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsView] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___shareView] = 0;
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController__statusAppearance] = 10;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___actionsRow] = 0;
  uint64_t v5 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_rootContentView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController.RootHStack()) init];
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController____lazy_storage___scrollView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_attributionView] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController;
  *(void *)&v0[v6] = sub_100494A88((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodesObserver] = 0;
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_shouldObserveNodes] = 0;
  v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat] = 0;
  id v7 = &v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_lastThumbnailSize];
  *id v7 = 0;
  v7[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100281B5C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes;
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6 != 1) {
      return;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return;
  }
  unint64_t v3 = *(void *)&v0[v1];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v5 = *(void **)(v3 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_100280884(v5, v0);

  swift_unknownObjectRelease();
}

void sub_100281CB8(void (*a1)(id))
{
  id v2 = sub_100272F88();
  id v3 = [v2 window];

  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v4 = (char *)sub_100272F88();
  uint64_t v5 = &v4[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
  swift_beginAccess();
  if (!*(void *)(*(void *)v5 + 16))
  {

LABEL_5:
    id v6 = 0;
    goto LABEL_6;
  }
  id v6 = *(id *)(*(void *)v5 + 32);

LABEL_6:
  a1(v6);
}

uint64_t sub_100281D84(void *a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_nodes);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  do
  {
    if ((v3 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_unknownObjectRetain();
    }
    ++v6;
    swift_getObjectType();
    *(void *)(swift_allocObject() + 16) = a1;
    id v7 = a1;
    DOCNode.fpfs_fetchFPItem(completion:)();
    swift_unknownObjectRelease();
    swift_release();
  }
  while (v4 != v6);
LABEL_10:

  return swift_bridgeObjectRelease();
}

uint64_t sub_100281ED0()
{
  return sub_100011370((void (*)(void))&_swift_errorRelease);
}

void sub_100281EE8()
{
}

void sub_100281EF0(void *a1)
{
  if (![a1 isFolder]
    || (objc_msgSend(a1, "doc_isCollaborationInvitation") & 1) != 0)
  {
    id v3 = [a1 fpfs_fpItem];
    if (!v3) {
      return;
    }
    id v7 = v3;
    sub_10027FEC8(v7, v1);

    goto LABEL_5;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v5 = (void *)Strong;
  id v6 = [a1 fpfs_fpItem];
  if (v6)
  {
    id v7 = v6;
    [v5 didTapLocationOf:];
    swift_unknownObjectRelease();
LABEL_5:

    return;
  }

  swift_unknownObjectRelease();
}

void *_s5Files28DOCImageContainerFittingViewC15dragInteraction_17itemsForBeginningSaySo10UIDragItemCGSo0kG0C_So0K7Session_ptF_0(void *a1)
{
  type metadata accessor for DOCDragInteraction();
  if (swift_dynamicCastClass())
  {
    swift_getObjectType();
    id v2 = a1;
    uint64_t v3 = DOCNode.fpfs_syncFetchFPItem()();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      id v5 = [objc_allocWithZone((Class)NSItemProvider) init];
      NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(v4, 2u, 0, 0);
      id v6 = [objc_allocWithZone((Class)UIDragItem) initWithItemProvider:v5];
      id v7 = (void *)DOCNode.fpfs_syncFetchFPItem()();
      [v6 setLocalObject:v7];

      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1005A04F0;
      *(void *)(v8 + 32) = v6;
      uint64_t v11 = v8;
      specialized Array._endMutation()();
      uint64_t v9 = v11;
    }
    else
    {

      return _swiftEmptyArrayStorage;
    }
    return (void *)v9;
  }
  else
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id _s5Files28DOCImageContainerFittingViewC15dragInteraction_17previewForLifting7sessionSo21UITargetedDragPreviewCSgSo06UIDragG0C_So0O4ItemCSo0O7Session_ptF_0(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs;
  swift_beginAccess();
  if (!*(void *)(*(void *)v3 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void **)(*(void *)v3 + 32);
  id v5 = objc_allocWithZone((Class)UIDragPreviewParameters);
  id v6 = v4;
  id v7 = [v5 init];
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = [v8 clearColor];
  [v9 setBackgroundColor:v10];

  [v6 frame];
  double v13 = v12;
  if (v12 != 0.0 || v11 != 0.0)
  {
    type metadata accessor for DOCDragInteraction();
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      char v15 = *(void **)(v14 + OBJC_IVAR____TtC5FilesP33_5854F2584B6BB42CC0BFB2F44FFF0F2918DOCDragInteraction_node);
      id v16 = a1;
      if ([v15 isFolder])
      {
        sub_10009E6C4(0, (unint64_t *)&qword_10070ACC0);
        uint64_t v17 = (void *)static UIBezierPath.folder.getter();
        [v17 bounds];
        CGAffineTransformMakeScale(&v21, v13 / v18, v13 / v18);
        [v17 applyTransform:&v21];
        CGAffineTransformMakeTranslation(&v21, 0.0, 0.0);
        [v17 applyTransform:&v21];
        [v9 setVisiblePath:v17];

        id v16 = v17;
      }
    }
  }
  id v19 = [objc_allocWithZone((Class)UITargetedDragPreview) initWithView:v6 parameters:v9];

  return v19;
}

uint64_t type metadata accessor for DOCShareButton()
{
  return self;
}

uint64_t type metadata accessor for DOCItemInfoContentViewController()
{
  return self;
}

uint64_t type metadata accessor for DOCItemInfoContentViewController.RootHStack()
{
  return self;
}

uint64_t type metadata accessor for DOCItemInfoContentViewController.RootHStack.StackElementView()
{
  return self;
}

uint64_t type metadata accessor for DOCDragInteraction()
{
  return self;
}

void destroy for DOCItemInfoContentViewController.Metrics(uint64_t a1)
{
  id v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for DOCItemInfoContentViewController.Metrics(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(void **)(a2 + 64);
  id v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  id v6 = v4;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCItemInfoContentViewController.Metrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(void **)(a2 + 64);
  id v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 72);
  uint64_t v8 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for DOCItemInfoContentViewController.Metrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);

  id v5 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemInfoContentViewController.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemInfoContentViewController.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemInfoContentViewController.Metrics()
{
  return &type metadata for DOCItemInfoContentViewController.Metrics;
}

void sub_1002826E0()
{
}

uint64_t sub_1002826E8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100282720()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100282768(uint64_t a1, uint64_t a2)
{
  sub_10027CCEC(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100282774()
{
  return sub_100011370((void (*)(void))&_swift_release);
}

void sub_10028278C()
{
  sub_10027D098(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100282794()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002827D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10027E0B4(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1002827DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100282844()
{
  return sub_100011370((void (*)(void))&_swift_release);
}

void sub_10028285C(uint64_t a1)
{
  sub_10027953C(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_100282864()
{
  return sub_100011370((void (*)(void))&_swift_release);
}

uint64_t sub_10028287C()
{
  return sub_1002795E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100282888(uint64_t a1, uint64_t a2)
{
  return sub_1002791D4(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100282898()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002828E0(void *a1, uint64_t a2)
{
  sub_100279034(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void sub_1002828EC(uint64_t a1)
{
}

uint64_t sub_1002828F8()
{
  return sub_100011370((void (*)(void))&_swift_errorRelease);
}

id sub_100282910@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isHidden];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100282944(unsigned __int8 *a1, id *a2)
{
  return [*a2 setHidden:*a1];
}

void sub_100282958(void **a1)
{
}

uint64_t sub_100282960()
{
  return sub_100011370((void (*)(void))&_swift_release);
}

void sub_100282978(void *a1)
{
  sub_10027BDD8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100282984(uint64_t a1, uint64_t a2)
{
  sub_10027C090(a1, a2, *(void **)(v2 + 16), *(char **)(v2 + 24), *(void **)(v2 + 32), v2 + 40);
}

uint64_t sub_100282994()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  uint64_t v9 = v0 + v8;
  swift_unknownObjectRelease();
  if (*(void *)(v0 + v8 + 8)) {
    swift_release();
  }
  if (*(void *)(v9 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v8 + 72, v3 | 7);
}

uint64_t sub_100282AA4()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  unint64_t v8 = *(void **)(v0 + v5);

  return sub_10027C5F8(v0 + v2, v6, v7, v8, v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100282B54()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 104, 7);
}

void sub_100282BCC(char a1)
{
  sub_10027C6C0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), (long long *)(v1 + 32));
}

uint64_t sub_100282BD8()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 112, 7);
}

void sub_100282C50()
{
  sub_10027C7D4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32), v0 + 40);
}

uint64_t sub_100282C64()
{
  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 96, 7);
}

void sub_100282CD4(void *a1)
{
  sub_1004E6650(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_100282CE0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100282D18(uint64_t a1)
{
  return sub_1004E6FB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100282D20()
{
  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

void sub_100282DA0(void *a1)
{
  sub_1004E7024(a1, v1[2], (uint64_t)(v1 + 3), v1[12], v1[13], v1[14]);
}

void sub_100282DB4(void *a1)
{
}

uint64_t sub_100282DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070C610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100282E24()
{
  return sub_100011370((void (*)(void))&_swift_release);
}

uint64_t sub_100282E40()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100282EC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100282EF8(void *a1)
{
}

void sub_100282F00()
{
}

void sub_100282F08()
{
}

uint64_t sub_100282F10()
{
  return sub_100011370((void (*)(void))&_swift_release);
}

void sub_100282F28(void *a1)
{
}

uint64_t sub_100282F30()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100283054(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CB70;
  return sub_100278DB0(a1, v5, v6, v7, v8);
}

uint64_t sub_100283150()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100283198(uint64_t a1)
{
  sub_10027F06C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t DOCTabBarItem.tab.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t DOCTabBarItem.tab.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*DOCTabBarItem.tab.modify())()
{
  return j__swift_endAccess;
}

uint64_t DOCTabBarItem.tabIdentifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  swift_beginAccess();
  uint64_t v2 = *v1;
  switch(v2)
  {
    case 0:
      return 0x73746E65636572;
    case 2:
      return 0x6573776F7262;
    case 1:
      return 0x646572616873;
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t static DOCTabBarItem.tabIdentifier(forTab:)(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x73746E65636572;
    case 2:
      return 0x6573776F7262;
    case 1:
      return 0x646572616873;
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

unint64_t DOCTabBarItem.description.getter()
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files13DOCTabBarItem_tab);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*v1)
  {
    if (v2 == 2)
    {
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x6573776F7242;
    }
    else if (v2 == 1)
    {
      unint64_t v3 = 0xE600000000000000;
      uint64_t v4 = 0x646572616853;
    }
    else
    {
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x3F3F3F3F3FLL;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v4 = 0x73746E65636552;
  }
  unint64_t v5 = v3;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return 0xD000000000000013;
}

id DOCTabBarItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCTabBarItem();
  return [super dealloc];
}

id UIViewController.DOCTabBarItem.getter()
{
  id result = [v0 tabBarItem];
  if (result)
  {
    type metadata accessor for DOCTabBarItem();
    return (id)swift_dynamicCastClassUnconditional();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void UIViewController.DOCTabBarItem.setter(void *a1)
{
  [v1 setTabBarItem:a1];
}

void *UITabBar.DOCTabBarItems.getter()
{
  id v1 = [v0 items];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  objc_super v2 = v1;
  sub_10009E6C4(0, &qword_10070C6D8);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_4:
  id result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      ++v6;
      type metadata accessor for DOCTabBarItem();
      swift_dynamicCastClassUnconditional();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v4 != v6);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100283E44()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100283E7C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id DOCSidebarViewController.configuration.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
}

id sub_100283EC4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v4;
    uint64_t v11 = v10;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v16 = v13;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v15 = sub_10009B0E4(0xD000000000000024, 0x80000001005E2AA0, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_10009B0E4(a1, a2, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: [%s] updatingModelForUIChangeCount++", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_1002863C4(1, a1, a2, 0);
}

id sub_100284134(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  swift_bridgeObjectRetain_n();
  double v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v19 = v8;
    uint64_t v15 = v14;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v20 = v4;
    uint64_t v21 = sub_10009B0E4(0xD000000000000034, 0x80000001005E2A20, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10009B0E4(a1, a2, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: [%s] updatingModelForUIChangeCount--", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return sub_1002863C4(-1, a1, a2, a3 & 1);
}

uint64_t sub_1002843B8(char a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  uint64_t v6 = swift_dynamicCastClassUnconditional();
  if (a2(v6))
  {
    id v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess();
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();
    char v9 = sub_10004D88C(a1, v8);
    swift_bridgeObjectRelease();
    if (*(uint64_t *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
      sub_10004DBB0((v9 & 1) == 0, 1);
    }
    else {
      sub_1002861DC();
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_unknownObjectRelease();
}

id sub_100284548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarPaneNavigationController();
  return [super dealloc];
}

uint64_t sub_100284650(char *a1, char a2)
{
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(unsigned char *)(v2 + 56) = -1;
  uint64_t v3 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData] + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x100284934);
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v6 = 32;
  while (2)
  {
    uint64_t v7 = *(void *)(v3 + v6);
    switch(*(unsigned char *)(v7 + 16))
    {
      case 2:
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        break;
      default:
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          swift_unknownObjectRelease();
          v6 += 16;
          if (--v4) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          __break(1u);
        }
        break;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 + 88);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v9 + 32;
    swift_bridgeObjectRetain();
    do
    {
      if (*(unsigned char *)(v11 + 24) == 1)
      {
        id v12 = *(id *)v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v11 += 32;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  os_log_type_t v13 = a1;
  uint64_t v14 = sub_10028D568((unint64_t)_swiftEmptyArrayStorage, (uint64_t)v13);
  swift_bridgeObjectRelease();

  if (v14) {
  *(unsigned char *)(v2 + 16) = v14 != 0;
  }
  *(unsigned char *)(v2 + 17) = a2;
  return v2;
}

uint64_t sub_10028494C()
{
  sub_1000A7C1C(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return swift_deallocClassInstance();
}

uint64_t sub_100284994(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  uint64_t result = *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (result)
  {
    if (a1 || !*(unsigned char *)(result + 17)) {
      return result;
    }
    *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession] = 0;
  }
  else
  {
    if (!a1) {
      return result;
    }
    type metadata accessor for DOCSidebarViewController.EditingSession();
    uint64_t v6 = swift_allocObject();
    sub_100284650(v2, a1);
    *(void *)&v2[v4] = v6;
  }

  return swift_release();
}

uint64_t sub_100284A3C()
{
  sub_1000A7258(*(void *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t sub_100284A74()
{
  return sub_1000A7258(*(void *)(v0 + 104));
}

uint64_t sub_100284A7C()
{
  sub_1000A7258(*(void *)(v0 + 32));
  sub_1000A7258(*(void *)(v0 + 48));
  sub_1000A7C1C(*(id *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  swift_release();
  sub_1000A7258(*(void *)(v0 + 104));

  return swift_deallocClassInstance();
}

void sub_100284ADC(void *a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  char v7 = a6;
  uint64_t v11 = *(void **)(v6 + 64);
  uint64_t v12 = *(void *)(v6 + 72);
  uint64_t v13 = *(void *)(v6 + 80);
  int v14 = *(unsigned __int8 *)(v6 + 88);
  char v15 = a4 == -1;
  if (v14 != 255)
  {
    if (a4 == -1)
    {
      char v15 = 0;
    }
    else
    {
      uint64_t v16 = a3;
      sub_1000A9454(v11, v12, v13, v14);
      sub_1000A9454(v11, v12, v13, v14);
      sub_1000A9454(a1, a2, v16, a4);
      unint64_t v17 = sub_100249E60((unint64_t)v11, v12, v13, v14);
      uint64_t v19 = v18;
      if (v17 == sub_100249E60((unint64_t)a1, a2, v16, a4) && v19 == v20) {
        char v15 = 1;
      }
      else {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000A7C1C(a1, a2, v16, a4);
      sub_1000A7C1C(v11, v12, v13, v14);
      sub_1000A7C1C(v11, v12, v13, v14);
      a3 = v16;
      uint64_t v11 = *(void **)(v6 + 64);
      uint64_t v12 = *(void *)(v6 + 72);
      uint64_t v13 = *(void *)(v6 + 80);
      LOBYTE(v14) = *(unsigned char *)(v6 + 88);
      char v7 = a6;
    }
  }
  *(void *)(v6 + 64) = a1;
  *(void *)(v6 + 72) = a2;
  *(void *)(v6 + 80) = a3;
  *(unsigned char *)(v6 + 88) = a4;
  sub_1000A9454(a1, a2, a3, a4);
  sub_1000A7C1C(v11, v12, v13, v14);
  *(unsigned char *)(v6 + 89) = a5 & 1;
  if (v15 & 1) == 0 && (v7)
  {
    sub_1004880B0(0xD000000000000011, 0x80000001005E2DF0);
    uint64_t v21 = *(void (**)(uint64_t))(v6 + 32);
    if (v21)
    {
      swift_retain();
      v21(v6);
      sub_1000A7258((uint64_t)v21);
    }
  }
}

uint64_t sub_100284D48(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  sub_1000CBE70(&qword_10070CE80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_WORD *)(v11 + 48) = 767;
  sub_1004880B0(0xD00000000000001BLL, 0x80000001005E2E10);
  *(void *)(v5 + 96) = v11;
  swift_retain();
  swift_release();
  if (*(unsigned char *)(v5 + 24))
  {
    _StringGuts.grow(_:)(28);
    v19._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v19._object = (void *)0x80000001005E2E50;
    String.append(_:)(v19);
    _print_unlocked<A, B>(_:_:)();
    sub_1004880B0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void **)(v5 + 64);
    uint64_t v21 = *(void *)(v5 + 72);
    uint64_t v22 = *(void *)(v5 + 80);
    *(void *)(v5 + 72) = 0;
    *(void *)(v5 + 80) = 0;
    *(void *)(v5 + 64) = 0;
    unsigned __int8 v23 = *(unsigned char *)(v5 + 88);
    *(unsigned char *)(v5 + 88) = -1;
    sub_1000A7C1C(v20, v21, v22, v23);
    *(unsigned char *)(v5 + 89) = 0;
    sub_10010ED28(a1, a2, a3, a4);
    sub_100284ADC(a1, a2, a3, a4, a5 & 1, 1);
    sub_10010EDB8(a1, a2, a3, a4);
  }
  else
  {
    _StringGuts.grow(_:)(27);
    v12._object = (void *)0x80000001005E2E30;
    v12._uint64_t countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v12);
    _print_unlocked<A, B>(_:_:)();
    sub_1004880B0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = a4;
    char v14 = a5;
    char v15 = *(void **)(v11 + 24);
    uint64_t v16 = *(void *)(v11 + 32);
    uint64_t v17 = *(void *)(v11 + 40);
    *(void *)(v11 + 24) = a1;
    *(void *)(v11 + 32) = a2;
    *(void *)(v11 + 40) = a3;
    unsigned __int8 v18 = *(unsigned char *)(v11 + 48);
    *(unsigned char *)(v11 + 48) = v13;
    sub_10010ED28(a1, a2, a3, v13);
    sub_1000A7C1C(v15, v16, v17, v18);
    *(unsigned char *)(v11 + 49) = v14 & 1;
  }
  sub_100285164();
  return swift_release();
}

uint64_t sub_100284FD8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, char a5)
{
  uint64_t v6 = *(void *)(v5 + 96);
  if (v6)
  {
    uint64_t v7 = v5;
    uint64_t v11 = (void *)result;
    swift_retain();
    _StringGuts.grow(_:)(27);
    v12._object = (void *)0x80000001005E2D70;
    v12._uint64_t countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v12);
    _print_unlocked<A, B>(_:_:)();
    sub_1004880B0(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = *(void **)(v6 + 24);
    uint64_t v14 = *(void *)(v6 + 32);
    uint64_t v15 = *(void *)(v6 + 40);
    *(void *)(v6 + 24) = v11;
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a3;
    unsigned __int8 v16 = *(unsigned char *)(v6 + 48);
    *(unsigned char *)(v6 + 48) = a4;
    sub_10010ED28(v11, a2, a3, a4);
    sub_1000A7C1C(v13, v14, v15, v16);
    *(unsigned char *)(v6 + 49) = a5 & 1;
    if ((*(unsigned char *)(v7 + 24) & 2) != 0)
    {
      sub_1004880B0(0xD00000000000001CLL, 0x80000001005E2D90);
      [*(id *)(v6 + 16) invalidate];
      uint64_t v17 = *(void **)(v6 + 16);
      *(void *)(v6 + 16) = 0;

      sub_100285164();
    }
    return swift_release();
  }
  return result;
}

void sub_100285164()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    if (!*(void *)(v1 + 16))
    {
      double v2 = fmax(*(double *)(v0 + 16), 0.1);
      uint64_t v3 = self;
      uint64_t v4 = swift_allocObject();
      swift_weakInit();
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v4;
      *(void *)(v5 + 24) = v1;
      v9[4] = sub_10028E5C0;
      v9[5] = v5;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 1107296256;
      v9[2] = sub_10041B2E4;
      v9[3] = &unk_10069D710;
      uint64_t v6 = _Block_copy(v9);
      swift_retain_n();
      swift_release();
      id v7 = [v3 scheduledTimerWithTimeInterval:0 repeats:v6 block:v2];
      _Block_release(v6);
      char v8 = *(void **)(v1 + 16);
      *(void *)(v1 + 16) = v7;
      swift_release();
    }
  }
}

Class sub_1002853AC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_10009E6C4(0, a4);
  swift_bridgeObjectRetain();
  v4.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v4.super.isa;
}

id DOCSidebarViewController.collectionView.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  id v1 = [super collectionView];

  return v1;
}

void DOCSidebarViewController.collectionView.setter(void *a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super setCollectionView:a1];
}

void sub_10028562C()
{
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarDelegate);

  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();

  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource, (uint64_t *)&unk_100705D60);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath, (uint64_t *)&unk_1007069A0);
  sub_1000A7C1C(*(id *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem), *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 8), *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 16), *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24));
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_debugOptionsMenu);
}

id DOCSidebarViewController.__deallocating_deinit()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_favoritesSubscriber];
  if (v1)
  {
    double v2 = self;
    id v3 = v1;
    id v4 = [v2 sharedManager];
    [v4 removeSubscriber:v3];
  }
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber];
  if (v5)
  {
    uint64_t v6 = self;
    id v7 = v5;
    id v8 = [v6 sharedManager];
    [v8 removeSubscriber:v7];
  }
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  return [super dealloc];
}

void sub_100285C38()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber);
  if (v2)
  {
    id v3 = self;
    id v4 = v2;
    id v5 = [v3 sharedManager];
    [v5 removeSubscriber:v4];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = 0;
  }
  id v7 = (void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration + 8))
  {
    swift_bridgeObjectRetain();
    sub_100027100();
    dispatch thunk of NSNotification.SubscriptionsController.invalidate(_:)();
    swift_release();
    swift_bridgeObjectRelease();
    *id v7 = 0;
    v7[1] = 0;
    swift_bridgeObjectRelease();
  }
}

void sub_100285D30()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber;
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber])
  {
    double v2 = v0;
    sub_100027100();
    uint64_t updated = (void *)DOCNotificationDidUpdateSmartFolders.getter();
    long long aBlock = 0u;
    long long v25 = 0u;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v4 = [self mainQueue];
    uint64_t v5 = dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
    uint64_t v7 = v6;
    swift_release();

    swift_release();
    sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
    id v8 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration];
    *id v8 = v5;
    v8[1] = v7;
    swift_bridgeObjectRelease();
    id v9 = [self sharedManager];
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v26 = sub_10028E7C4;
    uint64_t v27 = v10;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v25 = sub_100007C6C;
    *((void *)&v25 + 1) = &unk_10069D850;
    uint64_t v11 = _Block_copy(&aBlock);
    swift_release();
    id v12 = [v9 addSubscriber:v11];
    _Block_release(v11);

    unsigned __int8 v13 = *(void **)&v2[v1];
    *(void *)&v2[v1] = v12;

    uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    if ([v14 isPickerUI])
    {
      type metadata accessor for DOCSmartFolderManager();
      uint64_t v15 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;
      Swift::String v19 = *(void **)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
      uint64_t v20 = self;
      id v21 = v19;
      uint64_t v22 = v2;
      id v23 = [v20 defaultPermission];
      sub_1002DAF0C(v16, v18, v14, v23, 3, v19, 1, v15, v22);

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10028601C(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection);
  swift_retain();
  id v12 = sub_10024AAE8((unint64_t)a1, a2, a3, a4);
  unsigned __int8 v13 = *(void **)(v11 + 24);
  *(void *)(v11 + 24) = v12;
  swift_release();

  uint64_t v14 = *(void *)(*(void *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer) + 96);
  swift_retain();
  char v15 = a5 & 1;
  if (v14) {
    sub_100284FD8((uint64_t)a1, a2, a3, a4, v15);
  }
  else {
    sub_100284D48(a1, a2, a3, a4, v15);
  }

  return swift_release();
}

void sub_1002860F8()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    double v2 = *(char **)&Strong[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver];
    if (v2)
    {
      id v3 = *(void (**)(uint64_t))&v2[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock];
      swift_beginAccess();
      id v4 = v2;
      swift_retain();
      uint64_t v5 = swift_bridgeObjectRetain();
      v3(v5);

      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1002861DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    uint64_t v10 = sub_10009B0E4(0xD000000000000022, 0x80000001005E2CF0, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: Got update while freezing.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange) = 1;
  return result;
}

id sub_1002863C4(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v5 = v4;
  int v48 = a4;
  uint64_t v49 = a2;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v45 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  id result = (id)__chkstk_darwin(v13);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount;
  uint64_t v19 = *(void *)&v5[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount];
  uint64_t v20 = v19 + a1;
  if (__OFADD__(v19, a1))
  {
    __break(1u);
  }
  else
  {
    id v50 = result;
    uint64_t v42 = v11;
    *(void *)&v5[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] = v20;
    static Logger.Sidebar.getter();
    swift_bridgeObjectRetain_n();
    unint64_t v21 = a3;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.debug.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v43 = v9;
    uint64_t v44 = v8;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      id v41 = v5;
      uint64_t v26 = v25;
      uint64_t v40 = swift_slowAlloc();
      aBlock[0] = v40;
      *(_DWORD *)uint64_t v26 = 136315650;
      uint64_t v51 = sub_10009B0E4(0xD00000000000003ELL, 0x80000001005E2A60, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_10009B0E4(v49, v21, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 22) = 2048;
      uint64_t v51 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s: [%s] Setting updatingModelForUIChangeCount to %ld.", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v5 = v41;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id result = (id)(*(uint64_t (**)(char *, id))(v14 + 8))(v17, v50);
    if (*(uint64_t *)&v5[v18] <= 0)
    {
      uint64_t v27 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange;
      if (v5[OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange] == 1)
      {
        id result = [v5 isViewLoaded];
        if (result)
        {
          if ([self areAnimationsEnabled]) {
            char shouldAllow = UIViewController.doc_shouldAllowAnimations.getter();
          }
          else {
            char shouldAllow = 0;
          }
          uint64_t v29 = v49;
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = v5;
          *(void *)(v30 + 24) = v29;
          *(void *)(v30 + 32) = v21;
          int v31 = shouldAllow & 1;
          *(unsigned char *)(v30 + 40) = v31;
          if (v48)
          {
            swift_bridgeObjectRetain();
            sub_1002869D0((uint64_t)v5, v29, v21, v31);
            id result = (id)swift_release();
          }
          else
          {
            sub_10009E6C4(0, (unint64_t *)&qword_100705380);
            swift_bridgeObjectRetain();
            uint64_t v32 = v5;
            uint64_t v33 = (void *)static OS_dispatch_queue.main.getter();
            aBlock[4] = (uint64_t)sub_10028E418;
            aBlock[5] = v30;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1000666D8;
            void aBlock[3] = (uint64_t)&unk_10069D580;
            os_log_type_t v34 = v5;
            double v35 = _Block_copy(aBlock);
            swift_retain();
            swift_release();
            id v36 = v45;
            static DispatchQoS.unspecified.getter();
            aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
            sub_10028E814((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_1000CBE70((uint64_t *)&unk_100705390);
            sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
            unsigned __int8 v37 = v47;
            uint64_t v38 = v44;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            id v39 = v35;
            uint64_t v5 = v34;
            _Block_release(v39);
            swift_release();

            (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v38);
            id result = (id)(*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v36, v42);
          }
          v5[v27] = 0;
        }
      }
    }
  }
  return result;
}

void sub_1002869D0(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0)
  {
    static Logger.Sidebar.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = a2;
      uint64_t v15 = v14;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v21 = v18;
      *(_DWORD *)uint64_t v15 = 136315394;
      int v19 = a4;
      uint64_t v20 = sub_10009B0E4(0xD00000000000003ELL, 0x80000001005E2A60, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_10009B0E4(v17, a3, &v21);
      LOBYTE(a4) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: [%s] Model no longer updating but modelDidUpdateDuringUIChange == true, reloading sidebar.", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_10004DBB0(a4 & 1, 1);
  }
}

uint64_t sub_100286C4C(char a1, char a2, char a3)
{
  uint64_t v4 = v3;
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  *(unsigned char *)(swift_dynamicCastClassUnconditional() + 48) = a2;
  if (a2) {
    sub_1000B8744(0, 0);
  }
  swift_retain();
  sub_100167C64();
  swift_release();
  if (a3)
  {
    uint64_t v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess();
    uint64_t v9 = *v8;
    swift_bridgeObjectRetain();
    char v10 = sub_10004D88C(a1, v9);
    swift_bridgeObjectRelease();
    if (*(uint64_t *)(v4 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
      sub_10004DBB0((v10 & 1) == 0, 1);
    }
    else {
      sub_1002861DC();
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_unknownObjectRelease();
}

void sub_100286DF4(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon);
  swift_beginAccess();
  *uint64_t v1 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  sub_10004DBB0(0, 1);
}

uint64_t sub_100286E5C(uint64_t a1, uint64_t a2, void (*a3)(long long *))
{
  uint64_t v5 = sub_1000CBE70(&qword_10070CE98);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v7 = (long long *)&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t result = Notification.userInfo.getter();
  if (result)
  {
    uint64_t v9 = result;
    char v10 = (void *)DOCTagRegistryChangeUserTagsDidChangeKey;
    uint64_t v18 = DOCTagRegistryChangeUserTagsDidChangeKey;
    type metadata accessor for DOCTagRegistryChangeKey(0);
    sub_10028E814((unint64_t *)&unk_10070CEA0, type metadata accessor for DOCTagRegistryChangeKey);
    id v11 = v10;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v9 + 16) && (unint64_t v12 = sub_10008E070((uint64_t)v19), (v13 & 1) != 0))
    {
      sub_10009B208(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v20);
    }
    else
    {
      long long v20 = 0u;
      long long v21 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)v19);
    if (!*((void *)&v21 + 1))
    {
      uint64_t v16 = (uint64_t *)&unk_100705D60;
      uint64_t v17 = &v20;
      return sub_1000CBBA4((uint64_t)v17, v16);
    }
    uint64_t result = swift_dynamicCast();
    if ((result & 1) != 0 && v18 == 1)
    {
      uint64_t v14 = type metadata accessor for Notification();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(long long *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
      (*(void (**)(long long *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      a3(v7);
      uint64_t v16 = &qword_10070CE98;
      uint64_t v17 = v7;
      return sub_1000CBBA4((uint64_t)v17, v16);
    }
  }
  return result;
}

void sub_1002870A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
    if ([v2 isPickerUI])
    {
      type metadata accessor for DOCSmartFolderManager();
      uint64_t v3 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;
      os_log_type_t v7 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
      uint64_t v8 = self;
      id v9 = v7;
      char v10 = v1;
      uint64_t v1 = (char *)[v8 defaultPermission];
      sub_1002DAF0C(v4, v6, v2, v1, 3, v7, 1, v3, v10);

      swift_bridgeObjectRelease();
    }
  }
}

void sub_1002871E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
    if ([v2 isPickerUI])
    {
      type metadata accessor for DOCSmartFolderManager();
      uint64_t v3 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;
      os_log_type_t v7 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
      uint64_t v8 = self;
      id v9 = v7;
      char v10 = v1;
      uint64_t v1 = (char *)[v8 defaultPermission];
      sub_1002DAF0C(v4, v6, v2, v1, 3, v7, 1, v3, v10);

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_100287330(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    sub_10028D7E8(1, a2, (uint64_t)_swiftEmptyArrayStorage);
    return swift_bridgeObjectRelease_n();
  }
  uint64_t result = sub_100019008(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = a2;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v11 = _swiftEmptyArrayStorage[3];
        if (v12 >= v11 >> 1) {
          sub_100019008(v11 > 1, v12 + 1, 1);
        }
        ++v6;
        _swiftEmptyArrayStorage[2] = v12 + 1;
        char v13 = &_swiftEmptyArrayStorage[4 * v12];
        v13[4] = v7;
        v13[5] = v8;
        v13[6] = v10;
        *((unsigned char *)v13 + 56) = 3;
      }
      while (v4 != v6);
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;
        unint64_t v19 = _swiftEmptyArrayStorage[2];
        unint64_t v20 = _swiftEmptyArrayStorage[3];
        id v21 = v15;
        if (v19 >= v20 >> 1) {
          sub_100019008(v20 > 1, v19 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v19 + 1;
        uint64_t v22 = &_swiftEmptyArrayStorage[4 * v19];
        v22[4] = v21;
        v22[5] = v16;
        v22[6] = v18;
        *((unsigned char *)v22 + 56) = 3;
        ++v14;
        --v4;
      }
      while (v4);
    }
    a2 = v23;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_100287524(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (!a2) {
    goto LABEL_34;
  }
  uint64_t v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
  uint64_t v5 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData) + 24);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v7 = v5 + 40;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v7 - 8) + 16))
    {
      case 4:
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        break;
      default:
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0)
        {
          swift_unknownObjectRelease();
          v7 += 16;
          if (--v6) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          __break(1u);
        }
        break;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v9 = (unint64_t)sub_100287A40();
  swift_unknownObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v3 + v4) + 24);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    goto LABEL_31;
  }
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v12 = v10 + 40;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v12 - 8) + 16))
    {
      case 2:
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        break;
      default:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          swift_unknownObjectRelease();
          v12 += 16;
          if (--v11) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          __break(1u);
        }
        break;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = sub_100287A40();
  swift_unknownObjectRelease();
  sub_100169BC0((unint64_t)v14);
  uint64_t v4 = v9;
  uint64_t v27 = v3;
  if (!(v9 >> 62))
  {
    uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v3 = v27;
LABEL_34:
    uint64_t v26 = (void *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
    *uint64_t v26 = a1;
    v26[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_16:
  uint64_t v16 = 4;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      uint64_t v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v17 = (char *)*(id *)(v4 + 8 * v16);
    }
    uint64_t v18 = v17;
    uint64_t v19 = v16 - 3;
    if (__OFADD__(v16 - 4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v20 = *(void **)&v17[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v20)
    {
      id v21 = [v20 identifier];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      BOOL v24 = v23;

      v25._uint64_t countAndFlagsBits = v22;
      v25._object = v24;
      LOBYTE(v21) = String.hasPrefix(_:)(v25);
      swift_bridgeObjectRelease();
      if (v21) {
        break;
      }
    }

    ++v16;
    if (v19 == v15) {
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease();
  id v30 = v18;
  sub_1004833AC(v18, 0, 0, 1, 1, 1);
  sub_10028601C(v18, 0, 0, 1, 0);
}

void *sub_100287A40()
{
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_10028CFF0(v0);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v2 = v1[2];
  if (v2)
  {
    uint64_t v3 = v1 + 4;
    swift_bridgeObjectRetain();
    do
    {
      if (*((unsigned char *)v3 + 24) == 1)
      {
        uint64_t v4 = (void *)*v3;
        type metadata accessor for DOCFileProviderSource(0);
        if (swift_dynamicCastClass())
        {
          id v5 = v4;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      v3 += 4;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100287B88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v6;
    uint64_t v13 = v12;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = v19;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v21 = sub_10009B0E4(0xD000000000000025, 0x80000001005E2D40, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v21 = a1;
    uint64_t v22 = a2;
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v21 = sub_10009B0E4(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Erase] %s found matching source to select: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
  uint64_t *v16 = a1;
  v16[1] = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void DOCSidebarViewController.effectiveAppearanceDidChange(_:)(uint64_t a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super effectiveAppearanceDidChange:a1];
  if ([v1 isViewLoaded]) {
    sub_100287E8C();
  }
}

void sub_100287E8C()
{
  id v1 = [v0 effectiveAppearance];
  if (v1)
  {
    id v6 = v1;
    unsigned int v2 = objc_msgSend(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration], "sourceListUI"), "overridesBackgroundColorUsingEffectiveAppearance");
    swift_unknownObjectRelease();
    if (v2)
    {
      id v3 = [v6 backgroundColor];
      v7.receiver = v0;
      v7.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
      id v4 = [super collectionView];
      if (v4)
      {
        id v5 = v4;
        type metadata accessor for DOCSidebarCollectionView();
        [(id)swift_dynamicCastClassUnconditional() setBackgroundColor:v3];
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
    }
  }
}

Swift::Void __swiftcall DOCSidebarViewController.viewDidLoad()()
{
  id v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1000CBE70(&qword_100708758);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v20.receiver = v0;
  v20.super_class = v5;
  [super viewDidLoad];
  [v0 setClearsSelectionOnViewWillAppear:0];
  sub_100287E8C();
  v19.receiver = v0;
  v19.super_class = v5;
  [super collectionView];
  if (!v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  objc_super v7 = v6;
  type metadata accessor for DOCSidebarCollectionView();
  [v1 setContentScrollView:swift_dynamicCastClassUnconditional() forEdge:15];

  if ((v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] & 1) == 0)
  {
    v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] = 1;
    sub_100016B08();
    sub_10001F838();
    sub_100026E84();
    if ([*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] isPickerUI])sub_100285D30(); {
  }
    }
  sub_1000CBE70(&qword_10070C738);
  uint64_t v8 = type metadata accessor for DOCTraitChangeObservingOptions();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  static DOCTraitChangeObservingOptions.triggerInitialObservance.getter();
  uint64_t v18 = v10;
  sub_10028E814(&qword_10070C740, (void (*)(uint64_t))&type metadata accessor for DOCTraitChangeObservingOptions);
  sub_1000CBE70(&qword_10070C748);
  sub_10009449C(&qword_10070C750, &qword_10070C748);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  UIViewController.registerForTabSwitcherTraitChanges<A>(options:_:)();
  swift_unknownObjectRelease();
  sub_1000CBBA4((uint64_t)v4, &qword_100708758);
  v17.receiver = v1;
  v17.super_class = v5;
  id v11 = [super collectionView];
  if (!v11) {
    goto LABEL_10;
  }
  uint64_t v12 = v11;
  *(unsigned char *)(swift_dynamicCastClassUnconditional()
           + OBJC_IVAR____TtC5Files24DOCSidebarCollectionView_requireCanBecomeFocusedTrue) = 1;

  v16.receiver = v1;
  v16.super_class = v5;
  id v13 = [super collectionView];
  if (v13)
  {
    uint64_t v14 = v13;
    [v13 setDropDelegate:v1];
    [v14 setSpringLoaded:1];
  }
  sub_10054E6CC();
  sub_10054E814();
  sub_10004DBB0(0, 1);
}

Swift::Void __swiftcall DOCSidebarViewController.viewDidLayoutSubviews()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  objc_super v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v16.receiver = v0;
  v16.super_class = v8;
  [super viewDidLayoutSubviews];
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_10028CFCC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_10069D508;
  id v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10028E814((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

Swift::Void __swiftcall DOCSidebarViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  uint64_t v2 = v1;
  Class isa = a1.value.super.isa;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super traitCollectionDidChange:isa];
  id v4 = &v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon];
  swift_beginAccess();
  *(void *)id v4 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  id v5 = [v2 traitCollection];
  uint64_t v6 = sub_100049EB0((uint64_t)&off_10068A7B0);
  swift_arrayDestroy();
  LOBYTE(isa) = sub_100053E14(v6, isa);
  swift_bridgeObjectRelease();

  if (isa) {
    sub_10004DBB0(1, 1);
  }
}

Swift::Void __swiftcall DOCSidebarViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super viewWillAppear:a1];
  sub_10003F49C();
  id v3 = [v1 navigationController];
  if (v3)
  {
    id v4 = v3;
    [v3 setToolbarHidden:1 animated:0];
  }
  id v5 = self;
  id v6 = [*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] sceneIdentifier];
  id v7 = [v5 globalTabbedBrowserControllerForIdentifier:v6];

  [v7 updateTabBarVisibility];
}

Swift::Void __swiftcall DOCSidebarViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super viewIsAppearing:a1];
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1) {
    sub_10004DBB0(a1, 1);
  }
  sub_1000B8744(0, 1);
  if (sub_10000D8DC() == 2)
  {
    sub_100483EBC(a1, [v1 transitionCoordinator]);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall DOCSidebarViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super viewDidAppear:a1];
  char v3 = v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive];
  v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive] = 0;
  if (v3)
  {
    if ((v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] & 1) == 0)
    {
      v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] = 1;
      sub_100016B08();
      sub_10001F838();
      sub_100026E84();
      if ([*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] isPickerUI])sub_100285D30(); {
    }
      }
    sub_10004DBB0(0, 1);
  }
  if (v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload]) {
    sub_10004DBB0(0, 1);
  }
}

void *DOCSidebarViewController._multitaskingDragExclusionRects()()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v2 = [Strong sidebarViewControllerWithIsCollapsed:v0];
    swift_unknownObjectRelease();
    if (v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  uint64_t result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_super v4 = result;
  [result safeAreaInsets];

  uint64_t result = [v0 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v5 = result;
  [result bounds];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  uint64_t result = [v0 view];
  if (result)
  {
    uint64_t v14 = result;
    [result directionalLayoutMargins];

    id v15 = [v0 traitCollection];
    [v15 layoutDirection];

    NSDirectionalEdgeInsets.asUIEdgeInset(RTL:)();
    double v18 = sub_10009D0D0(v7, v9, v11, v13, v16, v17);
    id v22 = [self valueWithCGRect:v18, v19, v20, v21];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1005A04F0;
    *(void *)(v23 + 32) = v22;
    uint64_t v24 = v23;
    specialized Array._endMutation()();
    return (void *)v24;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_100288FD0()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage];
  swift_beginAccess();
  unsigned __int8 v2 = *(void **)(v1 + 56);
  if (v2)
  {
    swift_retain();
    id v3 = v2;
LABEL_9:
    swift_endAccess();
    id v20 = v2;
    swift_release();
    return v3;
  }
  swift_retain();
  id v4 = [v0 traitCollection];
  id v5 = [v4 sourceOutlineStyle];

  id result = (id)_DocumentManagerBundle();
  double v7 = result;
  if (v5)
  {
    if (result)
    {
      v21._uint64_t countAndFlagsBits = 0xD000000000000032;
      v21._object = (void *)0x80000001005E2E70;
      v8._uint64_t countAndFlagsBits = 1953064005;
      v8._object = (void *)0xE400000000000000;
      v9._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v9._object = (void *)0xEB00000000656C62;
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v21);

LABEL_8:
      String._bridgeToObjectiveC()();
      sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v14;
      *(unsigned char *)(v15 + 24) = 0;
      double v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      id v17 = sub_100514174((uint64_t)v16);

      *(void *)(v1 + 56) = v17;
      type metadata accessor for DOCBarButtonItemGroup();
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1005A04F0;
      *(void *)(v18 + 32) = v17;
      specialized Array._endMutation()();
      id v3 = v17;
      uint64_t v19 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
      swift_bridgeObjectRelease();

      unsigned __int8 v2 = 0;
      *(void *)(v1 + 48) = v19;
      goto LABEL_9;
    }
    __break(1u);
  }
  else if (result)
  {
    v22._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v22._object = (void *)0x80000001005E2ED0;
    v11._uint64_t countAndFlagsBits = 0x6469532074696445;
    v11._object = (void *)0xEC00000072616265;
    v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v12._object = (void *)0xEB00000000656C62;
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v7, v13, v22);

    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_100289318()
{
  uint64_t v1 = *(void **)(v0 + 24);

  unsigned __int8 v2 = *(void **)(v0 + 40);
  id v3 = *(id *)(v0 + 56);
}

uint64_t sub_100289374()
{
  uint64_t v1 = *(void **)(v0 + 24);

  unsigned __int8 v2 = *(void **)(v0 + 40);
  id v3 = *(void **)(v0 + 56);

  return swift_deallocClassInstance();
}

void sub_1002893D0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v2 = [v1 splitViewController];
    id v3 = v1;
    if (!v2 || (v4 = v2, self, v5 = (void *)swift_dynamicCastObjCClass(), v1, id v3 = v4, !v5))
    {

      id v5 = 0;
    }
    [v5 hideSidebar];
  }
}

void *sub_100289490()
{
  uint64_t v0 = type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = __chkstk_darwin(v0);
  id v4 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  double v6 = (char *)v56 - v5;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  Swift::String v8 = _swiftEmptyArrayStorage;
  if (!Strong) {
    return v8;
  }
  Swift::String v9 = (char *)Strong;
  sub_1000CBE70((uint64_t *)&unk_10070CE88);
  UIMenuElementSize v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0230;
  uint64_t v11 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration;
  Swift::String v12 = *(void **)&v9[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  if ([v12 isFilesApp]
    && ([v12 isPickerUI] & 1) == 0
    && [self isSupported])
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v60 = [self systemImageNamed:v13];

    if (qword_1007050C8 != -1) {
      swift_once();
    }
    uint64_t countAndFlagsBits = xmmword_100711170;
    swift_bridgeObjectRetain();
    NSString object = String._bridgeToObjectiveC()();
    uint64_t v57 = sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(void *)(v10 + 32) = v14;
  uint64_t v15 = *(void **)&v9[v11];
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v6, enum case for DOCAnalyticsConnectToServerShownEvent.Origin.sidebar(_:), v0);
  double v16 = self;
  id v17 = [v15 sceneIdentifier];
  id v18 = [v16 globalTabbedBrowserControllerForIdentifier:v17];

  if (!v18) {
    goto LABEL_14;
  }
  if ((sub_1000857CC(v15) & 1) == 0)
  {

LABEL_14:
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    uint64_t v29 = 0;
    goto LABEL_15;
  }
  NSString v19 = String._bridgeToObjectiveC()();
  id v60 = [self systemImageNamed:v19];

  id result = (id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_37;
  }
  Swift::String v21 = result;
  v64._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v64._NSString object = (void *)0x80000001005E2F80;
  v22._NSString object = (void *)0x80000001005E2F60;
  v22._uint64_t countAndFlagsBits = 0xD000000000000011;
  v23._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v23._NSString object = (void *)0xEB00000000656C62;
  v24._uint64_t countAndFlagsBits = 0;
  v24._NSString object = (void *)0xE000000000000000;
  Swift::String v25 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v64);
  NSString object = v25._object;
  uint64_t countAndFlagsBits = v25._countAndFlagsBits;

  uint64_t v57 = (uint64_t)String._bridgeToObjectiveC()();
  v56[1] = sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  unint64_t v26 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v27 = (v2 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v28 + v26, v4, v0);
  *(void *)(v28 + v27) = v18;
  uint64_t v29 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
LABEL_15:
  *(void *)(v10 + 40) = v29;
  id v30 = [v9 traitCollection];
  id v31 = [v30 sourceOutlineStyle];

  id result = (id)_DocumentManagerBundle();
  uint64_t v32 = result;
  if (v31)
  {
    if (result)
    {
      v65._uint64_t countAndFlagsBits = 0xD000000000000032;
      v65._NSString object = (void *)0x80000001005E2E70;
      v33._uint64_t countAndFlagsBits = 1953064005;
      v33._NSString object = (void *)0xE400000000000000;
      v34._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v34._NSString object = (void *)0xEB00000000656C62;
      v35._uint64_t countAndFlagsBits = 0;
      v35._NSString object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v65);

LABEL_20:
      String._bridgeToObjectiveC()();
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(unsigned char *)(v40 + 24) = 1;
      *(void *)(v10 + 48) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      aBlock[0] = v10;
      specialized Array._endMutation()();
      UIMenuElementSize v41 = aBlock[0];
      UIMenuElementSize v62 = aBlock[0];
      uint64_t v42 = *(void **)&v9[OBJC_IVAR____TtC5Files24DOCSidebarViewController_debugOptionsMenu];
      if (v42)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        UIMenuElementSize v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1005A04F0;
        uint64_t v44 = self;
        UIMenuElementSize v45 = swift_allocObject();
        *(void *)(v45 + 16) = v42;
        aBlock[4] = (UIMenuElementSize)sub_10028E664;
        aBlock[5] = v45;
        aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (UIMenuElementSize)sub_100514064;
        void aBlock[3] = (UIMenuElementSize)&unk_10069D7D8;
        uint64_t v46 = _Block_copy(aBlock);
        id v47 = v42;
        swift_release();
        id v48 = [v44 elementWithUncachedProvider:v46];
        _Block_release(v46);
        *(void *)(v43 + 32) = v48;
        aBlock[0] = v43;
        specialized Array._endMutation()();
        v49._uint64_t countAndFlagsBits = 0x704F206775626544;
        v49._NSString object = (void *)0xED0000736E6F6974;
        v63.value.super.Class isa = 0;
        v63.Swift::Bool is_nil = 0;
        id v50 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v49, (Swift::String_optional)0, v63, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v55).super.super.isa;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(v62 + 16) >= *(void *)(v62 + 24) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        UIMenuElementSize v41 = v62;
      }
      aBlock[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
      uint64_t v51 = *(void *)(v41 + 16);
      if (v51)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t i = 0; i != v51; ++i)
        {
          id v53 = *(void **)(v41 + 8 * i + 32);
          if (v53)
          {
            id v54 = v53;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        Swift::String v8 = (void *)aBlock[0];
      }
      else
      {
        swift_bridgeObjectRetain();
        Swift::String v8 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return v8;
    }
    __break(1u);
  }
  else if (result)
  {
    v66._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v66._NSString object = (void *)0x80000001005E2ED0;
    v36._uint64_t countAndFlagsBits = 0x6469532074696445;
    v36._NSString object = (void *)0xEC00000072616265;
    v37._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v37._NSString object = (void *)0xEB00000000656C62;
    v38._uint64_t countAndFlagsBits = 0;
    v38._NSString object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v32, v38, v66);

    goto LABEL_20;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100289E98(void (*a1)(uint64_t), int a2, id a3)
{
  id v4 = [a3 children];
  sub_10009E6C4(0, (unint64_t *)&qword_100708610);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  a1(v5);

  return swift_bridgeObjectRelease();
}

void sub_100289F2C(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    [Strong setEditing:a3 & 1 animated:1];
  }
}

double DOCSidebarViewController.target(forAction:withSender:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100053674(a2, (uint64_t)&v48);
  uint64_t v6 = *((void *)&v49 + 1);
  if (*((void *)&v49 + 1))
  {
    double v7 = sub_1000A6B78(&v48, *((uint64_t *)&v49 + 1));
    uint64_t v8 = *(void *)(v6 - 8);
    double v9 = __chkstk_darwin(v7);
    uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_10009B1B8((uint64_t)&v48);
  }
  else
  {
    uint64_t v12 = 0;
  }
  unsigned int v13 = [v44 canPerformAction:a1 withSender:v12];
  swift_unknownObjectRelease();
  if (v13)
  {
    *(void *)(a3 + 24) = type metadata accessor for DOCSidebarViewController(0);
    id v14 = v44;
    *(void *)a3 = v44;
    id v15 = v14;
    return result;
  }
  char v17 = sub_10000D8DC();
  if (v17 == 2 || (v17 & 1) != 0)
  {
    sub_100053674(a2, (uint64_t)&v48);
    uint64_t v29 = *((void *)&v49 + 1);
    if (*((void *)&v49 + 1))
    {
      id v30 = sub_1000A6B78(&v48, *((uint64_t *)&v49 + 1));
      uint64_t v31 = *(void *)(v29 - 8);
      double v32 = __chkstk_darwin(v30);
      Swift::String v34 = (char *)&v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v31 + 16))(v34, v32);
      uint64_t v35 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v29);
      sub_10009B1B8((uint64_t)&v48);
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v40 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
    v45.receiver = v44;
    v45.super_class = v40;
    [super targetForAction:a1 withSender:v35];
    swift_unknownObjectRelease();
    if (v41)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v48 = 0u;
      long long v49 = 0u;
    }
    goto LABEL_29;
  }
  if (static Selector.== infix(_:_:)())
  {
    id v18 = [v44 splitViewController];
    if (v18)
    {
      NSString v19 = v18;
      self;
      id v20 = (void *)swift_dynamicCastObjCClass();
      if (v20)
      {
        id v21 = [v20 fullDocumentManagerViewController];

        if (v21)
        {
          sub_100053674(a2, (uint64_t)&v48);
          uint64_t v22 = *((void *)&v49 + 1);
          if (*((void *)&v49 + 1))
          {
            Swift::String v23 = sub_1000A6B78(&v48, *((uint64_t *)&v49 + 1));
            uint64_t v24 = *(void *)(v22 - 8);
            double v25 = __chkstk_darwin(v23);
            unint64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v24 + 16))(v27, v25);
            uint64_t v28 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
            sub_10009B1B8((uint64_t)&v48);
          }
          else
          {
            uint64_t v28 = 0;
          }
          id v42 = [v21 targetForAction:a1 withSender:v28];

          swift_unknownObjectRelease();
          if (v42)
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v48 = 0u;
            long long v49 = 0u;
          }
          sub_1000CBE0C((uint64_t)&v48, (uint64_t)&v46, (uint64_t *)&unk_100705D60);
          if (*((void *)&v47 + 1))
          {
            sub_1000A54B0(&v46, &v48);
            goto LABEL_29;
          }
LABEL_28:
          long long v48 = 0u;
          long long v49 = 0u;
          sub_1000CBBA4((uint64_t)&v46, (uint64_t *)&unk_100705D60);
LABEL_29:
          sub_1000CBE0C((uint64_t)&v48, a3, (uint64_t *)&unk_100705D60);
          return result;
        }
      }
      else
      {
      }
    }
    long long v46 = 0u;
    long long v47 = 0u;
    goto LABEL_28;
  }
  id v36 = [v44 splitViewController];
  if (v36)
  {
    Swift::String v37 = v36;
    self;
    Swift::String v38 = (void *)swift_dynamicCastObjCClass();
    if (v38)
    {
      id v39 = [v38 fullDocumentManagerViewController];

      if (v39)
      {
        *(void *)(a3 + 24) = sub_10009E6C4(0, (unint64_t *)&unk_100711B80);
        *(void *)a3 = v39;
        return result;
      }
    }
    else
    {
    }
  }
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

id DOCSidebarViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  if (static Selector.== infix(_:_:)())
  {
    id v5 = [v2 navigationItem];
    id v6 = [v5 searchController];

    if (v6) {
      return (id)([v2 isEditing] ^ 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100053674(a2, (uint64_t)v18);
    uint64_t v8 = v19;
    if (v19)
    {
      double v9 = sub_1000A6B78(v18, v19);
      uint64_t v10 = *(void *)(v8 - 8);
      double v11 = __chkstk_darwin(v9);
      unsigned int v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v10 + 16))(v13, v11);
      uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
      sub_10009B1B8((uint64_t)v18);
    }
    else
    {
      uint64_t v14 = 0;
    }
    id v15 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
    v17.receiver = v2;
    v17.super_class = v15;
    [super canPerformAction:a1 withSender:v14];
    swift_unknownObjectRelease();
  }
  return v7;
}

void DOCSidebarViewController.collectionView(_:didSelectItemAt:)(uint64_t a1, uint64_t a2)
{
}

uint64_t DOCSidebarViewController.collectionView(_:shouldSelectItemAt:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (sub_100482A00()) {
    return 1;
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 collectionView:a1 shouldHighlightItemAtIndexPath:isa];

  return (uint64_t)v4;
}

uint64_t DOCSidebarViewController.collectionView(_:shouldHighlightItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_10028E174(a2);
}

uint64_t sub_10028ADD0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    uint64_t v6 = 0x646E61707865;
  }
  else {
    uint64_t v6 = 0x657370616C6C6F63;
  }
  if (a3) {
    unint64_t v7 = 0xE600000000000000;
  }
  else {
    unint64_t v7 = 0xE800000000000000;
  }
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  id v8 = [super collectionView];
  if (!v8)
  {
    __break(1u);
    JUMPOUT(0x10028B044);
  }
  double v9 = v8;
  type metadata accessor for DOCSidebarCollectionView();
  unsigned int v10 = [(id)swift_dynamicCastClassUnconditional() hasUncommittedUpdates];

  if (v10)
  {
    sub_10028B05C(0xD000000000000027, 0x80000001005E30E0, v6, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100283EC4(0xD000000000000016, 0x80000001005E3070);
    switch(*(unsigned char *)(a1 + 16))
    {
      case 5:
        swift_bridgeObjectRelease();
        if (a3) {
          goto LABEL_18;
        }
        goto LABEL_17;
      default:
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((a3 & 1) != 0 || (v12 & 1) == 0) {
          goto LABEL_18;
        }
LABEL_17:
        if (sub_10030D874(0))
        {
LABEL_18:
          swift_bridgeObjectRelease();
          return 1;
        }
        sub_10028B05C(0xD00000000000004CLL, 0x80000001005E3090, 0x657370616C6C6F63, 0xE800000000000000);
        swift_bridgeObjectRelease();
        sub_100284134(0xD000000000000016, 0x80000001005E3070, 0);
        break;
    }
  }
  return 0;
}

uint64_t sub_10028B05C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  char v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = a1;
    uint64_t v15 = v14;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v20 = v8;
    uint64_t v21 = sub_10009B0E4(0xD00000000000001ELL, 0x80000001005E3110, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10009B0E4(a3, a4, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_10009B0E4(v18, a2, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: Ignoring %s for %s.", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_10028B3AC(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    [Strong updateSelectionToMatchBrowsedLocation:a2 scrollToVisible:a3 & 1];
  }
}

void sub_10028B420(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {
    id v50 = v4;
    id v46 = a1;
    id v5 = [v46 displayName];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    id v9 = (id)_DocumentManagerBundle();
    if (v9)
    {
      uint64_t v10 = v9;
      v57._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      v57._NSString object = (void *)0x80000001005E2C00;
      v11._NSString object = (void *)0x80000001005E2BE0;
      v11._uint64_t countAndFlagsBits = 0x1000000000000011;
      v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v12._NSString object = (void *)0xEB00000000656C62;
      v13._uint64_t countAndFlagsBits = 0;
      v13._NSString object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v57);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1005A0030;
      *(void *)(v14 + 56) = &type metadata for String;
      unint64_t v15 = sub_100073F48();
      *(void *)(v14 + 64) = v15;
      *(void *)(v14 + 32) = v6;
      *(void *)(v14 + 40) = v8;
      swift_bridgeObjectRetain();
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v16 = (id)_DocumentManagerBundle();
      if (v16)
      {
        uint64_t v17 = v16;
        v58._uint64_t countAndFlagsBits = 0xD00000000000005CLL;
        v58._NSString object = (void *)0x80000001005E2C90;
        v18._NSString object = (void *)0x80000001005E2C60;
        v18._uint64_t countAndFlagsBits = 0xD000000000000024;
        v19._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v19._NSString object = (void *)0xEB00000000656C62;
        v20._uint64_t countAndFlagsBits = 0;
        v20._NSString object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v58);

        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
        *(void *)(v21 + 56) = &type metadata for String;
        *(void *)(v21 + 64) = v15;
        *(void *)(v21 + 32) = v6;
        *(void *)(v21 + 40) = v8;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v24 = [self alertControllerWithTitle:v22 message:v23 preferredStyle:1];

        id v25 = (id)_DocumentManagerBundle();
        if (v25)
        {
          uint64_t v26 = v25;
          v59._NSString object = (void *)0xE000000000000000;
          v27._uint64_t countAndFlagsBits = 0x6C65636E6143;
          v27._NSString object = (void *)0xE600000000000000;
          v28._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v28._NSString object = (void *)0xEB00000000656C62;
          v29._uint64_t countAndFlagsBits = 0;
          v29._NSString object = (void *)0xE000000000000000;
          v59._uint64_t countAndFlagsBits = 0;
          DOCLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v59);

          uint64_t v30 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = v30;
          *(void *)(v31 + 24) = a1;
          *(void *)(v31 + 32) = a2;
          *(void *)(v31 + 40) = a3;
          *(unsigned char *)(v31 + 48) = 1;
          sub_10010ED28(a1, a2, a3, 1u);
          swift_retain();
          NSString v32 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Swift::OpaquePointer v55 = sub_10028E4FC;
          uint64_t v56 = v31;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v52 = 1107296256;
          id v53 = sub_10041B2E4;
          id v54 = &unk_10069D648;
          uint64_t v33 = _Block_copy(&aBlock);
          swift_release();
          Swift::String v34 = self;
          id v45 = [v34 actionWithTitle:v32 style:1 handler:v33];
          _Block_release(v33);
          swift_release();

          id v35 = (id)_DocumentManagerBundle();
          if (v35)
          {
            id v36 = v35;
            v60._NSString object = (void *)0xE000000000000000;
            v37._uint64_t countAndFlagsBits = 0x6E4F206E727554;
            v37._NSString object = (void *)0xE700000000000000;
            v38._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v38._NSString object = (void *)0xEB00000000656C62;
            v39._uint64_t countAndFlagsBits = 0;
            v39._NSString object = (void *)0xE000000000000000;
            v60._uint64_t countAndFlagsBits = 0;
            DOCLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v60);

            uint64_t v40 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v41 = swift_allocObject();
            *(void *)(v41 + 16) = v40;
            *(void *)(v41 + 24) = a1;
            *(void *)(v41 + 32) = a2;
            *(void *)(v41 + 40) = a3;
            *(unsigned char *)(v41 + 48) = 1;
            *(void *)(v41 + 56) = v46;
            sub_10010ED28(a1, a2, a3, 1u);
            sub_10010ED28(a1, a2, a3, 1u);
            swift_retain();
            NSString v42 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            Swift::OpaquePointer v55 = sub_10028E55C;
            uint64_t v56 = v41;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v52 = 1107296256;
            id v53 = sub_10041B2E4;
            id v54 = &unk_10069D698;
            uint64_t v43 = _Block_copy(&aBlock);
            swift_release();
            id v44 = [v34 actionWithTitle:v42 style:0 handler:v43];
            _Block_release(v43);
            swift_release();

            [v24 addAction:v45];
            [v24 addAction:v44];
            [v24 setPreferredAction:v44];
            [v50 presentViewController:v24 animated:1 completion:0];

            sub_10010EDB8(a1, a2, a3, 1u);
            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_10028BAC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v11 = (char *)Strong;
    sub_100484454(a3, a4, a5, a6, 0);
    Swift::String v12 = &v11[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
    int v13 = v11[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24];
    if (v13 == 255)
    {
    }
    else
    {
      id v14 = *(id *)v12;
      uint64_t v15 = *((void *)v12 + 1);
      uint64_t v16 = *((void *)v12 + 2);
      sub_10010ED28(*(id *)v12, v15, v16, v11[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24]);
      if (DOCDeviceIsPad()) {
        sub_1004833AC(v14, v15, v16, v13, 0, 0);
      }

      sub_1000A7C1C(v14, v15, v16, v13);
    }
  }
}

void sub_10028BBC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v13 = Strong;
    if (a6 == 1)
    {
      id v14 = Strong;
      id v15 = a7;
      a6 = 1;
      sub_10010ED28(a3, a4, a5, 1u);
      sub_10024CEE8(0, a3, v14, v15, a3, a4, a5, 1);
    }
    else
    {
      id v16 = a7;
      id v17 = v13;
      sub_10010ED28(a3, a4, a5, a6);
      id v18 = v17;
      id v19 = v16;
      sub_10010ED28(a3, a4, a5, a6);
      id v20 = v18;
      id v21 = v19;
      sub_10010ED28(a3, a4, a5, a6);
      sub_10047D7F8(v21);
      uint64_t v22 = swift_unknownObjectWeakLoadStrong();
      if (v22)
      {
        NSString v23 = (void *)v22;
        id v24 = sub_10024AAE8((unint64_t)a3, a4, a5, a6);
        [v23 sidebarViewController:v20 didSelect:v24];

        swift_unknownObjectRelease();
      }
      else
      {
      }
      sub_10010EDB8(a3, a4, a5, a6);

      sub_10010EDB8(a3, a4, a5, a6);
    }

    sub_10010EDB8(a3, a4, a5, a6);
  }
}

void sub_10028BDD4(char a1, uint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  sub_10047D7F8(a3);
  if ((a1 & 1) == 0)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v14 = (void *)Strong;
      id v15 = sub_10024AAE8(a4, a5, a6, a7);
      [v14 sidebarViewController:a2 didSelect:v15];

      swift_unknownObjectRelease();
    }
  }
}

void sub_10028BEB0()
{
  type metadata accessor for DOCSidebarViewController.DOCSidebarItemChangePacer(0);
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = v0;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      int v4 = *(unsigned __int8 *)(v1 + 88);
      if (v4 != 255)
      {
        uint64_t v6 = *(void *)(v1 + 72);
        uint64_t v5 = *(void *)(v1 + 80);
        uint64_t v7 = *(void **)(v1 + 64);
        uint64_t v8 = *(void *)(v1 + 104);
        *(void *)(v1 + 104) = 0;
        *(void *)(v1 + 112) = 0;
        swift_retain();
        sub_1000A9454(v7, v6, v5, v4);
        sub_1000A7258(v8);
        sub_10028BFBC(v7, v6, v5, v4, *(unsigned __int8 *)(v1 + 89));
        sub_1000A7C1C(v7, v6, v5, v4);
        swift_release();
      }
    }
  }
}

void sub_10028BFBC(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v11 = a4;
  uint64_t v12 = type metadata accessor for DOCAnalyticsSidebarTagSelectedEvent();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v54 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v11 == 1)
  {
    if (((unint64_t)[a1 status] | 2) != 2)
    {
      sub_10028B420(a1, a2, a3, 1);
      sub_10010EDB8(a1, a2, a3, 1u);
      return;
    }
    sub_10010EDB8(a1, a2, a3, 1u);
  }
  id v18 = (void *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
  *id v18 = 0;
  v18[1] = 0;
  swift_bridgeObjectRelease();
  LODWORD(v57) = a5;
  if (a5)
  {
    if (a4 == 1)
    {
      id v19 = [a1 searching_fileProviderDomain];
      if (v19)
      {
        id v20 = v19;
        id v21 = [v19 error];

        sub_10010EDB8(a1, a2, a3, 1u);
        if (v21)
        {
          uint64_t v57 = v15;
          sub_100484454(a1, a2, a3, 1, 0);
          uint64_t v22 = v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem;
          int v23 = *(unsigned __int8 *)(v5
                                   + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem
                                   + 24);
          if (v23 != 255)
          {
            uint64_t v25 = *(void *)(v22 + 8);
            uint64_t v24 = *(void *)(v22 + 16);
            id v26 = v21;
            id v27 = *(id *)v22;
            sub_10010ED28(*(id *)v22, v25, v24, *(unsigned char *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24));
            sub_1004833AC(v27, v25, v24, v23, 0, 0);
            Swift::String v28 = v27;
            id v21 = v26;
            sub_1000A7C1C(v28, v25, v24, v23);
          }
          Swift::String v29 = (void *)_convertErrorToNSError(_:)();
          DOCPresentAlertForError();

          static Logger.Sidebar.getter();
          id v30 = v21;
          uint64_t v31 = Logger.logObject.getter();
          os_log_type_t v32 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v31, v32))
          {
            uint64_t v33 = swift_slowAlloc();
            uint64_t v34 = v54;
            uint64_t v35 = v33;
            uint64_t v59 = swift_slowAlloc();
            *(_DWORD *)uint64_t v35 = 136315394;
            uint64_t v58 = sub_10009B0E4(0xD000000000000026, 0x80000001005E2BB0, &v59);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v35 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v36 = Error.localizedDescription.getter();
            uint64_t v58 = sub_10009B0E4(v36, v37, &v59);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s: Tapped on sidebar item with error: %s.", (uint8_t *)v35, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v57);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v57);
          }
          return;
        }
      }
      else
      {
        sub_10010EDB8(a1, a2, a3, 1u);
      }
    }
    id v38 = sub_10024AAE8((unint64_t)a1, a2, a3, a4);
    unsigned int v39 = [v38 isFPV2];

    if (v39)
    {
      uint64_t v40 = v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem;
      uint64_t v41 = *(void **)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem);
      uint64_t v42 = *(void *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 8);
      uint64_t v43 = *(void *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 16);
      *(void *)uint64_t v40 = a1;
      *(void *)(v40 + 8) = a2;
      *(void *)(v40 + 16) = a3;
      unsigned __int8 v44 = *(unsigned char *)(v40 + 24);
      *(unsigned char *)(v40 + 24) = a4;
      sub_10010ED28(a1, a2, a3, a4);
      sub_10010ED28(a1, a2, a3, a4);
      sub_1000A7C1C(v41, v42, v43, v44);
      sub_1000A767C();
      sub_10010EDB8(a1, a2, a3, a4);
    }
    else
    {
      sub_100484454(a1, a2, a3, a4, 0);
      uint64_t v45 = v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem;
      int v46 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24);
      if (v46 != 255)
      {
        uint64_t v48 = *(void *)(v45 + 8);
        uint64_t v47 = *(void *)(v45 + 16);
        id v49 = *(id *)v45;
        sub_10010ED28(*(id *)v45, v48, v47, *(unsigned char *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24));
        sub_1004833AC(v49, v48, v47, v46, 0, 0);
        sub_1000A7C1C(v49, v48, v47, v46);
      }
    }
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v51 = (void *)Strong;
    id v52 = sub_10024AAE8((unint64_t)a1, a2, a3, a4);
    [v51 sidebarViewController:v5 didSelect:v52];

    swift_unknownObjectRelease();
  }
  if (a4 == 2)
  {
    DOCAnalyticsSidebarTagSelectedEvent.init(bundleID:isUserSelection:)();
    type metadata accessor for DOCAnalyticsManager();
    id v53 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendSidebarTagSelectedEvent(_:)();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v56);
  }
}

uint64_t sub_10028C63C()
{
  type metadata accessor for DOCSidebarViewController.DOCSidebarItemChangePacer(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(result + 104);
    *(void *)(result + 104) = 0;
    *(void *)(result + 112) = 0;
    swift_retain();
    sub_1000C0640((uint64_t)v1);
    sub_1000A7258((uint64_t)v1);
    if (v1)
    {
      uint64_t v2 = swift_retain();
      v1(v2);
      sub_1000A7258((uint64_t)v1);
      sub_1000A7258((uint64_t)v1);
    }
    return swift_release();
  }
  return result;
}

Swift::Bool __swiftcall DOCSidebarViewController.scrollViewShouldScrollToTop(_:)(UIScrollView a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  [super collectionView];
  if (v2)
  {
    uint64_t v3 = v2;
    type metadata accessor for DOCSidebarCollectionView();
    unsigned __int8 v4 = [(id)swift_dynamicCastClassUnconditional() hasUncommittedUpdates];

    LOBYTE(v2) = v4 ^ 1;
  }
  else
  {
    __break(1u);
  }
  return (char)v2;
}

void sub_10028C850(void *a1, char a2)
{
  id v4 = sub_100485D2C(a1);
  if (v7 != 0xFF)
  {
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    unsigned __int8 v11 = v7;
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    if (v11 == 1)
    {
      id Strong = a1;
      sub_10024D640((a2 & 1) == 0, v8, v12, v8, v9, v10, 1, Strong);
      swift_release();
    }
    else
    {
      swift_beginAccess();
      id Strong = (id)swift_unknownObjectWeakLoadStrong();
      swift_release();
      if (!Strong)
      {
LABEL_6:
        sub_1000A7C1C(v8, v9, v10, v11);
        return;
      }
    }

    goto LABEL_6;
  }
}

void sub_10028C970(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    if (a6 == 1)
    {
      sub_10010ED28(a3, a4, a5, 1u);
      swift_retain();
      sub_10047D7F8(a3);
      swift_release();
      sub_10010EDB8(a3, a4, a5, 1u);
    }
    if (a1)
    {
      uint64_t v13 = swift_retain();
      BOOL v14 = sub_100249914(v13, a3, a4, a5, a6);
      swift_release();
      sub_100429BD0(v14);
    }
  }
}

void sub_10028CA90(void *a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v10)
  {
    swift_retain();
    sub_1004862B0(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_release();
      sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      uint64_t v11 = sub_100482C08((uint64_t)v9, 1);
      if (v14 == 0xFF)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_release();
      }
      else
      {
        unsigned __int8 v15 = v14;
        id v25 = *(id *)(v10 + 24);
        *(void *)(v10 + 24) = a1;
        uint64_t v16 = (void *)v11;
        uint64_t v17 = v12;
        uint64_t v18 = v13;
        id v19 = a1;

        id v20 = *(void **)(v10 + 32);
        uint64_t v24 = *(void *)(v10 + 40);
        id v25 = v20;
        uint64_t v23 = *(void *)(v10 + 48);
        *(void *)(v10 + 32) = v16;
        *(void *)(v10 + 40) = v17;
        *(void *)(v10 + 48) = v18;
        unsigned __int8 v21 = *(unsigned char *)(v10 + 56);
        *(unsigned char *)(v10 + 56) = v15;
        sub_10010ED28(v16, v17, v18, v15);
        sub_1000A7C1C(v25, v24, v23, v21);
        sub_100484ED0();
        swift_release();
        sub_1000A7C1C(v16, v17, v18, v15);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
  }
}

uint64_t sub_10028CD04(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    if ([a1 isValid])
    {
      sub_1004880B0(0xD000000000000019, 0x80000001005E2DB0);
      *(void *)(v6 + 96) = 0;
      swift_release();
      int v7 = *(unsigned __int8 *)(a3 + 48);
      if (v7 != 255)
      {
        uint64_t v9 = *(void *)(a3 + 32);
        uint64_t v8 = *(void *)(a3 + 40);
        uint64_t v10 = *(void **)(a3 + 24);
        sub_10010ED28(v10, v9, v8, v7);
        _StringGuts.grow(_:)(26);
        v11._NSString object = (void *)0x80000001005E2DD0;
        v11._uint64_t countAndFlagsBits = 0xD000000000000018;
        String.append(_:)(v11);
        _print_unlocked<A, B>(_:_:)();
        sub_1004880B0(0, 0xE000000000000000);
        swift_bridgeObjectRelease();
        char v12 = *(unsigned char *)(a3 + 49);
        sub_10010ED28(v10, v9, v8, v7);
        sub_100284ADC(v10, v9, v8, v7, v12, 1);
        sub_1000A7C1C(v10, v9, v8, v7);
        sub_1000A7C1C(v10, v9, v8, v7);
      }
      uint64_t v13 = *(void (**)(uint64_t))(v6 + 48);
      if (v13)
      {
        swift_retain();
        v13(v6);
        sub_1000A7258((uint64_t)v13);
      }
    }
    return swift_release();
  }
  return result;
}

void sub_10028CEEC(char *a1)
{
  __int16 v4 = 0;
  [a1 enclosingTabSwitcherStyle];
  if (DOCTabSwitcherStyle.sidebarCanPresentNonBrowseTabItemContent.getter())
  {
    id v2 = *(void **)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    HIBYTE(v4) = [v2 canPresentContentForTab:0];
    LOBYTE(v4) = [v2 canPresentContentForTab:1];
  }
  uint64_t v3 = a1;
  sub_10028D9C4(0, (uint64_t)v3, (uint64_t)v3, (unsigned char *)&v4 + 1, (unsigned __int8 *)&v4);

  sub_10003F49C();
}

uint64_t sub_10028CF94()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10028CFCC()
{
}

void *sub_10028CFF0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v31 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  os_log_type_t v32 = (void *)DOCDocumentSourceIdentifierLocal;
  uint64_t v28 = a1 + 56;
  uint64_t v35 = -(uint64_t)v1;
  uint64_t result = _swiftEmptyArrayStorage;
  __int16 v4 = &selRef_cellForItemAtIndexPath_;
  unint64_t v27 = v1;
  do
  {
    Swift::String v29 = result;
    if (v2 <= v1) {
      unint64_t v5 = v1;
    }
    else {
      unint64_t v5 = v2;
    }
    uint64_t v36 = -(uint64_t)v5;
    for (uint64_t i = (unsigned __int8 *)(v28 + 32 * v2++); ; i += 32)
    {
      if (v36 + v2 == 1)
      {
LABEL_34:
        __break(1u);
        JUMPOUT(0x10028D3ACLL);
      }
      uint64_t v8 = *((void *)i - 3);
      uint64_t v7 = *((void *)i - 2);
      uint64_t v9 = *((void *)i - 1);
      int v10 = *i;
      if (v10 != 1)
      {
        id v26 = v29;
        switch(v10)
        {
          case 1:
            goto LABEL_34;
          case 3:
            id v22 = (id)v8;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          case 5:
            if (v9 | v7 | v8) {
              uint64_t v8 = 1;
            }
            goto LABEL_27;
          default:
            id v21 = (id)v8;
            goto LABEL_27;
        }
      }
      sub_10010ED28(*((id *)i - 3), *((void *)i - 2), *((void *)i - 1), 1u);
      id v37 = (id)v8;
      id v11 = [v37 v4[19]];
      if (v11 != (id)1) {
        break;
      }
      char v30 = v10;
      char v12 = sub_10047DFD4(1);
      uint64_t v34 = (void *)sub_100167240((uint64_t)v12);
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_10047DFD4(0);
      uint64_t v33 = sub_100167240((uint64_t)v13);
      swift_bridgeObjectRelease();
      sub_1000CBE70(&qword_10070CE50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A0230;
      *(void *)(inited + 32) = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
      *(void *)(inited + 40) = v32;
      *(void *)(inited + 48) = v31;
      id v15 = v32;
      id v16 = v31;
      uint64_t v17 = (uint64_t)sub_10049D5A4(inited);
      swift_setDeallocating();
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy();
      sub_10047DC64(v33, v34);
      sub_10047DC64(v17, v18);
      id v19 = [v37 identifier];
      LOBYTE(v17) = sub_1005350BC();

      __int16 v4 = &selRef_cellForItemAtIndexPath_;
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0 || ![v37 status]) {
        goto LABEL_17;
      }
      id v20 = [v37 status];
      sub_10010EDB8((id)v8, v7, v9, 1u);
      if (v20 != (id)2)
      {
        id v26 = v29;
        LOBYTE(v10) = v30;
        goto LABEL_27;
      }
LABEL_18:
      sub_10010EDB8((id)v8, v7, v9, 1u);
      ++v2;
      if (v35 + v2 == 1) {
        return v29;
      }
    }
    if (v11 && v11 != (id)2)
    {
LABEL_17:
      sub_10010EDB8((id)v8, v7, v9, 1u);
      goto LABEL_18;
    }
    sub_10010EDB8((id)v8, v7, v9, 1u);
    id v26 = v29;
LABEL_27:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_100019008(0, v26[2] + 1, 1);
    }
    unint64_t v24 = v26[2];
    unint64_t v23 = v26[3];
    uint64_t result = v26;
    if (v24 >= v23 >> 1)
    {
      sub_100019008(v23 > 1, v24 + 1, 1);
      uint64_t result = v26;
    }
    result[2] = v24 + 1;
    id v25 = &result[4 * v24];
    v25[4] = v8;
    v25[5] = v7;
    v25[6] = v9;
    *((unsigned char *)v25 + 56) = v10;
    unint64_t v1 = v27;
    __int16 v4 = &selRef_cellForItemAtIndexPath_;
  }
  while (v35 + v2);
  return result;
}

uint64_t sub_10028D3C4(unint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v4 = v3;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
    if (!v6) {
      return (uint64_t)v7;
    }
    id v25 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100019008(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v25;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      id v11 = v10;
      id v21 = v10;
      sub_1002FEB50(&v21, a2, a3, (uint64_t)&v22);
      if (v4)
      {
        swift_release();

        return (uint64_t)v7;
      }
      uint64_t v4 = 0;

      long long v12 = v22;
      uint64_t v13 = v23;
      char v14 = v24;
      id v25 = v7;
      unint64_t v16 = v7[2];
      unint64_t v15 = v7[3];
      if (v16 >= v15 >> 1)
      {
        long long v18 = v22;
        sub_100019008(v15 > 1, v16 + 1, 1);
        long long v12 = v18;
        uint64_t v7 = v25;
      }
      v7[2] = v16 + 1;
      uint64_t v17 = &v7[4 * v16];
      *((_OWORD *)v17 + 2) = v12;
      ++v9;
      void v17[6] = v13;
      *((unsigned char *)v17 + 56) = v14;
      if (v6 == v9) {
        return (uint64_t)v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_10028D568(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    a2 = *(void *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController);
    unint64_t v26 = v3 & 0xC000000000000001;
    id v25 = (void *)DOCDocumentSourceIdentifierLocal;
    char v24 = (void *)DOCDocumentSourceIdentifierTrashedItems;
    uint64_t v5 = 4;
    uint64_t v22 = v4;
    unint64_t v23 = v3;
    while (1)
    {
      id v6 = v26 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_10047DFD4(1);
      uint64_t v10 = sub_100167240((uint64_t)v9);
      swift_bridgeObjectRelease();
      id v11 = sub_10047DFD4(0);
      uint64_t v12 = sub_100167240((uint64_t)v11);
      swift_bridgeObjectRelease();
      sub_1000CBE70(&qword_10070CE50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A0230;
      *(void *)(inited + 32) = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
      *(void *)(inited + 40) = v25;
      *(void *)(inited + 48) = v24;
      id v14 = v25;
      id v15 = v24;
      unint64_t v16 = sub_10049D5A4(inited);
      swift_setDeallocating();
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy();
      sub_10047DC64(v12, (void *)v10);
      sub_10047DC64((uint64_t)v16, v17);
      uint64_t v19 = v18;
      id v20 = [v7 identifier];
      LOBYTE(v10) = sub_1005350BC(v20, v19);

      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0 && [v7 status] && objc_msgSend(v7, "status") != (id)2)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      unint64_t v3 = v23;
      if (v8 == v22) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10028D7E8(char a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  uint64_t v6 = swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  *(void *)(v6 + 88) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
  swift_beginAccess();
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  char v9 = sub_10004D88C(a1, v8);
  swift_bridgeObjectRelease();
  if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
    sub_10004DBB0((v9 & 1) == 0, 1);
  }
  else {
    sub_1002861DC();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10028D928(uint64_t a1, unsigned char *a2, unsigned __int8 *a3)
{
  uint64_t v4 = OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  char v6 = *(unsigned char *)(v5 + 40) ^ *a2;
  if (v6)
  {
    *(unsigned char *)(v5 + 40) = *a2;
    swift_retain();
    sub_100168060();
    swift_release();
    uint64_t v5 = *(void *)(a1 + v4);
  }
  int v8 = *a3;
  if (*(unsigned __int8 *)(v5 + 41) != v8)
  {
    *(unsigned char *)(v5 + 41) = v8;
    swift_retain();
    sub_100168060();
    swift_release();
    char v6 = 1;
  }
  return v6 & 1;
}

uint64_t sub_10028D9C4(char a1, uint64_t a2, uint64_t a3, unsigned char *a4, unsigned __int8 *a5)
{
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  swift_dynamicCastClassUnconditional();
  if (sub_10028D928(a3, a4, a5))
  {
    uint64_t v10 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess();
    uint64_t v11 = *v10;
    swift_bridgeObjectRetain();
    char v12 = sub_10004D88C(a1, v11);
    swift_bridgeObjectRelease();
    if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
      sub_10004DBB0((v12 & 1) == 0, 1);
    }
    else {
      sub_1002861DC();
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10028DB20(char a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5)
{
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  unint64_t v10 = swift_dynamicCastClassUnconditional();
  if (sub_1002FE3F0(v10, a3, a4, a5))
  {
    uint64_t v11 = (uint64_t *)(a2
                    + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess();
    uint64_t v12 = *v11;
    swift_bridgeObjectRetain();
    char v13 = sub_10004D88C(a1, v12);
    swift_bridgeObjectRelease();
    if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
      sub_10004DBB0((v13 & 1) == 0, 1);
    }
    else {
      sub_1002861DC();
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10028DC7C(char a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5)
{
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  uint64_t result = swift_dynamicCastClassUnconditional();
  if (!*(void *)(a3 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v11 = result;
  uint64_t result = sub_10004F108(0);
  if ((v12 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  id v13 = a4;
  unint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_10028D3C4(v14, v13, a5);
  swift_bridgeObjectRelease();

  swift_beginAccess();
  *(void *)(v11 + 88) = v15;
  swift_bridgeObjectRelease();
  unint64_t v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_bridgeObjectRetain();
  char v18 = sub_10004D88C(a1, v17);
  swift_bridgeObjectRelease();
  if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
    sub_10004DBB0((v18 & 1) == 0, 1);
  }
  else {
    sub_1002861DC();
  }
  return swift_unknownObjectRelease();
}

void sub_10028DE14(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
  *(void *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext] = a1;
  id v5 = a1;

  char v6 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  if ([v6 isPickerUI])
  {
    type metadata accessor for DOCSmartFolderManager();
    uint64_t v7 = (void *)static DOCSmartFolderManager.sharedManager.getter();
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
    uint64_t v11 = *(void **)&v2[v3];
    char v12 = self;
    id v13 = v11;
    unint64_t v14 = v2;
    id v15 = [v12 defaultPermission];
    sub_1002DAF0C(v8, v10, v6, v15, 3, v11, 1, v7, v14);

    swift_bridgeObjectRelease();
  }
}

void sub_10028DF70(uint64_t a1)
{
  uint64_t v2 = v1;
  if (sub_100482A00())
  {
    uint64_t v4 = sub_100482044(a1, 0);
    if (v4)
    {
      sub_100286C4C(*(unsigned char *)(v4 + 16), 1, 1);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = sub_100482C08(a1, 1);
    if (v8 != -1)
    {
      uint64_t v9 = (void *)v5;
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      char v12 = v8;
      uint64_t v13 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
      uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
      if (v14)
      {
        id v15 = *(void **)(v14 + 24);
        if (v15)
        {
          unint64_t v16 = v15;
          swift_retain();
          sub_10042EBBC(0);
          uint64_t v17 = *(void **)&v16[qword_100715608];
          id v18 = v17;

          if (v17)
          {
            if (([v18 isHidden] & 1) != 0
              || (sub_10030D874(0), (uint64_t v19 = *(void *)(v2 + v13)) == 0))
            {
            }
            else
            {
              id v20 = *(void **)(v19 + 24);
              *(void *)(v19 + 24) = 0;
              swift_retain();

              id v21 = *(void **)(v19 + 32);
              uint64_t v22 = *(void *)(v19 + 40);
              uint64_t v23 = *(void *)(v19 + 48);
              *(void *)(v19 + 40) = 0;
              *(void *)(v19 + 48) = 0;
              *(void *)(v19 + 32) = 0;
              unsigned __int8 v24 = *(unsigned char *)(v19 + 56);
              *(unsigned char *)(v19 + 56) = -1;
              sub_1000A7C1C(v21, v22, v23, v24);
              sub_1000B8744(0, 0);

              swift_release();
            }
          }
          swift_release();
        }
      }
      sub_10028601C(v9, v10, v11, v12, 1);
      sub_1000A7C1C(v9, v10, v11, v12);
    }
  }
}

uint64_t sub_10028E174(uint64_t a1)
{
  char v3 = 1;
  if (!sub_100482A00())
  {
    uint64_t v5 = (void *)sub_100482C08(a1, 1);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    if (!v4)
    {
      unint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext);
      id v14 = v16;
      char v3 = sub_100236694(v5, (uint64_t)v16);
      unsigned __int8 v15 = 0;
      goto LABEL_9;
    }
    if (v4 != 255)
    {
      if (v4 != 1)
      {
        unsigned __int8 v15 = v4;
        goto LABEL_13;
      }
      uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext);
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v11 = swift_dynamicCastClass();
      if (!v11 || (char v12 = *(void **)(v11 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
      {
        unsigned __int8 v15 = 1;
        char v3 = 1;
        goto LABEL_13;
      }
      id v13 = v10;
      id v14 = v12;
      char v3 = sub_10001076C(v14, (uint64_t)v10);

      unsigned __int8 v15 = 1;
LABEL_9:

LABEL_13:
      sub_1000A7C1C(v5, v7, v9, v15);
      return v3 & 1;
    }
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t type metadata accessor for DOCSidebarViewController.EditingSession()
{
  return self;
}

uint64_t type metadata accessor for DOCSidebarViewController.SwipeToDeletePresentationContext()
{
  return self;
}

uint64_t sub_10028E310()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v2 && *(unsigned __int8 *)(v2 + 56) != 255)
  {
    swift_retain();
    sub_10030D874(0);
    uint64_t v3 = *(void *)(v0 + v1);
    if (v3)
    {
      unsigned __int8 v4 = *(void **)(v3 + 24);
      *(void *)(v3 + 24) = 0;
      swift_retain();

      uint64_t v5 = *(void **)(v3 + 32);
      uint64_t v6 = *(void *)(v3 + 40);
      uint64_t v7 = *(void *)(v3 + 48);
      *(void *)(v3 + 40) = 0;
      *(void *)(v3 + 48) = 0;
      *(void *)(v3 + 32) = 0;
      unsigned __int8 v8 = *(unsigned char *)(v3 + 56);
      *(unsigned char *)(v3 + 56) = -1;
      sub_1000A7C1C(v5, v6, v7, v8);
      sub_1000B8744(0, 0);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10028E3D8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

void sub_10028E418()
{
  sub_1002869D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_10028E428()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028E460()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_10028E4A0()
{
  sub_10028B3AC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_10028E4AC()
{
}

uint64_t sub_10028E4B4()
{
  swift_release();
  sub_10010EDB8(*(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 49, 7);
}

void sub_10028E4FC(uint64_t a1)
{
  sub_10028BAC4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_10028E50C()
{
  swift_release();
  sub_10010EDB8(*(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10028E55C(uint64_t a1)
{
  sub_10028BBC0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_10028E570()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10028E5A8()
{
  return sub_10000B930((void (*)(void))&_swift_release);
}

uint64_t sub_10028E5C0(void *a1)
{
  return sub_10028CD04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10028E5C8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_10028E600(uint64_t a1)
{
  sub_100289F2C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_10028E60C(void (*a1)(void))
{
  sub_100289490();
  a1();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10028E664(void (*a1)(uint64_t), int a2)
{
  return sub_100289E98(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_10028E66C()
{
  uint64_t v1 = type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10028E710(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100528130(a1, v1 + v4, v5);
}

void sub_10028E7AC()
{
}

void sub_10028E7B4()
{
}

void sub_10028E7BC()
{
}

void sub_10028E7C4()
{
}

uint64_t sub_10028E7CC()
{
  return sub_10002C234();
}

uint64_t sub_10028E7D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10028E80C(uint64_t a1, uint64_t a2)
{
  return sub_100286E5C(a1, a2, *(void (**)(long long *))(v2 + 16));
}

uint64_t sub_10028E814(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10028E85C()
{
}

uint64_t sub_10028E864()
{
  return sub_10000B930((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10028E8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t v6 = *(void **)(a2 + 40);
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v7 = v5;
  id v8 = v6;
  char v9 = static NSObject.== infix(_:_:)();

  if ((v9 & 1) == 0) {
    return 0;
  }
  uint64_t v10 = (void **)(a2 + 56);
  uint64_t v11 = (id *)(a1 + 56);
  do
  {
    BOOL v12 = --v2 == 0;
    if (!v2) {
      break;
    }
    if (*((double *)v11 - 1) != *((double *)v10 - 1)) {
      break;
    }
    id v13 = v10 + 2;
    id v14 = v11 + 2;
    unsigned __int8 v15 = *v10;
    id v16 = *v11;
    id v17 = v15;
    char v18 = static NSObject.== infix(_:_:)();

    uint64_t v11 = v14;
    uint64_t v10 = v13;
  }
  while ((v18 & 1) != 0);
  return v12;
}

uint64_t sub_10028E9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    id v13 = v12;
    sub_10009E6C4(0, (unint64_t *)&unk_10070CEF0);
    char v14 = static NSObject.== infix(_:_:)();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        char v18 = v17;
        char v19 = static NSObject.== infix(_:_:)();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_10028EC7C(unint64_t a1, uint64_t a2)
{
  return sub_10007CE38(a1, a2, (uint64_t)&unk_10070E2D0);
}

BOOL sub_10028EC90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = (unsigned __int8 *)(a1 + 33);
  uint64_t v6 = (unsigned __int8 *)(a2 + 33);
  do
  {
    int v8 = *v5++;
    int v7 = v8;
    int v10 = *v6++;
    int v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

id sub_10028ED04(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    id v13 = v12;
    type metadata accessor for DOCBrowserContainerController();
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        char v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        id v21 = v20;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      id v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        unint64_t v27 = *v25++;
        unint64_t v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10028EFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a1 + 40);
    for (uint64_t i = (void *)(a2 + 40); ; i += 5)
    {
      BOOL v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_10028F068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v22 = 1;
    }
    else
    {
      unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      id v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      unint64_t v30 = v7;
      uint64_t v31 = v13;
      uint64_t v14 = *(void *)(v12 + 56);
      uint64_t v32 = v12;
      uint64_t v28 = v14;
      uint64_t v29 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v15 = v10 - 1;
      uint64_t v16 = v7;
      do
      {
        uint64_t v17 = a1;
        id v18 = v9;
        char v19 = v9;
        id v20 = v31;
        v31(v18, a1 + v11, v4);
        uint64_t v21 = a2;
        v20(v16, a2 + v11, v4);
        uint64_t v9 = v19;
        sub_100290490();
        char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v23 = *v29;
        (*v29)(v16, v4);
        v23(v19, v4);
        BOOL v25 = v15-- != 0;
        if ((v22 & 1) == 0) {
          break;
        }
        v11 += v28;
        a2 = v21;
        a1 = v17;
      }
      while (v25);
    }
  }
  else
  {
    char v22 = 0;
  }
  return v22 & 1;
}

id sub_10028F258(unint64_t a1, uint64_t a2)
{
  return sub_10007CE38(a1, a2, (uint64_t)&qword_100708700);
}

id sub_10028F26C(unint64_t a1, uint64_t a2)
{
  return sub_10007CE38(a1, a2, (uint64_t)&unk_1007085C0);
}

uint64_t sub_10028F30C()
{
  sub_100290248();

  return swift_unknownObjectRelease();
}

char *sub_10028F344(void *a1, unint64_t a2, void *a3, void *a4)
{
  unint64_t v7 = a2;
  *(void *)(v4 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes) = a2;
  uint64_t v9 = a4;
  swift_bridgeObjectRetain();
  id v10 = a1;
  id v11 = a3;
  uint64_t v12 = (char *)sub_1000784A0(v10, a3, a4);
  if (v7 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    char v19 = v12;
    id v13 = (char *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v54 = v12;
    if (v13) {
      goto LABEL_3;
    }
  }
  else
  {
    id v13 = *(char **)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v14 = v12;
    uint64_t v54 = v12;
    if (v13)
    {
LABEL_3:
      id v50 = v11;
      uint64_t v52 = v9;
      uint64_t v15 = 4;
      uint64_t v9 = (uint64_t)&unk_1006E3000;
      while (1)
      {
        id v11 = (id)(v15 - 4);
        if ((v7 & 0xC000000000000001) != 0)
        {
          uint64_t v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v12 = (char *)(v15 - 3);
          if (__OFADD__(v11, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v16 = *(void **)(v7 + 8 * v15);
          swift_unknownObjectRetain();
          uint64_t v12 = (char *)(v15 - 3);
          if (__OFADD__(v11, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        unsigned __int8 v17 = [v16 isFolder];
        swift_unknownObjectRelease();
        if ((v17 & 1) == 0)
        {
          ++v15;
          if (v12 != v13) {
            continue;
          }
        }
        char v18 = v17 ^ 1;
        uint64_t v9 = v52;
        uint64_t v12 = v54;
        id v11 = v50;
        goto LABEL_15;
      }
    }
  }
  char v18 = 1;
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v49 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager;
  id v20 = *(void **)&v12[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  id v21 = objc_allocWithZone((Class)type metadata accessor for DOCItemInfoContentViewController());
  swift_bridgeObjectRetain();
  char v22 = (char *)v10;
  uint64_t v51 = (char *)v11;
  unint64_t v23 = v12;
  id v24 = v20;
  id v53 = v22;
  id v25 = sub_100276468(v22, v7, v18, a3, v20);
  uint64_t v26 = OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController;
  uint64_t v27 = *(void **)&v23[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController];
  *(void *)&v23[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController] = v25;

  uint64_t v28 = *(void *)&v23[v26];
  if (!v28) {
    goto LABEL_22;
  }
  uint64_t v29 = &v23[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  swift_unknownObjectWeakLoadStrong();
  *(void *)(v28 + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_eventReporting + 8) = *((void *)v29 + 1);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  unint64_t v30 = *(void **)&v23[v26];
  if (!v30) {
    goto LABEL_22;
  }
  id v31 = v30;
  uint64_t v32 = sub_100272F04();
  int v33 = v32[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation];
  v32[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation] = 0;
  if (v33 == 1) {
    sub_100473290();
  }

  uint64_t v34 = *(void **)&v23[v26];
  if (!v34)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    id v38 = v53;
    id v37 = v54;
    uint64_t v39 = v49;
    id v13 = v51;
    goto LABEL_40;
  }
  if (!v13)
  {
    id v48 = v34;
    swift_bridgeObjectRelease();
    char v45 = 1;
LABEL_39:
    id v38 = v53;
    id v37 = v54;
    uint64_t v39 = v49;
    id v13 = v51;
    sub_100272510(v45);

LABEL_40:
    *(void *)(*(void *)&v37[v39] + OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate + 8) = &off_1006A8470;
    swift_unknownObjectWeakAssign();
    id v35 = [self defaultCenter];
    unint64_t v7 = (unint64_t)"observeEditingStateChangedWithNotification:";
    uint64_t v46 = qword_100704F40;
    uint64_t v36 = v23;
    if (v46 != -1) {
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  id v35 = (id)v9;
  uint64_t v36 = (char *)(v7 & 0xC000000000000001);
  swift_bridgeObjectRetain();
  id v48 = v34;
  uint64_t v9 = 4;
  while (1)
  {
    uint64_t v40 = v9 - 4;
    if (!v36) {
      break;
    }
    uint64_t v41 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    id v38 = (char *)(v9 - 3);
    if (__OFADD__(v40, 1)) {
      goto LABEL_42;
    }
LABEL_30:
    if ([v41 isTrashed])
    {
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
LABEL_36:
      char v45 = 0;
LABEL_38:
      uint64_t v9 = (uint64_t)v35;
      goto LABEL_39;
    }
    id v42 = [v41 fpfs_fpItem];
    if (v42)
    {
      uint64_t v43 = v42;
      unsigned __int8 v44 = [v42 isCollaborationInvitation];
      swift_unknownObjectRelease();

      if (v44)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_36;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    ++v9;
    if (v38 == v13)
    {
      swift_bridgeObjectRelease_n();
      char v45 = 1;
      goto LABEL_38;
    }
  }
  uint64_t v41 = *(void **)(v7 + 8 * v9);
  swift_unknownObjectRetain();
  id v38 = (char *)(v9 - 3);
  if (!__OFADD__(v40, 1)) {
    goto LABEL_30;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  swift_once();
LABEL_41:
  [v35 addObserver:v36 selector:v7 name:qword_100736F20 object:0];

  return v36;
}

void sub_10028F864(void *a1)
{
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_1000516C4((uint64_t)v11, (uint64_t)v12);
  if (!v13)
  {
    sub_10006273C((uint64_t)v12);
    return;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v2 = [v1 viewIfLoaded];
  if (!v2)
  {

    return;
  }
  uint64_t v3 = v2;
  id v4 = [v10 viewIfLoaded];
  id v5 = [v4 window];

  id v6 = [v3 window];
  unint64_t v7 = v6;
  if (!v5)
  {
    if (v6)
    {

      return;
    }
LABEL_15:
    [v3 setHidden:[v10 isEditing]];
LABEL_16:

    return;
  }
  if (v6)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_10070CF00);
    id v8 = v5;
    char v9 = static NSObject.== infix(_:_:)();

    if ((v9 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
}

void sub_10028FAAC()
{
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for DOCColumnInfoViewController();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController];
  if (!v1) {
    goto LABEL_9;
  }
  id v2 = v1;
  [v0 doc_addChildViewController:v2 addSubviewBlock:0];
  id v3 = [v2 view];
  if (v3)
  {
    id v4 = v3;
    [v3 setAutoresizingMask:18];

    id v5 = [v2 view];
    if (v5)
    {
      id v6 = v5;
      id v7 = [v0 view];
      if (v7)
      {
        id v8 = v7;
        [v7 frame];
        double v10 = v9;
        double v12 = v11;
        double v14 = v13;
        double v16 = v15;

        [v6 setFrame:v10, v12, v14, v16];
        return;
      }
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  __break(1u);
LABEL_9:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10028FC84()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController);
}

id sub_10028FCC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCColumnInfoViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCColumnInfoViewController()
{
  return self;
}

uint64_t sub_10028FDB0()
{
  return sub_10028FDE0();
}

void sub_10028FDD4(uint64_t a1, uint64_t a2, void (*a3)(id))
{
}

uint64_t sub_10028FDE0()
{
  uint64_t result = (uint64_t)[v0 doc_scheduleHandlerIfInLiveResize:@"_doc_performLiveResizeSkipped_updateOverlay"];
  if (result) {
    return result;
  }
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
  if (!v2) {
    return result;
  }
  id v3 = v2;
  [v3 setLargeTitleDisplayMode:2];
  [v3 setHidesSearchBarWhenScrolling:0];
  [v3 set_alternateLargeTitles:0];
  uint64_t v4 = OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes;
  unint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_nodes];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 != 1) {
      goto LABEL_18;
    }
  }
  else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_18;
  }
  unint64_t v6 = *(void *)&v0[v4];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_7:
      if ((v6 & 0xC000000000000001) != 0)
      {
        id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        id v8 = *(void **)(v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      NSString v9 = [v8 displayName];
      if (!v9)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v9 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v3 setTitle:v9];
      swift_unknownObjectRelease();
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  v11._NSString object = (void *)0x80000001005E1FA0;
  v12._uint64_t countAndFlagsBits = 0x6D65744920756C25;
  v12._NSString object = (void *)0xE900000000000073;
  v11._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  DOCLocalizedDictionaryString(_:comment:)(v12, v11);
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  unint64_t v14 = *(void *)&v0[v4];
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v13 + 56) = &type metadata for Int;
  *(void *)(v13 + 64) = &protocol witness table for Int;
  *(void *)(v13 + 32) = v15;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setTitle:v9];
LABEL_21:

  [v3 setHidesBackButton:1];
  uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems];
  swift_bridgeObjectRetain_n();
  id v17 = [v3 leftBarButtonItems];
  if (!v17) {
    goto LABEL_24;
  }
  char v18 = v17;
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  unint64_t v19 = swift_bridgeObjectRetain();
  LOBYTE(v18) = sub_10007CE38(v19, v16, (uint64_t)&qword_10070B700);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_24:
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 setLeftBarButtonItems:isa];
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_1000AA3C0(v21, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100290248()
{
  uint64_t result = swift_unknownObjectWeakAssign();
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController))
  {
    swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakAssign();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1002902CC(void (*a1)(id))
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController);
  if (v3)
  {
    id v4 = v3;
    id v5 = sub_100272F88();
    id v6 = [v5 window];

    if (v6)
    {
      uint64_t v7 = (char *)sub_100272F88();
      id v8 = &v7[OBJC_IVAR____TtC5Files28DOCImageContainerFittingView_viewPairs];
      swift_beginAccess();
      if (*(void *)(*(void *)v8 + 16))
      {
        id v6 = *(id *)(*(void *)v8 + 32);
      }
      else
      {

        id v6 = 0;
      }
    }
    a1(v6);
  }
  else
  {
    a1(0);
  }
}

uint64_t sub_1002903D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100290434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100290490()
{
  unint64_t result = qword_10070AE70;
  if (!qword_10070AE70)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AE70);
  }
  return result;
}

id sub_100290500(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];

  return v3;
}

id sub_10029054C(void *a1, void *a2, id a3, uint64_t a4, void (*a5)(void))
{
  if (a1)
  {
    id v10 = a1;
    if ([v10 documentLandingMode] != (id)-1) {
      [a2 setIsInUIPDocumentLanding:1];
    }
  }
  id result = [a3 _principalObject];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  type metadata accessor for DOCServiceViewController();
  Swift::String v12 = (char *)swift_dynamicCastClassUnconditional();
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC5Files24DOCServiceViewController__configuration];
  *(void *)&v12[OBJC_IVAR____TtC5Files24DOCServiceViewController__configuration] = a2;
  id v14 = a2;

  id result = [a3 _principalObject];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v15 = (void *)swift_dynamicCastClassUnconditional();
  swift_unknownObjectWeakAssign();

  objc_allocWithZone((Class)type metadata accessor for DOCServiceDocumentBrowserViewController());
  uint64_t v16 = v14;
  swift_unknownObjectRetain();
  id v17 = a3;
  id v18 = sub_10043B0CC(a4, v17, v16);
  if (a1)
  {
    uint64_t v19 = self;
    id v20 = (void *)swift_allocObject();
    _OWORD v20[2] = v16;
    uint64_t v20[3] = v17;
    v20[4] = v18;
    v20[5] = a1;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_100292F3C;
    *(void *)(v21 + 24) = v20;
    aBlock[4] = sub_1000879B8;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100087990;
    void aBlock[3] = &unk_10069DCF8;
    char v22 = _Block_copy(aBlock);
    id v23 = a1;
    id v24 = v16;
    id v25 = v17;
    id v26 = v18;
    swift_retain();
    swift_release();
    [(id)v19 performWithoutAnimation:v22];

    _Block_release(v22);
    LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((v19 & 1) == 0)
    {
      uint64_t v27 = sub_100292F3C;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v27 = 0;
LABEL_11:
  [v18 startSearchingSourcesWithConfiguration:v16];
  id result = [v17 _principalObject];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v28 = (void *)swift_dynamicCastClassUnconditional();
  swift_unknownObjectWeakAssign();
  [v18 preferredContentSize];
  [v28 setPreferredContentSize:];
  [v28 addChildViewController:v18];
  id result = [v28 view];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v29 = result;
  id result = [v18 view];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v30 = result;
  [v29 addSubview:result];

  [v18 didMoveToParentViewController:v28];
  id result = [v18 view];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v31 = result;
  [result setAutoresizingMask:18];

  id result = [v18 view];
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v32 = result;
  id result = [v28 view];
  if (result)
  {
    id v33 = result;
    [result bounds];
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;
    double v41 = v40;

    [v32 setFrame:v35, v37, v39, v41];
    id v42 = v18;
    a5();

    return (id)sub_1000A7258((uint64_t)v27);
  }
LABEL_26:
  __break(1u);
  return result;
}