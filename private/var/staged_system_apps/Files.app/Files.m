uint64_t sub_100004FD0()
{
  return sub_1000CBF84((unint64_t *)&unk_100707FD0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

double sub_100005018()
{
  sub_1000C7708(v3);
  uint64_t v0 = *(void *)&v3[0];
  sub_1000C7708(v4);
  double v1 = v4[2];
  sub_1000C7708(&v5);
  double result = v5 + v6 + v6;
  qword_10071BF50 = v0;
  qword_10071BF58 = *(void *)&v1;
  *(double *)&qword_10071BF60 = result;
  return result;
}

uint64_t sub_100005078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A5858(a1, a2, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
}

uint64_t sub_1000050A8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_20;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *double v1 = v3;
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v7 = *(void *)(v3 + 24) >> 1;
    if (v7 >= (uint64_t)(v4 + v2))
    {
      unint64_t v8 = *(void *)(a1 + 16);
      if (v8) {
        goto LABEL_5;
      }
LABEL_15:
      if (!v2) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *double v1 = v3;
  uint64_t v7 = *(void *)(v3 + 24) >> 1;
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  if (v7 - v9 < (uint64_t)v8)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v10 = v3 + 8 * v9 + 32;
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_23;
  }
  sub_1000CBE70(&qword_10071A170);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = *(void *)(*v1 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (v13)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  *(void *)(*v1 + 16) = v14;
LABEL_16:
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000052BC()
{
  uint64_t result = type metadata accessor for DOCItemSortMode();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void *sub_1000053B0(unint64_t a1, void *a2, uint64_t a3)
{
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v6 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6);
    }
    unint64_t v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_14;
    }
    uint64_t result = sub_1000CC4E4(v7, a2, a3);
    if (!result) {
      break;
    }

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    ++v6;
    if (v9 == v5) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100005530()
{
  unint64_t result = qword_10070DE80;
  if (!qword_10070DE80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070DE80);
  }
  return result;
}

uint64_t sub_100005570()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000055B8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000055F8(uint64_t a1)
{
  if (a1 == 4)
  {
    uint64_t v3 = (char *)sub_1000B1D54();
    uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    id v5 = v4;

    if (v4)
    {
      sub_10019E86C();
      goto LABEL_7;
    }
LABEL_12:
    __break(1u);
    return;
  }
  if (a1 != 1) {
    return;
  }
  unint64_t v1 = (char *)sub_1000B1D54();
  unint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  id v5 = v2;

  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_100034EF8();
LABEL_7:
}

void sub_10000582C()
{
  if (!qword_10070E1E0)
  {
    type metadata accessor for UICellAccessory();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070E1E0);
    }
  }
}

uint64_t sub_100005884(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t result = a1(v3);
    uint64_t v3 = result;
    *uint64_t v1 = result;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    uint64_t v7 = v6 - 1;
    uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
    *(void *)(v5 + 16) = v7;
    specialized Array._endMutation()();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100005904(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100006864;
  return v6(a1);
}

uint64_t sub_1000059E0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100005A90()
{
  if (!qword_10070ED00)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070ED00);
    }
  }
}

uint64_t sub_100005AE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[31] = Strong;
  if (Strong)
  {
    uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1007128F8 + dword_1007128F8);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[32] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000D4BA4;
    return v5();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100005BFC(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  int v4 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  v18 = (char *)&v24 - v17;
  int v19 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload];
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload] = a1;
  if (v4 == 2)
  {
    if (v19 == 2) {
      return result;
    }
LABEL_6:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v25 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26(v15, v11);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v2;
    aBlock[4] = sub_1002201AC;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100697820;
    v21 = _Block_copy(aBlock);
    v22 = v2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v23 = (void *)v25;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
    return ((uint64_t (*)(char *, uint64_t))v26)(v18, v11);
  }
  if (v19 == 2 || ((((v4 & 1) == 0) ^ v19) & 1) == 0) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10000605C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000617C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100717990);
  char v44 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  v41 = v2;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v43 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v43 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v43 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v42) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v43 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (v44)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v47 = *(void *)(v25 + 32);
      long long v45 = v26;
      long long v46 = v27;
      uint64_t v28 = (void **)(*(void *)(v5 + 56) + 24 * v20);
      uint64_t v29 = *v28;
      uint64_t v30 = (uint64_t)v28[1];
      uint64_t v31 = (uint64_t)v28[2];
    }
    else
    {
      sub_10008E1D0(v25, (uint64_t)&v45);
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v20;
      uint64_t v29 = *(void **)v32;
      uint64_t v30 = *(void *)(v32 + 8);
      uint64_t v31 = *(void *)(v32 + 16);
      sub_10008F4B4(*(void **)v32, v30, v31);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v33 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v11 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v34) & ~*(void *)(v11 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v11 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v14 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v45;
    long long v17 = v46;
    *(void *)(v15 + 32) = v47;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    v18 = (void *)(*(void *)(v7 + 56) + 24 * v14);
    void *v18 = v29;
    v18[1] = v30;
    v18[2] = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v41;
  v22 = (void *)(v5 + 64);
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t type metadata accessor for DOCInteractionManager()
{
  return self;
}

void sub_1000064F0()
{
  unint64_t v1 = v0;
  id v6 = [v0 traitCollection];
  if (DOCUsePadIdiomForTraits())
  {
    id v2 = [v6 horizontalSizeClass];

    if (v2 != (id)2) {
      return;
    }
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v3 = objc_allocWithZone((Class)type metadata accessor for UIAppIntentInteraction());
    sub_10039B864();
    swift_retain();
    int v4 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
    id v5 = [v1 view];
    if (!v5)
    {
      __break(1u);
      return;
    }
    id v6 = v5;
    [v5 addInteraction:v4];
    swift_release();
  }
}

void sub_100006784(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_1000695FC(a2);
  sub_10006928C(0);
}

void sub_1000067BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_10007D85C();
  }
}

uint64_t sub_100006864()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10000695C()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

uint64_t static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.getter()
{
  swift_beginAccess();
  uint64_t v0 = static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100006B10()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100006B58()
{
  if (!qword_10070DC10)
  {
    type metadata accessor for IndexPath();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10070DC10);
    }
  }
}

id sub_100006BB0()
{
  id result = [self mapTableWithKeyOptions:5 valueOptions:0];
  qword_100707940 = (uint64_t)result;
  return result;
}

uint64_t sub_100006C64(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_1000D1744;
  id v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10070AB58 + dword_10070AB58);
  return v6(a1, v4);
}

void sub_100006D1C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView;
    uint64_t v3 = *(char **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView);
    if (v3) {
      goto LABEL_3;
    }
    id v5 = *(void **)(*(void *)(Strong
                              + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
                  + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (!v5) {
      goto LABEL_6;
    }
    type metadata accessor for DOCFileProviderSyncStateHeaderViewModel();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_OWORD *)(v6 + 72) = 0u;
    *(_OWORD *)(v6 + 56) = 0u;
    *(_OWORD *)(v6 + 40) = 0u;
    *(void *)(v6 + 88) = 1;
    *(void *)(v6 + 32) = v5;
    id v7 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSyncStateHeaderView());
    id v8 = v5;
    uint64_t v9 = swift_retain();
    id v10 = sub_1003EDEA0(v9);
    uint64_t v11 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v10;

    swift_release();
    uint64_t v3 = *(char **)&v1[v2];
    if (v3)
    {
LABEL_3:
      *(void *)&v3[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate + 8] = &off_100695BD8;
      swift_unknownObjectWeakAssign();
      *(void *)(*(void *)&v3[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel] + 24) = &off_1006A92C8;
      swift_unknownObjectWeakAssign();
      uint64_t v4 = v3;
      swift_retain();
      sub_10039EB30();

      swift_release();
    }
    else
    {
LABEL_6:
    }
  }
}

uint64_t sub_100006EAC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100006FA0()
{
  uint64_t result = type metadata accessor for DOCContentLayoutSizeCategory();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100007068()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    return;
  }
  uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v2 + 16))
  {
    uint64_t v3 = *(void **)(*(void *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
    goto LABEL_5;
  }
  uint64_t v3 = *(void **)(v2 + 8);
  swift_unknownObjectRetain();
  if (v3)
  {
LABEL_5:
    id v4 = [v3 fpfs_fpItem];
    swift_unknownObjectRelease();
    if (v4) {
      return;
    }
  }
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
  if (v5) {
    [v5 sourceIdentifier];
  }
}

void sub_100007154()
{
  [v0 loadViewIfNeeded];
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  [v2 safeAreaInsets];
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastCollectionViewSafeInsets];
  if (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastCollectionViewSafeInsets + 32])
  {
LABEL_12:
    *(void *)uint64_t v11 = v4;
    *((void *)v11 + 1) = v6;
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = v10;
    v11[32] = 0;
    return;
  }
  uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (!v12 || *(unsigned char *)(v12 + 544) != 2)
  {
LABEL_9:
    if ([v0 enclosedInUIPDocumentLanding])
    {
      UIEdgeInsets.horizontalInsets.getter();
      double v19 = v18;
      UIEdgeInsets.horizontalInsets.getter();
      if (v19 != v20) {
        sub_1001BF0D0(0);
      }
    }
    goto LABEL_12;
  }
  [v0 loadViewIfNeeded];
  int64_t v13 = *(void **)&v0[v1];
  if (!v13) {
    goto LABEL_14;
  }
  id v14 = [v13 collectionViewLayout];
  id v15 = [v14 _invalidationContextForRefreshingVisibleElementAttributes];

  if (!v15) {
    goto LABEL_9;
  }
  [v0 loadViewIfNeeded];
  long long v16 = *(void **)&v0[v1];
  if (v16)
  {
    id v17 = [v16 collectionViewLayout];
    [v17 invalidateLayoutWithContext:v15];

    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for DOCApplication()
{
  return self;
}

uint64_t _s13FocusBackstopCMa()
{
  return self;
}

uint64_t sub_100007358()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100007428()
{
  uint64_t v1 = type metadata accessor for Logger();
  v0[16] = v1;
  v0[17] = *(void *)(v1 - 8);
  v0[18] = swift_task_alloc();
  return _swift_task_switch(sub_10000B980, 0, 0);
}

uint64_t type metadata accessor for DOCCollectionViewController()
{
  return self;
}

uint64_t sub_100007508()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  sub_10001AF94(v0, qword_100708498);
  sub_10009D098(v0, (uint64_t)qword_100708498);
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  return static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)();
}

unint64_t sub_10000757C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D10);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = (void *)v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v35 = v6 + 64;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v18 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v19 = v18 | (v12 << 6);
      }
      else
      {
        int64_t v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v20 >= v33) {
          goto LABEL_26;
        }
        unint64_t v21 = v34[v20];
        ++v12;
        if (!v21)
        {
          int64_t v12 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_26;
          }
          unint64_t v21 = v34[v12];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_26:
              swift_release();
              if (v37)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 > 63) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v12 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_33;
                }
                if (v12 >= v33) {
                  goto LABEL_26;
                }
                unint64_t v21 = v34[v12];
                ++v22;
                if (v21) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v12 = v22;
          }
        }
LABEL_23:
        unint64_t v10 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
      }
      uint64_t v23 = *(void *)(v5 + 48) + 40 * v19;
      Swift::UInt64 v24 = *(void *)v23;
      Swift::UInt v25 = *(void *)(v23 + 24);
      long long v26 = *(void **)(v23 + 32);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      long long v38 = *(_OWORD *)(v23 + 8);
      uint64_t v28 = *(void **)(v23 + 16);
      if ((v37 & 1) == 0)
      {
        id v29 = (id)v38;
        id v30 = v28;
        id v31 = v26;
      }
      Hasher.init(_seed:)();
      if ((v24 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v24;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      Hasher._combine(_:)(v13);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v14 = (id)v38;
      String.hash(into:)();

      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v15 = v28;
      String.hash(into:)();

      swift_bridgeObjectRelease();
      Hasher._combine(_:)(v25);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v16 = v26;
      String.hash(into:)();

      swift_bridgeObjectRelease();
      Hasher._finalize()();
      unint64_t result = _HashTable.nextHole(atOrAfter:)();
      *(void *)(v35 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v17 = v7[6] + 40 * result;
      *(void *)uint64_t v17 = v24;
      *(_OWORD *)(v17 + 8) = v38;
      *(void *)(v17 + 24) = v25;
      *(void *)(v17 + 32) = v16;
      *(void *)(v7[7] + 8 * result) = v27;
      ++v7[2];
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000078F4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000079F4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  if (v1)
  {
  }
  else
  {
    static Logger.DocumentManager.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Files Family Tip Failed to fetch family", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 136);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    uint64_t v1 = 0;
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v1);
}

void sub_100007B14()
{
  type metadata accessor for DispatchTimeInterval();
  if (v0 <= 0x3F)
  {
    sub_100009930();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100007C6C(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100007CF0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100007D94()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000CBBA4(v3, &qword_10070AB98);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(2);
  }
  else
  {
    uint64_t v7 = v0[10];
    uint64_t v6 = v0[11];
    uint64_t v9 = v0[8];
    uint64_t v8 = v0[9];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[15], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[20] = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    id v14 = (int *)((char *)v10 + *v10);
    int64_t v12 = (void *)swift_task_alloc();
    v0[21] = v12;
    *int64_t v12 = v0;
    v12[1] = sub_10000A3E4;
    uint64_t v13 = v0[15];
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 22, v13);
  }
}

void sub_100007FA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10000801C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = 0;
      while ((a1 & 0xC000000000000001) == 0)
      {
        if (__OFADD__(v5, 1)) {
          goto LABEL_13;
        }
        uint64_t v9 = *(void *)(a1 + 32 + 8 * v5++);
        if (v9 == a2)
        {
LABEL_11:
          swift_bridgeObjectRelease();
          return 1;
        }
LABEL_4:
        if (v5 == v4) {
          goto LABEL_15;
        }
      }
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!__OFADD__(v5++, 1)) {
        break;
      }
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        goto LABEL_15;
      }
    }
    uint64_t v8 = v6;
    swift_unknownObjectRelease();
    if (v8 == a2) {
      goto LABEL_11;
    }
    goto LABEL_4;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100008120()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1000082AC()
{
  id result = [self configurationWithScale:3];
  qword_1007377C0 = (uint64_t)result;
  return result;
}

uint64_t sub_1000082EC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

void sub_1000083B4(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000D21E0;
  v6[3] = &unk_100688C40;
  id v4 = v2;
  uint64_t v5 = *(void *)(a1 + 32);
  id v7 = v4;
  uint64_t v8 = v5;
  [v3 _performWhileNotingInflightSelectedViewController:v4 block:v6];
}

void sub_100008448()
{
  if (!qword_1007148E8)
  {
    type metadata accessor for DOCItemSortMode();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007148E8);
    }
  }
}

void sub_1000084A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateProviderNodes];
}

void UITabBarController.usingVariableBlurBottomBar.setter(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v4 - 8);
  if ([v1 usingVariableBlurBottomBar] != v3)
  {
    if (a1)
    {
      uint64_t v5 = (void *)swift_dynamicCastObjCProtocolUnconditional();
      id v6 = v1;
      id v7 = [v5 tabBar];
      uint64_t v8 = (char *)[objc_allocWithZone((Class)type metadata accessor for DOCTabBarVariableBlurBackgroundView()) init];
      [v7 _setBackgroundView:v8];
      if (*(void *)&v8[OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView])
      {
        swift_retain();
        id v9 = [v6 view];
        if (v9)
        {
          uint64_t v10 = v9;
          sub_1002DE1F0(v9);
          swift_release();

          UIViewController.traitOverrides.getter();
          sub_100034698();
          UITraitOverrides.subscript.setter();
          UIViewController.traitOverrides.setter();

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    [v1 detatchVariableBlurView];
  }
}

uint64_t sub_100008724()
{
  uint64_t v1 = *v0;
  sub_1000CBE70(&qword_100705B70);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v25) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v13);
    Hasher.init(_seed:)();
    swift_retain();
    Task.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v3 + 48) + 8 * v11) = v17;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000089EC()
{
  uint64_t result = type metadata accessor for UICellConfigurationState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100008A84()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 177);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100008B0C(uint64_t a1, NSObject *a2, unsigned char *a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v33 = v5 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v8) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v34)
    {
      unint64_t v14 = *(void *)(v33 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v34) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v33 + 8 * v10);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 2;
      if (v13 + 2 >= v34) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v33 + 8 * v10);
      if (v14) {
        goto LABEL_22;
      }
      int64_t v10 = v13 + 3;
      if (v13 + 3 >= v34) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v33 + 8 * v10);
      if (v14)
      {
LABEL_22:
        unint64_t v8 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
        {
          int64_t v16 = (_OWORD *)(*(void *)(v5 + 56) + 224 * i);
          long long v17 = v16[1];
          v36[0] = *v16;
          v36[1] = v17;
          long long v18 = v16[5];
          long long v20 = v16[2];
          long long v19 = v16[3];
          v36[4] = v16[4];
          v36[5] = v18;
          v36[2] = v20;
          v36[3] = v19;
          long long v21 = v16[6];
          long long v22 = v16[7];
          long long v23 = v16[9];
          v36[8] = v16[8];
          v36[9] = v23;
          v36[6] = v21;
          v36[7] = v22;
          long long v24 = v16[10];
          long long v25 = v16[11];
          long long v26 = v16[12];
          *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)((char *)v16 + 201);
          v36[11] = v25;
          v37[0] = v26;
          v36[10] = v24;
          sub_10035BB8C(v36);
          dispatch_group_enter(a2);
          sub_10035BB8C(v36);
          swift_unknownObjectRelease();
          uint64_t v27 = (void *)*((void *)&v36[0] + 1);
          swift_unknownObjectRetain();
          sub_1000A3084((uint64_t)v36 + 8);
          uint64_t v28 = swift_allocObject();
          *(void *)(v28 + 16) = a2;
          aBlock[4] = sub_10021FD14;
          aBlock[5] = v28;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000666D8;
          aBlock[3] = &unk_1006A9800;
          id v29 = _Block_copy(aBlock);
          id v30 = a2;
          swift_release();
          unsigned int v31 = [v27 registerGenerationCompletionHandler:v29];
          _Block_release(v29);
          swift_unknownObjectRelease();
          if (v31)
          {
            uint64_t result = sub_1003F1B70((uint64_t)v36);
            *a3 = 1;
            if (!v8) {
              goto LABEL_7;
            }
          }
          else
          {
            dispatch_group_leave(v30);
            uint64_t result = sub_1003F1B70((uint64_t)v36);
            if (!v8) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
        }
      }
      int64_t v15 = v13 + 4;
      if (v15 < v34)
      {
        unint64_t v14 = *(void *)(v33 + 8 * v15);
        if (v14)
        {
          int64_t v10 = v15;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v10 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_28;
          }
          if (v10 >= v34) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v33 + 8 * v10);
          ++v15;
          if (v14) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100008E44(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v38 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  char v36 = a3;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_22:
    long long v17 = *(void **)(*(void *)(v5 + 48) + 8 * v13);
    long long v18 = (long long *)(*(void *)(v5 + 56) + 224 * v13);
    long long v19 = v18[1];
    long long v52 = *v18;
    long long v53 = v19;
    long long v20 = v18[5];
    long long v22 = v18[2];
    long long v21 = v18[3];
    long long v56 = v18[4];
    long long v57 = v20;
    long long v54 = v22;
    long long v55 = v21;
    long long v23 = v18[9];
    long long v25 = v18[6];
    long long v24 = v18[7];
    long long v60 = v18[8];
    long long v61 = v23;
    long long v58 = v25;
    long long v59 = v24;
    long long v27 = v18[11];
    long long v26 = v18[12];
    long long v28 = v18[10];
    *(_OWORD *)&v64[9] = *(long long *)((char *)v18 + 201);
    long long v63 = v27;
    *(_OWORD *)v64 = v26;
    long long v62 = v28;
    sub_10035BB8C(&v52);
    sub_10035BB8C(&v52);
    id v29 = v17;
    swift_unknownObjectRelease();
    sub_1000A3128((uint64_t)&v53);
    sub_1000A3084((uint64_t)&v52 + 8);
    if (v64[24] != 1 || (void)v53 == a2)
    {
      sub_1000A30E0((uint64_t)&v53);
    }
    else
    {
      id v30 = *a3;
      sub_10035BB8C(&v52);
      id v31 = v29;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a3 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v30 = sub_1001903A4(0, v30[2] + 1, 1, v30);
        *a3 = v30;
      }
      unint64_t v34 = v30[2];
      unint64_t v33 = v30[3];
      if (v34 >= v33 >> 1) {
        id v30 = sub_1001903A4((void *)(v33 > 1), v34 + 1, 1, v30);
      }
      long long v43 = v56;
      long long v44 = v57;
      long long v41 = v54;
      long long v42 = v55;
      long long v47 = v60;
      long long v48 = v61;
      long long v45 = v58;
      long long v46 = v59;
      *(_OWORD *)&v51[9] = *(_OWORD *)&v64[9];
      long long v50 = v63;
      *(_OWORD *)v51 = *(_OWORD *)v64;
      long long v49 = v62;
      long long v39 = v52;
      long long v40 = v53;
      v30[2] = v34 + 1;
      uint64_t v35 = &v30[29 * v34];
      v35[4] = v31;
      *(_OWORD *)(v35 + 7) = v40;
      *(_OWORD *)(v35 + 5) = v39;
      *(_OWORD *)(v35 + 15) = v44;
      *(_OWORD *)(v35 + 13) = v43;
      *(_OWORD *)(v35 + 11) = v42;
      *(_OWORD *)(v35 + 9) = v41;
      *(_OWORD *)(v35 + 23) = v48;
      *(_OWORD *)(v35 + 21) = v47;
      *(_OWORD *)(v35 + 19) = v46;
      *(_OWORD *)(v35 + 17) = v45;
      *(_OWORD *)((char *)v35 + 241) = *(_OWORD *)&v51[9];
      *(_OWORD *)(v35 + 29) = *(_OWORD *)v51;
      *(_OWORD *)(v35 + 27) = v50;
      *(_OWORD *)(v35 + 25) = v49;
      a3 = (void **)v36;
      *char v36 = v30;

      sub_1000A30E0((uint64_t)&v53);
    }
    uint64_t result = sub_1003F1B70((uint64_t)&v52);
  }
  int64_t v14 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v14 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v14);
  ++v11;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v11 = v14 + 1;
  if (v14 + 1 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v11 = v14 + 2;
  if (v14 + 2 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v11);
  if (v15)
  {
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v38) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v38) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1000091C8()
{
  if ([self enclosingTabSwitcherCanBeFloating])
  {
    uint64_t v1 = sub_10003FBBC();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 0)
      {
        __break(1u);
        return result;
      }
    }
    sub_100514948(0, 0, (uint64_t)v1);
  }
  if (([*(id *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] isPickerUI] & 1) == 0)return (uint64_t)_swiftEmptyArrayStorage; {
  unsigned __int8 v2 = [v0 isEditing];
  }
  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if ((v2 & 1) == 0)
  {
    unint64_t v4 = swift_bridgeObjectRetain();
    sub_100083AD8(v4);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t type metadata accessor for DOCSymbolImageBarButtonItem()
{
  return self;
}

uint64_t sub_10000932C()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1000093D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext;
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  swift_retain();
  LOBYTE(a1) = sub_1000184C4(a1, v9);
  swift_release();
  if ((a1 & 1) == 0) {
    return;
  }
  uint64_t v10 = 1061109567;
  DOCItemCollectionViewController.getCurrentLocation()();
  if (!v11
    || (unint64_t v12 = v11, v13 = [v11 displayName], v12, !v13))
  {
    unint64_t v15 = 0xE400000000000000;
    if (!*(void *)(v2 + v8)) {
      goto LABEL_5;
    }
LABEL_7:
    swift_retain();
    uint64_t v17 = sub_100561AFC();
    unint64_t v16 = v18;
    swift_release();
    goto LABEL_8;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  if (*(void *)(v2 + v8)) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v16 = 0xE500000000000000;
  uint64_t v17 = 0x2A6C696E2ALL;
LABEL_8:
  static Logger.UI.getter();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v27 = v5;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v4;
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v25 = v17;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10009B0E4(v10, v15, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10009B0E4(v25, v16, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[TitleMenus] did update '%s' menus to %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1000AC418();
}

uint64_t sub_100009714()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100009758()
{
  sub_1000CBE70(&qword_1007137A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A9BB0;
  *(unsigned char *)(inited + 32) = 0;
  *(_OWORD *)(inited + 40) = xmmword_1005A9BC0;
  *(unsigned char *)(inited + 56) = 1;
  *(_OWORD *)(inited + 64) = xmmword_1005A9BD0;
  *(unsigned char *)(inited + 80) = 2;
  *(_OWORD *)(inited + 88) = xmmword_1005A9BE0;
  *(unsigned char *)(inited + 104) = 3;
  *(_OWORD *)(inited + 112) = xmmword_1005A9BF0;
  *(unsigned char *)(inited + 128) = 4;
  *(_OWORD *)(inited + 136) = xmmword_1005A9C00;
  *(unsigned char *)(inited + 152) = 5;
  *(_OWORD *)(inited + 160) = xmmword_1005A9C10;
  *(unsigned char *)(inited + 176) = 6;
  *(_OWORD *)(inited + 184) = xmmword_1005A9C20;
  *(unsigned char *)(inited + 200) = 7;
  *(_OWORD *)(inited + 208) = xmmword_1005A9C30;
  *(unsigned char *)(inited + 224) = 12;
  *(_OWORD *)(inited + 232) = xmmword_1005A9C40;
  *(unsigned char *)(inited + 248) = 14;
  *(_OWORD *)(inited + 256) = xmmword_1005A9C50;
  *(unsigned char *)(inited + 272) = 8;
  *(void *)(inited + 280) = 0x4087400000000000;
  *(void *)(inited + 288) = 0x4091B40000000000;
  *(unsigned char *)(inited + 296) = 9;
  *(_OWORD *)(inited + 304) = xmmword_1005A9C60;
  *(unsigned char *)(inited + 320) = 10;
  *(void *)(inited + 328) = 0x4089500000000000;
  *(void *)(inited + 336) = 0x4090E00000000000;
  *(unsigned char *)(inited + 344) = 11;
  *(_OWORD *)(inited + 352) = xmmword_1005A9C70;
  *(unsigned char *)(inited + 368) = 13;
  *(void *)(inited + 376) = 0x408A100000000000;
  *(void *)(inited + 384) = 0x4092A80000000000;
  *(unsigned char *)(inited + 392) = 15;
  *(_OWORD *)(inited + 400) = xmmword_1005A9C80;
  *(unsigned char *)(inited + 416) = 16;
  *(void *)(inited + 424) = 0x4092A00000000000;
  *(void *)(inited + 432) = 0x4098D80000000000;
  uint64_t v1 = (void *)sub_10004AD5C(inited);
  uint64_t result = swift_setDeallocating();
  off_1007137A0 = v1;
  return result;
}

void sub_100009930()
{
  if (!qword_100713718)
  {
    type metadata accessor for DispatchTime();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100713718);
    }
  }
}

void sub_100009988(id a1)
{
  id v1 = objc_alloc((Class)NSUserDefaults);
  id v4 = [v1 initWithSuiteName:DOCDefaultsSuiteName];
  uint64_t v2 = [v4 objectForKey:DOCTestUserDefaultsKeyBrowseTabSelected];
  uint64_t v3 = (void *)qword_10071D3C8;
  qword_10071D3C8 = v2;
}

void sub_100009A64()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_100051B14();
  }
}

void *sub_100009AB8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000CBE70(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      unint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      unint64_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009DB98(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

unint64_t sub_100009BC4()
{
  unint64_t result = qword_10070BC50;
  if (!qword_10070BC50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070BC50);
  }
  return result;
}

void sub_100009C04(id a1)
{
  id v1 = dispatch_get_global_queue(25, 0);
  dispatch_async(v1, &stru_100688D00);
}

uint64_t sub_100009CD4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_100581E60;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_100008120;
  }
  return _swift_task_switch(v5, v3, v4);
}

void sub_100009E5C()
{
  if (!qword_100707C40)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100707C40);
    }
  }
}

uint64_t sub_100009EB4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009EF4()
{
  uint64_t result = type metadata accessor for FileEntityIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100009FA0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v4)
  {
LABEL_15:
    swift_beginAccess();
    *(void *)(a1 + 88) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t result = sub_100019008(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1) {
          sub_100019008(v8 > 1, v9 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v9 + 1;
        uint64_t v10 = &_swiftEmptyArrayStorage[4 * v9];
        v10[5] = 0;
        v10[6] = 0;
        v10[4] = v7;
        *((unsigned char *)v10 + 56) = 1;
      }
    }
    else
    {
      int64_t v11 = (id *)(a2 + 32);
      do
      {
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v13 = _swiftEmptyArrayStorage[3];
        id v14 = *v11;
        if (v12 >= v13 >> 1) {
          sub_100019008(v13 > 1, v12 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v12 + 1;
        unint64_t v15 = &_swiftEmptyArrayStorage[4 * v12];
        v15[5] = 0;
        v15[6] = 0;
        v15[4] = v14;
        *((unsigned char *)v15 + 56) = 1;
        ++v11;
        --v4;
      }
      while (v4);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000A160(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 228) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return _swift_task_switch(sub_10001A55C, v4, v3);
}

uint64_t sub_10000A2AC(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_10000A2F8()
{
  if (!qword_100710FB8)
  {
    type metadata accessor for DOCItemGroupingBehavior();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100710FB8);
    }
  }
}

uint64_t initializeWithCopy for DOCGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  id v10 = v3;
  id v11 = v5;
  return a1;
}

uint64_t sub_10000A3E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  uint64_t v3 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 104);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 177) = *(unsigned char *)(v1 + 176);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 136);
  uint64_t v6 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_100008A84, v6, v5);
}

void sub_10000A5D4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10001A7D4();
  }
}

uint64_t sub_10000A628(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);

  return a1;
}

id sub_10000A668(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentLocationTitleObserver] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_quicklookStateRestorationActivityIdentifier];
  *(void *)uint64_t v5 = 0xD000000000000024;
  *((void *)v5 + 1) = 0x80000001005EE770;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration] = 0;
  if (a1)
  {
    type metadata accessor for UTType();
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.isa = 0;
  }
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DRIMainViewController();
  id v7 = [super initForOpeningContentTypes:v6.super.isa];

  return v7;
}

void sub_10000A794()
{
  id v0 = [self sharedInstance];
}

uint64_t sub_10000A7D8()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10000A884(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t type metadata accessor for DOCSourceOrderObserver()
{
  return self;
}

void *sub_10000A95C()
{
  v0[2] = 0;
  v0[3] = 0;
  sub_1000CBE70(&qword_1007155B0);
  swift_allocObject();
  v0[4] = DOCThreadSafeState.init(_:)();
  sub_10009E6C4(0, (unint64_t *)&qword_100707730);
  id v1 = (id)static NSUserDefaults.docUserDefaults.getter();
  if (!v1) {
    id v1 = [self standardUserDefaults];
  }
  v0[5] = v1;
  v0[6] = 0;
  return v0;
}

uint64_t sub_10000AA08()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000AAC4()
{
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, &qword_10070ADA8);
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot, &qword_10070ADA0);

  return swift_deallocClassInstance();
}

void sub_10000AB48()
{
  sub_10000ACDC(319, &qword_10070B1C0, (void (*)(uint64_t))type metadata accessor for DOCHierarchyController.UpdateExpectation);
  if (v0 <= 0x3F)
  {
    sub_10000ACDC(319, &qword_10070B1C8, (void (*)(uint64_t))type metadata accessor for DOCHierarchyController.FetchingOperationToken);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10000ACDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10000AD30()
{
  sub_10000AF04(319, &qword_100711F00);
  if (v0 <= 0x3F)
  {
    sub_10000AF4C(319, &qword_100711F08, (void (*)(uint64_t))&type metadata accessor for DOCItemGroupingBehavior);
    if (v1 <= 0x3F)
    {
      sub_10000AF4C(319, &qword_100711F10, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
      if (v2 <= 0x3F)
      {
        sub_10000AF04(319, (unint64_t *)&unk_100711F18);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_10000AF04(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_10000AF4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10000AFA0()
{
  sub_10000B0EC(319, &qword_100714CD8, (void (*)(uint64_t))type metadata accessor for ScrollToItem);
  if (v0 <= 0x3F)
  {
    sub_10000B0EC(319, &qword_100714CE0, (void (*)(uint64_t))type metadata accessor for ActiveScrollItemContext);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10000B0EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10000B140()
{
  sub_10000B234(319, &qword_100719438, &qword_100719440);
  if (v0 <= 0x3F)
  {
    sub_10000B234(319, qword_100719448, (uint64_t *)&unk_10070ADB0);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10000B234(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100074618(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10000B304(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x676E6964616F6CLL;
  switch(a1)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_6;
    default:
      swift_errorRetain();
      NSArray v6 = (void *)_convertErrorToNSError(_:)();
      id v7 = [v6 domain];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v10 = v9;

      [v6 code];
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v13 = v12;
      swift_bridgeObjectRetain();
      v14._countAndFlagsBits = v11;
      v14._object = v13;
      String.append(_:)(v14);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a1);
      uint64_t v5 = v8;
      unint64_t v4 = v10;
LABEL_3:
      if (v5 == 0x676E6964616F6CLL && v4 == 0xE700000000000000) {
        return swift_bridgeObjectRelease();
      }
LABEL_6:
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        uint64_t result = swift_beginAccess();
        uint64_t v17 = *(void (**)(uint64_t))(a2 + 16);
        if (v17)
        {
          uint64_t v18 = swift_retain();
          v17(v18);
          return sub_1000A7258((uint64_t)v17);
        }
      }
      return result;
  }
}

uint64_t sub_10000B540(uint64_t a1, void (*a2)(unsigned char *, unsigned char *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v4 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v4 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v4 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = 56 * v12;
    sub_1000CE280(*(void *)(a1 + 48) + 56 * v12, (uint64_t)v17);
    sub_1000CE280(*(void *)(a1 + 56) + v13, (uint64_t)v18);
    a2(v17, v18);
    uint64_t result = sub_1000CBBA4((uint64_t)v17, &qword_10071A168);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_10000B6F4()
{
  id v0 = (id)_DocumentManagerBundle();
  if (v0)
  {
    unint64_t v1 = v0;
    v6._object = (void *)0x80000001005E9F40;
    v2._countAndFlagsBits = 0x636F44206E616353;
    v2._object = (void *)0xEE0073746E656D75;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v6._countAndFlagsBits = 0xD00000000000003CLL;
    Swift::String v5 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v6);

    xmmword_100711170 = (__int128)v5;
  }
  else
  {
    __break(1u);
  }
}

void *sub_10000B7B8()
{
  sub_1000CBE70(&qword_10070AE18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  if (sub_100026738()) {
    id v2 = sub_10002F164();
  }
  else {
    id v2 = 0;
  }
  *(void *)(inited + 32) = v2;
  Swift::String v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView);
  *(void *)(inited + 40) = v3;
  specialized Array._endMutation()();
  Swift::String v4 = *(void **)(inited + 32);
  if (!v4)
  {
    id v8 = v3;
    unint64_t v7 = *(void **)(inited + 40);
    if (!v7) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  id v5 = v4;
  id v6 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  unint64_t v7 = *(void **)(inited + 40);
  if (v7)
  {
LABEL_10:
    id v9 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10000B930(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10000B980()
{
  id v1 = [objc_allocWithZone((Class)FAFetchFamilyCircleRequest) init];
  v0[19] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1000D8568;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000D2B00;
  v0[13] = &unk_1006A5968;
  v0[14] = v2;
  [v1 startRequestWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10000BB0C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000BB4C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10000BB8C(unint64_t a1)
{
  if (!a1)
  {
LABEL_15:
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_4;
    }
LABEL_16:
    v10._countAndFlagsBits = 0xD000000000000034;
    v11._object = (void *)0x80000001005E3A30;
    v10._object = (void *)0x80000001005E3A60;
    v11._countAndFlagsBits = 0xD00000000000002ELL;
    DOCLocalizedDictionaryString(_:comment:)(v11, v10);
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1005A0030;
    *(void *)(v12 + 56) = &type metadata for UInt;
    *(void *)(v12 + 64) = &protocol witness table for UInt;
    *(void *)(v12 + 32) = v3;
    uint64_t v13 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_16;
  }
LABEL_4:
  uint64_t v4 = FPActionReparent;
  swift_bridgeObjectRetain();
  uint64_t v5 = 4;
  do
  {
    uint64_t v6 = v5 - 4;
    if ((a1 & 0xC000000000000001) != 0)
    {
      unint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t v7 = *(void **)(a1 + 8 * v5);
      swift_unknownObjectRetain();
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v6, 1))
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    unsigned int v9 = [v7 canPerform:v4];
    swift_unknownObjectRelease();
    if (!v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    ++v5;
  }
  while (v8 != v3);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v3 & 0x8000000000000000) == 0) {
    goto LABEL_16;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10000BDE8()
{
  swift_unknownObjectRelease();

  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void *sub_10000BE40(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (void *)sub_1000D2810(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_1000D2810(v6 > 1, v7 + 1, 1);
        }
        ++v4;
        _swiftEmptyArrayStorage[2] = v7 + 1;
        uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
        v8[4] = v5;
        v8[5] = &off_10068CBB0;
      }
      while (v2 != v4);
    }
    else
    {
      unsigned int v9 = (uint64_t *)(a1 + 32);
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = 2 * v10;
      do
      {
        uint64_t v12 = *v9;
        unint64_t v13 = _swiftEmptyArrayStorage[3];
        swift_retain();
        if (v10 >= v13 >> 1) {
          sub_1000D2810(v13 > 1, v10 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v10 + 1;
        int64_t v14 = &_swiftEmptyArrayStorage[v11];
        v14[4] = v12;
        v14[5] = &off_10068CBB0;
        v11 += 2;
        ++v9;
        ++v10;
        --v2;
      }
      while (v2);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000BFE4(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3)
{
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = __CocoaSet.startIndex.getter();
    uint64_t v8 = v7;
    __CocoaSet.endIndex.getter();
    char v9 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      sub_1000D3250(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    sub_10029D514(v6, v8, v5 != 0, a1, a3);
    uint64_t v10 = v14;
    sub_1000D3250(v6, v8, v5 != 0);
    return v10;
  }
  uint64_t result = a2(a1);
  if ((v13 & 1) == 0)
  {
    uint64_t v8 = v12;
    if (*(_DWORD *)(a1 + 36) == v12)
    {
      uint64_t v6 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCConcreteLocationSwiftEncodable()
{
  return self;
}

uint64_t sub_10000C134(uint64_t a1)
{
  uint64_t v2 = (void *)FPActionImportHere;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = a1;
  unint64_t v5 = inited;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  LOBYTE(a1) = sub_1000301E0(v2, v5);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

void sub_10000C278(id a1)
{
  id v1 = +[NSBundle mainBundle];
  id v2 = [v1 bundleIdentifier];
}

void sub_10000C2F4(uint64_t a1)
{
  id v2 = [self defaultCenter];
  [v2 postNotificationName:@"DOCFullDocumentManagerViewControllerDidFinishLoadingNotificationName" object:a1];
}

uint64_t sub_10000C370(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  char v9 = (void **)(v4 + 24);
  if (a2[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] == 1)
  {
    char v9 = (void **)(v4 + 32);
    *(unsigned char *)(v4 + 16) = 1;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a3;
    *(void *)(v10 + 24) = a4;
    objc_allocWithZone((Class)sub_1000CBE70(&qword_100719570));
  }
  else
  {
    *(unsigned char *)(v4 + 16) = 0;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    *(void *)(v11 + 24) = a4;
    objc_allocWithZone((Class)sub_1000CBE70(&qword_100719578));
  }
  uint64_t v12 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();

  char v13 = *v9;
  *char v9 = (void *)v12;

  return v5;
}

uint64_t sub_10000C4F0(unint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = (void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (*v4) {
    uint64_t v5 = (uint64_t)sub_10020C144(a1);
  }
  else {
    uint64_t v5 = sub_10003224C(a1);
  }
  uint64_t v6 = v5;

  return v6;
}

void sub_10000C5A0()
{
  id v1 = [v0 pickerFilenameView];

  if (v1) {
    return;
  }
  id v2 = (char *)[v0 pickerContext];
  if (!v2) {
    return;
  }
  uint64_t v27 = v2;
  id v3 = [v0 configuration];
  unsigned int v4 = [v3 forSavingDocuments];

  if (v4)
  {
    objc_allocWithZone((Class)type metadata accessor for DOCPickerFilenameView(0));
    id v5 = v0;
    uint64_t v6 = v27;
    uint64_t v27 = sub_1000FFD44(v6, v5);
    [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
    *(void *)&v27[OBJC_IVAR____TtC5Files21DOCPickerFilenameView_delegate + 8] = &off_1006A3920;
    swift_unknownObjectWeakAssign();
    id v7 = [v5 view];
    if (v7)
    {
      uint64_t v8 = v7;
      [v7 addSubview:v27];

      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1005A00D0;
      id v10 = [v27 leadingAnchor];
      id v11 = [v5 view];
      if (v11)
      {
        uint64_t v12 = v11;
        id v13 = [v11 leadingAnchor];

        id v14 = [v10 constraintEqualToAnchor:v13];
        *(void *)(v9 + 32) = v14;
        id v15 = [v27 trailingAnchor];
        id v16 = [v5 view];
        if (v16)
        {
          uint64_t v17 = v16;
          id v18 = [v16 trailingAnchor];

          id v19 = [v15 constraintEqualToAnchor:v18];
          *(void *)(v9 + 40) = v19;
          id v20 = [v27 bottomAnchor];
          id v21 = [v5 view];
          if (v21)
          {
            uint64_t v22 = v21;
            uint64_t v23 = self;
            id v24 = [v22 bottomAnchor];

            id v25 = [v20 constraintEqualToAnchor:v24];
            *(void *)(v9 + 48) = v25;
            specialized Array._endMutation()();
            sub_10009E6C4(0, (unint64_t *)&unk_100706720);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v23 activateConstraints:isa];

            [v5 setPickerFilenameView:v27];
            goto LABEL_10;
          }
LABEL_16:
          __break(1u);
          return;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_10:
}

uint64_t sub_10000CAAC()
{
  return swift_deallocClassInstance();
}

void sub_10000CAE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10000CB70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10000CC64()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip);
  }
  else
  {
    type metadata accessor for DOCTipsFamilyTip();
    uint64_t v2 = swift_allocObject();
    *(void *)(v0 + v1) = v2;
    swift_retain();
  }
  swift_retain();
  return v2;
}

void sub_10000CCC8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    sub_10004D4C0(3, (uint64_t)v1, (uint64_t)v1, sub_10004E940);
  }
}

uint64_t sub_10000CEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[9] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[10] = v9;
  v6[11] = v8;
  return _swift_task_switch(sub_1000113B8, v9, v8);
}

void sub_10000CFD4()
{
  if ((objc_msgSend(v0, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkipped_updateOverlay") & 1) == 0)
  {
    id v1 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
    if (v1)
    {
      id v2 = v1;
      [v2 setHidesSearchBarWhenScrolling:0];
      [v2 setHidesBackButton:1];
      sub_100080C70((unint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, 0, 1);
      sub_100014934(v2, *(void **)&v0[OBJC_IVAR____TtC5FilesP33_A5A64235B1E100244B7B9EBD6441597E28DOCPlaceHolderViewController_location]);
    }
  }
}

void sub_10000D18C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    return;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v2 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v4 = [v2 initWithSuiteName:v3];

    if (v4)
    {
      if ([v4 valueForKey:DOCUserDefaultsKeyFPFSDebugMode])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v13, 0, sizeof(v13));
      }
      sub_1000CBE0C((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_100705D60);
      if (v15)
      {
        if (swift_dynamicCast())
        {

          if (v12) {
            return;
          }
        }
        else
        {
        }
      }
      else
      {

        sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_100705D60);
      }
    }
  }
  uint64_t v5 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  id v6 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) promptText];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v9 = v8;

  swift_bridgeObjectRelease();
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    id v11 = [*(id *)(v0 + v5) promptText];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
}

uint64_t sub_10000D3A8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000D3E8()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v2 = (BOOL *)&v0[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  swift_beginAccess();
  *((void *)v2 + 5) = &off_10069B120;
  swift_unknownObjectWeakAssign();
  double v3 = *(double *)&v0[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight];
  *((double *)v2 + 1) = v3;
  *id v2 = v3 > 0.0;
  *((void *)v2 + 2) = 0;
  *((void *)v2 + 3) = 0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  [super prepareLayout];
  *((double *)v2 + 2) = sub_1000D3D44();
  *((void *)v2 + 3) = v4;
  return swift_endAccess();
}

uint64_t sub_10000D5A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708BC0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  char v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10000D7A8()
{
  uint64_t v0 = sub_1000CBE70(&qword_10071A340);
  uint64_t v1 = __chkstk_darwin(v0);
  double v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001AF94(v1, qword_10071A258);
  uint64_t v4 = sub_10009D098(v0, (uint64_t)qword_10071A258);
  uint64_t v5 = CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
  if (v5)
  {
    unint64_t v6 = (void *)v5;
    static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = type metadata accessor for CharacterSet();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 0, 1, v7);
  }
  else
  {
    uint64_t v8 = type metadata accessor for CharacterSet();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  }
  return sub_1000CBE0C((uint64_t)v3, v4, &qword_10071A340);
}

uint64_t sub_10000D8DC()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 sourceListPresentationContext];

  if (v2) {
    return 2;
  }
  uint64_t result = (uint64_t)[v0 splitViewController];
  if (result)
  {
    uint64_t v4 = (void *)result;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      id v6 = [v5 displayMode];

      return v6 == (id)3;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

void sub_10000D9A0()
{
  sub_10000DEA4(319, (unint64_t *)&qword_10070DC10, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  if (v0 <= 0x3F)
  {
    type metadata accessor for DOCItemCollectionConfiguration();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DOCItemCollectionFPController();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DOCItemGroupingBehavior();
        if (v3 <= 0x3F)
        {
          sub_10000DEA4(319, (unint64_t *)&unk_10070A530, (void (*)(uint64_t))&type metadata accessor for UICollectionLayoutListConfiguration);
          if (v4 <= 0x3F)
          {
            sub_10000DEA4(319, (unint64_t *)&qword_10071CDC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortDescriptor);
            if (v5 <= 0x3F)
            {
              sub_10000DEA4(319, &qword_10070A540, (void (*)(uint64_t))type metadata accessor for ScrollPositionInfo);
              if (v6 <= 0x3F) {
                swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
}

void sub_10000DEA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

double sub_10000DEF8@<D0>(void *a1@<X8>)
{
  if (qword_1007052A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double result = *(double *)&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
  *a1 = static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
  return result;
}

id sub_10000DF74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[113];
  id v20 = (id)a1[114];
  uint64_t v5 = a1[115];
  uint64_t v6 = a1[116];
  uint64_t v7 = a1[118];
  uint64_t v8 = a1[119];
  uint64_t v9 = self;
  uint64_t v10 = a1[69];
  id v11 = [v9 preferredFontForTextStyle:v20 compatibleWithTraitCollection:v10];
  id v12 = [v9 preferredFontForTextStyle:v5 compatibleWithTraitCollection:v10];
  CGFloat bottom = UIEdgeInsetsZero.bottom;
  CGFloat right = UIEdgeInsetsZero.right;
  sub_1000B6738();
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v15;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v20;
  *(unsigned char *)(a2 + 80) = 1;
  *(void *)(a2 + 88) = v4;
  *(CGFloat *)(a2 + 96) = UIEdgeInsetsZero.top;
  *(void *)(a2 + 104) = 0;
  *(CGFloat *)(a2 + 112) = bottom;
  *(CGFloat *)(a2 + 120) = right;

  return v20;
}

uint64_t sub_10000E1C0()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070AD30);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v13[-v5];
  uint64_t v7 = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo;
  swift_beginAccess();
  sub_1000CBC00(v11, (uint64_t)v6, (uint64_t *)&unk_10070AD30);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_10070AD30);
  }
  sub_10021FEB8((uint64_t)v6, (uint64_t)v10, type metadata accessor for ScrollPositionInfo);
  if (sub_1001CF214((uint64_t)v10, 0))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
    swift_beginAccess();
    sub_10008C318((uint64_t)v4, v11, (uint64_t *)&unk_10070AD30);
    swift_endAccess();
  }
  return sub_10008BBF0((uint64_t)v10, type metadata accessor for ScrollPositionInfo);
}

uint64_t sub_10000E648(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708E40);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000CBE70(&qword_100708E48);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10000E7D4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 32);
  unint64_t v6 = *(void **)(a1 + 40);

  return a1;
}

id sub_10000E984()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  id v5 = [v4 sharedApplication];
  unsigned int v6 = [v5 supportsMultipleScenes];

  id v7 = 0;
  if (!v6) {
    return v7;
  }
  uint64_t v44 = v1;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v9 = result;
    v51._countAndFlagsBits = 0xD000000000000043;
    v51._object = (void *)0x80000001005E01E0;
    v10._object = (void *)0x80000001005E01C0;
    v10._countAndFlagsBits = 0xD000000000000012;
    v11._countAndFlagsBits = 0x617A696C61636F4CLL;
    v11._object = (void *)0xEB00000000656C62;
    v12._countAndFlagsBits = 0xD000000000000012;
    v12._object = (void *)0x80000001005E01C0;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v51);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v14 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_retain();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v49 = sub_10026A480;
    uint64_t v50 = v13;
    aBlock = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    long long v47 = sub_1004408BC;
    long long v48 = &unk_10069BEC8;
    uint64_t v17 = _Block_copy(&aBlock);
    id v7 = [v14 initWithIdentifier:v15 localizedTitle:v16 resolvedHandler:v17];

    _Block_release(v17);
    swift_release();
    swift_release();
    if (v7)
    {
      [v7 setMenuSortOrder:9];
      [v7 setAvailability:1];
      [v7 setSupportsMultipleItems:0];
      id v18 = v7;
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [self systemImageNamed:v19];

      [v18 setImage:v20];
    }
    id v21 = [v4 sharedApplication];
    unsigned int v22 = [v21 supportsMultipleScenes];

    if (v22)
    {
      if (v7)
      {
        long long v49 = sub_10014E4F0;
        uint64_t v50 = 0;
        aBlock = _NSConcreteStackBlock;
        uint64_t v46 = 1107296256;
        long long v47 = sub_100053508;
        long long v48 = &unk_10069BF18;
        uint64_t v23 = _Block_copy(&aBlock);
        id v24 = self;
        id v25 = v7;
        Class isa = (Class)[v24 predicateWithBlock:v23];
        _Block_release(v23);
        swift_release();
        uint64_t v27 = &selRef_setFilteringPredicate_;
LABEL_10:
        [v7 *v27 isa];
      }
    }
    else if (v7)
    {
      sub_1000CBE70(&qword_100707EF0);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1005A0030;
      id v29 = v7;
      static UTType.folder.getter();
      uint64_t v30 = UTType.identifier.getter();
      uint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v3, v0);
      *(void *)(v28 + 32) = v30;
      *(void *)(v28 + 40) = v32;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v27 = &selRef_setSupportedContentTypes_;
      goto LABEL_10;
    }
    long long v49 = sub_100257C44;
    uint64_t v50 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v46 = 1107296256;
    long long v47 = sub_100053508;
    long long v48 = &unk_10069BEF0;
    unint64_t v33 = _Block_copy(&aBlock);
    id v34 = [self predicateWithBlock:v33];
    _Block_release(v33);
    swift_release();
    if (v7)
    {
      id v35 = [v7 filteringPredicate];
      if (v35)
      {
        char v36 = v35;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1005A0C30;
        *(void *)(v37 + 32) = v36;
        *(void *)(v37 + 40) = v34;
        aBlock = (void **)v37;
        specialized Array._endMutation()();
        sub_10009E6C4(0, &qword_100716480);
        id v38 = v7;
        id v39 = v36;
        id v40 = v34;
        Class v41 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v42 = [self andPredicateWithSubpredicates:v41];

        [v38 setFilteringPredicate:v42];
        id v34 = v39;
      }
      else
      {
        id v40 = v7;
        [v40 setFilteringPredicate:v34];
      }
    }
    return v7;
  }
  __break(1u);
  return result;
}

void sub_10000F030()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_1007125C8 = v2;
}

void *sub_10000F0C0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    id result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = 0;
        do
        {
          uint64_t v5 = v4 + 1;
          uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          type metadata accessor for DOCConcreteLocationSwiftEncodable();
          *(void *)(swift_allocObject() + 16) = v6;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        id v7 = (void **)(a1 + 32);
        type metadata accessor for DOCConcreteLocationSwiftEncodable();
        do
        {
          uint64_t v8 = *v7++;
          *(void *)(swift_allocObject() + 16) = v8;
          id v9 = v8;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v2;
        }
        while (v2);
      }
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

void sub_10000F3B0(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  v64 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v54 - v9;
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v54 - v11;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  id v20 = (char *)&v54 - v19;
  __chkstk_darwin(v18);
  unsigned int v22 = (char *)&v54 - v21;
  long long v63 = v3;
  if (a1)
  {
    IndexPath.init(item:section:)();
    if (sub_1001DAF30((uint64_t)v22))
    {
      id v27 = *(id *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      long long v59 = v12;
      if (v27 && (id v27 = [v27 indexPathsForSelectedItems]) != 0)
      {
        uint64_t v28 = v27;
        id v29 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        id v29 = _swiftEmptyArrayStorage;
      }
      __chkstk_darwin(v27);
      *(&v54 - 2) = (unint64_t)v22;
      BOOL v30 = sub_10008CF28((uint64_t (*)(char *))sub_1002188C0, (uint64_t)(&v54 - 4), (uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0);
      swift_bridgeObjectRelease();
      if (v30)
      {
        sub_1000CBE70(&qword_100708E80);
        unint64_t v31 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        uint64_t v26 = (void *)swift_allocObject();
        *((_OWORD *)v26 + 1) = xmmword_1005A0030;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v26 + v31, v22, v13);
        uint64_t v3 = v63;
        Swift::String v12 = v59;
        if (!v26[2]) {
          goto LABEL_5;
        }
        goto LABEL_17;
      }
      uint64_t v3 = v63;
      Swift::String v12 = v59;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    goto LABEL_16;
  }
  uint64_t v23 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v23 || (id v24 = [v23 indexPathsForSelectedItems]) == 0)
  {
LABEL_16:
    uint64_t v26 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2]) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
  id v25 = v24;
  uint64_t v26 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v26[2])
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_17:
  long long v60 = v10;
  uint64_t v32 = v62;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1002094A8((uint64_t)v26, v32);
  swift_bridgeObjectRelease();
  uint64_t v34 = (uint64_t)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
  swift_beginAccess();
  sub_1000CBC00(v34, (uint64_t)v12, (uint64_t *)&unk_1007069A0);
  long long v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v62 = v14 + 48;
  if (v61(v12, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_1007069A0);
    uint64_t v35 = v33;
  }
  else
  {
    uint64_t v36 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v20, v12, v13);
    __chkstk_darwin(v36);
    *(&v54 - 2) = (unint64_t)v20;
    uint64_t v35 = v33;
    if (sub_10008CF28((uint64_t (*)(char *))sub_1002188C0, (uint64_t)(&v54 - 4), v33, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0))
    {
      uint64_t v37 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v60, 1, 1, v13);
      swift_beginAccess();
      sub_10008C318(v37, v34, (uint64_t *)&unk_1007069A0);
      swift_endAccess();
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  uint64_t v38 = *(void *)(v35 + 16);
  id v39 = v64;
  uint64_t v55 = v35;
  if (v38)
  {
    uint64_t v57 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    long long v58 = v17;
    Class v41 = *(char **)(v14 + 16);
    id v40 = (char *)(v14 + 16);
    unint64_t v42 = v35 + ((v40[64] + 32) & ~(unint64_t)v40[64]);
    uint64_t v56 = *((void *)v40 + 7);
    uint64_t v43 = v40 + 40;
    uint64_t v44 = v40;
    long long v45 = (void (**)(char *, char *, uint64_t))(v40 + 16);
    long long v59 = v41;
    long long v60 = v44;
    uint64_t v46 = (void (**)(char *, uint64_t))(v44 - 8);
    unint64_t v54 = (unint64_t)v43 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    long long v47 = v58;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v59)(v39, v42, v13);
      long long v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v43;
      (*(void (**)(char *, void, uint64_t, uint64_t))v43)(v39, 0, 1, v13);
      if (v61(v39, 1, v13) == 1) {
        break;
      }
      (*v45)(v47, v39, v13);
      [v3 loadViewIfNeeded:v54, v55];
      long long v49 = *(void **)&v3[v57];
      if (!v49)
      {
        __break(1u);
        return;
      }
      id v50 = v49;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v50 deselectItemAtIndexPath:isa animated:0];

      (*v46)(v47, v13);
      v42 += v56;
      --v38;
      uint64_t v3 = v63;
      id v39 = v64;
      if (!v38) {
        goto LABEL_29;
      }
    }
  }
  else
  {
    long long v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
LABEL_29:
    v48(v39, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v52 = [v3 viewIfLoaded];
  id v53 = [v52 window];

  if (v53) {
    sub_1000A6988();
  }
}

uint64_t sub_10000FA94()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10000FAE4()
{
  swift_release();
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10000FB44(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_10070ADA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_10070ADA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      uint64_t v9 = *(void **)(v1 + 32);
      if (v9)
      {
        uint64_t v10 = a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
        swift_beginAccess();
        sub_1000CBC00(v10, (uint64_t)v5, &qword_10070ADA0);
        uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) != 1)
        {
          id v13 = v9;
          dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

          return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v11);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v15 = *(void **)(v1 + 24);
    if (v15)
    {
      uint64_t v16 = a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
      swift_beginAccess();
      sub_1000CBC00(v16, (uint64_t)v8, &qword_10070ADA8);
      uint64_t v17 = sub_1000CBE70(&qword_100719440);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) != 1)
      {
        id v19 = v15;
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

        return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v17);
      }
      goto LABEL_13;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10000FEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a1;
  v7[4] = sub_1000D74E0;
  v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000666D8;
  v7[3] = &unk_1006AB530;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v6);
}

uint64_t sub_10000FFC4(void *a1)
{
  uint64_t v2 = type metadata accessor for DOCNodeType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DOCNode.nodeType.getter();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DOCNodeType.FPItem(_:))
  {
    self;
    uint64_t v7 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v8 = (void *)FPActionImportHere;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
    *(void *)(inited + 32) = v7;
    unint64_t v16 = inited;
    specialized Array._endMutation()();
    unint64_t v10 = v16;
    swift_unknownObjectRetain();
    char v11 = sub_1000301E0(v8, v10);
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
  if (v6 == enum case for DOCNodeType.FINode(_:))
  {
    if (([a1 isRootItem] & 1) != 0
      && (id v12 = [a1 cachedDomain]) != 0
      && (id v13 = v12, v14 = [v12 needsAuthentication], v13, v14))
    {
      char v11 = 0;
    }
    else
    {
      char v11 = sub_10000C134((uint64_t)a1);
    }
    return v11 & 1;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1000101DC()
{
  uint64_t v1 = *v0;
  sub_1000CBE70(&qword_100705B70);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v26 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v12 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v7) {
          goto LABEL_33;
        }
        unint64_t v15 = v26[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v7) {
            goto LABEL_33;
          }
          unint64_t v15 = v26[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v7) {
              goto LABEL_33;
            }
            unint64_t v15 = v26[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v7)
              {
LABEL_33:
                swift_release();
                uint64_t v25 = 1 << *(unsigned char *)(v1 + 32);
                if (v25 > 63) {
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v26 = -1 << v25;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v15 = v26[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v7) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v26[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v13);
      Hasher.init(_seed:)();
      Task.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v17;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1000104D0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 72);
  id v4 = *(id *)a1;
  id v5 = v2;
  id v6 = v3;
  return a1;
}

uint64_t sub_100010510()
{
  uint64_t v0 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A0030;
  CFAbsoluteTime v2 = CFAbsoluteTimeGetCurrent() - *(double *)&qword_100736DD8;
  *(void *)(v1 + 56) = &type metadata for Double;
  *(void *)(v1 + 64) = &protocol witness table for Double;
  *(CFAbsoluteTime *)(v1 + 32) = v2;
  os_log(_:dso:log:type:_:)();

  return swift_bridgeObjectRelease();
}

void sub_1000105D4()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_10071ABA0 = v2;
}

uint64_t sub_100010664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 303) = a5;
  *(void *)(v5 + 184) = a4;
  uint64_t v6 = type metadata accessor for Logger();
  *(void *)(v5 + 192) = v6;
  *(void *)(v5 + 200) = *(void *)(v6 - 8);
  *(void *)(v5 + 208) = swift_task_alloc();
  *(void *)(v5 + 216) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 224) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 232) = v8;
  *(void *)(v5 + 240) = v7;
  return _swift_task_switch(sub_100005AE8, v8, v7);
}

uint64_t sub_10001076C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = [self defaultPermission];
  if (a2 && (unint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove)) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 >= 1) {
      goto LABEL_7;
    }
  }
  else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_7:
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned int v9 = [v6 canItems:isa userActionForConfiguration:v3 fileProviderDomain:a1];

    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  unsigned int v9 = 1;
LABEL_10:
  if ([v3 forPickingFoldersOnly]) {
    unsigned int v11 = [a1 supportsPickingFolders];
  }
  else {
    unsigned int v11 = 1;
  }

  return v9 & v11;
}

unint64_t sub_1000108F4()
{
  type metadata accessor for DOCGridLayout.LayoutCalculator();
  id v0 = (void *)swift_allocObject();
  v0[2] = 0x3FC999999999999ALL;
  sub_100010B00((uint64_t)&_swiftEmptyArrayStorage);
  sub_1000109B0((uint64_t)&_swiftEmptyArrayStorage);
  sub_1000CBE70(&qword_100712738);
  swift_allocObject();
  v0[3] = DOCThreadSafeState.init(_:)();
  v0[4] = sub_100010B00((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t result = sub_1000109B0((uint64_t)&_swiftEmptyArrayStorage);
  v0[5] = result;
  qword_1007125C0 = (uint64_t)v0;
  return result;
}

unint64_t sub_1000109B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unsigned __int8 v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711D10);
  unsigned __int8 v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    long long v5 = *(_OWORD *)(v4 - 3);
    long long v14 = *(_OWORD *)(v4 - 5);
    long long v15 = v5;
    int64_t v16 = (void *)*(v4 - 1);
    id v17 = v16;
    uint64_t v6 = *v4;
    id v18 = (id)v5;
    id v19 = (id)*((void *)&v14 + 1);
    sub_1000CED00(&v19);
    sub_1000CED00(&v18);
    sub_1000CED00(&v17);
    unint64_t result = sub_1000CE8B0((uint64_t)&v14);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = v2[6] + 40 * result;
    long long v10 = v15;
    *(_OWORD *)uint64_t v9 = v14;
    *(_OWORD *)(v9 + 16) = v10;
    *(void *)(v9 + 32) = v16;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100010B00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unsigned __int8 v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  sub_1000CBE70(&qword_100711D18);
  unsigned __int8 v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  memcpy(__dst, (const void *)(a1 + 32), sizeof(__dst));
  long long v4 = *(_OWORD *)(a1 + 176);
  long long v49 = *(_OWORD *)(a1 + 160);
  long long v50 = v4;
  uint64_t v51 = *(void *)(a1 + 192);
  long long v5 = *(_OWORD *)(a1 + 112);
  long long v45 = *(_OWORD *)(a1 + 96);
  long long v46 = v5;
  long long v6 = *(_OWORD *)(a1 + 144);
  long long v47 = *(_OWORD *)(a1 + 128);
  long long v48 = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  long long v41 = *(_OWORD *)(a1 + 32);
  long long v42 = v7;
  long long v8 = *(_OWORD *)(a1 + 80);
  long long v43 = *(_OWORD *)(a1 + 64);
  long long v44 = v8;
  sub_1004A118C((uint64_t)__dst);
  unint64_t result = sub_1000CEF10((uint64_t)&v41);
  if (v10)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v11 = 424;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = v2[6] + 168 * result;
    long long v13 = v50;
    *(_OWORD *)(v12 + 128) = v49;
    *(_OWORD *)(v12 + 144) = v13;
    *(void *)(v12 + 160) = v51;
    long long v14 = v46;
    *(_OWORD *)(v12 + 64) = v45;
    *(_OWORD *)(v12 + 80) = v14;
    long long v15 = v48;
    *(_OWORD *)(v12 + 96) = v47;
    *(_OWORD *)(v12 + 112) = v15;
    long long v16 = v42;
    *(_OWORD *)uint64_t v12 = v41;
    *(_OWORD *)(v12 + 16) = v16;
    long long v17 = v44;
    *(_OWORD *)(v12 + 32) = v43;
    *(_OWORD *)(v12 + 48) = v17;
    id v18 = (_OWORD *)(v2[7] + 224 * result);
    long long v19 = *(_OWORD *)&__dst[23];
    _OWORD *v18 = *(_OWORD *)&__dst[21];
    v18[1] = v19;
    long long v20 = *(_OWORD *)&__dst[31];
    long long v22 = *(_OWORD *)&__dst[25];
    long long v21 = *(_OWORD *)&__dst[27];
    v18[4] = *(_OWORD *)&__dst[29];
    v18[5] = v20;
    v18[2] = v22;
    v18[3] = v21;
    long long v23 = *(_OWORD *)&__dst[39];
    long long v25 = *(_OWORD *)&__dst[33];
    long long v24 = *(_OWORD *)&__dst[35];
    v18[8] = *(_OWORD *)&__dst[37];
    v18[9] = v23;
    v18[6] = v25;
    v18[7] = v24;
    long long v26 = *(_OWORD *)&__dst[41];
    long long v27 = *(_OWORD *)&__dst[43];
    long long v28 = *(_OWORD *)&__dst[47];
    v18[12] = *(_OWORD *)&__dst[45];
    v18[13] = v28;
    v18[10] = v26;
    v18[11] = v27;
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      break;
    }
    v2[2] = v31;
    if (!--v3) {
      goto LABEL_9;
    }
    uint64_t v32 = v11 + 392;
    uint64_t v33 = (long long *)(a1 + v11);
    memcpy(__dst, (const void *)(a1 + v11), sizeof(__dst));
    long long v34 = v33[9];
    long long v49 = v33[8];
    long long v50 = v34;
    uint64_t v51 = *((void *)v33 + 20);
    long long v35 = v33[5];
    long long v45 = v33[4];
    long long v46 = v35;
    long long v36 = v33[7];
    long long v47 = v33[6];
    long long v48 = v36;
    long long v37 = v33[1];
    long long v41 = *v33;
    long long v42 = v37;
    long long v38 = v33[3];
    long long v43 = v33[2];
    long long v44 = v38;
    sub_1004A118C((uint64_t)__dst);
    unint64_t result = sub_1000CEF10((uint64_t)&v41);
    uint64_t v11 = v32;
    if (v39) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t destroy for _DOCBrowserHistoryDataSourceBase.RefreshContext()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_100010D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  void v6[4] = sub_1000D6E14;
  v6[5] = v4;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1000666D8;
  v6[3] = &unk_10069D918;
  long long v5 = _Block_copy(v6);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
}

uint64_t sub_100010E40()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

unsigned char *sub_100010E90()
{
  uint64_t v0 = (void *)DOCSpotlightEnumeratedItemIdentifierSearch;
  NSString v1 = (void *)DOCDocumentSourceIdentifierSearch;
  id v2 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSource(0));
  uint64_t v3 = sub_100058EFC(v0, v1);
  v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 1;
  sub_1000CBE70(&qword_1007054E0);
  uint64_t v4 = type metadata accessor for DOCItemSortMode();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10059B7A0;
  unint64_t v9 = v8 + v7;
  char v10 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v10(v9, enum case for DOCItemSortMode.name(_:), v4);
  v10(v9 + v6, enum case for DOCItemSortMode.kind(_:), v4);
  v10(v9 + 2 * v6, enum case for DOCItemSortMode.modificationDate(_:), v4);
  v10(v9 + 3 * v6, enum case for DOCItemSortMode.size(_:), v4);
  v10(v9 + 4 * v6, enum case for DOCItemSortMode.tags(_:), v4);
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = v8;
  swift_bridgeObjectRelease();
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes] = &off_10068A428;
  swift_bridgeObjectRelease();
  return v3;
}

void sub_100011138()
{
  swift_unknownObjectWeakAssign();
  if (qword_1007052B0 != -1) {
    swift_once();
  }
  if ((byte_10071ABA0 & 1) == 0)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      id v2 = [v0 presentingViewController];

      if (!v2)
      {
        sub_100053754(1);
      }
    }
  }
}

void *sub_100011200()
{
  if ([v0 isEditing]) {
    sub_100288FD0();
  }
  else {
    sub_10002D954();
  }
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if ([*(id *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] forBrowsingInApp])
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unsigned int v2 = [Strong sidebarViewControllerWithIsCollapsed:v0];
      swift_unknownObjectRelease();
      if (v2)
      {
        uint64_t v3 = sub_1000AA298();
        if (v3)
        {
          uint64_t v4 = v3;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100011370(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1000113B8()
{
  uint64_t v1 = v0[3];
  sub_1000CB7E4(v0[4], v0[5]);
  type metadata accessor for SiriVocabulary.Corpus();
  swift_allocObject();
  *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus) = SiriVocabulary.Corpus.init(contents:capacity:)();
  swift_release();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A04F0;
  *(void *)(v2 + 32) = sub_1000D52C8();
  specialized Array._endMutation()();
  v0[12] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100009CD4;
  return static SiriVocabulary.setCorporaByPriority(_:)(v2);
}

uint64_t sub_10001158C()
{
  uint64_t v0 = (void *)DOCSpotlightEnumeratedItemIdentifierTaggedItems;
  uint64_t v1 = (void *)DOCDocumentSourceIdentifierTaggedItems;
  id v2 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSource(0));
  uint64_t v3 = sub_100058EFC(v0, v1);
  v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 1;
  sub_1000CBE70(&qword_1007054E0);
  uint64_t v4 = type metadata accessor for DOCItemSortMode();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10059B7A0;
  unint64_t v9 = v8 + v7;
  char v10 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v10(v9, enum case for DOCItemSortMode.name(_:), v4);
  v10(v9 + v6, enum case for DOCItemSortMode.kind(_:), v4);
  v10(v9 + 2 * v6, enum case for DOCItemSortMode.lastUsedDate(_:), v4);
  v10(v9 + 3 * v6, enum case for DOCItemSortMode.size(_:), v4);
  v10(v9 + 4 * v6, enum case for DOCItemSortMode.tags(_:), v4);
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = v8;
  uint64_t result = swift_bridgeObjectRelease();
  qword_100737350 = (uint64_t)v3;
  return result;
}

uint64_t sub_10001177C(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_10070ADA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_10070ADA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v9 = *(void **)(v1 + 32);
      if (v9)
      {
        uint64_t v10 = a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
        swift_beginAccess();
        sub_1000CBC00(v10, (uint64_t)v5, &qword_10070ADA0);
        uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) != 1)
        {
          id v13 = v9;
          dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();

          return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v11);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    long long v15 = *(void **)(v1 + 24);
    if (v15)
    {
      uint64_t v16 = a1 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
      swift_beginAccess();
      sub_1000CBC00(v16, (uint64_t)v8, &qword_10070ADA8);
      uint64_t v17 = sub_1000CBE70(&qword_100719440);
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) != 1)
      {
        id v19 = v15;
        dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();

        return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v17);
      }
      goto LABEL_13;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100011A88()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_1007084C0 = v2;
}

id sub_100011DFC(void *a1, unsigned char *a2, int a3)
{
  int v72 = a3;
  v73 = a2;
  uint64_t v69 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v69 - 8);
  uint64_t v5 = __chkstk_darwin(v69);
  v68 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v67 = (char *)&v64 - v7;
  id result = [a1 preparedCells];
  if (result)
  {
    unint64_t v9 = result;
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62) {
      goto LABEL_59;
    }
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    for (uint64_t i = v73; v11; uint64_t i = v73)
    {
      uint64_t v76 = v11;
      unint64_t v77 = v10 & 0xC000000000000001;
      uint64_t v64 = 0;
      v65 = (void (**)(char *, uint64_t))(v4 + 8);
      int v74 = v72 & 1;
      uint64_t v13 = 4;
      unint64_t v66 = v10;
      while (1)
      {
        uint64_t v4 = v13 - 4;
        id v14 = v77 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v10 + 8 * v13);
        long long v15 = v14;
        uint64_t v16 = v13 - 3;
        if (__OFADD__(v4, 1)) {
          break;
        }
        type metadata accessor for DOCItemCollectionCell();
        uint64_t v17 = (void *)swift_dynamicCastClass();
        if (!v17) {
          goto LABEL_6;
        }
        uint64_t v18 = *(uint64_t (**)(void))((swift_isaMask & *v17) + 0x1F8);
        uint64_t v78 = (swift_isaMask & *v17) + 504;
        uint64_t v19 = v18();
        if (v19)
        {
          uint64_t v20 = (void *)v19;
          long long v21 = (void **)(v19 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          long long v22 = *v21;
          swift_unknownObjectRetain();

          if (!v22)
          {
            uint64_t v11 = v76;
            goto LABEL_48;
          }
          long long v23 = *(void **)&i[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
          unsigned int v24 = [v23 forPickingDocuments];
          v75 = v22;
          if (v24)
          {
            v70 = v18;
            v71 = v15;
            id v25 = [v22 contentType];
            long long v26 = v67;
            static UTType._unconditionallyBridgeFromObjectiveC(_:)();

            long long v27 = v68;
            static UTType.folder.getter();
            LOBYTE(v25) = static UTType.== infix(_:_:)();
            long long v28 = *v65;
            uint64_t v29 = v27;
            uint64_t v30 = v69;
            (*v65)(v29, v69);
            v28(v26, v30);
            if (v25)
            {
              unsigned int v31 = [v23 forPickingDocuments];
              uint64_t i = v73;
              unint64_t v10 = v66;
              uint64_t v18 = v70;
              if (v31 && [v73 isEditing]) {
                int v32 = i[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
              }
              else {
                int v32 = 1;
              }
            }
            else
            {
              int v32 = 1;
              uint64_t i = v73;
              unint64_t v10 = v66;
              uint64_t v18 = v70;
            }
            uint64_t v33 = v18();
            if (v33)
            {
              long long v34 = (unsigned char *)v33;
              BOOL v35 = sub_1000968BC(v75);
              int v36 = v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
              v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable] = v35 & v32;
              if (v36 == 2 || ((v36 & 1) == 0) == (v35 & v32))
              {
                v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim] = 2;
                long long v37 = *(void **)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
                *(void *)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

                sub_1000951C8((uint64_t)v79);
                uint64_t v38 = (uint64_t)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
                sub_1000CBE0C((uint64_t)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v80, &qword_100705560);
                sub_1000CBE0C((uint64_t)v79, v38, &qword_100705560);
                sub_1000A0B6C((uint64_t)v80);
                char v39 = *(void **)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
                *(void *)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

                uint64_t v40 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                uint64_t v41 = *(void *)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] | 0x28;
                if ((~*(_DWORD *)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] & 0x28) != 0) {
                  *(void *)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v41;
                }
                if (!*(void *)&v34[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                  && !sub_1000CBC64())
                {
                  *(void *)&v34[v40] = 0;
                  uint64_t v43 = v41;
                  uint64_t v44 = v64;
                  sub_100090F98(v43, (uint64_t)v34);
                  uint64_t v64 = v44;
                }

                uint64_t i = v73;
              }
              else
              {
              }
            }
            uint64_t v45 = v18();
            uint64_t v11 = v76;
            long long v15 = v71;
            if (v45)
            {
              long long v46 = (unsigned char *)v45;
              if (i[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1) {
                unsigned int v47 = [v75 isFolder] ^ 1;
              }
              else {
                unsigned int v47 = 1;
              }
              int v48 = v46[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable];
              v46[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable] = v47;
              if (v48 == 2 || ((((v48 & 1) == 0) ^ v47) & 1) == 0)
              {
                uint64_t v49 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                uint64_t v50 = *(void *)&v46[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] | 9;
                if ((~*(_DWORD *)&v46[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] & 9) != 0) {
                  *(void *)&v46[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v50;
                }
                if (!*(void *)&v46[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                  && !sub_1000CBC64())
                {
                  *(void *)&v46[v49] = 0;
                  uint64_t v52 = v64;
                  sub_100090F98(v50, (uint64_t)v46);
                  uint64_t v64 = v52;
                  id v53 = v51;
                  long long v15 = v71;
                }
                uint64_t i = v73;
              }

              goto LABEL_46;
            }
          }
          else
          {
LABEL_46:
            uint64_t v11 = v76;
          }
          uint64_t v19 = swift_unknownObjectRelease();
        }
LABEL_48:
        unint64_t v54 = (unsigned __int8 *)((uint64_t (*)(uint64_t))v18)(v19);
        if (v54)
        {
          uint64_t v55 = v54;
          int v56 = v54[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting];
          v54[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting] = v74;
          if (v56 == 2 || ((v56 & 1) == 0) == (v72 & 1))
          {
            v54[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim] = 2;
            uint64_t v57 = *(void **)&v54[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
            *(void *)&v54[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

            sub_1000951C8((uint64_t)v79);
            uint64_t v58 = (uint64_t)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
            sub_1000CBE0C((uint64_t)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v80, &qword_100705560);
            sub_1000CBE0C((uint64_t)v79, v58, &qword_100705560);
            sub_1000A0B6C((uint64_t)v80);
            long long v59 = *(void **)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
            *(void *)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

            v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail] = 2;
            uint64_t v60 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
            uint64_t v61 = *(void *)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
            if ((v61 & 8) == 0)
            {
              v61 |= 8uLL;
              *(void *)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v61;
            }
            if (!*(void *)&v55[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
              && !sub_1000CBC64())
            {
              *(void *)&v55[v60] = 0;
              uint64_t v63 = v64;
              sub_100090F98(v61, (uint64_t)v55);
              uint64_t v64 = v63;
              uint64_t i = v73;
            }

            uint64_t v11 = v76;
            goto LABEL_7;
          }
        }
LABEL_6:

LABEL_7:
        ++v13;
        if (v16 == v11) {
          return (id)swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100012590()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_1000125E8()
{
  swift_release();

  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100012638()
{
  uint64_t v1 = type metadata accessor for UICellAccessory();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000126C8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100012708(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_100012750()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100012798()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000127E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100012830(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100012894()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100012974()
{
  uint64_t v1 = sub_1000CBE70(&qword_10071BCF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100012A08()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100012A50(uint64_t a1)
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100012AA4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v2 = a1;
  unint64_t v5 = sub_10004F108(0);
  if ((v6 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v3 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
  if (!(v3 >> 62))
  {
    uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(v2 + 88) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t result = sub_100019008(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v3 + 8 * i + 32);
      }
      id v11 = v10;
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100019008(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      id v14 = &_swiftEmptyArrayStorage[4 * v13];
      v14[5] = 0;
      v14[6] = 0;
      v14[4] = v11;
      *((unsigned char *)v14 + 56) = 1;
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_100012D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  v100 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v99 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v90 - v9;
  id v11 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  unsigned int v12 = [v11 isPickerUI];
  id v13 = [v1 traitCollection];
  if (v12)
  {
    uint64_t v14 = UITraitCollection.modifyingTraits(_:)();

    id v13 = (id)v14;
  }
  if (sub_1000951EC(1))
  {
    uint64_t v95 = v3;
    uint64_t v96 = v2;
    long long v15 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    swift_beginAccess();
    unint64_t v16 = *((void *)v15 + 1);
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v89 >= 1) {
        goto LABEL_6;
      }
    }
    else if (*(uint64_t *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_6:
      uint64_t v17 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      if (*(void *)v17)
      {
        uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
        if (v18)
        {
          if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics])
          {
            v101 = (unsigned char *)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics;
            v93 = v1;
            uint64_t v94 = v18;
            uint64_t v91 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits;
            uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits];
            if (v19)
            {
              sub_10009E6C4(0, &qword_10070AD60);
              swift_retain();
              id v20 = v13;
              id v21 = v19;
              char v22 = static NSObject.== infix(_:_:)();

              if ((v22 & 1) != 0
                && objc_msgSend(v93, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkippedWork"))
              {
                swift_release();

                *((unsigned char *)v93
                + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_computeStackMetrics) = 1;
                return;
              }
            }
            else
            {
              swift_retain();
            }
            id v25 = v93;
            v101[(void)v93] = 0;
            if ([v13 horizontalSizeClass] == (id)2) {
              double v26 = 15.0;
            }
            else {
              double v26 = 11.0;
            }
            id v27 = [self defaultMetrics];
            [v27 scaledValueForValue:v13 compatibleWithTraitCollection:v26];
            uint64_t v29 = v28;

            if ([v13 horizontalSizeClass] == (id)1)
            {
              uint64_t v30 = sub_100096514();
              [v30 compactHorizontalTableStackSpacing];
            }
            else
            {
              id v32 = [v25 viewIfLoaded];
              if (v32)
              {
                uint64_t v33 = v32;
                uint64_t v30 = [v32 window];

                if (v30)
                {
                  [v30 frame];
                  if (DOCSizeIsFullScreenSize())
                  {
                    long long v34 = sub_100096514();
                    [v34 fullHorizontalTableStackSpacing];
                    uint64_t v36 = v35;

                    goto LABEL_29;
                  }
                }
              }
              uint64_t v30 = sub_100096514();
              [v30 regularHorizontalTableStackSpacing];
            }
            uint64_t v36 = v31;
LABEL_29:

            LODWORD(v101) = [v11 preferLastUsedDate];
            sub_1000976F0((uint64_t)v103);
            id v37 = v103[0];
            sub_10000A628((uint64_t)v103);
            type metadata accessor for DOCItemCollectionViewController.StringWidthCalculationContext();
            uint64_t inited = swift_initStackObject();
            *(void *)(inited + 16) = &_swiftEmptySetSingleton;
            long long v92 = xmmword_1005A1E40;
            *(_OWORD *)(inited + 24) = xmmword_1005A1E40;
            uint64_t v97 = inited;
            *(void *)(inited + 40) = v37;
            sub_1000976F0((uint64_t)v104);
            id v39 = v104[0];
            sub_10000A628((uint64_t)v104);
            uint64_t v40 = swift_initStackObject();
            *(void *)(v40 + 16) = &_swiftEmptySetSingleton;
            *(_OWORD *)(v40 + 24) = v92;
            uint64_t v98 = v40;
            *(void *)(v40 + 40) = v39;
            sub_1000976F0((uint64_t)v105);
            id v41 = v105[0];
            sub_10000A628((uint64_t)v105);
            uint64_t v42 = swift_initStackObject();
            *(void *)(v42 + 16) = &_swiftEmptySetSingleton;
            *(_OWORD *)(v42 + 24) = v92;
            *(void *)(v42 + 40) = v41;
            v102 = &_swiftEmptySetSingleton;
            unint64_t v43 = swift_bridgeObjectRetain();
            sub_100208A38(v43, 500, (uint64_t)v106);
            swift_bridgeObjectRelease();
            uint64_t v44 = sub_1001D5F78();
            if (v44)
            {
              uint64_t v45 = (void *)v44;
              *(void *)&long long v92 = v42;
              long long v46 = (void (**)(char *, uint64_t))(v99 + 8);
              do
              {
                swift_getObjectType();
                [v13 horizontalSizeClass];
                Swift::Int v51 = DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)();
                if (v52)
                {
                  sub_1001D592C(v51, v52);
                  swift_bridgeObjectRelease();
                }
                if ([v45 isFolder])
                {
                  Swift::Int countAndFlagsBits = DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)();
                  if (!object) {
                    goto LABEL_33;
                  }
                }
                else
                {
                  Swift::String v49 = DOCNode.localizedSizeDescription()();
                  object = v49._object;
                  Swift::Int countAndFlagsBits = v49._countAndFlagsBits;
                }
                sub_1001D592C(countAndFlagsBits, (Swift::Int)object);
                swift_bridgeObjectRelease();
LABEL_33:
                id v50 = [v45 contentType];
                static UTType._unconditionallyBridgeFromObjectiveC(_:)();

                sub_1000EDF0C((uint64_t)v10, v8);
                swift_unknownObjectRelease();
                (*v46)(v10, v5);
                uint64_t v45 = (void *)sub_1001D5F78();
              }
              while (v45);
            }
            swift_bridgeObjectRelease();
            uint64_t v53 = swift_bridgeObjectRetain();
            uint64_t v54 = sub_1001B4D00(v53);
            swift_bridgeObjectRelease();
            uint64_t v55 = *(void *)(v54 + 16);
            if (v55)
            {
              swift_retain();
              swift_bridgeObjectRetain();
              int v56 = (Swift::Int *)(v54 + 40);
              do
              {
                Swift::Int v57 = *(v56 - 1);
                Swift::Int v58 = *v56;
                swift_bridgeObjectRetain();
                sub_1001D592C(v57, v58);
                swift_bridgeObjectRelease();
                v56 += 2;
                --v55;
              }
              while (v55);
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_retain();
            }
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            sub_1001D5C48();
            double v60 = v59;
            sub_1001D5C48();
            double v62 = v61;
            sub_1001D5C48();
            double v64 = v63;
            NSString v65 = String._bridgeToObjectiveC()();
            sub_1000CBE70((uint64_t *)&unk_100706750);
            uint64_t v66 = swift_initStackObject();
            *(_OWORD *)(v66 + 16) = xmmword_1005A0030;
            *(void *)(v66 + 32) = NSFontAttributeName;
            v67 = NSFontAttributeName;
            sub_1000976F0((uint64_t)v106);
            id v68 = v106[0];
            sub_10000A628((uint64_t)v106);
            *(void *)(v66 + 64) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
            *(void *)(v66 + 40) = v68;
            sub_10009CC48(v66);
            type metadata accessor for Key(0);
            sub_100078438((unint64_t *)&qword_100706230, type metadata accessor for Key);
            Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v65 sizeWithAttributes:isa];
            double v71 = v70;

            uint64_t v73 = v95;
            uint64_t v72 = v96;
            uint64_t v74 = (uint64_t)v100;
            if (v60 <= 0.0)
            {
              if (v62 <= 0.0) {
                goto LABEL_48;
              }
            }
            else
            {
              (*(void (**)(char *, void, uint64_t))(v95 + 104))(v100, enum case for DOCItemSortMode.DisplayableMode.date(_:), v96);
              double v75 = sub_1004DA908(v74);
              (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v72);
              if (v60 < v71 + v75) {
                double v60 = v71 + v75;
              }
              if (v62 <= 0.0)
              {
LABEL_48:
                if (v64 <= 0.0)
                {
LABEL_51:
                  double v77 = ceil(v60);
                  double v78 = ceil(v62);
                  double v79 = ceil(v64);
                  v80 = (void *)static DOCLog.UI.getter();
                  static os_log_type_t.debug.getter();
                  sub_1000CBE70((uint64_t *)&unk_100708800);
                  uint64_t v81 = swift_allocObject();
                  *(_OWORD *)(v81 + 16) = xmmword_1005A0500;
                  id v82 = [v13 horizontalSizeClass];
                  *(void *)(v81 + 56) = &type metadata for Int;
                  *(void *)(v81 + 64) = &protocol witness table for Int;
                  *(void *)(v81 + 32) = v82;
                  *(void *)(v81 + 96) = &type metadata for CGFloat;
                  unint64_t v83 = sub_10021FD50();
                  *(void *)(v81 + 104) = v83;
                  *(double *)(v81 + 72) = v77;
                  *(void *)(v81 + 136) = &type metadata for CGFloat;
                  *(void *)(v81 + 144) = v83;
                  *(double *)(v81 + 112) = v78;
                  *(void *)(v81 + 176) = &type metadata for CGFloat;
                  *(void *)(v81 + 184) = v83;
                  *(double *)(v81 + 152) = v79;
                  os_log(_:dso:log:type:_:)();

                  swift_bridgeObjectRelease();
                  v84 = v93;
                  v85 = (double *)((char *)v93 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics);
                  double *v85 = v77;
                  v85[1] = v78;
                  v85[2] = v79;
                  *((void *)v85 + 3) = v29;
                  *((void *)v85 + 4) = v36;
                  v86 = *(void **)&v84[v91];
                  *(void *)&v84[v91] = v13;
                  id v87 = v13;

                  sub_1001D4A34();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();

                  return;
                }
LABEL_49:
                (*(void (**)(uint64_t, void, uint64_t))(v73 + 104))(v74, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v72);
                double v76 = sub_1004DA908(v74);
                (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v72);
                if (v64 < v71 + v76) {
                  double v64 = v71 + v76;
                }
                goto LABEL_51;
              }
            }
            (*(void (**)(uint64_t, void, uint64_t))(v73 + 104))(v74, enum case for DOCItemSortMode.DisplayableMode.size(_:), v72);
            double v88 = sub_1004DA908(v74);
            (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v72);
            if (v62 < v71 + v88) {
              double v62 = v71 + v88;
            }
            if (v64 <= 0.0) {
              goto LABEL_51;
            }
            goto LABEL_49;
          }
        }
      }
    }

    return;
  }
  id v23 = [self standardUserDefaults];
  v101 = String._bridgeToObjectiveC()();
  [v23 BOOLForKey:v101];

  unsigned int v24 = v101;
}

id sub_100013958()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_backgroundTapGestureRecognizer];
  [v1 addTarget:v0 action:"_backgroundTapGestureRecognized:"];
  [v1 setDelegate:v0];
  [v1 setCancelsTouchesInView:0];
  [v0 addGestureRecognizer:v1];
  id v2 = [self clearColor];
  [v0 setBackgroundColor:v2];

  return [v0 setClipsToBounds:1];
}

unsigned char *sub_100013A34()
{
  uint64_t v0 = type metadata accessor for DOCItemSortMode();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)DOCSpotlightEnumeratedItemIdentifierSharedItems;
  uint64_t v5 = (void *)DOCDocumentSourceIdentifierSharedItems;
  uint64_t v6 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCSharedDocumentsSource(0))
     + OBJC_IVAR____TtC5Files24DOCSharedDocumentsSource____lazy_storage____displayName;
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = sub_100058EFC(v4, v5);
  uint64_t v8 = enum case for DOCItemSortMode.lastUsedDate(_:);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))v1[13];
  v9(v3, enum case for DOCItemSortMode.lastUsedDate(_:), v0);
  id v10 = &v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  swift_beginAccess();
  id v11 = (void (*)(char *, char *, uint64_t))v1[5];
  v1 += 5;
  v11(v10, v3, v0);
  swift_endAccess();
  sub_1000CBE70(&qword_1007054E0);
  uint64_t v12 = v1[4];
  unint64_t v13 = (*((unsigned __int8 *)v1 + 40) + 32) & ~(unint64_t)*((unsigned __int8 *)v1 + 40);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10059B7A0;
  unint64_t v15 = v14 + v13;
  v9((char *)v15, enum case for DOCItemSortMode.name(_:), v0);
  v9((char *)(v15 + v12), enum case for DOCItemSortMode.kind(_:), v0);
  v9((char *)(v15 + 2 * v12), v8, v0);
  v9((char *)(v15 + 3 * v12), enum case for DOCItemSortMode.size(_:), v0);
  v9((char *)(v15 + 4 * v12), enum case for DOCItemSortMode.tags(_:), v0);
  *(void *)&v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = v14;
  swift_bridgeObjectRelease();
  v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault] = 0;
  v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 1;
  return v7;
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidLayoutSubviews()()
{
  v6.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewDidLayoutSubviews];
  id v1 = [v0 pickerFilenameView];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v0 internalNavigationController];
    [v2 frame];
    double Height = CGRectGetHeight(v7);
    [v2 safeAreaInsets];
    [v3 setAdditionalSafeAreaInsets:0.0, 0.0, Height - v5, 0.0];
  }
}

void sub_100013E84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  if (!a1)
  {
LABEL_4:
    if (a3)
    {
      id v10 = (void *)_convertErrorToNSError(_:)();
      if (NSError.isProviderDomainNotAuthenticated.getter())
      {
        id v11 = [a2 identifier];
        id v12 = [a2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v13 = objc_allocWithZone((Class)DOCConcreteLocation);
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v15 = [v13 initWithSourceIdentifier:v11 title:v14];

        self;
        [v15 setIsFPV2:swift_dynamicCastObjCClass() == 0];
        NSString v16 = [a2 promptText];
        if (!v16)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v16 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v15 setPromptText:v16];

        goto LABEL_14;
      }
    }
    id v15 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:a4 node:a1];
    goto LABEL_14;
  }
  if ([(id)swift_unknownObjectRetain() isFolder])
  {
    swift_unknownObjectRelease();
    goto LABEL_4;
  }
  id v17 = [a2 identifier];
  id v18 = [a2 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v19 = objc_allocWithZone((Class)DOCConcreteLocation);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v19 initWithSourceIdentifier:v17 title:v20];

  self;
  [v15 setIsFPV2:swift_dynamicCastObjCClass() == 0];
  NSString v21 = [a2 promptText];
  if (!v21)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v15 setPromptText:v21];
  swift_unknownObjectRelease();

LABEL_14:
  id v22 = v15;
  a5(v15);
}

void *sub_100014244(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [self defaultCenter];
  if (qword_100704F50 != -1) {
    swift_once();
  }
  [v4 postNotificationName:qword_100736F30 object:v2];

  [v2 docSetNeedsUpdateContentUnavailableConfiguration];
  uint64_t result = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (result)
  {
    if ([result isGathering])
    {
      v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = 0;
      sub_1001CCF30();
    }
    else
    {
      sub_100028B5C();
      objc_super v6 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
      if (v6)
      {
        id v7 = v6;
        sub_1001AF2D4();
      }
    }
    _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
    return (void *)sub_100038FFC(a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100014374(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (uint64_t *)&v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *id v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  char v12 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    swift_beginAccess();
    id v13 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = a1;
    id v14 = a1;

    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 1;
    dispatch_group_leave(a4);
  }
  else
  {
    __break(1u);
  }
}

id _s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(void *a1)
{
  if (a1)
  {
    id v2 = a1;
  }
  else
  {
    if (qword_100704E48 != -1) {
      swift_once();
    }
    id v2 = (id)qword_100707948;
  }
  uint64_t v3 = qword_100704E40;
  id v4 = a1;
  if (v3 != -1) {
    swift_once();
  }
  double v5 = (void *)qword_100707940;
  id v6 = [(id)qword_100707940 objectForKey:v2];
  if (!v6)
  {
    id v6 = [objc_allocWithZone((Class)type metadata accessor for DOCInteractionManager()) init];
    [v5 setObject:v6 forKey:v2];
  }

  return v6;
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super viewIsAppearing:a1];
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 1;
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 1;
  [v1 loadViewIfNeeded];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    id v4 = [v3 indexPathsForVisibleItems];
    type metadata accessor for IndexPath();
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v6 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    if (v6) {
      sub_1000B00FC(0);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100014768(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  long long v7 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)uint64_t v6 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *((_OWORD *)v6 + 1) = v7;
  uint64_t v8 = (uint64_t)&v2[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout];
  LOBYTE(aBlock) = 0;
  uint64_t v18 = 0;
  id v15 = 0;
  NSString v16 = 0;
  uint64_t v14 = 0;
  swift_unknownObjectWeakInit();
  sub_1000CB78C((uint64_t)&aBlock, v8, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_1000148B8;
  NSString v16 = &unk_10069B1B8;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v12.receiver = v2;
  v12.super_class = ObjectType;
  id v10 = [super initWithSectionProvider:v9];
  swift_release();
  _Block_release(v9);
  return v10;
}

id sub_1000148B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

void sub_100014934(void *a1, void *a2)
{
  if (sub_1000AC0CC(a2))
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_3:
      uint64_t v6 = v5[4];
      uint64_t v7 = v5[5];
      swift_bridgeObjectRetain();
      [a1 setLargeTitleDisplayMode:1];
      swift_bridgeObjectRetain();
      sub_1000ABC60(v5, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = sub_1000822E4(a2, *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration));
    if (v5[2]) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  id v8 = [a2 displayName];
  [a1 setLargeTitleDisplayMode:2];
  [a1 set_alternateLargeTitles:0];
LABEL_6:
  [a1 setTitle:v8];
}

uint64_t sub_100014A8C()
{
  v0[18] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_1000CBE70(&qword_10070AB70);
  sub_100073DF0(&qword_10070ABA0, &qword_10070AB70);
  id v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  *id v1 = v0;
  v1[1] = sub_1000D24B8;
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v2, v3, v4);
}

void sub_100014B88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v3 = WeakRetained;
      [WeakRetained setLegacyPickers];
      [v3 sourceObserverQueue_didReceiveSourceUpdate];
    }
    else
    {
      if (!*(void *)(a1 + 40)) {
        goto LABEL_7;
      }
      id v3 = WeakRetained;
      [WeakRetained setLegacyPickersObserverError:];
    }
    id WeakRetained = v3;
  }
LABEL_7:
}

uint64_t sub_100014C04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1000CBE70(&qword_100708750);
  swift_allocObject();
  id v4 = a1;
  uint64_t result = NSNotification.SubscriptionsController.init(observee:)();
  *a2 = result;
  return result;
}

void sub_100014C58()
{
  id v1 = v0;
  id v2 = [v0 traitCollection];
  BOOL v3 = sub_1000951EC(8);

  if (v3)
  {
    id v4 = [v1 traitCollection];
    unint64_t v5 = (unint64_t)[v4 userInterfaceStyle];

    if (v5 >= 3)
    {
      type metadata accessor for UIUserInterfaceStyle(0);
      v8[3] = v7;
      v8[0] = v5;
      doc_warnUnrecognizedEnumValueEncountered(_:)();
      sub_10009B1B8((uint64_t)v8);
      uint64_t v6 = 1;
    }
    else
    {
      uint64_t v6 = qword_1005A33D0[v5];
    }
    sub_100022FA0(v6);
  }
}

uint64_t sub_100014D30(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *(void *)id v11 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  uint64_t v12 = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v13 = v9 + 8;
  v14(v11, v8);
  if (v12)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    uint64_t v12 = static OS_os_log.default.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    id v11 = (char *)swift_allocObject();
    *((_OWORD *)v11 + 1) = xmmword_1005A0030;
    unint64_t v13 = a1 >> 62;
    if (!(a1 >> 62))
    {
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  *((void *)v11 + 7) = &type metadata for Int;
  *((void *)v11 + 8) = &protocol witness table for Int;
  *((void *)v11 + 4) = v15;
  os_log(_:dso:log:type:_:)();

  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v17) {
      return result;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  unint64_t v18 = (unint64_t)[a3 userInterfaceStyle];
  id v19 = (void **)v18;
  if (v18 >= 3)
  {
    type metadata accessor for UIUserInterfaceStyle(0);
    id v41 = v21;
    aBlock = v19;
    doc_warnUnrecognizedEnumValueEncountered(_:)();
    sub_10009B1B8((uint64_t)&aBlock);
    uint64_t v20 = 1;
  }
  else
  {
    uint64_t v20 = qword_1005AA450[v18];
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = &_swiftEmptyDictionarySingleton;
  id v23 = [self sharedGenerator];
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v24 + 168) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v24 + 184) = v25;
  *(_OWORD *)(v24 + 200) = *(_OWORD *)(a2 + 160);
  long long v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v24 + 104) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v24 + 120) = v26;
  long long v27 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v24 + 136) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v24 + 152) = v27;
  long long v28 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v24 + 40) = *(_OWORD *)a2;
  *(_OWORD *)(v24 + 56) = v28;
  long long v29 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v24 + 72) = *(_OWORD *)(a2 + 32);
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = v4;
  *(void *)(v24 + 32) = v20;
  uint64_t v30 = *(void *)(a2 + 176);
  *(_OWORD *)(v24 + 88) = v29;
  *(void *)(v24 + 216) = v30;
  *(void *)(v24 + 224) = a3;
  *(void *)(v24 + 232) = v22;
  uint64_t v42 = sub_1003F1B14;
  uint64_t v43 = v24;
  aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_1000666D8;
  id v41 = &unk_1006A9468;
  uint64_t v31 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000A2E70(a2);
  id v32 = a3;
  swift_retain();
  swift_release();
  [v23 performInBatch:v31];
  _Block_release(v31);

  uint64_t v33 = *(NSObject **)(v4 + 32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v4;
  *(void *)(v34 + 24) = v22 + 16;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1003F2360;
  *(void *)(v35 + 24) = v34;
  uint64_t v42 = sub_100162A48;
  uint64_t v43 = v35;
  aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_100087990;
  id v41 = &unk_1006A94E0;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v33, v36);
  _Block_release(v36);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100015264(void *a1, void *a2, unint64_t a3, void *a4)
{
  unint64_t v17 = a3;
  uint64_t v8 = sub_1000CBE70(&qword_100709550);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A6B78(a1, a1[3]);
  sub_1000D7894();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a4) {
    [a4 effectiveTabSwitcherTab:v17];
  }
  else {
    [a2 effectiveTabSwitcherTab:v17];
  }
  LOBYTE(v19) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v4) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  type metadata accessor for DOCConcreteLocationSwiftEncodable();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  id v19 = (void *)v12;
  char v18 = 1;
  sub_1000D47D8(&qword_100709560);
  id v13 = a2;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  swift_release();
  id v19 = sub_10000F0C0(v17);
  char v18 = 2;
  sub_1000CBE70(&qword_100709568);
  sub_1000D32B8(&qword_100709570, &qword_100709560);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  swift_bridgeObjectRelease();
  if (!a4) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  id v19 = (void *)v15;
  char v18 = 3;
  id v16 = a4;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

id sub_100015560(void *a1, id a2, int a3, id a4)
{
  if (a4)
  {
    id v7 = [a4 effectiveTabSwitcherTab];
    id v8 = [a4 effectiveTabSwitcherTab];
  }
  else
  {
    id v7 = [a2 effectiveTabSwitcherTab];
    id v8 = [a2 effectiveTabSwitcherTab];
  }
  id v9 = v8;
  if (v7 != v8
    || ![a2 canBeRestored]
    || ![a1 allowsDisplaying:a2])
  {
    return 0;
  }
  if (a4)
  {
    id v25 = a4;
    id v10 = [v25 sourceIdentifier];
    id v11 = [a2 sourceIdentifier];
    uint64_t v24 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {
        id v22 = v25;
        id v23 = a2;
        swift_bridgeObjectRetain();
        return v9;
      }
    }
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1005A04F0;
  *(void *)(v18 + 32) = a2;
  specialized Array._endMutation()();
  id v19 = a2;
  id v20 = a4;
  id v21 = v19;
  return v9;
}

unsigned char *sub_1000158D8()
{
  uint64_t v0 = type metadata accessor for DOCItemSortMode();
  id v1 = *(void **)(v0 - 8);
  id v2 = v1;
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = (void *)DOCSpotlightEnumeratedItemIdentifierRecentDocuments;
  uint64_t v6 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
  id v7 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSource(0));
  id v8 = sub_100058EFC(v5, v6);
  HIDWORD(v19) = enum case for DOCItemSortMode.lastUsedDate(_:);
  id v9 = (void (*)(char *))v1[13];
  id v20 = v4;
  v9(v4);
  id v10 = &v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  id v21 = &v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  swift_beginAccess();
  id v11 = (void (*)(char *, char *, uint64_t))v1[5];
  id v22 = v1 + 5;
  id v23 = v11;
  v11(v10, v4, v0);
  swift_endAccess();
  sub_1000CBE70(&qword_1007054E0);
  uint64_t v12 = v1[9];
  unint64_t v13 = (*((unsigned __int8 *)v2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v2 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10059B7A0;
  unint64_t v15 = v14 + v13;
  ((void (*)(unint64_t, void, uint64_t))v9)(v15, enum case for DOCItemSortMode.name(_:), v0);
  ((void (*)(unint64_t, void, uint64_t))v9)(v15 + v12, enum case for DOCItemSortMode.kind(_:), v0);
  ((void (*)(unint64_t, void, uint64_t))v9)(v15 + 2 * v12, HIDWORD(v19), v0);
  ((void (*)(unint64_t, void, uint64_t))v9)(v15 + 3 * v12, enum case for DOCItemSortMode.size(_:), v0);
  ((void (*)(unint64_t, void, uint64_t))v9)(v15 + 4 * v12, enum case for DOCItemSortMode.tags(_:), v0);
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = v14;
  swift_bridgeObjectRelease();
  id v16 = v20;
  ((void (*)(char *, char *, uint64_t))v2[2])(v20, v21, v0);
  char v17 = &v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode];
  swift_beginAccess();
  v23(v17, v16, v0);
  swift_endAccess();
  v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 1;
  v8[OBJC_IVAR____TtC5Files21DOCFileProviderSource_supportsImportInDefaultSaveLocation] = 1;
  return v8;
}

uint64_t sub_100015BE4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[24] = Strong;
  uint64_t v2 = v0[16];
  if (Strong)
  {
    uint64_t v4 = v0[14];
    uint64_t v3 = v0[15];
    v0[5] = sub_10000CC64();
    type metadata accessor for DOCTipsFamilyTip();
    sub_100078438(&qword_100707CE8, (void (*)(uint64_t))type metadata accessor for DOCTipsFamilyTip);
    Tip.shouldDisplayUpdates.getter();
    swift_release();
    AsyncMapSequence.base.getter();
    sub_100073DF0(&qword_10070AB88, &qword_10070AB68);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    AsyncMapSequence.transform.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    AsyncMapSequence.Iterator.init(_:transform:)();
    v0[25] = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable;
    uint64_t v5 = static MainActor.shared.getter();
    v0[26] = v5;
    id v9 = (char *)&dword_10070AB90 + dword_10070AB90;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[27] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10000A160;
    return ((uint64_t (*)(uint64_t, void *, void *))v9)(v5, &protocol witness table for MainActor, v0 + 6);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100015E9C()
{
  return swift_release();
}

void sub_100015FB4()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[Default Source UI]: ubiquityIdentityDidChange", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10001C980();
}

void sub_1000160FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  if (a1)
  {
    unint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = a1;
    v13[3] = a3;
    v13[4] = a4;
    v13[5] = a6;
    v13[6] = a7;
    uint64_t v30 = sub_1000D7708;
    uint64_t v31 = v13;
    long long v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    long long v28 = sub_1000704F8;
    long long v29 = &unk_100698DC0;
    uint64_t v14 = _Block_copy(&v26);
    id v15 = a7;
    id v16 = a1;
    swift_retain();
    id v17 = a6;
    swift_release();
    [a5 retrieveSourcesForConfiguration:v17 usingBlock:v14];
    _Block_release(v14);
  }
  else
  {
    uint64_t v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
    if (a2)
    {
      uint64_t v21 = _convertErrorToNSError(_:)();
      id v22 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      unint64_t v23 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    }
    else
    {
      unint64_t v23 = sub_100073F48();
      *(void *)(v20 + 40) = 0xE900000000000072;
      uint64_t v21 = 0x6F727265206C696ELL;
      id v22 = &type metadata for String;
    }
    *(void *)(v20 + 56) = v22;
    *(void *)(v20 + 64) = v23;
    *(void *)(v20 + 32) = v21;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a3;
    *(void *)(v24 + 24) = a4;
    uint64_t v30 = sub_1002229E0;
    uint64_t v31 = (void *)v24;
    long long v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    long long v28 = sub_1000666D8;
    long long v29 = &unk_100698D70;
    id v25 = _Block_copy(&v26);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v25);
  }
}

uint64_t sub_100016400()
{
  [v0 setNeedsFocusUpdate];
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails];
  swift_beginAccess();
  *uint64_t v1 = 0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong didFinishGatheringItemsAndThumbnailsWithSender:v0];
    swift_unknownObjectRelease();
  }
  uint64_t v3 = &v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *((void *)v3 + 1);
    v12[3] = type metadata accessor for DOCItemCollectionViewController(0);
    v12[0] = v0;
    uint64_t v6 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    swift_beginAccess();
    unint64_t v7 = *((void *)v6 + 1);
    if (v7 >> 62)
    {
      id v11 = v0;
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v9 = v0;
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t))(v5 + 8))(v12, v8, 1, 0, ObjectType, v5);
    swift_unknownObjectRelease();
    return sub_10009B1B8((uint64_t)v12);
  }
  return result;
}

void sub_100016580()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    int v2 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive) = 0;
    if (v2 == 1)
    {
      if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders) & 1) == 0)
      {
        *(unsigned char *)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders) = 1;
        sub_100016B08();
        sub_10001F838();
        sub_100026E84();
        if ([*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] isPickerUI])sub_100285D30(); {
      }
        }
      sub_10004DBB0(0, 1);
    }
  }
  id v3 = [self shared];
  [v3 loadIconsFromDiskIfNeeded];
}

uint64_t sub_10001666C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v3[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = a3;
  id v15 = _Block_copy(aBlock);
  id v16 = v3;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void *sub_100016908(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 identifier];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        return v5;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_19;
      }
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14)
      {
        id v15 = *(void **)(v14 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
        if (v15)
        {
          id v16 = v5;
          id v17 = v15;
          char v18 = sub_10006B2B0();

          if (v18) {
            goto LABEL_19;
          }
        }
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100016B08()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver;
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver))
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration);
    id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceObserver);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    uint64_t v6 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v3, v4, (uint64_t)sub_1000D6E1C, v5);
    id v7 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v6;
  }
  uint64_t v8 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesVisitedObserver;
  if (!*(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesVisitedObserver))
  {
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for DOCSourceVisibilityController.VisibilityObserver();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_10028E85C;
    *(void *)(v10 + 24) = v9;
    *(void *)(v1 + v8) = v10;
    swift_retain();
    swift_release();
    sub_1000180EC(v10);
    swift_release();
  }
}

uint64_t sub_100016C84()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  DOCItemCollectionViewController.getCurrentLocation()();
  uint64_t v12 = v11;
  id v13 = [v11 node];

  if ([*(id *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) supportsNavigationTitleMenus])BOOL v14 = v13 == 0; {
  else
  }
    BOOL v14 = 1;
  if (v14)
  {
    sub_10002646C();
    swift_release_n();
    return swift_unknownObjectRelease();
  }
  else
  {
    unsigned int v47 = v9;
    uint64_t v48 = v7;
    Swift::String v49 = v5;
    uint64_t v50 = v6;
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v16 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext;
    if (*(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext)
      && (swift_getObjectType(), swift_retain(), char v17 = DOCNode.isEqualTo(node:)(), swift_release(), (v17 & 1) != 0))
    {
      swift_release();
      return swift_unknownObjectRelease_n();
    }
    else
    {
      uint64_t v45 = v3;
      uint64_t v46 = v2;
      _s16TitleMenuContextCMa(0);
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectRetain();
      UUID.init()();
      uint64_t v19 = v18
          + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration;
      uint64_t v20 = _s23FolderMenuConfigurationVMa(0);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
      v21(v19, 1, 1, v20);
      v21(v18 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, 1, 1, v20);
      *(void *)(v18 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node) = v13;
      *(void *)(v1 + v16) = v18;
      swift_retain();
      swift_release();
      dispatch_group_t v22 = dispatch_group_create();
      sub_100562A84();
      if (v23)
      {
        id v25 = v23;
        uint64_t v26 = v24;
        uint64_t v27 = v22;
        uint64_t v28 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext;
        if (!*(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext))
        {
          uint64_t v29 = sub_100562058();
          uint64_t v30 = *(void *)(v1 + v28);
          *(void *)(v1 + v28) = v29;
          swift_retain();
          sub_1000093D0(v30);
          swift_release();
          swift_release();
        }
        dispatch_group_t v22 = v27;
        dispatch_group_enter(v27);
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1005A04F0;
        *(void *)(v31 + 32) = v13;
        aBlock[0] = v31;
        specialized Array._endMutation()();
        uint64_t v32 = aBlock[0];
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_unknownObjectRetain();
        swift_retain();
        uint64_t v34 = v27;
        sub_1000C0640((uint64_t)v25);
        sub_1003E7EF8(v32, v34, v33, v18, v13, v25, v26);
        sub_1000A7258((uint64_t)v25);
        swift_bridgeObjectRelease();
        swift_release();

        swift_release();
        sub_1000A7258((uint64_t)v25);
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v44 = static OS_dispatch_queue.main.getter();
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v36 = (void *)swift_allocObject();
      v36[2] = v35;
      v36[3] = v18;
      v43[1] = v35;
      v36[4] = sub_100566FC4;
      v36[5] = v10;
      aBlock[4] = sub_100567014;
      aBlock[5] = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006B7C20;
      id v37 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v38 = v47;
      static DispatchQoS.unspecified.getter();
      Swift::Int v51 = _swiftEmptyArrayStorage;
      sub_100567020((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_1000B921C();
      dispatch_group_t v39 = v22;
      uint64_t v40 = v49;
      uint64_t v41 = v46;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v42 = (void *)v44;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v37);
      swift_unknownObjectRelease_n();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v45 + 8))(v40, v41);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v50);
      swift_release();
      return swift_release();
    }
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.scrollViewDidScroll(_:)(UIScrollView a1)
{
  if ([v1 isFirstResponder])
  {
    objc_msgSend(objc_msgSend(self, "shared"), "hideMenuIfActive");
    swift_unknownObjectRelease();
  }
  sub_10001ECEC();
  id v3 = [v1 viewIfLoaded];
  if (v3 && (v4 = v3, id v5 = [v3 window], v4, v5))
  {
    unsigned int v6 = [v5 isKeyWindow];

    int v7 = v6 ^ 1;
  }
  else
  {
    int v7 = 1;
  }
  if ([(objc_class *)a1.super.super.super.isa isTracking]
    && [v1 _appearState] == 2
    && ([v1 isFirstResponder] ^ 1 | v7) == 1)
  {
    uint64_t v8 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v8 != 2)
    {
      id v9 = [self sharedManager];
      [v9 requestCurrentFocus:v1];
    }
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.viewWillDisappear(_:)(Swift::Bool a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super viewWillDisappear:a1];
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding) & 1) == 0)
  {
    id v3 = [v1 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v6 = 0;
        BOOL v7 = a1;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(v4 + 8 * v6 + 32);
          }
          id v9 = v8;
          ++v6;
          [v8 beginAppearanceTransition:0 animated:v7];
        }
        while (v5 != v6);
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

void sub_10001784C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void *sub_100017860(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 identifier];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return v5;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_16;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super viewDidDisappear:a1];
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding) & 1) == 0)
  {
    id v3 = [v1 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          [v7 endAppearanceTransition];
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100017D1C()
{
  uint64_t v0 = type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
  v8[0] = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100707C48);
  type metadata accessor for Tips.ConfigurationOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
  static Tips.ConfigurationOption.analyticsEngine(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
  static Tips.ConfigurationOption.datastoreLocation(_:)();
  (*(void (**)(char *, uint64_t))(v8[0] + 8))(v2, v0);
  static Tips.configure(_:)();
  return swift_bridgeObjectRelease();
}

BOOL sub_100017F90()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (([v1 isPopoverOrWidget] & 1) != 0
    || [v1 isPickerUI]
    && v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] != 1)
  {
    return 0;
  }
  id v2 = [*(id *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 1;
    }
  }
  id v9 = [v0 traitCollection];
  id v10 = [v9 horizontalSizeClass];

  return v10 != (id)1;
}

uint64_t sub_1000180EC(uint64_t a1)
{
  uint64_t v3 = (unint64_t *)(v1 + 80);
  swift_beginAccess();
  swift_retain();
  unint64_t v4 = swift_bridgeObjectRetain();
  char v5 = sub_10000801C(v4, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if ((v5 & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t result = swift_endAccess();
    unint64_t v7 = *v3;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 < 1) {
        return result;
      }
    }
    else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
    {
      return result;
    }
    return sub_10001EB10();
  }
  return result;
}

uint64_t sub_100018234()
{
  uint64_t v0 = sub_1000CBE70(&qword_10070AB30);
  sub_10001AF94(v0, qword_100716CB8);
  sub_10009D098(v0, (uint64_t)qword_100716CB8);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSuiteName:v2];

  if (v3)
  {
    id v4 = DOCUserDefaultsKeyIsSharingFolderWithAdultFamilyMember;
    [v3 BOOLForKey:v4];
  }
  type metadata accessor for DOCTipsFamilyTip();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

void sub_1000184A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000184C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v77 = &v70[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = sub_1000CBE70((uint64_t *)&unk_10070D810);
  uint64_t v7 = __chkstk_darwin(v87);
  uint64_t v81 = &v70[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v10 = &v70[-v9];
  uint64_t v11 = _s23FolderMenuConfigurationVMa(0);
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  __chkstk_darwin(v11);
  v84 = &v70[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000CBE70(&qword_10071C7D8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  double v76 = &v70[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v14);
  double v75 = &v70[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v70[-v19];
  __chkstk_darwin(v18);
  dispatch_group_t v22 = &v70[-v21];
  uint64_t v23 = sub_1000CBE70(&qword_10070B6D0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  v80 = &v70[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = __chkstk_darwin(v24);
  double v78 = &v70[-v27];
  uint64_t v28 = __chkstk_darwin(v26);
  double v79 = &v70[-v29];
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v83 = &v70[-v31];
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = &v70[-v33];
  __chkstk_darwin(v32);
  uint64_t v36 = &v70[-v35];
  uint64_t v86 = a1;
  if (!a1)
  {
LABEL_4:
    dispatch_group_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v39(v36, 1, 1, v4);
    uint64_t v82 = a2;
    if (a2) {
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v41 = 1;
    goto LABEL_10;
  }
  uint64_t v37 = a2;
  uint64_t v38 = v86 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
  swift_beginAccess();
  sub_1000CBC00(v38, (uint64_t)v22, &qword_10071C7D8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48))(v22, 1, v89))
  {
    sub_1000CBBA4((uint64_t)v22, &qword_10071C7D8);
    a2 = v37;
    goto LABEL_4;
  }
  uint64_t v42 = v84;
  sub_100566ECC((uint64_t)v22, (uint64_t)v84);
  sub_1000CBBA4((uint64_t)v22, &qword_10071C7D8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v36, v42, v4);
  sub_100566F30((uint64_t)v42);
  uint64_t v43 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v43(v36, 0, 1, v4);
  a2 = v37;
  dispatch_group_t v39 = v43;
  uint64_t v82 = a2;
  if (!a2) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v40 = a2 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
  swift_beginAccess();
  sub_1000CBC00(v40, (uint64_t)v20, &qword_10071C7D8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48))(v20, 1, v89))
  {
    sub_1000CBBA4((uint64_t)v20, &qword_10071C7D8);
    uint64_t v41 = 1;
  }
  else
  {
    uint64_t v44 = v84;
    sub_100566ECC((uint64_t)v20, (uint64_t)v84);
    sub_1000CBBA4((uint64_t)v20, &qword_10071C7D8);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v34, v44, v4);
    sub_100566F30((uint64_t)v44);
    uint64_t v41 = 0;
  }
LABEL_10:
  uint64_t v85 = v5 + 56;
  v39(v34, v41, 1, v4);
  uint64_t v45 = (uint64_t)&v10[*(int *)(v87 + 48)];
  sub_1000CBC00((uint64_t)v36, (uint64_t)v10, &qword_10070B6D0);
  sub_1000CBC00((uint64_t)v34, v45, &qword_10070B6D0);
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v46((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v34, &qword_10070B6D0);
    sub_1000CBBA4((uint64_t)v36, &qword_10070B6D0);
    if (v46(v45, 1, v4) == 1)
    {
      uint64_t v74 = v5;
      sub_1000CBBA4((uint64_t)v10, &qword_10070B6D0);
      goto LABEL_17;
    }
LABEL_15:
    uint64_t v48 = (uint64_t)v10;
LABEL_32:
    sub_1000CBBA4(v48, (uint64_t *)&unk_10070D810);
    goto LABEL_33;
  }
  unsigned int v47 = v83;
  sub_1000CBC00((uint64_t)v10, (uint64_t)v83, &qword_10070B6D0);
  if (v46(v45, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v34, &qword_10070B6D0);
    sub_1000CBBA4((uint64_t)v36, &qword_10070B6D0);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v47, v4);
    goto LABEL_15;
  }
  Swift::String v49 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v73 = v39;
  uint64_t v50 = v77;
  v49(v77, v45, v4);
  sub_100567020(&qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID);
  int v71 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v74 = v5;
  uint64_t v72 = v46;
  Swift::Int v51 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  Swift::Int v52 = v50;
  dispatch_group_t v39 = v73;
  v51(v52, v4);
  sub_1000CBBA4((uint64_t)v34, &qword_10070B6D0);
  sub_1000CBBA4((uint64_t)v36, &qword_10070B6D0);
  uint64_t v46 = v72;
  v51(v47, v4);
  sub_1000CBBA4((uint64_t)v10, &qword_10070B6D0);
  if ((v71 & 1) == 0)
  {
LABEL_33:
    char v64 = 1;
    return v64 & 1;
  }
LABEL_17:
  if (!v86)
  {
LABEL_20:
    uint64_t v54 = 1;
    uint64_t v55 = v74;
    uint64_t v56 = (uint64_t)v81;
    uint64_t v57 = (uint64_t)v79;
    goto LABEL_22;
  }
  uint64_t v53 = v75;
  sub_1000CBC00(v86 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration, (uint64_t)v75, &qword_10071C7D8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48))(v53, 1, v89))
  {
    sub_1000CBBA4((uint64_t)v53, &qword_10071C7D8);
    goto LABEL_20;
  }
  Swift::Int v58 = v84;
  sub_100566ECC((uint64_t)v53, (uint64_t)v84);
  sub_1000CBBA4((uint64_t)v53, &qword_10071C7D8);
  uint64_t v55 = v74;
  uint64_t v57 = (uint64_t)v79;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 16))(v79, v58, v4);
  sub_100566F30((uint64_t)v58);
  uint64_t v54 = 0;
  uint64_t v56 = (uint64_t)v81;
LABEL_22:
  uint64_t v59 = (uint64_t)v78;
  uint64_t v60 = 1;
  v39((unsigned char *)v57, v54, 1, v4);
  if (v82)
  {
    double v61 = v76;
    sub_1000CBC00(v82 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration, (uint64_t)v76, &qword_10071C7D8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48))(v61, 1, v89))
    {
      sub_1000CBBA4((uint64_t)v61, &qword_10071C7D8);
    }
    else
    {
      double v62 = v84;
      sub_100566ECC((uint64_t)v61, (uint64_t)v84);
      sub_1000CBBA4((uint64_t)v61, &qword_10071C7D8);
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v55 + 16))(v59, v62, v4);
      sub_100566F30((uint64_t)v62);
      uint64_t v60 = 0;
    }
  }
  v39((unsigned char *)v59, v60, 1, v4);
  uint64_t v63 = v56 + *(int *)(v87 + 48);
  sub_1000CBC00(v57, v56, &qword_10070B6D0);
  sub_1000CBC00(v59, v63, &qword_10070B6D0);
  if (v46(v56, 1, v4) != 1)
  {
    sub_1000CBC00(v56, (uint64_t)v80, &qword_10070B6D0);
    if (v46(v63, 1, v4) != 1)
    {
      uint64_t v66 = v77;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v55 + 32))(v77, v63, v4);
      sub_100567020(&qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      v67 = v80;
      char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v69 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
      v69(v66, v4);
      sub_1000CBBA4(v59, &qword_10070B6D0);
      sub_1000CBBA4(v57, &qword_10070B6D0);
      v69(v67, v4);
      sub_1000CBBA4(v56, &qword_10070B6D0);
      char v64 = v68 ^ 1;
      return v64 & 1;
    }
    sub_1000CBBA4(v59, &qword_10070B6D0);
    sub_1000CBBA4(v57, &qword_10070B6D0);
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v80, v4);
    goto LABEL_31;
  }
  sub_1000CBBA4(v59, &qword_10070B6D0);
  sub_1000CBBA4(v57, &qword_10070B6D0);
  if (v46(v63, 1, v4) != 1)
  {
LABEL_31:
    uint64_t v48 = v56;
    goto LABEL_32;
  }
  sub_1000CBBA4(v56, &qword_10070B6D0);
  char v64 = 0;
  return v64 & 1;
}

uint64_t sub_100019008(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100019028(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100019028(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708D28);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void **sub_100019190(uint64_t *a1, void **a2, _OWORD *a3)
{
  sub_1000CAA28((uint64_t)a2);
  sub_1000CAA28((uint64_t)a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_1000CED2C(a3, (uint64_t)a2, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  swift_bridgeObjectRelease();

  return sub_1000CAA5C(a2);
}

uint64_t sub_100019228()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100019268(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a2 userActivities];
  sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
  sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
  uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v10 = (void *)sub_1000D31E4(v9);
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_8;
  }
  id v11 = [v10 activityType];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DOCUserActivityIdentifier.quickLook(_:), v4);
  uint64_t v15 = DOCUserActivityIdentifier.rawValue.getter();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v12 == v15 && v14 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_10:
    id v20 = [a1 role];
    id v24 = objc_allocWithZone((Class)UISceneConfiguration);
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v24 initWithName:v22 sessionRole:v20];

    goto LABEL_11;
  }

LABEL_8:
  id v20 = [a1 role];
  id v21 = objc_allocWithZone((Class)UISceneConfiguration);
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 initWithName:v22 sessionRole:v20];
LABEL_11:

  return v23;
}

uint64_t sub_10001955C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for Logger();
  double v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = sub_1000CBE70(&qword_10070AB68);
  v4[12] = swift_task_alloc();
  sub_1000CBE70(&qword_10070AB70);
  v4[13] = swift_task_alloc();
  uint64_t v6 = sub_1000CBE70(&qword_10070AB78);
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v7 = sub_1000CBE70(&qword_10070AB80);
  v4[17] = v7;
  v4[18] = *(void *)(v7 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = type metadata accessor for MainActor();
  v4[21] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[22] = v9;
  v4[23] = v8;
  return _swift_task_switch(sub_100015BE4, v9, v8);
}

void sub_100019778()
{
  if ([self _UIPTabInfrastructureEnabled])
  {
    id v1 = [v0 tabBarController];
    if (v1)
    {
      id v12 = v1;
      self;
      NSString v2 = (void *)swift_dynamicCastObjCClass();
      if (v2
        && (id v3 = v2,
            objc_msgSend(v2, "_uip_setPreferredSidebarMode:", 1),
            id v4 = [v0 configuration],
            unsigned int v5 = [v4 canHaveFloatingTabSwitcher],
            v4,
            v5))
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        uint64_t v6 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v7 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = v6;
        *(void *)(v8 + 24) = v7;
        uint64_t v11 = v8;
        uint64_t v9 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        [v3 setFloatingTabBarSidebarToggleAction:v9];

        id v10 = (void *)v9;
      }
      else
      {
        id v10 = v12;
      }
    }
  }
}

uint64_t sub_100019954()
{
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A1DD0;
  static UTType.sourceCode.getter();
  static UTType.script.getter();
  static UTType.json.getter();
  static UTType.propertyList.getter();
  static UTType.xmlPropertyList.getter();
  static UTType.binaryPropertyList.getter();
  static UTType.archive.getter();
  static UTType.symbolicLink.getter();
  static UTType.executable.getter();
  static UTType.url.getter();
  return v0;
}

void *_s5Files32_DOCBrowserHistoryDataSourceBaseC14RefreshContextVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100019AB0()
{
  uint64_t v1 = v0;
  v10[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  id v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.unspecified.getter();
  v10[1] = _swiftEmptyArrayStorage;
  sub_100080268((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10[0]);
  *(void *)(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  LOBYTE(v4) = [v7 BOOLForKey:v8];

  *(unsigned char *)(v1 + 24) = (_BYTE)v4;
  *(void *)(v1 + 32) = 0x4000000000000000;
  *(void *)(v1 + 40) = _swiftEmptyArrayStorage;
  return v1;
}

void destroy for DOCLocationChange(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t sub_100019DC0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t DOCHierarchyController.ChangeCoordinator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *initializeBufferWithCopyOfBuffer for DOCLocationChange(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

id *sub_100019F80(void *a1, uint64_t a2, char *a3)
{
  id v6 = (id **)(a2 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews);
  swift_beginAccess();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_3:
      swift_beginAccess();
      id v7 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_5:
          id v7 = *v6;
          if (!((unint64_t)*v6 >> 62))
          {
            if (*(void *)(((unint64_t)v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_7;
            }
            goto LABEL_19;
          }
LABEL_18:
          swift_bridgeObjectRetain();
          uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v21)
          {
LABEL_7:
            if (((unint64_t)v7 & 0xC000000000000001) == 0)
            {
              if (!*(void *)(((unint64_t)v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_22;
              }
              uint64_t result = (id *)v7[4];
LABEL_10:
              id v7 = result;
              if (!((unint64_t)*v6 >> 62))
              {
                if (*(void *)(((unint64_t)*v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_12:
                  sub_100516674(0, 1);
                  swift_endAccess();
                  [v7 setCollectionViewLayout:a1 animated:0];
                  sub_100027188(v7, a3);
                  uint64_t v9 = (void *)static DOCLog.UI.getter();
                  static os_log_type_t.debug.getter();
                  sub_1000CBE70((uint64_t *)&unk_100708800);
                  uint64_t v10 = swift_allocObject();
                  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
                  *(void *)(v10 + 56) = type metadata accessor for DOCItemCollectionView();
                  *(void *)(v10 + 64) = sub_1000D7BA0();
                  *(void *)(v10 + 32) = v7;
                  uint64_t v11 = v7;
                  os_log(_:dso:log:type:_:)();

                  swift_bridgeObjectRelease();
                  return v11;
                }
                goto LABEL_23;
              }
LABEL_22:
              swift_bridgeObjectRetain();
              uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
              uint64_t result = (id *)swift_bridgeObjectRelease();
              if (v22) {
                goto LABEL_12;
              }
LABEL_23:
              __break(1u);
              return result;
            }
LABEL_20:
            uint64_t result = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_10;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
      }
      else if (*(void *)(((unint64_t)v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
      __break(1u);
      goto LABEL_18;
    }
  }
  else if (*(void *)(((unint64_t)*v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_configuration);
  uint64_t v14 = (objc_class *)type metadata accessor for DOCItemCollectionView();
  id v15 = objc_allocWithZone(v14);
  id v16 = sub_10001C250(v13, a1);
  sub_100027188(v16, a3);
  uint64_t v17 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1005A0030;
  *(void *)(v18 + 56) = v14;
  *(void *)(v18 + 64) = sub_1000D7BA0();
  *(void *)(v18 + 32) = v16;
  id v19 = v16;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  [v19 _setShouldResetInitialLayoutOnDataSourceChange:1];
  return (id *)v19;
}

uint64_t sub_10001A2F0(void *a1, void *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for DOCNodeType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  DOCNode.nodeType.getter();
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == enum case for DOCNodeType.FPItem(_:))
  {
    id v16 = [self defaultManager];
    self;
    id v17 = [v16 collectionForFolderItem:swift_dynamicCastObjCClassUnconditional()];

    id v18 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    swift_unknownObjectRetain();
    id v19 = v17;
    sub_1000B3300(v19, a1);
    uint64_t v21 = v20;

    swift_unknownObjectRelease();
    id v22 = a2;
LABEL_5:

    return v21;
  }
  if (v15 == enum case for DOCNodeType.FINode(_:))
  {
    id v23 = objc_allocWithZone((Class)type metadata accessor for DOCFileSystemCollection());
    id v22 = a3;
    swift_unknownObjectRetain();
    id v24 = a2;
    id v25 = sub_100035618((uint64_t)a1, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32), v23, a6);
    swift_unknownObjectRelease();

    id v26 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    sub_100033F8C(v25);
    uint64_t v21 = v27;
    swift_unknownObjectRelease();

    goto LABEL_5;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10001A55C()
{
  int v1 = *(unsigned __int8 *)(v0 + 228);
  if (v1 == 2)
  {
    uint64_t v2 = *(void **)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    int v5 = v1 & 1;
    static Logger.DocumentManager.getter();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      NSString v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)NSString v8 = 67109120;
      *(_DWORD *)(v0 + 224) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Files Family Tip, shouldDisplay changed to %{BOOL}d", v8, 8u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(unsigned char **)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    v9[v10] = v5;
    sub_10002E650();
    [v9 docSetNeedsUpdateContentUnavailableConfiguration];
    uint64_t v14 = static MainActor.shared.getter();
    *(void *)(v0 + 208) = v14;
    id v16 = (uint64_t (*)(uint64_t, void *, uint64_t))((char *)&dword_10070AB90 + dword_10070AB90);
    int v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v15;
    void *v15 = v0;
    v15[1] = sub_10000A160;
    return v16(v14, &protocol witness table for MainActor, v0 + 48);
  }
}

uint64_t sub_10001A7D4()
{
  int v1 = v0;
  uint64_t v2 = (void *)static DOCLog.Source.getter();
  static os_log_type_t.info.getter();
  os_log(_:dso:log:type:_:)();

  unint64_t v3 = sub_10004EC28();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v3;
  *(unsigned char *)(v4 + 32) = 0;
  void v8[4] = sub_10006AE38;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_1000666D8;
  v8[3] = &unk_1006AB4E0;
  int v5 = _Block_copy(v8);
  id v6 = v1;
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
  return swift_bridgeObjectRelease();
}

void *sub_10001A904()
{
  int v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = qword_100704F68;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 visibleSupplementaryViewsOfKind:v4];

  sub_10009E6C4(0, &qword_10070A250);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_6;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v7 = (uint64_t)result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_6:
  if (v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * i + 32);
      }
      uint64_t v11 = v10;
      type metadata accessor for DOCItemCollectionViewSectionHeader();
      if (swift_dynamicCastClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_10001AB24(uint64_t a1, void *a2)
{
  id v5 = a2;
  unsigned int v3 = [v5 supportsEnumeration];
  uint64_t v4 = 40;
  if (v3) {
    uint64_t v4 = 32;
  }
  [*(id *)(a1 + v4) addObject:v5];
}

void *sub_10001AB88()
{
  sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_10009E6C4(0, (unint64_t *)&unk_10070ABE0);
  swift_bridgeObjectRetain();
  Class v1 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [(objc_class *)isa sortedArrayUsingDescriptors:v1];

  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = &_swiftEmptyArrayStorage;
  unint64_t v11 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10009B208(v6, (uint64_t)v10);
      sub_10009B208((uint64_t)v10, (uint64_t)&v8);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v9 = 0;
      }
      sub_10009B1B8((uint64_t)v10);
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)v11;
  }
  swift_bridgeObjectRelease();
  return v4;
}

void sub_10001AD60(char a1, char a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  id v6 = [v5 defaultEffectiveTabIdentifierForLocationRestore];
  unint64_t v7 = sub_10006DAB4();
  char v9 = v8;

  if (v9) {
    unint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  }
  id v10 = sub_10006E6F8(v7);
  uint64_t v13 = v10;
  id v23 = v12;
  if (a1) {
    sub_10001CD14(v10, v11, v12, 0);
  }
  if (a2)
  {
    id v14 = [v5 defaultEffectiveTabIdentifierForLocationRestore];
    uint64_t v15 = sub_10006DAB4();
    char v17 = v16;

    if (v17) {
      uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
    }
    swift_beginAccess();
    id v18 = (void *)sub_1000D3650(v15);
    uint64_t v20 = v19;
    id v22 = v21;
    swift_endAccess();
    swift_bridgeObjectRelease();

    sub_10006DA60(v18, v20, v22);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001AEF0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000CBE70(&qword_10070AB30);
  sub_10001AF94(v3, a2);
  sub_10009D098(v3, (uint64_t)a2);
  type metadata accessor for DOCTipsFamilyTip();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t *sub_10001AF94(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t type metadata accessor for DOCTipsFamilyTip()
{
  return self;
}

void sub_10001B01C()
{
  Class v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v68 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v66 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_100719850);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  char v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = type metadata accessor for RestorableSettings(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  if (!v16
    || (char v17 = [v16 activeDocumentCreationSession]) == 0
    || (char v18 = v17[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates],
        v17,
        (v18 & 1) == 0))
  {
    if ((objc_msgSend(v0, "doc_hasDisappearedOrIsDisappearing") & 1) == 0)
    {
      sub_100007068();
      if ((_BYTE)v20 != 0xFF)
      {
        int v21 = v20;
        uint64_t v63 = v15;
        id v64 = v19;
        if (qword_100704F60 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v22 = off_10070A180;
        if (!*((void *)off_10070A180 + 2))
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
          id v27 = v64;
LABEL_14:
          sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_100719850);
          swift_endAccess();
          sub_1000D4E9C(v27, v21);
          return;
        }
        double v62 = v5;
        id v23 = v64;
        id v60 = v64;
        int v61 = v21 & 1;
        unint64_t v24 = sub_10017BBE4(v23, v21 & 1);
        if (v25)
        {
          sub_10008BCB8(v22[7] + *(void *)(v13 + 72) * v24, (uint64_t)v11, type metadata accessor for RestorableSettings);
          id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
          v26(v11, 0, 1, v12);
        }
        else
        {
          id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
          v26(v11, 1, 1, v12);
        }
        id v27 = v64;
        sub_1000D4E9C(v64, v21);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
          goto LABEL_14;
        }
        sub_10021FEB8((uint64_t)v11, (uint64_t)v63, type metadata accessor for RestorableSettings);
        swift_endAccess();
        uint64_t v57 = static DOCLog.UI.getter();
        int v56 = static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_10059B760;
        uint64_t v55 = v26;
        char v29 = v61;
        uint64_t v30 = v27;
        unint64_t v31 = sub_1001B9200(v27, v61);
        uint64_t v58 = v2;
        uint64_t v33 = v32;
        *(void *)(v28 + 56) = &type metadata for String;
        unint64_t v34 = sub_100073F48();
        int v59 = v21;
        unint64_t v35 = v34;
        *(void *)(v28 + 64) = v34;
        *(void *)(v28 + 32) = v31;
        *(void *)(v28 + 40) = v33;
        aBlock = 0;
        unint64_t v70 = 0xE000000000000000;
        uint64_t v36 = (uint64_t)v63;
        _print_unlocked<A, B>(_:_:)();
        uint64_t v37 = aBlock;
        unint64_t v38 = v70;
        *(void *)(v28 + 96) = &type metadata for String;
        *(void *)(v28 + 104) = v35;
        *(void *)(v28 + 72) = v37;
        *(void *)(v28 + 80) = v38;
        dispatch_group_t v39 = (void *)v57;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        v55(v9, 1, 1, v12);
        swift_beginAccess();
        id v40 = v60;
        sub_1004F1DFC((uint64_t)v9, v30, v29);
        swift_endAccess();
        sub_1001CF214(v36, 1);
        uint64_t v41 = (uint64_t *)(v36 + *(int *)(v12 + 20));
        uint64_t v42 = v36;
        uint64_t v43 = *v41;
        uint64_t v44 = v41[1];
        uint64_t v45 = v41[2];
        uint64_t v46 = v41[3];
        sub_10021FF88(*v41, v44);
        sub_1001C502C(v43, v44, v45, v46);
        sub_100221018(v43, v44);
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        unsigned int v47 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = v1;
        uint64_t v73 = sub_10022105C;
        uint64_t v74 = v48;
        aBlock = _NSConcreteStackBlock;
        unint64_t v70 = 1107296256;
        int v71 = sub_1000666D8;
        uint64_t v72 = &unk_1006982E8;
        Swift::String v49 = _Block_copy(&aBlock);
        id v50 = v1;
        swift_release();
        Swift::Int v51 = v62;
        static DispatchQoS.unspecified.getter();
        aBlock = (void **)_swiftEmptyArrayStorage;
        sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        Swift::Int v52 = v66;
        uint64_t v53 = v58;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v49);

        sub_1000D4E9C(v64, v59);
        (*(void (**)(char *, uint64_t))(v68 + 8))(v52, v53);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v51, v67);
        sub_10008BBF0(v42, type metadata accessor for RestorableSettings);
      }
    }
  }
}

uint64_t sub_10001BBA4()
{
  uint64_t v1 = v0;
  if (![*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) isFilesApp])goto LABEL_11; {
  id v2 = [self showTips];
  }
  unsigned int v3 = [v2 isEnabled];

  if (!v3) {
    goto LABEL_11;
  }
  DOCItemCollectionViewController.getCurrentLocation()();
  uint64_t v5 = v4;
  id v6 = [self sharedItemsLocation];
  uint64_t v7 = v6;
  if (v5)
  {
    if (v6)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      id v8 = v5;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9) {
        goto LABEL_9;
      }
    }
    else
    {
    }
LABEL_11:
    char v10 = 1;
    return v10 & 1;
  }
  if (v6)
  {

    goto LABEL_11;
  }
LABEL_9:
  char v10 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable) ^ 1;
  return v10 & 1;
}

id sub_10001BCE0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = objc_allocWithZone((Class)type metadata accessor for DOCCollectionViewCompositionalLayout());
    v11[4] = sub_1000D5E48;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1000148B8;
    v11[3] = &unk_100698450;
    id v6 = _Block_copy(v11);
    swift_retain();
    id v7 = [v5 initWithSectionProvider:v6];
    _Block_release(v6);
    swift_release();
    swift_release();
    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_10001BF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1000D729C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006A73A0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

id sub_10001C250(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView__dragInteraction] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  type metadata accessor for DOCFocusableCollectionViewState();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  uint64_t v8 = type metadata accessor for IndexPath();
  id v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, 1, 1, v8);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) = 0;
  *(void *)&v2[v5] = v6;
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_backgroundTapGestureRecognizer;
  id v11 = objc_allocWithZone((Class)UITapGestureRecognizer);
  uint64_t v12 = v2;
  *(void *)&v2[v10] = [v11 init];
  swift_unknownObjectWeakInit();
  v12[OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files21DOCItemCollectionView_configuration] = a1;
  id v13 = a1;

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  id v14 = [super initWithFrame:a2 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  sub_100013958();

  return v14;
}

uint64_t sub_10001C5E4(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  double v3[8] = v2;
  v3[6] = a1;
  uint64_t v5 = sub_1000CBE70(&qword_10070AB80);
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  sub_1000CBE70(&qword_10070AB98);
  v3[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Tips.Status();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v3[16] = v7;
  v3[17] = v9;
  return _swift_task_switch(sub_100014A8C, v7, v9);
}

void sub_10001C774()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.event.getter();
  updated = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = (objc_class *)type metadata accessor for DRIMainViewController();
  v11.receiver = v1;
  v11.super_class = v7;
  [super viewDidLoad];
  [v1 setAllowsDocumentCreation:0];
  [v1 setDelegate:v1];
  v10[1] = v1;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentLocationTitleObserver];
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentLocationTitleObserver] = v8;
}

void sub_10001C980()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration];
  id v25 = [v6 hostIdentifier];
  if (!v25)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v12)
    {
      swift_bridgeObjectRelease();
      id v13 = v25;
    }
    else
    {
      id v14 = [self defaultSourceIdentifierForBundleIdentifier:v25];

      static Logger.UI.getter();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v15, v16))
      {
        char v17 = (uint8_t *)swift_slowAlloc();
        id v25 = v14;
        *(_WORD *)char v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Default Source UI]: Updating Alert State", v17, 2u);
        id v14 = v25;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v18 = (void *)swift_allocObject();
      void v18[2] = v1;
      v18[3] = v14;
      v18[4] = v7;
      v18[5] = v9;
      uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver];
      int v20 = v1;
      id v21 = v14;
      [v19 startObservingSources];
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_1003FEFD8;
      *(void *)(v22 + 24) = v18;
      aBlock[4] = sub_1003175F0;
      aBlock[5] = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000704F8;
      aBlock[3] = &unk_1006A9F58;
      id v23 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v19 retrieveSourcesForConfiguration:v6 usingBlock:v23];
      _Block_release(v23);

      swift_release();
    }
  }
}

uint64_t sub_10001CD14(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  objc_super v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v4 + OBJC_IVAR____TtC5Files22DOCHierarchyController_lastVisitedLocationSavingQueue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  *(unsigned char *)(v16 + 48) = a4;
  aBlock[4] = sub_1000D76A4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_100699C70;
  char v17 = _Block_copy(aBlock);
  id v18 = a3;
  swift_retain();
  id v19 = a1;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
  return swift_release();
}

void sub_10001D034(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  static os_log_type_t.info.getter();
  sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
  uint64_t v10 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:type:_:)();

  NSString v11 = [a1 hostIdentifier];
  if (!v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = self;
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a4;
  v13[3] = a5;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v18[4] = sub_1000D7738;
  v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  void v18[2] = sub_10000CAE4;
  v18[3] = &unk_100698D20;
  id v14 = _Block_copy(v18);
  id v15 = a3;
  swift_retain();
  id v16 = a2;
  id v17 = a1;
  swift_release();
  [v12 defaultSourceForBundleIdentifier:v11 completionBlock:v14];
  _Block_release(v14);
}

void sub_10001D548()
{
  if ([v0 isViewLoaded])
  {
    [v0 loadViewIfNeeded];
    uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v2)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    [v2 visibleBounds];
    if (!CGRectIsEmpty(v35))
    {
      [v0 loadViewIfNeeded];
      uint64_t v13 = *(void **)&v0[v1];
      if (!v13)
      {
LABEL_43:
        __break(1u);
        return;
      }
      [v13 visibleSize];
      double v4 = v14;
      double v12 = v15;
      if (v14 == 0.0) {
        goto LABEL_27;
      }
LABEL_26:
      if (v12 != 0.0) {
        goto LABEL_31;
      }
      goto LABEL_27;
    }
  }
  uint64_t v3 = (double *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize];
  if ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize + 16] & 1) == 0)
  {
    double v4 = *v3;
    double v12 = v3[1];
    if (*v3 != 0.0) {
      goto LABEL_26;
    }
    goto LABEL_27;
  }
  double v4 = 0.0;
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager]) {
    goto LABEL_23;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_23;
  }
  uint64_t v6 = Strong;
  id v7 = [Strong viewIfLoaded];
  if (v7)
  {
    uint64_t v8 = v7;
    [v7 bounds];
    if (!CGRectIsEmpty(v36))
    {
      [v8 frame];
      double v4 = v16;
      double v12 = v17;
      goto LABEL_25;
    }
  }
  id v9 = [v6 parentViewController];
  if (!v9)
  {
LABEL_22:

LABEL_23:
    double v12 = 0.0;
    goto LABEL_27;
  }
  uint64_t v8 = v9;
  id v10 = [v9 viewIfLoaded];
  if (!v10)
  {
    NSString v11 = v8;
    goto LABEL_21;
  }
  NSString v11 = v10;
  [v10 bounds];
  if (CGRectIsEmpty(v37))
  {

LABEL_21:
    goto LABEL_22;
  }
  [v11 frame];
  double v4 = v18;
  double v12 = v19;

LABEL_25:
  if (v4 != 0.0) {
    goto LABEL_26;
  }
LABEL_27:
  id v20 = [self anyWindowPreferingKeyWindow];
  if (v20)
  {
    uint64_t v21 = v20;
    [v20 bounds];
    if (!CGRectIsEmpty(v38))
    {
      [v21 frame];
      double v4 = v22;
      double v12 = v23;
    }
  }
LABEL_31:
  if (v4 != 0.0 && v12 != 0.0) {
    return;
  }
  uint64_t v24 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10059B7A0;
  *(void *)(v25 + 56) = &type metadata for CGFloat;
  unint64_t v26 = sub_10021FD50();
  *(void *)(v25 + 64) = v26;
  *(double *)(v25 + 32) = v4;
  *(void *)(v25 + 96) = &type metadata for CGFloat;
  *(void *)(v25 + 104) = v26;
  *(double *)(v25 + 72) = v12;
  *(void *)(v25 + 136) = type metadata accessor for DOCItemCollectionViewController(0);
  *(void *)(v25 + 144) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
  *(void *)(v25 + 112) = v0;
  id v27 = v0;
  id v28 = [v27 parentViewController];
  if (v28)
  {
    id v29 = v28;
    uint64_t v33 = sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    uint64_t v34 = sub_1000C5A24((unint64_t *)&unk_10070AD88, (unint64_t *)&qword_100707710);
    *(void *)&long long v32 = v29;
    sub_1001146DC(&v32, v25 + 152);
  }
  else
  {
    *(void *)(v25 + 176) = &type metadata for String;
    *(void *)(v25 + 184) = sub_100073F48();
    *(void *)(v25 + 152) = 0x296C6C756E28;
    *(void *)(v25 + 160) = 0xE600000000000000;
  }
  uint64_t v30 = *(unsigned char **)&v27[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v30) {
    goto LABEL_42;
  }
  if ((v30[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0) {
    uint64_t v30 = *(unsigned char **)&v30[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  }
  unint64_t v31 = v30;
  *(void *)(v25 + 216) = sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  *(void *)(v25 + 224) = sub_1000C5A24((unint64_t *)&unk_1007069B0, (unint64_t *)&qword_100706710);
  *(void *)(v25 + 192) = v31;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
}

uint64_t sub_10001D9AC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  static Logger.AppIntents.getter();
  double v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    double v14 = (_DWORD *)swift_slowAlloc();
    uint64_t v22 = v7;
    double v15 = v14;
    *double v14 = 134218496;
    uint64_t v16 = 500;
    if (v11 < 500) {
      uint64_t v16 = v11;
    }
    uint64_t v23 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v15 + 6) = 2048;
    uint64_t v23 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v15 + 11) = 2048;
    uint64_t v23 = 500;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Donating %ld out of %ld visible items to Siri Vocabulary (corpus capacity: %ld.", (uint8_t *)v15, 0x20u);
    uint64_t v7 = v22;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  id v18 = v2;
  uint64_t v19 = static MainActor.shared.getter();
  id v20 = (void *)swift_allocObject();
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v18;
  v20[5] = a1;
  v20[6] = 500;
  sub_10003D154((uint64_t)v6, (uint64_t)&unk_10071D280, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_10001DCB4(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_10001DD08(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v28 = a5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  double v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  int v14 = v13;
  BOOL v15 = os_log_type_enabled(v12, v13);
  int v29 = a1;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v8;
    uint64_t v17 = v16;
    uint64_t v26 = swift_slowAlloc();
    v31[0] = v26;
    *(_DWORD *)uint64_t v17 = 136315906;
    HIDWORD(v25) = v14;
    uint64_t Strong = sub_10009B0E4(a4, v28, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 1024;
    LODWORD(Strong) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 18) = 2080;
    uint64_t Strong = a2;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t Strong = sub_10009B0E4(v18, v19, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v17 + 28) = 2080;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    sub_1000CBE70(&qword_100717510);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t Strong = sub_10009B0E4(v20, v21, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, BYTE4(v25), "[PROTECTED APPS] %s authenticateLocationWithNoUI success: %{BOOL}d error: %s viewController: %s", (uint8_t *)v17, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v27);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess();
  uint64_t v22 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (v22)
  {
    v22[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = v29 & 1;
  }
  swift_beginAccess();
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    sub_1000B0690();
  }
}

void sub_10001E0B8()
{
  uint64_t v1 = v0;
  if ([v0 isActivated]) {
    return;
  }
  [v0 setIsActivated:1];
  id v2 = [v0 internalNavigationController];
  id v3 = [v2 viewControllers];

  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_4:
      if (v5 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v4 + 8 * i + 32);
        }
        uint64_t v8 = v7;
        type metadata accessor for DOCBrowserContainerController();
        uint64_t v9 = swift_dynamicCastClass();
        if (v9)
        {
          uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(1, ObjectType, v10);
        }
      }
    }
  }
  swift_bridgeObjectRelease();

  [v1 setNeedsFocusUpdate];
}

uint64_t sub_10001E2A8()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [v0 configuration];
  id v6 = [v5 sceneIdentifier];

  id v7 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v6);
  uint64_t v8 = (void **)&v7[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  uint64_t v9 = *v8;
  *uint64_t v8 = 0;
  sub_1000D7C50(v9);

  static Logger.UI.getter();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    double v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Interaction] Clearing last opened item in 'clearLastOpenedItem' (lifeCycle of DOCFullDMVC)", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_10001E474()
{
  uint64_t v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 valueForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10006273C((uint64_t)v12);
    id v4 = [v0 standardUserDefaults];
    NSString v5 = String._bridgeToObjectiveC()();
    unsigned __int8 v6 = [v4 BOOLForKey:v5];

    if ((v6 & 1) == 0) {
      return;
    }
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    sub_10006273C((uint64_t)v12);
  }
  id v7 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithSuiteName:v8];

  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_1007141F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10059B760;
    *(void *)(inited + 32) = 0xD000000000000013;
    *(void *)(inited + 40) = 0x80000001005D2980;
    *(void *)(inited + 72) = &type metadata for Bool;
    *(void *)(inited + 80) = 0xD000000000000015;
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 88) = 0x80000001005D29A0;
    *(void *)(inited + 120) = &type metadata for Bool;
    *(unsigned char *)(inited + 96) = 1;
    sub_100042C20(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 registerDefaults:isa];
  }
}

void sub_10001E6D0(void *a1, void (*a2)(void))
{
  if (a1)
  {
    id v3 = a1;
    id v4 = [v3 identifier];
    id v5 = [v3 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v6 = objc_allocWithZone((Class)DOCConcreteLocation);
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = [v6 initWithSourceIdentifier:v4 title:v7];

    [v8 setIsFPV2:1];
    id v9 = v8;
    ((void (*)(id))a2)(v8);
  }
  else
  {
    a2();
  }
}

uint64_t sub_10001E81C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_10001E85C()
{
  id v1 = v0;
  NSString v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  uint64_t v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate;
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = *(void *)v2;
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRelease();
  if (*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    unint64_t v5 = sub_10007CC5C(v4);
    DOCItemCollectionViewController.items.setter(v5);
    *(void *)&v1[v3] = 0;
    swift_bridgeObjectRelease();
    id v6 = [v1 viewIfLoaded];
    if (v6)
    {
      NSString v7 = v6;
      sub_100080930(2);
      id v8 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
      if (v8)
      {
        id v9 = v8;
        [v9 setHidesBackButton:[v1 hidesNavigationBackButton]];
      }
      uint64_t v10 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      os_log_type_t v11 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView];
      if (v11)
      {
        double v12 = 0.0;
        if (*(void *)v10 == 2) {
          double v12 = 16.0;
        }
        [v11 setDirectionalLayoutMargins:v12, 0.0, 16.0, 0.0];
      }
      [v7 setNeedsLayout];
      v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      id v13 = [v1 viewIfLoaded];
      id v14 = [v13 window];

      if (v14) {
        sub_1000A6988();
      }
      BOOL v15 = *(char **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
      if (v15)
      {
        uint64_t v16 = *(void *)v10;
        uint64_t v17 = *(void *)&v15[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode];
        *(void *)&v15[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode] = *(void *)v10;
        if (v17 != v16)
        {
          uint64_t v18 = qword_100704F00;
          unint64_t v19 = v15;
          if (v18 != -1) {
            swift_once();
          }
          double v20 = *(double *)&xmmword_100709CB0;
          if (!v16) {
            double v20 = 0.0;
          }
          [v19 setDirectionalLayoutMargins:v20, *((double *)&xmmword_100709CB0 + 1), *(double *)&qword_100709CC0, *(double *)&qword_100709CC8];
          sub_1001AEFEC();
          sub_1001AF0FC();
        }
      }
      if (*(void *)v10 == 2)
      {
        unint64_t v21 = sub_10003B6F8(0);
        sub_10003A61C((unint64_t)v21, 0, 0);
        swift_bridgeObjectRelease();
      }
      [v1 _setNeedsUpdateOfMultitaskingDragExclusionRects];
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10001EB10()
{
  uint64_t v1 = v0 + 96;
  swift_beginAccess();
  sub_1000CBC00(v0 + 96, (uint64_t)aBlock, (uint64_t *)&unk_100705D60);
  NSString v2 = ObjectType;
  uint64_t result = sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_100705D60);
  if (!v2)
  {
    id v4 = [self defaultCenter];
    uint64_t v5 = *(void *)(v0 + 88);
    id v6 = [self mainQueue];
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    id v13 = sub_10047E3F8;
    uint64_t v14 = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10047D590;
    uint64_t ObjectType = &unk_1006AE898;
    id v8 = _Block_copy(aBlock);
    swift_release();
    id v9 = [v4 addObserverForName:v5 object:0 queue:v6 usingBlock:v8];
    _Block_release(v8);

    uint64_t ObjectType = (void *)swift_getObjectType();
    aBlock[0] = v9;
    sub_1000516C4((uint64_t)aBlock, (uint64_t)v10);
    swift_beginAccess();
    sub_1000D225C((uint64_t)v10, v1);
    return swift_endAccess();
  }
  return result;
}

void sub_10001ECEC()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v31 = (uint64_t)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v7)
  {
    id v30 = v7;
    if (sub_10008BD6C() & 1) != 0 || (sub_10001F094())
    {
      if (qword_100704F68 != -1) {
        swift_once();
      }
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v30 indexPathsForVisibleSupplementaryElementsOfKind:v8];

      uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        v24[1] = v10;
        v24[2] = v0;
        id v13 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
        uint64_t v12 = v2 + 16;
        unint64_t v14 = v10 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
        uint64_t v15 = *(void *)(v12 + 56);
        uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
        unint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
        int v29 = v13;
        uint64_t v26 = (void (**)(uint64_t, char *, uint64_t))(v12 + 16);
        uint64_t v27 = v15;
        uint64_t v25 = (void (**)(uint64_t, uint64_t))(v12 - 8);
        v24[0] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        v13(v6, v14, v1);
        while (1)
        {
          uint64_t v17 = *v16;
          (*v16)(v6, 0, 1, v1);
          if ((*v28)(v6, 1, v1) == 1) {
            break;
          }
          uint64_t v18 = v12;
          (*v26)(v31, v6, v1);
          NSString v19 = String._bridgeToObjectiveC()();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v21 = [v30 supplementaryViewForElementKind:v19 atIndexPath:isa v24[0]];

          if (v21)
          {
            type metadata accessor for DOCItemCollectionViewSectionHeader();
            uint64_t v22 = (char *)swift_dynamicCastClass();
            if (v22) {
              sub_1001BFC7C(v22, v31);
            }
          }
          (*v25)(v31, v1);
          v14 += v27;
          --v11;
          uint64_t v12 = v18;
          if (!v11)
          {
            v17(v6, 1, 1, v1);
            break;
          }
          v29(v6, v14, v1);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v6, 1, 1, v1);
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      id v23 = v30;
    }
  }
}

uint64_t sub_10001F094()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  unint64_t v3 = *((void *)v2 + 1);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 != 1)
    {
LABEL_12:
      char v8 = 1;
      if (!DOCDeviceIsPad()) {
        goto LABEL_16;
      }
      goto LABEL_13;
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    goto LABEL_12;
  }
  unint64_t v4 = *((void *)v2 + 1);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_5:
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_getObjectType();
    Swift::Bool Document = DOCNode.isCreateDocumentSentinel()();
    swift_unknownObjectRelease();
    char v8 = !Document;
    if (!DOCDeviceIsPad()) {
      goto LABEL_16;
    }
LABEL_13:
    uint64_t v10 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v10 == 1 && sub_1001BC5C8())
    {
      id v11 = [v1 traitCollection];
      id v12 = [v11 preferredContentSizeCategory];

      LOBYTE(v11) = UIContentSizeCategory.isAccessibilityCategory.getter();
      char v13 = (v11 ^ 1) & v8;
      return v13 & 1;
    }
LABEL_16:
    char v13 = 0;
    return v13 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001F270()
{
  uint64_t v0 = sub_1000CBE70(&qword_100716DA0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.UsesConstellation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100716DA8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.UsesConstellation.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  uint64_t v16 = &protocol witness table for Tips.UsesConstellation;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  uint64_t v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

id sub_10001F50C(void *a1, void *a2)
{
  id v4 = [self dsEnumerationLocal];
  unsigned int v5 = [v4 isEnabled];

  if (!v5) {
    goto LABEL_14;
  }
  id v6 = [a2 sourceIdentifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_14;
    }
  }
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
LABEL_14:
    id v18 = [a2 sourceIdentifier];
    id v19 = [a1 presentationNode];
    id v20 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v18 node:v19];
    goto LABEL_15;
  }
  unint64_t v14 = (void *)v13;
  sub_10009E6C4(0, &qword_10070B678);
  id v15 = a1;
  uint64_t v16 = static FILocalStorageNode.sharedInstance(for:)();
  if (!v16)
  {
LABEL_13:

    goto LABEL_14;
  }
  uint64_t v17 = (void *)v16;
  sub_10009E6C4(0, &qword_10070B680);
  if (static NSObject.== infix(_:_:)())
  {

    id v15 = v17;
    goto LABEL_13;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v22 = [v17 storageNode];
  char v23 = static NSObject.== infix(_:_:)();

  if (v23)
  {
    id v24 = v17;
  }
  else
  {
    id v25 = [self sharedInstance];
    if (([v25 isPopulated] & 1) == 0) {
      [v25 synchronizeWithOptions:0 async:0];
    }
    id v26 = v15;
    id v24 = [v14 presentationNode];
  }
  id v18 = [a2 sourceIdentifier];
  id v19 = [v24 presentationNode];
  id v20 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v18 node:v19];

LABEL_15:
  return v20;
}

void sub_10001F838()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_favoritesSubscriber;
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_favoritesSubscriber))
  {
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v3 = self;
    swift_retain();
    id v4 = [v3 sharedManager];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1000D6E24;
    *(void *)(v5 + 24) = v2;
    v11[4] = sub_100045B40;
    v11[5] = v5;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100007C6C;
    v11[3] = &unk_10069D8C8;
    id v6 = _Block_copy(v11);
    swift_retain();
    swift_release();
    id v7 = [v4 addSubscriber:v6];
    _Block_release(v6);

    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;

    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v10 = Strong;
      sub_10004D4C0(3, (uint64_t)v10, (uint64_t)v10, sub_10004E940);
      swift_release_n();
    }
    else
    {
      swift_release_n();
    }
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.docUpdateContentUnavailableConfiguration(using:)(DOCContentUnavailableConfigurationState using)
{
  uint64_t v2 = v1;
  Class isa = using.super.super.isa;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v38 - v9;
  id v11 = 0;
  if ((sub_10001BBA4() & 1) == 0) {
    goto LABEL_26;
  }
  static Logger.UI.getter();
  id v11 = v1;
  char v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v40 = isa;
    uint64_t v14 = swift_slowAlloc();
    CGRect v38 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v45[0] = v39;
    *(_DWORD *)uint64_t v14 = 136315906;
    uint64_t v44 = sub_10009B0E4(0xD000000000000030, 0x80000001005DA280, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 1024;
    unsigned int v15 = [self protectedAppsEnabled];
    uint64_t v41 = v5;
    uint64_t v42 = v4;
    uint64_t v43 = v8;
    BOOL v16 = v15
       && v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
       && v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] != 1;
    LODWORD(v44) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 18) = 1024;
    LODWORD(v44) = v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 24) = 2112;
    uint64_t v44 = (uint64_t)v11;
    uint64_t v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *CGRect v38 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[PROTECTED APPS] %s shouldShowAppProtectionShieldUI: %{BOOL}d locationIsProtected: %{BOOL}d self: %@", (uint8_t *)v14, 0x22u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v42;
    id v18 = *(void (**)(char *, uint64_t))(v41 + 8);
    v18(v10, v42);
    uint64_t v8 = v43;
    Class isa = v40;
  }
  else
  {

    id v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v10, v4);
  }
  if ([self protectedAppsEnabled]
    && v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
    && (v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0)
  {
    id v22 = sub_1001B8850();
    if (v22) {
      goto LABEL_19;
    }
    static Logger.UI.getter();
    char v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v43 = v8;
      id v26 = (uint8_t *)v25;
      v45[0] = swift_slowAlloc();
      *(_DWORD *)id v26 = 136315138;
      Class isa = (Class)(v26 + 12);
      uint64_t v44 = sub_10009B0E4(0xD000000000000030, 0x80000001005DA280, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[PROTECTED APPS] %s could not get configuration for protected app", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v27 = v43;
    }
    else
    {

      uint64_t v27 = v8;
    }
    v18(v27, v4);
  }
  else
  {
    id v19 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    swift_beginAccess();
    unint64_t v20 = *((void *)v19 + 1);
    if (v20 >> 62) {
      goto LABEL_41;
    }
    if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
  }
LABEL_25:
  id v11 = 0;
  while (1)
  {
LABEL_26:
    [v2 doc_setContentUnavailableConfiguration:v11];
    id v28 = [v2 docContentUnavailableConfiguration];
    id v29 = v28;
    if (v28) {

    }
    unint64_t v30 = (unint64_t)sub_10000B7B8();
    unint64_t v31 = v30;
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      if (!v32) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v32) {
        goto LABEL_37;
      }
    }
    if (v32 >= 1) {
      break;
    }
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_25;
    }
LABEL_14:
    id v21 = *(void **)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v21)
    {
      __break(1u);
      return;
    }
    if ([v21 isGathering]) {
      goto LABEL_25;
    }
    id v22 = sub_1001B8224();
    if (!v22) {
      goto LABEL_25;
    }
LABEL_19:
    id v11 = (char *)[v22 updatedConfigurationForState:isa];
  }
  for (uint64_t i = 0; i != v32; ++i)
  {
    if ((v31 & 0xC000000000000001) != 0) {
      id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v34 = *(id *)(v31 + 8 * i + 32);
    }
    CGRect v35 = v34;
    [v34 setHidden:v29 != 0];
  }
LABEL_37:
  swift_bridgeObjectRelease_n();
  uint64_t v36 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v36) {
    *(unsigned char *)(v36 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI) = v29 != 0;
  }
}

uint64_t sub_100020114(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    unsigned int v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Obtaining default location...", v15, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v16 = [a1 hostIdentifier];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v23 = v27;
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v27;
    if ((v22 & 1) == 0 && ![a1 isPickerUI]) {
      return sub_100230898(a1, a2, a3, v23, a5);
    }
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = a5;
  swift_retain();
  sub_10001D034(a1, a2, a3, (uint64_t)sub_1000D76BC, v25);
  return swift_release();
}

id sub_100020388()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithSuiteName:v5];

  if (!v6)
  {
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_10:
    sub_1000CBBA4((uint64_t)&v24, (uint64_t *)&unk_100705D60);
    goto LABEL_11;
  }
  if ([v6 objectForKey:DOCTestUserDefaultsKeySelectedDisplayMode])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_1000516C4((uint64_t)v23, (uint64_t)&v24);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_10;
  }
  sub_10009E6C4(0, &qword_10070A280);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    uint64_t v7 = 0;
    goto LABEL_12;
  }
  uint64_t v7 = *(void **)&v23[0];
  id v8 = [*(id *)&v23[0] integerValue];
  if ((unint64_t)v8 < 3)
  {
    id v9 = v8;
    char v10 = 0;
    goto LABEL_13;
  }
LABEL_12:
  id v9 = 0;
  char v10 = 1;
LABEL_13:
  static Logger.StateStore.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    id v22 = v6;
    uint64_t v14 = v1;
    uint64_t v15 = v13;
    *(void *)&v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v21 = v0;
    *(void *)&long long v24 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005D7850, (uint64_t *)v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    *(void *)&long long v24 = v9;
    BYTE8(v24) = v10;
    sub_1000CBE70(&qword_100708770);
    uint64_t v16 = String.init<A>(describing:)();
    id v20 = v7;
    *(void *)&long long v24 = sub_10009B0E4(v16, v17, (uint64_t *)v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s stored PPT display mode override was: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v9;
}

void sub_100020748()
{
  uint64_t v1 = v0;
  id v2 = [v0 traitCollection];
  if (!DOCUsePadIdiomForTraits())
  {

LABEL_5:
    id v4 = [v1 splitViewController];
    if (v4)
    {
      NSString v5 = v4;
      self;
      id v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        id v7 = [v6 fullDocumentManagerViewController];

        if (v7)
        {
          id v8 = [v1 navigationItem];
          id v9 = [v8 title];

          if (!v9)
          {
LABEL_28:

            goto LABEL_33;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          char v10 = (char *)[v7 dataSource];
          uint64_t v11 = &v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers];
          swift_beginAccess();
          unint64_t v12 = *(void *)v11;
          swift_bridgeObjectRetain();

          if (!v12)
          {

            swift_bridgeObjectRelease();
            uint64_t v18 = 0;
            uint64_t v13 = 0;
            goto LABEL_32;
          }
          if (v12 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v13 = (char *)_CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v13) {
              goto LABEL_12;
            }
          }
          else
          {
            uint64_t v13 = *(char **)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v13)
            {
LABEL_12:
              if ((v12 & 0xC000000000000001) != 0)
              {
                uint64_t v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_41;
                }
                uint64_t v14 = (char *)*(id *)(v12 + 32);
              }
              uint64_t v13 = v14;
              swift_bridgeObjectRelease();
              uint64_t v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
              swift_beginAccess();
              uint64_t v16 = *v15;
              if (v16)
              {
                type metadata accessor for DOCItemCollectionViewController(0);
                uint64_t v17 = swift_dynamicCastClass();
                uint64_t v18 = (void *)v17;
                if (v17)
                {
                  uint64_t v19 = *(void **)(v17
                                 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
                  if (v19)
                  {
                    id v20 = v16;
                    id v21 = [v19 title];
                    if (v21)
                    {
                      id v22 = v21;
                      static String._unconditionallyBridgeFromObjectiveC(_:)();

                      sub_10009D28C();
                      char v23 = StringProtocol.contains<A>(_:)();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v23)
                      {
                        id v24 = (id)_DocumentManagerBundle();
                        if (v24)
                        {
                          long long v25 = v24;
                          v34._object = (void *)0x80000001005E2D20;
                          v26._Swift::Int countAndFlagsBits = 1801675074;
                          v26._object = (void *)0xE400000000000000;
                          v27._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
                          v27._object = (void *)0xEB00000000656C62;
                          v28._Swift::Int countAndFlagsBits = 0;
                          v28._object = (void *)0xE000000000000000;
                          v34._Swift::Int countAndFlagsBits = 0xD000000000000018;
                          object = DOCLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v34)._object;

                          goto LABEL_34;
                        }
LABEL_41:
                        __break(1u);
                        return;
                      }

                      goto LABEL_28;
                    }
                  }
                  else
                  {
                    id v30 = v16;
                  }
                }

                swift_bridgeObjectRelease();
LABEL_32:

                goto LABEL_33;
              }

LABEL_31:
              swift_bridgeObjectRelease();
              uint64_t v18 = 0;
              goto LABEL_32;
            }
          }

          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
      }
      else
      {
      }
    }
LABEL_33:
    object = 0;
LABEL_34:
    id v31 = [v1 navigationItem];
    if (!object)
    {
      id v32 = [v1 navigationItem];
      NSString v33 = [v32 title];

      if (!v33)
      {
LABEL_38:
        [v31 setBackButtonTitle:v33];

        return;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  id v3 = [v2 horizontalSizeClass];

  if (v3 != (id)2) {
    goto LABEL_5;
  }
}

uint64_t sub_100020BC0()
{
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005ABB70;
  static UTType.pdf.getter();
  static UTType.rtfd.getter();
  static UTType.flatRTFD.getter();
  static UTType.webArchive.getter();
  static UTType.text.getter();
  static UTType.image.getter();
  static UTType.audiovisualContent.getter();
  static UTType.playlist.getter();
  static UTType.spreadsheet.getter();
  static UTType.presentation.getter();
  static UTType.folder.getter();
  static UTType.docWatchface.getter();
  static UTType.docMSOfficeWordProcessing.getter();
  static UTType.docMSOfficeWordProcessingTemplate.getter();
  static UTType.docMSOfficeXMLWordProcessing.getter();
  static UTType.docOfficeOpenXMLWordProcessing.getter();
  static UTType.docOfficeOpenXMLMacroEnabledWordProcessing.getter();
  static UTType.docOfficeOpenXMLWordProcessingTemplate.getter();
  static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.getter();
  return v0;
}

uint64_t sub_100020D50(void *a1)
{
  return sub_100020D74(a1);
}

uint64_t sub_100020D74(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_100709598);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A6B78(a1, a1[3]);
  sub_100020F78();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v8 = self;
  uint64_t v9 = *(void *)(v2 + 16);
  v18[0] = 0;
  id v10 = [v8 archivedDataWithRootObject:v9 requiringSecureCoding:0 error:v18];
  id v11 = v18[0];
  if (v10)
  {
    unint64_t v12 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    v18[0] = v12;
    v18[1] = v14;
    sub_100020FCC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_100021020((uint64_t)v12, (unint64_t)v14);
  }
  else
  {
    uint64_t v16 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

unint64_t sub_100020F78()
{
  unint64_t result = qword_100709538;
  if (!qword_100709538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709538);
  }
  return result;
}

unint64_t sub_100020FCC()
{
  unint64_t result = qword_1007095A0;
  if (!qword_1007095A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007095A0);
  }
  return result;
}

uint64_t sub_100021020(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

id sub_100021078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  *((void *)v5 + 2) = a3;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DOCSymbolImageBarButtonItem();
  swift_bridgeObjectRetain();
  id v6 = [super init];
  id v7 = self;
  id v8 = v6;
  id v9 = [v7 configurationWithScale:a3];
  swift_bridgeObjectRetain();
  id v10 = v9;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self systemImageNamed:v11 withConfiguration:v10];
  swift_bridgeObjectRelease();

  [v8 setImage:v12];
  [v8 setStyle:0];

  return v8;
}

void sub_100021394()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v2 = (objc_class *)type metadata accessor for UIAppIntentInteraction();
  id v3 = objc_allocWithZone(v2);
  sub_1000D6960();
  swift_retain();
  uint64_t v4 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  id v5 = [v1 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v6 = v5;
  [v5 addInteraction:v4];
  swift_release();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = objc_allocWithZone(v2);
  sub_1000D1508();
  swift_retain();
  id v8 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  id v9 = [v1 view];
  if (!v9)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v10 = v9;
  [v9 addInteraction:v8];
  swift_release();
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  qword_100736DD8 = CFAbsoluteTimeGetCurrent();
  uint64_t v14 = static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  qword_100736DE0 = v14;
  if (DOCIsInternalBuild())
  {
    sub_10001E474();
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v10);
  uint64_t v16 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  aBlock[4] = j__StartFINode;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_10068B738;
  uint64_t v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  long long v25 = _swiftEmptyArrayStorage;
  sub_1000BAA5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  int v18 = static CommandLine.argc.getter();
  uint64_t v19 = (char **)static CommandLine.unsafeArgv.getter();
  type metadata accessor for AppDelegate();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v21 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v21)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v21 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  UIApplicationMain(v18, v19, 0, v21);

  return 0;
}

uint64_t sub_10002194C()
{
  sub_100021AA0();
  uint64_t v0 = self;
  id v1 = [v0 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v4, (uint64_t *)&unk_100705D60);
  sub_100021AA0();
  id v2 = [v0 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  return sub_1000CBBA4((uint64_t)&v4, (uint64_t *)&unk_100705D60);
}

uint64_t sub_100021AA0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController];
  }
  else
  {
    uint64_t v3 = v0;
    sub_1000CBE70(&qword_10070AEB8);
    swift_allocObject();
    long long v4 = v0;
    uint64_t v2 = NSNotification.SubscriptionsController.init(observee:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

BOOL sub_100021B28(char *a1, __int16 a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2) {
    return 0;
  }
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  BOOL v9 = v8 != 0;
  if (v8) {
    BOOL v10 = (a2 & 0x100) == 0;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    id v11 = [a1 splitViewController];
    if (v11)
    {
      uint64_t v12 = v11;
      [a1 enclosingTabSwitcherStyle];
      if (DOCTabSwitcherStyle.showsTabs.getter())
      {
        id v13 = [a1 traitCollection];
        __chkstk_darwin(v13);
        *(void *)&v23[-16] = v12;
        id v14 = (id)UITraitCollection.modifyingTraits(_:)();

LABEL_13:
        sub_100049A44(v14, 0.0, 0.0, 1, 0, 1, (uint64_t)v28);
        sub_1000CBE0C((uint64_t)v28, (uint64_t)v29, (uint64_t *)&unk_10070AE90);
        uint64_t v15 = v29[0];
        BOOL v9 = v29[0] != 0;
        static Logger.UI.getter();
        sub_100021F54((uint64_t)v28);
        sub_100021F54((uint64_t)v28);
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v16, v17))
        {
          BOOL v24 = v15 != 0;
          uint64_t v18 = swift_slowAlloc();
          uint64_t v19 = swift_slowAlloc();
          id v25 = v14;
          uint64_t v27 = v19;
          *(_DWORD *)uint64_t v18 = 136315650;
          v26[0] = sub_10009B0E4(0xD00000000000003DLL, 0x80000001005DD5D0, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v18 + 12) = 1024;
          LODWORD(v26[0]) = v24;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v18 + 18) = 2080;
          sub_1000CBE0C((uint64_t)v28, (uint64_t)v26, (uint64_t *)&unk_10070AE90);
          sub_100021F54((uint64_t)v28);
          sub_1000CBE70((uint64_t *)&unk_10070AE90);
          uint64_t v20 = String.init<A>(describing:)();
          v26[0] = sub_10009B0E4(v20, v21, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1000222F8((uint64_t)v28);
          sub_1000222F8((uint64_t)v28);
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s shouldInvalidate: %{BOOL}d neededLayoutInfo: %s", (uint8_t *)v18, 0x1Cu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1000222F8((uint64_t)v28);
        }
        else
        {
          sub_1000222F8((uint64_t)v28);
          sub_1000222F8((uint64_t)v28);
          sub_1000222F8((uint64_t)v28);
        }
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
        return v9;
      }
    }
    id v14 = [a1 traitCollection];
    goto LABEL_13;
  }
  return v9;
}

uint64_t sub_100021F54(uint64_t a1)
{
  return a1;
}

uint64_t sub_100021F80(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  sub_100049A44(a1, *(double *)&a2, *(double *)&a3, a4 & 1, a5, 0, (uint64_t)v44);
  sub_1000CBE0C((uint64_t)v44, (uint64_t)v45, (uint64_t *)&unk_10070AE90);
  uint64_t v7 = v45[0];
  if (v45[0])
  {
    double v8 = *(double *)&v45[2];
    double v9 = *(double *)&v45[3];
    double v10 = *(double *)&v45[4];
    double v11 = *(double *)&v45[5];
    double v12 = *(double *)&v45[6];
    v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 0;
    v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = 0;
    *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = v7;
    swift_retain_n();
    swift_release();
    v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 1;
    sub_100012D80();
    sub_10007D124();
    id v13 = (char *)sub_10001BCE0();
    sub_100029F88(v13, v8, v9, v10, v11, v12);

    sub_100036570();
    char v15 = v14;
    if ((a5 & 1) != 0 || (sub_10008BD6C() & 1) != 0 || (sub_10001F094())
      && (sub_10008BD6C() & 1) != 0
      && *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView])
    {
      unint64_t v16 = (unint64_t)sub_10001A904();
      unint64_t v17 = v16;
      char v37 = v15;
      if (v16 >> 62) {
        goto LABEL_30;
      }
      for (uint64_t i = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
      {
        uint64_t v41 = (void **)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
        unint64_t v42 = v17 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v19 = 4;
        uint64_t v38 = i;
        unint64_t v39 = v17;
        id v40 = v5;
        while (1)
        {
          uint64_t v20 = v19 - 4;
          if (!v42) {
            break;
          }
          unint64_t v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v22 = v19 - 3;
          if (__OFADD__(v20, 1)) {
            goto LABEL_27;
          }
LABEL_15:
          uint64_t v23 = (uint64_t *)&v21[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
          uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                              + 8];
          if (!v24)
          {

            goto LABEL_24;
          }
          uint64_t v43 = v22;
          uint64_t v5 = v21;
          uint64_t v25 = *v23;
          uint64_t v26 = (uint64_t)*v41;
          unint64_t v27 = sub_10020872C(*v23, v24, *v41);
          if (v28)
          {
            sub_100208814(v25, v24);

            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v5 = v40;
            goto LABEL_24;
          }
          if ((v27 & 0x8000000000000000) != 0) {
            goto LABEL_28;
          }
          if (v27 >= *(void *)(v26 + 16)) {
            goto LABEL_29;
          }
          id v29 = (void *)(v26 + 40 * v27);
          uint64_t v30 = v29[5];
          uint64_t v31 = v29[6];
          uint64_t v32 = v29[7];
          uint64_t v33 = v29[8];
          v46[0] = v29[4];
          v46[1] = v30;
          v46[2] = v31;
          v46[3] = v32;
          v46[4] = v33;
          sub_100208814(v25, v24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          Swift::String v34 = v5;
          CGRect v35 = v5;
          uint64_t v5 = v40;
          sub_1001DE428(v35, v46);
          unint64_t v17 = v39;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v19;
          if (v43 == v38) {
            goto LABEL_24;
          }
        }
        unint64_t v21 = (char *)*(id *)(v17 + 8 * v19);
        uint64_t v22 = v19 - 3;
        if (!__OFADD__(v20, 1)) {
          goto LABEL_15;
        }
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        ;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      char v15 = v37;
    }
    [v5 _setNeedsUpdateOfMultitaskingDragExclusionRects];
    sub_1000222F8((uint64_t)v44);
    sub_1000222F8((uint64_t)v44);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1000222F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000224A0(uint64_t a1, void (*a2)(unsigned char *))
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000CBE70(&qword_10070E838);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  double v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  char v14 = &v25[-v13];
  __chkstk_darwin(v12);
  unint64_t v16 = &v25[-v15];
  sub_1000CBC00(a1, (uint64_t)&v25[-v15], &qword_10070E838);
  sub_1000CBC00((uint64_t)v16, (uint64_t)v14, &qword_10070E838);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v14, &qword_10070E838);
  }
  else
  {
    sub_1000BC744((uint64_t)v14, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    a2(v7);
    sub_1000A5770((uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    sub_1000CBBA4((uint64_t)v16, &qword_10070E838);
    sub_1000CBE0C((uint64_t)v11, (uint64_t)v16, &qword_10070E838);
  }
  uint64_t v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v18 = *(int *)(v17 + 20);
  swift_retain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_100022774(v19, (void (*)(void))a2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = *(int *)(v17 + 24);
  swift_retain();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_100022774(v22, (void (*)(void))a2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A5770(a1, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  uint64_t result = sub_1000CBE0C((uint64_t)v16, a1, &qword_10070E838);
  *(void *)(a1 + v18) = v20;
  *(void *)(a1 + v21) = v23;
  return result;
}

void *sub_100022774(uint64_t a1, void (*a2)(void))
{
  uint64_t v5 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v8 = __chkstk_darwin(v27);
  uint64_t v26 = (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v25 = (uint64_t)v22 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22[1] = v2;
  unint64_t v23 = v13;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v10 + 72);
  unint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v22[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v24 = a2;
  do
  {
    a2(v14);
    if ((*v16)(v7, 1, v27) == 1)
    {
      sub_1000CBBA4((uint64_t)v7, &qword_10070E838);
    }
    else
    {
      uint64_t v18 = v25;
      sub_1000BC744((uint64_t)v7, v25, type metadata accessor for DOCBrowserHistoryItem);
      sub_1000BC744(v18, v26, type metadata accessor for DOCBrowserHistoryItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = (void *)sub_1000B7F44(0, v17[2] + 1, 1, (unint64_t)v17);
      }
      unint64_t v20 = v17[2];
      unint64_t v19 = v17[3];
      if (v20 >= v19 >> 1) {
        uint64_t v17 = (void *)sub_1000B7F44(v19 > 1, v20 + 1, 1, (unint64_t)v17);
      }
      void v17[2] = v20 + 1;
      sub_1000BC744(v26, (uint64_t)v17 + v23 + v20 * v15, type metadata accessor for DOCBrowserHistoryItem);
      a2 = v24;
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for DOCBrowserContainerController.DOCBrowserContainerControllerView()
{
  return self;
}

uint64_t sub_100022BAC()
{
  uint64_t v0 = sub_1000CBE70(&qword_10070AB30);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.Rule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100705218 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10009D098(v0, (uint64_t)qword_100716CB8);
  swift_beginAccess();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v9(v3, v8, v0);
  Tips.Rule.init<A>(_:_:)();
  uint64_t v15 = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if (qword_100705220 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10009D098(v0, (uint64_t)qword_100716CD0);
  swift_beginAccess();
  v9(v3, v11, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v10(v7, v4);
  if (qword_100705228 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10009D098(v0, (uint64_t)qword_100716CE8);
  swift_beginAccess();
  v9(v3, v12, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v10(v7, v4);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

void sub_100022FA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = _swiftEmptyArrayStorage;
  uint64_t v10 = *(NSObject **)(v2 + 32);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v2;
  v11[3] = a1;
  v11[4] = v9 + 16;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000D70E8;
  *(void *)(v12 + 24) = v11;
  uint64_t v32 = sub_100162A48;
  uint64_t v33 = (void *)v12;
  aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100087990;
  uint64_t v31 = &unk_1006A9580;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v14 = *(void *)(*(void *)(v9 + 16) + 16);
  sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
  uint64_t v15 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.debug.getter();
  if (v14)
  {
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    uint64_t v17 = *(void *)(*(void *)(v9 + 16) + 16);
    *(void *)(v16 + 56) = &type metadata for Int;
    *(void *)(v16 + 64) = &protocol witness table for Int;
    *(void *)(v16 + 32) = v17;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = &_swiftEmptyDictionarySingleton;
    id v18 = [self sharedGenerator];
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    unint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = v9;
    v20[4] = a1;
    v20[5] = v15;
    uint64_t v32 = sub_1003F1D1C;
    uint64_t v33 = v20;
    dispatch_queue_t v27 = v10;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_1000666D8;
    uint64_t v31 = &unk_1006A95F8;
    uint64_t v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v18 performInBatch:v21];
    _Block_release(v21);

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v2;
    *(void *)(v22 + 24) = v15 + 2;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_1003F1D28;
    *(void *)(v23 + 24) = v22;
    uint64_t v32 = sub_100162A48;
    uint64_t v33 = (void *)v23;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_100087990;
    uint64_t v31 = &unk_1006A9670;
    uint64_t v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v27, v24);
    _Block_release(v24);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  os_log(_:dso:log:type:_:)();
  swift_release();
  swift_release();
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super viewDidAppear:a1];
  [v2 loadViewIfNeeded];
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    id v6 = v4;
    NSString v7 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration();
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v6 setFocusGroupIdentifier:v7];

    if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
      && *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
    {
      swift_retain();
      sub_100423564();
      swift_release();
    }
    if (v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1) {
      sub_1003395FC();
    }
    char v8 = self;
    id v9 = [v5 sceneIdentifier];
    id v10 = [v8 globalTabbedBrowserControllerForIdentifier:v9];

    if (v10)
    {
      id v11 = [v10 effectiveFullBrowser];

      [v11 establishFirstResponderIfNeeded];
    }
    if (qword_100704E80 != -1) {
      swift_once();
    }
    swift_retain();
    id v12 = [v2 view];
    if (v12)
    {
      uint64_t v13 = v12;
      type metadata accessor for FilesEntityProvider();
      sub_100078438(&qword_10070A2A8, (void (*)(uint64_t))type metadata accessor for FilesEntityProvider);
      UIView.setEntityProvider<A>(_:)();
      swift_release();

      [*(id *)(qword_100736E60 + 16) addObject:v2];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100023AC0(unint64_t a1, unint64_t a2, id a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v13 = [a3 identifier];
  objc_super v14 = sub_100016908(a1);

  uint64_t v86 = a5;
  uint64_t v87 = v13;
  uint64_t v85 = a4;
  if (v14)
  {
    uint64_t v15 = type metadata accessor for DOCFileProviderSource(0);
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      unint64_t v83 = v14;
      uint64_t v17 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
      v84 = (char *)v16;
      id v18 = *(void **)(v16 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      uint64_t v82 = (void *)v15;
      if (v18)
      {
        unsigned int v19 = [v18 needsAuthentication];
        unsigned int v20 = [v18 isiCloudDriveProvider];
      }
      else
      {
        unsigned int v20 = 0;
        unsigned int v19 = 0;
      }
      id v43 = [self defaultManager];
      id v44 = [v43 ubiquityIdentityToken];
      swift_unknownObjectRelease();

      if ([a6 isPickerUI])
      {
        if (!a7) {
          goto LABEL_36;
        }
        if (*(void *)(a7 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove)
          && (uint64_t v45 = *(void **)&v84[v17]) != 0)
        {
          uint64_t v46 = self;
          id v47 = v45;
          unsigned int v48 = v20;
          id v49 = [v46 defaultPermission];
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          v50.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          unsigned int v51 = [v49 canItems:v50.super.isa performAction:1 fileProviderDomain:v47];

          unsigned int v20 = v48;
        }
        else
        {
          if (!*(void *)(a7 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave)) {
            goto LABEL_36;
          }
          Swift::Int v52 = *(void **)&v84[v17];
          if (!v52) {
            goto LABEL_36;
          }
          uint64_t v53 = self;
          id v47 = v52;
          v50.super.Class isa = (Class)[v53 defaultPermission];
          unsigned int v51 = [(objc_class *)v50.super.isa canHostAppPerformAction:1 fileProviderDomain:v47];
        }

        if ((v19 | v51 ^ 1)) {
          goto LABEL_36;
        }
      }
      else if (v19)
      {
        goto LABEL_36;
      }
      if (v44) {
        unsigned int v54 = 0;
      }
      else {
        unsigned int v54 = v20;
      }
      if (v54 != 1) {
        goto LABEL_54;
      }
LABEL_36:
      if (!(a1 >> 62))
      {
        uint64_t v55 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v55) {
          goto LABEL_38;
        }
LABEL_49:
        swift_bridgeObjectRelease();
LABEL_54:
        double v79 = (void *)swift_allocObject();
        v79[2] = v85;
        v79[3] = v86;
        v79[4] = v84;
        v93 = sub_1000D7704;
        uint64_t v94 = v79;
        aBlock = _NSConcreteStackBlock;
        uint64_t v90 = 1107296256;
        uint64_t v91 = sub_1000666D8;
        long long v92 = &unk_100698E60;
        v80 = _Block_copy(&aBlock);
        id v81 = v83;
        swift_retain();
        swift_release();
        DOCRunInMainThread();

        _Block_release(v80);
        return;
      }
LABEL_58:
      swift_bridgeObjectRetain();
      uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
      if (v55)
      {
LABEL_38:
        a2 = a1 & 0xC000000000000001;
        uint64_t v56 = 4;
        while (1)
        {
          if (a2) {
            id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v57 = *(id *)(a1 + 8 * v56);
          }
          uint64_t v58 = v57;
          uint64_t v59 = v56 - 3;
          if (__OFADD__(v56 - 4, 1))
          {
            __break(1u);
            goto LABEL_56;
          }
          id v60 = [v57 identifier];
          uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v63 = v62;
          if (v61 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v63 == v64) {
            break;
          }
          char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v66) {
            goto LABEL_51;
          }

          ++v56;
          if (v59 == v55) {
            goto LABEL_49;
          }
        }

        swift_bridgeObjectRelease_n();
LABEL_51:
        swift_bridgeObjectRelease();
        uint64_t v67 = swift_dynamicCastClass();
        if (v67)
        {
          uint64_t v68 = v67;
          uint64_t v69 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.info.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v70 = swift_allocObject();
          *(_OWORD *)(v70 + 16) = xmmword_10059B760;
          id v71 = [v84 displayName];
          uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v74 = v73;

          *(void *)(v70 + 56) = &type metadata for String;
          *(void *)(v70 + 64) = sub_100073F48();
          *(void *)(v70 + 32) = v72;
          *(void *)(v70 + 40) = v74;
          *(void *)(v70 + 96) = v82;
          *(void *)(v70 + 104) = sub_100076EA4((unint64_t *)&qword_10070B668, (void (*)(uint64_t))type metadata accessor for DOCFileProviderSource);
          *(void *)(v70 + 72) = v84;
          id v75 = v83;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          double v76 = (void *)swift_allocObject();
          v76[2] = v85;
          v76[3] = v86;
          v76[4] = v68;
          v93 = sub_1000D7704;
          uint64_t v94 = v76;
          aBlock = _NSConcreteStackBlock;
          uint64_t v90 = 1107296256;
          uint64_t v91 = sub_1000666D8;
          long long v92 = &unk_100698EB0;
          double v77 = _Block_copy(&aBlock);
          swift_retain();
          id v78 = v58;
          swift_release();
          DOCRunInMainThread();

          _Block_release(v77);
          return;
        }

        goto LABEL_54;
      }
      goto LABEL_49;
    }
  }
  v84 = (char *)static DOCLog.UI.getter();
  LODWORD(v83) = static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10059B760;
  id v22 = [a3 identifier];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_100073F48();
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v25;
  uint64_t v82 = (void *)v21;
  if (a1 >> 62)
  {
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  dispatch_queue_t v27 = (void **)_swiftEmptyArrayStorage;
  if (v26)
  {
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100059E2C(0, v26 & ~(v26 >> 63), 0);
    if (v26 < 0)
    {
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v28 = 0;
    dispatch_queue_t v27 = aBlock;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v29 = *(id *)(a1 + 8 * v28 + 32);
      }
      uint64_t v30 = v29;
      id v31 = [v29 identifier];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v34 = v33;

      aBlock = v27;
      unint64_t v36 = (unint64_t)v27[2];
      unint64_t v35 = (unint64_t)v27[3];
      if (v36 >= v35 >> 1)
      {
        sub_100059E2C(v35 > 1, v36 + 1, 1);
        dispatch_queue_t v27 = aBlock;
      }
      ++v28;
      v27[2] = (void *)(v36 + 1);
      char v37 = &v27[2 * v36];
      v37[4] = (void *)v32;
      v37[5] = v34;
    }
    while (v26 != v28);
  }
  v82[12] = sub_1000CBE70(&qword_10070AEB0);
  v82[13] = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
  v82[9] = v27;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1005A0030;
    uint64_t v39 = _convertErrorToNSError(_:)();
    *(void *)(v38 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v38 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v38 + 32) = v39;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    id v40 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
  }
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v85;
  *(void *)(v41 + 24) = v86;
  v93 = sub_10021F5C8;
  uint64_t v94 = (void *)v41;
  aBlock = _NSConcreteStackBlock;
  uint64_t v90 = 1107296256;
  uint64_t v91 = sub_1000666D8;
  long long v92 = &unk_100698E10;
  unint64_t v42 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v42);
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  Swift::Bool is_nil = to.is_nil;
  Class isa = to.value.super.super.super.isa;
  swift_getObjectType();
  uint64_t v5 = sub_1000CBE70(&qword_100708758);
  __chkstk_darwin(v5 - 8);
  NSString v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v24.receiver = v2;
  v24.super_class = v8;
  [super viewDidMoveToWindow:isa shouldAppearOrDisappear:is_nil];
  if (isa)
  {
    sub_1000B1750();
    sub_100014C58();
    sub_1000CBE70((uint64_t *)&unk_100708760);
    uint64_t v9 = swift_allocObject();
    long long v23 = xmmword_1005A0030;
    *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
    unint64_t v10 = sub_10009E9DC();
    unint64_t v22 = v10;
    *(void *)(v9 + 32) = &type metadata for DOCBrowserLayoutConfiguration.Trait;
    *(void *)(v9 + 40) = v10;
    uint64_t v11 = type metadata accessor for DOCTraitChangeObservingOptions();
    id v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    v12(v7, 1, 1, v11);
    uint64_t v13 = UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)();
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v7, &qword_100708758);
    *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges] = v13;
    swift_unknownObjectRelease();
    v12(v7, 1, 1, v11);
    uint64_t v14 = UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)();
    sub_1000CBBA4((uint64_t)v7, &qword_100708758);
    *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges] = v14;
    swift_unknownObjectRelease();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v23;
    uint64_t v16 = type metadata accessor for DOCUIPHorizontalInsetTrait();
    uint64_t v17 = sub_100078438(&qword_10070A210, (void (*)(uint64_t))&type metadata accessor for DOCUIPHorizontalInsetTrait);
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    v12(v7, 1, 1, v11);
    uint64_t v18 = UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)();
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v7, &qword_100708758);
    *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges] = v18;
    swift_unknownObjectRelease();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v23;
    unint64_t v20 = v22;
    *(void *)(v19 + 32) = &type metadata for DOCBrowserLayoutConfiguration.Trait;
    *(void *)(v19 + 40) = v20;
    v12(v7, 1, 1, v11);
    UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v7, &qword_100708758);
  }
  else
  {
    if (*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges])
    {
      swift_unknownObjectRetain();
      UIViewController.unregisterForTraitChanges(_:)();
      swift_unknownObjectRelease();
    }
    if (*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges])
    {
      swift_unknownObjectRetain();
      UIViewController.unregisterForTraitChanges(_:)();
      swift_unknownObjectRelease();
    }
    if (*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges])
    {
      swift_unknownObjectRetain();
      UIViewController.unregisterForTraitChanges(_:)();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000248E4()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

double sub_100024924(void *a1, uint64_t a2, long long *a3)
{
  uint64_t v4 = v3;
  long long v8 = *(_OWORD *)(a2 + 144);
  long long v96 = *(_OWORD *)(a2 + 128);
  long long v97 = v8;
  long long v98 = *(_OWORD *)(a2 + 160);
  uint64_t v99 = *(void *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 80);
  long long v92 = *(_OWORD *)(a2 + 64);
  long long v93 = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  long long v94 = *(_OWORD *)(a2 + 96);
  long long v95 = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v88 = *(_OWORD *)a2;
  long long v89 = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  long long v90 = *(_OWORD *)(a2 + 32);
  long long v91 = v12;
  long long v13 = a3[5];
  long long v104 = a3[4];
  long long v105 = v13;
  long long v14 = a3[7];
  long long v106 = a3[6];
  long long v107 = v14;
  long long v15 = a3[1];
  long long v100 = *a3;
  long long v101 = v15;
  long long v16 = a3[3];
  long long v102 = a3[2];
  long long v103 = v16;
  id v17 = [a1 preferredContentSizeCategory];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
  {

    swift_bridgeObjectRelease_n();
LABEL_5:
    id v23 = [self defaultContentSizeCategory];
    id v24 = [self traitCollectionWithPreferredContentSizeCategory:v23];

    goto LABEL_7;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_5;
  }
  id v24 = a1;
LABEL_7:
  sub_10009E9DC();
  UITraitCollection.subscript.getter();
  int v25 = v87;
  uint64_t v26 = *(void **)(v4 + 24);
  *(void *)&long long v74 = *(id *)(v4 + 16);
  *((void *)&v74 + 1) = v26;
  *(void *)&long long v75 = [v24 preferredContentSizeCategory];
  BYTE8(v75) = v87;
  long long v80 = v104;
  long long v81 = v105;
  long long v82 = v106;
  long long v83 = v107;
  long long v76 = v100;
  long long v77 = v101;
  long long v78 = v102;
  long long v79 = v103;
  v84[6] = v104;
  v84[7] = v105;
  v84[8] = v106;
  v84[9] = v107;
  v84[2] = v100;
  v84[3] = v101;
  v84[4] = v102;
  v84[5] = v103;
  v84[0] = v74;
  v84[1] = v75;
  sub_1000104D0((uint64_t)a3);
  id v27 = [v24 preferredContentSizeCategory];
  LOBYTE(v26) = UIContentSizeCategory.isAccessibilityCategory.getter();

  if ((v26 & 1) == 0)
  {
    id v32 = [self defaultMetrics];
    [v32 scaledValueForValue:*(double *)v4];
    double v31 = v33;

    goto LABEL_14;
  }
  if (qword_100705050 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v28 = off_10070F9B8;
  if (*((void *)off_10070F9B8 + 2))
  {
    sub_10017FF50((uint64_t)&v74);
    unint64_t v29 = sub_10017C130((uint64_t)v84);
    if (v30)
    {
      double v31 = *(double *)(v28[7] + 8 * v29);
      swift_endAccess();
      sub_10000E7D4((uint64_t)&v74);
LABEL_14:

      sub_10000E7D4((uint64_t)&v74);
      return v31;
    }
    sub_10000E7D4((uint64_t)&v74);
  }
  swift_endAccess();
  id v34 = [objc_allocWithZone((Class)UIView) init];
  id v35 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionLargeTextListCell(0));
  id v67 = v34;
  unint64_t v36 = sub_1002BC884(v34, 0.0, 0.0, 0.0, 0.0);
  char v37 = (char *)[objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionCellContent()) init];
  v69[8] = v96;
  v69[9] = v97;
  v69[10] = v98;
  uint64_t v70 = v99;
  v69[4] = v92;
  v69[5] = v93;
  v69[6] = v94;
  v69[7] = v95;
  v69[0] = v88;
  v69[1] = v89;
  v69[2] = v90;
  v69[3] = v91;
  DOCSplitBrowserViewController.didCommitPreview(of:)(v69);
  uint64_t v38 = (uint64_t)&v37[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits];
  sub_1000CBE0C((uint64_t)&v37[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits], (uint64_t)&v86, (uint64_t *)&unk_100705550);
  sub_1000CBE0C(v38, (uint64_t)v71, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v69, v38, (uint64_t *)&unk_100705550);
  sub_1000A2E70(a2);
  sub_1000A2E70(a2);
  sub_10009736C(&v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  sub_10009736C(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  sub_100095550(&v86);
  sub_10004B944(a2);
  sub_10009736C(&v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  v72[4] = v104;
  v72[5] = v105;
  v72[6] = v106;
  v72[7] = v107;
  v72[0] = v100;
  v72[1] = v101;
  v72[2] = v102;
  v72[3] = v103;
  DOCSplitBrowserViewController.didCommitPreview(of:)(v72);
  uint64_t v39 = (uint64_t)&v37[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
  sub_1000CBE0C((uint64_t)&v37[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v85, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C(v39, (uint64_t)v73, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v72, v39, (uint64_t *)&unk_10070AD40);
  sub_1000104D0((uint64_t)a3);
  sub_1000104D0((uint64_t)a3);
  sub_100097480(v85, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  sub_100097480(v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
  sub_100097DD0(v85);
  sub_10000A628((uint64_t)a3);
  sub_100097480(v85, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
  id v40 = [objc_allocWithZone((Class)DOCAppearance) init];
  uint64_t v41 = *(void **)&v37[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance];
  *(void *)&v37[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = v40;
  id v42 = v40;
  sub_1000987A8(v41);

  id v43 = v36;
  id v44 = v37;
  sub_1000A48F0(v37);

  sub_1002C2918();
  uint64_t v45 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel;
  [*(id *)((char *)v43 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_subtitleLabel) setHidden:v25 ^ 1u];
  id v46 = [a1 preferredContentSizeCategory];
  id v47 = [v43 traitCollection];
  id v48 = [v47 preferredContentSizeCategory];

  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;
  if (v49 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v51 == v52)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v53 & 1) == 0)
    {

      sub_10000E7D4((uint64_t)&v74);
      return 0.0;
    }
  }
  uint64_t v54 = OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel;
  uint64_t v55 = *(void **)((char *)v43 + OBJC_IVAR____TtC5Files25DOCItemCollectionListCell_listTitleLabel);
  id v56 = objc_allocWithZone((Class)NSAttributedString);
  id v57 = v55;
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = [v56 initWithString:v58];

  [v57 setAttributedText:v59];
  id v60 = *(id *)((char *)v43 + v45);
  NSString v61 = String._bridgeToObjectiveC()();
  [v60 setText:v61];

  [*(id *)((char *)v43 + v54) invalidateIntrinsicContentSize];
  [*(id *)((char *)v43 + v45) invalidateIntrinsicContentSize];
  [self separatorThicknessForTraitCollection:a1];
  double v63 = v62;
  [v67 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
  double v31 = v63 + v64;
  swift_beginAccess();
  sub_10017FF50((uint64_t)&v74);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v68 = off_10070F9B8;
  off_10070F9B8 = (_UNKNOWN *)0x8000000000000000;
  sub_1003E028C(v84, isUniquelyReferenced_nonNull_native, v31);
  off_10070F9B8 = v68;
  swift_bridgeObjectRelease();
  sub_10000E7D4((uint64_t)&v74);
  swift_endAccess();

  sub_10000E7D4((uint64_t)&v74);
  return v31;
}

id sub_1000251F4()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self protectedAppsEnabled];
  if (result)
  {
    sub_1000B0690();
    static Logger.UI.getter();
    uint64_t v6 = v0;
    NSString v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v20 = v2;
      uint64_t v10 = v9;
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      aBlock[0] = v19;
      *(_DWORD *)uint64_t v10 = 136315394;
      uint64_t v21 = sub_10009B0E4(0xD000000000000021, 0x80000001005F8050, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2112;
      uint64_t v21 = (uint64_t)v6;
      long long v11 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v18 = v6;

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[PROTECTED APPS] %s authenticateLocationWithNoUI viewController: %@", (uint8_t *)v10, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    id result = [self sharedManager];
    uint64_t v12 = *(void *)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v12)
    {
      long long v13 = result;
      uint64_t v14 = v12 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if (*(unsigned char *)(v14 + 16)) {
        uint64_t v15 = *(void *)(*(void *)v14 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      }
      else {
        uint64_t v15 = *(void *)(v14 + 8);
      }
      swift_unknownObjectRetain();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = (uint64_t)sub_1000D4E68;
      aBlock[5] = v16;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100007FA4;
      void aBlock[3] = (uint64_t)&unk_1006AE978;
      id v17 = _Block_copy(aBlock);
      swift_release();
      [v13 authenticateLocationWithNoUI:v15 completion:v17];
      _Block_release(v17);

      return (id)swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000255D4(uint64_t a1)
{
  id v2 = [self sharedInstance];
  id v3 = [v2 userTags];

  id v4 = [v3 array];
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v6 = (unint64_t)sub_100038F00(v5);
  swift_bridgeObjectRelease();
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(void *)(a1 + 88) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = sub_100019008(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v6 + 8 * i + 32);
      }
      id v11 = v10;
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100019008(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[4 * v13];
      v14[5] = 0;
      v14[6] = 0;
      v14[4] = v11;
      *((unsigned char *)v14 + 56) = 2;
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100025900@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000CBE70(&qword_100716DB0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000CBE70(&qword_100716DB8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100073DF0(&qword_100716DC0, &qword_100716DB8);
  static PredicateExpressions.build_Arg<A>(_:)();
  v13[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1000CBE70(&qword_100716DC8);
  a2[4] = sub_100025B44();
  sub_100052C70(a2);
  sub_100073DF0(&qword_100716DE8, &qword_100716DB0);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_100025B44()
{
  unint64_t result = qword_100716DD0;
  if (!qword_100716DD0)
  {
    sub_100074618(&qword_100716DC8);
    sub_100073DF0(&qword_100716DD8, &qword_100716DB8);
    sub_1000D8C3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716DD0);
  }
  return result;
}

void sub_100025D68(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v53 - v17;
  if (a2)
  {
    uint64_t v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
    uint64_t v21 = _convertErrorToNSError(_:)();
    *(void *)(v20 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v20 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v20 + 32) = v21;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a3;
    *(void *)(v22 + 24) = a4;
    NSString v58 = sub_1002229E0;
    id v59 = (void *)v22;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    id v23 = &unk_1006995E0;
LABEL_12:
    id v56 = sub_1000666D8;
    id v57 = v23;
    uint64_t v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
LABEL_13:
    _Block_release(v45);
    return;
  }
  uint64_t v53 = a3;
  id v24 = a5;
  int v25 = sub_100017860(a1);

  if (!v25)
  {
LABEL_9:
    static Logger.UI.getter();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Sources don't contain the location source", v43, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v53;
    *(void *)(v44 + 24) = a4;
    NSString v58 = sub_1002229E0;
    id v59 = (void *)v44;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    id v23 = &unk_100699478;
    goto LABEL_12;
  }
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v26 = swift_dynamicCastClass();
  if (!v26)
  {

    goto LABEL_9;
  }
  uint64_t v27 = v26;
  uint64_t v28 = *(void **)(v26 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (v28)
  {
    unint64_t v29 = (void *)swift_allocObject();
    v29[2] = v27;
    v29[3] = v24;
    uint64_t v30 = v53;
    v29[4] = v53;
    v29[5] = a4;
    id v31 = v24;
    id v32 = v28;
    id v33 = v25;
    swift_retain();
    if (FPProviderDomain.shouldUseDSEnumeration.getter())
    {
      type metadata accessor for DOCRootNode();
      id v34 = (void *)static DOCRootNode.rootNode(for:)();
      id v35 = (void *)swift_allocObject();
      v35[2] = v34;
      v35[3] = v27;
      v35[4] = 0;
      v35[5] = v31;
      v35[6] = v30;
      v35[7] = a4;
      NSString v58 = sub_1000D76DC;
      id v59 = v35;
      aBlock = _NSConcreteStackBlock;
      uint64_t v55 = 1107296256;
      id v56 = sub_1000666D8;
      id v57 = &unk_100699590;
      unint64_t v36 = _Block_copy(&aBlock);
      id v37 = v34;
      id v38 = v31;
      id v39 = v33;
      swift_retain();
      id v40 = v37;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v36);

      swift_release();
      return;
    }
    uint64_t v51 = *(void **)(a6 + OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager);
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = sub_10023E354;
    *(void *)(v52 + 24) = v29;
    NSString v58 = sub_10023E360;
    id v59 = (void *)v52;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    id v56 = sub_10000CAE4;
    id v57 = &unk_100699540;
    uint64_t v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v51 doc_fetchRootItemForProviderDomain:v32 completionHandler:v45];

    swift_release();
    goto LABEL_13;
  }
  static Logger.UI.getter();
  id v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    id v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Source doesn't contain a file provider domain", v48, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v53;
  *(void *)(v49 + 24) = a4;
  NSString v58 = sub_1002229E0;
  id v59 = (void *)v49;
  aBlock = _NSConcreteStackBlock;
  uint64_t v55 = 1107296256;
  id v56 = sub_1000666D8;
  id v57 = &unk_1006994C8;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v50);
}

uint64_t sub_10002646C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (char *)result;
    uint64_t v2 = 1061109567;
    DOCItemCollectionViewController.getCurrentLocation()();
    if (v3 && (v4 = v3, id v5 = [v3 displayName], v4, v5))
    {
      uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v7 = (void *)0xE400000000000000;
    }
    id v8 = [v1 navigationItem];
    id v9 = [v8 title];

    if (v9)
    {
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;
    }
    else
    {
      uint64_t v12 = (void *)0xED0000656C746974;
      uint64_t v10 = 0x206E776F6E6B6E75;
    }
    _StringGuts.grow(_:)(34);
    v13._Swift::Int countAndFlagsBits = 0x20646564616F6CLL;
    v13._object = (void *)0xE700000000000000;
    String.append(_:)(v13);
    v14._Swift::Int countAndFlagsBits = v2;
    v14._object = v7;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._object = (void *)0x8000000100601280;
    v15._Swift::Int countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v15);
    v16._Swift::Int countAndFlagsBits = v10;
    v16._object = v12;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext];
    *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext] = 0;
    uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext];
    *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext] = v17;
    swift_retain();
    sub_1000093D0(v18);

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100026738()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  uint64_t result = swift_beginAccess();
  if (*v2 == 2) {
    goto LABEL_2;
  }
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v6 + 16))
  {
    uint64_t v7 = *(void **)(*(void *)v6 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
LABEL_7:
    unsigned int v4 = [v7 isShared];
    uint64_t result = swift_unknownObjectRelease();
    goto LABEL_8;
  }
  uint64_t v7 = *(void **)(v6 + 8);
  uint64_t result = swift_unknownObjectRetain();
  if (v7) {
    goto LABEL_7;
  }
LABEL_2:
  unsigned int v4 = 0;
LABEL_8:
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v8)
  {
    if (*(unsigned char *)(v8 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v9 = objc_allocWithZone((Class)NSUserDefaults);
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v11 = [v9 initWithSuiteName:v10];

      if (v11)
      {
        if ([v11 valueForKey:DOCUserDefaultsKeyFPFSDebugMode])
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v29, 0, sizeof(v29));
        }
        sub_1000CBE0C((uint64_t)v29, (uint64_t)v30, (uint64_t *)&unk_100705D60);
        if (v31)
        {
          if ((swift_dynamicCast() & 1) != 0 && v28 == 1)
          {
            id v12 = [*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) promptText];
            uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v15 = v14;

            swift_bridgeObjectRelease();
            uint64_t v16 = HIBYTE(v15) & 0xF;
            if ((v15 & 0x2000000000000000) == 0) {
              uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
            }
            if (v16) {
              int v17 = 1;
            }
            else {
              int v17 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
            }
            goto LABEL_26;
          }
        }
        else
        {

          sub_1000CBBA4((uint64_t)v30, (uint64_t *)&unk_100705D60);
        }
      }
    }
    id v18 = [*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) promptText];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    swift_bridgeObjectRelease();
    uint64_t v22 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0) {
      uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
    }
    int v17 = v22 != 0;
LABEL_26:
    uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView);
    if ((sub_100026AA8() & 1) != 0
      && (id v24 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView)) != 0)
    {
      id v25 = v24;
      swift_retain();
      char v26 = sub_10039EA30();

      swift_release();
      char v27 = 1;
      if ((v4 | v17) & 1) != 0 || v23 || (v26) {
        return v27 & 1;
      }
    }
    else
    {
      char v27 = 1;
      if (((v4 | v17) & 1) != 0 || v23) {
        return v27 & 1;
      }
    }
    char v27 = sub_100078760();
    return v27 & 1;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

id sub_100026AA8()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  id result = (id)swift_beginAccess();
  if (*v1 != 2) {
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v3)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = v3 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v4 + 16))
  {
    uint64_t v5 = *(void **)(*(void *)v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v5 = *(void **)(v4 + 8);
    id result = (id)swift_unknownObjectRetain();
    if (!v5) {
      return result;
    }
  }
  unsigned int v6 = [v5 isRootItem];
  swift_unknownObjectRelease();
  if (!v6) {
    return 0;
  }
LABEL_7:
  id result = *(id *)(*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (result) {
    return [result isMainiCloudDriveDomain];
  }
  return result;
}

uint64_t sub_100026E84()
{
  uint64_t v0 = sub_1000CBE70(&qword_10070CE98);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100027100();
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v4 = self;
  id v5 = [v4 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v10, (uint64_t *)&unk_100705D60);
  sub_100027100();
  long long v10 = 0u;
  long long v11 = 0u;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10028E7CC;
  *(void *)(v6 + 24) = v3;
  swift_retain();
  id v7 = [v4 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v10, (uint64_t *)&unk_100705D60);
  uint64_t v8 = type metadata accessor for Notification();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  sub_10002C234();
  swift_release_n();
  return sub_1000CBBA4((uint64_t)v2, &qword_10070CE98);
}

uint64_t sub_100027100()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files24DOCSidebarViewController____lazy_storage___notificationsController;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController____lazy_storage___notificationsController])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController____lazy_storage___notificationsController];
  }
  else
  {
    uint64_t v3 = v0;
    sub_1000CBE70((uint64_t *)&unk_10070CE58);
    swift_allocObject();
    uint64_t v4 = v0;
    uint64_t v2 = NSNotification.SubscriptionsController.init(observee:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_100027188(void *a1, char *a2)
{
  [a1 bounds];
  id v8 = [objc_allocWithZone((Class)UIView) initWithFrame:v4, v5, v6, v7];
  [v8 setPreservesSuperviewLayoutMargins:1];
  [a1 setPreservesSuperviewLayoutMargins:1];
  [a1 setAutoresizingMask:18];
  [v8 addSubview:a1];
  uint64_t v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  long long v10 = *(void **)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  *(void *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] = a1;
  long long v11 = a1;

  if (*(void *)&a2[v9]) {
    swift_unknownObjectWeakAssign();
  }
  [a2 setView:v8];
  id v12 = &a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
  swift_beginAccess();
  char v13 = *v12;
  *id v12 = 1;
  if ((v13 & 1) == 0) {
    sub_1000457E8(0);
  }
  [v11 setPrefetchDataSource:a2];
  [v11 setPrefetchingEnabled:1];
  [v11 setDelegate:a2];
  *(void *)&v11[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate + 8] = &off_1006A2658;
  swift_unknownObjectWeakAssign();
  *(void *)&v11[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate + 8] = &off_100695C40;
  swift_unknownObjectWeakAssign();
  *(void *)&v11[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate + 8] = &off_10069DFC8;
  swift_unknownObjectWeakAssign();
  unint64_t v14 = &a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  if (*(void *)&v14[*(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 40) + 8])
  {
    swift_bridgeObjectRetain();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  [v11 setAccessibilityIdentifier:v15];

  if ([*(id *)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] collectionSupportsDragAndDrop])
  {
    [v11 setDragDelegate:a2];
    [v11 setDropDelegate:a2];
    [v11 setDragInteractionEnabled:1];
  }
}

uint64_t sub_100027460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v36 = type metadata accessor for OSSignpostID();
  id v35 = *(uint64_t (***)(uint64_t))(v36 - 8);
  __chkstk_darwin(v36);
  double v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchTime();
  uint64_t v42 = *(void *)(v44 - 8);
  uint64_t v7 = __chkstk_darwin(v44);
  id v37 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)v33 - v9;
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  id v40 = *(void **)(v38 - 8);
  __chkstk_darwin(v38);
  long long v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v54 = 0;
  uint64_t v46 = a3;
  swift_retain();
  dispatch_group_t v14 = dispatch_group_create();
  NSString v15 = *(NSObject **)(a2 + 32);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a2;
  v16[3] = v14;
  v16[4] = &v54;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1000D70DC;
  *(void *)(v17 + 24) = v16;
  uint64_t v52 = sub_100162A48;
  uint64_t v53 = (void *)v17;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = 1107296256;
  uint64_t v50 = sub_100087990;
  uint64_t v51 = &unk_1006A96E8;
  id v18 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v19 = v14;
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    if (v54 == 1)
    {
      uint64_t v21 = swift_allocObject();
      *(unsigned char *)(v21 + 16) = 0;
      uint64_t v22 = (void *)swift_allocObject();
      uint64_t v36 = v21;
      void v22[2] = v21;
      v22[3] = sub_1003F1E3C;
      v22[4] = v46;
      uint64_t v52 = sub_1003F1EA8;
      uint64_t v53 = v22;
      aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      id v35 = &v50;
      uint64_t v50 = sub_1000666D8;
      uint64_t v51 = &unk_1006A9760;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      id v24 = v13;
      static DispatchQoS.unspecified.getter();
      os_log_type_t v47 = _swiftEmptyArrayStorage;
      v33[2] = (id)sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      v33[1] = (id)sub_1000CBE70((uint64_t *)&unk_100705390);
      v33[3] = (id)sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v25 = v38;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v23);
      id v34 = (void (*)(char *, uint64_t))v40[1];
      v34(v11, v25);
      id v40 = v16;
      uint64_t v39 = *(void *)(v39 + 8);
      ((void (*)(char *, uint64_t))v39)(v13, v43);
      swift_release();
      char v26 = v37;
      static DispatchTime.now()();
      char v27 = v41;
      + infix(_:_:)();
      v33[0] = v19;
      uint64_t v42 = *(void *)(v42 + 8);
      ((void (*)(char *, uint64_t))v42)(v26, v44);
      char v28 = (void *)swift_allocObject();
      v28[2] = v36;
      v28[3] = sub_1003F1E3C;
      v28[4] = v46;
      uint64_t v52 = sub_1003F1EB8;
      uint64_t v53 = v28;
      aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      uint64_t v50 = sub_1000666D8;
      uint64_t v51 = &unk_1006A97B0;
      unint64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      os_log_type_t v47 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v29);

      v34(v11, v25);
      ((void (*)(char *, uint64_t))v39)(v24, v43);
      ((void (*)(char *, uint64_t))v42)(v27, v44);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_signpost_type_t.event.getter();
      updated = (void *)updatePointsOfInterestHandler.getter();
      static OSSignpostID.exclusive.getter();
      os_signpost(_:dso:log:name:signpostID:_:_:)();

      ((void (*)(char *, uint64_t))v35[1])(v6, v36);
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v32 = Strong;
        sub_100016400();
        swift_release();

        uint64_t v19 = v32;
      }
      else
      {
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100027C9C()
{
  sub_10004EE00();
  uint64_t result = static NSUserDefaults.docUserDefaults.getter();
  if (!result) {
    return result;
  }
  uint64_t v1 = (void *)result;
  unint64_t v2 = sub_10004EC28();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_4:
      uint64_t result = sub_100059E2C(0, v4 & ~(v4 >> 63), 0);
      if (v4 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v21 = v1;
      uint64_t v5 = 0;
      do
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v3 + 8 * v5 + 32);
        }
        uint64_t v7 = v6;
        id v8 = [v6 identifier:v21];
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        unint64_t v13 = _swiftEmptyArrayStorage[2];
        unint64_t v12 = _swiftEmptyArrayStorage[3];
        if (v13 >= v12 >> 1) {
          sub_100059E2C(v12 > 1, v13 + 1, 1);
        }
        ++v5;
        _swiftEmptyArrayStorage[2] = v13 + 1;
        dispatch_group_t v14 = &_swiftEmptyArrayStorage[2 * v13];
        v14[4] = v9;
        v14[5] = v11;
      }
      while (v4 != v5);
      swift_bridgeObjectRelease();
      uint64_t v1 = v21;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  NSString v15 = sub_10004F234(v1);
  char v16 = sub_1000082EC(_swiftEmptyArrayStorage, v15);
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v1 setDOCSourceOrderKey:isa];

    [v1 synchronize];
    uint64_t v18 = static DOCLog.Source.getter();
    static os_log_type_t.info.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    uint64_t v20 = _swiftEmptyArrayStorage[2];
    swift_bridgeObjectRelease();
    *(void *)(v19 + 56) = &type metadata for Int;
    *(void *)(v19 + 64) = &protocol witness table for Int;
    *(void *)(v19 + 32) = v20;
    os_log(_:dso:log:type:_:)();

    uint64_t v1 = (void *)v18;
  }

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewWillLayoutSubviews()()
{
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 1;
  id v2 = [self sharedGenerator];
  id v3 = [v2 startBatching];

  uint64_t v4 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens];
  swift_beginAccess();
  id v5 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  id v6 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  swift_beginAccess();
  if (*(void *)v6 != 2)
  {
    if (!sub_100021B28(v1, *(_WORD *)v6 & 0x101))
    {
LABEL_21:
      uint64_t v30 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
      v32.receiver = v1;
      v32.super_class = v30;
      [super viewWillLayoutSubviews];

      return;
    }
    id v11 = [v1 splitViewController];
    if (v11)
    {
      unint64_t v12 = v11;
      [v1 enclosingTabSwitcherStyle];
      if (DOCTabSwitcherStyle.showsTabs.getter())
      {
        id v13 = [v1 traitCollection];
        __chkstk_darwin(v13);
        id v14 = (id)UITraitCollection.modifyingTraits(_:)();

        goto LABEL_17;
      }
    }
    id v14 = [v1 traitCollection];
LABEL_17:
    id v21 = [v1 view];
    if (v21)
    {
      uint64_t v22 = v21;
      [v21 frame];
      uint64_t v24 = v23;
      uint64_t v26 = v25;

      char v27 = sub_100026738();
      sub_100021F80(v14, v24, v26, 0, v27 & 1);

      unint64_t v29 = sub_1000373B0();
      if (*v28 != 2) {
        v28[1] = 0;
      }
      ((void (*)(char *, void))v29)(v31, 0);
      goto LABEL_21;
    }
    goto LABEL_23;
  }
  id v7 = [v1 splitViewController];
  if (!v7)
  {
LABEL_12:
    id v10 = [v1 traitCollection];
    goto LABEL_13;
  }
  id v8 = v7;
  [v1 enclosingTabSwitcherStyle];
  if ((DOCTabSwitcherStyle.showsTabs.getter() & 1) == 0)
  {

    goto LABEL_12;
  }
  id v9 = [v1 traitCollection];
  __chkstk_darwin(v9);
  id v10 = (id)UITraitCollection.modifyingTraits(_:)();

LABEL_13:
  id v15 = [v1 view];
  if (v15)
  {
    char v16 = v15;
    [v15 frame];
    uint64_t v18 = v17;
    uint64_t v20 = v19;

    sub_100021F80(v10, v18, v20, 0, 0);
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_100028348()
{
  uint64_t v0 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  __chkstk_darwin(v0);
  id v34 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v38 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OSSignpostID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  setiopolicy_np(3, 0, 1);
  static os_signpost_type_t.event.getter();
  updated = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v32 = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v44 = sub_100010510;
  uint64_t v45 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_1000666D8;
  uint64_t v43 = &unk_1006AAF38;
  id v14 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter();
  aBlock = (void **)_swiftEmptyArrayStorage;
  uint64_t v30 = sub_1000BACE4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v29 = sub_1000CBE70((uint64_t *)&unk_100705390);
  unint64_t v31 = sub_1000B921C();
  uint64_t v15 = v2;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  char v16 = *(void (**)(char *, uint64_t))(v38 + 8);
  v38 += 8;
  char v28 = v16;
  v16(v4, v2);
  uint64_t v17 = v5 + 8;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v27 = v17;
  uint64_t v19 = v33;
  v18(v7, v33);
  id v21 = v34;
  uint64_t v20 = v35;
  uint64_t v22 = v36;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for DispatchQoS.QoSClass.userInitiated(_:), v36);
  uint64_t v23 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  uint64_t v44 = sub_10000A794;
  uint64_t v45 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  uint64_t v42 = sub_1000666D8;
  uint64_t v43 = &unk_1006AAF60;
  uint64_t v24 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v39 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);

  v28(v4, v15);
  v18(v7, v19);
  id v25 = [self defaultCenter];
  [v25 addObserver:v37 selector:"observedApplicationDidEnterBackgroundWithSender:" name:UIApplicationDidEnterBackgroundNotification object:0];

  return 1;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  uint64_t v3 = v2;
  Swift::Bool is_nil = to.is_nil;
  Class isa = to.value.super.super.super.isa;
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super viewDidMoveToWindow:isa shouldAppearOrDisappear:is_nil];
  if (isa)
  {
    uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);

    if (v8)
    {
      id v9 = [v3 childViewControllers];
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
LABEL_5:
          if (v11 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v13 = *(id *)(v10 + 8 * i + 32);
            }
            id v14 = v13;
            type metadata accessor for DOCBrowserContainedViewController();
            uint64_t v15 = (void *)swift_dynamicCastClass();
            if (v15)
            {
              char v16 = v15;
              if ([v15 wantsAppearanceOverride]) {
                [v16 setAppearance:0];
              }
            }
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100028B5C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v113[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v113[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v133 = *(void *)(v9 - 8);
  uint64_t v134 = v9;
  __chkstk_darwin(v9);
  v132 = &v113[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v11) {
    goto LABEL_118;
  }
  if (([v11 isGathering] & 1) != 0
    || (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad) & 1) != 0)
  {
    id v12 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
    if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView);
        if (v19)
        {
          [v19 setHidden:1];
        }
      }
    }
    return;
  }
  v125 = v8;
  v126 = v4;
  uint64_t v127 = v5;
  uint64_t v128 = v2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad) = 1;
  id v20 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;
  if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      uint64_t v27 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView);
      if (v27) {
        [v27 setHidden:1];
      }
    }
  }
  char v28 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v28)
  {
LABEL_90:
    swift_beginAccess();
    uint64_t v92 = swift_bridgeObjectRetain();
    sub_100033510(v92);
    swift_bridgeObjectRelease();
    uint64_t v93 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool);
    uint64_t v94 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    swift_retain();
    long long v95 = (void *)static OS_dispatch_queue.main.getter();
    sub_100027460((uint64_t)v95, v93, v94);
    swift_release_n();

    return;
  }
  unint64_t v129 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v123 = v1;
  uint64_t v131 = v0;
  id v29 = [v28 visibleCells];
  uint64_t v124 = sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
  unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v122 = v6;
  if (v30 >> 62) {
    goto LABEL_88;
  }
  uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v31)
  {
LABEL_89:
    swift_bridgeObjectRelease_n();
    uint64_t v0 = v131;
    goto LABEL_90;
  }
LABEL_25:
  uint64_t v32 = 4;
  uint64_t v33 = 0;
  if ((v30 & 0xC000000000000001) != 0)
  {
LABEL_26:
    id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_28;
  }
  while (1)
  {
    id v34 = *(id *)(v30 + 8 * v32);
LABEL_28:
    uint64_t v35 = v34;
    uint64_t v36 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_88:
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      if (!v31) {
        goto LABEL_89;
      }
      goto LABEL_25;
    }
    type metadata accessor for DOCItemCollectionCell();
    uint64_t v37 = (void *)swift_dynamicCastClass();
    if (!v37 || (uint64_t v38 = (*(uint64_t (**)(void))((swift_isaMask & *v37) + 0x1F8))()) == 0)
    {

      if (v36 == v31) {
        goto LABEL_89;
      }
      goto LABEL_35;
    }
    uint64_t v39 = (void *)v38;
    uint64_t v40 = sub_1000CBC64();

    if (!v40) {
      break;
    }
    if (v36 == v31) {
      goto LABEL_89;
    }
LABEL_35:
    uint64_t v33 = ++v32 - 4;
    if ((v30 & 0xC000000000000001) != 0) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease_n();
  v130 = dispatch_group_create();
  uint64_t v41 = *(void **)(v131 + v129);
  uint64_t v42 = &off_10059B000;
  if (!v41)
  {
    unint64_t v91 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_95;
  }
  id v43 = [v41 visibleCells];
  unint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v167 = (unint64_t)_swiftEmptyArrayStorage;
  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    if (!v45) {
      goto LABEL_93;
    }
LABEL_40:
    if (v45 >= 1)
    {
      uint64_t v46 = 0;
      unint64_t v129 = v44 & 0xC000000000000001;
      v118 = &v137;
      uint64_t v124 = v44;
      while (1)
      {
        if (v129) {
          id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v47 = *(id *)(v44 + 8 * v46 + 32);
        }
        id v48 = v47;
        uint64_t v49 = (void *)swift_dynamicCastClass();
        if (!v49)
        {

          goto LABEL_43;
        }
        uint64_t v50 = v45;
        uint64_t v51 = (*(uint64_t (**)(void))((swift_isaMask & *v49) + 0x1F8))();
        if (!v51)
        {

LABEL_84:
          uint64_t v45 = v50;
          goto LABEL_43;
        }
        uint64_t v52 = (char *)v51;
        uint64_t v53 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
        uint64_t v54 = *(void *)(v51 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
        if (!v54) {
          break;
        }
LABEL_80:
        swift_unknownObjectRetain();

        unint64_t v44 = v124;
        uint64_t v45 = v50;
        if (v54)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          goto LABEL_84;
        }
LABEL_43:
        if (v45 == ++v46)
        {
          swift_bridgeObjectRelease();
          unint64_t v91 = v167;
          goto LABEL_94;
        }
      }
      uint64_t v121 = *(void *)(v51 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool);
      if (!v121
        || (uint64_t v55 = (id *)(v51 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node), swift_beginAccess(), !*v55)
        || (id v56 = *(void **)&v52[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection]) == 0
        || (id v120 = *v55,
            sub_1000CBE0C((uint64_t)&v52[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits], (uint64_t)v156, (uint64_t *)&unk_100705550), sub_1000CBE0C((uint64_t)v156, (uint64_t)v157, (uint64_t *)&unk_100705550), sub_1000CBEB4((uint64_t *)v157) == 1))
      {
LABEL_79:
        uint64_t v54 = *(void *)&v52[v53];
        goto LABEL_80;
      }
      uint64_t v57 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
      int v58 = v52[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder];
      swift_retain();
      swift_unknownObjectRetain();
      id v119 = v56;
      sub_10009736C(v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
      if (v58 == 2)
      {
        int v114 = [v120 isFolder];
        v52[v57] = v114;
      }
      else
      {
        int v114 = v58 & 1;
      }
      v155 = 0;
      uint64_t v59 = v121;
      dispatch_queue_t v117 = *(dispatch_queue_t *)(v121 + 32);
      id v60 = (void *)swift_allocObject();
      id v61 = v120;
      v60[2] = v59;
      v60[3] = v61;
      v60[4] = &v155;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_100087E2C;
      *(void *)(v62 + 24) = v60;
      v115 = v60;
      v139 = sub_1000D8564;
      uint64_t v140 = v62;
      v135 = _NSConcreteStackBlock;
      uint64_t v136 = 1107296256;
      v137 = sub_100087990;
      v138 = &unk_100697460;
      double v63 = _Block_copy(&v135);
      uint64_t v116 = v140;
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v117, v63);
      _Block_release(v63);
      LOBYTE(v59) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v59) {
        goto LABEL_117;
      }
      double v64 = v155;
      id v65 = v119;
      if (v155)
      {
        swift_release();
      }
      else
      {
        unint64_t v66 = (unint64_t)[v119 userInterfaceStyle];
        id v67 = (void **)v66;
        if (v66 >= 3)
        {
          type metadata accessor for UIUserInterfaceStyle(0);
          v138 = v69;
          v135 = v67;
          doc_warnUnrecognizedEnumValueEncountered(_:)();
          sub_10009B1B8((uint64_t)&v135);
          uint64_t v68 = 1;
        }
        else
        {
          uint64_t v68 = qword_1005A33D0[v66];
        }
        dispatch_queue_t v117 = (dispatch_queue_t)v68;
        long long v151 = v163;
        long long v152 = v164;
        long long v153 = v165;
        v154 = v166;
        long long v147 = v159;
        long long v148 = v160;
        long long v149 = v161;
        long long v150 = v162;
        long long v143 = v157[0];
        long long v144 = v157[1];
        long long v145 = v157[2];
        long long v146 = v158;
        if (v114)
        {
          id v70 = v65;
          sub_10009736C(v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
          double v71 = 0.0;
        }
        else
        {
          double v72 = *(double *)&v158;
          if (*(double *)&v160 < *(double *)&v158) {
            double v72 = *(double *)&v160;
          }
          double v73 = floor(v72);
          id v74 = v65;
          sub_10009736C(v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
          double v71 = v73 / 1.41421356;
        }
        long long v75 = v158;
        [v65 displayScale];
        double v77 = v76;
        id v78 = v120;
        id v79 = [v120 isFolder];
        id v80 = objc_allocWithZone((Class)DOCThumbnailDescriptor);
        id v81 = [v80 initWithSize:v117 minimumSize:1 scale:1 style:v79 isFolded:v75 isInteractive:v71 isFolder:v77];
        id v82 = [self sharedGenerator];
        double v64 = (void **)[v82 thumbnailForNode:v78 descriptor:v81];

        long long v83 = v118;
        v135 = v64;
        uint64_t v136 = (uint64_t)v117;
        long long v84 = v152;
        *((_OWORD *)v118 + 8) = v151;
        *((_OWORD *)v83 + 9) = v84;
        *((_OWORD *)v83 + 10) = v153;
        v83[22] = v154;
        long long v85 = v148;
        *((_OWORD *)v83 + 4) = v147;
        *((_OWORD *)v83 + 5) = v85;
        long long v86 = v150;
        *((_OWORD *)v83 + 6) = v149;
        *((_OWORD *)v83 + 7) = v86;
        long long v87 = v144;
        *(_OWORD *)long long v83 = v143;
        *((_OWORD *)v83 + 1) = v87;
        long long v88 = v146;
        *((_OWORD *)v83 + 2) = v145;
        *((_OWORD *)v83 + 3) = v88;
        id v141 = v119;
        char v142 = v114;
        swift_unknownObjectRetain();
        sub_1000A3084((uint64_t)&v135);
        swift_release();
        swift_unknownObjectRelease();
      }
      long long v89 = *(void ***)&v52[v53];
      *(void *)&v52[v53] = v64;
      swift_unknownObjectRetain();
      if (v64)
      {
        if (v89 && v64 == v89) {
          goto LABEL_78;
        }
        if (!v89)
        {
          long long v90 = v64;
LABEL_77:
          [v90 addListener:v52];
          goto LABEL_78;
        }
      }
      else if (!v89)
      {
        goto LABEL_78;
      }
      [v89 removeListener:v52];
      long long v90 = *(void ***)&v52[v53];
      if (v90) {
        goto LABEL_77;
      }
LABEL_78:
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_10009736C(v156, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
      swift_release();
      swift_unknownObjectRelease();

      uint64_t v42 = &off_10059B000;
      goto LABEL_79;
    }
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
    return;
  }
  uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v45) {
    goto LABEL_40;
  }
LABEL_93:
  swift_bridgeObjectRelease();
  unint64_t v91 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_94:
  swift_bridgeObjectRelease();
LABEL_95:
  if (v91 >> 62) {
    goto LABEL_113;
  }
  uint64_t v96 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v96)
  {
LABEL_97:
    LODWORD(v121) = 0;
    unint64_t v97 = 0;
    unint64_t v129 = v91 & 0xC000000000000001;
    uint64_t v124 = v91 & 0xFFFFFFFFFFFFFF8;
    uint64_t v98 = *((void *)v42 + 233);
    do
    {
      while (1)
      {
        if (v129)
        {
          uint64_t v99 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v100 = v97 + 1;
          if (__OFADD__(v97, 1)) {
            goto LABEL_111;
          }
        }
        else
        {
          if (v97 >= *(void *)(v124 + 16)) {
            goto LABEL_112;
          }
          uint64_t v99 = *(void **)(v91 + 8 * v97 + 32);
          swift_unknownObjectRetain();
          unint64_t v100 = v97 + 1;
          if (__OFADD__(v97, 1))
          {
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            swift_bridgeObjectRetain();
            uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v96) {
              goto LABEL_114;
            }
            goto LABEL_97;
          }
        }
        long long v101 = v130;
        dispatch_group_enter(v130);
        uint64_t v102 = swift_allocObject();
        *(void *)(v102 + 16) = v101;
        v139 = sub_10021FD14;
        uint64_t v140 = v102;
        v135 = _NSConcreteStackBlock;
        uint64_t v136 = v98;
        v137 = sub_1000666D8;
        v138 = &unk_1006973C0;
        uint64_t v42 = (char *__ptr32 *)_Block_copy(&v135);
        long long v103 = v101;
        swift_release();
        unsigned int v104 = [v99 registerGenerationCompletionHandler:v42];
        _Block_release(v42);
        if (!v104) {
          break;
        }
        swift_unknownObjectRelease();
        LODWORD(v121) = 1;
        unint64_t v97 = v100;
        if (v100 == v96)
        {
          swift_bridgeObjectRelease();
LABEL_110:
          sub_10009E6C4(0, (unint64_t *)&qword_100705380);
          long long v105 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v106 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v139 = sub_10021FD1C;
          uint64_t v140 = v106;
          v135 = _NSConcreteStackBlock;
          uint64_t v136 = v98;
          v137 = sub_1000666D8;
          v138 = &unk_1006973E8;
          long long v107 = _Block_copy(&v135);
          swift_retain();
          v108 = v125;
          static DispatchQoS.unspecified.getter();
          *(void *)&v157[0] = _swiftEmptyArrayStorage;
          sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000CBE70((uint64_t *)&unk_100705390);
          sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
          v109 = v126;
          uint64_t v110 = v123;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_group.notify(qos:flags:queue:execute:)();
          _Block_release(v107);

          (*(void (**)(unsigned char *, uint64_t))(v128 + 8))(v109, v110);
          (*(void (**)(unsigned char *, uint64_t))(v122 + 8))(v108, v127);
          swift_release();
          swift_release();
          return;
        }
      }
      dispatch_group_leave(v103);
      swift_unknownObjectRelease();
      ++v97;
    }
    while (v100 != v96);
    swift_bridgeObjectRelease();
    if (v121) {
      goto LABEL_110;
    }
  }
  else
  {
LABEL_114:
    swift_bridgeObjectRelease();
  }
  static os_signpost_type_t.event.getter();
  updated = (void *)updatePointsOfInterestHandler.getter();
  v112 = v132;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(unsigned char *, uint64_t))(v133 + 8))(v112, v134);
  sub_100016400();
}

void sub_100029D58()
{
  uint64_t v1 = v0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for SetFilenameExtensionVisibilityIntent();
  uint64_t v2 = (objc_class *)type metadata accessor for UIAppIntentInteraction();
  objc_allocWithZone(v2);
  sub_1000CC05C(&qword_10071D2A0, (void (*)(uint64_t))&type metadata accessor for SetFilenameExtensionVisibilityIntent);
  swift_retain();
  uint64_t v3 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  [v4 addInteraction:v3];
  swift_release();

  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for SetGroupingModeIntent();
  objc_allocWithZone(v2);
  sub_1000CC05C(&qword_10071D2B8, (void (*)(uint64_t))&type metadata accessor for SetGroupingModeIntent);
  swift_retain();
  uint64_t v6 = (void *)UIAppIntentInteraction.init<A>(intent:perform:)();
  id v7 = [v1 view];
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v8 = v7;
  [v7 addInteraction:v6];
  swift_release();
}

void sub_100029F88(char *a1, double a2, double a3, double a4, double a5, double a6)
{
  *(double *)&a1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight] = a2;
  id v8 = (double *)&a1[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewContentInsets];
  *id v8 = a3;
  v8[1] = a4;
  void v8[2] = a5;
  v8[3] = a6;
  if (sub_100026738())
  {
    uint64_t v9 = self;
    id v10 = [v9 fractionalWidthDimension:1.0];
    id v11 = [v9 estimatedDimension:0.0];
    id v12 = [self sizeWithWidthDimension:v10 heightDimension:v11];

    id v13 = v12;
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self boundarySupplementaryItemWithLayoutSize:v13 elementKind:v14 alignment:1];

    id v16 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  objc_super v17 = self;
  id v18 = [v17 fractionalWidthDimension:1.0];
  id v19 = [v17 absoluteDimension:a2];
  id v20 = [self sizeWithWidthDimension:v18 heightDimension:v19];

  id v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [self boundarySupplementaryItemWithLayoutSize:v21 elementKind:v22 alignment:5];

  id v24 = v23;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v26 = [a1 configuration];
  sub_10009E6C4(0, (unint64_t *)&unk_10070AE00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 setBoundarySupplementaryItems:isa];

  [a1 setConfiguration:v26];
}

uint64_t sub_10002A31C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Bool __swiftcall DOCItemCollectionViewController.becomeKeyboardFocused()()
{
  if (([*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPopoverOrWidget] & 1) == 0)
  {
    uint64_t v1 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005A0030;
    uint64_t v3 = type metadata accessor for DOCItemCollectionViewController(0);
    *(void *)(v2 + 56) = v3;
    uint64_t v4 = sub_1000D4AA0(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v2 + 64) = v4;
    *(void *)(v2 + 32) = v0;
    uint64_t v5 = v0;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v6 = [v5 viewIfLoaded];
    if (v6 && (id v7 = v6, v8 = [v6 window], v7, v8))
    {
      unsigned int v9 = [v8 isKeyWindow];

      int v10 = v9 ^ 1;
    }
    else
    {
      int v10 = 1;
    }
    if (objc_msgSend(v5, "isFirstResponder", 1, 2) && !v10) {
      return 1;
    }
    id v11 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = v20;
    *(void *)(v12 + 56) = v3;
    *(void *)(v12 + 64) = v4;
    *(void *)(v12 + 32) = v5;
    id v13 = v5;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v14 = [v13 viewIfLoaded];
    id v15 = [v14 window];

    [v15 makeKeyAndVisible];
    if ([v13 becomeFirstResponder]) {
      return 1;
    }
    objc_super v17 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v20;
    *(void *)(v18 + 56) = v3;
    *(void *)(v18 + 64) = v4;
    *(void *)(v18 + 32) = v13;
    id v19 = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
  return 0;
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidLayoutSubviews()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self defaultCenter];
  if (qword_100704F30 != -1) {
    swift_once();
  }
  [v6 postNotificationName:static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews object:v1];

  id v7 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v32.receiver = v1;
  v32.super_class = v7;
  [super viewDidLayoutSubviews];
  id v8 = (void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens];
  swift_beginAccess();
  unint64_t v9 = (unint64_t)*v8;
  if (!((unint64_t)*v8 >> 62))
  {
    id v10 = *(id *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  id v10 = (id)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_26;
  }
LABEL_5:
  uint64_t v11 = sub_100005884(sub_1000BC324);
  if (v11) {
    goto LABEL_9;
  }
  if ((unint64_t)*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v13 = v29 - 1;
    if (!__OFSUB__(v29, 1)) {
      goto LABEL_8;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v12 = *(void *)(((unint64_t)*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v13 = v12 - 1;
  if (__OFSUB__(v12, 1)) {
    goto LABEL_30;
  }
LABEL_8:
  uint64_t v11 = sub_10005053C(v13, sub_1000BC324);
LABEL_9:
  unint64_t v9 = v11;
  swift_endAccess();
  id v14 = [self sharedGenerator];
  [v14 endBatching:v9];

  sub_10001ECEC();
  id v15 = [v1 presentedViewController];
  id v10 = [v15 popoverPresentationController];

  if (!v10) {
    goto LABEL_14;
  }
  sub_1000CBE70(&qword_10070A2E0);
  if (qword_100704E60 != -1) {
    goto LABEL_27;
  }
LABEL_11:
  uint64_t v16 = sub_10009D098(v2, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
  objc_super v17 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  uint64_t v18 = v31;
  if (v31)
  {
    uint64_t v19 = swift_retain();
    v18(v19);
    sub_1000A7258((uint64_t)v18);
    sub_1000A7258((uint64_t)v18);
  }

LABEL_14:
  id v20 = sub_10009E55C();
  [v20 enclosingUIPHorizontalInset];
  double v22 = v21;

  id v23 = sub_10009E55C();
  double v24 = 0.0;
  if ([v23 contextPrefersVariableBlurBottomTabBar])
  {
    sub_100034698();
    UITraitCollection.subscript.getter();
    double v24 = v25;
  }
  [v1 loadViewIfNeeded];
  id v26 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v26) {
    goto LABEL_31;
  }
  [v26 setVerticalScrollIndicatorInsets:0.0, -v22, v24, -v22];

  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 0;
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] == 1) {
    sub_1001C6FE0();
  }
  uint64_t v27 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive;
  if ((v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0
    || v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] != 1)
  {
    goto LABEL_24;
  }
  char v28 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v28)
  {
    if (([v28 isGathering] & 1) == 0) {
      sub_1000D54D8();
    }
LABEL_24:
    v1[v27] = 0;

    return;
  }
LABEL_32:
  __break(1u);
}

void sub_10002AB38(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return;
  }
  id v8 = a1;
  id v9 = [v2 sceneIdentifier];
  if (v9)
  {
    id v28 = v9;

    id v10 = v28;

    return;
  }
  id v11 = [v8 windowScene];
  uint64_t v12 = v11;
  if (v11)
  {
    id v13 = [v11 session];

    id v14 = [v13 persistentIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v17 = [v2 hostIdentifier];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      UUID.init()();
      UUID.uuidString.getter();
      uint64_t v16 = v24;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_18;
    }
  }
  if (!v16)
  {
    NSString v25 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
LABEL_18:
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_20:
  [v2 setStateIdentifier:v25];

  if (v16)
  {
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v26 = 0;
  }
  [v2 setSceneIdentifier:v26];
}

void sub_10002AE48()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self protectedAppsEnabled])
  {
    static Logger.UI.getter();
    id v5 = v0;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v20 = v2;
      uint64_t v9 = v8;
      uint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v21 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005F8230, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 12) = 2112;
      uint64_t v21 = (uint64_t)v5;
      id v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v18 = v5;

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[PROTECTED APPS] %s: self: %@", (uint8_t *)v9, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    id v11 = self;
    id v12 = [v11 defaultCenter];
    [v12 addObserver:v5 selector:"appProtectionStatusChangedWithNotification:" name:DOCAppProtectionStatusDidChangeNotification object:0];

    id v13 = [v11 defaultCenter];
    [v13 addObserver:v5 selector:"setProtectedStateToLockedForDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];

    id v14 = [v11 defaultCenter];
    [v14 addObserver:v5 selector:"setProtectedStateToLockedForDidEnterBackground" name:NSExtensionHostDidEnterBackgroundNotification object:0];

    id v15 = [v11 defaultCenter];
    [v15 addObserver:v5 selector:"updateProtectedStateForDidEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];

    id v16 = [v11 defaultCenter];
    [v16 addObserver:v5 selector:"updateProtectedStateForDidEnterForeground" name:NSExtensionHostWillEnterForegroundNotification object:0];
  }
}

uint64_t sub_10002B248()
{
  uint64_t v16 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v16);
  uint64_t v1 = sub_1000CBE70(&qword_10071B420);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCSplitViewState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v0 traitCollection];
  id v9 = [v0 splitBrowserViewController];
  id v10 = [v9 doc_splitViewState];

  static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = [v0 configuration];
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  id v12 = v8;
  static DOCTabSwitcherStyle.preferredStyle(for:traitCollection:splitState:)();

  sub_1000CBBA4((uint64_t)v3, &qword_10071B420);
  UIViewController.traitOverrides.getter();
  UIMutableTraits.enclosingTabSwitcherStyle.setter();
  UIViewController.traitOverrides.setter();
  id v13 = [v0 splitBrowserViewController];
  UIViewController.traitOverrides.getter();
  UIMutableTraits.enclosingTabSwitcherStyle.setter();
  UIViewController.traitOverrides.setter();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_10002B534(char *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  *(void *)&a1[*a4] = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = a1;
  swift_bridgeObjectRelease();
  sub_10002B5D4(a4, a5);
}

uint64_t sub_10002B5D4(uint64_t *a1, void *a2)
{
  unint64_t v3 = (unint64_t)sub_10007679C();
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = *a1;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = (char *)*(id *)(v4 + 8 * v7 + 32);
      }
      id v10 = v9;
      *(void *)&v9[*a2] = *(void *)(v20 + v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      id v12 = [v10 viewIfLoaded];
      id v13 = [v12 window];

      if (v13)
      {
        int v14 = v10[v11];
        if (v14 != 2)
        {
          sub_1000A6AA0();
          char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if ((valid & 1) == 0)
          {
            if (objc_msgSend(v10, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              uint64_t v16 = v10;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v17 = v14 & 1;
                uint64_t v19 = *((void *)&v23 + 1);
                uint64_t v18 = v24;
                sub_1000A6B78(&v22, *((uint64_t *)&v23 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(v17, v19, v18);
                sub_10009B1B8((uint64_t)&v22);
              }
              else
              {
                uint64_t v24 = 0;
                long long v22 = 0u;
                long long v23 = 0u;
                sub_100240A64((uint64_t)&v22);
              }
              v10[v11] = 2;
            }
          }
        }
      }

      ++v7;
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

char *DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation] = 0;
  uint64_t v7 = &v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock];
  *(void *)uint64_t v7 = a3;
  *((void *)v7 + 1) = a4;
  *(void *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_configuration] = a1;
  *(void *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver] = a2;
  type metadata accessor for DOCSourceOrderStrategy();
  uint64_t v8 = swift_allocObject();
  sub_1000CBE70(&qword_100715008);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = _swiftEmptyArrayStorage;
  unint64_t v10 = sub_10004F004(inited);
  swift_setDeallocating();
  uint64_t v11 = v4;
  swift_retain();
  id v12 = a1;
  id v13 = a2;
  sub_1000CBE70(&qword_100715010);
  swift_arrayDestroy();
  *(void *)(v8 + 16) = v10;
  *(void *)&v11[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_strategy] = v8;

  v27.receiver = v11;
  v27.super_class = (Class)type metadata accessor for DOCSourceOrderObserver();
  [super init];
  sub_10004EE00();
  uint64_t v15 = (char *)v14;
  uint64_t v16 = (void *)static NSUserDefaults.docUserDefaults.getter();
  if (v16)
  {
    v26[0] = v16;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation];
  *(void *)&v15[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation] = v17;

  uint64_t v19 = *(void **)&v15[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver];
  uint64_t v20 = *(void *)&v15[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_configuration];
  uint64_t v21 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  v26[4] = sub_1000D74E8;
  v26[5] = v21;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = (id)1107296256;
  v26[2] = sub_1000704F8;
  v26[3] = &unk_1006AB3D8;
  long long v22 = _Block_copy(v26);
  swift_release();
  id v23 = [v19 addSubscriberForConfiguration:v20 usingBlock:v22];
  _Block_release(v22);
  uint64_t v24 = *(void **)&v15[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken];
  *(void *)&v15[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken] = v23;

  swift_release();
  return v15;
}

void sub_10002BB30(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (v7)
  {
    id v28 = v7;
    if ([v28 isAppLaunchOptimizationsActive])
    {
      id v8 = v28;
    }
    else
    {
      static Logger.StateStore.getter();
      id v9 = a1;
      unint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.debug.getter();
      int v12 = v11;
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        uint64_t v30 = v27;
        *(_DWORD *)uint64_t v13 = 136315394;
        int v26 = v12;
        uint64_t v29 = sub_10009B0E4(0xD000000000000018, 0x80000001005E0530, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v13 + 12) = 2080;
        id v14 = [v9 session:v13 + 14];
        id v15 = [v14 persistentIdentifier];

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v18 = v17;

        uint64_t v29 = sub_10009B0E4(v16, v18, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v26, "%s: identifier: %s became foreground. Updating to most recent scene state.", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v19 = self;
      id v20 = [v19 sharedStore];
      id v21 = [v28 configuration];
      id v22 = [v20 interfaceStateForConfiguration:v21];

      if (v22)
      {
        id v23 = [v19 sharedStore];
        id v24 = [v28 configuration];
        [v23 updateInterfaceState:v22 forConfiguration:v24];
      }
    }
  }
}

id DOCItemCollectionViewController.description.getter()
{
  uint64_t v1 = v0;
  if ([v0 isViewLoaded])
  {
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005A0030;
    id result = [v1 view];
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v4 = result;
    *(void *)(v2 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    *(void *)(v2 + 64) = sub_1000C5A24(&qword_10070A1A8, (unint64_t *)&qword_10070A1A0);
    *(void *)(v2 + 32) = v4;
    uint64_t v5 = String.init(format:_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = (void *)0xE600000000000000;
    uint64_t v5 = 0x296C6C756E28;
  }
  v44.receiver = v1;
  v44.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  id v8 = [super description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  unint64_t v45 = v9;
  unint64_t v46 = v11;
  v12._Swift::Int countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._Swift::Int countAndFlagsBits = v5;
  v13._object = v7;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._Swift::Int countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  id v15 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  id v16 = [*(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  v20._Swift::Int countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  unint64_t v22 = v45;
  unint64_t v21 = v46;
  id v23 = (void *)*((void *)v15 + 3);
  if (v23)
  {
    unint64_t v45 = 32;
    unint64_t v46 = 0xE100000000000000;
    id v24 = v23;
    id v25 = [v24 shortDescription];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v28 = v27;

    v29._Swift::Int countAndFlagsBits = v26;
    v29._object = v28;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    uint64_t v30 = v45;
    uint64_t v31 = (void *)v46;
    unint64_t v45 = v22;
    unint64_t v46 = v21;
    swift_bridgeObjectRetain();
    v32._Swift::Int countAndFlagsBits = v30;
    v32._object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v22 = v45;
    unint64_t v33 = v46;
    id v34 = [v24 representedTag];
    if (v34)
    {
      uint64_t v35 = v34;
      unint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      unint64_t v45 = 0xD000000000000012;
      unint64_t v46 = 0x80000001005DA2C0;
      id v36 = [v35 displayName];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      v40._Swift::Int countAndFlagsBits = v37;
      v40._object = v39;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      uint64_t v41 = v45;
      uint64_t v42 = (void *)v46;
      unint64_t v45 = v22;
      unint64_t v46 = v33;
      swift_bridgeObjectRetain();
      v43._Swift::Int countAndFlagsBits = v41;
      v43._object = v42;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (id)v45;
    }
    else
    {
    }
  }
  return (id)v22;
}

uint64_t sub_10002C234()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = (char *)result;
  if (!result) {
    return v1 == 0;
  }
  uint64_t v2 = *(void *)(*(void *)(result + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData) + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v4 = 32;
    while (2)
    {
      switch(*(unsigned char *)(*(void *)(v2 + v4) + 16))
      {
        case 5:
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          break;
        default:
          char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          if ((v5 & 1) == 0)
          {
            swift_unknownObjectRelease();
            v4 += 16;
            if (--v3) {
              continue;
            }
            swift_bridgeObjectRelease_n();
            __break(1u);
          }
          break;
      }
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for DOCMutableSidebarSection();
    uint64_t v6 = swift_dynamicCastClassUnconditional();
    if (sub_1000255D4(v6))
    {
      uint64_t v7 = &v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad];
      swift_beginAccess();
      uint64_t v8 = *(void *)v7;
      if (*(void *)(*(void *)v7 + 16))
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v11 = v9 & ~v10;
        if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
        {
          uint64_t v12 = ~v10;
          while (2)
          {
            switch(*(unsigned char *)(*(void *)(v8 + 48) + v11))
            {
              case 5:
                swift_bridgeObjectRelease();
                char v14 = 0;
                break;
              default:
                char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if ((v13 & 1) == 0)
                {
                  unint64_t v11 = (v11 + 1) & v12;
                  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11)) {
                    continue;
                  }
                }
                char v14 = v13 ^ 1;
                break;
            }
            break;
          }
        }
        else
        {
          char v14 = 1;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        char v14 = 1;
      }
      if (*(uint64_t *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] <= 0) {
        sub_10004DBB0(v14 & 1, 1);
      }
      else {
        sub_1002861DC();
      }
    }

    swift_unknownObjectRelease();
    return v1 == 0;
  }
  __break(1u);
  return result;
}

unint64_t sub_10002C630()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 8 * result + 32);
LABEL_8:
    uint64_t v3 = (uint64_t)v5;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_10002C714(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  Swift::Int v9 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v10 = [WeakRetained sourceObserverQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100014B88;
    block[3] = &unk_100689488;
    objc_copyWeak(&v14, v7);
    id v12 = v5;
    id v13 = v6;
    dispatch_async(v10, block);

    objc_destroyWeak(&v14);
  }
}

uint64_t sub_10002C81C()
{
  uint64_t v1 = type metadata accessor for Logger();
  unint64_t v2 = *(void (**)(char *, uint64_t))(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  id v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v45 - v10;
  __chkstk_darwin(v9);
  id v12 = (char *)&v45 - v11;
  static Logger.UI.getter();
  id v13 = v0;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  id v48 = v8;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v47 = v1;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    unint64_t v46 = v2;
    v52[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    id v51 = (id)sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DCDD0, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    id v51 = [*(id *)((char *)v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v20 = String.init<A>(describing:)();
    id v51 = (id)sub_10009B0E4(v20, v21, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s - BEGIN source: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v47;
    swift_slowDealloc();

    unint64_t v22 = (void (*)(char *, uint64_t))*((void *)v46 + 1);
  }
  else
  {

    unint64_t v22 = (void (*)(char *, uint64_t))*((void *)v2 + 1);
  }
  v22(v12, v1);
  id v23 = (uint64_t *)((char *)v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts);
  swift_beginAccess();
  id v24 = v49;
  if (!((unint64_t)*v23 >> 62))
  {
    if (*(uint64_t *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_6;
    }
LABEL_20:
    static Logger.UI.getter();
    unint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v49 = v5;
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      id v51 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      id v50 = (id)sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DCDD0, (uint64_t *)&v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s - pendingNodeContexts == 0, returning ", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return ((uint64_t (*)(char *, uint64_t))v22)(v49, v1);
    }
    else
    {

      return ((uint64_t (*)(char *, uint64_t))v22)(v5, v1);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v32 < 1) {
    goto LABEL_20;
  }
LABEL_6:
  static Logger.UI.getter();
  id v25 = v13;
  uint64_t v26 = Logger.logObject.getter();
  LOBYTE(v27) = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled((os_log_t)v26, (os_log_type_t)v27);
  unint64_t v46 = v22;
  if (!v28)
  {

    v22(v24, v1);
    goto LABEL_11;
  }
  uint64_t v47 = v1;
  id v13 = (_WORD *)swift_slowAlloc();
  id v51 = (id)swift_slowAlloc();
  *(_DWORD *)id v13 = 136315394;
  id v50 = (id)sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DCDD0, (uint64_t *)&v51);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  v13[6] = 2048;
  if ((unint64_t)*v23 >> 62) {
    goto LABEL_29;
  }
  uint64_t v29 = *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    id v50 = (id)v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v26, (os_log_type_t)v27, "%s - pendingNodeContexts == %ld, keep going", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v1 = v47;
    v46(v49, v47);
LABEL_11:
    uint64_t v26 = *v23;
    if ((unint64_t)*v23 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      if (!v27) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v27) {
        goto LABEL_24;
      }
    }
    if (v27 >= 1) {
      break;
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((v26 & 0xC000000000000001) != 0)
    {
      uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v31 = *(void *)(v26 + 8 * i + 32);
      swift_retain();
    }
    sub_1001CE504(v31, (uint64_t)v25);
    swift_release();
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  uint64_t v37 = v48;
  static Logger.UI.getter();
  uint64_t v38 = v25;
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    id v51 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315394;
    id v50 = (id)sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DCDD0, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 2080;
    id v50 = [*(id *)&v38[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v42 = String.init<A>(describing:)();
    id v50 = (id)sub_10009B0E4(v42, v43, (uint64_t *)&v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s - END source: %s", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    objc_super v44 = v48;
  }
  else
  {

    objc_super v44 = v37;
  }
  return ((uint64_t (*)(char *, uint64_t))v46)(v44, v1);
}

void sub_10002D100()
{
  uint64_t v1 = (id *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  if (*v1)
  {
    unint64_t v2 = *v1;
    sub_10009DE78(v2, 1);
  }
  id v3 = [v0 childViewControllers];
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_5:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      type metadata accessor for DOCBrowserContainedViewController();
      uint64_t v9 = (void *)swift_dynamicCastClass();
      if (v9) {
        sub_10009DE78(v9, 1);
      }
    }
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_10002D270()
{
  id v3 = *(void **)(v0 + 264);
  if (!v3)
  {
    uint64_t v10 = *(void **)(v0 + 248);
LABEL_37:
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  id v4 = [*(id *)(v0 + 264) members];
  sub_10009E6C4(0, &qword_100707CB0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      id v4 = (id)v5;
    }
    else {
      id v4 = (id)(v5 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v35 = v3;
  if (v6)
  {
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_50;
    }
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      if ([v8 memberType] || (objc_msgSend(v9, "isMe") & 1) != 0)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t)_swiftEmptyArrayStorage;
  *(void *)(v0 + 272) = _swiftEmptyArrayStorage;
  static Logger.DocumentManager.getter();
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v13 = 134217984;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
      || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
    }
    else
    {
      uint64_t v14 = _swiftEmptyArrayStorage[2];
    }
    swift_release();
    *(void *)(v0 + 176) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Files Family Tip, adultsInFamily count %ld", v13, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  os_log_type_t v34 = (BOOL *)(v0 + 300);

  unint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
  v2(*(void *)(v0 + 216), *(void *)(v0 + 192));
  id v15 = [v3 me];
  if (v15)
  {
    uint64_t v1 = v15;
    id v4 = [v15 memberType];
    if (qword_100705228 == -1)
    {
LABEL_25:
      uint64_t v16 = sub_1000CBE70(&qword_10070AB30);
      sub_10009D098(v16, (uint64_t)qword_100716CE8);
      *os_log_type_t v34 = v4 == 0;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();

      goto LABEL_26;
    }
LABEL_50:
    swift_once();
    goto LABEL_25;
  }
LABEL_26:
  uint64_t v17 = v0 + 302;
  static Logger.DocumentManager.getter();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 67109120;
    if (qword_100705228 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1000CBE70(&qword_10070AB30);
    sub_10009D098(v21, (uint64_t)qword_100716CE8);
    swift_beginAccess();
    uint64_t v17 = v0 + 302;
    Tips.Parameter.wrappedValue.getter();
    int v22 = *(unsigned __int8 *)(v0 + 302);
    swift_endAccess();
    *(_DWORD *)(v0 + 296) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Files Family Tip, user isAdult %{BOOL}d", v20, 8u);
    swift_slowDealloc();
    id v3 = v35;
  }
  uint64_t v23 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 192);

  v2(v23, v24);
  if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (*(uint64_t *)(v5 + 16) >= 1) {
      goto LABEL_33;
    }
LABEL_36:
    uint64_t v10 = *(void **)(v0 + 248);

    swift_release();
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v33 < 1) {
    goto LABEL_36;
  }
LABEL_33:
  if (qword_100705220 != -1) {
    swift_once();
  }
  char v25 = *(unsigned char *)(v17 + 1);
  uint64_t v26 = sub_1000CBE70(&qword_10070AB30);
  sub_10009D098(v26, (uint64_t)qword_100716CD0);
  *(unsigned char *)(v0 + 301) = 1;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (v25) {
    goto LABEL_36;
  }
  uint64_t v29 = *(void *)(v0 + 248);
  sub_1000D4774(v29 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher, v0 + 16);
  sub_1000A6B78((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v30 = v29 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  uint64_t v31 = *(void *)(v30 + 8);
  *(void *)(v0 + 280) = v31;
  swift_bridgeObjectRetain();
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_1001BBF38;
  return sub_100388E0C(v31, v5);
}

id sub_10002D954()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage);
  swift_beginAccess();
  unint64_t v2 = *(void **)(v1 + 40);
  if (v2)
  {
    swift_retain();
    id v3 = v2;
  }
  else
  {
    uint64_t v4 = qword_100705278;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    id v5 = [(id)qword_100737698 ellipsisMenuItemImageName];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    id v9 = objc_allocWithZone((Class)type metadata accessor for DOCSymbolImageBarButtonItem());
    id v10 = sub_100021078(v6, v8, 3);
    UIMenuElementSize v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    NSString v12 = String._bridgeToObjectiveC()();
    uint64_t children = sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    UIMenuElementSize v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1005A04F0;
    uint64_t v14 = self;
    aBlock[4] = (UIMenuElementSize)sub_10028E60C;
    aBlock[5] = v11;
    aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (UIMenuElementSize)sub_100514064;
    void aBlock[3] = (UIMenuElementSize)&unk_10069D760;
    id v15 = _Block_copy(aBlock);
    id v16 = v10;
    id v17 = v12;
    swift_retain();
    swift_release();
    id v18 = [v14 elementWithUncachedProvider:v15];
    _Block_release(v15);
    *(void *)(v13 + 32) = v18;
    aBlock[0] = v13;
    specialized Array._endMutation()();
    v19._Swift::Int countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v27.value.super.Class isa = 0;
    v27.Swift::Bool is_nil = (char)v12;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v27, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], (Swift::OpaquePointer)children).super.super.isa;
    [v16 setMenu:isa];
    swift_release();

    *(void *)(v1 + 40) = v16;
    type metadata accessor for DOCBarButtonItemGroup();
    UIMenuElementSize v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1005A04F0;
    *(void *)(v21 + 32) = v16;
    aBlock[0] = v21;
    specialized Array._endMutation()();
    id v3 = v16;
    uint64_t v22 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    unint64_t v2 = 0;
    *(void *)(v1 + 32) = v22;
  }
  swift_endAccess();
  id v23 = v2;
  swift_release();
  return v3;
}

char *sub_10002DCB0(void *a1, void *a2)
{
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarHasActiveFocus] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_isObservingSectionDataProviders] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSomeUnseenSources] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController____lazy_storage___notificationsController] = 0;
  id v5 = &v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedNotificationRegistration];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_favoritesSubscriber] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_recentlyUsedFavoritesSubscriber] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSeenInitiallyGatheredFavorites] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber] = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] = 1;
  *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount] = 0;
  v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive] = 1;
  uint64_t v7 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon;
  uint64_t v8 = v2;
  *(void *)&v2[v7] = sub_1000D3A64((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession] = 0;
  v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_shouldStopEditingOnFinishedEdit] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_swipeToDeletePresentation] = 0;
  uint64_t v9 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  sub_1000D6FB0(3, 0.5);
  *(void *)&v8[v9] = v10;
  UIMenuElementSize v11 = &v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath];
  uint64_t v12 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  UIMenuElementSize v13 = &v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  *(void *)UIMenuElementSize v13 = 0;
  unsigned char v13[24] = -1;
  uint64_t v14 = &v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier];
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection;
  type metadata accessor for DOCSidebarViewController.LocationSelection();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)&v8[v15] = v16;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_searchController] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesVisitedObserver] = 0;
  uint64_t v17 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad;
  *(void *)&v8[v17] = sub_100030A64((uint64_t)&off_10068A788);
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_lastSearchDisplayMode] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  uint64_t v18 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage;
  type metadata accessor for DOCSidebarViewController.BBIStorage();
  Swift::String v19 = (_OWORD *)swift_allocObject();
  v19[1] = 0u;
  v19[2] = 0u;
  v19[3] = 0u;
  *(void *)&v8[v18] = v19;
  uint64_t v20 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_actionManager;
  *(void *)&v8[v20] = [objc_allocWithZone((Class)type metadata accessor for DOCActionManager()) init];
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_customActions] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_contextMenuInteraction] = 0;
  v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_modelDidUpdateDuringUIChange] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_debugOptionsMenu] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceObserver] = a2;
  uint64_t v21 = sub_10009E6C4(0, (unint64_t *)&qword_100707730);
  id v22 = a2;
  uint64_t v23 = static NSUserDefaults.docUserDefaults.getter();
  if (v23)
  {
    *((void *)&v44 + 1) = v21;
    uint64_t v45 = (void (*)())&off_1006AE850;
    *(void *)&long long v43 = v23;
  }
  else
  {
    uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
  }
  type metadata accessor for DOCSourceVisibilityController();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0xD00000000000001FLL;
  *(void *)(v24 + 24) = 0x80000001005E2B50;
  *(void *)(v24 + 80) = _swiftEmptyArrayStorage;
  id v25 = a1;
  *(void *)(v24 + 88) = String._bridgeToObjectiveC()();
  *(_OWORD *)(v24 + 96) = 0u;
  *(_OWORD *)(v24 + 112) = 0u;
  sub_1000CBE0C((uint64_t)&v43, v24 + 32, &qword_10070CE68);
  *(void *)(v24 + 72) = v25;
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController] = v24;
  type metadata accessor for DOCMutableSidebarData();
  *(_WORD *)(swift_allocObject() + 40) = 0;
  id v26 = v25;
  swift_retain();
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData] = sub_100050640(v26, v24, 1);
  *(void *)&v8[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] = v26;
  id v27 = v26;

  id v28 = objc_allocWithZone((Class)UICollectionViewLayout);
  id v29 = [v28 init:v43];
  uint64_t v30 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v47.receiver = v8;
  v47.super_class = v30;
  [super initWithCollectionViewLayout:v29];

  uint64_t v32 = (char *)v31;
  sub_10003F49C();
  uint64_t v33 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  uint64_t v34 = *(void *)&v32[OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer];
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = *(void *)(v34 + 32);
  *(void *)(v34 + 32) = sub_10028E4AC;
  *(void *)(v34 + 40) = v35;
  sub_1000A7258(v36);
  uint64_t v37 = *(void *)&v32[v33];
  uint64_t v38 = *(void *)(v37 + 48);
  *(void *)(v37 + 48) = sub_10028C63C;
  *(void *)(v37 + 56) = 0;
  sub_1000A7258(v38);
  id v39 = [self shared];
  uint64_t v40 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v45 = sub_1000D6EB8;
  uint64_t v46 = v40;
  *(void *)&long long v43 = _NSConcreteStackBlock;
  *((void *)&v43 + 1) = 1107296256;
  *(void *)&long long v44 = sub_1000666D8;
  *((void *)&v44 + 1) = &unk_10069D5F8;
  uint64_t v41 = _Block_copy(&v43);
  swift_release();
  [v39 performAfterLaunchAlwaysAsync:0 block:v41];

  _Block_release(v41);
  return v32;
}

uint64_t sub_10002E2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (void *)result;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    v17._Swift::Int countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._Swift::Int countAndFlagsBits = 0xD000000000000017;
    v18._object = (void *)0x80000001005FC770;
    String.append(_:)(v18);
    swift_beginAccess();
    v19._Swift::Int countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._object = (void *)0x80000001005FC790;
    v20._Swift::Int countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v20);
    sub_1000CDE40(91, 0xE100000000000000);
    uint64_t v21 = swift_bridgeObjectRelease();
    __chkstk_darwin(v21);
    sub_10000B540(a7, (void (*)(unsigned char *, unsigned char *))sub_100500444);
    _StringGuts.grow(_:)(37);
    swift_bridgeObjectRelease();
    v22._Swift::Int countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._Swift::Int countAndFlagsBits = 0xD000000000000022;
    v23._object = (void *)0x80000001005FC7B0;
    String.append(_:)(v23);
    sub_1000CDE40(91, 0xE100000000000000);
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = a9;
    void v24[3] = v16;
    v24[4] = a2;
    v24[5] = a3;
    v24[6] = a4;
    v24[7] = a5;
    v24[8] = a8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1000D68A0;
    *(void *)(v25 + 24) = v24;
    swift_retain();
    id v26 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000877C0();
    swift_release();
    swift_release();
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    v27._Swift::Int countAndFlagsBits = static String._fromSubstring(_:)();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._Swift::Int countAndFlagsBits = 0xD000000000000014;
    v28._object = (void *)0x80000001005FC7E0;
    String.append(_:)(v28);
    sub_1000CDE40(91, 0xE100000000000000);

    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_10002E650()
{
  uint64_t v1 = v0;
  unint64_t v2 = type metadata accessor for Logger();
  id v3 = *(char ***)(v2 - 8);
  id result = (id)__chkstk_darwin(v2);
  uint64_t v6 = (uint64_t)&v77[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v7)
  {
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  uint64_t v8 = v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v8 + 16))
  {
    uint64_t v9 = *(void **)(*(void *)v8 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v9 = *(void **)(v8 + 8);
    swift_unknownObjectRetain();
    if (!v9) {
      goto LABEL_12;
    }
  }
  unsigned int v10 = [v9 isShared];
  swift_unknownObjectRelease();
  if (v10)
  {
    uint64_t v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView;
    uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView];
    UIMenuElementSize v13 = v12;
    uint64_t v14 = v12;
    if (v12)
    {
LABEL_9:
      *(void *)&v1[v11] = v14;
      id v16 = v12;
      id v17 = v14;

      id v18 = v17;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_1001C243C();
      goto LABEL_14;
    }
    sub_1001C1F10();
    if (v15)
    {
      uint64_t v14 = v15;
      UIMenuElementSize v13 = *(void **)&v1[v11];
      goto LABEL_9;
    }
  }
LABEL_12:
  Swift::String v19 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView];
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView] = 0;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_15;
  }
  id v18 = Strong;
  [Strong dismissViewControllerAnimated:1 completion:0];
LABEL_14:

LABEL_15:
  uint64_t v21 = sub_1000D5D88();
  if (v21)
  {
    id v22 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  Swift::String v23 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView];
  if (v23)
  {
    id v24 = v23;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if ((sub_100026AA8() & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView];
  if (!v25) {
    goto LABEL_29;
  }
  unint64_t v26 = v25;
  swift_retain();
  char v27 = sub_10039EA30();
  swift_release();
  if ((v27 & 1) == 0) {
    goto LABEL_28;
  }
  id v28 = (id)v26;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_90;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_28:

LABEL_29:
    if ((sub_100078760() & 1) != 0
      && v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable] == 1)
    {
      id v29 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager];
      if (v29)
      {
        id v30 = v29;
        static Logger.DocumentManager.getter();
        id v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Files Family Tip, adding tipsHeaderView", v33, 2u);
          swift_slowDealloc();
        }

        uint64_t v34 = v3[1];
        ++v3;
        ((void (*)(uint64_t, unint64_t))v34)(v6, v2);
        uint64_t v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView;
        uint64_t v36 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView];
        if (v36)
        {
          id v37 = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView];
        }
        else
        {
          id v37 = sub_100149458();
          uint64_t v36 = 0;
        }
        id v38 = v36;
        id v39 = v37;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v40 = *(void **)&v1[v35];
        *(void *)&v1[v35] = v39;
        id v41 = v39;

        uint64_t v42 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess();
        long long v43 = *(void **)&v1[v35];
        if (v43)
        {
          double v44 = 0.0;
          if (*v42 == 2) {
            double v44 = 16.0;
          }
          [v43 setDirectionalLayoutMargins:v44, 0.0, 16.0, 0.0];
        }
      }
    }
    id v45 = sub_10002F164();
    id v46 = [v45 arrangedSubviews];

    sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    unint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v48)
    {
      if (v78 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v76 > 0) {
          goto LABEL_55;
        }
      }
      else if (*(uint64_t *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
      {
        goto LABEL_55;
      }
    }
    id v49 = sub_10002F164();
    id v50 = [v49 arrangedSubviews];

    unint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v52 >= 1)
    {
      if (!(v78 >> 62))
      {
        if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
LABEL_55:
        v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 1;
        goto LABEL_56;
      }
      swift_bridgeObjectRetain();
      uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v75) {
        goto LABEL_55;
      }
    }
LABEL_56:
    id v53 = sub_10002F164();
    id v54 = [v53 arrangedSubviews];

    unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v78;
    swift_bridgeObjectRetain();
    LOBYTE(v54) = sub_1000D3338(v26, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v54) {
      return (id)swift_bridgeObjectRelease();
    }
    id v56 = sub_10002F164();
    id v57 = [v56 arrangedSubviews];

    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        goto LABEL_68;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_68;
      }
    }
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_89;
    }
    unint64_t v26 = 0;
    id v3 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v58 = *(id *)(v2 + 8 * v26 + 32);
      }
      uint64_t v59 = v58;
      ++v26;
      id v60 = sub_10002F164();
      [v60 removeArrangedSubview:v59];

      [v59 removeFromSuperview];
    }
    while (v6 != v26);
LABEL_68:
    swift_bridgeObjectRelease_n();
    unint64_t v2 = v78;
    if (v78 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        goto LABEL_77;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v6) {
        goto LABEL_77;
      }
    }
    if (v6 >= 1) {
      break;
    }
LABEL_89:
    __break(1u);
LABEL_90:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v61 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v62 = *(id *)(v2 + 8 * v61 + 32);
    }
    double v63 = v62;
    ++v61;
    id v64 = sub_10002F164();
    [v64 addArrangedSubview:v63];
  }
  while (v6 != v61);
LABEL_77:
  swift_bridgeObjectRelease_n();
  [v1 loadViewIfNeeded];
  uint64_t v65 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  id result = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result) {
    goto LABEL_92;
  }
  id v66 = [result collectionViewLayout];
  ObjCClassFromObject = (void *)swift_getObjCClassFromObject();

  [ObjCClassFromObject invalidationContextClass];
  swift_getObjCClassMetadata();
  sub_10009E6C4(0, &qword_10070ADD8);
  swift_dynamicCastMetatypeUnconditional();
  id v68 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  swift_bridgeObjectRetain();
  id result = [v1 loadViewIfNeeded];
  uint64_t v69 = *(void **)&v1[v65];
  if (!v69) {
    goto LABEL_93;
  }
  id v70 = v69;
  NSString v71 = String._bridgeToObjectiveC()();
  Class isa = (Class)[v70 indexPathsForVisibleSupplementaryElementsOfKind:v71];

  if (!isa)
  {
    type metadata accessor for IndexPath();
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  NSString v73 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v68 invalidateSupplementaryElementsOfKind:v73 atIndexPaths:isa];

  [v1 loadViewIfNeeded];
  id result = *(id *)&v1[v65];
  if (result)
  {
    id v74 = [result collectionViewLayout];
    [v74 invalidateLayoutWithContext:v68];

    swift_arrayDestroy();
    return (id)swift_bridgeObjectRelease();
  }
LABEL_94:
  __break(1u);
  return result;
}

id sub_10002F164()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:1];
    [v4 setLayoutMarginsRelativeArrangement:1];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

Swift::Int sub_10002F214()
{
  return Hasher._finalize()();
}

uint64_t sub_10002F270()
{
  sub_10002F2C8();

  return swift_deallocClassInstance();
}

uint64_t sub_10002F2C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel__showFilenameExtensions;
  uint64_t v2 = sub_1000CBE70(&qword_100712008);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel__selectedGroupingBehavior;
  uint64_t v4 = sub_1000CBE70(&qword_100712010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel__selectedSortMode;
  uint64_t v6 = sub_1000CBE70(&qword_100712018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel__selectedSizeSetting;
  uint64_t v8 = sub_1000CBE70(&qword_100712020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super viewDidLoad];
  [v0 loadViewIfNeeded];
  uint64_t v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_19;
  }
  [v3 setShowsHorizontalScrollIndicator:0];
  [v0 loadViewIfNeeded];
  uint64_t v4 = *(void **)&v0[v2];
  if (!v4)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  [v4 _setShouldPersistSelectionOnReloadDataWhenPossible:1];
  uint64_t v5 = self;
  id v6 = [v5 defaultCenter];
  if (qword_100704F20 != -1) {
    swift_once();
  }
  [v6 addObserver:v1 selector:"didUpdateCollectionViewIsScrollEnabledWithNotification:" name:qword_100736F00 object:0];

  id v7 = [v5 defaultCenter];
  if (qword_100704F28 != -1) {
    swift_once();
  }
  [v7 addObserver:v1 selector:"didUpdateCollectionViewContentOffsetWithNotification:" name:qword_100736F08 object:0];

  sub_10002194C();
  unsigned int v8 = [v1 isEditing];
  uint64_t v9 = *(void **)&v1[v2];
  if (v9)
  {
    int v10 = v8;
    id v11 = v9;
    uint64_t v12 = v1;
    sub_100011DFC(v11, v12, v10);
  }
  sub_10001E85C();
  sub_1000B00FC(0);
  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v13) {
    goto LABEL_20;
  }
  sub_100034EF8();
  sub_100021AA0();
  uint64_t v14 = (void *)static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.getter();
  id v15 = [self mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_100705D60);
  if ((*(unsigned char *)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
    || (id v16 = *(id *)(v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
        unsigned int v17 = objc_msgSend(v16, "doc_displaysSearchResults"),
        v16,
        !v17))
  {
LABEL_17:
    id v23 = [self shared];
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v26[4] = sub_1000D5E40;
    v26[5] = v24;
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 1107296256;
    v26[2] = sub_1000666D8;
    v26[3] = &unk_1006957C8;
    uint64_t v25 = _Block_copy(v26);
    swift_release();
    [v23 performAfterLaunch:v25];
    _Block_release(v25);

    sub_100015E9C();
    return;
  }
  id v18 = [v1 view];
  if (v18)
  {
    Swift::String v19 = v18;
    id v20 = [v1 effectiveAppearance];
    if (!v20
      || (uint64_t v21 = v20,
          id v22 = [v20 backgroundColor],
          v21,
          !v22))
    {
      id v22 = [self systemBackgroundColor];
    }
    [v19 setBackgroundColor:v22];

    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v68 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v70.receiver = v2;
  v70.super_class = v11;
  [super viewWillAppear:a1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = (id)Strong;
    id v14 = [v2 parentViewController];
    if (v14 && (id v15 = v14, v14, v15 == v13))
    {
      id v16 = [v2 view];
      if (!v16)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      unsigned int v17 = v16;
      id v18 = [v16 superview];

      if (!v18)
      {
        id v19 = [v13 view];
        if (!v19)
        {
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        id v20 = v19;
        [v19 bounds];
        double v22 = v21;
        double v24 = v23;
        double v26 = v25;
        double v28 = v27;

        [v17 setFrame:v22, v24, v26, v28];
        [v17 setAutoresizingMask:18];
        id v29 = [v13 view];
        if (!v29)
        {
LABEL_43:
          __break(1u);
          return;
        }
        id v30 = v29;
        [v29 addSubview:v17];

        [v13 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
        sub_10006936C();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
  [v2 loadViewIfNeeded];
  uint64_t v67 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  id v31 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v31)
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  os_log_type_t v32 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  id v33 = v31;
  NSString v34 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration();
  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v33 setFocusGroupIdentifier:v34];

  uint64_t v35 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v35) {
    goto LABEL_40;
  }
  if ([v35 isGathering])
  {
    sub_1001CCF30();
  }
  else
  {
    swift_beginAccess();
    unint64_t v36 = swift_bridgeObjectRetain();
    sub_10001D9AC(v36);
    swift_bridgeObjectRelease();
  }
  if (!*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext]) {
    sub_100016C84();
  }
  sub_10007D85C();
  if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] == 1)
  {
    if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
    {
      id v38 = sub_1000373B0();
      if (*v37 != 2) {
        v37[1] = 1;
      }
      ((void (*)(void *, void))v38)(aBlock, 0);
      swift_beginAccess();
      id v39 = swift_bridgeObjectRetain();
      sub_10007A41C(v39, 2);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v66 = static OS_dispatch_queue.main.getter();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v2;
    aBlock[4] = sub_10020C588;
    aBlock[5] = v40;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_100695818;
    uint64_t v65 = _Block_copy(aBlock);
    id v41 = v2;
    swift_release();
    uint64_t v42 = v10;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v43 = v68;
    sub_1000CBE70((uint64_t *)&unk_100705390);
    uint64_t v64 = v7;
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    double v44 = v65;
    id v45 = (void *)v66;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v42, v64);
  }
  uint64_t v46 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
  if ((v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0)
  {
    unint64_t v47 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    sub_10000F3B0(*(void *)v47 == 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  sub_10003A61C((unint64_t)_swiftEmptyArrayStorage, 0, 0);
  sub_10001B01C();
  uint64_t v48 = self;
  id v49 = [v48 defaultCenter];
  id v50 = self;
  id v51 = [v50 willShowMenuNotification];
  [v49 addObserver:v2 selector:"menuControllerWillShow" name:v51 object:0];

  id v52 = [v48 defaultCenter];
  id v53 = [v50 willHideMenuNotification];
  [v52 addObserver:v2 selector:"menuControllerWillHide" name:v53 object:0];

  sub_10002AE48();
  sub_1000B0690();
  if ([v32 forPickingDocuments] && (id v54 = sub_100082AD8()) != 0)
  {

    int v55 = v2[v46];
    v2[v46] = 1;
    [v2 setEditing:1 animated:0];
    if (v55 == v2[v46])
    {
      if (!v2[v46]) {
        return;
      }
      goto LABEL_37;
    }
  }
  else
  {
    char v56 = v2[v46];
    v2[v46] = 0;
    if ((v56 & 1) == 0) {
      return;
    }
  }
  unsigned int v57 = [v2 isEditing];
  id v58 = *(void **)&v2[v67];
  if (v58)
  {
    int v59 = v57;
    id v60 = v2;
    id v61 = v58;
    sub_100011DFC(v61, v60, v59);
  }
  if (v2[v46])
  {
LABEL_37:
    swift_beginAccess();
    id v62 = swift_bridgeObjectRetain();
    sub_10007A41C(v62, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000301E0(void *a1, unint64_t a2)
{
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_16;
    }
  }
  else if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_16;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
      if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
      {
        swift_bridgeObjectRelease_n();
LABEL_19:
        id v19 = [self defaultPermission];
        id v20 = a1;
        id v17 = v19;
        char v16 = sub_100030420(a2, (uint64_t)v20, v17);

        goto LABEL_20;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_19;
      }
LABEL_17:
      id v17 = a1;
      char v16 = sub_10018AB54(a2, (uint64_t)v17);
LABEL_20:

      return v16 & 1;
    }
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15 <= 1000) {
      goto LABEL_17;
    }
  }
  else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 1000)
  {
    goto LABEL_17;
  }
LABEL_16:
  char v16 = 0;
  return v16 & 1;
}

uint64_t sub_100030420(unint64_t a1, uint64_t a2, void *a3)
{
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void **)(a1 + 8 * v7);
          swift_unknownObjectRetain();
          uint64_t v10 = v7 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        if (![v9 canPerform:a2])
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return 0;
        }
        unsigned __int8 v11 = [a3 canHostAppPerformAction:1 targetNode:v9];
        swift_unknownObjectRelease();
        if ((v11 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
        ++v7;
      }
      while (v10 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

Swift::Void __swiftcall DOCBrowserContainerController.viewIsAppearing(_:)(Swift::Bool a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super viewIsAppearing:a1];
  if ((v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC5Files17DOCViewController_appearStateTracker];
    unint64_t v4 = v1;
    swift_retain();
    sub_100030784(v4, v3, (unsigned __int8 *)v4);
    swift_release();

    id v5 = [v4 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v8 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v9 = *(id *)(v6 + 8 * v8 + 32);
          }
          uint64_t v10 = v9;
          ++v8;
          [v9 endAppearanceTransition];
          [v10 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
        }
        while (v7 != v8);
      }
    }
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100030784(void *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(a2 + 16))
  {
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v11)
      {
LABEL_4:
        if (*(unsigned char *)(a2 + 17) == 1)
        {
          *(unsigned char *)(a2 + 17) = 0;
          uint64_t result = sub_1004535FC(a1);
          if (result)
          {
            static Logger.UI.getter();
            uint64_t v12 = a1;
            uint64_t v13 = Logger.logObject.getter();
            os_log_type_t v14 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v13, v14))
            {
              uint64_t v15 = (uint8_t *)swift_slowAlloc();
              char v18 = (void *)swift_slowAlloc();
              id v19 = v15;
              id v20 = v12;
              *(_DWORD *)uint64_t v15 = 138412290;
              id v17 = v15 + 4;
              char v16 = v12;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v18 = v12;

              _os_log_impl((void *)&_mh_execute_header, v13, v14, "WARNING: performing skipped .appearing work for %@", v19, 0xCu);
              sub_1000CBE70(&qword_100707CC0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              uint64_t v13 = v12;
            }

            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            return (uint64_t)sub_100334CE0(a3);
          }
        }
      }
      return result;
  }
}

uint64_t sub_100030A64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000D7AC8();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    unint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_100030AD8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100030AD8(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  id v19 = a1;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100030E80(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    char v18 = v19;
    goto LABEL_28;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v11 = 7368564;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        uint64_t v11 = 0x796C746E65636572;
        unint64_t v10 = 0xEC00000064657355;
        break;
      case 2:
        uint64_t v11 = 0x6E6F697461636F6CLL;
        goto LABEL_7;
      case 3:
        uint64_t v11 = 0x657469726F766166;
LABEL_7:
        unint64_t v10 = 0xE900000000000073;
        break;
      case 4:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x73726576726573;
        break;
      case 5:
        unint64_t v10 = 0xE400000000000000;
        uint64_t v11 = 1936154996;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE300000000000000;
    uint64_t v13 = 7368564;
    switch((char)a2)
    {
      case 1:
        unint64_t v12 = 0xEC00000064657355;
        if (v11 == 0x796C746E65636572) {
          goto LABEL_19;
        }
        goto LABEL_20;
      case 2:
        uint64_t v14 = 0x6E6F697461636F6CLL;
        goto LABEL_15;
      case 3:
        uint64_t v14 = 0x657469726F766166;
LABEL_15:
        unint64_t v12 = 0xE900000000000073;
        if (v11 != v14) {
          goto LABEL_20;
        }
        goto LABEL_19;
      case 4:
        unint64_t v12 = 0xE700000000000000;
        uint64_t v13 = 0x73726576726573;
        goto LABEL_18;
      case 5:
        unint64_t v12 = 0xE400000000000000;
        if (v11 != 1936154996) {
          goto LABEL_20;
        }
        goto LABEL_19;
      default:
LABEL_18:
        if (v11 != v13) {
          goto LABEL_20;
        }
LABEL_19:
        if (v10 != v12)
        {
LABEL_20:
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_27;
          }
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_25;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        char v18 = v19;
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_28:
        unsigned char *v18 = a2;
        return result;
    }
  }
}

Swift::Int sub_100030E80(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1000F0E14();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1000F3D98();
        goto LABEL_32;
      }
      sub_1000F5DE4();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7368564;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x796C746E65636572;
            unint64_t v11 = 0xEC00000064657355;
            break;
          case 2:
            uint64_t v12 = 0x6E6F697461636F6CLL;
            goto LABEL_15;
          case 3:
            uint64_t v12 = 0x657469726F766166;
LABEL_15:
            unint64_t v11 = 0xE900000000000073;
            break;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x73726576726573;
            break;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1936154996;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 7368564;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xEC00000064657355;
            if (v12 == 0x796C746E65636572) {
              goto LABEL_26;
            }
            goto LABEL_27;
          case 2:
            unint64_t v13 = 0xE900000000000073;
            if (v12 != 0x6E6F697461636F6CLL) {
              goto LABEL_27;
            }
            goto LABEL_26;
          case 3:
            uint64_t v14 = 0x657469726F766166;
            unint64_t v13 = 0xE900000000000073;
            goto LABEL_25;
          case 4:
            unint64_t v13 = 0xE700000000000000;
            if (v12 != 0x73726576726573) {
              goto LABEL_27;
            }
            goto LABEL_26;
          case 5:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1936154996) {
              goto LABEL_27;
            }
            goto LABEL_26;
          default:
LABEL_25:
            if (v12 != v14) {
              goto LABEL_27;
            }
LABEL_26:
            if (v11 == v13) {
              goto LABEL_35;
            }
LABEL_27:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_36;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_32:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_35:
    swift_bridgeObjectRelease_n();
LABEL_36:
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_100031238()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100031280(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16))(a1, a2, *a3);
}

void *sub_1000312AC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000312B4(a1, a2, a3);
}

void *sub_1000312B4(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v7 = (void *)Strong;
    uint64_t v8 = _s5Files31DOCItemCollectionViewControllerC010collectionD0_11cellForNode2atSo012UICollectionD4CellCSo0kD0C_So7DOCNode_p10Foundation9IndexPathVtF_0(a1, a3, a2);
  }
  else
  {
    uint64_t v9 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.fault.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10059B760;
    swift_getObjectType();
    uint64_t v11 = DOCNode.nodeDescription.getter();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    unint64_t v14 = sub_100073F48();
    *(void *)(v10 + 64) = v14;
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    type metadata accessor for IndexPath();
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v10 + 96) = &type metadata for String;
    *(void *)(v10 + 104) = v14;
    *(void *)(v10 + 72) = v15;
    *(void *)(v10 + 80) = v16;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return [objc_allocWithZone((Class)UICollectionViewCell) init];
  }
  return v8;
}

void sub_1000314A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained setObservationCount:[WeakRetained observationCount] + 1];
    BOOL v2 = (unint64_t)[v5 observationCount] > 1;
    id WeakRetained = v5;
    if (!v2)
    {
      uint64_t v3 = [v5 startObservingLegacyPickers];
      [v5 setLegacyPickersObserverContext:v3];

      [v5 setDefaultSaveLocationObserverContext:[v5 startObservingDefaultSaveLocation]];
      unint64_t v4 = [v5 providerDomainsFINodeObserver];
      [v4 startObserving:3];

      [v5 updateProviderNodes];
      id WeakRetained = v5;
    }
  }
}

void sub_1000316B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000317BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000317F4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (char *)Strong;
    uint64_t v45 = v6;
    uint64_t v46 = a3;
    uint64_t v11 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    uint64_t v12 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    uint64_t v13 = __chkstk_darwin(Strong);
    v39[-2] = v13;
    __chkstk_darwin(v13);
    v39[-2] = sub_1000CB168;
    v39[-1] = v14;
    swift_retain();
    os_unfair_lock_lock(v12 + 4);
    sub_1000CB0F0(aBlock);
    os_unfair_lock_unlock(v12 + 4);
    unint64_t v15 = aBlock[0];
    swift_release();
    uint64_t v16 = sub_1000D24AC(v15);
    swift_bridgeObjectRelease();
    if (v16)
    {
      uint64_t v44 = 0;
      static Logger.Enumeration.getter();
      uint64_t v17 = v10;
      swift_bridgeObjectRetain_n();
      BOOL v18 = v17;
      uint64_t v19 = Logger.logObject.getter();
      int v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, (os_log_type_t)v20))
      {
        uint64_t v40 = v5;
        int v41 = v20;
        os_log_t v42 = v19;
        uint64_t v43 = v11;
        v39[1] = v16;
        uint64_t v21 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136446722;
        uint64_t v47 = sub_10009B0E4(0xD00000000000002BLL, 0x80000001005EFA60, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v21 + 12) = 2080;
        v39[2] = v21 + 14;
        id v22 = [*(id *)&v18[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] displayName];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        uint64_t v47 = sub_10009B0E4(v23, v25, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 22) = 2048;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v27 = v45;
        uint64_t v28 = v46;
        swift_bridgeObjectRelease();
        uint64_t v47 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        os_log_t v29 = v42;
        _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v41, "%{public}s: with DOCNode %s : %ld descriptors", (uint8_t *)v21, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v40);
        uint64_t v11 = v43;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v5);
        uint64_t v28 = v46;
      }
      *(void *)&v18[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v18[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v30 = (unint64_t)sub_10001AB88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if (v30 >> 62)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        uint64_t v31 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        uint64_t v31 = v30;
      }
      uint64_t v32 = swift_bridgeObjectRelease();
      id v33 = *(os_unfair_lock_s **)&v10[v11];
      uint64_t v34 = __chkstk_darwin(v32);
      v39[-2] = v18;
      v39[-1] = v31;
      __chkstk_darwin(v34);
      v39[-2] = sub_1000D7258;
      v39[-1] = v35;
      swift_retain();
      os_unfair_lock_lock(v33 + 4);
      sub_1000D8B60();
      os_unfair_lock_unlock(v33 + 4);
      swift_release();
      swift_bridgeObjectRelease();
      if (sub_1000D7150())
      {
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v18;
        aBlock[4] = (uint64_t)sub_1003BB31C;
        aBlock[5] = v36;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1000666D8;
        void aBlock[3] = (uint64_t)&unk_1006A73F0;
        id v37 = _Block_copy(aBlock);
        id v38 = v18;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v37);
      }
    }
  }
}

char *sub_100031E20(void *a1, uint64_t a2, void *a3, uint64_t a4, char *a5)
{
  v35[3] = type metadata accessor for FamilyFetcher();
  v35[4] = &off_1006A5950;
  v35[0] = a2;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC5Files14DOCTipsManager_fileManager;
  uint64_t v11 = self;
  uint64_t v12 = a5;
  *(void *)&a5[v10] = [v11 defaultManager];
  uint64_t v13 = OBJC_IVAR____TtC5Files14DOCTipsManager_fpItemManager;
  *(void *)&v12[v13] = [self defaultManager];
  uint64_t v14 = &v12[OBJC_IVAR____TtC5Files14DOCTipsManager_familyFolderFilePath];
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)&v12[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTipView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files14DOCTipsManager_sharingFlowTask] = 0;
  swift_unknownObjectWeakAssign();
  sub_1000D4774((uint64_t)v35, (uint64_t)&v12[OBJC_IVAR____TtC5Files14DOCTipsManager_familyFetcher]);
  *(void *)&v12[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTip] = a4;
  if (a3)
  {
    uint64_t v16 = self;
    swift_retain();
    id v17 = a3;
    id v18 = [v16 defaultPermission];
    id v19 = [v18 userActionForConfiguration:v17];

    id v20 = [v17 hostIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v21 = objc_allocWithZone((Class)DOCSourceObserver);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 initWithUserAction:v19 hostIdentifier:v22];

    *(void *)&v12[OBJC_IVAR____TtC5Files14DOCTipsManager_sourceObserver] = v23;
    id v24 = v23;
    [v24 startObservingSources];
  }
  else
  {
    *(void *)&v12[OBJC_IVAR____TtC5Files14DOCTipsManager_sourceObserver] = 0;
    swift_retain();
  }

  v34.receiver = v12;
  v34.super_class = (Class)type metadata accessor for DOCTipsManager(0);
  unint64_t v25 = (char *)[super init];
  if (DOCIsInternalBuild())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707730);
    uint64_t v26 = static NSUserDefaults.docUserDefaults.getter();
    if (v26)
    {
      uint64_t v27 = (void *)v26;
      NSString v28 = String._bridgeToObjectiveC()();
      unsigned __int8 v29 = [v27 BOOLForKey:v28];

      if (v29) {
        static Tips.showAllTipsForTesting()();
      }
    }
  }
  type metadata accessor for DOCTipsFamilyTip();
  sub_100078438(&qword_100707CE8, (void (*)(uint64_t))type metadata accessor for DOCTipsFamilyTip);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v30 = objc_allocWithZone((Class)type metadata accessor for TipUIView());
  swift_retain();
  swift_retain();
  uint64_t v31 = TipUIView.init(_:arrowEdge:actionHandler:)();

  swift_release();
  sub_10009B1B8((uint64_t)v35);
  swift_release();
  uint64_t v32 = *(void **)&v25[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTipView];
  *(void *)&v25[OBJC_IVAR____TtC5Files14DOCTipsManager_familySharedFolderTipView] = v31;

  return v25;
}

uint64_t sub_10003224C(unint64_t a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits)) {
    goto LABEL_17;
  }
  swift_retain();
  sub_10004B1F0((uint64_t)v59);
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16) <= (int64_t)a1)
  {
    sub_10004B470((uint64_t)v59);
LABEL_17:
    unsigned __int8 v29 = self;
    id v30 = [v29 fractionalWidthDimension:0.2];
    id v31 = [v29 fractionalHeightDimension:1.0];
    uint64_t v32 = self;
    id v33 = [v32 sizeWithWidthDimension:v30 heightDimension:v31];

    id v34 = [self itemWithLayoutSize:v33];
    id v35 = [v29 fractionalWidthDimension:1.0];
    id v36 = [v29 fractionalHeightDimension:0.2];
    id v37 = [v32 sizeWithWidthDimension:v35 heightDimension:v36];

    id v38 = self;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1005A04F0;
    *(void *)(v39 + 32) = v34;
    uint64_t v57 = v39;
    specialized Array._endMutation()();
    sub_10009E6C4(0, &qword_10070AEC8);
    id v40 = v34;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v42 = [v38 horizontalGroupWithLayoutSize:v37 isa:v57];

    id v43 = [self sectionWithGroup:v42];
    return (uint64_t)v43;
  }
  char v4 = sub_10008BD6C();
  uint64_t v5 = (void **)&v61;
  uint64_t v6 = (double *)v60;
  if (v4) {
    uint64_t v6 = (double *)&v63;
  }
  double v7 = *v6;
  if (v4) {
    uint64_t v5 = (void **)v64;
  }
  uint64_t v8 = *v5;
  if (v4) {
    uint64_t v9 = (double *)&v62;
  }
  else {
    uint64_t v9 = (double *)v59;
  }
  double v10 = *v9;
  id v11 = v8;
  uint64_t result = sub_10008BD6C();
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(*(void *)v3 + 16) > a1)
  {
    if ((*(unsigned char *)(*(void *)(*(void *)v3 + 40 * a1 + 64) + 24) & 1) == 0)
    {
      uint64_t v46 = self;
      id v47 = [v46 fractionalWidthDimension:1.0];
      id v48 = [v46 fractionalHeightDimension:1.0];
      id v49 = self;
      id v17 = [v49 sizeWithWidthDimension:v47 heightDimension:v48];

      id v50 = [self itemWithLayoutSize:v17];
      id v51 = [v46 absoluteDimension:v10];
      id v52 = [v46 absoluteDimension:v7];
      id v21 = [v49 sizeWithWidthDimension:v51 heightDimension:v52];

      id v53 = self;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1005A04F0;
      *(void *)(v54 + 32) = v50;
      uint64_t v58 = v54;
      specialized Array._endMutation()();
      sub_10009E6C4(0, &qword_10070AEC8);
      id v24 = v50;
      Class v55 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v26 = [v53 horizontalGroupWithLayoutSize:v21 subitems:v55, v58];

      id v43 = [self sectionWithGroup:v26];
      [v11 spacing];
      [v43 setInterGroupSpacing:];
      [v43 setOrthogonalScrollingBehavior:1];
LABEL_21:

      [v43 setSupplementaryContentInsetsReference:1];
      [v43 setContentInsetsReference:2];
      [v43 setContentInsets:v64[2], v64[3], v64[4], v64[5]];
      sub_1000D4F7C(v43);

      sub_10004B470((uint64_t)v59);
      return (uint64_t)v43;
    }
LABEL_14:
    uint64_t v13 = self;
    id v14 = [v13 absoluteDimension:v10];
    id v15 = [v13 fractionalHeightDimension:1.0];
    uint64_t v16 = self;
    id v17 = [v16 sizeWithWidthDimension:v14 heightDimension:v15];

    id v18 = [self itemWithLayoutSize:v17];
    id v19 = [v13 fractionalWidthDimension:1.0];
    id v20 = [v13 absoluteDimension:v7];
    id v21 = [v16 sizeWithWidthDimension:v19 heightDimension:v20];

    NSString v22 = self;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1005A04F0;
    *(void *)(v23 + 32) = v18;
    uint64_t v56 = v23;
    specialized Array._endMutation()();
    sub_10009E6C4(0, &qword_10070AEC8);
    id v24 = v18;
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v26 = [v22 horizontalGroupWithLayoutSize:v21 subitems:v25, v56];

    if (sub_10008BD6C())
    {
      uint64_t v27 = self;
      [v11 spacing];
      id v28 = [v27 fixedSpacing];
      [v26 setInterItemSpacing:v28];
    }
    else
    {
      [v26 setInterItemSpacing:v11];
    }
    id v44 = [self sectionWithGroup:v26];
    uint64_t v45 = (void *)v60[1];
    id v43 = v44;
    [v45 spacing];
    [v43 setInterGroupSpacing:];
    [v43 setOrthogonalScrollingBehavior:0];
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t DOCItemCollectionViewController.acceptsKeyboardFocus.getter()
{
  id v1 = [v0 viewIfLoaded];
  id v2 = [v1 superview];

  if (!v2) {
    return 0;
  }
  id v3 = [v0 presentedViewController];

  if (v3)
  {
    uint64_t result = (uint64_t)[v0 presentedViewController];
    if (!result) {
      return result;
    }
    uint64_t v5 = (void *)result;
    unsigned int v6 = [(id)result isBeingDismissed];

    if (!v6) {
      return 0;
    }
  }
  if ((v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    return 0;
  }
  uint64_t result = (uint64_t)[v0 canBecomeFirstResponder];
  if (!result) {
    return result;
  }
  double v7 = &v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled];
  swift_beginAccess();
  if (*v7 != 1) {
    return 0;
  }
  uint64_t v8 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v8 != 2) {
    return 1;
  }
  swift_beginAccess();
  uint64_t v9 = v0;
  unint64_t v10 = swift_bridgeObjectRetain();
  unint64_t v11 = (unint64_t)sub_10029D798(v10, v9);
  swift_bridgeObjectRelease();

  if (v11 >> 62) {
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v12 > 0;
}

uint64_t sub_100032CFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FileEntityIdentifier();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void sub_100033510(uint64_t a1)
{
  id v2 = v1;
  uint64_t v77 = type metadata accessor for OSSignpostID();
  uint64_t v78 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)static DOCLog.UI.getter();
  uint64_t v6 = static os_log_type_t.default.getter();
  id v79 = (char *)sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v7 = swift_allocObject();
  long long v75 = xmmword_1005A0030;
  *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
  uint64_t v8 = *(char **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v8) {
    goto LABEL_65;
  }
  uint64_t v9 = (char **)v7;
  uint64_t v74 = a1;
  unint64_t v10 = v8;
  if ((v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0) {
    unint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  v9[7] = (char *)v12;
  uint64_t v13 = sub_1000C5A24((unint64_t *)&unk_1007069B0, (unint64_t *)&qword_100706710);
  v9[8] = (char *)v13;
  v9[4] = (char *)v11;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  sub_10001D548();
  if (v14 != 0.0)
  {
    double v16 = v15;
    if (v15 != 0.0)
    {
      if (*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits])
      {
        int64_t v17 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
      }
      else
      {
        double v18 = v14;
        id v19 = (void *)static DOCLog.UI.getter();
        uint64_t v6 = static os_log_type_t.error.getter();
        uint64_t v9 = (char **)swift_allocObject();
        *((_OWORD *)v9 + 1) = v75;
        if ((v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0) {
          uint64_t v8 = *(char **)&v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        }
        id v20 = v8;
        v9[7] = (char *)v12;
        v9[8] = (char *)v13;
        v9[4] = v20;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v11 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                + 16];
        id v21 = [v2 traitCollection];
        double left = UIEdgeInsetsZero.left;
        double bottom = UIEdgeInsetsZero.bottom;
        double right = UIEdgeInsetsZero.right;
        type metadata accessor for DOCItemCollectionLayoutTraits();
        swift_allocObject();
        int64_t v17 = sub_10004A178(v11, v21, v18, v16, UIEdgeInsetsZero.top, left, bottom, right);
      }
      swift_retain();
      sub_10004AF48(v25, v16);
      uint64_t v27 = v26;
      if ((unint64_t)v74 >> 62)
      {
        if (v74 < 0) {
          uint64_t v11 = v74;
        }
        else {
          uint64_t v11 = v74 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        unint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v28 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if ((uint64_t)v28 < v27) {
        uint64_t v27 = v28;
      }
      if (v27 < 0)
      {
        __break(1u);
      }
      else
      {
        unsigned __int8 v29 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
        swift_beginAccess();
        unint64_t v28 = *((void *)v29 + 1);
        uint64_t v11 = v28 >> 62;
        if (!(v28 >> 62))
        {
          uint64_t v30 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v30 >= v27) {
            goto LABEL_18;
          }
          goto LABEL_61;
        }
      }
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter() < 0)
      {
LABEL_66:
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain();
      uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v70 >= v27)
      {
LABEL_18:
        uint64_t v74 = v17;
        if (v27 && (v28 & 0xC000000000000001) != 0)
        {
          for (Swift::Int i = 0; i != v27; ++i)
          {
            sub_1000CBE70((uint64_t *)&unk_100706730);
            _ArrayBuffer._typeCheckSlowPath(_:)(i);
          }
        }
        if (v11)
        {
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.subscript.getter();
          uint64_t v33 = v34;
          uint64_t v32 = v35;
          unint64_t v37 = v36;
          swift_bridgeObjectRelease_n();
          uint64_t v27 = v37 >> 1;
        }
        else
        {
          uint64_t v32 = 0;
          uint64_t v33 = (v28 & 0xFFFFFFFFFFFFFF8) + 32;
        }
        v80[0] = _swiftEmptyArrayStorage;
        id v38 = (char *)(v27 - v32);
        if (v27 != v32)
        {
          if (v27 <= v32)
          {
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          uint64_t v53 = v33 + 8 * v32;
          do
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            if (DOCNode.isCreateDocumentSentinel()())
            {
              swift_unknownObjectRelease();
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            v53 += 8;
            --v38;
          }
          while (v38);
        }
        uint64_t v9 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
        swift_unknownObjectRelease();
        int64_t v17 = v80[0];
        uint64_t v27 = static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        uint64_t v6 = swift_allocObject();
        *(_OWORD *)(v6 + 16) = v75;
        uint64_t v39 = ((unint64_t)v17 >> 62) & 1;
        if (v17 < 0) {
          LODWORD(v39) = 1;
        }
        LODWORD(v75) = v39;
        if (v39 != 1)
        {
          uint64_t v40 = *(void *)(v17 + 16);
LABEL_30:
          *(void *)(v6 + 56) = &type metadata for Int;
          *(void *)(v6 + 64) = &protocol witness table for Int;
          *(void *)(v6 + 32) = v40;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          static os_signpost_type_t.begin.getter();
          updated = (void *)updatePointsOfInterestHandler.getter();
          id v42 = v76;
          static OSSignpostID.exclusive.getter();
          os_signpost(_:dso:log:name:signpostID:_:_:)();

          uint64_t v43 = v78 + 8;
          id v44 = *(void (**)(char *, uint64_t))(v78 + 8);
          uint64_t v45 = v77;
          v44(v42, v77);
          double v46 = sub_10009611C((uint64_t)v80);
          id v47 = v9[385];
          id v79 = v2;
          id v48 = [v2 v47:v46];
          sub_100014D30(v17, (uint64_t)v80, v48);

          sub_10004B944((uint64_t)v80);
          static os_signpost_type_t.end.getter();
          id v49 = (void *)updatePointsOfInterestHandler.getter();
          static OSSignpostID.exclusive.getter();
          os_signpost(_:dso:log:name:signpostID:_:_:)();

          v44(v42, v45);
          static os_signpost_type_t.begin.getter();
          id v50 = (void *)updatePointsOfInterestHandler.getter();
          static OSSignpostID.exclusive.getter();
          os_signpost(_:dso:log:name:signpostID:_:_:)();

          uint64_t v78 = v43;
          NSString v73 = v44;
          v44(v42, v45);
          int v51 = v75;
          if (v75)
          {
            swift_retain();
            uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
            swift_release();
          }
          else
          {
            uint64_t v52 = *(void *)(v17 + 16);
          }
          if (!v52)
          {
            swift_release();
LABEL_52:
            static os_signpost_type_t.end.getter();
            uint64_t v68 = (void *)updatePointsOfInterestHandler.getter();
            uint64_t v69 = v76;
            static OSSignpostID.exclusive.getter();
            os_signpost(_:dso:log:name:signpostID:_:_:)();
            swift_release();

            v73(v69, v77);
            return;
          }
          uint64_t v54 = *(void *)&v79[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
          Class v55 = *(void **)(v54 + 24);
          id v79 = v79;
          [v55 lock];
          id v72 = v55;
          if (v51)
          {
            swift_bridgeObjectRetain();
            uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
            if (!v56) {
              goto LABEL_51;
            }
          }
          else
          {
            uint64_t v56 = *(void *)(v17 + 16);
            swift_bridgeObjectRetain();
            if (!v56)
            {
LABEL_51:
              swift_release();
              [v72 unlock];
              swift_release();
              uint64_t v67 = v79;

              goto LABEL_52;
            }
          }
          if (v56 >= 1)
          {
            uint64_t v57 = 0;
            unint64_t v58 = v17 & 0xC000000000000001;
            int64_t v59 = v17;
            do
            {
              if (v58)
              {
                uint64_t v60 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v60 = *(void *)(v17 + 8 * v57 + 32);
                swift_unknownObjectRetain();
              }
              ++v57;
              uint64_t v61 = v79;
              uint64_t v62 = (void *)sub_10013F824(v60, (uint64_t)sub_1001DF7C8, 0, v54, (uint64_t)v61);
              uint64_t v64 = v63;
              uint64_t v66 = v65;

              sub_10008D3E0(v62, v64, v66);
              swift_unknownObjectRelease();
              int64_t v17 = v59;
            }
            while (v56 != v57);
            goto LABEL_51;
          }
          goto LABEL_64;
        }
LABEL_62:
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        goto LABEL_30;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
  }
}

void sub_100033F8C(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = &v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering];
  v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = 0;
  *(_OWORD *)uint64_t v7 = xmmword_1005A2510;
  uint64_t v9 = v1;
  swift_bridgeObjectRelease();
  unint64_t v10 = &v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  *(void *)unint64_t v10 = a1;
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v40 = a1;
  id v11 = a1;
  LOBYTE(v7) = [v11 isGathering];
  swift_beginAccess();
  *uint64_t v8 = (_BYTE)v7;

  uint64_t v12 = (objc_class *)type metadata accessor for DOCNodeCollection();
  v43.receiver = v9;
  v43.super_class = v12;
  id v13 = [super init];
  static Logger.Enumeration.getter();
  id v14 = v11;
  id v15 = v13;
  id v16 = v14;
  id v17 = v15;
  id v18 = v16;
  id v19 = v17;
  id v20 = (char *)v18;
  id v21 = (char *)v19;
  NSString v22 = Logger.logObject.getter();
  int v23 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v22, (os_log_type_t)v23))
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_5;
  }
  int v35 = v23;
  unint64_t v37 = v6;
  uint64_t v38 = v4;
  uint64_t v39 = v3;
  uint64_t v24 = swift_slowAlloc();
  double v25 = (void *)swift_slowAlloc();
  uint64_t v36 = swift_slowAlloc();
  uint64_t v42 = v36;
  *(_DWORD *)uint64_t v24 = 136447234;
  unint64_t v26 = *(void *)&v21[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v26)
  {
    uint64_t v27 = *(void *)&v21[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_10009B0E4(v27, v26, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v41 = sub_10009B0E4(0xD00000000000001BLL, 0x80000001005D9090, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 22) = 2112;
    uint64_t v41 = (uint64_t)v21;
    unint64_t v28 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *double v25 = v21;

    *(_WORD *)(v24 + 32) = 2080;
    id v29 = [*(id *)&v20[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode] displayName];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    uint64_t v41 = sub_10009B0E4(v30, v32, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 42) = 2112;
    uint64_t v41 = (uint64_t)v20;
    uint64_t v33 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v25[1] = v40;

    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v35, "%{public}s %{public}s Init DOCNodeCollection (%@ with FINode: %s and FileSystemCollection %@", (uint8_t *)v24, 0x34u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
LABEL_5:
    *(void *)&v20[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate + 8] = &off_100694DF0;
    swift_unknownObjectWeakAssign();

    return;
  }

  __break(1u);
}

unint64_t sub_100034698()
{
  unint64_t result = qword_10070A2D8;
  if (!qword_10070A2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A2D8);
  }
  return result;
}

CFNotificationCenterRef sub_1000346EC(void *a1, void *a2, void *a3)
{
  id v51 = a3;
  double v46 = a1;
  id v47 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v40 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v38 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)type metadata accessor for Logger();
  id v49 = (void (**)(void, void))*(v5 - 1);
  id v50 = v5;
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v37 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v3;
  swift_unknownObjectWeakInit();
  uint64_t v43 = OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue;
  uint64_t v41 = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v13 = v3;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v44);
  id v14 = v12;
  *(void *)&v42[v43] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v13[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state] = 0;
  *(void *)&v13[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert] = 0;
  id v16 = v46;
  id v15 = v47;
  *(void *)&v13[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration] = v46;
  *(void *)&v13[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver] = v15;
  swift_unknownObjectWeakAssign();
  id v17 = v16;
  id v18 = v15;

  v54.receiver = v13;
  id v19 = v45;
  v54.super_class = ObjectType;
  id v20 = [super init];
  static Logger.UI.getter();
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    int v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[Default Source UI]: Init", v23, 2u);
    swift_slowDealloc();
  }

  ((void (**)(char *, id))v49)[1](v19, v50);
  if ([v17 isPickerUI])
  {

    return (CFNotificationCenterRef)v20;
  }
  id v49 = (void (**)(void, void))v17;
  id v50 = v18;
  uint64_t v24 = self;
  id v25 = [v24 defaultCenter];
  [v25 addObserver:v20 selector:"ubiquityIdentityDidChange:" name:NSUbiquityIdentityDidChangeNotification object:0];

  id v26 = [v24 defaultCenter];
  [v26 addObserver:v20 selector:"applicationDidBecomeActive:" name:UIApplicationDidBecomeActiveNotification object:0];

  CFNotificationCenterRef result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    unint64_t v28 = result;
    id v29 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterAddObserver(v28, v20, (CFNotificationCallback)sub_1003F9D44, v29, 0, CFNotificationSuspensionBehaviorDrop);

    uint64_t v30 = (__CFString *)String._bridgeToObjectiveC()();
    CFNotificationCenterAddObserver(v28, v20, (CFNotificationCallback)sub_1003F9D44, v30, 0, CFNotificationSuspensionBehaviorDrop);

    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v20;
    aBlock[4] = sub_1000D6C2C;
    aBlock[5] = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006AA408;
    unint64_t v32 = _Block_copy(aBlock);
    id v33 = v20;
    static DispatchQoS.unspecified.getter();
    uint64_t v52 = _swiftEmptyArrayStorage;
    sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v34 = v38;
    uint64_t v35 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v32);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v35);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
    swift_release();
    return (CFNotificationCenterRef)v20;
  }
  __break(1u);
  return result;
}

void sub_100034EF8()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v19 = v1;
    uint64_t v8 = swift_slowAlloc();
    id v17 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v21 = v18;
    *(_DWORD *)uint64_t v8 = 136446722;
    unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v9)
    {

      __break(1u);
      return;
    }
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10009B0E4(v10, v9, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v20 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005D9260, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v20 = (uint64_t)v5;
    uint64_t v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v17 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_100064614();
  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if (v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
  {
    uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    id v14 = v12;
    sub_1003AB120();
    sub_1000C71C8(v12, v13, 1);
  }
  else
  {
    id v15 = v12;
    [v15 doc_startObservationIfNeeded];
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.viewWillAppear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  v18.receiver = v1;
  v18.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super viewWillAppear:a1];
  if ((v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    id v4 = [v1 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_11;
      }
    }
    if (v6 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v7 = 0;
    BOOL v8 = a1;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v5 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      ++v7;
      [v9 beginAppearanceTransition:1 animated:v8];
      [v10 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
    }
    while (v6 != v7);
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_100035508();
    uint64_t v11 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
    v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
    unint64_t v12 = (unint64_t)sub_10007679C();
    unint64_t v13 = v12;
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14)
      {
LABEL_13:
        if (v14 >= 1)
        {
          for (uint64_t i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0) {
              uint64_t v16 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v16 = *(id *)(v13 + 8 * i + 32);
            }
            id v17 = v16;
            (*(void (**)(void))((swift_isaMask & *v16) + 0x208))(v2[v11]);
          }
          goto LABEL_20;
        }
LABEL_23:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_13;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
  }
}

void sub_100035508()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  if (*v1)
  {
    id v2 = [*v1 viewIfLoaded];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      id v5 = *v1;
      char v6 = *v1 == 0;
      if (Strong)
      {
        uint64_t v7 = (void *)Strong;
        if (v5)
        {
          type metadata accessor for DOCBrowserContainedViewController();
          id v8 = v5;
          id v9 = v7;
          char v6 = static NSObject.== infix(_:_:)();

          uint64_t v7 = v8;
        }
        else
        {
          char v6 = 0;
        }
      }
      [v3 setHidden:(v6 & 1) == 0];
    }
  }
}

id sub_100035618(uint64_t a1, void *a2, void *a3, uint64_t a4, unsigned char *a5, uint64_t a6)
{
  v90[1] = a6;
  uint64_t v105 = a4;
  uint64_t v106 = a3;
  unint64_t v97 = a2;
  uint64_t v107 = a1;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v95 = v7;
  uint64_t v96 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v91 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v92 = (char *)v90 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v93 = (char *)v90 - v14;
  __chkstk_darwin(v13);
  uint64_t v94 = (char *)v90 - v15;
  uint64_t v16 = type metadata accessor for OSSignpostID();
  uint64_t v103 = *(void *)(v16 - 8);
  uint64_t v104 = v16;
  __chkstk_darwin(v16);
  uint64_t v102 = (char *)v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v18 - 8);
  unint64_t v100 = (char *)v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v20 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  os_log_type_t v22 = (char *)v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v23);
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isGathering] = 1;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] = 0;
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = &_swiftEmptyArrayStorage;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving] = 0;
  uint64_t v24 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  sub_1000CBE70(qword_100714940);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  *(void *)&a5[v24] = v25;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] = 0;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 0;
  uint64_t v101 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source;
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source] = 0;
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken] = 0;
  uint64_t v98 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue;
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  v110[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  id v26 = a5;
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  uint64_t v27 = v106;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v99);
  static DispatchQoS.unspecified.getter();
  uint64_t v28 = v107;
  *(void *)&a5[v98] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_iCloudRootNodeObservation] = 0;
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = 0;
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors] = &_swiftEmptyArrayStorage;
  id v29 = &_swiftEmptySetSingleton;
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort] = &_swiftEmptySetSingleton;
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      sub_1004A0910((unint64_t)&_swiftEmptyArrayStorage);
    }
    else {
      id v29 = &_swiftEmptySetSingleton;
    }
  }
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates] = v29;
  uint64_t v30 = &v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval];
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval] = 100;
  uint64_t v31 = enum case for DispatchTimeInterval.milliseconds(_:);
  uint64_t v32 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  id v33 = &v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime];
  uint64_t v34 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 0;
  v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_dispatchedUpdateIsPending] = 0;
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer] = 0;
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode] = v28;
  uint64_t v35 = *(void **)&a5[v101];
  *(void *)&a5[v101] = v27;
  swift_unknownObjectRetain();
  id v36 = v27;

  if ((v105 & (unint64_t)&_mh_execute_header) != 0) {
    int v37 = 19;
  }
  else {
    int v37 = v105 | 0x13;
  }
  *(_DWORD *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions] = v37;
  static os_signpost_type_t.event.getter();
  updated = (void *)updatePointsOfInterestHandler.getter();
  uint64_t v39 = v102;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v103 + 8))(v39, v104);
  type metadata accessor for DOCRootNode();
  uint64_t v40 = swift_dynamicCastClass();
  uint64_t v41 = v27;
  uint64_t v42 = v28;
  if (v40)
  {
    uint64_t v43 = (void *)v40;
    swift_unknownObjectRetain();
    uint64_t v44 = v94;
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.info.getter();
    id v47 = &selRef_prepareForReuse;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      v110[0] = v105;
      *(_DWORD *)uint64_t v48 = 136446466;
      uint64_t v108 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v104 = v48 + 14;
      id v49 = [v43 source];
      id v50 = v41;
      id v51 = [v49 displayName];

      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v26;
      unint64_t v55 = v54;

      uint64_t v41 = v50;
      uint64_t v56 = v52;
      id v47 = &selRef_prepareForReuse;
      uint64_t v108 = sub_10009B0E4(v56, v55, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      id v26 = v53;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[DSEnumeration] %{public}s: node is RootNode so using underlyingNode: %s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v95);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v44, v95);
    }
    uint64_t v66 = v97;
    id v58 = [v43 v47[376]];
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  type metadata accessor for DOCICloudRootNode();
  uint64_t v57 = swift_dynamicCastClass();
  if (v57)
  {
    id v58 = (id)v57;
    swift_unknownObjectRetain();
    int64_t v59 = v93;
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      v110[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136446466;
      uint64_t v108 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v62 + 12) = 2080;
      uint64_t v63 = (void *)dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();

      if (v63) {
        uint64_t v64 = 0xD000000000000032;
      }
      else {
        uint64_t v64 = 0xD00000000000002ALL;
      }
      if (v63) {
        unint64_t v65 = 0x80000001005EF630;
      }
      else {
        unint64_t v65 = 0x80000001005EF670;
      }
      uint64_t v108 = sub_10009B0E4(v64, v65, v110);
      uint64_t v41 = v106;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "[DSEnumeration] %{public}s: node is DOCICloudRootNode, using: %s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v95);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v59, v95);
    }
    uint64_t v66 = v97;
    uint64_t v82 = dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();
    if (v82)
    {
      long long v83 = (void *)v82;
      swift_unknownObjectRelease();
      id v58 = v83;
    }
    goto LABEL_19;
  }
  self;
  uint64_t v77 = swift_dynamicCastObjCClass();
  if (v77)
  {
    id v58 = (id)v77;
    swift_unknownObjectRetain();
    uint64_t v78 = v92;
    static Logger.Enumeration.getter();
    id v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v79, v80))
    {
      id v81 = (uint8_t *)swift_slowAlloc();
      v110[0] = swift_slowAlloc();
      *(_DWORD *)id v81 = 136446210;
      uint64_t v108 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "[DSEnumeration] %{public}s: node is a regular node", v81, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v96 + 8))(v78, v95);
    uint64_t v66 = v97;
LABEL_19:
    *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v58;
    id v67 = 0;
    if (!v66) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  long long v84 = v91;
  static Logger.Enumeration.getter();
  swift_unknownObjectRetain_n();
  long long v85 = Logger.logObject.getter();
  os_log_type_t v86 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = swift_slowAlloc();
    v110[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v87 = 136446466;
    uint64_t v108 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v87 + 12) = 2080;
    uint64_t v88 = DOCNode.nodeDescription.getter();
    uint64_t v108 = sub_10009B0E4(v88, v89, v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v85, v86, "[DSEnumeration] %{public}s: DOCFileSystemCollection initiated with a non-FINode DOCNode %s", (uint8_t *)v87, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v96 + 8))(v91, v95);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v84, v95);
  }
  uint64_t v66 = v97;
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v42;
  swift_unknownObjectRetain();
  id v67 = 0;
  if (v66)
  {
LABEL_20:
    if (v41)
    {
      uint64_t v68 = self;
      id v69 = v66;
      id v70 = [v68 defaultPermission];
      id v71 = [v70 userActionForConfiguration:v69];

      id v72 = [v69 hostIdentifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v73 = objc_allocWithZone((Class)DOCSourceObserver);
      NSString v74 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v67 = [v73 initWithUserAction:v71 hostIdentifier:v74];
    }
  }
LABEL_22:
  *(void *)&v26[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver] = v67;

  long long v75 = (objc_class *)type metadata accessor for DOCFileSystemCollection();
  v109.receiver = v26;
  v109.super_class = v75;
  return [super init];
}

void sub_100036570()
{
  uint64_t v1 = v0;
  if ([v0 isViewLoaded])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
    if (v2)
    {
      uint64_t v3 = self;
      swift_retain();
      unsigned int v89 = [v3 areAnimationsEnabled];
      [v3 setAnimationsEnabled:0];
      [v0 loadViewIfNeeded];
      uint64_t v4 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
      id v5 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
      if (!v5)
      {
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      id v6 = [v5 panGestureRecognizer];
      unsigned int v85 = [v6 isEnabled];

      sub_10004B1F0((uint64_t)v105);
      sub_1000979F8();
      char v8 = v7;
      uint64_t v9 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      uint64_t v10 = *(void *)v9;
      id v11 = sub_10001BCE0();
      uint64_t v12 = (uint64_t)v11 + OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout;
      swift_beginAccess();
      v97[3] = (uint64_t)&type metadata for DOCItemCollectionCoreFooterAwareLayout;
      v97[4] = (uint64_t)&off_10069B110;
      v97[0] = swift_allocObject();
      sub_1000D3CE8(v12, v97[0] + 16);

      uint64_t v13 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
      swift_beginAccess();
      sub_10008C318((uint64_t)v97, v13, &qword_10070BBD0);
      swift_endAccess();
      [v1 loadViewIfNeeded];
      uint64_t v14 = *(void **)&v1[v4];
      if (!v14)
      {
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      unint64_t v15 = v10 - 1;
      uint64_t v16 = v106;
      BOOL v18 = v15 < 2 || v106 == 0;
      [v14 setAlwaysBounceVertical:v18];
      [v1 loadViewIfNeeded];
      uint64_t v19 = *(void **)&v1[v4];
      if (!v19) {
        goto LABEL_94;
      }
      BOOL v21 = v15 > 1 && v16 == 1;
      [v19 setAlwaysBounceHorizontal:v21];
      [v1 loadViewIfNeeded];
      uint64_t v91 = v4;
      os_log_type_t v22 = *(void **)&v1[v4];
      if (!v22) {
        goto LABEL_95;
      }
      int v23 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled];
      if (v23 == 2)
      {
        if (v15 >= 2) {
          char v8 = v107;
        }
      }
      else
      {
        char v8 = v23 & 1;
      }
      [v22 setScrollEnabled:v8 & 1];
      [v1 loadViewIfNeeded];
      uint64_t v24 = *(void **)&v1[v4];
      if (!v24) {
        goto LABEL_96;
      }
      [v24 setShowsVerticalScrollIndicator:v18];
      uint64_t v25 = self;
      id v26 = [v25 sharedGenerator];
      id v27 = [v26 startBatching];

      [v1 loadViewIfNeeded];
      uint64_t v28 = *(void **)&v1[v4];
      if (!v28)
      {
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      id v29 = [v28 preparedCells];
      if (!v29)
      {
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      uint64_t v30 = v29;
      long long v90 = v1;
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v87 = v25;
      uint64_t v88 = v3;
      os_log_type_t v86 = v27;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v32)
        {
LABEL_29:
          if (v32 >= 1)
          {
            uint64_t v33 = 0;
            uint64_t v84 = 0;
            uint64_t v92 = v2;
            uint64_t v93 = v32;
            while (1)
            {
              if ((v31 & 0xC000000000000001) != 0) {
                id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v34 = *(id *)(v31 + 8 * v33 + 32);
              }
              uint64_t v35 = v34;
              type metadata accessor for DOCItemCollectionCell();
              id v36 = (void *)swift_dynamicCastClass();
              if (v36)
              {
                uint64_t v94 = v35;
                int v37 = *(uint64_t (**)(void))((swift_isaMask & *v36) + 0x1F8);
                uint64_t v38 = v37();
                if (v38)
                {
                  uint64_t v39 = (void *)v38;
                  sub_10009611C((uint64_t)v108);
                  v103[9] = v108[9];
                  v103[10] = v108[10];
                  uint64_t v104 = v109;
                  v103[4] = v108[4];
                  v103[5] = v108[5];
                  v103[6] = v108[6];
                  v103[7] = v108[7];
                  v103[8] = v108[8];
                  v103[0] = v108[0];
                  v103[1] = v108[1];
                  v103[2] = v108[2];
                  v103[3] = v108[3];
                  DOCSplitBrowserViewController.didCommitPreview(of:)(v103);
                  uint64_t v40 = (uint64_t)v39 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
                  sub_1000CBE0C((uint64_t)v39 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v113, (uint64_t *)&unk_100705550);
                  sub_1000CBE0C(v40, (uint64_t)v97, (uint64_t *)&unk_100705550);
                  sub_1000CBE0C((uint64_t)v103, v40, (uint64_t *)&unk_100705550);
                  sub_10009736C(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
                  sub_1000A2E70((uint64_t)v108);
                  sub_10009736C(v97, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
                  sub_100095550(v113);
                  sub_10004B944((uint64_t)v108);
                  uint64_t v2 = v92;
                  sub_10009736C(v113, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
                }
                uint64_t v41 = v37();
                if (v41)
                {
                  uint64_t v42 = (char *)v41;
                  sub_1000976F0((uint64_t)v110);
                  v99[4] = v110[4];
                  v99[5] = v110[5];
                  v99[6] = v110[6];
                  v99[7] = v110[7];
                  v99[0] = v110[0];
                  v99[1] = v110[1];
                  v99[2] = v110[2];
                  v99[3] = v110[3];
                  DOCSplitBrowserViewController.didCommitPreview(of:)(v99);
                  uint64_t v43 = (uint64_t)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
                  sub_1000CBE0C((uint64_t)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits], (uint64_t)v100, (uint64_t *)&unk_10070AD40);
                  sub_1000CBE0C(v43, (uint64_t)v101, (uint64_t *)&unk_10070AD40);
                  sub_1000CBE0C((uint64_t)v99, v43, (uint64_t *)&unk_10070AD40);
                  sub_100097480(v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
                  sub_1000104D0((uint64_t)v110);
                  sub_100097480(v101, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
                  sub_1000CBE0C(v43, (uint64_t)v102, (uint64_t *)&unk_10070AD40);
                  sub_1000CBE0C((uint64_t)v102, (uint64_t)v103, (uint64_t *)&unk_10070AD40);
                  if (sub_1000CBEB4((uint64_t *)v103) == 1)
                  {
                    sub_1000CBE0C((uint64_t)v100, (uint64_t)v97, (uint64_t *)&unk_10070AD40);
                    if (sub_1000CBEB4(v97) != 1) {
                      goto LABEL_46;
                    }
                  }
                  else
                  {
                    sub_1000CBE0C((uint64_t)v100, (uint64_t)v97, (uint64_t *)&unk_10070AD40);
                    int v44 = sub_1000CBEB4(v97);
                    if (v44 == 1)
                    {
LABEL_46:
                      sub_1000CBE0C((uint64_t)v102, (uint64_t)v97, (uint64_t *)&unk_10070AD40);
                      sub_1000CBE0C((uint64_t)v100, (uint64_t)&v98, (uint64_t *)&unk_10070AD40);
                      sub_100097480(v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
                      sub_100097480(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
                      sub_100098124((uint64_t)v97);
                    }
                    else
                    {
                      sub_1000CBE0C((uint64_t)v100, (uint64_t)v95, (uint64_t *)&unk_10070AD40);
                      v112[4] = v95[4];
                      v112[5] = v95[5];
                      v112[6] = v95[6];
                      v112[7] = v95[7];
                      v112[0] = v95[0];
                      v112[1] = v95[1];
                      v112[2] = v95[2];
                      v112[3] = v95[3];
                      sub_1000CBE0C((uint64_t)v102, (uint64_t)v96, (uint64_t *)&unk_10070AD40);
                      v111[4] = v96[4];
                      v111[5] = v96[5];
                      v111[6] = v96[6];
                      v111[7] = v96[7];
                      v111[0] = v96[0];
                      v111[1] = v96[1];
                      v111[2] = v96[2];
                      v111[3] = v96[3];
                      sub_100097480(v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
                      sub_100097480(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
                      BOOL v52 = sub_1003655AC((uint64_t)v111, (uint64_t)v112);
                      sub_100097480(v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
                      sub_100097480(v102, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
                      if (v52)
                      {
                        sub_10000A628((uint64_t)v110);
                        sub_100097480(v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);

                        uint64_t v2 = v92;
                        goto LABEL_32;
                      }
                      uint64_t v2 = v92;
                    }
                    sub_1000CBE0C(v43, (uint64_t)v96, (uint64_t *)&unk_10070AD40);
                    sub_1000CBE0C((uint64_t)v96, (uint64_t)v97, (uint64_t *)&unk_10070AD40);
                    if (sub_1000CBEB4(v97) != 1)
                    {
                      uint64_t v45 = *(void **)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
                      *(void *)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

                      os_log_type_t v46 = &v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle];
                      *(void *)os_log_type_t v46 = 0;
                      *((void *)v46 + 1) = 0;
                      swift_bridgeObjectRelease();
                      id v47 = &v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle];
                      *(void *)id v47 = 0;
                      *((void *)v47 + 1) = 0;
                      swift_bridgeObjectRelease();
                      uint64_t v48 = &v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle];
                      *(void *)uint64_t v48 = 0;
                      *((void *)v48 + 1) = 0;
                      swift_bridgeObjectRelease();
                      uint64_t v49 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                      uint64_t v50 = *(void *)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
                      if ((v50 & 0x200) == 0)
                      {
                        v50 |= 0x200uLL;
                        *(void *)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v50;
                      }
                      if (!*(void *)&v42[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                        && !sub_1000CBC64())
                      {
                        *(void *)&v42[v49] = 0;
                        sub_100090F98(v50, (uint64_t)v42);
                      }
                    }
                  }
                  sub_10000A628((uint64_t)v110);
                  sub_100097480(v100, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);

                  goto LABEL_32;
                }
              }
              else
              {
              }
LABEL_32:
              if (v93 == ++v33) {
                goto LABEL_58;
              }
            }
          }
          __break(1u);
          goto LABEL_91;
        }
      }
LABEL_58:
      swift_bridgeObjectRelease();
      unint64_t v53 = (unint64_t)sub_10001A904();
      unint64_t v54 = v53;
      if (v53 >> 62)
      {
        uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
        if (!v55) {
          goto LABEL_67;
        }
      }
      else
      {
        uint64_t v55 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v55) {
          goto LABEL_67;
        }
      }
      if (v55 < 1)
      {
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      uint64_t v56 = 0;
      do
      {
        if ((v54 & 0xC000000000000001) != 0) {
          uint64_t v57 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v57 = (char *)*(id *)(v54 + 8 * v56 + 32);
        }
        id v58 = v57;
        ++v56;
        *(void *)&v57[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = v2;
        swift_retain_n();
        swift_release();
        sub_1004D78E0();

        swift_release();
      }
      while (v55 != v56);
LABEL_67:
      swift_bridgeObjectRelease();
      if (objc_msgSend(v90, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkippedWork"))
      {
        v90[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_updateSnapshot] = 1;
        [v90 loadViewIfNeeded];
        uint64_t v59 = v91;
        uint64_t v60 = *(void **)&v90[v91];
        os_log_type_t v61 = v88;
        if (!v60)
        {
LABEL_99:
          __break(1u);
          goto LABEL_100;
        }
        id v62 = [v60 collectionViewLayout];
        [v62 invalidateLayout];
      }
      else
      {
        swift_beginAccess();
        uint64_t v63 = swift_bridgeObjectRetain();
        sub_10007A41C(v63, 2);
        swift_bridgeObjectRelease();
        os_log_type_t v61 = v88;
        uint64_t v59 = v91;
      }
      if ((v90[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
        && (*(void *)&v90[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
         || v90[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1))
      {
        [v90 loadViewIfNeeded:v84];
        uint64_t v64 = *(void **)&v90[v59];
        if (!v64)
        {
LABEL_101:
          __break(1u);
          return;
        }
        id v65 = [v64 panGestureRecognizer];
        [v65 setEnabled:v85];

        sub_1001C6FE0();
      }
      id v67 = sub_1000373B0();
      if (*v66 == 2)
      {
        ((void (*)(uint64_t *, void))v67)(v97, 0);
      }
      else
      {
        uint64_t v68 = v66;
        id v69 = [v90 view];
        if (!v69)
        {
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        id v70 = v69;
        [v69 bounds];
        uint64_t v72 = v71;
        uint64_t v74 = v73;

        *((void *)v68 + 1) = v72;
        *((void *)v68 + 2) = v74;
        ((void (*)(uint64_t *, void))v67)(v97, 0);
      }
      uint64_t v76 = sub_1000373B0();
      if (*v75 == 2)
      {
        ((void (*)(uint64_t *, void))v76)(v97, 0);
LABEL_88:
        id v83 = [v87 sharedGenerator];
        [v83 endBatching:v86];

        sub_10004B470((uint64_t)v105);
        [v61 setAnimationsEnabled:v89];
        swift_release();
        return;
      }
      uint64_t v77 = v75;
      id v78 = [v90 splitViewController];
      if (v78)
      {
        id v79 = v78;
        [v90 enclosingTabSwitcherStyle];
        if (DOCTabSwitcherStyle.showsTabs.getter())
        {
          id v80 = [v90 traitCollection];
          __chkstk_darwin(v80);
          id v81 = (id)UITraitCollection.modifyingTraits(_:)();

LABEL_87:
          [v81 horizontalSizeClass:v84];

          *((void *)v77 + 3) = v82;
          ((void (*)(uint64_t *, void))v76)(v97, 0);
          goto LABEL_88;
        }
      }
      id v81 = [v90 traitCollection:v84];
      goto LABEL_87;
    }
  }
}

uint64_t (*sub_1000373B0())()
{
  return j__swift_endAccess;
}

void sub_10003740C(void *a1, void *a2, NSObject *a3)
{
  uint64_t v4 = v3;
  v215 = a3;
  id v210 = a2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v219 = *(void *)(v6 - 8);
  uint64_t v220 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v198[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v198[-v11];
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v15 = &v198[-v14];
  uint64_t v16 = __chkstk_darwin(v13);
  BOOL v18 = &v198[-v17];
  uint64_t v19 = __chkstk_darwin(v16);
  BOOL v21 = &v198[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = &v198[-v23];
  uint64_t v25 = __chkstk_darwin(v22);
  v212 = &v198[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  v216 = &v198[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  os_log_t v214 = (os_log_t)&v198[-v30];
  __chkstk_darwin(v29);
  v218 = &v198[-v31];
  self;
  uint64_t v32 = swift_dynamicCastObjCClass();
  if (!v32)
  {
    static Logger.Application.getter();
    id v70 = a1;
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = v219;
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      v222[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315138;
      swift_getObjectType();
      uint64_t v75 = _typeName(_:qualified:)();
      uint64_t v221 = sub_10009B0E4(v75, v76, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Denying creation of browser window / scene.  Unexpected scene type received: %s)", v74, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v9, v220);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v219 + 8))(v9, v220);
    }
    return;
  }
  uint64_t v33 = (void *)v32;
  v204 = v18;
  v205 = v24;
  v203 = v15;
  v206 = v21;
  v202 = v12;
  id v34 = objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions);
  id v35 = a1;

  type metadata accessor for DRIMainViewController();
  id v36 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v37 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController;
  uint64_t v38 = *(void **)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
  *(void *)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController] = v36;
  id v209 = v36;
  id v39 = v36;

  id v40 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v33];
  uint64_t v41 = OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window;
  uint64_t v42 = *(void **)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window];
  *(void *)&v4[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_window] = v40;

  uint64_t v213 = v41;
  uint64_t v43 = *(void **)&v4[v41];
  if (v43) {
    [v43 setRootViewController:v39];
  }
  int v44 = v218;
  static Logger.Application.getter();
  id v45 = v35;
  id v46 = v39;
  id v47 = v4;
  id v48 = v45;
  id v49 = v46;
  uint64_t v50 = v47;
  id v51 = Logger.logObject.getter();
  int v52 = static os_log_type_t.debug.getter();
  BOOL v53 = os_log_type_enabled(v51, (os_log_type_t)v52);
  v217 = v50;
  uint64_t v211 = v37;
  if (v53)
  {
    int v199 = v52;
    os_log_t v201 = v51;
    id v207 = v49;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = (void *)swift_slowAlloc();
    uint64_t v200 = swift_slowAlloc();
    v222[0] = v200;
    *(_DWORD *)uint64_t v54 = 136316162;
    uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v54 + 12) = 2080;
    id v56 = [v33 session];
    id v57 = [v56 persistentIdentifier];

    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v60 = v59;

    uint64_t v221 = sub_10009B0E4(v58, v60, v222);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 22) = 2112;
    uint64_t v221 = (uint64_t)v33;
    id v208 = v48;
    id v61 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v55 = v33;

    *(_WORD *)(v54 + 32) = 2112;
    uint64_t v62 = v213;
    uint64_t v63 = *(void **)&v4[v213];
    if (!v63)
    {

      __break(1u);
      return;
    }
    uint64_t v221 = *(void *)&v4[v213];
    id v64 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v55[1] = v63;
    id v65 = v217;

    *(_WORD *)(v54 + 42) = 2112;
    id v66 = v207;
    uint64_t v221 = (uint64_t)v207;
    id v67 = v207;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v55[2] = v209;

    os_log_t v68 = v201;
    _os_log_impl((void *)&_mh_execute_header, v201, (os_log_type_t)v199, "%s: sceneIdentifier: %s scene: %@, window: %@, doc vc: %@", (uint8_t *)v54, 0x34u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v49 = v66;
    swift_slowDealloc();

    id v69 = *(unsigned char **)(v219 + 8);
    ((void (*)(unsigned char *, uint64_t))v69)(v218, v220);
    id v48 = v208;
  }
  else
  {

    id v69 = *(unsigned char **)(v219 + 8);
    ((void (*)(unsigned char *, uint64_t))v69)(v44, v220);
    uint64_t v62 = v213;
  }
  [*(id *)&v4[v62] makeKeyAndVisible];
  uint64_t v77 = *(void **)&v4[v62];
  if (v77)
  {
    id v78 = objc_allocWithZone((Class)DOCAppearance);
    id v79 = v77;
    id v80 = [v78 init];
    [v79 setAppearance:v80];
  }
  id v81 = self;
  id v82 = [v81 sharedApplication];
  type metadata accessor for DOCApplication();
  uint64_t v83 = swift_dynamicCastClass();
  if (v83)
  {
    uint64_t v84 = *(void **)&v4[v211];
    if (v84)
    {
      uint64_t v85 = v83;
      os_log_type_t v86 = v69;
      id v87 = v84;
      [v87 setTabbedBrowserViewControllerDelegate:v85];

      id v69 = v86;
    }
  }

  id v88 = [v81 sharedApplication];
  unsigned int v89 = [v88 launchedToTest];

  if (v89)
  {
    os_log_t v90 = v214;
    static Logger.Application.getter();
    uint64_t v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v93 = 0;
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Launched in PPT, disabling scene restoration", v93, 2u);
      swift_slowDealloc();
    }

    ((void (*)(os_log_t, uint64_t))v69)(v90, v220);
    goto LABEL_38;
  }
  uint64_t v94 = v215;
  id v95 = [v215 URLContexts];
  sub_10009E6C4(0, &qword_10070BDA0);
  sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
  uint64_t v96 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v96 & 0xC000000000000001) != 0) {
    uint64_t v97 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v97 = *(void *)(v96 + 16);
  }
  uint64_t v98 = v216;
  swift_bridgeObjectRelease();
  if (!v97)
  {
    v218 = v69;
    id v208 = v48;
    uint64_t v113 = sub_1003BBD74();
    if (v113)
    {
      int v114 = (void *)v113;
      v115 = v212;
      static Logger.Application.getter();
      id v116 = v114;
      dispatch_queue_t v117 = Logger.logObject.getter();
      os_log_type_t v118 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v117, v118))
      {
        uint64_t v119 = swift_slowAlloc();
        v215 = v117;
        uint64_t v120 = v119;
        uint64_t v121 = (void *)swift_slowAlloc();
        v216 = (unsigned char *)swift_slowAlloc();
        v222[0] = (uint64_t)v216;
        *(_DWORD *)uint64_t v120 = 136315394;
        uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v120 + 12) = 2112;
        uint64_t v221 = (uint64_t)v116;
        id v122 = v116;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v121 = v114;

        uint64_t v123 = v215;
        _os_log_impl((void *)&_mh_execute_header, v215, v118, "%s: Restore from folderItem: %@", (uint8_t *)v120, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v124 = v212;
      }
      else
      {

        uint64_t v124 = v115;
      }
      ((void (*)(unsigned char *, uint64_t))v218)(v124, v220);
      id v48 = v208;
      sub_10025AC84(v116);

      goto LABEL_38;
    }
    id v127 = [v94 userActivities];
    sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
    sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
    uint64_t v128 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10044CCCC(v128);
    v130 = v129;
    swift_bridgeObjectRelease();
    if (v130)
    {
      uint64_t v131 = sub_1003BCE90();
      if (v131)
      {
        uint64_t v132 = v131;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v133 = swift_allocObject();
        *(_OWORD *)(v133 + 16) = xmmword_1005A04F0;
        *(void *)(v133 + 32) = v132;
        v222[0] = v133;
        specialized Array._endMutation()();
        unint64_t v134 = v222[0];

        v135 = v205;
        static Logger.Application.getter();
        swift_bridgeObjectRetain_n();
        uint64_t v136 = Logger.logObject.getter();
        os_log_type_t v137 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v136, v137))
        {
          uint64_t v138 = swift_slowAlloc();
          v216 = (unsigned char *)swift_slowAlloc();
          v222[0] = (uint64_t)v216;
          *(_DWORD *)uint64_t v138 = 136315394;
          uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v138 + 12) = 2080;
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          id v207 = v49;
          swift_bridgeObjectRetain();
          uint64_t v139 = Array.description.getter();
          unint64_t v141 = v140;
          swift_bridgeObjectRelease();
          uint64_t v221 = sub_10009B0E4(v139, v141, v222);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v136, v137, "%s: Restore from quick look item: %s", (uint8_t *)v138, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          id v49 = v207;
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        ((void (*)(unsigned char *, uint64_t))v218)(v135, v220);
        id v48 = v208;
        sub_100257E34(v134);
        goto LABEL_31;
      }
    }
    long long v148 = v215;
    id v149 = sub_1003BC270();
    if (!v149)
    {
      id v169 = [v148 shortcutItem];
      if (v169)
      {
        v170 = v169;
        v171 = v204;
        static Logger.Application.getter();
        id v172 = v170;
        v173 = Logger.logObject.getter();
        os_log_type_t v174 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v173, v174))
        {
          uint64_t v175 = swift_slowAlloc();
          v215 = swift_slowAlloc();
          v216 = (unsigned char *)swift_slowAlloc();
          v222[0] = (uint64_t)v216;
          *(_DWORD *)uint64_t v175 = 136315394;
          uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v175 + 12) = 2112;
          uint64_t v221 = (uint64_t)v172;
          id v176 = v172;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v215->Class isa = (Class)v170;

          _os_log_impl((void *)&_mh_execute_header, v173, v174, "%s: Restore from shortcutItem: %@", (uint8_t *)v175, 0x16u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v177 = v204;
        }
        else
        {

          v177 = v171;
        }
        ((void (*)(unsigned char *, uint64_t))v218)(v177, v220);
        id v48 = v208;
        sub_1002529F8(v172);
      }
      else
      {
        id v178 = [v210 stateRestorationActivity];
        if (v178)
        {
          v179 = v178;
          v180 = v203;
          static Logger.Application.getter();
          id v181 = v179;
          v182 = Logger.logObject.getter();
          os_log_type_t v183 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v182, v183))
          {
            uint64_t v184 = swift_slowAlloc();
            v215 = swift_slowAlloc();
            v216 = (unsigned char *)swift_slowAlloc();
            v222[0] = (uint64_t)v216;
            *(_DWORD *)uint64_t v184 = 136315394;
            uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v184 + 12) = 2112;
            uint64_t v221 = (uint64_t)v181;
            id v185 = v181;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v215->Class isa = (Class)v179;

            _os_log_impl((void *)&_mh_execute_header, v182, v183, "%s: Restore from stateRestorationActivity: %@", (uint8_t *)v184, 0x16u);
            sub_1000CBE70(&qword_100707CC0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v186 = v203;
          }
          else
          {

            v186 = v180;
          }
          ((void (*)(unsigned char *, uint64_t))v218)(v186, v220);
          id v48 = v208;
          id v197 = v181;
          sub_1002588A8(v179);
        }
        else
        {
          id v187 = [v215 userActivities];
          uint64_t v188 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          v189 = (void *)sub_1000D31E4(v188);
          swift_bridgeObjectRelease();
          id v48 = v208;
          if (v189)
          {
            v190 = v202;
            static Logger.Application.getter();
            id v191 = v189;
            v192 = Logger.logObject.getter();
            os_log_type_t v193 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v192, v193))
            {
              uint64_t v194 = swift_slowAlloc();
              v215 = swift_slowAlloc();
              v216 = (unsigned char *)swift_slowAlloc();
              v222[0] = (uint64_t)v216;
              *(_DWORD *)uint64_t v194 = 136315394;
              uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v194 + 12) = 2112;
              uint64_t v221 = (uint64_t)v191;
              id v195 = v191;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              v215->Class isa = (Class)v189;

              _os_log_impl((void *)&_mh_execute_header, v192, v193, "%s: Restore from userActivity: %@", (uint8_t *)v194, 0x16u);
              sub_1000CBE70(&qword_100707CC0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              v196 = v202;
            }
            else
            {

              v196 = v190;
            }
            ((void (*)(unsigned char *, uint64_t))v218)(v196, v220);
            sub_100266E84(v191);

            id v48 = v208;
          }
        }
      }
      goto LABEL_38;
    }
    long long v152 = v149;
    uint64_t v153 = v150;
    unint64_t v154 = v151;
    v155 = v206;
    static Logger.Application.getter();
    swift_bridgeObjectRetain_n();
    id v156 = v152;
    v157 = Logger.logObject.getter();
    os_log_type_t v158 = static os_log_type_t.debug.getter();
    int v159 = v158;
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v160 = swift_slowAlloc();
      LODWORD(v215) = v159;
      uint64_t v161 = v160;
      uint64_t v213 = swift_slowAlloc();
      os_log_t v214 = v157;
      long long v162 = (void *)v213;
      v216 = (unsigned char *)swift_slowAlloc();
      v222[0] = (uint64_t)v216;
      *(_DWORD *)uint64_t v161 = 136315650;
      id v207 = v49;
      uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v161 + 12) = 2112;
      uint64_t v221 = (uint64_t)v156;
      uint64_t v163 = v153;
      id v164 = v156;
      id v49 = v207;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v162 = v152;

      *(_WORD *)(v161 + 22) = 2080;
      if (v154) {
        uint64_t v165 = v163;
      }
      else {
        uint64_t v165 = 0;
      }
      if (v154) {
        unint64_t v166 = v154;
      }
      else {
        unint64_t v166 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v221 = sub_10009B0E4(v165, v166, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v153 = v163;
      swift_bridgeObjectRelease();
      os_log_t v167 = v214;
      _os_log_impl((void *)&_mh_execute_header, v214, (os_log_type_t)v215, "%s: Restore from concrete location: %@ tag: %s", (uint8_t *)v161, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v168 = v206;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v168 = v155;
    }
    ((void (*)(unsigned char *, uint64_t))v218)(v168, v220);
    id v48 = v208;
    sub_10025B9D0(v156, v153, v154);

    goto LABEL_31;
  }
  static Logger.Application.getter();
  uint64_t v99 = v94;
  unint64_t v100 = Logger.logObject.getter();
  os_log_type_t v101 = static os_log_type_t.debug.getter();
  int v102 = v101;
  if (os_log_type_enabled(v100, v101))
  {
    uint64_t v103 = swift_slowAlloc();
    v215 = swift_slowAlloc();
    v222[0] = (uint64_t)v215;
    *(_DWORD *)uint64_t v103 = 136315394;
    uint64_t v221 = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v222);
    os_log_t v214 = (os_log_t)v222;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v103 + 12) = 2080;
    v212 = (unsigned char *)(v103 + 14);
    id v104 = [v99 URLContexts];
    v218 = v69;
    id v105 = v48;
    id v106 = v49;
    id v107 = v104;
    LODWORD(v213) = v102;
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v108 = Set.description.getter();
    unint64_t v110 = v109;
    swift_bridgeObjectRelease();
    uint64_t v111 = v108;
    id v49 = v106;
    id v48 = v105;
    uint64_t v221 = sub_10009B0E4(v111, v110, v222);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    v112 = &selRef_setManageButtonTitle_;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v213, "%s: Restore from urlContexts: %s", (uint8_t *)v103, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(unsigned char *, uint64_t))v218)(v216, v220);
  }
  else
  {

    ((void (*)(unsigned char *, uint64_t))v69)(v98, v220);
    v112 = &selRef_setManageButtonTitle_;
  }
  id v125 = [v99 v112[240]];
  uint64_t v126 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100250578(v126);
LABEL_31:
  swift_bridgeObjectRelease();
LABEL_38:
  id v142 = sub_10000E984();
  if (v142)
  {
    long long v143 = v142;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v144 = swift_allocObject();
    *(_OWORD *)(v144 + 16) = xmmword_1005A04F0;
    *(void *)(v144 + 32) = v143;
    v222[0] = v144;
    specialized Array._endMutation()();
    sub_10009E6C4(0, &qword_100708700);
    id v145 = v49;
    id v146 = v143;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v145 setCustomActions:isa];
  }
  sub_1000064F0();
  sub_100021394();
}

void *sub_100038F00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  CFNotificationCenterRef result = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_10009B208(v4, (uint64_t)&v5);
      sub_10009E6C4(0, &qword_10070E2D0);
      swift_dynamicCast();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_100038FFC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v95 = *(void *)(v4 - 8);
  uint64_t v96 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070AD30);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v94 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v84 - v10;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v98 = v12;
  uint64_t v99 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v97 = (char *)&v84 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  BOOL v21 = (char *)&v84 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v84 - v22;
  uint64_t v24 = type metadata accessor for OSSignpostID();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)[a1 isGathering];
  if (result) {
    return result;
  }
  os_log_type_t v86 = v6;
  os_log_t v90 = v16;
  if ([v2 isFirstResponder])
  {
    objc_msgSend(objc_msgSend(self, "shared"), "hideMenuIfActive");
    swift_unknownObjectRelease();
  }
  static os_signpost_type_t.begin.getter();
  updated = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v25 + 8);
  unsigned int v89 = v27;
  uint64_t v91 = v25 + 8;
  uint64_t v92 = v24;
  id v88 = v30;
  v30(v27, v24);
  uint64_t v31 = sub_10003B6F8(0);
  uint64_t v32 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  uint64_t v33 = *v32;
  swift_bridgeObjectRetain();
  uint64_t v34 = swift_bridgeObjectRetain();
  unint64_t v35 = sub_10007CC5C(v34);
  DOCItemCollectionViewController.items.setter(v35);
  id v36 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  id v87 = v31;
  id v93 = v36;
  swift_bridgeObjectRetain();
  char v37 = == infix(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37)
  {
    char v38 = sub_10028EFE0(*v32, v33);
    swift_bridgeObjectRelease();
    if (v38)
    {
      static Logger.UI.getter();
      id v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        v103[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 136315138;
        uint64_t v100 = sub_10009B0E4(0xD000000000000028, 0x80000001005DD300, v103);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "DOCNodeCollectionDelegate %s Skipping reloadCollection(), and instead updating cell contents since structure of items didn't change", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v42 = v98;
      uint64_t v43 = *(void (**)(char *, uint64_t))(v99 + 8);
      v43(v23, v98);
      int v44 = v97;
      id v45 = [v93 indexPathsForVisibleItems];
      type metadata accessor for IndexPath();
      uint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001D96D0(v46);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  static Logger.UI.getter();
  id v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    id v49 = (uint8_t *)swift_slowAlloc();
    v103[0] = swift_slowAlloc();
    *(_DWORD *)id v49 = 136315138;
    uint64_t v100 = sub_10009B0E4(0xD000000000000028, 0x80000001005DD300, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "DOCNodeCollectionDelegate %s reloading without animation", v49, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v42 = v98;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v99 + 8);
  v43(v21, v98);
  int v44 = v97;
  if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] == 1) {
    v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 1;
  }
  else {
    sub_1000D54D8();
  }
LABEL_17:
  uint64_t v50 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal;
  unint64_t v51 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal];
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v83 <= 0) {
      goto LABEL_19;
    }
LABEL_21:
    static Logger.UI.getter();
    BOOL v53 = v2;
    uint64_t v54 = Logger.logObject.getter();
    int v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, (os_log_type_t)v55))
    {
      LODWORD(v97) = v55;
      uint64_t v56 = swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      uint64_t v102 = v85;
      *(_DWORD *)uint64_t v56 = 134218498;
      unint64_t v57 = *(void *)&v2[v50];
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v100 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v56 + 12) = 2080;
      unint64_t v59 = &v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess();
      uint64_t v60 = (uint64_t)v59;
      uint64_t v61 = v94;
      sub_1000CBC00(v60, v94, (uint64_t *)&unk_10070AD30);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v61, 1, v96))
      {
        sub_1000CBBA4(v61, (uint64_t *)&unk_10070AD30);
        unint64_t v62 = 0xD000000000000012;
        unint64_t v63 = 0x80000001005DD330;
      }
      else
      {
        uint64_t v64 = (uint64_t)v86;
        sub_10008BCB8(v61, (uint64_t)v86, type metadata accessor for ScrollPositionInfo);
        sub_1000CBBA4(v61, (uint64_t *)&unk_10070AD30);
        unint64_t v62 = sub_1001B6F14();
        unint64_t v63 = v65;
        sub_10008BBF0(v64, type metadata accessor for ScrollPositionInfo);
      }
      uint64_t v101 = sub_10009B0E4(v62, v63, &v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v56 + 22) = 2080;
      if (*(void *)&v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll])
      {
        id v66 = [(id)swift_unknownObjectRetain() description];
        swift_unknownObjectRelease();
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v69 = v68;
      }
      else
      {
        unint64_t v69 = 0xE700000000000000;
        uint64_t v67 = 0x65646F4E206F4ELL;
      }
      uint64_t v101 = sub_10009B0E4(v67, v69, &v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v97, "data(forNodeCollectionShouldBeReloaded) called. Forcing relayout: \n - enqueuedNodesToReveal.count: %ld\n enqueuedNodeScrollPositionInfo: %s\n enqueuedNodeToSelectAndScroll: %s ", (uint8_t *)v56, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v42 = v98;
    }
    else
    {
    }
    v43(v44, v42);
    [v93 layoutIfNeeded];
    goto LABEL_33;
  }
  if (*(uint64_t *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0) {
    goto LABEL_21;
  }
LABEL_19:
  uint64_t v52 = (uint64_t)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess();
  sub_1000CBC00(v52, (uint64_t)v11, (uint64_t *)&unk_10070AD30);
  LODWORD(v52) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48))(v11, 1, v96);
  sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_10070AD30);
  if (v52 != 1
    || *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll])
  {
    goto LABEL_21;
  }
LABEL_33:
  sub_1000B00FC(0);
  id v70 = v90;
  static Logger.UI.getter();
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 136315138;
    uint64_t v101 = sub_10009B0E4(0xD000000000000028, 0x80000001005DD300, &v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s - calling resolvePendingNodeContexts", v73, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  v43(v70, v42);
  uint64_t v74 = v88;
  unint64_t v75 = (unint64_t)v87;
  sub_10002C81C();
  sub_10003A61C(v75, 0, 0);
  swift_bridgeObjectRelease();
  uint64_t v76 = v92;
  uint64_t v77 = v89;
  if (*(unsigned char *)(*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type
                + 8) == 1)
  {
    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    id v78 = [v2 viewIfLoaded];
    id v79 = [v78 window];

    if (v79) {
      sub_1000A6988();
    }
  }
  if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1))
  {
    sub_1001C6FE0();
  }
  sub_1000543A4();
  int v80 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload];
  sub_100005BFC(2u);
  if (v80 != 2)
  {
    int v81 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed];
    v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = v80 & 1;
    if (((((v80 & 1) == 0) ^ v81) & 1) == 0) {
      [v2 docSetNeedsUpdateContentUnavailableConfiguration];
    }
  }
  static os_signpost_type_t.end.getter();
  id v82 = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  return v74(v77, v76);
}

void *initializeWithCopy for DOCCollectionSection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10003A094(uint64_t a1)
{
  return a1;
}

void sub_10003A1A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)[v0 dataSource];
  uint64_t v3 = &v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v4 = *(void *)v3;
  swift_bridgeObjectRetain();

  v15[0] = _swiftEmptyArrayStorage;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_15;
  }
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v7 = (char *)*(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    uint64_t v9 = (id *)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v10 = *v9;
    id v11 = *v9;

    if (v10)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v15[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)v15[0];
LABEL_16:
  swift_bridgeObjectRelease();
  Notification.object.getter();
  if (v15[3])
  {
    type metadata accessor for DOCBrowserContainedViewController();
    if (swift_dynamicCast())
    {
      char v13 = sub_10003A484((uint64_t)v14, (unint64_t)v12);
      swift_bridgeObjectRelease();
      if (v13)
      {
        [v1 loadViewIfNeeded];
        [v1 activateContainerViewControllersIfNeeded];

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_100705D60);
  }
  if (qword_100704E98 != -1) {
    swift_once();
  }
  if ((byte_1007084C0 & 1) == 0) {
    [v1 loadViewIfNeeded];
  }
}

uint64_t sub_10003A484(uint64_t a1, unint64_t a2)
{
  return sub_10003A49C(a1, a2, (uint64_t (*)(void))type metadata accessor for DOCBrowserContainedViewController);
}

uint64_t sub_10003A49C(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      uint64_t v8 = v7;
      a3 = (uint64_t (*)(void))a3(0);
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v14 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        id v15 = *(id *)(a2 + 8 * v6);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_6;
        }
        ++v6;
        if (v14 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v11 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v12 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        break;
      }
      char v13 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v13) {
        goto LABEL_6;
      }
      ++v11;
      if (v12 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_10003A61C(unint64_t a1, unsigned int a2, int a3)
{
  unint64_t v4 = v3;
  unsigned int v101 = a2;
  uint64_t v98 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  char v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v99 = (char *)&v90 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  id v104 = (char *)&v90 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v90 - v18;
  uint64_t v107 = type metadata accessor for IndexPath();
  uint64_t v100 = *(void *)(v107 - 8);
  uint64_t v20 = __chkstk_darwin(v107);
  uint64_t v21 = __chkstk_darwin(v20);
  id v106 = (char *)&v90 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v90 - v24;
  __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v90 - v27;
  uint64_t v29 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v29 || !a1) {
    return;
  }
  uint64_t v91 = v26;
  id v105 = v29;
  uint64_t v30 = (uint64_t)sub_10003B398(a1);
  uint64_t v31 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  BOOL v32 = *(void *)v31 == 2;
  uint64_t v94 = v7;
  int v97 = a3;
  uint64_t v92 = v13;
  if (!v32)
  {
    uint64_t v41 = v107;
LABEL_11:
    uint64_t v38 = v100;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unsigned int v33 = [v4 isEditing];
  uint64_t v41 = v107;
  if (v33)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v96 = v30;
  uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode];
  if (!v34)
  {
    uint64_t v30 = v96;
    goto LABEL_10;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = v34;
  v108[0] = inited;
  specialized Array._endMutation()();
  unint64_t v36 = v108[0];
  swift_unknownObjectRetain_n();
  char v37 = sub_10003B398(v36);
  swift_bridgeObjectRelease();
  if (*((void *)v37 + 2))
  {
    uint64_t v38 = v100;
    uint64_t v39 = v107;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v19, &v37[(*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80)], v107);
    uint64_t v40 = 0;
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v39 = v107;
    uint64_t v38 = v100;
  }
  uint64_t v103 = v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v19, v40, 1, v39);
  swift_bridgeObjectRelease();
  uint64_t v41 = v39;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v19, 1, v39) == 1)
  {
    uint64_t v30 = v96;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_1007069A0);
    goto LABEL_12;
  }
  uint64_t v102 = *(uint64_t (**)(char *, char *, uint64_t))(v38 + 32);
  uint64_t v57 = v102(v28, v19, v39);
  __chkstk_darwin(v57);
  *(&v90 - 2) = (unint64_t)v28;
  uint64_t v30 = v96;
  BOOL v58 = sub_10008CF28((uint64_t (*)(char *))sub_1002188C0, (uint64_t)(&v90 - 4), v96, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0);
  swift_bridgeObjectRelease();
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
    swift_unknownObjectRelease();
    uint64_t v41 = v39;
LABEL_12:
    uint64_t v42 = v104;
    uint64_t v43 = *(void *)(v30 + 16);
    if (v43) {
      goto LABEL_13;
    }
LABEL_28:
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    swift_bridgeObjectRetain_n();
LABEL_29:
    v54(v42, 1, 1, v41);
    uint64_t v56 = (uint64_t)v99;
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v25, v28, v39);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v96 = sub_10018F950(0, *(void *)(v96 + 16) + 1, 1, v96);
  }
  uint64_t v42 = v104;
  uint64_t v30 = v96;
  unint64_t v60 = *(void *)(v96 + 16);
  unint64_t v59 = *(void *)(v96 + 24);
  if (v60 >= v59 >> 1) {
    uint64_t v30 = sub_10018F950(v59 > 1, v60 + 1, 1, v96);
  }
  *(void *)(v30 + 16) = v60 + 1;
  uint64_t v38 = v100;
  uint64_t v41 = v107;
  v102((char *)(v30+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v100 + 72) * v60), v25, v107);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v41);
  uint64_t v43 = *(void *)(v30 + 16);
  if (!v43) {
    goto LABEL_28;
  }
LABEL_13:
  id v93 = v4;
  uint64_t v95 = v9;
  int v44 = (char *)(v38 + 16);
  id v45 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
  uint64_t v46 = v42;
  unint64_t v47 = v30 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  uint64_t v102 = *(uint64_t (**)(char *, char *, uint64_t))(v38 + 72);
  uint64_t v103 = v45;
  uint64_t v48 = v30;
  id v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  unint64_t v51 = (void (**)(char *, char *, uint64_t))(v38 + 32);
  id v104 = v44;
  uint64_t v52 = (void (**)(char *, uint64_t))(v44 - 8);
  uint64_t v96 = v48;
  swift_bridgeObjectRetain_n();
  unint64_t v90 = (unint64_t)v49 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v101 &= 1u;
  BOOL v53 = v106;
  while (1)
  {
    v103(v46, v47, v41);
    uint64_t v54 = *v49;
    (*v49)(v46, 0, 1, v41);
    if ((*v50)(v46, 1, v41) == 1) {
      break;
    }
    (*v51)(v53, v46, v41);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v105 selectItemAtIndexPath:isa v101 animated:0 scrollPosition:v90];

    uint64_t v41 = v107;
    (*v52)(v53, v107);
    v47 += (unint64_t)v102;
    if (!--v43)
    {
      char v9 = v95;
      unint64_t v4 = v93;
      uint64_t v38 = v100;
      uint64_t v42 = v46;
      goto LABEL_29;
    }
  }
  char v9 = v95;
  unint64_t v4 = v93;
  uint64_t v38 = v100;
  uint64_t v56 = (uint64_t)v99;
LABEL_30:
  swift_bridgeObjectRelease_n();
  unint64_t v61 = (unint64_t)sub_10003B6F8(0);
  if (v61 >> 62) {
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v62 == 1)
  {
    unint64_t v63 = sub_10003B6F8(0);
    uint64_t v64 = sub_10003B398((unint64_t)v63);
    swift_bridgeObjectRelease();
    uint64_t v65 = *((void *)v64 + 2);
    if (v65)
    {
      uint64_t v66 = v107;
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v56, &v64[((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * (v65 - 1)], v107);
      uint64_t v67 = 0;
    }
    else
    {
      uint64_t v67 = 1;
      uint64_t v66 = v107;
    }
    v54((char *)v56, v67, 1, v66);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v56, 1, v66) == 1)
    {
      sub_1000CBBA4(v56, (uint64_t *)&unk_1007069A0);
    }
    else
    {
      uint64_t v68 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v91, v56, v66);
      uint64_t v69 = v66;
      id v70 = v4;
      uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      uint64_t v72 = (uint64_t)v92;
      v71(v92, v68, v69);
      v54((char *)v72, 0, 1, v69);
      sub_1002974E0(v72);
      sub_1000CBBA4(v72, (uint64_t *)&unk_1007069A0);
      v71((char *)v72, v68, v69);
      unint64_t v4 = v70;
      v54((char *)v72, 0, 1, v69);
      uint64_t v73 = *(void *)&v105[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
          + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
      swift_beginAccess();
      swift_retain();
      sub_10008C318(v72, v73, (uint64_t *)&unk_1007069A0);
      swift_endAccess();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v68, v69);
    }
  }
  if (v97)
  {
    static Logger.UI.getter();
    uint64_t v74 = v4;
    unint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v95 = v9;
      uint64_t v78 = v77;
      id v79 = (char *)swift_slowAlloc();
      id v106 = v79;
      uint64_t v107 = swift_slowAlloc();
      v108[0] = v107;
      *(_DWORD *)uint64_t v78 = 136315650;
      uint64_t v109 = sub_10009B0E4(0xD000000000000033, 0x80000001005DDA40, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v78 + 12) = 2112;
      uint64_t v109 = (uint64_t)v74;
      int v80 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)id v79 = v74;

      *(_WORD *)(v78 + 22) = 2080;
      sub_10003B6F8(0);
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v81 = Array.description.getter();
      unint64_t v83 = v82;
      swift_bridgeObjectRelease();
      uint64_t v109 = sub_10009B0E4(v81, v83, v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "%s calling didSelect in column mode to reset info panel %@ selectedNodes: %s", (uint8_t *)v78, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v98);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v94 + 8))(v9, v98);
    }
    type metadata accessor for DOCConcreteSelectionLocation();
    uint64_t v84 = sub_10003B6F8(0);
    unint64_t v85 = sub_100557F10((unint64_t)v84);
    if (v85)
    {
      os_log_type_t v86 = (void *)v85;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v88 = (void *)Strong;
        id v89 = objc_retain(*(id *)&v74[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                                    + 24]);
        [v88 didSelectLocation:v86 atParentLocation:v89];

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

char *sub_10003B398(unint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v29 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v9 = (char *)v22 - v8;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (char *)swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    char v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    unint64_t v27 = a1 & 0xC000000000000001;
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v26 + 32);
    v22[1] = v26 + 8;
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v26 + 16);
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
    uint64_t v24 = v9;
    unint64_t v25 = a1;
    do
    {
      if (v27)
      {
        uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v15 = *(void **)(a1 + 8 * v12 + 32);
        swift_unknownObjectRetain();
      }
      sub_1001BAD5C(v15, (uint64_t)v4);
      if ((*v13)(v4, 1, v5) == 1)
      {
        swift_unknownObjectRelease();
        sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007069A0);
      }
      else
      {
        uint64_t v16 = v10;
        uint64_t v17 = *v28;
        (*v28)(v9, v4, v5);
        (*v23)(v29, v9, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = (char *)sub_10018F950(0, *((void *)v14 + 2) + 1, 1, (unint64_t)v14);
        }
        unint64_t v19 = *((void *)v14 + 2);
        unint64_t v18 = *((void *)v14 + 3);
        if (v19 >= v18 >> 1) {
          uint64_t v14 = (char *)sub_10018F950(v18 > 1, v19 + 1, 1, (unint64_t)v14);
        }
        *((void *)v14 + 2) = v19 + 1;
        uint64_t v20 = v26;
        v17(&v14[((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v26 + 72) * v19], v29, v5);
        swift_unknownObjectRelease();
        uint64_t v21 = *(void (**)(char *, uint64_t))(v20 + 8);
        char v9 = v24;
        v21(v24, v5);
        a1 = v25;
        uint64_t v10 = v16;
      }
      ++v12;
    }
    while (v10 != v12);
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void *sub_10003B6F8(char a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v3)
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
    if ((a1 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  id v4 = [v3 indexPathsForSelectedItems];
  if (!v4)
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
    if ((a1 & 1) == 0) {
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v17 = v6;
    swift_bridgeObjectRetain();
    sub_1001FCDC4(&v17);
    swift_bridgeObjectRelease();
    uint64_t v6 = v17;
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  type metadata accessor for IndexPath();
  uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (a1) {
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate);
  if (v7)
  {
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate);
  }
  else
  {
    char v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    swift_beginAccess();
    uint64_t v8 = *v9;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  __chkstk_darwin(v7);
  v15[2] = v1;
  v15[3] = v8;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_10003B9A0((void (*)(uint64_t *__return_ptr, char *))sub_100221604, (uint64_t)v15, (uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode) != 1) {
    return (void *)v10;
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_14:
  if (v11 >= 1)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        char v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        char v13 = *(void **)(v10 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if ([v13 isFolder])
      {
        swift_unknownObjectRelease();
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10003B9A0(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v29)(uint64_t *__return_ptr, char *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  uint64_t v4 = v3;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v21 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v33 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v28 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v22 = *(void *)(v13 + 56);
    unint64_t v25 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v24 = (void (**)(char *, uint64_t))(v13 - 8);
    v20[1] = a3;
    swift_bridgeObjectRetain();
    unint64_t v27 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v20[0] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v16 = v21;
    uint64_t v23 = v11;
    while (1)
    {
      v28(v11, v15, v16);
      uint64_t v17 = *v27;
      (*v27)(v11, 0, 1, v16);
      if ((*v26)(v11, 1, v16) == 1) {
        break;
      }
      (*v25)(v8, v11, v16);
      v29(&v32, v8);
      if (v4)
      {
        (*v24)(v8, v16);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      (*v24)(v8, v16);
      if (v32)
      {
        uint64_t v31 = 0;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v4 = v31;
        uint64_t v16 = v21;
      }
      v15 += v22;
      --v12;
      uint64_t v11 = v23;
      if (!v12)
      {
        v17(v23, 1, 1, v21);
        break;
      }
    }
  }
  else
  {
    unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v18(v11, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  return v33;
}

id DOCItemCollectionViewController.docContentUnavailableConfigurationState.getter()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  id result = [super docContentUnavailableConfigurationState];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v4 + 16) & 1) == 0)
    {
      id v5 = *(id *)v4;
      unsigned int v6 = [v5 doc_displaysSearchResults];

      if (v6)
      {
        id v7 = [v0 presentingViewController];
        NSString v8 = v7;
        if (v7)
        {
          id v9 = [v7 docUnavailableSearchResultsText];

          if (v9)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            NSString v8 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v8 = 0;
          }
        }
        [v3 setSearchControllerText:v8];
      }
    }
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for DOCCollectionSection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_10003C0A4()
{
}

void sub_10003C0C0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      id v7 = (void *)v6;
      NSString v8 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
      if ([v5 isGathering] && (objc_msgSend(v7, "isGathering") & 1) == 0)
      {
        static Logger.Enumeration.getter();
        id v9 = v5;
        objc_super v10 = Logger.logObject.getter();
        int v11 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v10, (os_log_type_t)v11))
        {
          HIDWORD(v17) = v11;
          os_log_t v20 = v10;
          uint64_t v12 = swift_slowAlloc();
          unint64_t v18 = (void *)swift_slowAlloc();
          uint64_t v19 = swift_slowAlloc();
          uint64_t v22 = v19;
          *(_DWORD *)uint64_t v12 = 136446466;
          unint64_t v13 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
          if (!v13)
          {

            __break(1u);
            return;
          }
          uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
          swift_bridgeObjectRetain();
          uint64_t v21 = sub_10009B0E4(v14, v13, &v22);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v12 + 12) = 2112;
          uint64_t v21 = (uint64_t)v9;
          uint64_t v15 = v9;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v18 = v5;

          os_log_t v16 = v20;
          _os_log_impl((void *)&_mh_execute_header, v20, BYTE4(v17), "%{public}s setting isGathering to false, DOCNodeCollection (%@)", (uint8_t *)v12, 0x16u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
          NSString v8 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        }
      }
      [v5 setIsGathering:[v7 v8[505]]];
    }
    else
    {
      id v7 = v5;
    }
  }
}

uint64_t sub_10003C5D4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v3 - 8);
  id v5 = &v48[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    int v11 = (char *)result;
    uint64_t v50 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v12 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithSuiteName:v13];

    if (v14)
    {
      unsigned int v15 = [v14 BOOLForKey:DOCUserDefaultsKeyIsSharingFolderWithAdultFamilyMember];
    }
    else
    {
      unsigned int v15 = 0;
    }
    static Logger.DocumentManager.getter();
    os_log_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 67109120;
      v54[0] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Files Family Tip, isSharingFolderWithAdultFamilyMember %{BOOL}d", v18, 8u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    if (qword_100705218 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1000CBE70(&qword_10070AB30);
    sub_10009D098(v19, (uint64_t)qword_100716CB8);
    unsigned int v49 = v15;
    LOBYTE(v51[0]) = v15;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    uint64_t v20 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager;
    if (*(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager]) {
      goto LABEL_11;
    }
    sub_1000D4774((uint64_t)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher], (uint64_t)v54);
    uint64_t v21 = v11;
    uint64_t v22 = sub_10000CC64();
    uint64_t v23 = sub_10003CCE8((uint64_t)v54, v55);
    __chkstk_darwin(v23);
    unint64_t v25 = (uint64_t *)&v48[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *))(v26 + 16))(v25);
    uint64_t v27 = *v25;
    uint64_t v52 = type metadata accessor for FamilyFetcher();
    BOOL v53 = &off_1006A5950;
    v51[0] = v27;
    uint64_t v28 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCTipsManager(0));
    uint64_t v29 = sub_10003CCE8((uint64_t)v51, v52);
    __chkstk_darwin(v29);
    uint64_t v31 = (uint64_t *)&v48[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *))(v32 + 16))(v31);
    uint64_t v33 = *v31;
    id v34 = a2;
    unint64_t v35 = sub_100031E20(v21, v33, a2, v22, v28);
    sub_10009B1B8((uint64_t)v51);
    sub_10009B1B8((uint64_t)v54);
    unint64_t v36 = *(void **)&v11[v20];
    *(void *)&v11[v20] = v35;

    if (*(void *)&v11[v20]) {
LABEL_11:
    }
      sub_100017D1C();
    uint64_t v37 = type metadata accessor for TaskPriority();
    uint64_t v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    uint64_t v39 = (uint64_t)v50;
    v38(v50, 1, 1, v37);
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v41 = static MainActor.shared.getter();
    uint64_t v42 = (void *)swift_allocObject();
    v42[2] = v41;
    v42[3] = &protocol witness table for MainActor;
    v42[4] = v40;
    swift_release();
    uint64_t v43 = sub_10003D154(v39, (uint64_t)&unk_10070AB40, (uint64_t)v42);
    swift_beginAccess();
    swift_retain();
    sub_10003CD38(v51, v43);
    swift_endAccess();
    swift_release();
    v38((unsigned char *)v39, 1, 1, v37);
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v45 = static MainActor.shared.getter();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v45;
    *(void *)(v46 + 24) = &protocol witness table for MainActor;
    *(void *)(v46 + 32) = v44;
    *(unsigned char *)(v46 + 40) = v49;
    swift_release();
    uint64_t v47 = sub_10003D154(v39, (uint64_t)&unk_10070AB50, v46);
    swift_beginAccess();
    swift_retain();
    sub_10003CD38(v51, v47);
    swift_endAccess();

    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10003CCE8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10003CD38(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  Task.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v5 + 56;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
    unsigned int v15 = a1;
    goto LABEL_8;
  }
  swift_retain();
  char v10 = static Task.== infix(_:_:)();
  swift_release();
  if ((v10 & 1) == 0)
  {
    unint64_t v8 = (v8 + 1) & ~v7;
    unsigned int v15 = a1;
    if ((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      while (1)
      {
        swift_retain();
        char v11 = static Task.== infix(_:_:)();
        swift_release();
        if (v11) {
          break;
        }
        unint64_t v8 = (v8 + 1) & ~v7;
        if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          goto LABEL_8;
        }
      }
      a1 = v15;
      goto LABEL_10;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v13 = swift_retain();
    sub_10003CF4C(v13, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v16;
    swift_bridgeObjectRelease();
    void *v15 = a2;
    return 1;
  }
LABEL_10:
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
  swift_retain();
  return 0;
}

Swift::Int sub_10003CF4C(Swift::Int result, unint64_t i, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_1000101DC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000F3930();
      goto LABEL_13;
    }
    sub_100008724();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Task.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  uint64_t i = result & ~v9;
  uint64_t v10 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    swift_retain();
    char v11 = static Task.== infix(_:_:)();
    uint64_t result = swift_release();
    if (v11) {
      goto LABEL_16;
    }
    uint64_t v12 = ~v9;
    for (uint64_t i = (i + 1) & v12; ((*(void *)(v10 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; uint64_t i = (i + 1) & v12)
    {
      swift_retain();
      char v13 = static Task.== infix(_:_:)();
      uint64_t result = swift_release();
      if (v13) {
        goto LABEL_16;
      }
    }
  }
LABEL_13:
  uint64_t v14 = *v18;
  *(void *)(*v18 + 8 * (i >> 6) + 56) |= 1 << i;
  *(void *)(*(void *)(v14 + 48) + 8 * i) = v5;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  sub_1000CBE70(&qword_100705B68);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10003D154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000CBBA4(a1, &qword_100707AC0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_10003D300(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void), uint64_t a7)
{
  v241 = a6;
  id v238 = a5;
  v235 = a4;
  uint64_t v228 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v227 = *(void *)(v228 - 8);
  __chkstk_darwin(v228);
  v225 = (char *)&v216 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = type metadata accessor for DispatchQoS();
  uint64_t v224 = *(void *)(v226 - 8);
  __chkstk_darwin(v226);
  v223 = (char *)&v216 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v216 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v229 = (uint64_t)&v216 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v216 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v216 - v21;
  uint64_t v240 = type metadata accessor for Logger();
  uint64_t v239 = *(void *)(v240 - 8);
  uint64_t v23 = __chkstk_darwin(v240);
  unint64_t v25 = (char *)&v216 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  v231 = (char *)&v216 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v236 = (char *)&v216 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v234 = (char *)&v216 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v237 = (char *)&v216 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v232 = (char *)&v216 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v216 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  v233 = (char *)&v216 - v40;
  __chkstk_darwin(v39);
  v230 = (char *)&v216 - v41;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v43 = (char *)Strong;
  swift_beginAccess();
  uint64_t v44 = *(void **)(a2 + 16);
  if (!v44) {
    goto LABEL_8;
  }
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v45 = (char *)swift_dynamicCastClass();
  if (!v45) {
    goto LABEL_8;
  }
  id v222 = v44;
  uint64_t v219 = a7;
  uint64_t v46 = *(void **)&v43[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  uint64_t v47 = *(void **)&v43[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
  uint64_t v221 = v45;
  uint64_t v48 = swift_dynamicCastClass();
  uint64_t v220 = v43;
  if (v48 && (unsigned int v49 = *(void **)(v48 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0)
  {
    id v218 = v47;
    id v50 = v49;
    id v51 = v222;
    id v52 = v46;
    char v53 = sub_10001076C(v50, (uint64_t)v47);

    uint64_t v43 = v220;
    if ((v53 & 1) == 0)
    {

      a7 = v219;
LABEL_8:
      static Logger.UI.getter();
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "About to resolve the empty location.", v56, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v239 + 8))(v25, v240);
      uint64_t v57 = [self defaultLocation];
      sub_10004336C(v57, 0, (void (*)(void, void))v241, a7);

      return;
    }
  }
  else
  {
    id v58 = v222;
  }
  swift_beginAccess();
  if (*(unsigned char *)(a3 + 16) != 1)
  {
    id v78 = v222;
    id v79 = v221;
    id v80 = [v221 identifier];
    id v81 = [v79 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v82 = objc_allocWithZone((Class)DOCConcreteLocation);
    NSString v83 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v84 = [v82 initWithSourceIdentifier:v80 title:v83];

    self;
    [v84 setIsFPV2:swift_dynamicCastObjCClass() == 0];
    NSString v85 = [v79 promptText];
    if (!v85)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v85 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v84 setPromptText:v85];

    id v86 = v78;
    ((void (*)(id, id))v241)(v84, v79);

    goto LABEL_69;
  }
  unint64_t v59 = (void *)swift_allocObject();
  unint64_t v60 = v235;
  v59[2] = v235;
  id v61 = v238;
  swift_getObjectType();
  id v62 = v60;
  int v63 = DOCNode.isFINode.getter();
  id v218 = v59;
  LODWORD(v235) = v63;
  if (v63)
  {
    self;
    uint64_t v64 = (void *)swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    id v65 = v62;
    id v66 = sub_10001F50C(v64, v65);

    v59[2] = v66;
    uint64_t v67 = *(void **)&v221[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v67 && [v67 isUsingFPFS])
    {
      uint64_t v68 = v64;
      uint64_t v69 = v230;
      static Logger.Enumeration.getter();
      swift_unknownObjectRetain_n();
      id v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.info.getter();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v73 = v237;
      if (v72)
      {
        uint64_t v74 = swift_slowAlloc();
        aBlock = (char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 136315394;
        uint64_t v248 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v74 + 12) = 2080;
        id v75 = [v68 fileURL];
        if (v75)
        {
          os_log_type_t v76 = v75;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v77 = type metadata accessor for URL();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v20, 0, 1, v77);
        }
        else
        {
          uint64_t v77 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v20, 1, 1, v77);
        }
        sub_1000CBE0C((uint64_t)v20, (uint64_t)v22, &qword_1007076B0);
        type metadata accessor for URL();
        uint64_t v118 = *(void *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v22, 1, v77) == 1)
        {
          uint64_t v119 = 4271950;
          sub_1000CBBA4((uint64_t)v22, &qword_1007076B0);
          unint64_t v120 = 0xE300000000000000;
        }
        else
        {
          uint64_t v119 = URL.absoluteString.getter();
          unint64_t v120 = v121;
          (*(void (**)(char *, uint64_t))(v118 + 8))(v22, v77);
        }
        uint64_t v248 = sub_10009B0E4(v119, v120, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v122 = v238;
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "%s: FPFS Location has an FINode with URL: %s.", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        id v61 = v122;
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();

        unsigned int v101 = *(void (**)(char *, uint64_t))(v239 + 8);
        uint64_t v103 = v230;
        goto LABEL_43;
      }

LABEL_31:
      swift_unknownObjectRelease_n();
      unsigned int v101 = *(void (**)(char *, uint64_t))(v239 + 8);
      uint64_t v103 = v69;
LABEL_43:
      uint64_t v115 = v240;
      v101(v103, v240);
      id v116 = v221;
      id v117 = v222;
      goto LABEL_44;
    }
    uint64_t v69 = v233;
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain_n();
    uint64_t v94 = Logger.logObject.getter();
    os_log_type_t v95 = static os_log_type_t.info.getter();
    BOOL v96 = os_log_type_enabled(v94, v95);
    uint64_t v73 = v237;
    if (!v96)
    {

      goto LABEL_31;
    }
    uint64_t v97 = swift_slowAlloc();
    aBlock = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v97 = 136315650;
    uint64_t v248 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v97 + 12) = 2080;
    id v98 = [v64 fileURL];
    id v217 = v64;
    if (v98)
    {
      uint64_t v99 = v98;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v100 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v15, 0, 1, v100);
    }
    else
    {
      uint64_t v100 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v15, 1, 1, v100);
    }
    uint64_t v104 = (uint64_t)v15;
    uint64_t v105 = v229;
    sub_1000CBE0C(v104, v229, &qword_1007076B0);
    type metadata accessor for URL();
    uint64_t v106 = *(void *)(v100 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v105, 1, v100) == 1)
    {
      uint64_t v107 = 4271950;
      sub_1000CBBA4(v105, &qword_1007076B0);
      unint64_t v108 = 0xE300000000000000;
    }
    else
    {
      uint64_t v107 = URL.absoluteString.getter();
      unint64_t v108 = v109;
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v105, v100);
    }
    uint64_t v248 = sub_10009B0E4(v107, v108, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v110 = v238;
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v97 + 22) = 2080;
    id v111 = [v217 fpItem];
    uint64_t v248 = (uint64_t)v111;
    sub_1000CBE70(&qword_10070B670);
    uint64_t v112 = Optional.debugDescription.getter();
    unint64_t v114 = v113;

    id v61 = v110;
    uint64_t v248 = sub_10009B0E4(v112, v114, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v94, v95, "%s: FPv2 Location has an FINode with URL: %s and FPItem: %s.", (uint8_t *)v97, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    unsigned int v101 = *(void (**)(char *, uint64_t))(v239 + 8);
    uint64_t v102 = v233;
  }
  else
  {
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain_n();
    id v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = swift_slowAlloc();
      aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136315394;
      uint64_t v248 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v89 + 12) = 2080;
      id v90 = [v238 displayName];
      uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v93 = v92;

      uint64_t v248 = sub_10009B0E4(v91, v93, (uint64_t *)&aBlock);
      id v61 = v238;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "%s: Location has an FPItem : %s.", (uint8_t *)v89, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    unsigned int v101 = *(void (**)(char *, uint64_t))(v239 + 8);
    uint64_t v102 = v38;
  }
  uint64_t v115 = v240;
  v101(v102, v240);
  id v116 = v221;
  id v117 = v222;
  uint64_t v73 = v237;
LABEL_44:
  v237 = (char *)OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
  uint64_t v123 = *(void **)&v116[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (!v123
    || (id v124 = v123,
        char v125 = FPProviderDomain.shouldUseDSEnumeration.getter(),
        v124,
        id v117 = v222,
        (v125 & 1) == 0))
  {
    static Logger.Enumeration.getter();
    id v136 = v117;
    os_log_type_t v137 = Logger.logObject.getter();
    os_log_type_t v138 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v137, v138))
    {
      v233 = (char *)v101;
      uint64_t v139 = swift_slowAlloc();
      aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v139 = 136315394;
      uint64_t v248 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v139 + 12) = 2080;
      unint64_t v140 = *(void **)&v237[(void)v221];
      if (v140)
      {
        id v141 = [v140 identifier];
        uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v144 = v143;
      }
      else
      {
        uint64_t v142 = 4271950;
        unint64_t v144 = 0xE300000000000000;
      }
      uint64_t v248 = sub_10009B0E4(v142, v144, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v137, v138, "%s: Domain does NOT support DS enumeration: %s.", (uint8_t *)v139, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v115 = v240;
      unsigned int v101 = (void (*)(char *, uint64_t))v233;
      ((void (*)(char *, uint64_t))v233)(v73, v240);
      int v145 = 1;
      goto LABEL_59;
    }

    v101(v73, v115);
    int v145 = 1;
LABEL_54:
    id v146 = v220;
    goto LABEL_60;
  }
  uint64_t v126 = v232;
  static Logger.Enumeration.getter();
  id v127 = v117;
  uint64_t v128 = Logger.logObject.getter();
  os_log_type_t v129 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v128, v129))
  {

    v101(v126, v115);
    int v145 = 0;
    goto LABEL_54;
  }
  v233 = (char *)v101;
  uint64_t v130 = swift_slowAlloc();
  aBlock = (char *)swift_slowAlloc();
  *(_DWORD *)uint64_t v130 = 136315394;
  uint64_t v248 = sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v130 + 12) = 2080;
  uint64_t v131 = *(void **)&v237[(void)v221];
  if (v131)
  {
    id v132 = [v131 identifier];
    uint64_t v133 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v135 = v134;
  }
  else
  {
    uint64_t v133 = 4271950;
    unint64_t v135 = 0xE300000000000000;
  }
  uint64_t v248 = sub_10009B0E4(v133, v135, (uint64_t *)&aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v128, v129, "%s: Domain supports DS enumeration: %s.", (uint8_t *)v130, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v115 = v240;
  unsigned int v101 = (void (*)(char *, uint64_t))v233;
  ((void (*)(char *, uint64_t))v233)(v126, v240);
  int v145 = 0;
LABEL_59:
  id v146 = v220;
  id v61 = v238;
LABEL_60:
  long long v147 = v236;
  int v148 = (int)v235;
  self;
  id v149 = (void *)swift_dynamicCastObjCClass();
  if (v149)
  {
    unsigned __int8 v150 = [v149 isTrashed];
    if ((v148 | v145) & 1) != 0 || (v150) {
      goto LABEL_66;
    }
  }
  else if ((v148 | v145))
  {
LABEL_66:
    uint64_t v153 = v234;
    static Logger.Enumeration.getter();
    unint64_t v154 = Logger.logObject.getter();
    os_log_type_t v155 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v154, v155))
    {
      id v156 = (uint8_t *)swift_slowAlloc();
      aBlock = (char *)swift_slowAlloc();
      *(_DWORD *)id v156 = 136315138;
      v249 = (void *)sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v154, v155, "%s: NOT trying to resolve to Node, (either location already has a Node, or Domain needs FPItemCollection, see logs above)", v156, 0xCu);
      swift_arrayDestroy();
      id v146 = v220;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    v101(v153, v115);
    v157 = v241;
    os_log_type_t v158 = (void *)*((void *)v218 + 2);
    id v86 = v222;
    id v159 = v158;
    v157();
    swift_release();

LABEL_69:
    return;
  }
  swift_beginAccess();
  unint64_t v151 = swift_bridgeObjectRetain();
  char v152 = sub_100237FBC(v151);
  swift_bridgeObjectRelease();
  if (v152) {
    goto LABEL_66;
  }
  static Logger.Enumeration.getter();
  swift_unknownObjectRetain_n();
  uint64_t v160 = v147;
  uint64_t v161 = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v161, v162))
  {
    uint64_t v163 = swift_slowAlloc();
    aBlock = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v163 = 136315394;
    v249 = (void *)sub_10009B0E4(0xD00000000000004ALL, 0x80000001005DE930, (uint64_t *)&aBlock);
    v233 = (char *)v101;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v163 + 12) = 2080;
    id v164 = [v61 displayName];
    uint64_t v165 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v167 = v166;

    id v61 = v238;
    uint64_t v168 = v165;
    uint64_t v115 = v240;
    v249 = (void *)sub_10009B0E4(v168, v167, (uint64_t *)&aBlock);
    unsigned int v101 = (void (*)(char *, uint64_t))v233;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v161, v162, "%s: Location needs to be resolved to FINode : Node (%s.", (uint8_t *)v163, 0x16u);
    swift_arrayDestroy();
    id v146 = v220;
    swift_slowDealloc();
    swift_slowDealloc();

    id v169 = v236;
  }
  else
  {

    swift_unknownObjectRelease_n();
    id v169 = v160;
  }
  v101(v169, v115);
  uint64_t v170 = v219;
  id v171 = v222;
  self;
  id v172 = (void *)swift_dynamicCastObjCClassUnconditional();
  swift_unknownObjectRetain();
  unsigned int v173 = [v172 isRootItem];
  os_log_type_t v174 = v231;
  if (v173)
  {
    uint64_t v240 = *(void *)&v146[OBJC_IVAR____TtC5Files22DOCHierarchyController_nodeResolvingQueue];
    uint64_t v175 = (void *)swift_allocObject();
    id v176 = v218;
    v175[2] = v221;
    v175[3] = v176;
    v177 = v241;
    v175[4] = v61;
    v175[5] = v177;
    v175[6] = v170;
    v246 = sub_10023DEC0;
    v247 = v175;
    aBlock = (char *)_NSConcreteStackBlock;
    uint64_t v243 = 1107296256;
    v244 = sub_1000666D8;
    v245 = &unk_100699428;
    id v178 = v146;
    v179 = _Block_copy(&aBlock);
    id v180 = v171;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    id v181 = v223;
    static DispatchQoS.unspecified.getter();
    v249 = _swiftEmptyArrayStorage;
    sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    v182 = v225;
    uint64_t v183 = v228;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v179);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v227 + 8))(v182, v183);
    (*(void (**)(char *, uint64_t))(v224 + 8))(v181, v226);

    swift_release();
    swift_release();
    return;
  }
  uint64_t v184 = *(void **)&v237[(void)v221];
  if (!v184)
  {
LABEL_81:
    id v197 = v61;
    uint64_t v198 = v170;
    int v199 = *(void **)&v146[OBJC_IVAR____TtC5Files22DOCHierarchyController_itemManager];
    uint64_t v200 = swift_allocObject();
    swift_unknownObjectWeakInit();
    os_log_t v201 = (void *)swift_allocObject();
    id v202 = v218;
    v201[2] = v200;
    v201[3] = v202;
    v203 = v221;
    v201[4] = v197;
    v201[5] = v203;
    v201[6] = v241;
    v201[7] = v198;
    v246 = sub_10023DEB0;
    v247 = v201;
    aBlock = (char *)_NSConcreteStackBlock;
    uint64_t v243 = 1107296256;
    v244 = sub_1001B6B50;
    v245 = &unk_100699388;
    v204 = _Block_copy(&aBlock);
    v205 = v146;
    id v206 = v222;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    id v207 = v199;
    swift_release();
    [v207 fetchURLForItem:v172 completionHandler:v204];

    _Block_release(v204);
    swift_release();
    swift_unknownObjectRelease();

    return;
  }
  id v185 = v184;
  if ((FPProviderDomain.shouldResolveDSNodeAsFPv2.getter() & 1) == 0)
  {

    goto LABEL_81;
  }
  v233 = (char *)v101;
  static Logger.Enumeration.getter();
  swift_unknownObjectRetain_n();
  v237 = (char *)v185;
  v186 = Logger.logObject.getter();
  os_log_type_t v187 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v186, v187))
  {
    uint64_t v188 = swift_slowAlloc();
    v189 = (void *)swift_slowAlloc();
    v236 = (char *)swift_slowAlloc();
    aBlock = v236;
    *(_DWORD *)uint64_t v188 = 136315394;
    id v190 = [v238 displayName];
    uint64_t v191 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v193 = v192;

    v249 = (void *)sub_10009B0E4(v191, v193, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v188 + 12) = 2112;
    v249 = v237;
    uint64_t v194 = v237;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v189 = v184;

    uint64_t v170 = v219;
    _os_log_impl((void *)&_mh_execute_header, v186, v187, "Building FINode from FPv2 node: (%s) with domain (%@)", (uint8_t *)v188, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    id v61 = v238;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v146 = v220;
    swift_slowDealloc();

    id v195 = v231;
    uint64_t v196 = v240;
  }
  else
  {

    id v208 = v237;
    swift_unknownObjectRelease_n();
    id v195 = v174;
    uint64_t v196 = v115;
  }
  ((void (*)(char *, uint64_t))v233)(v195, v196);
  id v209 = self;
  uint64_t v210 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v211 = (void *)swift_allocObject();
  id v212 = v218;
  v211[2] = v210;
  v211[3] = v212;
  v211[4] = v221;
  v211[5] = v61;
  v211[6] = v241;
  v211[7] = v170;
  v246 = sub_10023DEB8;
  v247 = v211;
  aBlock = (char *)_NSConcreteStackBlock;
  uint64_t v243 = 1107296256;
  v244 = sub_10000CAE4;
  v245 = &unk_1006993D8;
  uint64_t v213 = _Block_copy(&aBlock);
  id v214 = v222;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  v215 = v237;
  swift_release();
  [v209 fiNodeFromItem:v172 inFPv2Domain:v215 completion:v213];
  _Block_release(v213);

  swift_release();
  swift_unknownObjectRelease();
}

void sub_10003F434(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for DOCItemCollectionGridCell();
  uint64_t v6 = *a3;
  id v7 = v9.receiver;
  id v8 = [super v6];
  a4(v8);
}

void sub_10003F49C()
{
  uint64_t v1 = v0;
  if ([v0 doc_scheduleHandlerIfInLiveResize:@"_doc_performLiveResizeSkipped_updateNavigationButtons"])return; {
  id v2 = [v0 traitCollection];
  }
  BOOL v3 = sub_1000951EC(32);

  if (!v3) {
    return;
  }
  id v4 = [v1 enclosingTabSwitcherStyle];
  Swift::Int v5 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  unsigned __int8 v6 = [v5 isFilesApp];
  if (v4 == (id)1) {
    unsigned __int8 v7 = v6;
  }
  else {
    unsigned __int8 v7 = 0;
  }
  if (([v1 enclosedInUIPDocumentLanding] & 1) != 0
    || [v5 isPickerUI] && sub_10000D8DC() != 2)
  {
    object = 0;
  }
  else
  {
    id v9 = [v5 hostBundleTitle];
    if (!v9)
    {
LABEL_15:
      id v12 = (id)_DocumentManagerBundle();
      if (!v12)
      {
        __break(1u);
        return;
      }
      uint64_t v13 = v12;
      v53._object = (void *)0x80000001005E2120;
      v14._Swift::Int countAndFlagsBits = 0x6573776F7242;
      v14._object = (void *)0xE600000000000000;
      v15._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
      v15._object = (void *)0xEB00000000656C62;
      v16._Swift::Int countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      v53._Swift::Int countAndFlagsBits = 0xD00000000000007BLL;
      object = DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v53)._object;

      goto LABEL_17;
    }
    uint64_t v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    object = v11;

    if (v7 & 1) != 0 || ([v5 isPickerUI])
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
  }
LABEL_17:
  id v17 = [v1 splitViewController];
  if (!v17) {
    goto LABEL_21;
  }
  uint64_t v18 = v17;
  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();
  if (!v19)
  {
    unsigned int v21 = 0;
    goto LABEL_23;
  }
  id v20 = [v19 fullDocumentManagerViewController];

  if (!v20)
  {
LABEL_21:
    unsigned int v21 = 0;
    goto LABEL_24;
  }
  unsigned int v21 = [v20 allowsPickingMultipleItems];
  uint64_t v18 = v20;
LABEL_23:

LABEL_24:
  unsigned int v22 = [v5 isPickerUI];
  id v23 = [v1 navigationItem];
  id v51 = [v23 searchController];

  if (v51)
  {
    if ([v51 isActive]) {
      goto LABEL_31;
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (int v25 = v22 & v21,
        unsigned int v26 = [Strong sidebarViewControllerWithIsCollapsed:v1],
        swift_unknownObjectRelease(),
        ((v26 ^ 1 | v25) & 1) == 0))
  {
    id v51 = *(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_searchController];
  }
  else
  {
    id v51 = 0;
  }
LABEL_31:
  uint64_t v27 = sub_10003FBBC();
  if (([v1 sidebarVisibilityPinnedToWindowSizingOnly] & 1) != 0
    || [v5 isPickerUI]
    || sub_10000D8DC() == 2)
  {
    uint64_t v28 = 1;
  }
  else
  {
    uint64_t v28 = sub_10000D8DC() & 1;
  }
  [(objc_class *)v27 setHidden:v28];

  uint64_t v29 = sub_10003FBBC();
  NSString v30 = String._bridgeToObjectiveC()();
  [(objc_class *)v29 setAccessibilityIdentifier:v30];

  id v31 = [v1 navigationItem];
  [v31 setSearchController:v51];

  id v32 = [v1 navigationItem];
  unsigned int v33 = [v1 enclosedInUIPDocumentLanding];
  if (object) {
    int v34 = v33;
  }
  else {
    int v34 = 1;
  }
  if (v34) {
    uint64_t v35 = 2;
  }
  else {
    uint64_t v35 = 1;
  }
  [v32 setLargeTitleDisplayMode:v35];

  id v36 = [v1 navigationItem];
  if (object)
  {
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v37 = 0;
  }
  [v36 setTitle:v37];

  id v38 = [v1 navigationItem];
  [v38 _setSupportsTwoLineLargeTitles:1];

  id v39 = [v1 navigationItem];
  [v39 _setPreserveSearchBarAcrossTransitions:1];

  sub_100020748();
  id v40 = [v1 navigationItem];
  uint64_t v41 = sub_1000091C8();
  swift_bridgeObjectRetain();
  id v42 = [v40 leftBarButtonItems];
  if (!v42) {
    goto LABEL_47;
  }
  uint64_t v43 = v42;
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  unint64_t v44 = swift_bridgeObjectRetain();
  LOBYTE(v43) = sub_1000AD0F0(v44, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v43)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_47:
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v40 setLeftBarButtonItems:isa];

    swift_bridgeObjectRelease();
  }
  id v46 = [v1 navigationItem];
  uint64_t v47 = sub_100011200();
  sub_1000AA3C0((uint64_t)v47, 0);

  swift_bridgeObjectRelease();
  id v48 = [v1 navigationItem];
  id v49 = [v48 searchController];

  if (v49)
  {
    id v50 = [v49 searchBar];

    [v50 _setEnabled:[v1 isEditing] ^ 1];
  }
}

objc_class *sub_10003FBBC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_bbiStorage);
  swift_beginAccess();
  id v2 = *(objc_class **)(v1 + 24);
  if (v2)
  {
    swift_retain();
    BOOL v3 = v2;
LABEL_5:
    swift_endAccess();
    uint64_t v18 = v2;
    swift_release();
    return v3;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  id v4 = self;
  swift_retain();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 _systemImageNamed:v5 withConfiguration:0];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  v19.Swift::Bool is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v19.value.super.Class isa = 0;
  v20.value.super.super.Class isa = 0;
  unsigned __int8 v7 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v19, v20, v21).super.super.isa;
  uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    id v9 = result;
    v22._Swift::Int countAndFlagsBits = 0xD00000000000003ELL;
    v22._object = (void *)0x80000001005E3030;
    v10._Swift::Int countAndFlagsBits = 0x6469532065646948;
    v10._object = (void *)0xEC00000072616265;
    v11._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
    v11._object = (void *)0xEB00000000656C62;
    v12._Swift::Int countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v22);

    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [(objc_class *)v7 setAccessibilityLabel:v13];

    Swift::String v14 = v7;
    NSString v15 = String._bridgeToObjectiveC()();
    [(objc_class *)v14 setAccessibilityIdentifier:v15];

    [(objc_class *)v14 setAccessibilityTraits:UIAccessibilityTraitButton];
    *(void *)(v1 + 24) = v14;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A04F0;
    *(void *)(v16 + 32) = v14;
    specialized Array._endMutation()();
    BOOL v3 = v14;
    uint64_t v17 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    id v2 = 0;
    *(void *)(v1 + 16) = v17;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_100040024(uint64_t a1, void *a2, unint64_t a3, void *a4, int a5)
{
  LODWORD(v172) = a5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v159 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v171 = (char *)&v159 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unsigned int v173 = (char *)&v159 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  UIImage_optional v19 = (char *)&v159 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  Swift::String v22 = (char *)&v159 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v159 - v23;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v169 = v12;
    uint64_t v177 = v9;
    uint64_t v178 = v8;
    uint64_t v26 = OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration;
    v179 = Strong;
    id v27 = *(id *)&Strong[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
    uint64_t v175 = a4;
    id v176 = a2;
    unint64_t v174 = a3;
    id v42 = (char *)sub_100015560(v27, a2, a3, a4);
    unint64_t v44 = v43;
    uint64_t v167 = v26;
    uint64_t v168 = v45;
    unint64_t v170 = v46;

    if (v44)
    {
      uint64_t v180 = 0;
      unint64_t v181 = 0xE000000000000000;
      uint64_t v47 = v168;
      id v48 = v44;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      uint64_t v180 = 0xD000000000000012;
      unint64_t v181 = 0x80000001005DEC30;
      if (v42)
      {
        if (v42 == (char *)1)
        {
          unint64_t v49 = 0xE600000000000000;
          uint64_t v50 = 0x646572616853;
        }
        else if (v42 == (char *)2)
        {
          unint64_t v49 = 0xE600000000000000;
          uint64_t v50 = 0x6573776F7242;
        }
        else
        {
          unint64_t v49 = 0xE500000000000000;
          uint64_t v50 = 0x3F3F3F3F3FLL;
        }
      }
      else
      {
        unint64_t v49 = 0xE700000000000000;
        uint64_t v50 = 0x73746E65636552;
      }
      unint64_t v51 = v49;
      String.append(_:)(*(Swift::String *)&v50);
      swift_bridgeObjectRelease();
      v52._Swift::Int countAndFlagsBits = 41;
      v52._object = (void *)0xE100000000000000;
      String.append(_:)(v52);
      unint64_t v53 = v181;
      uint64_t v166 = v180;
      uint64_t v165 = OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore;
      uint64_t v54 = v167;
      id v55 = [*(id *)&v179[OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore] interfaceStateForConfiguration:*(void *)&v179[v167]];
      if (v55)
      {
        id v56 = v55;
        id v164 = v55;
        id v57 = v176;
        if (v172)
        {
          static Logger.DocumentManager.getter();
          swift_bridgeObjectRetain_n();
          id v58 = Logger.logObject.getter();
          LODWORD(v172) = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v58, (os_log_type_t)v172))
          {
            uint64_t v59 = swift_slowAlloc();
            uint64_t v161 = swift_slowAlloc();
            uint64_t v180 = v161;
            *(_DWORD *)uint64_t v59 = 136315394;
            swift_bridgeObjectRetain();
            uint64_t v183 = sub_10009B0E4(v166, v53, &v180);
            os_log_t v160 = (os_log_t)&v184;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v59 + 12) = 2080;
            id v162 = v48;
            unint64_t v60 = v47;
            if (v42)
            {
              if (v42 == (char *)2)
              {
                unint64_t v61 = 0xE600000000000000;
                uint64_t v62 = 0x6573776F7242;
              }
              else if (v42 == (char *)1)
              {
                unint64_t v61 = 0xE600000000000000;
                uint64_t v62 = 0x646572616853;
              }
              else
              {
                unint64_t v61 = 0xE500000000000000;
                uint64_t v62 = 0x3F3F3F3F3FLL;
              }
            }
            else
            {
              unint64_t v61 = 0xE700000000000000;
              uint64_t v62 = 0x73746E65636552;
            }
            uint64_t v183 = sub_10009B0E4(v62, v61, &v180);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v172, "[%s] Persisting selected tab %s", (uint8_t *)v59, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v177 + 8))(v19, v178);
            id v56 = v164;
            id v57 = v176;
            uint64_t v47 = v60;
            id v48 = v162;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v177 + 8))(v19, v178);
          }
          [v56 updateMostRecentlyVisitedBrowseSourceToTab:v42];
        }
        if ([*(id *)&v179[v54] saveLastVisitedLocation])
        {
          id v171 = v42;
          static Logger.DocumentManager.getter();
          os_log_type_t v76 = v175;
          id v77 = v48;
          unint64_t v78 = v170;
          swift_bridgeObjectRetain_n();
          id v79 = v47;
          swift_bridgeObjectRetain_n();
          id v80 = v57;
          unint64_t v81 = v174;
          swift_bridgeObjectRetain_n();
          id v82 = v76;
          id v176 = v77;
          id v83 = v79;
          id v84 = v80;
          NSString v85 = Logger.logObject.getter();
          os_log_type_t v86 = static os_log_type_t.default.getter();
          int v87 = v86;
          BOOL v88 = os_log_type_enabled(v85, v86);
          id v172 = v83;
          unint64_t v163 = v53;
          if (v88)
          {
            uint64_t v89 = swift_slowAlloc();
            LODWORD(v162) = v87;
            uint64_t v90 = v89;
            uint64_t v161 = swift_slowAlloc();
            uint64_t v180 = v161;
            *(_DWORD *)uint64_t v90 = 136315650;
            swift_bridgeObjectRetain();
            uint64_t v183 = sub_10009B0E4(v166, v53, &v180);
            os_log_t v160 = v85;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v90 + 12) = 2080;
            id v91 = v176;
            id v159 = v84;
            id v92 = v91;
            swift_bridgeObjectRetain();
            id v93 = v83;
            uint64_t v94 = sub_1000418D4(v92, v78, v168);
            os_log_type_t v95 = v82;
            unint64_t v97 = v96;

            swift_bridgeObjectRelease();
            uint64_t v183 = sub_10009B0E4(v94, v97, &v180);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v90 + 22) = 2080;
            id v98 = v159;
            swift_bridgeObjectRetain();
            id v99 = v95;
            uint64_t v100 = sub_1000418D4(v98, v81, v175);
            unint64_t v102 = v101;

            swift_bridgeObjectRelease();
            uint64_t v183 = sub_10009B0E4(v100, v102, &v180);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            uint64_t v103 = v167;
            swift_bridgeObjectRelease_n();

            unint64_t v104 = v170;
            swift_bridgeObjectRelease();
            os_log_t v105 = v160;
            _os_log_impl((void *)&_mh_execute_header, v160, (os_log_type_t)v162, "[%s] Persisting: %s\n ...for runtime state: %s", (uint8_t *)v90, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v106 = v168;
            (*(void (**)(char *, uint64_t))(v177 + 8))(v173, v178);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            id v124 = v176;

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v177 + 8))(v173, v178);
            uint64_t v103 = v167;
            uint64_t v106 = v168;
            unint64_t v104 = v78;
          }
          type metadata accessor for JSONEncoder();
          swift_allocObject();
          JSONEncoder.init()();
          uint64_t v180 = (uint64_t)v176;
          unint64_t v181 = v104;
          v182 = v106;
          sub_1000D7780();
          unint64_t i = dispatch thunk of JSONEncoder.encode<A>(_:)();
          unint64_t v127 = v126;
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v128 = v171;
          if (v171 == (char *)2)
          {
            sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
            id v136 = self;
            id v137 = v176;
            id v138 = [v136 defaultLocation];
            char v139 = static NSObject.== infix(_:_:)();

            if (v139)
            {
              Class isa = 0;
              uint64_t v134 = 0;
              unint64_t v135 = 0xF000000000000000;
            }
            else
            {
              sub_100168CBC(i, v127);
              Class isa = Data._bridgeToObjectiveC()().super.isa;
              uint64_t v134 = i;
              unint64_t v135 = v127;
            }
            sub_100021020(i, v127);
            unint64_t v144 = "setMostRecentlyVisitedBrowsedState_FullBrowser:";
          }
          else if (v171 == (char *)1)
          {
            sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
            os_log_type_t v129 = self;
            id v130 = v176;
            id v131 = [v129 sharedItemsLocation];
            char v132 = static NSObject.== infix(_:_:)();

            if (v132)
            {
              Class isa = 0;
              uint64_t v134 = 0;
              unint64_t v135 = 0xF000000000000000;
            }
            else
            {
              sub_100168CBC(i, v127);
              Class isa = Data._bridgeToObjectiveC()().super.isa;
              uint64_t v134 = i;
              unint64_t v135 = v127;
            }
            sub_100021020(i, v127);
            unint64_t v144 = "setMostRecentlyVisitedBrowsedState_Shared:";
          }
          else
          {
            if (v171)
            {
LABEL_83:
              sub_100021020(i, v127);
              type metadata accessor for DOCTab(0);
              uint64_t v180 = (uint64_t)v128;
              _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
              __break(1u);
              return;
            }
            sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
            unint64_t v140 = self;
            id v141 = v176;
            id v142 = [v140 recentDocumentsLocation];
            char v143 = static NSObject.== infix(_:_:)();

            if (v143)
            {
              Class isa = 0;
              uint64_t v134 = 0;
              unint64_t v135 = 0xF000000000000000;
            }
            else
            {
              sub_100168CBC(i, v127);
              Class isa = Data._bridgeToObjectiveC()().super.isa;
              uint64_t v134 = i;
              unint64_t v135 = v127;
            }
            sub_100021020(i, v127);
            unint64_t v144 = "setMostRecentlyVisitedBrowsedState_Recents:";
          }
          uint64_t v128 = (char *)v164;
          [v164 v144:isa];

          int v145 = v179;
          id v146 = v172;
          if (v135 >> 60 == 15)
          {
LABEL_79:
            [*(id *)&v145[v165] updateInterfaceState:v128 forConfiguration:*(void *)&v145[v103]];

            swift_bridgeObjectRelease_n();
            id v156 = v176;

            return;
          }
          unint64_t v127 = sub_1002272B8();
          uint64_t v180 = v104;
          swift_bridgeObjectRetain();
          if (v168)
          {
            swift_bridgeObjectRetain();
            unint64_t i = (unint64_t)v172;
            char v147 = sub_1000BB74C(i, v104);
            swift_bridgeObjectRelease();
            if ((v147 & 1) == 0)
            {
              if (v104 >> 62) {
                goto LABEL_81;
              }
              id v148 = (id)i;
              goto LABEL_64;
            }
          }
          for (unint64_t i = v104; ; unint64_t i = v180)
          {
            uint64_t v178 = v134;
            uint64_t v180 = (uint64_t)_swiftEmptyArrayStorage;
            if (i >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v134 = _CocoaArrayWrapper.endIndex.getter();
              id v149 = v179;
              if (!v134) {
                goto LABEL_78;
              }
            }
            else
            {
              uint64_t v134 = *(void *)((i & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              id v149 = v179;
              if (!v134) {
                goto LABEL_78;
              }
            }
            if (v134 >= 1)
            {
              for (uint64_t j = 0; j != v134; ++j)
              {
                if ((i & 0xC000000000000001) != 0) {
                  id v151 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v151 = *(id *)(i + 8 * j + 32);
                }
                char v152 = v151;
                id v153 = [v151 node];

                if (v153)
                {
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v180 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v180 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                }
                id v149 = v179;
              }
LABEL_78:
              unint64_t v154 = v149;
              swift_bridgeObjectRelease();
              uint64_t v155 = v180;
              swift_bridgeObjectRelease();
              *(void *)(v127 + 24) = v155;
              swift_bridgeObjectRelease();
              sub_1002BB2D0();
              sub_10023E59C(v178, v135);
              swift_release();
              int v145 = v154;
              uint64_t v103 = v167;
              uint64_t v128 = (char *)v164;
              id v146 = v172;
              goto LABEL_79;
            }
            __break(1u);
LABEL_81:
            swift_bridgeObjectRetain();
            id v157 = (id)i;
            uint64_t v158 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v158 < 0) {
              break;
            }
LABEL_64:
            sub_10051546C(0, 0, i);
          }
          __break(1u);
          goto LABEL_83;
        }
        uint64_t v107 = v171;
        static Logger.DocumentManager.getter();
        id v108 = v48;
        unint64_t v109 = v170;
        swift_bridgeObjectRetain_n();
        id v110 = v47;
        id v111 = v108;
        id v112 = v110;
        swift_bridgeObjectRetain();
        unint64_t v113 = Logger.logObject.getter();
        os_log_type_t v114 = static os_log_type_t.default.getter();
        int v115 = v114;
        if (os_log_type_enabled(v113, v114))
        {
          uint64_t v116 = swift_slowAlloc();
          id v176 = (id)swift_slowAlloc();
          uint64_t v180 = (uint64_t)v176;
          *(_DWORD *)uint64_t v116 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v183 = sub_10009B0E4(v166, v53, &v180);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v116 + 12) = 2080;
          unint64_t v174 = v116 + 14;
          id v117 = v111;
          swift_bridgeObjectRetain();
          id v118 = v112;
          LODWORD(v175) = v115;
          id v119 = v118;
          uint64_t v120 = sub_1000418D4(v117, v109, v168);
          unint64_t v122 = v121;

          swift_bridgeObjectRelease();
          uint64_t v183 = sub_10009B0E4(v120, v122, &v180);
          uint64_t v123 = v179;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease_n();
          uint64_t v54 = v167;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v113, (os_log_type_t)v175, "[%s] Not persisting (opted out): %s", (uint8_t *)v116, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          id v56 = v164;
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v177 + 8))(v171, v178);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v177 + 8))(v107, v178);
          uint64_t v123 = v179;
        }
        [*(id *)&v123[v165] updateInterfaceState:v56 forConfiguration:*(void *)&v123[v54]];

        swift_bridgeObjectRelease_n();
      }
      else
      {
        static Logger.DocumentManager.getter();
        id v63 = v48;
        unint64_t v64 = v170;
        swift_bridgeObjectRetain_n();
        id v65 = v47;
        id v66 = v63;
        id v67 = v65;
        swift_bridgeObjectRetain();
        uint64_t v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = swift_slowAlloc();
          id v176 = (id)swift_slowAlloc();
          uint64_t v180 = (uint64_t)v176;
          *(_DWORD *)uint64_t v70 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v183 = sub_10009B0E4(v166, v53, &v180);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v70 + 12) = 2080;
          uint64_t v175 = (void *)(v70 + 14);
          id v71 = v66;
          swift_bridgeObjectRetain();
          id v72 = v67;
          uint64_t v73 = sub_1000418D4(v71, v64, v168);
          unint64_t v75 = v74;

          swift_bridgeObjectRelease();
          uint64_t v183 = sub_10009B0E4(v73, v75, &v180);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "[%s] Not persisting (store is nil): %s", (uint8_t *)v70, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_bridgeObjectRelease_n();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v177 + 8))(v22, v178);
      }
    }
    else
    {
      static Logger.DocumentManager.getter();
      uint64_t v28 = v175;
      uint64_t v29 = v175;
      id v30 = v176;
      unint64_t v31 = v174;
      swift_bridgeObjectRetain_n();
      id v32 = v29;
      id v33 = v30;
      int v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v34, v35))
      {
        id v36 = (uint8_t *)swift_slowAlloc();
        id v176 = (id)swift_slowAlloc();
        uint64_t v180 = (uint64_t)v176;
        *(_DWORD *)id v36 = 136315138;
        unsigned int v173 = (char *)(v36 + 4);
        id v37 = v33;
        swift_bridgeObjectRetain();
        id v38 = v32;
        uint64_t v39 = sub_1000418D4(v37, v31, v28);
        unint64_t v41 = v40;

        swift_bridgeObjectRelease();
        uint64_t v183 = sub_10009B0E4(v39, v41, &v180);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Not persisting (cannot be restored): %s", v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v177 + 8))(v24, v178);
    }
  }
}

uint64_t sub_1000418D4(void *a1, unint64_t a2, void *a3)
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  if (a3) {
    id v6 = [a3 effectiveTabSwitcherTab];
  }
  else {
    id v6 = [a1 effectiveTabSwitcherTab];
  }
  if (v6 == (id)2)
  {
    unint64_t v11 = 0xE600000000000000;
    uint64_t v10 = 0x6573776F7242;
  }
  else
  {
    unint64_t v7 = 0xE500000000000000;
    uint64_t v8 = 0x3F3F3F3F3FLL;
    if (!v6)
    {
      uint64_t v8 = 0x73746E65636552;
      unint64_t v7 = 0xE700000000000000;
    }
    BOOL v9 = v6 == (id)1;
    if (v6 == (id)1) {
      uint64_t v10 = 0x646572616853;
    }
    else {
      uint64_t v10 = v8;
    }
    if (v9) {
      unint64_t v11 = 0xE600000000000000;
    }
    else {
      unint64_t v11 = v7;
    }
  }
  unint64_t v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  v13._Swift::Int countAndFlagsBits = 0x697461636F6C0A2CLL;
  v13._object = (void *)0xED0000203A736E6FLL;
  String.append(_:)(v13);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (!v14) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v14) {
      goto LABEL_29;
    }
  }
  uint64_t result = sub_100059E2C(0, v14 & ~(v14 >> 63), 0);
  if (v14 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = 0;
  do
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(a2 + 8 * v16 + 32);
    }
    uint64_t v18 = v17;
    id v19 = [v17 displayName];
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;
    }
    else
    {

      unint64_t v23 = 0x80000001005D8DF0;
      uint64_t v21 = 0xD000000000000014;
    }
    unint64_t v25 = _swiftEmptyArrayStorage[2];
    unint64_t v24 = _swiftEmptyArrayStorage[3];
    if (v25 >= v24 >> 1) {
      sub_100059E2C(v24 > 1, v25 + 1, 1);
    }
    ++v16;
    _swiftEmptyArrayStorage[2] = v25 + 1;
    uint64_t v26 = &_swiftEmptyArrayStorage[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
  }
  while (v14 != v16);
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v27 = 7104878;
  v28._Swift::Int countAndFlagsBits = Array.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29._Swift::Int countAndFlagsBits = 0x726F68636E610A2CLL;
  v29._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v29);
  if (a3 && (id v30 = [a3 displayName]) != 0)
  {
    unint64_t v31 = v30;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = v32;
  }
  else
  {
    id v33 = (void *)0xE300000000000000;
  }
  v34._Swift::Int countAndFlagsBits = v27;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  return 0x203A626174;
}

void sub_100041C9C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  BOOL v9 = v2;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v21 = a2;
    uint64_t v22 = v5;
    uint64_t v12 = swift_slowAlloc();
    id v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v12 = 136446722;
    unint64_t v13 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v13)
    {

      __break(1u);
      return;
    }
    uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10009B0E4(v14, v13, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v23 = sub_10009B0E4(a1, v21, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 22) = 2112;
    uint64_t v23 = (uint64_t)v9;
    uint64_t v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v19 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v12, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v16 = &v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v17 = *((void *)v16 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v9, ObjectType, v17);
    swift_unknownObjectRelease();
  }
}

Swift::Int sub_100041FC4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100042080()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1000881AC;
  *(void *)(v3 + 24) = v2;
  void v8[4] = sub_100162A48;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_100087990;
  v8[3] = &unk_1006B76B0;
  id v4 = _Block_copy(v8);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performWithoutAnimation:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.loadView()()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewPool];
  id v2 = sub_10001BCE0();
  uint64_t v3 = v0;
  id v4 = sub_100019F80(v2, v1, v3);

  id v5 = v4;
  [v5 setAllowsMultipleSelection:sub_100017F90()];

  uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  uint64_t v7 = v5;
  [v7 setAllowsMultipleSelectionDuringEditing:[v6 isPopoverOrWidget] ^ 1];

  uint64_t v8 = v7;
  objc_msgSend(v8, "setAllowsFocus:", objc_msgSend(v6, "isPopoverOrWidget") ^ 1);

  BOOL v9 = v8;
  [v9 setSelectionFollowsFocus:[v6 isPopoverOrWidget] ^ 1];

  uint64_t v10 = v9;
  [v10 _setShouldBecomeFocusedOnSelection:[v6 isPopoverOrWidget] ^ 1];

  os_log_type_t v11 = v10;
  NSString v12 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration();
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v11 setFocusGroupIdentifier:v12];

  *((unsigned char *)v11 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI) = 0;
  [v11 setKeyboardDismissMode:1];
  [v3 setRestoresFocusAfterTransition:0];
  uint64_t v13 = type metadata accessor for DOCItemCollectionGridCell();
  uint64_t v14 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
  uint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier + 8];
  uint64_t v16 = (id *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v70[0] = *v16;
  *uint64_t v16 = (id)0x8000000000000000;
  sub_100042D58(v13, v14, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v16 = v70[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  [v3 loadViewIfNeeded];
  uint64_t v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  id v19 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v19)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v21 = v19;
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v22];

  uint64_t v23 = type metadata accessor for DOCItemCollectionListCell(0);
  uint64_t v24 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier];
  uint64_t v25 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier + 8];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v26 = swift_isUniquelyReferenced_nonNull_native();
  v70[0] = *v16;
  *uint64_t v16 = (id)0x8000000000000000;
  sub_100042D58(v23, v24, v25, v26);
  *uint64_t v16 = v70[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  [v3 loadViewIfNeeded];
  uint64_t v27 = *(void **)&v3[v18];
  if (!v27)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v28 = swift_getObjCClassFromMetadata();
  id v29 = v27;
  NSString v30 = String._bridgeToObjectiveC()();
  [v29 registerClass:v28 forCellWithReuseIdentifier:v30];

  uint64_t v31 = type metadata accessor for DOCItemCollectionLargeTextListCell(0);
  uint64_t v32 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier];
  uint64_t v33 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier
                     + 8];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  v70[0] = *v16;
  *uint64_t v16 = (id)0x8000000000000000;
  sub_100042D58(v31, v32, v33, v34);
  *uint64_t v16 = v70[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  [v3 loadViewIfNeeded];
  os_log_type_t v35 = *(void **)&v3[v18];
  if (!v35)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v36 = swift_getObjCClassFromMetadata();
  id v37 = v35;
  NSString v38 = String._bridgeToObjectiveC()();
  [v37 registerClass:v36 forCellWithReuseIdentifier:v38];

  sub_10009E6C4(0, &qword_10070A250);
  uint64_t v39 = swift_getObjCClassFromMetadata();
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  [v11 registerClass:v39 forSupplementaryViewOfKind:v40 withReuseIdentifier:v41];

  NSString v42 = String._bridgeToObjectiveC()();
  NSString v43 = String._bridgeToObjectiveC()();
  [v11 registerClass:v39 forSupplementaryViewOfKind:v42 withReuseIdentifier:v43];

  NSString v44 = String._bridgeToObjectiveC()();
  NSString v45 = String._bridgeToObjectiveC()();
  [v11 registerClass:v39 forSupplementaryViewOfKind:v44 withReuseIdentifier:v45];

  type metadata accessor for DOCItemCollectionViewSectionHeader();
  uint64_t v46 = swift_getObjCClassFromMetadata();
  if (qword_100704F68 != -1) {
    swift_once();
  }
  NSString v47 = String._bridgeToObjectiveC()();
  NSString v48 = String._bridgeToObjectiveC()();
  [v11 registerClass:v46 forSupplementaryViewOfKind:v47 withReuseIdentifier:v48];

  sub_10009E6C4(0, (unint64_t *)&qword_100707730);
  uint64_t v49 = static NSUserDefaults.docUserDefaults.getter();
  if (!v49)
  {
    long long v72 = 0u;
    long long v73 = 0u;
LABEL_19:
    sub_1000CBBA4((uint64_t)&v72, (uint64_t *)&unk_100705D60);
    goto LABEL_20;
  }
  uint64_t v50 = (void *)v49;
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = [v50 objectForKey:v51];

  if (v52)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)uint64_t v70 = 0u;
    long long v71 = 0u;
  }
  sub_1000CBE0C((uint64_t)v70, (uint64_t)&v72, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v73 + 1)) {
    goto LABEL_19;
  }
  sub_10009E6C4(0, &qword_10070A280);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    id v57 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
    swift_beginAccess();
    *(_OWORD *)id v57 = 0u;
    *((_OWORD *)v57 + 1) = 0u;
    goto LABEL_21;
  }
  id v53 = v70[0];
  unsigned int v54 = [v70[0] BOOLValue];

  if (v54) {
    uint64_t v55 = 0;
  }
  else {
    uint64_t v55 = 2;
  }
  id v56 = (uint64_t *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  swift_beginAccess();
  *id v56 = v55;
  v56[1] = 0;
  v56[2] = 0;
  v56[3] = 0;
LABEL_21:
  id v58 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v58)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v59 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DOCNodeDiffableDataSource();
  swift_allocObject();
  unint64_t v60 = v11;
  uint64_t v61 = sub_10000C370((uint64_t)v60, v58, (uint64_t)sub_1000312AC, v59);
  uint64_t v62 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource;
  *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = v61;
  swift_release();
  uint64_t v63 = *(void *)&v3[v62];
  if (!v63)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  if ((*(unsigned char *)(v63 + 16) & 1) == 0) {
    goto LABEL_26;
  }
  unint64_t v64 = *(void **)(v63 + 32);
  if (!v64)
  {
    __break(1u);
LABEL_26:
    unint64_t v64 = *(void **)(v63 + 24);
    if (v64) {
      goto LABEL_27;
    }
LABEL_39:
    __break(1u);
    return;
  }
LABEL_27:
  swift_retain();
  swift_retain();
  id v65 = v64;
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
  swift_release();
  swift_release();

  sub_100029D58();
  id v66 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  if (*(void *)&v66[*(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 48)])
  {
    swift_getObjectType();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectRetain();
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)();
    swift_release_n();
    swift_unknownObjectRelease();
  }
  id v67 = self;
  uint64_t v68 = v60;
  if ([v67 protectedAppsEnabled]
    && v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1)
  {
    char v69 = v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] ^ 1;
  }
  else
  {
    char v69 = 0;
  }
  [v68 setHidden:v69 & 1, v70[0], v70[1], v71, v72, v73];
}

unint64_t sub_100042C20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_1007179C0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v6, (uint64_t)&v15, &qword_100714440);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100042F50(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    os_log_type_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *os_log_type_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1000A54B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100042D58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100042F50(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1003592A0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100043060(result, a4 & 1);
  uint64_t result = sub_100042F50(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v18[2] = v23;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100042EBC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, Swift::Int))
{
  Hasher.init(_seed:)();
  a3(v10, a1, a2);
  Swift::Int v7 = Hasher._finalize()();

  return a4(a1, a2, v7);
}

uint64_t sub_100042F50(uint64_t a1, uint64_t a2)
{
  return sub_100042EBC(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100042F7C);
}

unint64_t sub_100042F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_100043060(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_1007179A0);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    BOOL v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  BOOL v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_10004336C(NSObject *a1, int a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v157 = a4;
  id v156 = a3;
  LODWORD(v146) = a2;
  id ObjectType = (id)swift_getObjectType();
  uint64_t v152 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  id v149 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for DispatchQoS();
  uint64_t v148 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  char v147 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  int v145 = *(void ***)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v140 - v15;
  uint64_t v155 = a1;
  id v17 = [a1 sourceIdentifier];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v20 != v21)
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_5;
    }
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;
    if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29) {
      goto LABEL_10;
    }
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_12;
    }
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;
    if (v42 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v44 == v45) {
      goto LABEL_10;
    }
    char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v46) {
      goto LABEL_12;
    }
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;
    if (v47 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v49 == v50) {
      goto LABEL_10;
    }
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_12;
    }
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;
    if (v52 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v54 == v55)
    {
LABEL_10:
      swift_bridgeObjectRelease_n();
LABEL_12:

      static Logger.UI.getter();
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "We don't have to prepare the parent hierarchy for Tags/Trash/RecentsOnly/SharedItems", v33, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      char v34 = (void *)swift_allocObject();
      uint64_t v35 = v157;
      v34[2] = v156;
      v34[3] = v35;
      uint64_t v36 = v155;
      v34[4] = v155;
      char v37 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
      NSString v38 = (void *)swift_allocObject();
      v38[2] = sub_10006B55C;
      v38[3] = v34;
      v38[4] = v36;
      unint64_t v163 = sub_1000BB090;
      id v164 = v38;
      aBlock = _NSConcreteStackBlock;
      uint64_t v160 = 1107296256;
      uint64_t v39 = &unk_100699978;
LABEL_15:
      uint64_t v161 = sub_1000704F8;
      id v162 = v39;
      NSString v40 = _Block_copy(&aBlock);
      NSString v41 = v36;
      swift_retain();
      swift_retain();
      swift_release();
      [v37 retrieveAllSourcesCompletionBlock:v40];
      _Block_release(v40);
      goto LABEL_35;
    }
    char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v56) {
      goto LABEL_12;
    }
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v58;
    if (v57 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v59 != v60)
    {
      char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v61)
      {
LABEL_60:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;
      if (v62 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v64 == v65)
      {
        swift_bridgeObjectRelease_n();
LABEL_32:

        id v67 = v154;
        uint64_t v68 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        char v69 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        uint64_t v70 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        long long v71 = (void *)swift_allocObject();
        long long v72 = v156;
        v71[2] = v67;
        v71[3] = v72;
        v71[4] = v157;
        id v73 = v70;
        id v74 = v67;
        swift_retain();
        sub_100230898(v68, v69, v70, (uint64_t)sub_10023F924, (uint64_t)v71);
        goto LABEL_33;
      }
      char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v66) {
        goto LABEL_32;
      }
      uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v77 = v76;
      if (v75 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v77 == v78)
      {

        swift_bridgeObjectRelease_n();
LABEL_40:
        id v80 = v154;
        unint64_t v81 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        id v82 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        id v83 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        id v84 = (void *)swift_allocObject();
        NSString v85 = v156;
        v84[2] = v80;
        v84[3] = v85;
        v84[4] = v157;
        id v73 = v83;
        swift_retain();
        id v86 = v80;
        sub_100020114(v81, v82, v83, (uint64_t)sub_10023F920, (uint64_t)v84);
LABEL_33:

        goto LABEL_35;
      }
      char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v79) {
        goto LABEL_40;
      }
      id ObjectType = [v155 node];
      if (!ObjectType)
      {
        if (v146)
        {
          id v100 = [v155 sourceIdentifier];
          unint64_t v101 = (void *)swift_allocObject();
          unint64_t v102 = v154;
          uint64_t v103 = v156;
          v101[2] = v154;
          v101[3] = v103;
          v101[4] = v157;
          unint64_t v104 = *(void **)&v102[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
          uint64_t v105 = *(void *)&v102[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
          uint64_t v106 = (void *)swift_allocObject();
          v106[2] = sub_1000D7548;
          v106[3] = v101;
          v106[4] = v100;
          v106[5] = v102;
          unint64_t v163 = sub_1000D76F4;
          id v164 = v106;
          aBlock = _NSConcreteStackBlock;
          uint64_t v160 = 1107296256;
          uint64_t v161 = sub_1000704F8;
          id v162 = &unk_100699770;
          uint64_t v107 = _Block_copy(&aBlock);
          id v108 = v102;
          swift_retain();
          unint64_t v109 = v108;
          swift_retain();
          id v110 = v100;
          swift_release();
          [v104 retrieveSourcesForConfiguration:v105 usingBlock:v107];
          _Block_release(v107);

          goto LABEL_35;
        }
        id v111 = (void *)swift_allocObject();
        uint64_t v112 = v157;
        v111[2] = v156;
        v111[3] = v112;
        uint64_t v36 = v155;
        v111[4] = v155;
        char v37 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        unint64_t v113 = (void *)swift_allocObject();
        v113[2] = sub_10006B55C;
        v113[3] = v111;
        unsigned char v113[4] = v36;
        unint64_t v163 = sub_1000BB090;
        id v164 = v113;
        aBlock = _NSConcreteStackBlock;
        uint64_t v160 = 1107296256;
        uint64_t v39 = &unk_1006996F8;
        goto LABEL_15;
      }
      uint64_t v87 = swift_allocObject();
      uint64_t v146 = v87;
      *(unsigned char *)(v87 + 16) = 0;
      BOOL v88 = (unsigned char *)(v87 + 16);
      uint64_t v89 = swift_allocObject();
      uint64_t v142 = v89;
      *(unsigned char *)(v89 + 16) = 0;
      uint64_t v90 = (unsigned char *)(v89 + 16);
      uint64_t v144 = swift_allocObject();
      *(void *)(v144 + 16) = 0;
      uint64_t v91 = swift_allocObject();
      uint64_t v143 = v91;
      *(unsigned char *)(v91 + 16) = 0;
      id v141 = (unsigned char *)(v91 + 16);
      id v92 = dispatch_group_create();
      swift_getObjectType();
      if ((DOCNode.isFPItem.getter() & 1) == 0
        || (id v93 = objc_msgSend(ObjectType, "fpfs_fpItem")) == 0)
      {
        *BOOL v88 = 1;
        *uint64_t v90 = 1;
        goto LABEL_54;
      }
      uint64_t v94 = v93;
      dispatch_group_enter(v92);
      os_log_type_t v95 = (void *)swift_allocObject();
      uint64_t v96 = v142;
      v95[2] = v146;
      v95[3] = v96;
      v95[4] = v92;
      swift_retain_n();
      swift_retain_n();
      unint64_t v97 = v92;
      if (([v94 isRootItem] & 1) == 0
        && ![v94 isCollaborationInvitation])
      {
        uint64_t v114 = swift_allocObject();
        *(void *)(v114 + 16) = sub_10023F91C;
        *(void *)(v114 + 24) = v95;
        swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)();
        swift_release();
        swift_release();
        goto LABEL_53;
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      *uint64_t v9 = static OS_dispatch_queue.main.getter();
      id v98 = v145;
      ((void (*)(uint64_t *, void, uint64_t))v145[13])(v9, enum case for DispatchPredicate.onQueue(_:), v7);
      char v99 = _dispatchPreconditionTest(_:)();
      ((void (*)(uint64_t *, uint64_t))v98[1])(v9, v7);
      if (v99)
      {
        swift_beginAccess();
        *(unsigned char *)(v146 + 16) = 1;
        swift_beginAccess();
        *uint64_t v90 = 1;
        dispatch_group_leave(v97);
        swift_release();
LABEL_53:
        swift_release();

        swift_release();
LABEL_54:
        dispatch_group_enter(v92);
        int v115 = (void *)swift_allocObject();
        uint64_t v116 = v144;
        uint64_t v117 = v143;
        v115[2] = v144;
        v115[3] = v117;
        v115[4] = v92;
        id v118 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        id v119 = (void *)swift_allocObject();
        v119[2] = sub_1000D7538;
        v119[3] = v115;
        uint64_t v120 = v155;
        v119[4] = v155;
        unint64_t v163 = sub_1000BB090;
        id v164 = v119;
        aBlock = _NSConcreteStackBlock;
        uint64_t v160 = 1107296256;
        int v145 = &v161;
        uint64_t v161 = sub_1000704F8;
        id v162 = &unk_1006997E8;
        unint64_t v121 = _Block_copy(&aBlock);
        unint64_t v122 = v120;
        uint64_t v155 = v92;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        [v118 retrieveAllSourcesCompletionBlock:v121];
        _Block_release(v121);
        swift_release();
        uint64_t v123 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v124 = (void *)swift_allocObject();
        v124[2] = v123;
        v124[3] = v116;
        v124[4] = v146;
        v124[5] = v122;
        char v125 = v156;
        v124[6] = ObjectType;
        v124[7] = v125;
        v124[8] = v157;
        swift_beginAccess();
        if (*v90 == 1)
        {
          unint64_t v126 = v141;
          swift_beginAccess();
          if (*v126 == 1)
          {
            unint64_t v127 = v122;
            uint64_t v128 = v157;
            swift_retain();
            uint64_t v129 = v146;
            swift_retain();
            uint64_t v130 = v144;
            swift_retain();
            swift_retain();
            id v131 = ObjectType;
            swift_unknownObjectRetain();
            sub_10003D300(v123, v130, v129, v127, v131, v156, v128);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();

            return;
          }
        }
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        char v132 = v122;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_unknownObjectRetain();
        uint64_t v133 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v134 = swift_allocObject();
        *(void *)(v134 + 16) = sub_1000D7520;
        *(void *)(v134 + 24) = v124;
        unint64_t v163 = sub_1000D8564;
        id v164 = (void *)v134;
        aBlock = _NSConcreteStackBlock;
        uint64_t v160 = 1107296256;
        uint64_t v161 = sub_1000666D8;
        id v162 = &unk_100699860;
        unint64_t v135 = _Block_copy(&aBlock);
        swift_retain();
        id v136 = v147;
        static DispatchQoS.unspecified.getter();
        uint64_t v158 = _swiftEmptyArrayStorage;
        sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        id v137 = v149;
        uint64_t v138 = v152;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        char v139 = v155;
        OS_dispatch_group.notify(qos:flags:queue:execute:)();
        _Block_release(v135);

        swift_unknownObjectRelease();
        swift_release();

        (*(void (**)(char *, uint64_t))(v151 + 8))(v137, v138);
        (*(void (**)(char *, uint64_t))(v148 + 8))(v136, v150);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_35:
        swift_release();
        return;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_60;
  }
  swift_bridgeObjectRelease_n();
LABEL_5:

  static Logger.UI.getter();
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    char v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "We don't have to prepare the parent hierarchy for Empty Location", v25, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  v156(v155, 0);
}

void sub_1000448C8(void *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  [v3 beginForcedNavigationTransitionChromeIfNeeded:a1 appearingViewController:a2 animated:a3 & 1];
  type metadata accessor for DOCBrowserContainerController();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8
    || ((uint64_t v9 = *(void **)(v8 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource),
         object_getClass(v9) == (Class)_TtC5Files24DOCPlaceholderDataSource)
      ? (BOOL v10 = v9 == 0)
      : (BOOL v10 = 1),
        v10))
  {
    if (objc_msgSend(v4, "doc_hasAppeared"))
    {
      id v11 = [a2 transitionCoordinator];
      if (v11)
      {
        uint64_t v12 = v11;
        _StringGuts.grow(_:)(48);
        swift_bridgeObjectRelease();
        NSString v41 = (void **)0xD000000000000027;
        unint64_t v42 = 0x80000001005D7650;
        if (a3) {
          uint64_t v13 = 1702195828;
        }
        else {
          uint64_t v13 = 0x65736C6166;
        }
        if (a3) {
          unint64_t v14 = 0xE400000000000000;
        }
        else {
          unint64_t v14 = 0xE500000000000000;
        }
        unint64_t v15 = v14;
        String.append(_:)(*(Swift::String *)&v13);
        swift_bridgeObjectRelease();
        v16._Swift::Int countAndFlagsBits = 0x3A6376202CLL;
        v16._object = (void *)0xE500000000000000;
        String.append(_:)(v16);
        id v17 = [a2 description:v41, v42];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        v21._Swift::Int countAndFlagsBits = v18;
        v21._object = v20;
        String.append(_:)(v21);
        swift_bridgeObjectRelease();
        type metadata accessor for DOCAssertion();
        swift_allocObject();
        uint64_t v22 = DOCAssertion.init(traceInfo:)();
        id v23 = [v4 hierarchyController];
        sub_1000562C0();
        dispatch thunk of DOCAssertionCollection.add(_:autoInvalidationTimeout:)();

        swift_release();
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v22;
        *(void *)(v24 + 24) = v4;
        uint64_t v45 = sub_100180124;
        uint64_t v46 = v24;
        NSString v41 = _NSConcreteStackBlock;
        unint64_t v42 = 1107296256;
        uint64_t v43 = sub_100045AE0;
        uint64_t v44 = &unk_1006934D0;
        char v25 = _Block_copy(&v41);
        swift_retain();
        id v26 = v4;
        swift_release();
        [v12 notifyWhenInteractionChangesUsingBlock:v25];
        _Block_release(v25);
        swift_unknownObjectRelease();
        swift_release();
      }
    }
  }
  id v27 = [a1 lastOperation];
  [v4 setUpdateLocationsAfterPopTransition:v27 == (id)2];
  if ([v4 updateLocationsAfterPopTransition])
  {
    uint64_t v28 = swift_dynamicCastClass();
    if (v28)
    {
      uint64_t v29 = (void **)(v28 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess();
      char v30 = *v29;
      if (v30)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass())
        {
          id v31 = v30;
          DOCItemCollectionViewController.getCurrentLocation()();
          if (v32)
          {
            uint64_t v33 = v32;
            id v34 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
            if (v34)
            {
              uint64_t v35 = v34;
              id v36 = v33;
              [v35 updateSelectionToMatchBrowsedLocation:v36 scrollToVisible:0];
            }
          }
        }
      }
    }
  }
  sub_100044D84([a1 transitionCoordinator], v27 == (id)2);
  swift_unknownObjectRelease();
  id v37 = [v4 internalNavigationController];
  id v38 = [v37 topViewController];

  if (v38)
  {
    id v39 = [v38 navigationItem];

    id v40 = [v39 searchController];
    if (v40)
    {
      type metadata accessor for DOCSearchController();
      swift_dynamicCastClass();
    }
  }
}

void sub_100044D84(void *a1, char a2)
{
  uint64_t v5 = self;
  id v6 = [v2 configuration];
  id v7 = [v6 sceneIdentifier];

  id v8 = [v5 globalTabbedBrowserControllerForIdentifier:v7];
  if (v8)
  {
    if (a1) {
      id v9 = a1;
    }
    else {
      id v9 = [v2 _definiteTransitionCoordinator];
    }
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    *(void *)(v10 + 24) = v8;
    char v11 = a2 & 1;
    *(unsigned char *)(v10 + 32) = a2 & 1;
    id v23 = sub_100045EF0;
    uint64_t v24 = v10;
    uint64_t v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    Swift::String v21 = sub_100045AE0;
    uint64_t v22 = &unk_100693520;
    uint64_t v12 = _Block_copy(&v19);
    swift_unknownObjectRetain();
    id v13 = v2;
    id v14 = v8;
    swift_release();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v13;
    *(void *)(v15 + 24) = v14;
    *(unsigned char *)(v15 + 32) = v11;
    id v23 = sub_100045F54;
    uint64_t v24 = v15;
    uint64_t v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    Swift::String v21 = sub_100045AE0;
    uint64_t v22 = &unk_100693570;
    Swift::String v16 = _Block_copy(&v19);
    id v17 = v13;
    id v18 = v14;
    swift_release();
    [v9 animateAlongsideTransition:v12 completion:v16];
    _Block_release(v16);
    _Block_release(v12);

    swift_unknownObjectRelease();
  }
}

id sub_1000450D4(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v3 = [v1 contentViewController];
      sub_1000450D4();
      id v2 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      id v2 = 0;
    }
  }

  return v2;
}

void DOCItemCollectionViewController.effectiveAppearanceDidChange(_:)(void *a1)
{
  v40.receiver = v1;
  v40.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  id v37 = a1;
  [super effectiveAppearanceDidChange:a1];
  if ((v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
  {
    uint64_t v3 = sub_10003B6F8(0);
    sub_100080930(2);
    if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] == 1)
    {
      uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (!v4)
      {
LABEL_42:
        __break(1u);
        return;
      }
      if (([v4 isGathering] & 1) == 0)
      {
        sub_1000D54D8();
        sub_10003A61C((unint64_t)v3, 0, 0);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v5 && (id v6 = [v5 preparedCells]) != 0)
    {
      id v7 = v6;
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v33 = v1;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_12:
        if (v9 >= 1)
        {
          uint64_t v10 = 0;
          unint64_t v11 = v8 & 0xC000000000000001;
          unint64_t v34 = v8;
          unint64_t v35 = v8 & 0xC000000000000001;
          uint64_t v36 = v9;
          while (1)
          {
            id v12 = v11 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v8 + 8 * v10 + 32);
            id v13 = v12;
            type metadata accessor for DOCItemCollectionCell();
            id v14 = (void *)swift_dynamicCastClass();
            if (v14)
            {
              uint64_t v15 = (*(uint64_t (**)(void))((swift_isaMask & *v14) + 0x1F8))();
              if (v15) {
                break;
              }
            }

LABEL_15:
            if (v9 == ++v10) {
              goto LABEL_39;
            }
          }
          Swift::String v16 = (char *)v15;
          uint64_t v17 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance;
          id v18 = *(void **)(v15 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
          *(void *)(v15 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance) = v37;
          id v19 = v37;
          if (v37)
          {
            if (!v18) {
              goto LABEL_28;
            }
            sub_10009E6C4(0, (unint64_t *)&qword_10070D090);
            id v20 = v18;
            id v21 = v19;
            char v22 = static NSObject.== infix(_:_:)();

            if (v22)
            {

LABEL_34:
              unint64_t v8 = v34;
LABEL_37:
              unint64_t v11 = v35;
              uint64_t v9 = v36;
              goto LABEL_15;
            }
            unint64_t v8 = v34;
            if (*(void *)&v16[v17])
            {
LABEL_28:
              id v23 = *(void **)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
              *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

              uint64_t v24 = &v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title];
              *(void *)uint64_t v24 = 0;
              *((void *)v24 + 1) = 0;
              swift_bridgeObjectRelease();
              sub_1000951C8((uint64_t)v38);
              uint64_t v25 = (uint64_t)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
              sub_1000CBE0C((uint64_t)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v39, &qword_100705560);
              sub_1000CBE0C((uint64_t)v38, v25, &qword_100705560);
              sub_1000A0B6C((uint64_t)v39);
              id v26 = *(void **)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
              *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

              uint64_t v27 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
              uint64_t v28 = *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
              if ((v28 & 1) == 0)
              {
                v28 |= 1uLL;
                *(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v28;
              }
              if (!*(void *)&v16[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                && !sub_1000CBC64())
              {
                *(void *)&v16[v27] = 0;
                sub_100090F98(v28, (uint64_t)v16);
              }

              goto LABEL_34;
            }
          }
          else if (!v18)
          {

LABEL_36:
            goto LABEL_37;
          }

          goto LABEL_36;
        }
        __break(1u);
        goto LABEL_42;
      }
    }
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void *)&v33[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
    swift_beginAccess();
    id v31 = *(void **)(v30 + 96);
    os_log_type_t v32 = *(void **)(v30 + 104);
    *(void *)(v30 + 96) = 0;
    *(void *)(v30 + 104) = 0;
  }
}

void DOCBrowserContainedViewController.effectiveAppearanceDidChange(_:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  [super effectiveAppearanceDidChange:a1];
  *((unsigned char *)v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  id v3 = [v1 viewIfLoaded];
  id v4 = [v3 window];

  if (v4) {
    sub_1000A6988();
  }
  if ([v1 isViewLoaded]) {
    sub_1000457E8(a1);
  }
}

void sub_1000457E8(void *a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground;
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground];
  id v6 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
  swift_beginAccess();
  if (*v6 == 1)
  {
    unsigned int v7 = [v2 enclosedInUIPDocumentLanding];
    if ((((v5 != 0) ^ v7) & 1) == 0) {
      return;
    }
    if (v7)
    {
      id v8 = a1;
      if (!a1) {
        id v8 = [v2 effectiveAppearance];
      }
      uint64_t v9 = qword_100705198;
      id v10 = *(id *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
      id v11 = a1;
      if (v9 != -1) {
        swift_once();
      }
      id v12 = (void *)qword_1007374D0;
      objc_allocWithZone((Class)type metadata accessor for DOCSystemMaterialBackgroundView());
      id v13 = v8;
      id v14 = v12;
      id v15 = sub_10040F8F4(v10, v12, v8);
      Swift::String v16 = *(void **)&v2[v4];
      *(void *)&v2[v4] = v15;
      id v17 = v15;

      id v18 = [v2 view];
      if (!v18)
      {
        __break(1u);
        return;
      }
      id v19 = v18;
      [v17 setAutoresizingMask:18];
      [v19 bounds];
      [v17 setFrame:];
      [v19 insertSubview:v17 atIndex:0];

      goto LABEL_13;
    }
  }
  else if (!v5)
  {
    return;
  }
  id v20 = *(void **)&v2[v4];
  if (!v20) {
    return;
  }
  id v17 = v20;
  [v17 removeFromSuperview];
  id v19 = *(void **)&v2[v4];
  *(void *)&v2[v4] = 0;
LABEL_13:
}

uint64_t sub_100045AE0(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_100045B40()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100045B68(char a1, id a2, void *a3, char a4)
{
  if ((a1 & 1) == 0) {
    [self setAnimationsEnabled:0];
  }
  id v8 = [a2 internalNavigationController];
  uint64_t v9 = (char *)[v8 topViewController];

  if (!v9)
  {
LABEL_10:
    unint64_t v10 = 0;
    goto LABEL_12;
  }
  unint64_t v10 = (unint64_t)[v9 presentedViewController];

  if (v10)
  {
    type metadata accessor for DOCSearchController();
    uint64_t v9 = (char *)swift_dynamicCastClass();
    if (v9)
    {
      unint64_t v10 = (unint64_t)(id)v10;
      if ([v9 isActive])
      {
        id v11 = *(char **)&v9[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
        id v12 = [v11 viewIfLoaded];
        if (v12)
        {
          id v13 = v12;
          unsigned __int8 v14 = [v12 isHidden];

          if ((v14 & 1) == 0)
          {
            id v15 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
            swift_beginAccess();
            unint64_t v16 = *((void *)v15 + 1);
            if (v16 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();

              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            unint64_t v10 = v17 > 0;
            goto LABEL_12;
          }
        }
      }
    }

    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_12:
  [a3 setSafeAreaUpdatesDisabledDuringTransitions:a4 & 1];
  [a3 setIsShowingSearchResults:v10];
  if ((a1 & 1) == 0) {
    [self setAnimationsEnabled:1];
  }
}

void sub_100045EF0()
{
  id v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  char v3 = *(unsigned char *)(v0 + 32);
  char v4 = [self isOnScreen] ^ 1;

  sub_100045B68(v4, v1, v2, v3);
}

void sub_100045F54(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  char v3 = *(void **)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 32);
  char v5 = [a1 isCancelled] ^ 1;

  sub_100045B68(v5, v2, v3, v4);
}

void sub_100045FAC()
{
  sub_100045FB4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100045FB4(uint64_t a1, uint64_t a2)
{
  v3[4] = a1;
  v3[5] = a2;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_1000666D8;
  v3[3] = &unk_1006B3938;
  uint64_t v2 = _Block_copy(v3);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v2);
}

void sub_10004605C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void (*)(void))v0[4];
  sub_1000460B0(v0[3], 0);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_isResetBeingPerformed) = 0;
  if (v2) {
    v2();
  }
}

void sub_1000460B0(uint64_t a1, int a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_wasTimeoutAutoDeactivated;
  uint64_t v10 = OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_active;
  if (DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)())
  {
    uint64_t v26 = v10;
    static Logger.UI.getter();
    id v11 = v2;
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      int v25 = a2;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v23 = v6;
      id v15 = (uint8_t *)v14;
      id v21 = (void *)swift_slowAlloc();
      uint64_t v22 = v9;
      *(_DWORD *)id v15 = 138412290;
      uint64_t v27 = v11;
      unint64_t v16 = v11;
      uint64_t v24 = v5;
      uint64_t v17 = v16;
      LOBYTE(a2) = v25;
      uint64_t v9 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v21 = v11;

      uint64_t v5 = v24;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Resuming work (locationChangePreparationQueue) in hierarchy controller %@", v15, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v23;
      swift_slowDealloc();
    }
    else
    {

      id v12 = v11;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)(a1 + v26) = 0;
    *(unsigned char *)(a1 + v9) = a2 & 1;
    id v18 = (uint64_t *)((char *)v11 + OBJC_IVAR____TtC5Files22DOCHierarchyController_preventImmediateChangeAssertions);
    swift_beginAccess();
    swift_retain();
    int64_t v19 = sub_1000466D8(v18, a1);
    swift_release();
    if ((unint64_t)*v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v20 >= v19) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v20 >= v19)
      {
LABEL_7:
        sub_1000466C0(v19, v20);
        swift_endAccess();
        dispatch_resume(*(dispatch_object_t *)((char *)&v11->isa
                                             + OBJC_IVAR____TtC5Files22DOCHierarchyController_locationChangePreparationQueue));
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1000463D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v21 + v7;
    if (!__OFADD__(v21, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *char v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *char v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        unint64_t v16 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v16 + 8 * v15) {
          memmove((void *)(v13 + 32 + 8 * v5), v16, 8 * v15);
        }
        if (!(v11 >> 62))
        {
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v18 = v17 + v7;
          if (!__OFADD__(v17, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v7;
        if (!__OFADD__(v23, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = v14 - v3;
      if (!__OFSUB__(v14, v3)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_1000466C0(uint64_t a1, uint64_t a2)
{
  return sub_1000463D8(a1, a2, (void (*)(void))type metadata accessor for DOCHierarchyController.PreventChangeAssertion);
}

unint64_t sub_1000466D8(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_100046A14(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      unint64_t v18 = *a1;
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_54;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v9 != v20) {
          goto LABEL_6;
        }
      }
      else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid;
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v11 = i - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_45;
            }
            swift_retain();
          }
          uint64_t v9 = static UUID.== infix(_:_:)();
          swift_release();
          if ((v9 & 1) == 0) {
            break;
          }
LABEL_32:
          uint64_t v9 = i - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_46;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v17 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v17) {
            return v6;
          }
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_47;
          }
          goto LABEL_32;
        }
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_50;
            }
            if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            uint64_t v13 = *(void *)(v9 + 8 * i);
            swift_retain();
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_48;
          }
          if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          uint64_t v12 = *(void *)(v9 + 8 * v6 + 32);
          swift_retain();
          if ((v9 & 0xC000000000000001) == 0) {
            goto LABEL_17;
          }
        }
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = *a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_1000BC324(v9);
          *a1 = v9;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v13;
        swift_release();
        specialized Array._endMutation()();
        uint64_t v9 = *a1;
        int v15 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v15 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_1000BC324(v9);
          *a1 = v9;
        }
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_52;
        }
        if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_53;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v12;
        swift_release();
        specialized Array._endMutation()();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_100046A14(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtCC5Files22DOCHierarchyControllerP33_6DDE472ADD076946F61E7AD97D4F5D0222PreventChangeAssertion_uuid;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    char v6 = static UUID.== infix(_:_:)();
    swift_release();
    if (v6) {
      return v5;
    }
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v7 == v4) {
      return 0;
    }
  }
}

Swift::Void __swiftcall DOCItemCollectionView.layoutSubviews()()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)Strong;
    if (objc_msgSend(Strong, "doc_isAppearing"))
    {
      uint64_t v3 = self;
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v0;
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = sub_100491F98;
      *(void *)(v5 + 24) = v4;
      v9[4] = sub_1000879B8;
      v9[5] = v5;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 1107296256;
      v9[2] = sub_100087990;
      v9[3] = &unk_1006AF480;
      char v6 = _Block_copy(v9);
      id v7 = v0;
      swift_retain();
      swift_release();
      [v3 performWithoutAnimation:v6];

      _Block_release(v6);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
      __break(1u);
    }
  }
  char v8 = (objc_class *)type metadata accessor for DOCItemCollectionView();
  v10.receiver = v0;
  v10.super_class = v8;
  [super layoutSubviews];
}

uint64_t type metadata accessor for DOCItemCollectionView()
{
  return self;
}

uint64_t sub_100046EB0()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    sub_100046F64((uint64_t)v4);

    uint64_t v2 = v5;
    if (v5)
    {
      uint64_t v3 = v6;
      sub_1000A6B78(v4, v5);
      (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
      return sub_10009B1B8((uint64_t)v4);
    }
    else
    {
      return sub_1000CBBA4((uint64_t)v4, &qword_100712EF8);
    }
  }
  return result;
}

double sub_100046F64@<D0>(uint64_t a1@<X8>)
{
  id v3 = [v1 viewIfLoaded];
  id v4 = [v3 window];

  id v5 = [v4 windowScene];
  if (!v5
    || (id v6 = [v5 delegate], v5, !v6)
    || (sub_1000CBE70((uint64_t *)&unk_100712F08), sub_1000CBE70(&qword_100712F00), (swift_dynamicCast() & 1) == 0))
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void sub_10004705C()
{
}

void sub_100047080()
{
  uint64_t v35 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  id v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
  if (!v4) {
    return;
  }
  id v5 = v4;
  id v6 = [v5 presentedViewController];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
    uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    if (v9)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      id v10 = v9;
      id v11 = v7;
      char v12 = static NSObject.== infix(_:_:)();

      if ((v12 & 1) != 0 && (objc_msgSend(v11, "doc_hasDisappearedOrIsDisappearing") & 1) == 0)
      {
        unint64_t v18 = *(void **)&v5[v8];
        if (v18)
        {
          id v19 = [v18 currentPreviewItem];
          if (v19)
          {
            uint64_t v20 = v19;
            if ([v19 respondsToSelector:"previewItemTitle"])
            {
              id v21 = [v20 previewItemTitle];
              swift_unknownObjectRelease();
              if (v21)
              {
                uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v17 = v22;

                goto LABEL_17;
              }
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }

LABEL_16:
        uint64_t v15 = 0;
        uint64_t v17 = 0;
        goto LABEL_17;
      }
    }
  }
  id v13 = [v5 currentLocationTitle];
  if (!v13) {
    goto LABEL_16;
  }
  uint64_t v14 = v13;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

LABEL_17:
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v36 = sub_10009B0E4(0xD000000000000013, 0x80000001005DFF70, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    uint64_t v36 = v15;
    uint64_t v37 = v17;
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    unint64_t v34 = v5;
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v36 = sub_10009B0E4(v26, v27, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Interaction] %s to: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v5 = v34;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v35);
  id v28 = [v5 viewIfLoaded];
  if (v28
    && (uint64_t v29 = v28, v30 = [v28 window], v29, v30)
    && (id v31 = [v30 windowScene], v30, v31))
  {
    if (v17)
    {
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v32 = 0;
    }
    [v31 setTitle:v32];
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100047524(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v9 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  id v10 = v9;
  return a1;
}

uint64_t sub_1000475D4(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) containingAppBundleIdentifierForPicker:a2];
  if (v3) {
    uint64_t v4 = [*(id *)(a1 + 40) containsObject:v3] ^ 1;
  }
  else {
    uint64_t v4 = 1;
  }

  return v4;
}

void sub_100047994(void *a1)
{
  id v3 = [v1 fullDocumentManagerDelegate];
  if (v3)
  {
    [v3 fullDocumentManagerDidFinishGatheringItemsAndThumbnails:v1];
    swift_unknownObjectRelease();
  }
  if ([v1 delegate])
  {
    uint64_t v4 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v4) {
      [v4 fullDocumentManagerDidFinishGatheringItemsAndThumbnails:v1];
    }
    swift_unknownObjectRelease();
  }
  id v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  aBlock[4] = sub_1000D2C1C;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100693C50;
  uint64_t v7 = _Block_copy(aBlock);
  id v8 = a1;
  swift_release();
  [v5 performAfterCATransactionCommits:v7];
  _Block_release(v7);
}

void sub_100047D5C(int a1, uint64_t a2)
{
  LODWORD(v4) = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Tests.getter();
  uint64_t v9 = v2;
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    int v23 = v4;
    uint64_t v4 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    uint64_t aBlock = a2;
    *(_DWORD *)uint64_t v4 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v13 = *(void *)&v9[OBJC_IVAR____TtC5Files14DOCApplication_currentTestName + 8];
    uint64_t aBlock = *(void *)&v9[OBJC_IVAR____TtC5Files14DOCApplication_currentTestName];
    uint64_t v26 = v13;
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v21 = v5;
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10009B0E4(v14, v15, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2048;
    uint64_t v16 = v9[OBJC_IVAR____TtC5Files14DOCApplication_finishedLaunchTest];

    uint64_t aBlock = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "tabbedBrowserViewControllerDidFinishLoading %lu ; currentTestName %s ; finishedLaunchTest %ld",
      (uint8_t *)v4,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v4) = v23;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v17 = self;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v4 & 1;
  *(void *)(v18 + 24) = v9;
  *(void *)(v18 + 32) = a2;
  uint64_t v29 = sub_10006ECDC;
  uint64_t v30 = v18;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  unint64_t v27 = sub_1000666D8;
  id v28 = &unk_100691520;
  id v19 = _Block_copy(&aBlock);
  uint64_t v20 = v9;
  swift_release();
  [v17 performAfterCATransactionCommits:v19];
  _Block_release(v19);
}

void DOCNodeCollection.data(forCollectionShouldBeReloaded:)(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v7 = v1;
  id v8 = a1;
  uint64_t v9 = (char *)v7;
  id v10 = v8;
  os_log_type_t v11 = Logger.logObject.getter();
  int v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    int v24 = v12;
    uint64_t v26 = v3;
    uint64_t v13 = swift_slowAlloc();
    int v23 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v28 = v25;
    *(_DWORD *)uint64_t v13 = 136446978;
    unint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v14)
    {

      __break(1u);
      return;
    }
    uint64_t v15 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_10009B0E4(v15, v14, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    uint64_t v27 = sub_10009B0E4(0xD000000000000024, 0x80000001005D8F40, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 22) = 2112;
    uint64_t v27 = (uint64_t)v9;
    uint64_t v16 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v23 = v9;

    *(_WORD *)(v13 + 32) = 2048;
    id v17 = [v10 items];
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v24, "%{public}s %{public}s DOCNodeCollection (%@) reload with nodes: %ld", (uint8_t *)v13, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v20 = &v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = *((void *)v20 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 8))(v9, ObjectType, v21);
    swift_unknownObjectRelease();
  }
}

void sub_100048540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = *(void **)(a1 + *(int *)(a2 + 32));
}

void *sub_1000485D8(unint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_38;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      uint64_t v24 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = v3 & 0xC000000000000001;
      uint64_t v23 = v3 + 32;
      uint64_t v21 = a2 + 7;
      while (1)
      {
        if (v25)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v24 + 16))
          {
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
          id v6 = *(id *)(v23 + 8 * v5);
        }
        id v7 = v6;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_36;
        }
        id v9 = [v6 identifier];
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v3 = v11;

        int v12 = (void *)a2[2];
        uint64_t v26 = v7;
        if (v12) {
          break;
        }
LABEL_17:
        swift_bridgeObjectRelease();
        id v14 = [self sharedManager];
        uint64_t v3 = sub_10004885C(v26);

        if ((v12 & 1) != 0 || (v3 & 1) == 0)
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v3 = (uint64_t)&v27;
          specialized ContiguousArray._endMutation()();
        }
        if (v5 == v4) {
          return v27;
        }
      }
      BOOL v13 = a2[4] == v10 && a2[5] == v3;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        LOBYTE(v12) = 1;
        goto LABEL_17;
      }
      if (v12 == (void *)1) {
        break;
      }
      uint64_t v22 = v12;
      uint64_t v15 = v21;
      uint64_t v16 = 1;
      while (1)
      {
        uint64_t v17 = v4;
        unint64_t v18 = a2;
        a2 = (void *)(v16 + 1);
        if (__OFADD__(v16, 1)) {
          break;
        }
        BOOL v19 = *(v15 - 1) == v10 && *v15 == v3;
        if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          LOBYTE(v12) = 1;
          a2 = v18;
          uint64_t v4 = v17;
          goto LABEL_17;
        }
        LOBYTE(v12) = 0;
        v15 += 2;
        ++v16;
        BOOL v13 = a2 == v22;
        a2 = v18;
        uint64_t v4 = v17;
        if (v13) {
          goto LABEL_17;
        }
      }
LABEL_37:
      __break(1u);
LABEL_38:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    LOBYTE(v12) = 0;
    goto LABEL_17;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10004885C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  id v9 = (char *)&v63 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v63 - v10;
  if (![self protectedAppsEnabled]) {
    return 1;
  }
  id v12 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v13._Swift::Int countAndFlagsBits = 0x6C7070612E6D6F63;
  v13._object = (void *)0xE900000000000065;
  LOBYTE(v12) = String.hasPrefix(_:)(v13);
  swift_bridgeObjectRelease();
  if (v12)
  {
    static Logger.UI.getter();
    id v14 = a1;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      id v67 = (void *)swift_slowAlloc();
      id v70 = v67;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v18 = sub_10009B0E4(0xD000000000000016, 0x80000001005F37D0, (uint64_t *)&v70);
      uint64_t v68 = v2;
      uint64_t v69 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v66 = v17 + 14;
      uint64_t v19 = v3;
      id v20 = [v14 identifier];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;

      uint64_t v69 = sub_10009B0E4(v21, v23, (uint64_t *)&v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s [PROTECTED APPS] Source is internal and can't be hidden, not filtering out: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v68);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    }
    return 1;
  }
  id v24 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v26 = self;
  id v70 = 0;
  id v27 = [v26 providerDomainWithID:v25 cachePolicy:2 error:&v70];
  if (!v27)
  {
    id v51 = v70;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    static Logger.UI.getter();
    id v52 = a1;
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = swift_slowAlloc();
      id v67 = (void *)swift_slowAlloc();
      id v70 = v67;
      *(_DWORD *)uint64_t v55 = 136315394;
      uint64_t v69 = sub_10009B0E4(0xD000000000000016, 0x80000001005F37D0, (uint64_t *)&v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v55 + 12) = 2080;
      uint64_t v66 = v55 + 14;
      id v56 = [v52 identifier];
      uint64_t v68 = v2;
      id v57 = v56;
      uint64_t v58 = v3;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v61 = v60;

      uint64_t v69 = sub_10009B0E4(v59, v61, (uint64_t *)&v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s [PROTECTED APPS] Could not get FPProviderDomain from source identifier: %s", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v6, v68);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
    return 1;
  }
  uint64_t v28 = v27;
  uint64_t v68 = v2;
  id v29 = v70;

  id v30 = [self sharedManager];
  NSString v31 = [v28 topLevelBundleIdentifier];
  if (!v31)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v32 = [v30 hostAppCanNavigateToAppBundleID:v31];

  BOOL v33 = v32 == 0;
  static Logger.UI.getter();
  id v34 = a1;
  id v35 = v28;
  id v36 = v34;
  id v37 = v35;
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  int v40 = v39;
  if (os_log_type_enabled(v38, v39))
  {
    LODWORD(v67) = v40;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v65 = (void *)swift_slowAlloc();
    id v70 = v65;
    *(_DWORD *)uint64_t v41 = 136315906;
    os_log_t v64 = v38;
    uint64_t v69 = sub_10009B0E4(0xD000000000000016, 0x80000001005F37D0, (uint64_t *)&v70);
    uint64_t v66 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 1024;
    LODWORD(v69) = v32 == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 18) = 2080;
    id v42 = [v36 identifier];
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v45 = v44;

    uint64_t v69 = sub_10009B0E4(v43, v45, (uint64_t *)&v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 28) = 2080;
    id v46 = [v37 topLevelBundleIdentifier];
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v48;

    uint64_t v69 = sub_10009B0E4(v47, v49, (uint64_t *)&v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v50 = v64;
    _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v67, "%s [PROTECTED APPS] Host app should see: %{BOOL}d source identifier: %s containing app bundle identifier: %s", (uint8_t *)v41, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v68);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v68);
  }
  return v33;
}

uint64_t sub_100049158(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

id sub_1000491AC(void *a1)
{
  return [a1 setPreferredContentSizeCategory:UIContentSizeCategoryAccessibilityExtraExtraExtraLarge];
}

id sub_1000491C4(void *a1)
{
  return [a1 setPreferredContentSizeCategory:UIContentSizeCategoryLarge];
}

void sub_100049348()
{
  uint64_t v1 = v0;
  sub_10004968C();
  uint64_t v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*v2 && !sub_1000CBC64())
  {
    uint64_t v4 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v21, &qword_100705560);
    sub_1000CBE0C((uint64_t)v21, (uint64_t)v22, &qword_100705560);
    if (sub_1000CBEB4(v22) == 1)
    {
      id v7 = v3;
      sub_100099DF8((uint64_t)v23);
      v16[10] = *(_OWORD *)&v23[160];
      v16[11] = *(_OWORD *)&v23[176];
      uint64_t v17 = *(void *)&v23[192];
      v16[6] = *(_OWORD *)&v23[96];
      v16[7] = *(_OWORD *)&v23[112];
      v16[8] = *(_OWORD *)&v23[128];
      v16[9] = *(_OWORD *)&v23[144];
      v16[2] = *(_OWORD *)&v23[32];
      v16[3] = *(_OWORD *)&v23[48];
      v16[4] = *(_OWORD *)&v23[64];
      v16[5] = *(_OWORD *)&v23[80];
      v16[0] = *(_OWORD *)v23;
      v16[1] = *(_OWORD *)&v23[16];
      DOCSplitBrowserViewController.didCommitPreview(of:)(v16);
      sub_1000CBE0C(v6, (uint64_t)v18, &qword_100705560);
      sub_1000CBE0C((uint64_t)v16, v6, &qword_100705560);
      sub_10009ABF0((uint64_t)v23);
      sub_10009ABF0((uint64_t)v23);
      sub_1000A0B6C((uint64_t)v18);
      [v5 setNeedsDisplay];
      sub_10009A978((uint64_t)v23);
      sub_1000CBE0C(v6, (uint64_t)v19, &qword_100705560);
      sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, &qword_100705560);
      if (sub_1000CBEB4(v20) != 1) {
        [v4 setFont:v20[0]];
      }
      long long v30 = *(_OWORD *)&v23[136];
      long long v31 = *(_OWORD *)&v23[152];
      long long v32 = *(_OWORD *)&v23[168];
      long long v33 = *(_OWORD *)&v23[184];
      long long v26 = *(_OWORD *)&v23[72];
      long long v27 = *(_OWORD *)&v23[88];
      long long v28 = *(_OWORD *)&v23[104];
      long long v29 = *(_OWORD *)&v23[120];
      v24[0] = *(_OWORD *)&v23[8];
      v24[1] = *(_OWORD *)&v23[24];
      v24[2] = *(_OWORD *)&v23[40];
      long long v25 = *(_OWORD *)&v23[56];
      sub_10009AB2C((uint64_t)v24);
      [v4 bounds];
      [v4 contentScaleFactor];
      long long v8 = v25;
      UIPointRoundToScale();
      double v10 = v9;
      double v12 = v11;
      sub_10005519C(v24);
      [v5 setFrame:v10, v12, v8];
      [v4 invalidateIntrinsicContentSize];
      sub_10009A978((uint64_t)v23);
      sub_1000A0C38();
    }
    else
    {
      id v13 = v3;
    }
    id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel), "text"));
    if (v14
      || (id v14 = [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel) text]) != 0)
    {
      uint64_t v15 = v14;
    }
    else
    {
      sub_1000913EC();
    }
  }
}

void sub_10004968C()
{
  uint64_t v1 = v0;
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                             + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "thumbnail"));
  uint64_t v3 = swift_unknownObjectRelease();
  if (!v2)
  {
    uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F8);
    uint64_t v5 = (char *)((uint64_t (*)(uint64_t))v4)(v3);
    if (v5)
    {
      uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
      if ((v6 & 0x100) == 0) {
        *(void *)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v6 | 0x100;
      }
    }
    uint64_t v3 = v4();
    if (v3)
    {
      id v7 = (char *)v3;
      if (!*(void *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_1000CBC64())
      {
        uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
        *(void *)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = 0;
        sub_100090F98(v8, (uint64_t)v7);
      }
    }
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x1F8))(v3);
  if (v10)
  {
    double v11 = (void *)v10;
    double v12 = *(void **)(v10 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    id v13 = v12;

    if (v12)
    {
      sub_10009E9DC();
      UITraitCollection.subscript.getter();

      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setAccessibilityValue:v14];
    }
  }
}

uint64_t sub_1000498E4()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1000879E8;
  *(void *)(v3 + 24) = v2;
  void v8[4] = sub_100162A48;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_100087990;
  v8[3] = &unk_10069F1C8;
  uint64_t v4 = _Block_copy(v8);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performWithoutAnimation:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_100049A44(void *a1@<X0>, double a2@<X1>, double a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  double v16 = 0.0;
  if (![v8 isViewLoaded]) {
    goto LABEL_36;
  }
  if (a4)
  {
    sub_10001D548();
    double v17 = v19;
    double v18 = v20;
  }
  else
  {
    double v17 = a2;
    double v18 = a3;
  }
  double top = UIEdgeInsetsZero.top;
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  id v25 = [v8 viewIfLoaded];
  if (v25)
  {
    long long v26 = v25;
    long long v27 = &v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v27 <= 1uLL)
    {
      [v26 safeAreaInsets];
      double v29 = v28;
      [v26 safeAreaInsets];
      double v17 = v17 - (v29 + v30);
      [v26 safeAreaInsets];
      double top = v31;
      double left = v32;
      double bottom = v33;
      double right = v34;
    }
  }
  uint64_t v35 = 0;
  if (v17 > 0.0 && v18 > 0.0)
  {
    uint64_t v36 = sub_10004A150(&off_100689A58);
    swift_arrayDestroy();
    BOOL v37 = sub_1000951EC(v36);
    swift_bridgeObjectRelease();
    if (!v37) {
      goto LABEL_36;
    }
    unsigned __int8 v38 = v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 16];
    type metadata accessor for DOCItemCollectionLayoutTraits();
    swift_allocObject();
    uint64_t v35 = sub_10004A178(v38, a1, v17, v18, top, left, bottom, right);
    *(void *)&double v39 = sub_10004B1F0((uint64_t)v63).n128_u64[0];
    if (v64)
    {
      double v40 = NSDirectionalEdgeInsetsZero.top;
      CGFloat leading = NSDirectionalEdgeInsetsZero.leading;
      CGFloat v42 = NSDirectionalEdgeInsetsZero.bottom;
      CGFloat trailing = NSDirectionalEdgeInsetsZero.trailing;
      if (a6) {
        goto LABEL_26;
      }
      char v44 = 0;
    }
    else
    {
      char v44 = [*(id *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] browserViewContext] == 0;
      double v40 = NSDirectionalEdgeInsetsZero.top;
      CGFloat leading = NSDirectionalEdgeInsetsZero.leading;
      CGFloat v42 = NSDirectionalEdgeInsetsZero.bottom;
      CGFloat trailing = NSDirectionalEdgeInsetsZero.trailing;
      if (a6) {
        goto LABEL_26;
      }
    }
    if (*(unsigned char *)(v35 + 544) == 2)
    {
      uint64_t v46 = sub_1002099D4(v44);
      if (v46)
      {
        uint64_t v47 = (void *)v46;
        unint64_t v48 = &v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess();
        uint64_t v49 = *(void *)v48;
        uint64_t v50 = qword_100704F00;
        id v51 = v47;
        if (v50 != -1) {
          swift_once();
        }
        CGFloat leading = *((double *)&xmmword_100709CB0 + 1);
        CGFloat v42 = *(double *)&qword_100709CC0;
        CGFloat trailing = *(double *)&qword_100709CC8;
        if (v49) {
          double v40 = *(double *)&xmmword_100709CB0;
        }
        else {
          double v40 = 0.0;
        }
        double v54 = *(double *)(v35 + 560);
        LODWORD(v52) = 1148846080;
        LODWORD(v53) = 1112014848;
        [v51 systemLayoutSizeFittingSize:v54 withHorizontalFittingPriority:UILayoutFittingCompressedSize.height verticalFittingPriority:v52 v53];
        double v56 = v55;
        [v51 directionalLayoutMargins];
        double v45 = v40 + v56 - v57;
        uint64_t v58 = (char *)sub_10001BCE0();

        double v59 = *(double *)&v58[OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_footerViewHeight];
        BOOL v60 = v59 != v45;
        if (a5) {
          goto LABEL_32;
        }
LABEL_29:
        if ((v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] & 1) != 0
          || (v8[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] & 1) != 0
          || v60)
        {
          goto LABEL_32;
        }
        uint64_t v61 = swift_retain();
        char v62 = sub_10004AA74(v61);
        sub_10004B470((uint64_t)v63);
        swift_release();
        if (v62) {
          goto LABEL_33;
        }
        swift_release();
LABEL_36:
        uint64_t v35 = 0;
        CGFloat leading = 0.0;
        CGFloat v42 = 0.0;
        CGFloat trailing = 0.0;
        double v45 = 0.0;
        double v40 = 0.0;
        goto LABEL_37;
      }
    }
LABEL_26:
    double v45 = 0.0;
    if (a5)
    {
      double v54 = 0.0;
LABEL_32:
      sub_10004B470((uint64_t)v63);
LABEL_33:
      double v16 = v54;
      goto LABEL_37;
    }
    BOOL v60 = 0;
    double v54 = 0.0;
    goto LABEL_29;
  }
  double v45 = 0.0;
  double v40 = 0.0;
  CGFloat leading = 0.0;
  CGFloat v42 = 0.0;
  CGFloat trailing = 0.0;
LABEL_37:
  *(void *)a7 = v35;
  *(double *)(a7 + 8) = v16;
  *(double *)(a7 + 16) = v45;
  *(double *)(a7 + 24) = v40;
  *(CGFloat *)(a7 + 32) = leading;
  *(CGFloat *)(a7 + 40) = v42;
  *(CGFloat *)(a7 + 48) = trailing;
}

uint64_t sub_100049EB0(uint64_t a1)
{
  uint64_t v2 = sub_10009B02C(0);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 48;
    do
    {
      uint64_t v5 = *(void *)(v4 - 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      v6._Swift::Int countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v7 = v2;
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      v8._Swift::Int countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      v9._Swift::Int countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._Swift::Int countAndFlagsBits = 41;
      v10._object = (void *)0xE100000000000000;
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & v2) == v5)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v7 = v5 | v2;
        _StringGuts.grow(_:)(18);
        swift_bridgeObjectRelease();
        v11._Swift::Int countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v11);
        swift_bridgeObjectRelease();
        v12._Swift::Int countAndFlagsBits = 41;
        v12._object = (void *)0xE100000000000000;
        String.append(_:)(v12);
        swift_bridgeObjectRelease_n();
      }
      uint64_t v2 = v7;
      v4 += 24;
      --v3;
    }
    while (v3);
  }
  return v2;
}

uint64_t type metadata accessor for DOCItemCollectionLayoutTraits()
{
  return self;
}

uint64_t sub_10004A178(unsigned __int8 a1, void *a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v9 = v8;
  *(unsigned char *)(v9 + 128) = 0;
  *(_OWORD *)(v9 + 96) = 0u;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_OWORD *)(v9 + 80) = 0u;
  int v18 = a1;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  sub_10008FA08((uint64_t)v46);
  sub_1000CBE0C((uint64_t)v46, v9 + 136, (uint64_t *)&unk_100705550);
  *(_OWORD *)(v9 + 320) = 0u;
  *(_OWORD *)(v9 + 336) = 0u;
  *(_OWORD *)(v9 + 352) = 0u;
  *(_OWORD *)(v9 + 368) = 0u;
  *(void *)(v9 + 384) = 0;
  *(unsigned char *)(v9 + 392) = 1;
  *(void *)(v9 + 400) = 0;
  *(unsigned char *)(v9 + 408) = 2;
  sub_10008F9F0(v47);
  sub_1000CBE0C((uint64_t)v47, v9 + 416, (uint64_t *)&unk_10070AD40);
  *(unsigned char *)(v9 + 544) = a1;
  *(double *)(v9 + 560) = a3;
  *(double *)(v9 + 568) = a4;
  *(double *)(v9 + 576) = a5;
  *(double *)(v9 + 584) = a6;
  *(double *)(v9 + 592) = a7;
  *(double *)(v9 + 600) = a8;
  *(void *)(v9 + 552) = a2;
  if (v18 == 3)
  {
    double v19 = self;
    id v20 = a2;
    id v21 = [v19 mainScreen];
    [v21 bounds];
    double v23 = v22;
    double v25 = v24;
  }
  else
  {
    id v26 = a2;
    double v25 = a4;
    double v23 = a3;
  }
  if (qword_100705128 != -1) {
    swift_once();
  }
  *(double *)__src = v23;
  *(double *)&__src[1] = v25;
  type metadata accessor for CGSize(0);
  sub_10004AD08();
  sub_10004AA2C(&qword_1007121E8, type metadata accessor for CGSize);
  Dictionary<>.doc_firstKey(forValue:)();
  signed __int8 v27 = v44[0];
  if (LOBYTE(v44[0]) == 17)
  {
    signed __int8 v27 = sub_10004A86C(v23, v25);
    if (v27 == 17)
    {
      *(double *)__src = v25;
      *(double *)&__src[1] = v23;
      Dictionary<>.doc_firstKey(forValue:)();
      signed __int8 v27 = v44[0];
      if (LOBYTE(v44[0]) == 17)
      {
        signed __int8 v27 = sub_10004A86C(v25, v23);
        if (v27 == 17)
        {
          signed __int8 v27 = sub_10004A5BC(1, v23);
          sub_10004A750(v27);
          if (v28 != v23)
          {
            signed __int8 v27 = sub_10004A5BC(0, v23);
            sub_10004A750(v27);
            if (v29 != v23) {
              signed __int8 v27 = sub_10004A5BC(1, v23);
            }
          }
        }
      }
    }
  }
  sub_1000CB0B0(v44);
  __src[0] = a2;
  *(double *)&__src[1] = a3;
  *(double *)&__src[2] = a4;
  *(double *)&__src[3] = a5;
  *(double *)&__src[4] = a6;
  *(double *)&__src[5] = a7;
  *(double *)&__src[6] = a8;
  LOBYTE(__src[7]) = a1;
  sub_1000CBE0C((uint64_t)v44, (uint64_t)&__src[8], &qword_1007121D8);
  memcpy((void *)(v9 + 608), __src, 0x120uLL);
  sub_10009E9DC();
  id v30 = a2;
  UITraitCollection.subscript.getter();
  if (v42 == 2)
  {
    double v31 = (id *)&UIFontTextStyleBody;
    uint64_t v32 = 8;
  }
  else
  {
    uint64_t v33 = 8 * v27;
    double v31 = *(id **)((char *)&off_1006A44A0 + v33);
    uint64_t v32 = *(void *)((char *)&unk_1005A85E0 + v33);
  }
  id v34 = *v31;
  if (v43) {
    double v35 = 8.0;
  }
  else {
    double v35 = 6.0;
  }
  if (v43) {
    double v36 = 48.0;
  }
  else {
    double v36 = 36.0;
  }
  BOOL v37 = UIFontTextStyleCaption1;
  id v38 = [v30 preferredContentSizeCategory];
  char v39 = UIContentSizeCategory.isAccessibilityCategory.getter();

  *(double *)(v9 + 896) = v36 + v35 + v35;
  *(double *)(v9 + 904) = v35;
  if (v39) {
    uint64_t v40 = 2;
  }
  else {
    uint64_t v40 = 1;
  }
  *(void *)(v9 + 912) = v34;
  *(void *)(v9 + 920) = v37;
  *(void *)(v9 + 928) = v32;
  *(unsigned char *)(v9 + 936) = 1;
  *(void *)(v9 + 944) = v40;
  *(void *)(v9 + 952) = v40;
  return v9;
}

uint64_t sub_10004A5BC(char a1, double a2)
{
  if (qword_100705128 == -1) {
    goto LABEL_2;
  }
LABEL_29:
  swift_once();
LABEL_2:
  uint64_t result = 0;
  int64_t v5 = 0;
  Swift::String v6 = (char *)off_1007137A0 + 64;
  uint64_t v7 = 1 << *((unsigned char *)off_1007137A0 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *((void *)off_1007137A0 + 8);
  double v10 = 1.79769313e308;
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  if (v9)
  {
LABEL_5:
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v5 << 6);
    goto LABEL_6;
  }
  while (1)
  {
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v16 >= v11) {
      return result;
    }
    unint64_t v17 = *(void *)&v6[8 * v16];
    ++v5;
    if (!v17)
    {
      int64_t v5 = v16 + 1;
      if (v16 + 1 >= v11) {
        return result;
      }
      unint64_t v17 = *(void *)&v6[8 * v5];
      if (!v17)
      {
        int64_t v5 = v16 + 2;
        if (v16 + 2 >= v11) {
          return result;
        }
        unint64_t v17 = *(void *)&v6[8 * v5];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_6:
    NSString v14 = (double *)(*((void *)off_1007137A0 + 7) + 16 * v13);
    if ((a1 & 1) == 0) {
      ++v14;
    }
    double v15 = vabdd_f64(*v14, a2);
    if (v15 < v10)
    {
      uint64_t result = *(unsigned __int8 *)(*((void *)off_1007137A0 + 6) + v13);
      double v10 = v15;
      if (v9) {
        goto LABEL_5;
      }
    }
    else if (v9)
    {
      goto LABEL_5;
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 < v11)
  {
    unint64_t v17 = *(void *)&v6[8 * v18];
    if (!v17)
    {
      while (1)
      {
        int64_t v5 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_28;
        }
        if (v5 >= v11) {
          return result;
        }
        unint64_t v17 = *(void *)&v6[8 * v5];
        ++v18;
        if (v17) {
          goto LABEL_23;
        }
      }
    }
    int64_t v5 = v18;
    goto LABEL_23;
  }
  return result;
}

unint64_t sub_10004A750(unsigned __int8 a1)
{
  if (qword_100705128 != -1) {
    swift_once();
  }
  if (!*((void *)off_1007137A0 + 2) || (unint64_t result = sub_10004AE3C(a1), (v3 & 1) == 0))
  {
    _StringGuts.grow(_:)(26);
    v4._object = (void *)0x80000001005EFB00;
    v4._Swift::Int countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v4);
    _print_unlocked<A, B>(_:_:)();
    unint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004A86C(double a1, double a2)
{
  if (qword_100705128 != -1) {
LABEL_30:
  }
    uint64_t result = swift_once();
  int64_t v4 = 0;
  uint64_t v5 = 1 << *((unsigned char *)off_1007137A0 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = (char *)off_1007137A0 + 64;
  unint64_t v8 = v6 & *((void *)off_1007137A0 + 8);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9) {
      return 17;
    }
    unint64_t v13 = *(void *)&v7[8 * v12];
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 17;
      }
      unint64_t v13 = *(void *)&v7[8 * v4];
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 17;
        }
        unint64_t v13 = *(void *)&v7[8 * v4];
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 17;
          }
          unint64_t v13 = *(void *)&v7[8 * v4];
          if (!v13)
          {
            int64_t v4 = v12 + 4;
            if (v12 + 4 >= v9) {
              return 17;
            }
            unint64_t v13 = *(void *)&v7[8 * v4];
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    uint64_t v15 = *((void *)off_1007137A0 + 7);
    if (vabdd_f64(*(double *)(v15 + 16 * v11), a1) <= 1.0 && vabdd_f64(*(double *)(v15 + 16 * v11 + 8), a2) <= 1.0) {
      return *(unsigned __int8 *)(*((void *)off_1007137A0 + 6) + v11);
    }
  }
  int64_t v14 = v12 + 5;
  if (v14 >= v9) {
    return 17;
  }
  unint64_t v13 = *(void *)&v7[8 * v14];
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 17;
    }
    unint64_t v13 = *(void *)&v7[8 * v4];
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_10004AA2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004AA74(uint64_t a1)
{
  if (!a1) {
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  char v3 = *(void **)(a1 + 552);
  int64_t v4 = *(void **)(v2 + 552);
  swift_retain();
  id v5 = v3;
  id v6 = [v5 horizontalSizeClass];
  if (v6 != [v4 horizontalSizeClass]
    || (id v7 = [v5 verticalSizeClass], v7 != objc_msgSend(v4, "verticalSizeClass")))
  {
    swift_release();

    goto LABEL_9;
  }
  sub_10009E9DC();
  UITraitCollection.subscript.getter();
  UITraitCollection.subscript.getter();
  if ((unint64_t)(v19[0] - 1) < 2)
  {
    swift_retain();
    double v8 = sub_1000979F8();
    int v10 = v9;
    if (v8 == sub_1000979F8() && ((v10 ^ v11) & 1) == 0)
    {
      sub_1000976F0((uint64_t)v18);
      sub_1000976F0((uint64_t)v19);
      BOOL v12 = sub_1003655AC((uint64_t)v18, (uint64_t)v19);
      sub_10000A628((uint64_t)v19);
      sub_10000A628((uint64_t)v18);
LABEL_15:
      swift_release_n();

      char v13 = !v12;
      return v13 & 1;
    }

    swift_release_n();
    goto LABEL_9;
  }
  if (!v19[0])
  {
    swift_retain_n();
    sub_10004B1F0((uint64_t)v16);
    sub_10004B1F0((uint64_t)v17);
    char v15 = sub_100365838((uint64_t)v16, (uint64_t)v17);
    sub_10004B470((uint64_t)v17);
    sub_10004B470((uint64_t)v16);
    if (v15)
    {
      sub_10009611C((uint64_t)v18);
      sub_10009611C((uint64_t)v19);
      BOOL v12 = sub_1003659C4((uint64_t)v18, (uint64_t)v19);
      swift_release();
      sub_10004B944((uint64_t)v19);
      sub_10004B944((uint64_t)v18);
      goto LABEL_15;
    }

    swift_release_n();
LABEL_9:
    char v13 = 1;
    return v13 & 1;
  }
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

unint64_t sub_10004AD08()
{
  unint64_t result = qword_1007121E0;
  if (!qword_1007121E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007121E0);
  }
  return result;
}

unint64_t sub_10004AD5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CBE70((uint64_t *)&unk_1007178A0);
    char v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (unint64_t i = (_OWORD *)(a1 + 40); ; unint64_t i = (_OWORD *)((char *)i + 24))
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      long long v11 = *i;
      unint64_t result = sub_10004AE3C(v5);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10004AE3C(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_10004AEA8(a1, v2);
}

unint64_t sub_10004AEA8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_10004AF48(double a1, double a2)
{
  if (![v2 isViewLoaded])
  {
    if (*(void *)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager]
      && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
    {
      uint64_t v7 = Strong;
      uint64_t v8 = (char *)[Strong dataSource];
      uint64_t v5 = *(void *)&v8[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

      if (v5 == 1) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v5 = 0;
    }
LABEL_12:
    sub_10004B1F0((uint64_t)v18);
    sub_10004B470((uint64_t)v18);
    uint64_t v10 = v19;
    sub_10004B1F0((uint64_t)v20);
    sub_10004B470((uint64_t)v20);
    double v11 = v21;
    sub_10004B1F0((uint64_t)v22);
    id v12 = v23;
    sub_10004B470((uint64_t)v22);
    [v12 spacing];
    double v14 = v13;

    double v9 = round(a2 / (v11 + v14));
    if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (v9 <= -9.22337204e18)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v9 >= 9.22337204e18)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
LABEL_15:
    uint64_t v15 = v10 * (uint64_t)v9;
    if ((unsigned __int128)(v10 * (__int128)(uint64_t)v9) >> 64 == v15 >> 63)
    {
      int64_t v16 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_10059B760;
      *(void *)(v17 + 56) = &type metadata for Int;
      *(void *)(v17 + 64) = &protocol witness table for Int;
      *(void *)(v17 + 32) = v15;
      *(void *)(v17 + 96) = &type metadata for Int;
      *(void *)(v17 + 104) = &protocol witness table for Int;
      *(void *)(v17 + 72) = v5;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*v4 != 1) {
    goto LABEL_12;
  }
LABEL_7:
  double v9 = round(a2 / sub_1000979F8());
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v9 < 9.22337204e18)
  {
    uint64_t v5 = 1;
    uint64_t v10 = 1;
    goto LABEL_15;
  }
LABEL_23:
  __break(1u);
}

__n128 sub_10004B1F0@<Q0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 32);
  uint64_t v4 = *(void **)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  long long v7 = *(_OWORD *)(v1 + 56);
  uint64_t v8 = *(void **)(v1 + 72);
  uint64_t v9 = *(void *)(v1 + 80);
  __n128 v10 = *(__n128 *)(v1 + 104);
  long long v11 = *(_OWORD *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 120);
  if (v5)
  {
    char v13 = v6 & 1;
    char v14 = *(unsigned char *)(v1 + 128) & 1;
    uint64_t v15 = v5;
    int64_t v16 = v4;
    uint64_t v17 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v12;
    long long v35 = v3;
    long long v37 = v7;
    long long v39 = v11;
    __n128 v41 = v10;
  }
  else
  {
    id v34 = *(void **)(v1 + 40);
    uint64_t v31 = *(void *)(v1 + 48);
    id v20 = *(void **)(v1 + 72);
    long long v33 = *(_OWORD *)(v1 + 16);
    long long v32 = *(_OWORD *)(v1 + 56);
    sub_10004B700(v1, (uint64_t)&v43);
    uint64_t v21 = v45;
    double v22 = v47;
    char v23 = v49;
    uint64_t v42 = *(void *)(v1 + 16);
    uint64_t v40 = *(void *)(v1 + 24);
    double v24 = *(void **)(v1 + 40);
    id v38 = *(void **)(v1 + 32);
    uint64_t v36 = *(void *)(v1 + 48);
    uint64_t v30 = *(void *)(v1 + 56);
    uint64_t v29 = *(void *)(v1 + 64);
    double v28 = *(void **)(v1 + 72);
    long long v25 = v44;
    *(_OWORD *)(v1 + 16) = v43;
    *(_OWORD *)(v1 + 32) = v25;
    *(void *)(v1 + 48) = v21;
    *(_OWORD *)(v1 + 56) = v46;
    *(void *)(v1 + 72) = v22;
    long long v26 = *(_OWORD *)&v48[16];
    *(_OWORD *)(v1 + 80) = *(_OWORD *)v48;
    *(_OWORD *)(v1 + 96) = v26;
    *(_OWORD *)(v1 + 112) = *(_OWORD *)&v48[32];
    *(unsigned char *)(v1 + 128) = v23;
    sub_10004B984((uint64_t)&v43);
    sub_10004B5A0(v42, v40, v38, v24, v36, v30, v29, v28);
    long long v7 = v32;
    long long v3 = v33;
    uint64_t v8 = v20;
    uint64_t v6 = v31;
    uint64_t v4 = v34;
    char v14 = v49;
    uint64_t v19 = *(void *)&v48[40];
    long long v39 = *(_OWORD *)&v48[8];
    __n128 v41 = *(__n128 *)&v48[24];
    char v13 = v45;
    uint64_t v17 = v47;
    uint64_t v18 = *(void *)v48;
    int64_t v16 = (void *)*((void *)&v44 + 1);
    uint64_t v15 = (void *)v44;
    long long v35 = v43;
    long long v37 = v46;
  }
  sub_10004B420(v3, *((uint64_t *)&v3 + 1), v5, v4, v6, v7, *((uint64_t *)&v7 + 1), v8);
  *(_OWORD *)a1 = v35;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v16;
  *(unsigned char *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 40) = v37;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = v18;
  *(_OWORD *)(a1 + 72) = v39;
  __n128 result = v41;
  *(__n128 *)(a1 + 88) = v41;
  *(void *)(a1 + 104) = v19;
  *(unsigned char *)(a1 + 112) = v14;
  return result;
}

void sub_10004B420(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a3)
  {
    id v9 = a3;
    id v10 = a4;
    id v11 = a8;
  }
}

uint64_t sub_10004B470(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  long long v3 = *(void **)(a1 + 24);

  return a1;
}

uint64_t sub_10004B4B0()
{
  sub_10004B5A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72));
  sub_1000CBE0C(v0 + 136, (uint64_t)v3, (uint64_t *)&unk_100705550);
  sub_1000958FC(v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  sub_1000CBE0C(v0 + 416, (uint64_t)v4, (uint64_t *)&unk_10070AD40);
  sub_1000980C0(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);

  memcpy(__dst, (const void *)(v0 + 608), 0x120uLL);
  sub_10004B5F0((uint64_t)__dst);
  uint64_t v1 = *(void **)(v0 + 912);

  return swift_deallocClassInstance();
}

void sub_10004B5A0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a3)
  {
  }
}

uint64_t sub_10004B5F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v5 = *(void **)(a1 + 64);
  long long v3 = *(void **)(a1 + 80);

  sub_1000CA314(v5, v2, v3);
  return a1;
}

void sub_10004B700(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  sub_1000C8674(v29);
  swift_endAccess();
  uint64_t v4 = *(void **)(a1 + 552);
  sub_10009611C((uint64_t)v38);
  if (qword_1007050E0 != -1) {
    swift_once();
  }
  swift_retain();
  double v5 = sub_10004B9C4((uint64_t)v29, v4, (uint64_t)v38);
  swift_release();
  sub_10004B944((uint64_t)v38);
  double v6 = v35;
  long long v7 = self;
  double v8 = v34;
  id v9 = [v7 fixedSpacing:v33];
  id v10 = [v7 fixedSpacing:v8];
  double v11 = v37;
  id v12 = [v7 fixedSpacing:v36];
  uint64_t v13 = v30;
  char v14 = v31;
  [v4 layoutDirection];
  NSDirectionalEdgeInsets.asUIEdgeInset(RTL:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v23 = v32;
  id v24 = v10;
  id v25 = v9;
  unsigned int v26 = [v4 enclosedInUIPDocumentLanding];
  sub_1000CAA5C((void **)v29);
  if (v26) {
    signed __int8 v27 = v12;
  }
  else {
    signed __int8 v27 = v24;
  }
  if (v26)
  {
    double v11 = v6;
    id v12 = v24;
  }

  id v28 = v25;
  *(double *)a2 = v6;
  *(double *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v24;
  *(unsigned char *)(a2 + 32) = v26 ^ 1;
  *(double *)(a2 + 40) = v11;
  *(double *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v16;
  *(void *)(a2 + 80) = v18;
  *(void *)(a2 + 88) = v20;
  *(void *)(a2 + 96) = v22;
  *(void *)(a2 + 104) = v23;
  *(unsigned char *)(a2 + 112) = v14 & 1;
}

uint64_t sub_10004B944(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 16);

  return a1;
}

uint64_t sub_10004B984(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  long long v3 = *(void **)(a1 + 56);
  id v4 = *(id *)(a1 + 16);
  id v5 = v2;
  id v6 = v3;
  return a1;
}

double sub_10004B9C4(uint64_t a1, void *a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a3 + 144);
  long long v121 = *(_OWORD *)(a3 + 128);
  long long v122 = v5;
  long long v123 = *(_OWORD *)(a3 + 160);
  uint64_t v124 = *(void *)(a3 + 176);
  long long v6 = *(_OWORD *)(a3 + 80);
  long long v117 = *(_OWORD *)(a3 + 64);
  long long v118 = v6;
  long long v7 = *(_OWORD *)(a3 + 112);
  long long v119 = *(_OWORD *)(a3 + 96);
  long long v120 = v7;
  long long v8 = *(_OWORD *)(a3 + 16);
  long long v113 = *(_OWORD *)a3;
  long long v114 = v8;
  long long v9 = *(_OWORD *)(a3 + 48);
  long long v115 = *(_OWORD *)(a3 + 32);
  long long v116 = v9;
  double v10 = *(double *)(a1 + 112);
  double v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  id v13 = *(id *)a1;
  id v14 = v11;
  uint64_t v87 = a2;
  id v15 = [a2 preferredContentSizeCategory];
  uint64_t v16 = v15;
  double v107 = v10;
  id v108 = v13;
  id v109 = v14;
  uint64_t v110 = v12;
  id v111 = v15;
  if (qword_1007050E8 != -1) {
    id v15 = (id)swift_once();
  }
  if ((byte_1007125C8 & 1) != 0
    || (__chkstk_darwin(v15),
        sub_1000CBE70(&qword_100712730),
        dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)(),
        (v106 & 1) != 0))
  {
    id v84 = v16;
    NSString v85 = v14;
    id v86 = v13;
    id v17 = [objc_allocWithZone((Class)UIView) init];
    id v18 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionGridCell());
    id v19 = v17;
    uint64_t v20 = sub_1000882AC(v17, 0.0, 0.0, 0.0, 0.0);
    uint64_t v21 = (char *)[objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionCellContent()) init];
    id v22 = [objc_allocWithZone((Class)DOCAppearance) init];
    uint64_t v23 = *(void **)&v21[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance];
    *(void *)&v21[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = v22;
    id v24 = v22;
    sub_1000987A8(v23);

    v93[8] = v121;
    v93[9] = v122;
    v93[10] = v123;
    uint64_t v94 = v124;
    v93[4] = v117;
    v93[5] = v118;
    v93[6] = v119;
    v93[7] = v120;
    v93[0] = v113;
    v93[1] = v114;
    v93[2] = v115;
    v93[3] = v116;
    DOCSplitBrowserViewController.didCommitPreview(of:)(v93);
    uint64_t v25 = (uint64_t)&v21[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits];
    sub_1000CBE0C((uint64_t)&v21[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits], (uint64_t)v112, (uint64_t *)&unk_100705550);
    sub_1000CBE0C(v25, (uint64_t)v95, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v93, v25, (uint64_t *)&unk_100705550);
    sub_1000A2E70(a3);
    sub_1000A2E70(a3);
    sub_10009736C(v112, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
    sub_10009736C(v95, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
    sub_100095550(v112);
    sub_10004B944(a3);
    sub_10009736C(v112, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
    unsigned int v26 = *(void (**)(char *))((swift_isaMask & *v20) + 0x200);
    signed __int8 v27 = v20;
    id v82 = v21;
    v26(v21);

    id v83 = v19;
    id v28 = [v19 widthAnchor];
    id v29 = [v28 constraintEqualToConstant:v10];

    [v29 setActive:1];
    uint64_t v30 = *(void (**)(void))((swift_isaMask & *v27) + 0x338);
    char v31 = v27;
    v30();

    uint64_t v32 = *(void **)((char *)v31 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    uint64_t v34 = a3;
    double v33 = *(void **)a3;
    uint64_t v79 = *(void *)(v34 + 8);
    double v35 = self;
    double v36 = v32;
    id v37 = v33;
    id v38 = [v35 blackColor];
    unint64_t v81 = (char *)v31;
    id v39 = [v31 effectiveUserInterfaceLayoutDirection];
    [v87 displayScale];
    id v40 = v37;
    UICeilToScale();
    double v42 = v41;
    sub_1000CBE70((uint64_t *)&unk_100706750);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_10059B760;
    *(void *)(v43 + 32) = NSFontAttributeName;
    uint64_t v44 = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
    *(void *)(v43 + 40) = v40;
    *(void *)(v43 + 64) = v44;
    *(void *)(v43 + 72) = NSForegroundColorAttributeName;
    *(void *)(v43 + 104) = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
    *(void *)(v43 + 80) = v38;
    unsigned __int8 v45 = (double *)v40;
    long long v46 = NSFontAttributeName;
    uint64_t v47 = NSForegroundColorAttributeName;
    id v48 = v38;
    sub_10009CC48(v43);
    id v49 = objc_allocWithZone((Class)NSAttributedString);
    NSString v50 = String._bridgeToObjectiveC()();
    type metadata accessor for Key(0);
    sub_10009CBF0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    CFAttributedStringRef v52 = (const __CFAttributedString *)[v49 initWithString:v50 attributes:isa];

    double v53 = sub_10009C304(v52, v79, v42, 0.0, 0.0);
    double v54 = sub_10009D348((unint64_t)v53, v45, 0.0, 0.0);
    uint64_t v56 = v55;
    sub_10009CC70(v55, (unint64_t *)0x630A620A61, 0xE500000000000000, (uint64_t)&v88, v54);
    double v57 = v89;
    double v58 = v90;
    long long v78 = v92;
    long long v80 = v91;
    long long v77 = v88;

    v96[0] = v80;
    v96[1] = v78;
    v96[2] = v77;
    *(double *)&long long v97 = v57;
    *((double *)&v97 + 1) = v58;
    *(void *)&long long v98 = v52;
    *((void *)&v98 + 1) = v53;
    *(_OWORD *)((char *)&v99[5] + 8) = 0u;
    *(_OWORD *)((char *)&v99[4] + 8) = 0u;
    *(_OWORD *)((char *)&v99[3] + 8) = 0u;
    *(_OWORD *)((char *)&v99[2] + 8) = 0u;
    *(_OWORD *)((char *)&v99[1] + 8) = 0u;
    *(_OWORD *)((char *)v99 + 8) = 0u;
    *(void *)&v99[0] = v56;
    *((void *)&v99[6] + 1) = v39;
    *(void *)id v100 = v45;
    *(_OWORD *)&v100[56] = v97;
    *(_OWORD *)&v100[40] = v77;
    *(_OWORD *)&v100[24] = v78;
    *(_OWORD *)&v100[8] = v80;
    *(_OWORD *)&v100[120] = v99[2];
    *(_OWORD *)&v100[104] = v99[1];
    *(_OWORD *)&v100[88] = v99[0];
    *(_OWORD *)&v100[72] = v98;
    *(_OWORD *)&v100[184] = v99[6];
    *(_OWORD *)&v100[168] = v99[5];
    *(_OWORD *)&v100[152] = v99[4];
    *(_OWORD *)&v100[136] = v99[3];
    v101[10] = *(_OWORD *)&v100[160];
    v101[11] = *(_OWORD *)&v100[176];
    id v102 = v39;
    v101[6] = *(_OWORD *)&v100[96];
    v101[7] = *(_OWORD *)&v100[112];
    v101[9] = *(_OWORD *)&v100[144];
    v101[8] = *(_OWORD *)&v100[128];
    v101[2] = *(_OWORD *)&v100[32];
    v101[3] = *(_OWORD *)&v100[48];
    v101[4] = *(_OWORD *)&v100[64];
    v101[5] = *(_OWORD *)&v100[80];
    v101[0] = *(_OWORD *)v100;
    v101[1] = *(_OWORD *)&v100[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v101);
    double v59 = *(void **)&v36[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v60 = (uint64_t)v59
        + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v59+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v103, &qword_100705560);
    sub_1000CBE0C((uint64_t)v101, v60, &qword_100705560);
    sub_10009ABF0((uint64_t)v100);
    sub_10009ABF0((uint64_t)v100);
    sub_1000A0B6C((uint64_t)v103);
    [v59 setNeedsDisplay];
    sub_10009A978((uint64_t)v100);
    sub_1000CBE0C(v60, (uint64_t)v104, &qword_100705560);
    sub_1000CBE0C((uint64_t)v104, (uint64_t)&v105, &qword_100705560);
    if (sub_1000CBEB4((uint64_t *)&v105) != 1) {
      [v36 setFont:*(void *)&v105];
    }
    sub_10009AB2C((uint64_t)v96);
    [v36 bounds];
    [v36 contentScaleFactor];
    UIPointRoundToScale();
    double v62 = v61;
    double v64 = v63;
    sub_10005519C(v96);
    [v59 setFrame:v62, v64, v57, v58];
    [v36 invalidateIntrinsicContentSize];
    sub_10009A978((uint64_t)v100);

    uint64_t v65 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel;
    id v66 = *(id *)&v81[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel];
    NSString v67 = String._bridgeToObjectiveC()();
    [v66 setText:v67];

    uint64_t v68 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel;
    id v69 = *(id *)&v81[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel];
    NSString v70 = String._bridgeToObjectiveC()();
    [v69 setText:v70];

    [*(id *)&v81[v65] invalidateIntrinsicContentSize];
    [*(id *)&v81[v68] invalidateIntrinsicContentSize];
    [self separatorThicknessForTraitCollection:v87];
    double v72 = v71;
    id v73 = [v83 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
    double v75 = v72 + v74;
    if (byte_1007125C8 != 1)
    {
      __chkstk_darwin(v73);
      dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();
    }
  }
  else
  {
    double v75 = v105;
  }
  return v75;
}

void sub_10004C464(uint64_t a1, unint64_t a2)
{
  unint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (unint64_t)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  double v11 = (char *)&v104 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v14 = (unint64_t)&v104 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v104 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_21;
  }
  id v18 = Strong;
  unint64_t v19 = sub_10004F108(1);
  if ((v20 & 1) == 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
  double v107 = v11;
  id v108 = v16;
  uint64_t v110 = v14;
  uint64_t v111 = v5;
  unint64_t v112 = v4;
  unint64_t v113 = a2;
  long long v114 = v18;
  unint64_t v14 = *(void *)(*(void *)(a2 + 56) + 8 * v19);
  uint64_t v115 = (uint64_t)_swiftEmptyArrayStorage;
  if (v14 >> 62) {
    goto LABEL_22;
  }
  uint64_t v21 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v21)
  {
LABEL_6:
    if (v21 < 1) {
      goto LABEL_125;
    }
    uint64_t v22 = 0;
    while (1)
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(v14 + 8 * v22 + 32);
      }
      id v24 = v23;
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v25 = swift_dynamicCastClass();
      if (!v25) {
        goto LABEL_8;
      }
      unsigned int v26 = *(void **)(v25 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (!v26) {
        goto LABEL_8;
      }
      id v27 = v26;
      id v28 = [v27 identifier];
      int v29 = DOCProviderDomainIDIsSharedServerDomainID();

      if (!v29)
      {

        goto LABEL_9;
      }
      id v30 = [v27 identifier];
      char v31 = DOCProviderDomainIDIsDefaultSharedServer();

      if ((v31 & 1) == 0)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
LABEL_8:
      }
LABEL_9:
      if (v21 == ++v22)
      {
        swift_bridgeObjectRelease();
        unint64_t v2 = v115;
        goto LABEL_24;
      }
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_24:
  swift_retain();
  uint64_t v32 = v114;
  sub_10004D4C0(4, (uint64_t)v114, v2, (uint64_t (*)(uint64_t, uint64_t))sub_100009FA0);
  swift_release();
  unint64_t v4 = v113;
  swift_bridgeObjectRetain();
  sub_10004D4C0(2, (uint64_t)v32, v4, sub_100012AA4);
  swift_bridgeObjectRelease();
  type metadata accessor for DOCUSBFormatting();
  double v33 = static DOCUSBFormatting.shared.getter();
  uint64_t v5 = dispatch thunk of DOCUSBFormatting.hasOperations.getter();
  swift_release();
  if (v5)
  {
    if (*(void *)(v4 + 16))
    {
      double v33 = v4;
      sub_10004F108(0);
      if (v34)
      {
        unint64_t v35 = swift_bridgeObjectRetain();
        double v36 = v114;
        uint64_t v5 = sub_1002FD328(v35);
        swift_bridgeObjectRelease();
        id v37 = (uint64_t *)((char *)v36
                        + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
        uint64_t v16 = (char *)&v36[1]
            + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier;
        unint64_t v14 = *(void *)v16;
        char v38 = (*(void *)v16 != 0) | v5;
        if (!*(void *)v16 || (v5 & 1) != 0) {
          goto LABEL_50;
        }
        goto LABEL_31;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  id v37 = (uint64_t *)((char *)v32
                  + OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier);
  uint64_t v16 = (char *)(v37 + 1);
  unint64_t v14 = v37[1];
  if (!v14)
  {
    char v38 = 0;
LABEL_50:
    char v57 = v38;
    swift_release();
    static Logger.Rename.getter();
    double v58 = v114;
    unint64_t v14 = v114;
    double v33 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v59))
    {
      uint64_t v5 = swift_slowAlloc();
      unint64_t v2 = swift_slowAlloc();
      unint64_t v119 = v2;
      *(_DWORD *)uint64_t v5 = 136315394;
      uint64_t v60 = *(void *)v16;
      uint64_t v115 = *v37;
      uint64_t v116 = v60;
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_10070BD50);
      uint64_t v61 = String.init<A>(describing:)();
      uint64_t v16 = (char *)v8;
      uint64_t v115 = sub_10009B0E4(v61, v62, (uint64_t *)&v119);
      double v58 = v114;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 1024;
      LODWORD(v115) = v57 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v33, v59, "[Erase] sidebar sourcesOrderObserver updateBlock 5. pendingSelectionProviderDomainIdentifier: %s didOverrideSidebarItems: %{BOOL}d", (uint8_t *)v5, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(unint64_t, unint64_t))(v111 + 8))(v8, v112);
    unint64_t v8 = 0x1006E3000;
    unint64_t v4 = v113;
    if (*(void *)(v113 + 16)) {
      goto LABEL_58;
    }
    goto LABEL_54;
  }
LABEL_31:
  unint64_t v8 = *v37;
  swift_bridgeObjectRetain();
  id v39 = v108;
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  id v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.debug.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  id v109 = (char *)v14;
  unint64_t v106 = v8;
  if (v42)
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v115 = swift_slowAlloc();
    unint64_t v105 = v2;
    *(_DWORD *)uint64_t v43 = 136315138;
    unint64_t v14 = (unint64_t)v109;
    unint64_t v4 = v113;
    swift_bridgeObjectRetain();
    unint64_t v119 = sub_10009B0E4(v8, v14, &v115);
    unint64_t v2 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[Erase] sidebar sourcesOrderObserver updateBlock 2. pendingSelectionProviderDomainIdentifier: %s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = v111;
  unint64_t v44 = v112;
  uint64_t v16 = *(char **)(v111 + 8);
  ((void (*)(char *, unint64_t))v16)(v39, v112);
  if (!*(void *)(v4 + 16)) {
    goto LABEL_127;
  }
  unint64_t v45 = sub_10004F108(0);
  if ((v46 & 1) == 0) {
    goto LABEL_128;
  }
  uint64_t v115 = *(void *)(*(void *)(v4 + 56) + 8 * v45);
  swift_bridgeObjectRetain();
  sub_100050524(v2);
  unint64_t v8 = v115;
  unint64_t v2 = v110;
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.debug.getter();
  BOOL v49 = os_log_type_enabled(v47, v48);
  id v108 = v16;
  if (v49)
  {
    NSString v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v115 = swift_slowAlloc();
    *(_DWORD *)NSString v50 = 136315138;
    uint64_t v16 = (char *)(v50 + 4);
    sub_10009E6C4(0, &qword_100707CD0);
    swift_bridgeObjectRetain();
    unint64_t v2 = Array.description.getter();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    unint64_t v119 = sub_10009B0E4(v2, v52, &v115);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    unint64_t v14 = (unint64_t)v109;
    unint64_t v4 = v113;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "[Erase] sidebar sourcesOrderObserver updateBlock 3. combinedSources: %s", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(uint64_t, unint64_t))v108)(v110, v112);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    ((void (*)(unint64_t, unint64_t))v16)(v2, v44);
  }
  uint64_t v5 = (uint64_t)v114;
  if (v8 >> 62) {
    goto LABEL_129;
  }
  double v33 = *(NSObject **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  id v53 = (id)v5;
  if (v33) {
    goto LABEL_41;
  }
LABEL_56:
  while (2)
  {
    while (2)
    {
      while (2)
      {
        double v58 = v114;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_57:
        unint64_t v8 = (unint64_t)&unk_1006E3000;
        if (*(void *)(v4 + 16))
        {
LABEL_58:
          unint64_t v63 = sub_10004F108(0);
          if (v64)
          {
            unint64_t v4 = *(void *)(*(void *)(v4 + 56) + 8 * v63);
            uint64_t v115 = (uint64_t)_swiftEmptyArrayStorage;
            if (!(v4 >> 62))
            {
              uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v5)
              {
LABEL_61:
                if (v5 >= 1)
                {
                  for (uint64_t i = 0; i != v5; ++i)
                  {
                    if ((v4 & 0xC000000000000001) != 0) {
                      id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      id v66 = *(id *)(v4 + 8 * i + 32);
                    }
                    NSString v67 = v66;
                    type metadata accessor for DOCFileProviderSource(0);
                    uint64_t v68 = swift_dynamicCastClass();
                    if (v68
                      && (id v69 = *(void **)(v68 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) != 0
                      && (id v70 = v69,
                          id v71 = [v70 *(SEL *)(v8 + 2976)],
                          char v72 = DOCProviderDomainIDIsExternalDevice(),
                          v70,
                          v71,
                          (v72 & 1) != 0))
                    {
                      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized ContiguousArray._endMutation()();
                    }
                    else
                    {
                    }
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v73 = v115;
                  if (v115 < 0) {
                    goto LABEL_122;
                  }
LABEL_116:
                  if ((v73 & 0x4000000000000000) == 0)
                  {
                    uint64_t v101 = *(void *)(v73 + 16);
LABEL_118:
                    swift_release();
                    if (v101 > 0)
                    {
                      type metadata accessor for DOCUSBStorageKitManager();
                      id v102 = (void *)static DOCUSBStorageKitManager.shared.getter();
                      dispatch thunk of DOCUSBStorageKitManager.prewarmStorageKitManagerIfNeeded()();
                    }
                    return;
                  }
LABEL_122:
                  swift_bridgeObjectRetain();
                  uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
                  swift_release();
                  goto LABEL_118;
                }
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v103 = (id)v5;
                double v33 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (!v33) {
                  continue;
                }
LABEL_41:
                unint64_t v2 = 0;
                uint64_t v16 = (char *)(v8 & 0xC000000000000001);
                unint64_t v105 = v8 + 32;
                while (1)
                {
                  if (v16)
                  {
                    swift_bridgeObjectRetain();
                    id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    uint64_t v55 = *(void **)(v8 + 8 * v2 + 32);
                    swift_bridgeObjectRetain();
                    id v54 = v55;
                  }
                  uint64_t v5 = (uint64_t)v54;
                  type metadata accessor for DOCFileProviderSource(0);
                  if (swift_dynamicCastClass()) {
                    goto LABEL_55;
                  }
                  swift_bridgeObjectRelease();

                  uint64_t v56 = (v2 + 1);
                  if (__OFADD__(v2, 1))
                  {
                    __break(1u);
                    goto LABEL_104;
                  }
                  ++v2;
                  if (v56 == v33) {
                    goto LABEL_56;
                  }
                }
              }
LABEL_115:
              swift_bridgeObjectRelease();
              uint64_t v73 = (uint64_t)_swiftEmptyArrayStorage;
              if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
                goto LABEL_122;
              }
              goto LABEL_116;
            }
          }
          else
          {
            __break(1u);
          }
          swift_bridgeObjectRetain();
          uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
          if (v5) {
            goto LABEL_61;
          }
          goto LABEL_115;
        }
        break;
      }
LABEL_54:
      __break(1u);
LABEL_55:

      swift_bridgeObjectRelease();
      if (v33 == v2) {
        continue;
      }
      break;
    }
    uint64_t v110 = v8 & 0xFFFFFFFFFFFFFF8;
    unint64_t v104 = (char *)&v33[-1].isa + 7;
    unint64_t v4 = v113;
    while (1)
    {
      if (v16)
      {
        swift_bridgeObjectRetain();
        id v74 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_135;
        }
        if (v2 >= *(void *)(v110 + 16)) {
          goto LABEL_136;
        }
        double v75 = *(void **)(v105 + 8 * v2);
        swift_bridgeObjectRetain();
        id v74 = v75;
      }
      uint64_t v5 = (uint64_t)v74;
      uint64_t v76 = swift_dynamicCastClass();
      if (!v76) {
        goto LABEL_139;
      }
      uint64_t v77 = v76;
      swift_bridgeObjectRelease();
      long long v78 = *(void **)(v77 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (v78) {
        break;
      }

      if (v2 == v33) {
        goto LABEL_133;
      }
LABEL_86:
      if (__OFADD__(v2, 1)) {
        goto LABEL_134;
      }
      if ((v2 + 1) == v33) {
        goto LABEL_56;
      }
      while (1)
      {
        uint64_t v5 = v2 + 1;
        if (v16)
        {
          swift_bridgeObjectRetain();
          id v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 < 0)
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
            goto LABEL_126;
          }
          if ((unint64_t)v5 >= *(void *)(v110 + 16)) {
            goto LABEL_124;
          }
          id v84 = *(void **)(v8 + 8 * v2 + 40);
          swift_bridgeObjectRetain();
          id v83 = v84;
        }
        NSString v85 = v83;
        if (swift_dynamicCastClass()) {
          break;
        }
        swift_bridgeObjectRelease();

        id v86 = (v2 + 2);
        if (__OFADD__(v5, 1))
        {
LABEL_104:
          __break(1u);
          goto LABEL_105;
        }
        ++v2;
        if (v86 == v33) {
          goto LABEL_56;
        }
      }

      swift_bridgeObjectRelease();
      if (v104 == (char *)v2++) {
        goto LABEL_56;
      }
    }
    id v79 = [v78 identifier];
    uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v81;

    v82._Swift::Int countAndFlagsBits = v80;
    v82._object = (void *)v14;
    LOBYTE(v79) = String.hasPrefix(_:)(v82);

    swift_bridgeObjectRelease();
    if ((v79 & 1) == 0)
    {
      if (v2 == v33) {
        goto LABEL_133;
      }
      goto LABEL_86;
    }
    unint64_t v14 = v112;
    unint64_t v4 = v113;
    if (v2 == v33) {
      continue;
    }
    break;
  }
  if (v16)
  {
    long long v88 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_108;
  }
LABEL_105:
  if ((v2 & 0x8000000000000000) != 0)
  {
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:

    __break(1u);
    goto LABEL_140;
  }
  if (v2 >= *(void *)(v110 + 16)) {
    goto LABEL_138;
  }
  long long v88 = *(id *)(v105 + 8 * v2);
LABEL_108:
  double v33 = v88;
  uint64_t v89 = swift_dynamicCastClass();
  if (v89)
  {
    uint64_t v5 = v89;
    uint64_t v16 = v109;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    double v90 = v33;
    unint64_t v2 = (unint64_t)v107;
    static Logger.Rename.getter();
    long long v91 = v90;
    swift_bridgeObjectRetain();
    long long v92 = v91;
    id v93 = Logger.logObject.getter();
    os_log_type_t v94 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      uint64_t v110 = v5;
      unint64_t v119 = v96;
      *(_DWORD *)uint64_t v95 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v115 = sub_10009B0E4(v106, (unint64_t)v16, (uint64_t *)&v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v95 + 12) = 2080;
      uint64_t v116 = 0;
      uint64_t v117 = 0;
      uint64_t v115 = v110;
      char v118 = 1;
      unint64_t v14 = v92;
      uint64_t v97 = String.init<A>(describing:)();
      uint64_t v16 = (char *)v98;
      uint64_t v115 = sub_10009B0E4(v97, v98, (uint64_t *)&v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      unint64_t v4 = v113;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "[Erase] sidebar sourcesOrderObserver updateBlock 4. found source matching pendingSelectionProviderDomainIdentifier: %s calling didSelectItem with sidebar item: %s", (uint8_t *)v95, 0x16u);
      swift_arrayDestroy();
      uint64_t v5 = v110;
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v99 = v112;
      unint64_t v100 = v2;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      unint64_t v100 = v2;
      unint64_t v99 = v14;
    }
    ((void (*)(unint64_t, unint64_t))v108)(v100, v99);
    double v58 = v114;
    double v33 = v114;
    sub_10028601C((void *)v5, 0, 0, 1, 0);

    goto LABEL_57;
  }
LABEL_140:

  __break(1u);
}

uint64_t sub_10004D4C0(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  swift_retain();
  sub_10004D62C(a1);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  uint64_t v8 = swift_dynamicCastClassUnconditional();
  if (a4(v8, a3))
  {
    uint64_t v9 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sectionsDisablingUpdateAnimationUntilFirstLoad);
    swift_beginAccess();
    uint64_t v10 = *v9;
    swift_bridgeObjectRetain();
    char v11 = sub_10004D88C(a1, v10);
    swift_bridgeObjectRelease();
    if (*(uint64_t *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount) <= 0) {
      sub_10004DBB0((v11 & 1) == 0, 1);
    }
    else {
      sub_1002861DC();
    }
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for DOCMutableSidebarSection()
{
  return self;
}

uint64_t sub_10004D62C(char a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = v2 + 40;
    while (1)
    {
      uint64_t v6 = *(void *)(v5 - 8);
      unint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 7368564;
      switch(*(unsigned char *)(v6 + 16))
      {
        case 1:
          uint64_t v8 = 0x796C746E65636572;
          unint64_t v7 = 0xEC00000064657355;
          break;
        case 2:
          uint64_t v8 = 0x6E6F697461636F6CLL;
          goto LABEL_7;
        case 3:
          uint64_t v8 = 0x657469726F766166;
LABEL_7:
          unint64_t v7 = 0xE900000000000073;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x73726576726573;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1936154996;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE300000000000000;
      uint64_t v10 = 7368564;
      switch(a1)
      {
        case 1:
          unint64_t v9 = 0xEC00000064657355;
          if (v8 == 0x796C746E65636572) {
            goto LABEL_19;
          }
          goto LABEL_20;
        case 2:
          uint64_t v11 = 0x6E6F697461636F6CLL;
          goto LABEL_15;
        case 3:
          uint64_t v11 = 0x657469726F766166;
LABEL_15:
          unint64_t v9 = 0xE900000000000073;
          if (v8 != v11) {
            goto LABEL_20;
          }
          goto LABEL_19;
        case 4:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x73726576726573;
          goto LABEL_18;
        case 5:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1936154996) {
            goto LABEL_20;
          }
          goto LABEL_19;
        default:
LABEL_18:
          if (v8 != v10) {
            goto LABEL_20;
          }
LABEL_19:
          if (v7 == v9)
          {
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease_n();
LABEL_26:
            swift_bridgeObjectRelease_n();
            return v6;
          }
LABEL_20:
          char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            goto LABEL_26;
          }
          swift_unknownObjectRelease();
          v5 += 16;
          if (!--v3) {
            goto LABEL_28;
          }
          break;
      }
    }
  }
  __break(1u);
LABEL_28:
  uint64_t result = swift_bridgeObjectRelease_n();
  __break(1u);
  return result;
}

uint64_t sub_10004D88C(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v4 = Hasher._finalize()();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE300000000000000;
        uint64_t v10 = 7368564;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            uint64_t v10 = 0x796C746E65636572;
            unint64_t v9 = 0xEC00000064657355;
            break;
          case 2:
            uint64_t v10 = 0x6E6F697461636F6CLL;
            goto LABEL_8;
          case 3:
            uint64_t v10 = 0x657469726F766166;
LABEL_8:
            unint64_t v9 = 0xE900000000000073;
            break;
          case 4:
            unint64_t v9 = 0xE700000000000000;
            uint64_t v10 = 0x73726576726573;
            break;
          case 5:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1936154996;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7368564;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xEC00000064657355;
            if (v10 == 0x796C746E65636572) {
              goto LABEL_20;
            }
            goto LABEL_21;
          case 2:
            uint64_t v13 = 0x6E6F697461636F6CLL;
            goto LABEL_16;
          case 3:
            uint64_t v13 = 0x657469726F766166;
LABEL_16:
            unint64_t v11 = 0xE900000000000073;
            if (v10 != v13) {
              goto LABEL_21;
            }
            goto LABEL_20;
          case 4:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x73726576726573;
            goto LABEL_19;
          case 5:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1936154996) {
              goto LABEL_21;
            }
            goto LABEL_20;
          default:
LABEL_19:
            if (v10 != v12) {
              goto LABEL_21;
            }
LABEL_20:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v14 = 1;
              return v14 & 1;
            }
LABEL_21:
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v14) {
              return v14 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v14 & 1;
            }
            break;
        }
      }
    }
  }
  char v14 = 0;
  return v14 & 1;
}

void sub_10004DBB0(char a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v118 = sub_1000CBE70((uint64_t *)&unk_100709870);
  id v109 = *(void (***)(uint64_t, uint64_t))(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v117 = (char *)v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v108 - 8);
  uint64_t v8 = __chkstk_darwin(v108);
  uint64_t v97 = (char *)v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v112 = (char *)v91 - v10;
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v100 = (uint64_t)v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v106 = (uint64_t)v91 - v15;
  __chkstk_darwin(v14);
  id v17 = (char *)v91 - v16;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [v3 viewIfLoaded];
  if (v22)
  {

    BOOL v23 = v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive] == 1;
    uint64_t v110 = v17;
    if (v23) {
      sub_10055341C();
    }
    if (a1) {
      LODWORD(v116) = UIViewController.doc_shouldAllowAnimations.getter();
    }
    else {
      LODWORD(v116) = 0;
    }
    char v24 = sub_100553010(1);
    if (v24)
    {
      v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] = (v24 != 2) | v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] & 1;
      return;
    }
    uint64_t v25 = *(void *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
    }
    else
    {
      uint64_t v92 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount;
      *(void *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount] = v27;
      v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload] = 0;
      static Logger.UI.getter();
      id v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.debug.getter();
      BOOL v30 = os_log_type_enabled(v28, v29);
      unint64_t v119 = v3;
      if (v30)
      {
        char v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)char v31 = 67109120;
        LODWORD(v122) = v116 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Sidebar: reloading diffable, animatingDifferences = %{BOOL}d", v31, 8u);
        uint64_t v3 = v119;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      sub_10055341C();
      uint64_t v32 = *(void *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData];
      uint64_t v33 = *(void *)(v32 + 24);
      uint64_t v115 = *(char **)(v33 + 16);
      int v93 = a2;
      if (v115)
      {
        uint64_t v111 = v7;
        unint64_t v113 = (void (**)(uint64_t, char *, uint64_t))(v33 + 32);
        double v107 = (void (*)(uint64_t, char *, uint64_t))v33;
        swift_bridgeObjectRetain_n();
        unint64_t v105 = (void (**)(char *, uint64_t))v32;
        swift_retain();
        long long v114 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
        swift_beginAccess();
        char v34 = 0;
        do
        {
          unint64_t v35 = (uint64_t *)&v113[2 * (void)v34];
          uint64_t v36 = *v35;
          uint64_t v37 = v35[1];
          uint64_t v38 = *((void *)*v114 + 2);
          if (v38)
          {
            sub_10009E6C4(0, (unint64_t *)&qword_100706710);
            swift_bridgeObjectRetain_n();
            swift_unknownObjectRetain();
            uint64_t v39 = 32;
            while (1)
            {
              id v40 = *(void **)(v36 + 24);
              swift_unknownObjectRetain();
              id v41 = v40;
              char v42 = static NSObject.== infix(_:_:)();

              if (v42) {
                break;
              }
              swift_unknownObjectRelease();
              v39 += 16;
              if (!--v38) {
                goto LABEL_23;
              }
            }
            swift_unknownObjectRelease();
LABEL_23:
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_unknownObjectRetain();
          }
          ++v34;
          uint64_t v3 = v119;
          sub_1005566AC(v36, v37, (uint64_t)v119, v116 & 1);
          swift_unknownObjectRelease();
        }
        while (v34 != v115);
        swift_release();
        swift_bridgeObjectRelease_n();
        uint64_t v7 = v111;
      }
      uint64_t v43 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
      v124.receiver = v3;
      v124.super_class = v43;
      uint64_t v95 = v43;
      id v44 = [super collectionView];
      if (!v44) {
        goto LABEL_70;
      }
      unint64_t v45 = v44;
      uint64_t v94 = type metadata accessor for DOCSidebarCollectionView();
      id v46 = [(id)swift_dynamicCastClassUnconditional() indexPathsForVisibleItems];

      uint64_t v47 = v108;
      uint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v49 = *(void *)(v48 + 16);
      v91[2] = v48;
      if (v49)
      {
        unint64_t v50 = v48 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        uint64_t v51 = (uint64_t)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
        swift_bridgeObjectRetain();
        swift_beginAccess();
        id v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
        uint64_t v52 = v7 + 16;
        uint64_t v116 = v53;
        uint64_t v104 = *(void *)(v52 + 56);
        long long v114 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 32);
        unint64_t v113 = (void (**)(uint64_t, char *, uint64_t))(v52 + 16);
        unint64_t v105 = (void (**)(char *, uint64_t))(v109 + 1);
        uint64_t v111 = v52;
        id v109 = (void (**)(uint64_t, uint64_t))(v52 - 8);
        uint64_t v115 = (char *)(v52 + 40);
        v91[1] = (v52 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        unint64_t v99 = (char *)&type metadata for Any + 8;
        uint64_t v54 = (uint64_t)v112;
        uint64_t v55 = v110;
        uint64_t v96 = v51;
        v53((uint64_t)v110, v50, v47);
        while (1)
        {
          uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v115;
          (*(void (**)(char *, void, uint64_t, uint64_t))v115)(v55, 0, 1, v47);
          char v57 = *v114;
          if ((*v114)((uint64_t)v55, 1, v47) == 1) {
            goto LABEL_62;
          }
          double v107 = *v113;
          v107(v54, v55, v47);
          sub_1000CBC00(v51, (uint64_t)&v122, (uint64_t *)&unk_100705D60);
          if (v123)
          {
            sub_1000CBE70((uint64_t *)&unk_100709880);
            if (swift_dynamicCast())
            {
              id v58 = v120;
              goto LABEL_42;
            }
          }
          else
          {
            sub_1000CBBA4((uint64_t)&v122, (uint64_t *)&unk_100705D60);
          }
          if (qword_100705318 != -1) {
            swift_once();
          }
          id v58 = (id)qword_10071BD48;
LABEL_42:
          dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

          unint64_t v59 = IndexPath.section.getter();
          uint64_t v60 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
          if ((v59 & 0x8000000000000000) != 0 || v59 >= *(void *)(v60 + 16))
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            long long v103 = *(_OWORD *)(v60 + 16 * v59 + 32);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            long long v122 = v103;
            uint64_t v61 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
            unint64_t v62 = IndexPath.item.getter();
            if ((v62 & 0x8000000000000000) == 0 && v62 < *(void *)(v61 + 16))
            {
              unint64_t v63 = v61 + 48 * v62;
              *(void *)&long long v103 = *(void *)(v63 + 32);
              uint64_t v65 = *(void **)(v63 + 48);
              uint64_t v64 = *(void *)(v63 + 56);
              uint64_t v66 = *(void *)(v63 + 64);
              int v67 = *(unsigned __int8 *)(v63 + 72);
              swift_unknownObjectRetain();
              sub_1000A9454(v65, v64, v66, v67);
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              (*v105)(v117, v118);
              swift_unknownObjectRelease();
              uint64_t v68 = v64;
              uint64_t v51 = v96;
              sub_1000A7C1C(v65, v68, v66, v67);
              BOOL v23 = v67 == 255;
              uint64_t v3 = v119;
              uint64_t v47 = v108;
              uint64_t v54 = (uint64_t)v112;
              if (v23) {
                goto LABEL_32;
              }
              goto LABEL_52;
            }
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = v108;
          }
          (*v105)(v117, v118);
          uint64_t v54 = (uint64_t)v112;
LABEL_52:
          uint64_t v69 = sub_100482044(v54, 0);
          if (v69)
          {
            uint64_t v71 = v69;
            uint64_t v98 = v70;
            uint64_t v72 = sub_100482C08(v54, 1);
            if (v75 == -1) {
              goto LABEL_31;
            }
            char v76 = v75;
            uint64_t v101 = v74;
            uint64_t v102 = v73;
            *(void *)&long long v103 = v72;
            uint64_t v77 = v106;
            v116(v106, v54, v47);
            v56(v77, 0, 1, v47);
            uint64_t v78 = v77;
            uint64_t v79 = v100;
            sub_1000CBC00(v78, v100, (uint64_t *)&unk_1007069A0);
            if (v57(v79, 1, v47) == 1)
            {
              sub_1000CBBA4(v79, (uint64_t *)&unk_1007069A0);
            }
            else
            {
              uint64_t v80 = v97;
              v107((uint64_t)v97, (char *)v79, v47);
              v121.receiver = v119;
              v121.super_class = v95;
              id v81 = [super collectionView];
              if (!v81) {
                goto LABEL_69;
              }
              Swift::String v82 = v81;
              id v83 = (void *)swift_dynamicCastClassUnconditional();
              Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
              id v85 = [v83 cellForItemAtIndexPath:isa];

              (*v109)((uint64_t)v80, v47);
              uint64_t v54 = (uint64_t)v112;
              if (v85)
              {
                type metadata accessor for DOCSidebarItemCell(0);
                uint64_t v86 = swift_dynamicCastClass();
                if (v86)
                {
                  uint64_t v87 = (void *)v86;
                  sub_1000CBBA4(v106, (uint64_t *)&unk_1007069A0);
                  sub_100551550(v87, (char *)v103, v102, v101, v76, v71);

LABEL_30:
                  sub_1000A7C1C((id)v103, v102, v101, v76);
                  uint64_t v47 = v108;
                  uint64_t v51 = v96;
LABEL_31:
                  swift_unknownObjectRelease();
                  uint64_t v3 = v119;
                  goto LABEL_32;
                }
              }
            }
            sub_1000CBBA4(v106, (uint64_t *)&unk_1007069A0);
            goto LABEL_30;
          }
LABEL_32:
          (*v109)(v54, v47);
          v50 += v104;
          --v49;
          uint64_t v55 = v110;
          if (!v49)
          {
            v56((uint64_t)v110, 1, 1, v47);
            goto LABEL_62;
          }
          v116((uint64_t)v110, v50, v47);
        }
      }
      long long v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain();
      v88(v110, 1, 1, v47);
LABEL_62:
      swift_bridgeObjectRelease_n();
      sub_1000A767C();
      if (v93) {
        sub_1000B8744(0, 0);
      }
      uint64_t v89 = *(void *)&v3[v92];
      BOOL v26 = __OFSUB__(v89, 1);
      uint64_t v90 = v89 - 1;
      if (!v26)
      {
        *(void *)&v3[v92] = v90;
        return;
      }
    }
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
  }
}

uint64_t sub_10004E940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 88;
  swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)(a1 + 88) + 16);
  uint64_t v6 = self;
  id v7 = [v6 sharedManager];
  id v8 = [v6 sharedManager];
  id v9 = [v8 favoritedLocations];

  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = sub_100019008(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v23 = v5;
  id v24 = v7;
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(v10 + 8 * i + 32);
    }
    id v15 = v14;
    unint64_t v17 = _swiftEmptyArrayStorage[2];
    unint64_t v16 = _swiftEmptyArrayStorage[3];
    if (v17 >= v16 >> 1) {
      sub_100019008(v16 > 1, v17 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v17 + 1;
    uint64_t v18 = &_swiftEmptyArrayStorage[4 * v17];
    v18[5] = 0;
    void v18[6] = 0;
    v18[4] = v15;
    *((unsigned char *)v18 + 56) = 0;
  }
  swift_bridgeObjectRelease();
  id v7 = v24;
  uint64_t v5 = v23;
LABEL_14:
  *(void *)uint64_t v4 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v19 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSeenInitiallyGatheredFavorites;
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_hasSeenInitiallyGatheredFavorites) == 1
    && v5 == 0)
  {
    if (*(void *)(*(void *)v4 + 16))
    {
      char v21 = *(unsigned char *)(a1 + 16);
      swift_retain();
      sub_10004D62C(v21);
      swift_release();
      type metadata accessor for DOCMutableSidebarSection();
      *(unsigned char *)(swift_dynamicCastClassUnconditional() + 48) = 1;
      sub_1000B8744(0, 0);
      swift_retain();
      sub_100167C64();
      swift_unknownObjectRelease();
      swift_release();
    }
  }
  unsigned __int8 v22 = [v7 isGathering];

  *(unsigned char *)(a2 + v19) = v22 ^ 1;
  return 1;
}

unint64_t sub_10004EC28()
{
  unint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  if (!*(void *)(v2 + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t result = sub_10004F108(0);
  if ((v3 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (!*(void *)(v2 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(*(void *)(v2 + 56) + 8 * result);
  unint64_t result = sub_10004F108(1);
  if (v5)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = swift_bridgeObjectRetain();
    sub_100050524(v6);
    return v4;
  }
LABEL_9:
  __break(1u);
  return result;
}

void *sub_10004ECD4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_strategy);
  sub_10004EE00();
  unint64_t result = (void *)static NSUserDefaults.docUserDefaults.getter();
  if (result)
  {
    id v8 = result;
    id v9 = sub_10004F234(result);
    uint64_t v10 = sub_10004F5B0(a2, (uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v6 + 16);
    swift_bridgeObjectRetain();
    char v12 = sub_10004EE40(v10, v11);
    swift_bridgeObjectRelease();

    if (v12 & 1) == 0 || (a3)
    {
      *(void *)(v6 + 16) = v10;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock);
      swift_retain();
      uint64_t v14 = swift_bridgeObjectRetain();
      v13(v14);
      swift_release();
      swift_bridgeObjectRelease();
      return (void *)sub_100027C9C();
    }
    else
    {
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

unint64_t sub_10004EE00()
{
  unint64_t result = qword_100707730;
  if (!qword_100707730)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100707730);
  }
  return result;
}

uint64_t sub_10004EE40(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            return 1;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_24:
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    sub_10004F108(*(unsigned char *)(*(void *)(v2 + 48) + v10));
    if (v15)
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = swift_bridgeObjectRetain();
      unsigned __int8 v17 = sub_10004EFF0(v16, v14);
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        continue;
      }
    }
    return 0;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_10004EFF0(unint64_t a1, uint64_t a2)
{
  return sub_10007CE38(a1, a2, (uint64_t)&qword_100707CD0);
}

unint64_t sub_10004F004(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000CBE70(&qword_100711CE0);
  int64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_10004F108(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  int64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10004F108(v4);
    int64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10004F108(char a1)
{
  char v2 = a1 & 1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Swift::Int v3 = Hasher._finalize()();

  return sub_10004F178(v2, v3);
}

unint64_t sub_10004F178(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

void *sub_10004F234(void *a1)
{
  id v1 = [a1 DOCSourceOrderKey];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      sub_100059E2C(0, v4, 0);
      uint64_t v5 = _swiftEmptyArrayStorage;
      uint64_t v6 = (uint64_t *)(v3 + 40);
      do
      {
        uint64_t v8 = *(v6 - 1);
        uint64_t v7 = *v6;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;
        swift_bridgeObjectRetain();
        v12._Swift::Int countAndFlagsBits = v9;
        v12._object = v11;
        LOBYTE(v9) = String.hasPrefix(_:)(v12);
        swift_bridgeObjectRelease();
        if (v9)
        {
          v13._Swift::Int countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::Bool v14 = String.hasPrefix(_:)(v13);
          swift_bridgeObjectRelease();
          if (v14) {
            uint64_t v15 = static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter();
          }
          else {
            uint64_t v15 = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
          }
          unint64_t v16 = (void *)v15;
          uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v18 = v17;
          swift_bridgeObjectRelease();

          uint64_t v7 = v18;
        }
        unint64_t v20 = _swiftEmptyArrayStorage[2];
        unint64_t v19 = _swiftEmptyArrayStorage[3];
        if (v20 >= v19 >> 1) {
          sub_100059E2C(v19 > 1, v20 + 1, 1);
        }
        v6 += 2;
        _swiftEmptyArrayStorage[2] = v20 + 1;
        char v21 = &_swiftEmptyArrayStorage[2 * v20];
        v21[4] = v8;
        v21[5] = v7;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    sub_1000CBE70(&qword_100707EF0);
    uint64_t v5 = (void *)swift_allocObject();
    *((_OWORD *)v5 + 1) = xmmword_10059B760;
    unsigned __int8 v22 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    v5[4] = v23;
    v5[5] = v25;
    v5[6] = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v5[7] = v26;
  }
  return v5;
}

uint64_t sub_10004F4C0()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 valueForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1000516C4((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_1000CBE70(&qword_10070AEB0);
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10006273C((uint64_t)v6);
    return 0;
  }
}

uint64_t sub_10004F5B0(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_22;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
LABEL_157:
    id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_104;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      type metadata accessor for DOCSharedServerSource();
      uint64_t v6 = swift_dynamicCastClass();
      id v7 = v5;
      if (v6)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    type metadata accessor for DOCSharedServerSource();
    for (uint64_t j = 0; j != v3; ++j)
    {
      uint64_t v9 = *(void **)(v2 + 8 * j + 32);
      uint64_t v10 = swift_dynamicCastClass();
      id v11 = v9;
      if (v10)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  unint64_t v101 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v102 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v2 = static DOCLog.Source.getter();
  static os_log_type_t.info.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  Swift::String v12 = (void *)swift_allocObject();
  long long v89 = xmmword_10059B760;
  *((_OWORD *)v12 + 1) = xmmword_10059B760;
  Swift::String v13 = &type metadata for Int;
  unint64_t v14 = (unint64_t)&protocol witness table for Int;
  uint64_t v15 = *(void *)(a2 + 16);
  v12[7] = &type metadata for Int;
  v12[8] = &protocol witness table for Int;
  uint64_t v94 = v15;
  void v12[4] = v15;
  unint64_t object = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage >> 62;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_150;
  }
  uint64_t v18 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_24:
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v19 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v20 = v18 + v19;
    if (!__OFADD__(v18, v19)) {
      goto LABEL_26;
    }
LABEL_153:
    __break(1u);
LABEL_154:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_28;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    long long v91 = _swiftEmptyArrayStorage;
    if (object >> 62) {
      goto LABEL_105;
    }
LABEL_40:
    uint64_t v31 = *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v31) {
      goto LABEL_52;
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v20 = v18 + v88;
  if (__OFADD__(v18, v88)) {
    goto LABEL_153;
  }
LABEL_26:
  v12[12] = v13;
  v12[13] = v14;
  v12[9] = v20;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_154;
  }
  uint64_t v21 = *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21) {
    goto LABEL_39;
  }
LABEL_28:
  unint64_t v2 = 0;
  unint64_t v22 = object & 0xC000000000000001;
  Swift::String v12 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  while (1)
  {
    id v23 = v22 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(object + 8 * v2 + 32);
    uint64_t v24 = v23;
    id v25 = [v23 identifier];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v27;
    if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == (void)v28) {
      break;
    }
    Swift::String v13 = v28;
    unint64_t v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_101;
    }
    unint64_t v30 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_148;
    }
    ++v2;
    if (v30 == v21) {
      goto LABEL_39;
    }
  }

  swift_bridgeObjectRelease_n();
LABEL_101:
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A04F0;
  if (v22) {
    goto LABEL_157;
  }
  if (v2 >= *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_159;
  }
  id v68 = *(id *)(object + 8 * v2 + 32);
LABEL_104:
  *(void *)(v3 + 32) = v68;
  specialized Array._endMutation()();
  long long v91 = (void *)v3;

  unint64_t object = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
    goto LABEL_40;
  }
LABEL_105:
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  if (!v31)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    uint64_t v90 = _swiftEmptyArrayStorage;
    if (v94)
    {
LABEL_53:
      swift_bridgeObjectRetain();
      unint64_t object = 0;
      while (1)
      {
        id v41 = (uint64_t *)(a2 + 32 + 16 * object);
        uint64_t v42 = *v41;
        Swift::String v13 = (void *)v41[1];
        Swift::String v12 = _swiftEmptyArrayStorage;
        if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
          if (!v43)
          {
LABEL_54:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v43 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (!v43) {
            goto LABEL_54;
          }
        }
        unint64_t v93 = object;
        unint64_t v44 = 0;
        unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
        uint64_t v96 = v13;
        uint64_t v95 = v42;
        uint64_t v97 = v43;
        while (1)
        {
          if (v14) {
            id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v45 = (id)_swiftEmptyArrayStorage[v44 + 4];
          }
          NSString v46 = v45;
          unint64_t v17 = (unint64_t)[v45 identifier];
          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v2 = v48;

          if (v47 == v42 && v2 == (void)v13)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            goto LABEL_90;
          }
          char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v50)
          {
            swift_bridgeObjectRelease();

            goto LABEL_90;
          }
          type metadata accessor for DOCFileProviderSource(0);
          uint64_t v51 = swift_dynamicCastClass();
          if (!v51) {
            goto LABEL_82;
          }
          unint64_t v2 = *(void *)(v51 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
          if (!v2) {
            goto LABEL_82;
          }
          id v52 = v46;
          id v53 = (id)v2;
          NSString v46 = String._bridgeToObjectiveC()();
          unint64_t v17 = (unint64_t)[v53 isiCloudDriveProvider];
          unsigned __int8 v54 = [v53 isEnterpriseDomain];
          unint64_t v2 = (unint64_t)[v53 isHidden];
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          v55._Swift::Int countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t object = (unint64_t)v55._object;
          Swift::Bool v56 = String.hasPrefix(_:)(v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v56)
          {

            char v57 = v17 & v54 ^ 1 | v2;
            goto LABEL_73;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          v58._Swift::Int countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t object = String.hasPrefix(_:)(v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (object)
          {

            char v57 = v17 ^ 1 | v54 | v2;
LABEL_73:
            Swift::String v12 = _swiftEmptyArrayStorage;
            Swift::String v13 = v96;
            uint64_t v42 = v95;
            unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
            if ((v57 & 1) == 0) {
              goto LABEL_89;
            }
            goto LABEL_83;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          v59._Swift::Int countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::Bool v60 = String.hasPrefix(_:)(v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          Swift::String v13 = v96;
          if (v60) {
            break;
          }
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t object = v61;
          v62._Swift::Int countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v2 = String.hasPrefix(_:)(v62);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v2) {
            break;
          }

          unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
          Swift::String v12 = _swiftEmptyArrayStorage;
          uint64_t v42 = v95;
LABEL_82:

LABEL_83:
          unint64_t v65 = v44 + 1;
          if (__OFADD__(v44, 1))
          {
LABEL_145:
            __break(1u);
            goto LABEL_146;
          }
          ++v44;
          if (v65 == v97)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t object = v93;
            goto LABEL_55;
          }
        }
        unint64_t object = (unint64_t)[v53 providerID];
        unint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v2 = v63;

        Swift::String v12 = _swiftEmptyArrayStorage;
        if (v17 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v2 != v64)
        {
          unint64_t object = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v42 = v95;
          unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
          if (object) {
            goto LABEL_89;
          }
          goto LABEL_83;
        }

        swift_bridgeObjectRelease_n();
        unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
LABEL_89:
        swift_bridgeObjectRelease();
        Swift::String v13 = _swiftEmptyArrayStorage;
LABEL_90:
        swift_bridgeObjectRelease();
        if (!v14)
        {
          if (v44 < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v66 = (id)_swiftEmptyArrayStorage[v44 + 4];
            goto LABEL_93;
          }
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
        specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_93:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        unint64_t object = v93;
LABEL_55:
        if (++object == v94)
        {
          swift_bridgeObjectRelease();
          int v67 = (void *)v102;
          goto LABEL_113;
        }
      }
    }
    goto LABEL_112;
  }
LABEL_41:
  unint64_t v2 = 0;
  unint64_t v32 = object & 0xC000000000000001;
  Swift::String v12 = (void *)DOCDocumentSourceIdentifierSharedItems;
  while (1)
  {
    id v33 = v32 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(object + 8 * v2 + 32);
    char v34 = v33;
    id v35 = [v33 identifier];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v37;
    if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == (void)v38) {
      break;
    }
    Swift::String v13 = v38;
    unint64_t v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_108;
    }
    unint64_t v40 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      goto LABEL_149;
    }
    ++v2;
    if (v40 == v31) {
      goto LABEL_52;
    }
  }

  swift_bridgeObjectRelease_n();
LABEL_108:
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t result = swift_allocObject();
  uint64_t v3 = result;
  *(_OWORD *)(result + 16) = xmmword_1005A04F0;
  if (!v32)
  {
    if (v2 >= *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v70 = *(id *)(object + 8 * v2 + 32);
    goto LABEL_111;
  }
LABEL_159:
  id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_111:
  *(void *)(v3 + 32) = v70;
  specialized Array._endMutation()();
  uint64_t v90 = (void *)v3;

  if (v94) {
    goto LABEL_53;
  }
LABEL_112:
  int v67 = _swiftEmptyArrayStorage;
LABEL_113:
  unint64_t v99 = v67;
  unint64_t v71 = swift_bridgeObjectRetain();
  sub_100050524(v71);
  sub_100050524((unint64_t)v90);
  sub_100050524((unint64_t)v91);
  uint64_t v72 = v99;
  if (v94)
  {
    swift_bridgeObjectRetain();
    uint64_t v73 = 0;
    while (1)
    {
      uint64_t v74 = (uint64_t *)(a2 + 32 + 16 * v73);
      uint64_t v75 = *v74;
      Swift::String v12 = (void *)v74[1];
      unint64_t object = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
        if (v76)
        {
LABEL_119:
          uint64_t v98 = v73;
          unint64_t v77 = 0;
          unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001;
          while (1)
          {
            id v78 = v2
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : (id)_swiftEmptyArrayStorage[v77 + 4];
            unint64_t v17 = (unint64_t)v78;
            id v79 = [v78 identifier];
            unint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            Swift::String v13 = v80;

            if (v14 == v75 && v13 == v12) {
              break;
            }
            unint64_t v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            if (v14) {
              goto LABEL_132;
            }
            unint64_t v82 = v77 + 1;
            if (__OFADD__(v77, 1))
            {
              __break(1u);
              goto LABEL_145;
            }
            ++v77;
            if (v82 == v76)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v73 = v98;
              goto LABEL_116;
            }
          }
          swift_bridgeObjectRelease();

LABEL_132:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v2)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v77 >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_147;
            }
            id v83 = (id)_swiftEmptyArrayStorage[v77 + 4];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v73 = v98;
          if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          goto LABEL_116;
        }
      }
      else
      {
        uint64_t v76 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v76) {
          goto LABEL_119;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_116:
      if (++v73 == v94)
      {
        swift_bridgeObjectRelease();
        id v84 = (void *)v101;
        uint64_t v72 = v99;
        goto LABEL_143;
      }
    }
  }
  id v84 = _swiftEmptyArrayStorage;
LABEL_143:
  uint64_t v100 = v84;
  unint64_t v85 = swift_bridgeObjectRetain();
  sub_100050524(v85);
  sub_1000CBE70(&qword_100715008);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v89;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = v72;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = v100;
  unint64_t v87 = sub_10004F004(inited);
  swift_setDeallocating();
  sub_1000CBE70(&qword_100715010);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v87;
}

uint64_t sub_100050524(unint64_t a1)
{
  return sub_100083628(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_100083C24);
}

uint64_t sub_10005053C(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    *unint64_t v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)(v7 + 16) = v9;
      specialized Array._endMutation()();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100050628(unint64_t a1)
{
  return sub_10005053C(a1, sub_1000BC324);
}

id sub_100050640(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = 0;
  if (a3)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707730);
    uint64_t v8 = static NSUserDefaults.docUserDefaults.getter();
    if (v8)
    {
      unint64_t v9 = (void *)v8;
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = [v9 valueForKey:v10];

      if (v11)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v99 = 0u;
        long long v100 = 0u;
      }
      sub_1000516C4((uint64_t)&v99, (uint64_t)v101);
    }
    else
    {
      memset(v101, 0, 32);
    }
    sub_1000516C4((uint64_t)v101, (uint64_t)&v99);
    if (*((void *)&v100 + 1))
    {
      sub_1000CBE70(&qword_100708480);
      if (swift_dynamicCast())
      {
        uint64_t v7 = v98;
        goto LABEL_13;
      }
    }
    else
    {
      sub_10006273C((uint64_t)&v99);
    }
    uint64_t v7 = 0;
  }
LABEL_13:
  *(void *)(v4 + 16) = &off_100689CC0;
  type metadata accessor for DOCMutableSidebarSection();
  swift_allocObject();
  swift_retain();
  uint64_t v12 = sub_1000515B4(0, 0, 0xE000000000000000, a2);
  v12[36] = 0;
  if (v7)
  {
    if (*(void *)(v7 + 16))
    {
      uint64_t v13 = sub_100042F50(7368564, 0xE300000000000000);
      if (v14)
      {
        uint64_t v15 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v13);
        uint64_t v16 = *v15;
        unint64_t v17 = v15[1];
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        sub_100168CBC(v16, v17);
        swift_retain();
        JSONDecoder.init()();
        sub_100168D14();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        *((unsigned char *)v12 + 48) = v101[0];
        swift_release();
        sub_100021020(v16, v17);
      }
    }
  }
  id result = (id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_55;
  }
  uint64_t v19 = result;
  v102._Swift::Int countAndFlagsBits = 0xD000000000000037;
  v102._unint64_t object = (void *)0x80000001005D7130;
  v20._Swift::Int countAndFlagsBits = 0x6E6F697461636F4CLL;
  v20._unint64_t object = (void *)0xE900000000000073;
  v21._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v21._unint64_t object = (void *)0xEB00000000656C62;
  v22._Swift::Int countAndFlagsBits = 0;
  v22._unint64_t object = (void *)0xE000000000000000;
  Swift::String v23 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v102);

  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1000515B4(2, v23._countAndFlagsBits, (uint64_t)v23._object, a2);
  v24[72] = 1;
  uint64_t v95 = v12;
  if (v7)
  {
    if (*(void *)(v7 + 16))
    {
      uint64_t v25 = sub_100042F50(0x6E6F697461636F6CLL, 0xE900000000000073);
      if (v26)
      {
        unint64_t v27 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v25);
        uint64_t v28 = *v27;
        unint64_t v29 = v27[1];
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        sub_100168CBC(v28, v29);
        swift_retain();
        JSONDecoder.init()();
        sub_100168D14();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        v24[48] = v101[0];
        swift_release();
        sub_100021020(v28, v29);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v97 = v24;
  id v96 = a1;
  id result = (id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_56;
  }
  unint64_t v30 = result;
  v103._Swift::Int countAndFlagsBits = 0xD00000000000002ELL;
  v103._unint64_t object = (void *)0x80000001005D7170;
  v31._Swift::Int countAndFlagsBits = 0x657469726F766146;
  v31._unint64_t object = (void *)0xE900000000000073;
  v32._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v32._unint64_t object = (void *)0xEB00000000656C62;
  v33._Swift::Int countAndFlagsBits = 0;
  v33._unint64_t object = (void *)0xE000000000000000;
  Swift::String v34 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v103);

  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  id v35 = (char *)sub_1000515B4(3, v34._countAndFlagsBits, (uint64_t)v34._object, a2);
  v35[49] = 1;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v36 = result;
  v104._Swift::Int countAndFlagsBits = 0xD000000000000049;
  v104._unint64_t object = (void *)0x80000001005D71A0;
  v37._Swift::Int countAndFlagsBits = 0x65766F6D6552;
  v37._unint64_t object = (void *)0xE600000000000000;
  v38._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v38._unint64_t object = (void *)0xEB00000000656C62;
  v39._Swift::Int countAndFlagsBits = 0;
  v39._unint64_t object = (void *)0xE000000000000000;
  Swift::String v40 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v104);

  *(Swift::String *)(v35 + 56) = v40;
  swift_bridgeObjectRelease();
  v35[72] = 1;
  if (v7)
  {
    if (*(void *)(v7 + 16))
    {
      uint64_t v41 = sub_100042F50(0x657469726F766166, 0xE900000000000073);
      if (v42)
      {
        uint64_t v43 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v41);
        uint64_t v44 = *v43;
        unint64_t v45 = v43[1];
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        sub_100168CBC(v44, v45);
        swift_retain();
        JSONDecoder.init()();
        sub_100168D14();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        v35[48] = v101[0];
        swift_release();
        sub_100021020(v44, v45);
      }
    }
  }
  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_58;
  }
  NSString v46 = result;
  v105._Swift::Int countAndFlagsBits = 0xD000000000000033;
  v105._unint64_t object = (void *)0x80000001005D71F0;
  v47._Swift::Int countAndFlagsBits = 0x646572616853;
  v47._unint64_t object = (void *)0xE600000000000000;
  v48._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v48._unint64_t object = (void *)0xEB00000000656C62;
  v49._Swift::Int countAndFlagsBits = 0;
  v49._unint64_t object = (void *)0xE000000000000000;
  Swift::String v50 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v105);

  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_1000515B4(4, v50._countAndFlagsBits, (uint64_t)v50._object, a2);
  v51[72] = 1;
  if (v7 && *(void *)(v7 + 16) && (uint64_t v52 = sub_100042F50(0x73726576726573, 0xE700000000000000), (v53 & 1) != 0))
  {
    unsigned __int8 v54 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v52);
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    sub_100168CBC(v55, v56);
    swift_retain();
    JSONDecoder.init()();
    sub_100168D14();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    v51[48] = v101[0];
    swift_release();
    sub_100021020(v55, v56);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id result = (id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_59;
  }
  char v57 = result;
  uint64_t v94 = v4;
  v106._Swift::Int countAndFlagsBits = 0xD000000000000041;
  v106._unint64_t object = (void *)0x80000001005D7230;
  v58._Swift::Int countAndFlagsBits = 0x69535B2073676154;
  v58._unint64_t object = (void *)0xEE005D7261626564;
  v59._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v59._unint64_t object = (void *)0xEB00000000656C62;
  v60._Swift::Int countAndFlagsBits = 1936154964;
  v60._unint64_t object = (void *)0xE400000000000000;
  Swift::String v61 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v106);

  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  Swift::String v62 = (char *)sub_1000515B4(5, v61._countAndFlagsBits, (uint64_t)v61._object, a2);
  v62[49] = 1;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  unint64_t v63 = result;
  v107._unint64_t object = (void *)0x80000001005D4DE0;
  v64._Swift::Int countAndFlagsBits = 0x6574656C6544;
  v64._unint64_t object = (void *)0xE600000000000000;
  v65._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v65._unint64_t object = (void *)0xEB00000000656C62;
  v66._Swift::Int countAndFlagsBits = 0;
  v66._unint64_t object = (void *)0xE000000000000000;
  v107._Swift::Int countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v67 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v63, v66, v107);

  *(Swift::String *)(v62 + 56) = v67;
  swift_bridgeObjectRelease();
  v62[72] = 1;
  if (v7)
  {
    if (*(void *)(v7 + 16))
    {
      uint64_t v68 = sub_100042F50(1936154996, 0xE400000000000000);
      if (v69)
      {
        id v70 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v68);
        uint64_t v71 = *v70;
        unint64_t v72 = v70[1];
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        swift_retain();
        sub_100168CBC(v71, v72);
        JSONDecoder.init()();
        sub_100168D14();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        v62[48] = v101[0];
        swift_release();
        sub_100021020(v71, v72);
      }
    }
  }
  swift_bridgeObjectRelease();
  id v73 = [self defaultPermission];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v93 = [v73 canHostAppPerformAction:0 bundleIdentifier:v74];

  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A00C0;
  *(void *)(inited + 32) = v95;
  *(void *)(inited + 40) = v97;
  *(void *)(inited + 48) = v35;
  *(void *)(inited + 56) = v51;
  *(void *)(inited + 64) = v62;
  *(void *)&v101[0] = inited;
  specialized Array._endMutation()();
  unint64_t v76 = *(void *)&v101[0];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v77 = v96;
  if (([v96 isPickerUI] & 1) == 0) {
    goto LABEL_49;
  }
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_61:
    __break(1u);
    return result;
  }
  id v78 = result;
  v108._Swift::Int countAndFlagsBits = 0xD000000000000032;
  v108._unint64_t object = (void *)0x80000001005D7280;
  v79._Swift::Int countAndFlagsBits = 0x796C746E65636552;
  v79._unint64_t object = (void *)0xED00006465735520;
  v80._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
  v80._unint64_t object = (void *)0xEB00000000656C62;
  v81._Swift::Int countAndFlagsBits = 0;
  v81._unint64_t object = (void *)0xE000000000000000;
  Swift::String v82 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v79, v80, (NSBundle)v78, v81, v108);

  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  id v83 = sub_1000515B4(1, v82._countAndFlagsBits, (uint64_t)v82._object, a2);
  v83[49] = 1;
  if (v7)
  {
    if (*(void *)(v7 + 16))
    {
      uint64_t v84 = sub_100042F50(0x796C746E65636572, 0xEC00000064657355);
      if (v85)
      {
        uint64_t v86 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v84);
        uint64_t v88 = *v86;
        unint64_t v87 = v86[1];
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        swift_retain();
        sub_100168CBC(v88, v87);
        JSONDecoder.init()();
        sub_100168D14();
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        v83[48] = v99;
        swift_release();
        sub_100021020(0, v87);
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v77 = v96;
  if (v76 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (v92 >= 1) {
      goto LABEL_48;
    }
    goto LABEL_54;
  }
  uint64_t v89 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_retain();
  if (v89 < 1)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_48:
  sub_100515440(1, 1, (uint64_t)v83);
  swift_release();
  unint64_t v76 = *(void *)&v101[0];
LABEL_49:
  uint64_t v90 = sub_10000BE40(v76);
  swift_bridgeObjectRelease();
  *(void *)(v94 + 24) = v90;
  LODWORD(v90) = [v77 supportsRemovableFileProviders] & v93;
  sub_1000CBE70(&qword_100708E40);
  if (v90 == 1)
  {
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_1005A0500;
    *(void *)(v91 + 32) = v97;
    *(void *)(v91 + 40) = &off_10068CBB0;
    *(void *)(v91 + 48) = v35;
    *(void *)(v91 + 56) = &off_10068CBB0;
    *(void *)(v91 + 64) = v51;
    *(void *)(v91 + 72) = &off_10068CBB0;
    *(void *)(v91 + 80) = v62;
    *(void *)(v91 + 88) = &off_10068CBB0;
    swift_retain();
  }
  else
  {
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_1005A0230;
    *(void *)(v91 + 32) = v97;
    *(void *)(v91 + 40) = &off_10068CBB0;
    *(void *)(v91 + 48) = v35;
    *(void *)(v91 + 56) = &off_10068CBB0;
    *(void *)(v91 + 64) = v62;
    *(void *)(v91 + 72) = &off_10068CBB0;
  }
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  *(void *)(v94 + 32) = v91;
  swift_bridgeObjectRelease();
  return (id)v94;
}

id sub_1000515B4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = [objc_allocWithZone((Class)NSUUID) init];
  *(_WORD *)(v4 + 48) = 1;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    NSString v10 = result;
    v15._unint64_t object = (void *)0x80000001005D4DE0;
    v11._Swift::Int countAndFlagsBits = 0x6574656C6544;
    v11._unint64_t object = (void *)0xE600000000000000;
    v12._Swift::Int countAndFlagsBits = 0x617A696C61636F4CLL;
    v12._unint64_t object = (void *)0xEB00000000656C62;
    v13._Swift::Int countAndFlagsBits = 0;
    v13._unint64_t object = (void *)0xE000000000000000;
    v15._Swift::Int countAndFlagsBits = 0xD00000000000001BLL;
    Swift::String v14 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v15);

    *(Swift::String *)(v4 + 56) = v14;
    *(_WORD *)(v4 + 72) = 256;
    *(unsigned char *)(v4 + 16) = a1;
    *(void *)(v4 + 32) = a2;
    *(void *)(v4 + 40) = a3;
    *(void *)(v4 + 80) = a4;
    *(void *)(v4 + 88) = _swiftEmptyArrayStorage;
    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000516C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100705D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_10005181C()
{
  NSString v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_itemObservances;
  unint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_itemObservances];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = (uint64_t)result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    dispatch thunk of NSKeyValueObservation.invalidate()();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  id v9 = [v1 barButtonItems];
  sub_100051D8C();
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v10 >> 62) {
    goto LABEL_22;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  Swift::String v12 = v1;
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v18 = v2;
    uint64_t v13 = 4;
    while (1)
    {
      id v14 = (v10 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v10 + 8 * v13);
      Swift::String v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      uint64_t v2 = v11;
      swift_getKeyPath();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();

      swift_release();
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v18;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_22:
    unint64_t v17 = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();

  *(void *)&v1[v2] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  return sub_100051B14();
}

id sub_100051B14()
{
  id v1 = [v0 barButtonItems];
  sub_100051D8C();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      unsigned int v8 = [v5 isHidden];
      if (!v8) {
        goto LABEL_11;
      }

      ++v4;
      if (v7 == v3)
      {
        uint64_t v6 = 0;
LABEL_11:
        unsigned __int8 v9 = v8 ^ 1;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  unsigned __int8 v9 = 0;
  uint64_t v6 = 0;
LABEL_15:
  swift_bridgeObjectRelease_n();

  uint64_t v10 = OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_hasVisibleItems;
  v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_hasVisibleItems] = v9;
  uint64_t v11 = (objc_class *)type metadata accessor for DOCBarButtonItemGroup();
  v15.receiver = v0;
  v15.super_class = v11;
  id result = [super isHidden];
  if (v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup__isHiddenExternalClientSetting] == 1)
  {
    if (result) {
      return result;
    }
    uint64_t v13 = 1;
  }
  else if (v0[v10] == 1)
  {
    if ((result & 1) == 0) {
      return result;
    }
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = v0[OBJC_IVAR____TtC5Files21DOCBarButtonItemGroup_autoHideIfItemsHidden];
    if (result == v13) {
      return result;
    }
  }
  v14.receiver = v0;
  v14.super_class = v11;
  return [super setHidden:v13];
}

unint64_t sub_100051D8C()
{
  unint64_t result = qword_10070B700;
  if (!qword_10070B700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070B700);
  }
  return result;
}

uint64_t type metadata accessor for DOCBarButtonItemGroup()
{
  return self;
}

void sub_100051ED8(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  char v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unsigned int v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v38 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v39 = (char *)&v37 - v14;
  __chkstk_darwin(v13);
  uint64_t v41 = (char *)&v37 - v15;
  uint64_t v16 = sub_1000CBE70(&qword_10070E2D8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  Swift::String v20 = (objc_class *)type metadata accessor for DOCItemCollectionGridCell();
  v49.receiver = v2;
  v49.super_class = v20;
  [super _bridgedUpdateConfigurationUsingState:isa];

  uint64_t v21 = type metadata accessor for UICellConfigurationState();
  uint64_t v22 = *(void *)(v21 - 8);
  Swift::String v37 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v37(v18, a1, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
  sub_100052418((uint64_t)v18);
  sub_1000CBBA4((uint64_t)v18, &qword_10070E2D8);
  sub_1000CBC00((uint64_t)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider], (uint64_t)v46, &qword_10071C0B8);
  uint64_t v40 = a1;
  if (v47)
  {
    sub_1000D4774((uint64_t)v46, (uint64_t)v43);
    sub_1000CBBA4((uint64_t)v46, &qword_10071C0B8);
    uint64_t v23 = v44;
    uint64_t v24 = v45;
    sub_1000A6B78(v43, v44);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 8))(v2, a1, v23, v24);
    uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    v25(v8, 0, 1, v9);
    sub_10009B1B8((uint64_t)v43);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      char v26 = v41;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v8, v9);
      unint64_t v27 = v42;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v42, v26, v9);
      v25(v27, 0, 1, v9);
      UICollectionViewCell.backgroundConfiguration.setter();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v26, v9);
      return;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v46, &qword_10071C0B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10070E2F0);
  uint64_t v28 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
  if (v28)
  {
    id v29 = v28;
    if (sub_100053330())
    {
      [v29 setHidden:1];
    }
    else
    {
      id v29 = v29;
      unint64_t v30 = v38;
      static UIBackgroundConfiguration.listCell()();
      uint64_t v47 = v21;
      Swift::String v48 = &protocol witness table for UICellConfigurationState;
      Swift::String v31 = sub_100052C70(v46);
      v37((char *)v31, v40, v21);
      Swift::String v32 = v39;
      UIBackgroundConfiguration.updated(for:)();
      Swift::String v33 = *(void (**)(char *, uint64_t))(v10 + 8);
      v33(v30, v9);
      sub_10009B1B8((uint64_t)v46);
      id v34 = [v2 tintColor];
      if (!v34)
      {
        __break(1u);
        return;
      }
      id v35 = v34;
      Class v36 = UIBackgroundConfiguration.resolvedBackgroundColor(for:)((UIColor)v34).super.isa;

      v33(v32, v9);
      [v29 setBackgroundColor:v36];
    }
  }
}

void sub_100052418(uint64_t a1)
{
  uint64_t v72 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v3 = *(void *)(v72 - 8);
  uint64_t v4 = __chkstk_darwin(v72);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned int v8 = (char *)&v72 - v7;
  uint64_t v9 = sub_1000CBE70(&qword_10070E2D8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICellConfigurationState();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v15;
  sub_1000CBC00(a1, (uint64_t)v11, &qword_10070E2D8);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12);
  unint64_t v76 = v14;
  if (v17 == 1)
  {
    id v18 = [v1 _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000CBBA4((uint64_t)v11, &qword_10070E2D8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v11, v12);
  }
  uint64_t v19 = (void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  uint64_t v75 = v19;
  Swift::String v20 = *v19;
  unint64_t v77 = v1;
  uint64_t v21 = v72;
  if (v20)
  {
    id v22 = v20;
    id v73 = sub_10009B76C();
  }
  else
  {
    id v73 = 0;
  }
  uint64_t v23 = v76;
  static UIBackgroundConfiguration.listCell()();
  *(void *)&v83[24] = v12;
  *(void *)&v83[32] = &protocol witness table for UICellConfigurationState;
  uint64_t v24 = sub_100052C70((uint64_t *)v83);
  uint64_t v74 = v16;
  uint64_t v25 = *(void (**)(uint64_t *, char *, uint64_t))(v16 + 16);
  uint64_t v26 = v12;
  v25(v24, v23, v12);
  UIBackgroundConfiguration.updated(for:)();
  unint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v6, v21);
  sub_10009B1B8((uint64_t)v83);
  id v28 = v77;
  id v29 = [v77 tintColor];
  if (v29)
  {
    unint64_t v30 = v29;
    Class isa = UIBackgroundConfiguration.resolvedBackgroundColor(for:)((UIColor)v29).super.isa;

    v27(v8, v21);
    Swift::String v32 = isa;
    id v33 = [v28 tintColor];
    if (v33)
    {
      id v34 = v33;
      sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
      id v35 = v32;
      char v36 = static NSObject.== infix(_:_:)();

      uint64_t v37 = v26;
      if (v36)
      {
        uint64_t v38 = v74;
        Swift::String v39 = v75;
        uint64_t v40 = *v75;
        if (*v75)
        {
          uint64_t v41 = self;
          id v42 = v40;
          id v43 = [v41 whiteColor];
          sub_100052F18(v43);

          Swift::String v39 = v75;
          id v44 = *v39;
          uint64_t v45 = v77;
          if (!*v39) {
            goto LABEL_20;
          }
          NSString v46 = self;
          uint64_t v47 = (char *)v44;
          id v48 = [v46 whiteColor];
          objc_super v49 = *(void **)&v47[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor];
          *(void *)&v47[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor] = v48;
          id v35 = (objc_class *)v48;
          sub_100052CD4();
          goto LABEL_17;
        }
        goto LABEL_19;
      }
    }
    else
    {

      uint64_t v37 = v26;
    }
    uint64_t v38 = v74;
    Swift::String v39 = v75;
    Swift::String v50 = *v75;
    if (*v75)
    {
      uint64_t v51 = self;
      id v52 = v50;
      id v53 = [v51 labelColor];
      sub_100052F18(v53);

      id v54 = *v39;
      if (*v39)
      {
        uint64_t v55 = self;
        uint64_t v47 = (char *)v54;
        id v56 = [v55 secondaryLabelColor];
        objc_super v49 = *(void **)&v47[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor];
        *(void *)&v47[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor] = v56;
        id v35 = (objc_class *)v56;
        sub_100052CD4();
        uint64_t v45 = v77;
LABEL_17:

        Swift::String v39 = v75;
        goto LABEL_20;
      }
    }
    id v35 = v32;
LABEL_19:
    uint64_t v45 = v77;
LABEL_20:

    if (*v39)
    {
      id v57 = *v39;
      id v58 = sub_10009B76C();

      id v59 = v73;
      if (v73)
      {
        if (!v58
          || (sub_10009E6C4(0, (unint64_t *)&qword_1007088B0),
              id v60 = v59,
              char v61 = static NSObject.== infix(_:_:)(),
              v60,
              v60,
              v58,
              (v61 & 1) == 0))
        {
          id v62 = *v39;
          if (!*v39) {
            goto LABEL_27;
          }
LABEL_30:
          unint64_t v63 = *(char **)&v45[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
          id v64 = v62;
          sub_100099DF8((uint64_t)v83);
          v78[10] = *(_OWORD *)&v83[160];
          v78[11] = *(_OWORD *)&v83[176];
          uint64_t v79 = *(void *)&v83[192];
          v78[6] = *(_OWORD *)&v83[96];
          v78[7] = *(_OWORD *)&v83[112];
          v78[8] = *(_OWORD *)&v83[128];
          v78[9] = *(_OWORD *)&v83[144];
          v78[2] = *(_OWORD *)&v83[32];
          v78[3] = *(_OWORD *)&v83[48];
          v78[4] = *(_OWORD *)&v83[64];
          v78[5] = *(_OWORD *)&v83[80];
          v78[0] = *(_OWORD *)v83;
          v78[1] = *(_OWORD *)&v83[16];
          DOCSplitBrowserViewController.didCommitPreview(of:)(v78);
          Swift::String v65 = *(void **)&v63[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
          uint64_t v66 = (uint64_t)v65
              + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
          sub_1000CBE0C((uint64_t)v65+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v80, &qword_100705560);
          sub_1000CBE0C((uint64_t)v78, v66, &qword_100705560);
          sub_10009ABF0((uint64_t)v83);
          sub_10009ABF0((uint64_t)v83);
          sub_1000A0B6C((uint64_t)v80);
          [v65 setNeedsDisplay];
          sub_10009A978((uint64_t)v83);
          sub_1000CBE0C(v66, (uint64_t)v81, &qword_100705560);
          sub_1000CBE0C((uint64_t)v81, (uint64_t)v82, &qword_100705560);
          if (sub_1000CBEB4(v82) != 1) {
            [v63 setFont:v82[0]];
          }
          long long v90 = *(_OWORD *)&v83[136];
          long long v91 = *(_OWORD *)&v83[152];
          long long v92 = *(_OWORD *)&v83[168];
          long long v93 = *(_OWORD *)&v83[184];
          long long v86 = *(_OWORD *)&v83[72];
          long long v87 = *(_OWORD *)&v83[88];
          long long v88 = *(_OWORD *)&v83[104];
          long long v89 = *(_OWORD *)&v83[120];
          v84[0] = *(_OWORD *)&v83[8];
          v84[1] = *(_OWORD *)&v83[24];
          v84[2] = *(_OWORD *)&v83[40];
          long long v85 = *(_OWORD *)&v83[56];
          sub_10009AB2C((uint64_t)v84);
          [v63 bounds];
          [v63 contentScaleFactor];
          long long v67 = v85;
          UIPointRoundToScale();
          double v69 = v68;
          double v71 = v70;
          sub_10005519C(v84);
          [v65 setFrame:v69, v71, v67];
          [v63 invalidateIntrinsicContentSize];
          sub_10009A978((uint64_t)v83);
          sub_1000A0C38();

          uint64_t v38 = v74;
          goto LABEL_33;
        }
        goto LABEL_34;
      }
      if (v58)
      {

        id v62 = *v39;
        if (*v39) {
          goto LABEL_30;
        }
LABEL_27:

LABEL_33:
        (*(void (**)(char *, uint64_t))(v38 + 8))(v76, v37);
        return;
      }
    }
    else
    {
      id v59 = v73;
      if (v73) {
        goto LABEL_27;
      }
    }
LABEL_34:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v76, v37);

    return;
  }
  __break(1u);
}

uint64_t *sub_100052C70(uint64_t *a1)
{
  id v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_100052CD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor);
  sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  id v3 = v2;
  char v4 = static NSObject.== infix(_:_:)();

  if ((v4 & 1) == 0)
  {
    uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    *uint64_t v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000951C8((uint64_t)v9);
    uint64_t v7 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v10, &qword_100705560);
    sub_1000CBE0C((uint64_t)v9, v7, &qword_100705560);
    sub_10009A828(v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    unsigned int v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;
  }
}

void sub_100052DF0(void *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a2;
  uint64_t v6 = *(void **)(v2 + *a2);
  sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  id v7 = v6;
  char v8 = static NSObject.== infix(_:_:)();

  if ((v8 & 1) == 0)
  {
    uint64_t v9 = *(void **)(v3 + v5);
    *(void *)(v3 + v5) = a1;
    id v10 = a1;

    uint64_t v11 = (void *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    *uint64_t v11 = 0;
    v11[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(void *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000951C8((uint64_t)v15);
    uint64_t v13 = v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_1000CBE0C(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v16, &qword_100705560);
    sub_1000CBE0C((uint64_t)v15, v13, &qword_100705560);
    sub_10009A828(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(void *)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;
  }
}

void sub_100052F18(void *a1)
{
}

void DOCItemCollectionCell.updateConfiguration(using:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UICellConfigurationState();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  id v10 = &v29[-v9 - 8];
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  uint64_t v12 = (objc_class *)type metadata accessor for DOCItemCollectionCell();
  v31.receiver = v2;
  v31.super_class = v12;
  [super _bridgedUpdateConfigurationUsingState:isa];

  uint64_t v13 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1F8))();
  if (v13)
  {
    uint64_t v14 = (unsigned char *)v13;
    char v15 = UICellConfigurationState.isFocused.getter();
    uint64_t v16 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
    v16(v10, a1, v4);
    if (v15)
    {
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
      char v17 = v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing];
      v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing] = 1;
      if (v17)
      {
LABEL_14:

        return;
      }
    }
    else
    {
      char v18 = UICellConfigurationState.isSelected.getter();
      v16(v8, (uint64_t)v10, v4);
      if (v18) {
        char v19 = UICellConfigurationState.isEditing.getter() ^ 1;
      }
      else {
        char v19 = 0;
      }
      Swift::String v20 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v20(v8, v4);
      v20(v10, v4);
      int v21 = v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing];
      v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing] = v19 & 1;
      if ((v19 & 1) == v21) {
        goto LABEL_14;
      }
    }
    id v22 = *(void **)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle];
    *(void *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;

    sub_1000951C8((uint64_t)v29);
    uint64_t v23 = (uint64_t)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
    sub_1000CBE0C((uint64_t)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags], (uint64_t)v30, &qword_100705560);
    sub_1000CBE0C((uint64_t)v29, v23, &qword_100705560);
    sub_1000A0B6C((uint64_t)v30);
    uint64_t v24 = *(void **)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
    *(void *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;

    uint64_t v25 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v26 = *(void *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
    if ((v26 & 0x10) == 0)
    {
      v26 |= 0x10uLL;
      *(void *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v26;
    }
    if (!*(void *)&v14[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
      && !sub_1000CBC64())
    {
      *(void *)&v14[v25] = 0;
      sub_100090F98(v26, (uint64_t)v14);
    }
    goto LABEL_14;
  }
}

uint64_t sub_100053330()
{
  uint64_t v1 = type metadata accessor for UICellConfigurationState();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  char v8 = (char *)&v17 - v7;
  __chkstk_darwin(v6);
  id v10 = (char *)&v17 - v9;
  id v11 = [v0 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v11) = UICellConfigurationState.isFocused.getter();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v12(v8, v10, v1);
  if (v11) {
    char v13 = 1;
  }
  else {
    char v13 = UICellConfigurationState.isHighlighted.getter();
  }
  uint64_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v8, v1);
  v12(v5, v10, v1);
  if (v13) {
    char v15 = 0;
  }
  else {
    char v15 = UICellConfigurationState.isSelected.getter() ^ 1;
  }
  v14(v5, v1);
  v14(v10, v1);
  return v15 & 1;
}

uint64_t sub_100053508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (!a2)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  *((void *)&v9 + 1) = swift_getObjectType();
  *(void *)&long long v8 = a2;
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  char v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v8, (uint64_t *)&unk_100705D60);
  return v6 & 1;
}

uint64_t sub_1000535DC(uint64_t a1, uint64_t a2)
{
  return sub_1000535E4(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1000535E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t))
{
  v7[3] = sub_1000CBE70((uint64_t *)&unk_100705D60);
  v7[0] = swift_allocObject();
  sub_100053674(a1, v7[0] + 16);
  LOBYTE(a3) = a3(v7, a2);
  sub_10009B1B8((uint64_t)v7);
  return a3 & 1;
}

uint64_t sub_100053674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100705D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000536DC(uint64_t a1, uint64_t a2)
{
  return sub_10009ACC8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_100053754(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource) == 1
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v5 = [Strong traitCollectionExpectedForSearchPresentation];
    swift_unknownObjectRelease();
    if (!v2) {
      goto LABEL_8;
    }
  }
  else
  {
    v10.receiver = v1;
    v10.super_class = (Class)type metadata accessor for DOCSearchController();
    id v5 = [super traitCollection];
    if (!v2) {
      goto LABEL_8;
    }
  }
  char v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    id v7 = [v6 traitCollectionExpectedForSearchPresentation];
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
LABEL_8:
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DOCSearchController();
  id v7 = [super traitCollection];
LABEL_9:
  *((unsigned char *)v1 + v3) = v2;
  sub_10009E6C4(0, &qword_10070AD60);
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {
    id v8 = v5;
    sub_100053A00(v5);

    id v7 = v8;
  }
}

id sub_100053900()
{
  uint64_t v1 = (char *)[v0 effectiveBrowserViewController];
  if (v1)
  {
    int v2 = v1;
    uint64_t v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v4 = *v3;
    if (v4)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v5 = swift_dynamicCastClass();
      if (v5)
      {
        char v6 = (void *)v5;
        id v7 = v4;

        id v8 = [v6 traitCollection];
        return v8;
      }
    }
  }
  id v10 = [v0 traitCollection];

  return v10;
}

void sub_100053A00(void *a1)
{
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource) == 1
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v4 = [Strong traitCollectionExpectedForSearchPresentation];
    swift_unknownObjectRelease();
  }
  else
  {
    v5.receiver = v1;
    v5.super_class = (Class)type metadata accessor for DOCSearchController();
    [super traitCollection];
  }
  if (sub_100053E14(1, a1)) {
    sub_1005199D0();
  }
  if (sub_100053E14(16, a1)) {
    sub_10051C93C();
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  int v2 = v1;
  Class isa = a1.value.super.isa;
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super traitCollectionDidChange:isa];
  sub_1000B1750();
  id v4 = [v1 traitCollection];
  char v5 = sub_100053E14(8, isa);

  if (v5) {
    sub_100014C58();
  }
  id v6 = [v2 traitCollection];
  char v7 = sub_100053E14(16, isa);

  if (v7) {
    sub_1000D54D8();
  }
  id v8 = [v2 traitCollection];
  char v9 = sub_100053E14(1, isa);

  if (v9)
  {
    *((unsigned char *)v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
    id v10 = [v2 viewIfLoaded];
    id v11 = [v10 window];

    if (v11) {
      sub_1000A6988();
    }
  }
  sub_1000543A4();
}

void sub_100053D74(void *a1)
{
  int v2 = v1;
  id v4 = *(void **)&v2[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection];
  *(void *)&v2[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection] = a1;
  id v5 = a1;
  if (a1)
  {
    id v6 = v5;
    if (sub_100053E14(8, v4)) {
      [v2 setNeedsDisplay];
    }

    id v7 = v6;
  }
  else
  {
    id v6 = v4;
    id v7 = v5;
  }
}

uint64_t sub_100053E14(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10009B02C(1);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10009B02C(v5 & a1);
  swift_bridgeObjectRelease();
  if (v6 == 1)
  {
    if (a2) {
      id v7 = [a2 horizontalSizeClass];
    }
    else {
      id v7 = 0;
    }
    BOOL v8 = v7 != [v2 horizontalSizeClass];
  }
  else
  {
    BOOL v8 = 0;
  }
  uint64_t v9 = sub_10009B02C(2);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_10009B02C(v9 & a1);
  swift_bridgeObjectRelease();
  BOOL v11 = v10 == 2 || v8;
  if (v10 == 2 && !v8)
  {
    if (a2) {
      id v12 = [a2 verticalSizeClass];
    }
    else {
      id v12 = 0;
    }
    BOOL v11 = v12 != [v2 verticalSizeClass];
  }
  uint64_t v13 = sub_10009B02C(4);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_10009B02C(v13 & a1);
  swift_bridgeObjectRelease();
  BOOL v15 = v14 == 4 || v11;
  if (v14 == 4 && !v11)
  {
    if (a2)
    {
      [a2 displayScale];
      double v17 = v16;
    }
    else
    {
      if (qword_1007050C0 != -1) {
        swift_once();
      }
      double v17 = *(double *)&qword_100711028;
    }
    [v2 displayScale];
    BOOL v15 = v17 != v18;
  }
  uint64_t v19 = sub_10009B02C(8);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_10009B02C(v19 & a1);
  swift_bridgeObjectRelease();
  BOOL v21 = v20 == 8 || v15;
  if (v20 == 8 && !v15)
  {
    if (a2) {
      id v22 = [a2 userInterfaceStyle];
    }
    else {
      id v22 = 0;
    }
    BOOL v21 = v22 != [v2 userInterfaceStyle];
  }
  uint64_t v23 = sub_10009B02C(16);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_10009B02C(v23 & a1);
  swift_bridgeObjectRelease();
  char v25 = v24 == 16 || v21;
  if (v24 == 16 && !v21)
  {
    if (a2) {
      uint64_t v26 = (NSString *)[a2 preferredContentSizeCategory];
    }
    else {
      uint64_t v26 = UIContentSizeCategoryUnspecified;
    }
    unint64_t v27 = v26;
    id v28 = [v2 preferredContentSizeCategory];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;
    if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
    {
      swift_bridgeObjectRelease_n();
      char v25 = 0;
    }
    else
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v25 = v33 ^ 1;
    }
  }
  uint64_t v34 = sub_10009B02C(32);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10009B02C(v34 & a1);
  swift_bridgeObjectRelease();
  char v36 = (v35 == 32) | v25;
  if (v35 == 32 && (v25 & 1) == 0)
  {
    if (a2) {
      uint64_t v37 = (uint64_t)[a2 userInterfaceIdiom];
    }
    else {
      uint64_t v37 = -1;
    }
    char v36 = v37 != (void)[v2 userInterfaceIdiom];
  }
  uint64_t v38 = sub_10009B02C(64);
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_10009B02C(v38 & a1);
  swift_bridgeObjectRelease();
  char v40 = (v39 == 64) | v36;
  if (v39 == 64 && (v36 & 1) == 0)
  {
    if (a2) {
      uint64_t v41 = (uint64_t)[a2 layoutDirection];
    }
    else {
      uint64_t v41 = -1;
    }
    char v40 = v41 != (void)[v2 layoutDirection];
  }
  uint64_t v42 = sub_10009B02C(128);
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_10009B02C(v42 & a1);
  swift_bridgeObjectRelease();
  char v44 = (v43 == 128) | v40;
  if (v43 == 128 && (v40 & 1) == 0)
  {
    id v45 = [v2 sourceOutlineStyle];
    if (a2) {
      char v44 = v45 != [a2 sourceOutlineStyle];
    }
    else {
      char v44 = 1;
    }
  }
  uint64_t v46 = sub_10009B02C(256);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_10009B02C(v46 & a1);
  swift_bridgeObjectRelease();
  char v48 = (v47 == 256) | v44;
  if (v47 == 256 && (v44 & 1) == 0)
  {
    if (a2) {
      uint64_t v49 = (uint64_t)[a2 legibilityWeight];
    }
    else {
      uint64_t v49 = -1;
    }
    char v48 = v49 != (void)[v2 legibilityWeight];
  }
  uint64_t v50 = sub_10009B02C(512);
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_10009B02C(v50 & a1);
  swift_bridgeObjectRelease();
  char v52 = (v51 == 512) | v48;
  if (v51 == 512 && (v48 & 1) == 0)
  {
    sub_10009E9DC();
    UITraitCollection.subscript.getter();
    if (a2)
    {
      UITraitCollection.subscript.getter();
      char v52 = 0;
    }
    else
    {
      char v52 = 1;
    }
  }
  return v52 & 1;
}

void sub_1000543A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v53 - v8;
  __chkstk_darwin(v7);
  BOOL v11 = (char *)&v53 - v10;
  if (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename]) {
    return;
  }
  uint64_t v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
  {
    static Logger.Rename.getter();
    uint64_t v13 = v0;
    uint64_t v14 = Logger.logObject.getter();
    int v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      LODWORD(v55) = v15;
      os_log_t v56 = v14;
      uint64_t v57 = v3;
      uint64_t v58 = v2;
      uint64_t v59 = (uint64_t)v6;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      aBlock[0] = v54;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v61 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DDBB0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v17 = *(void *)&v1[v12];
      if (v17)
      {
        id v18 = [*(id *)(v17 + 64) filename];
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v21 = v20;

        uint64_t v61 = sub_10009B0E4(v19, v21, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 22) = 2080;
        if (*(void *)&v1[v12])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v22 = DOCNode.nodeDescription.getter();
          unint64_t v24 = v23;
          swift_unknownObjectRelease();
          uint64_t v61 = sub_10009B0E4(v22, v24, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v25 = v56;
          _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v55, "%s: update existing rename session on: \"%s\" node: %s)", (uint8_t *)v16, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v2 = v58;
          uint64_t v26 = *(void (**)(char *, uint64_t))(v57 + 8);
          v26(v9, v58);
          uint64_t v6 = (char *)v59;
          goto LABEL_13;
        }
      }
      else
      {

        __break(1u);
      }

      __break(1u);
      return;
    }

    uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v26(v9, v2);
LABEL_13:
    if (sub_1001F587C())
    {
      [*(id *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer] invalidate];
      uint64_t v37 = self;
      uint64_t v38 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = (uint64_t)sub_100221558;
      aBlock[5] = v38;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10041B2E4;
      void aBlock[3] = (uint64_t)&unk_100698478;
      uint64_t v39 = _Block_copy(aBlock);
      swift_release();
      id v40 = [v37 scheduledTimerWithTimeInterval:0 repeats:v39 block:0.1];
      _Block_release(v39);
      uint64_t v41 = *(void **)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer];
      *(void *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] = v40;
    }
    else
    {
      static Logger.Rename.getter();
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v42, v43))
      {
        char v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v59 = (uint64_t)v6;
        aBlock[0] = v45;
        *(_DWORD *)char v44 = 136315138;
        uint64_t v61 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DDBB0, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s: currently renaming item not found in item collection, aborting", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v46 = v59;
      }
      else
      {

        uint64_t v46 = (uint64_t)v6;
      }
      v26((char *)v46, v2);
      sub_1001F69AC();
    }
    return;
  }
  if (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] == 1)
  {
    uint64_t v27 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed;
    if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed])
    {
      static Logger.Rename.getter();
      id v28 = v0;
      uint64_t v29 = Logger.logObject.getter();
      int v30 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, (os_log_type_t)v30))
      {
        LODWORD(v56) = v30;
        uint64_t v57 = v3;
        uint64_t v58 = v2;
        uint64_t v59 = 7104878;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        aBlock[0] = v55;
        *(_DWORD *)uint64_t v31 = 136315650;
        uint64_t v61 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DDBB0, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v31 + 12) = 2080;
        uint64_t v32 = *(void **)&v1[v27];
        if (v32)
        {
          id v33 = [v32 filename];
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v36 = v35;
        }
        else
        {
          unint64_t v36 = 0xE300000000000000;
          uint64_t v34 = 7104878;
        }
        uint64_t v61 = sub_10009B0E4(v34, v36, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 22) = 2080;
        uint64_t v47 = *(void **)&v1[v27];
        if (v47)
        {
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          id v48 = v47;
          uint64_t v59 = DOCNode.nodeDescription.getter();
          unint64_t v50 = v49;
        }
        else
        {
          unint64_t v50 = 0xE300000000000000;
        }
        uint64_t v52 = v57;
        uint64_t v51 = v58;
        uint64_t v61 = sub_10009B0E4(v59, v50, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v56, "%s: begin deferred rename on: \"%s\" node: %s", (uint8_t *)v31, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v51);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      }
      sub_1001F52D0();
    }
  }
}

id sub_100054D0C()
{
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for DOCFastLabel();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
  sub_1000CBE0C((uint64_t)v1+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v36, &qword_100705560);
  sub_1000CBE0C((uint64_t)v36, (uint64_t)v22, &qword_100705560);
  sub_1000CBE0C((uint64_t)v36, (uint64_t)v37, &qword_100705560);
  if (sub_1000CBEB4(v37) == 1)
  {
    double v2 = 0.0;
    double v3 = 0.0;
    double v4 = 0.0;
    double v5 = 0.0;
  }
  else
  {
    long long v17 = v31;
    long long v18 = v32;
    long long v19 = v33;
    long long v20 = v34;
    long long v13 = v27;
    long long v14 = v28;
    long long v15 = v29;
    long long v16 = v30;
    long long v9 = v23;
    long long v10 = v24;
    long long v11 = v25;
    long long v12 = v26;
    sub_1000CBE0C((uint64_t)v22, (uint64_t)v21, &qword_100705560);
    sub_100055128(v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009AA50);
    sub_10009AB2C((uint64_t)&v9);
    sub_100055128(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    [v0 bounds:v9, v10, v11];
    [v0 contentScaleFactor];
    double v3 = *((double *)&v12 + 1);
    double v2 = *(double *)&v12;
    UIPointRoundToScale();
    double v4 = v6;
    double v5 = v7;
    sub_10005519C(&v9);
  }
  return [v1 setFrame:v4, v5, v2, v3];
}

uint64_t type metadata accessor for DOCFastLabel()
{
  return self;
}

void sub_100054F50(CGContext *a1)
{
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for DOCFastLabel.FastLabelLayer();
  [(CGContext *)&v23 drawInContext:a1];
  double v3 = *(void **)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection];
  if (v3)
  {
    double v4 = self;
    id v5 = v3;
    id v6 = [v4 _currentTraitCollection];
    [v4 _setCurrentTraitCollection:v5];
    sub_1000CBE0C((uint64_t)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation], (uint64_t)v21, &qword_100705560);
    sub_1000CBE0C((uint64_t)v21, (uint64_t)v8, &qword_100705560);
    sub_1000CBE0C((uint64_t)v21, (uint64_t)v22, &qword_100705560);
    if (sub_1000CBEB4(v22) != 1)
    {
      v24[8] = v17;
      v24[9] = v18;
      v24[10] = v19;
      v24[11] = v20;
      v24[4] = v13;
      v24[5] = v14;
      v24[6] = v15;
      v24[7] = v16;
      v24[0] = v9;
      v24[1] = v10;
      v24[2] = v11;
      _OWORD v24[3] = v12;
      sub_1000CBE0C((uint64_t)v8, (uint64_t)v7, &qword_100705560);
      sub_100055128(v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009AA50);
      sub_10009AB2C((uint64_t)v24);
      sub_100055128(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
      sub_100055280(a1);
      sub_10005519C(v24);
    }
    [v4 _setCurrentTraitCollection:v6];
  }
}

void *sub_100055128(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

void *sub_10005519C(void *a1)
{
  double v2 = (void *)a1[8];
  uint64_t v3 = a1[11];
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v6 = a1[14];
  uint64_t v7 = a1[15];
  uint64_t v8 = a1[18];
  uint64_t v12 = a1[19];
  uint64_t v13 = a1[17];
  uint64_t v10 = a1[21];
  uint64_t v11 = a1[20];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10009AA40(v3, v4, v5, v6, v7);
  sub_10009AA40(v13, v8, v12, v11, v10);
  return a1;
}

uint64_t type metadata accessor for DOCFastLabel.FastLabelLayer()
{
  return self;
}

const __CTLine *sub_100055280(CGContext *a1)
{
  double v2 = v1;
  v50.CGFloat a = 1.0;
  v50.b = 0.0;
  v50.c = 0.0;
  v50.d = 1.0;
  v50.CGFloat tx = 0.0;
  v50.ty = 0.0;
  CGContextSetTextMatrix(a1, &v50);
  double v4 = v1[4];
  double v5 = v1[5];
  CGFloat v6 = v1[6];
  CGFloat v7 = v1[7];
  v52.origin.x = v4;
  v52.origin.y = v5;
  v52.size.width = v6;
  v52.size.height = v7;
  CGFloat Height = CGRectGetHeight(v52);
  CGContextTranslateCTM(a1, -v4, Height - v5);
  CGContextScaleCTM(a1, 1.0, -1.0);
  v53.origin.x = v4;
  v53.origin.y = v5;
  v53.size.width = v6;
  v53.size.height = v7;
  double v9 = CGRectGetHeight(v53);
  v50.CGFloat a = v1[9];
  uint64_t v10 = *(void *)&v50.a & 0xFFFFFFFFFFFFFF8;
  CGFloat a = v50.a;
  if (*(void *)&v50.a >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    sub_100055760((uint64_t)&v50);
    uint64_t v12 = *((void *)v2 + 10);
    v51[0] = v12;
    sub_100055734((uint64_t)&v50);
    sub_100055734((uint64_t)v51);
    unint64_t result = (const __CTLine *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = result;
    if (!result) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v11 = *(const __CTLine **)((*(void *)&v50.a & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = *((void *)v2 + 10);
    v51[0] = v12;
    sub_100055734((uint64_t)&v50);
    unint64_t result = (const __CTLine *)sub_100055734((uint64_t)v51);
    uint64_t v14 = (uint64_t)v11;
    if (!v11)
    {
LABEL_30:
      sub_100055760((uint64_t)&v50);
      return (const __CTLine *)swift_bridgeObjectRelease();
    }
  }
  if ((*(void *)&a & 0xC000000000000001) != 0)
  {
    unint64_t result = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v10 + 16))
    {
      __break(1u);
      goto LABEL_36;
    }
    unint64_t result = (const __CTLine *)*(id *)(*(void *)&a + 32);
  }
  long long v15 = result;
  uint64_t v49 = *(void *)(v12 + 16);
  if (!v49)
  {

    goto LABEL_30;
  }
  uint64_t v48 = v14 - 1;
  if (!__OFSUB__(v14, 1))
  {
    uint64_t v41 = v10;
    uint64_t v10 = 0;
    double v47 = *v2;
    long long v16 = (CGFloat *)(v12 + 56);
    uint64_t v46 = (char *)v11 - 1;
    char v17 = 1;
    while (1)
    {
      CGFloat v20 = *(v16 - 3);
      double v19 = *(v16 - 2);
      CGFloat v21 = *(v16 - 1);
      double v22 = *v16;
      double v9 = v9 - *v16 - v19;
      v54.origin.x = v20;
      v54.origin.y = v19;
      v54.size.width = v21;
      v54.size.height = *v16;
      double MinX = CGRectGetMinX(v54);
      double v24 = MinX - v47;
      if (v17)
      {
        long long v25 = (void (*)(CGContext *))*((void *)v2 + 15);
        if (v25)
        {
          CGFloat v26 = v2[12];
          uint64_t v28 = *((uint64_t *)v2 + 13);
          uint64_t v27 = *((uint64_t *)v2 + 14);
          double v43 = v2[11];
          double v29 = MinX - v47;
          if (*((void *)v2 + 23))
          {
            swift_retain();
            v55.origin.x = v20;
            v55.origin.y = v19;
            v55.size.width = v21;
            v55.size.height = v22;
            double v30 = CGRectGetWidth(v55) + *(double *)&v28;
          }
          else
          {
            double v30 = -v43 - *(double *)&v28;
            swift_retain();
          }
          CGFloat v31 = v29 + v30;
          CGContextSaveGState(a1);
          v56.origin.x = v31;
          v56.origin.y = v9 + *(double *)&v27;
          v56.size.width = v43;
          v56.size.height = v26;
          CGFloat tx = CGRectGetMinX(v56);
          v57.origin.x = v31;
          v57.origin.y = v9 + *(double *)&v27;
          v57.size.width = v43;
          v57.size.height = v26;
          double v24 = v29;
          CGFloat MinY = CGRectGetMinY(v57);
          CGContextTranslateCTM(a1, tx, MinY);
          v25(a1);
          CGContextRestoreGState(a1);
          sub_10009AA40(*(uint64_t *)&v43, *(uint64_t *)&v26, v28, v27, (uint64_t)v25);
        }
      }
      if (v48 == v10)
      {
        long long v33 = (void (*)(CGContext *))*((void *)v2 + 21);
        if (v33)
        {
          CGFloat v34 = v2[18];
          uint64_t v36 = *((uint64_t *)v2 + 19);
          uint64_t v35 = *((uint64_t *)v2 + 20);
          double rect = v2[17];
          if (*((void *)v2 + 23) == 1)
          {
            double v37 = -rect - *(double *)&v36;
            swift_retain();
          }
          else
          {
            swift_retain();
            v58.origin.x = v20;
            v58.origin.y = v19;
            v58.size.width = v21;
            v58.size.height = v22;
            double v37 = CGRectGetWidth(v58) + *(double *)&v36;
          }
          CGFloat v38 = v24 + v37;
          CGContextSaveGState(a1);
          v59.origin.x = v38;
          v59.origin.y = v9 + *(double *)&v35;
          v59.size.width = rect;
          v59.size.height = v34;
          CGFloat v39 = CGRectGetMinX(v59);
          v60.origin.x = v38;
          v60.origin.y = v9 + *(double *)&v35;
          v60.size.width = rect;
          v60.size.height = v34;
          CGFloat v40 = CGRectGetMinY(v60);
          CGContextTranslateCTM(a1, v39, v40);
          v33(a1);
          CGContextRestoreGState(a1);
          sub_10009AA40(*(uint64_t *)&rect, *(uint64_t *)&v34, v36, v35, (uint64_t)v33);
        }
      }
      CGContextRef.textPosition.setter();
      CTLineDraw(v15, a1);

      if (v46 == (char *)v10) {
        goto LABEL_30;
      }
      if ((*(void *)&a & 0xC000000000000001) != 0)
      {
        long long v18 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)(v10 + 1) >= *(void *)(v41 + 16))
        {
          __break(1u);
          goto LABEL_32;
        }
        long long v18 = (const __CTLine *)*(id *)(*(void *)&a + 40 + 8 * v10);
      }
      long long v15 = v18;
      char v17 = 0;
      v16 += 4;
      if (v49 == ++v10)
      {

        goto LABEL_30;
      }
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100055734(uint64_t a1)
{
  return a1;
}

uint64_t sub_100055760(uint64_t a1)
{
  return a1;
}

void sub_10005578C(uint64_t a1)
{
  sub_100055794(a1, *(void *)(v1 + 16));
}

void sub_100055794(uint64_t a1, uint64_t a2)
{
  id v3 = [self shared];
  id v6 = [v3 renderImageWithRequest:a2];

  id v4 = [v6 CGImage];
  if (v4)
  {
    double v5 = v4;
    [v6 size];
    CGContextRef.draw(_:in:byTiling:)();
  }
}

uint64_t DOCItemCollectionViewController.title.getter()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  double v2 = *(id *)((char *)v1 + *(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 48));
  if (!v2) {
    goto LABEL_8;
  }
  id v3 = [v2 displayName];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (v4) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v6 == 0xE000000000000000;
  }
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    id v8 = [*v1 displayName];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v4;
}

uint64_t sub_1000562C0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___loadingDisabledAssertions;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___loadingDisabledAssertions))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController____lazy_storage___loadingDisabledAssertions);
  }
  else
  {
    uint64_t v3 = v0;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for DOCAssertionCollection();
    swift_allocObject();
    uint64_t v2 = DOCAssertionCollection.init(debugName:_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

Swift::Bool __swiftcall DOCFullDocumentManagerViewController.establishFirstResponder()()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (char *)[v0 dataSource];
  unint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v6 < 2)
  {
    BOOL v7 = (void *)sub_1000567E0();
    if (v7)
    {
      id v8 = v7;
      LOBYTE(v9) = [v7 establishFirstResponder];

      return (char)v9;
    }
    static Logger.UI.getter();
    long long v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      CGFloat v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGFloat v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "No effective browser view controller available to establish first responder", v20, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_19:
    LOBYTE(v9) = 0;
    return (char)v9;
  }
  if (v6 != 2)
  {
    v22[1] = v6;
    Swift::Bool result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    return result;
  }
  uint64_t v10 = sub_1000567E0();
  double v9 = (void *)v10;
  if (v10)
  {
    uint64_t v11 = (void **)(v10 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess();
    uint64_t v12 = *v11;
    if (*v11)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = (void *)v13;
        id v15 = v12;
        if ([v14 acceptsKeyboardFocus])
        {
          long long v16 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
          if (v16)
          {
            char v17 = v16[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarHasActiveFocus];

            if (v17 & 1) == 0 && ([v9 establishFirstResponder])
            {

              LOBYTE(v9) = 1;
              return (char)v9;
            }
          }
        }
        *((unsigned char *)v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus) = 1;
        [v14 performSelector:"firstItemInsertionRequestsFocusExpired" withObject:0 afterDelay:1.0];
      }
    }

    goto LABEL_19;
  }
  return (char)v9;
}

uint64_t sub_1000567E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v28[-v7];
  double v9 = (char *)[v1 dataSource];
  unint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v10 < 2)
  {
    id v11 = [v1 effectiveBrowserViewController];
    if (v11) {
      return (uint64_t)v11;
    }
    static Logger.UI.getter();
    CGFloat v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      objc_super v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No effective browser view controller available to establish first responder", v23, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
    return 0;
  }
  if (v10 != 2) {
    goto LABEL_29;
  }
  id v13 = [v1 internalNavigationController];
  id v14 = [v13 topViewController];

  if (!v14)
  {
LABEL_20:
    static Logger.UI.getter();
    double v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      CGFloat v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGFloat v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "No column view controller available to establish first responder", v26, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    return 0;
  }
  type metadata accessor for DOCColumnViewController(0);
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {

    goto LABEL_20;
  }
  long long v16 = (uint64_t *)(v15 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  if ((unint64_t)*v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17 >= 1) {
      goto LABEL_9;
    }
LABEL_26:

    return 0;
  }
  uint64_t v17 = *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 < 1) {
    goto LABEL_26;
  }
LABEL_9:
  if (v17 == 1) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = v17 - 2;
  }
  swift_beginAccess();
  uint64_t v19 = *v16;
  if ((*v16 & 0xC000000000000001) != 0)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (v18 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v19 + 8 * v18 + 32);
LABEL_15:
    id v12 = v20;
    swift_endAccess();

    return (uint64_t)v12;
  }
  __break(1u);
LABEL_29:
  unint64_t v29 = v10;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

Swift::Bool __swiftcall DOCBrowserContainerController.establishFirstResponder()()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v1 = (void *)Strong;
  uint64_t v2 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v2)
  {

LABEL_5:
    uint64_t v4 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
    swift_unknownObjectWeakLoadStrong();
    sub_1000CBE70((uint64_t *)&unk_100707700);
    uint64_t v6 = String.init<A>(describing:)();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_100073F48();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return 0;
  }
  unsigned __int8 v3 = [v2 establishFirstResponder:&OBJC_PROTOCOL___DOCFirstResponderEstablishing];

  return v3;
}

void sub_10005704C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

char *sub_100057B24(void *a1, uint64_t a2, unint64_t a3)
{
  id v6 = [a1 identifier];
  int v7 = DOCProviderDomainIDIsLegacyWebDAV();

  if (v7)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for DOCFileProviderSource(0);
LABEL_7:
    id v13 = objc_allocWithZone(v8);
    return sub_100057C30(a1);
  }
  id v9 = [a1 identifier];
  int v10 = DOCProviderDomainIDIsSharedServerDomainID();

  if (v10)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for DOCSharedServerSource();
    goto LABEL_7;
  }
  id v11 = [a1 identifier];
  int v12 = DOCProviderDomainIDIsExternalDevice();

  if (v12)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for DOCExternalDeviceSource();
    goto LABEL_7;
  }
  id v15 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSource(0));
  long long v16 = sub_100057C30(a1);
  sub_100058168(a2, a3);
  return v16;
}

char *sub_100057C30(void *a1)
{
  uint64_t v2 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v42 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = 2;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager] = 0;
  *(_OWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier] = xmmword_1005A1D50;
  unsigned __int8 v3 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  *unsigned __int8 v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName];
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(_OWORD *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName] = xmmword_1005A1D50;
  uint64_t v41 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable] = 0;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  uint64_t v6 = enum case for DOCItemSortMode.name(_:);
  uint64_t v7 = type metadata accessor for DOCItemSortMode();
  uint64_t v8 = *(void *)(v7 - 8);
  id v9 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  uint64_t v10 = v8 + 104;
  v9(v5, v6, v7);
  uint64_t v39 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes;
  sub_1000CBE70(&qword_1007054E0);
  uint64_t v11 = *(void *)(v10 - 32);
  unint64_t v12 = (*(unsigned __int8 *)(v10 - 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 - 24);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10059B7A0;
  unint64_t v14 = v13 + v12;
  v9((char *)v14, v6, v7);
  uint64_t v15 = enum case for DOCItemSortMode.kind(_:);
  v9((char *)(v14 + v11), enum case for DOCItemSortMode.kind(_:), v7);
  v9((char *)(v14 + 2 * v11), enum case for DOCItemSortMode.modificationDate(_:), v7);
  v9((char *)(v14 + 3 * v11), enum case for DOCItemSortMode.size(_:), v7);
  v9((char *)(v14 + 4 * v11), enum case for DOCItemSortMode.tags(_:), v7);
  *(void *)&v1[v39] = v13;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault] = 0;
  v9(&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode], v15, v7);
  *(void *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes] = &off_10068A850;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_errorCount] = 0;
  v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_supportsImportInDefaultSaveLocation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain] = a1;
  long long v16 = v1;
  id v17 = a1;
  id v18 = [v17 providerID];
  uint64_t v19 = &v16[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
  *(void *)uint64_t v19 = v18;
  v19[8] = 0;
  unsigned int v20 = [v17 isEnabled];
  char v21 = 0;
  if (v20) {
    char v21 = [v17 isHidden] ^ 1;
  }
  v1[v42] = v21;
  v1[v41] = [v17 canDisconnect:v39];

  v43.receiver = v16;
  v43.super_class = (Class)type metadata accessor for DOCFileProviderSource(0);
  os_log_type_t v22 = (char *)[v43 init];
  id v23 = [v17 topLevelBundleIdentifier];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  uint64_t v27 = (uint64_t *)&v22[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier];
  uint64_t v28 = *(void *)&v22[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier];
  uint64_t v29 = *(void *)&v22[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier
                      + 8];
  *uint64_t v27 = v24;
  v27[1] = v26;
  sub_100058154(v28, v29);
  double v30 = v22;
  id v31 = [v17 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v30 setIdentifier:v32];

  id v33 = [v17 supportedFileTypes];
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = static UTType.doc_contentTypes(forIdentifiers:)();
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v34 + 16);
  uint64_t v36 = v30;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    sub_1000CBE70((uint64_t *)&unk_10070C030);
    type metadata accessor for UTType();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
    static UTType.content.getter();
    static UTType.item.getter();
  }
  type metadata accessor for UTType();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 setDocumentContentTypes:isa];

  return v36;
}

uint64_t sub_100058154(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100058168(uint64_t a1, unint64_t a2)
{
  unsigned __int8 v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v54 - v10;
  unint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v12)
  {
    CGRect v59 = v9;
    uint64_t v60 = v8;
    id v13 = v12;
    unsigned __int8 v64 = [v13 isHidden];
    id v14 = [self protectedApps];
    unsigned int v15 = [v14 isEnabled];

    if (v15 && [v13 isHidden])
    {
      uint64_t v58 = a1;
      static Logger.UI.getter();
      long long v16 = v3;
      swift_bridgeObjectRetain_n();
      os_log_t v17 = v16;
      id v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.debug.getter();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = swift_slowAlloc();
        int v56 = v20;
        uint64_t v22 = v21;
        os_log_t v57 = (os_log_t)swift_slowAlloc();
        v62[0] = (uint64_t)v57;
        *(_DWORD *)uint64_t v22 = 136315906;
        os_log_t v55 = v18;
        v63[0] = sub_10009B0E4(0xD000000000000021, 0x80000001005E8DC0, v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v22 + 12) = 2080;
        v63[0] = (uint64_t)v12;
        v54[0] = v13;
        sub_1000CBE70(&qword_10070BDE8);
        uint64_t v23 = String.init<A>(describing:)();
        v63[0] = sub_10009B0E4(v23, v24, v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 22) = 2080;
        v54[1] = (id)(v22 + 24);
        id v25 = [v54[0] topLevelBundleIdentifier];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        v63[0] = v26;
        v63[1] = v28;
        sub_1000CBE70((uint64_t *)&unk_10070BD50);
        uint64_t v29 = String.init<A>(describing:)();
        v63[0] = sub_10009B0E4(v29, v30, v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 32) = 2080;
        swift_bridgeObjectRetain();
        v63[0] = sub_10009B0E4(v58, a2, v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        os_log_t v17 = v55;
        _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v56, "[PROTECTED APPS] %s providerDomain: %s topLevelBundleIdentifier: %s hostIdentifier: %s", (uint8_t *)v22, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }

      id v31 = *(void (**)(char *, uint64_t))(v60 + 8);
      v31(v11, v6);
      if ([v13 owningApplicationIsHidden])
      {
        id v32 = [v13 topLevelBundleIdentifier];
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        if (v33 == v58 && v35 == a2)
        {
          swift_bridgeObjectRelease();
          char v36 = 0;
        }
        else
        {
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v36 = v37 ^ 1;
        }
      }
      else
      {
        char v36 = 1;
      }
      if ([v13 owningApplicationIsHidden]
        && (v36 & 1) == 0
        && ([v13 isHiddenByProvider] & 1) == 0
        && ([v13 isHiddenByUser] & 1) == 0)
      {
        unsigned __int8 v64 = 0;
        CGFloat v38 = v59;
        static Logger.UI.getter();
        id v39 = v13;
        CGFloat v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.debug.getter();
        int v42 = v41;
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v43 = swift_slowAlloc();
          os_log_t v57 = v40;
          uint64_t v44 = v43;
          uint64_t v58 = swift_slowAlloc();
          v63[0] = v58;
          *(_DWORD *)uint64_t v44 = 136315650;
          int v56 = v42;
          v62[0] = sub_10009B0E4(0xD000000000000021, 0x80000001005E8DC0, v63);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v44 + 12) = 2080;
          os_log_t v55 = (os_log_t)(v44 + 14);
          id v45 = v39;
          id v46 = [v45 description];
          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v49 = v48;

          v62[0] = sub_10009B0E4(v47, v49, v63);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v44 + 22) = 1024;
          swift_beginAccess();
          int v61 = v64;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          os_log_t v50 = v57;
          _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v56, "[PROTECTED APPS] %s providerDomain: %s shouldHide: %{BOOL}d", (uint8_t *)v44, 0x1Cu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v51 = v59;
        }
        else
        {

          uint64_t v51 = v38;
        }
        v31(v51, v6);
      }
    }
    unsigned int v52 = [v13 isEnabled];

    if (v52)
    {
      swift_beginAccess();
      char v53 = v64 ^ 1;
    }
    else
    {
      char v53 = 0;
    }
    v3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = v53 & 1;
  }
}

void sub_100058908()
{
  uint64_t v0 = type metadata accessor for DOCItemSortMode();
  uint64_t v1 = *(void **)(v0 - 8);
  __chkstk_darwin(v0);
  unsigned __int8 v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)DOCSpotlightEnumeratedItemIdentifierActivities;
  uint64_t v5 = (void *)DOCDocumentSourceIdentifierActivities;
  Class v55 = (Class)type metadata accessor for DOCFileProviderSource(0);
  id v6 = objc_allocWithZone(v55);
  uint64_t v7 = sub_100058EFC(v4, v5);
  uint64_t v8 = enum case for DOCItemSortMode.lastUsedDate(_:);
  id v9 = (void (*)(void))v1[13];
  int v56 = v3;
  ((void (*)(char *, void, uint64_t))v9)(v3, enum case for DOCItemSortMode.lastUsedDate(_:), v0);
  uint64_t v10 = &v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  swift_beginAccess();
  uint64_t v11 = (void (*)(char *, char *, uint64_t))v1[5];
  v1 += 5;
  CGRect v59 = v11;
  v11(v10, v3, v0);
  swift_endAccess();
  uint64_t v12 = sub_1000CBE70(&qword_1007054E0);
  uint64_t v13 = v1[4];
  uint64_t v14 = *((unsigned __int8 *)v1 + 40);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v60 = 2 * v13;
  uint64_t v57 = v14 | 7;
  uint64_t v58 = v12;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10059B760;
  unsigned int v54 = enum case for DOCItemSortMode.name(_:);
  v9(v16 + v15);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v16 + v15 + v13, v8, v0);
  *(void *)&v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = v16;
  swift_bridgeObjectRelease();
  id v53 = v7;
  v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 1;
  os_log_t v17 = (void *)DOCSpotlightEnumeratedItemIdentifierFavoriteFolders;
  id v18 = (void *)DOCDocumentSourceIdentifierFavoriteFolders;
  id v19 = objc_allocWithZone(v55);
  Class v55 = (Class)sub_100058EFC(v17, v18);
  int v20 = (void *)DOCSpotlightEnumeratedItemIdentifierTrashedItems;
  uint64_t v21 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  uint64_t v22 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCTrashedItemsSource(0))
      + OBJC_IVAR____TtC5Files21DOCTrashedItemsSource____lazy_storage____displayName;
  void *v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (char *)sub_100058EFC(v20, v21);
  unint64_t v24 = v56;
  uint64_t v25 = v54;
  ((void (*)(char *, void, uint64_t))v9)(v56, v54, v0);
  uint64_t v26 = &v23[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  swift_beginAccess();
  v59(v26, v24, v0);
  swift_endAccess();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10059B7A0;
  uint64_t v28 = v27 + v15;
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v28, v25, v0);
  ((void (*)(uint64_t, void, uint64_t))v9)(v28 + v13, enum case for DOCItemSortMode.kind(_:), v0);
  uint64_t v29 = v60;
  ((void (*)(uint64_t, void, uint64_t))v9)(v28 + v60, enum case for DOCItemSortMode.modificationDate(_:), v0);
  ((void (*)(uint64_t, void, uint64_t))v9)(v28 + v29 + v13, enum case for DOCItemSortMode.size(_:), v0);
  ((void (*)(uint64_t, void, uint64_t))v9)(v28 + 4 * v13, enum case for DOCItemSortMode.tags(_:), v0);
  *(void *)&v23[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes] = v27;
  swift_bridgeObjectRelease();
  unint64_t v30 = self;
  id v31 = v23;
  id v32 = [v30 trashedItemsLocation];
  id v33 = [v32 promptText];

  if (v33)
  {
    [v31 setPromptText:v33];

    uint64_t v34 = (void (**)(void *, uint64_t, void *))&v31[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
    uint64_t v35 = *(void *)&v31[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
    *uint64_t v34 = sub_100315030;
    v34[1] = 0;
    sub_1000A7258(v35);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1005A0220;
    if (qword_1007050A8 != -1) {
      swift_once();
    }
    char v37 = (void *)static DOCFileProviderSource.searchSource;
    *(void *)(v36 + 32) = static DOCFileProviderSource.searchSource;
    uint64_t v38 = qword_100705090;
    id v39 = v37;
    if (v38 != -1) {
      swift_once();
    }
    CGFloat v40 = (void *)qword_100737340;
    os_log_type_t v41 = v53;
    *(void *)(v36 + 40) = qword_100737340;
    *(void *)(v36 + 48) = v41;
    uint64_t v42 = qword_1007050A0;
    id v43 = v40;
    id v44 = v41;
    if (v42 != -1) {
      swift_once();
    }
    id v45 = (void *)qword_100737350;
    Class v46 = v55;
    *(void *)(v36 + 56) = qword_100737350;
    *(void *)(v36 + 64) = v46;
    uint64_t v47 = qword_100705098;
    id v48 = v45;
    unint64_t v49 = v46;
    if (v47 != -1) {
      swift_once();
    }
    os_log_t v50 = (void *)qword_100737348;
    *(void *)(v36 + 72) = qword_100737348;
    *(void *)(v36 + 80) = v31;
    uint64_t v61 = v36;
    specialized Array._endMutation()();
    id v51 = v50;
  }
  else
  {
    __break(1u);
  }
}

id sub_100058EFC(void *a1, void *a2)
{
  unsigned __int8 v3 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction];
  *unsigned __int8 v3 = 0;
  v3[1] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isProviderDomainEnabled] = 2;
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager] = 0;
  *(_OWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___containingApplicationIdentifier] = xmmword_1005A1D50;
  uint64_t v4 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(_OWORD *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____domainName] = xmmword_1005A1D50;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_isEjectable] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties] = 0;
  id v6 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting];
  uint64_t v7 = enum case for DOCItemSortMode.name(_:);
  uint64_t v8 = type metadata accessor for DOCItemSortMode();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  uint64_t v11 = v9 + 104;
  v10(v6, v7, v8);
  uint64_t v23 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes;
  sub_1000CBE70(&qword_1007054E0);
  uint64_t v12 = *(void *)(v11 - 32);
  unint64_t v13 = (*(unsigned __int8 *)(v11 - 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 - 24);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10059B7A0;
  unint64_t v15 = v14 + v13;
  v10((char *)v15, v7, v8);
  uint64_t v16 = enum case for DOCItemSortMode.kind(_:);
  v10((char *)(v15 + v12), enum case for DOCItemSortMode.kind(_:), v8);
  v10((char *)(v15 + 2 * v12), enum case for DOCItemSortMode.modificationDate(_:), v8);
  v10((char *)(v15 + 3 * v12), enum case for DOCItemSortMode.size(_:), v8);
  v10((char *)(v15 + 4 * v12), enum case for DOCItemSortMode.tags(_:), v8);
  *(void *)&v2[v23] = v14;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault] = 0;
  v10(&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode], v16, v8);
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes] = &off_10068A3F0;
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_errorCount] = 0;
  v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_supportsImportInDefaultSaveLocation] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain] = 0;
  os_log_t v17 = &v2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
  *(void *)os_log_t v17 = a1;
  v17[8] = 1;
  v26.receiver = v2;
  v26.super_class = (Class)type metadata accessor for DOCFileProviderSource(0);
  id v18 = a1;
  id v19 = [super init];
  [v19 setIdentifier:a2];
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  id v20 = v19;
  static UTType.content.getter();
  static UTType.item.getter();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 setDocumentContentTypes:isa];

  return v20;
}

uint64_t type metadata accessor for DOCTrashedItemsSource(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_100710AF0);
}

uint64_t sub_100059344(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (char *)result;
    uint64_t v5 = (void *)static DOCLog.Source.getter();
    static os_log_type_t.info.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10059B760;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v61 = v7;
    uint64_t aBlock = (void *)dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v56 = v8;
    v9._Swift::Int countAndFlagsBits = 0x61746F74206E6920;
    v9._unint64_t object = (void *)0xE90000000000006CLL;
    String.append(_:)(v9);
    uint64_t v10 = aBlock;
    uint64_t v11 = v56;
    *(void *)(v6 + 56) = &type metadata for String;
    unint64_t v12 = sub_100073F48();
    *(void *)(v6 + 64) = v12;
    *(void *)(v6 + 32) = v10;
    *(void *)(v6 + 40) = v11;
    unint64_t v13 = _swiftEmptyArrayStorage;
    unsigned int v54 = v4;
    if (v7)
    {
      uint64_t aBlock = _swiftEmptyArrayStorage;
      uint64_t result = sub_100059E2C(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0)
      {
        __break(1u);
        goto LABEL_33;
      }
      unint64_t v49 = v5;
      unint64_t v50 = v12;
      uint64_t v14 = 0;
      unint64_t v13 = aBlock;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(a2 + 8 * v14 + 32);
        }
        uint64_t v16 = v15;
        id v17 = [v15 providerName];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        uint64_t aBlock = v13;
        unint64_t v22 = v13[2];
        unint64_t v21 = v13[3];
        if (v22 >= v21 >> 1)
        {
          sub_100059E2C(v21 > 1, v22 + 1, 1);
          unint64_t v13 = aBlock;
        }
        ++v14;
        _OWORD v13[2] = v22 + 1;
        uint64_t v23 = &v13[2 * v22];
        v23[4] = v18;
        v23[5] = v20;
      }
      while (v7 != v14);
      uint64_t v4 = v54;
      unint64_t v12 = v50;
      uint64_t v5 = v49;
    }
    uint64_t v52 = sub_1000CBE70(&qword_10070AEB0);
    *(void *)(v6 + 96) = v52;
    unint64_t v51 = sub_1000D325C();
    *(void *)(v6 + 104) = v51;
    *(void *)(v6 + 72) = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v24 = [*(id *)&v4[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_configuration] hiddenSourcesIdentifiers];
    uint64_t v25 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v25[2])
    {
      unint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1000485D8(v26, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = (unint64_t)v27;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
    }
    uint64_t v28 = (void *)static DOCLog.Source.getter();
    static os_log_type_t.info.getter();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10059B760;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v61 = v30;
    uint64_t aBlock = (void *)dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v56 = v31;
    v32._Swift::Int countAndFlagsBits = 0x61746F74206E6920;
    v32._unint64_t object = (void *)0xE90000000000006CLL;
    String.append(_:)(v32);
    id v33 = aBlock;
    uint64_t v34 = v56;
    *(void *)(v29 + 56) = &type metadata for String;
    *(void *)(v29 + 64) = v12;
    *(void *)(v29 + 32) = v33;
    *(void *)(v29 + 40) = v34;
    id v53 = (void *)v29;
    uint64_t v35 = _swiftEmptyArrayStorage;
    if (!v30)
    {
LABEL_28:
      v53[12] = v52;
      v53[13] = v51;
      v53[9] = v35;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v54;
      *(void *)(v46 + 24) = a2;
      *(unsigned char *)(v46 + 32) = 1;
      CGRect v59 = sub_1000D74F0;
      uint64_t v60 = v46;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v56 = 1107296256;
      uint64_t v57 = sub_1000666D8;
      uint64_t v58 = &unk_1006AB580;
      uint64_t v47 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      id v48 = v54;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v47);

      return swift_bridgeObjectRelease();
    }
    uint64_t aBlock = _swiftEmptyArrayStorage;
    uint64_t result = sub_100059E2C(0, v30 & ~(v30 >> 63), 0);
    if ((v30 & 0x8000000000000000) == 0)
    {
      uint64_t v36 = 0;
      uint64_t v35 = aBlock;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v37 = *(id *)(a2 + 8 * v36 + 32);
        }
        uint64_t v38 = v37;
        id v39 = [v37 providerName];
        uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v42 = v41;

        uint64_t aBlock = v35;
        unint64_t v44 = v35[2];
        unint64_t v43 = v35[3];
        if (v44 >= v43 >> 1)
        {
          sub_100059E2C(v43 > 1, v44 + 1, 1);
          uint64_t v35 = aBlock;
        }
        ++v36;
        v35[2] = v44 + 1;
        id v45 = &v35[2 * v44];
        v45[4] = v40;
        v45[5] = v42;
      }
      while (v30 != v36);
      goto LABEL_28;
    }
LABEL_33:
    __break(1u);
  }
  return result;
}

id sub_100059908(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t _s5Files21DOCFileProviderSourceC11displayNameSSvg_0()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName];
  if (*(void *)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____displayName + 8])
  {
    uint64_t v2 = *v1;
  }
  else
  {
    uint64_t v2 = sub_100059ACC(v0);
    *uint64_t v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s5Files21DOCFileProviderSourceC12providerNameSSvg_0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage____providerName + 8))
  {
    uint64_t v2 = *v1;
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v3)
    {
      id v4 = v3;
      id v5 = (id)DOCLocalizedProviderOnlyDisplayName();
      uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v7 = v6;
    }
    else
    {
      uint64_t v2 = 0;
      unint64_t v7 = 0xE000000000000000;
    }
    *uint64_t v1 = v2;
    v1[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100059ACC(char *a1)
{
  uint64_t v1 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (!v1)
  {
    id v5 = [a1 identifier];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;
        if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {
            uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v20 = v19;
            if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v25 & 1) == 0)
              {
                uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v28 = v27;
                if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
                {

                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v30 & 1) == 0) {
                    return 0;
                  }
                }
                id v22 = [self searchLocation];
                id v23 = [v22 displayName];
LABEL_18:
                id v3 = v23;

                if (v3)
                {
                  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  goto LABEL_20;
                }
                return 0;
              }
            }

            id v22 = [self trashedItemsLocation];
            id v23 = [v22 displayName];
            goto LABEL_18;
          }
        }

        id v22 = [self sharedItemsLocation];
        id v23 = [v22 displayName];
        goto LABEL_18;
      }
    }

    id v22 = [self recentDocumentsLocation];
    id v23 = [v22 displayName];
    goto LABEL_18;
  }
  id v2 = v1;
  id v3 = (id)DOCLocalizedDisplayName();
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_20:
  return v4;
}

uint64_t sub_100059E2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100059E4C(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_100059E4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100707EF0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100059FB8()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files24DOCSharedDocumentsSource____lazy_storage____displayName);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSharedDocumentsSource____lazy_storage____displayName + 8))
  {
    uint64_t countAndFlagsBits = *v1;
LABEL_5:
    swift_bridgeObjectRetain();
    return (id)countAndFlagsBits;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v4 = result;
    v9._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    v9._unint64_t object = (void *)0x80000001005E8C70;
    v5._unint64_t object = (void *)0x80000001005E8C50;
    v5._uint64_t countAndFlagsBits = 0xD000000000000010;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._unint64_t object = (void *)0xEB00000000656C62;
    v7._uint64_t countAndFlagsBits = 0x646572616853;
    v7._unint64_t object = (void *)0xE600000000000000;
    Swift::String v8 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v9);
    uint64_t countAndFlagsBits = v8._countAndFlagsBits;

    *(Swift::String *)uint64_t v1 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_10005A144()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files21DOCTrashedItemsSource____lazy_storage____displayName);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files21DOCTrashedItemsSource____lazy_storage____displayName + 8))
  {
    uint64_t countAndFlagsBits = *v1;
LABEL_5:
    swift_bridgeObjectRetain();
    return (id)countAndFlagsBits;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v4 = result;
    v5._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v9._uint64_t countAndFlagsBits = 0xD000000000000037;
    v9._unint64_t object = (void *)0x80000001005E8CE0;
    v5._unint64_t object = (void *)0x80000001005E8CA0;
    v6._unint64_t object = (void *)0x80000001005E8CC0;
    v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._unint64_t object = (void *)0xEB00000000656C62;
    v6._uint64_t countAndFlagsBits = 0xD000000000000010;
    Swift::String v8 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v7, (NSBundle)v4, v6, v9);
    uint64_t countAndFlagsBits = v8._countAndFlagsBits;

    *(Swift::String *)uint64_t v1 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10005AF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_10005AFB0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration);
  }
  else
  {
    id v4 = [self configurationForImportingDocumentContentTypes:0 mode:1];
    [v4 setInProcess:1];
    [v4 setNeverCreateBookmarkForOpenInPlace:1];
    [v4 setUseSharedQuickLook:1];
    [v4 setPickingItemsShouldBumpLastOpenDate:0];
    [v4 setShouldOpenInApp:1];
    [v4 setSupportsRemovableFileProviders:1];
    Swift::String v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t _s5Files13DOCTabBarItemC4item3tabACSo0B0V_tFZ_0(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a1 == 2 || a1 == 1)
    {
      type metadata accessor for DOCTabBarItem();
      id v2 = self;
      NSString v3 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v4 = [v2 __systemImageNamedSwift:v3];

      Swift::String v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTitle:0 image:v4 tag:a1];
LABEL_7:
      id v6 = (uint64_t *)&v5[OBJC_IVAR____TtC5Files13DOCTabBarItem_tab];
      swift_beginAccess();
      *id v6 = a1;
      Swift::String v7 = v5;
      sub_10005B338(a1);
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v7 _setInternalTitle:v8];

      [v7 setSpringLoaded:1];
      return (uint64_t)v7;
    }
    if (!a1)
    {
      type metadata accessor for DOCTabBarItem();
      Swift::String v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTabBarSystemItem:4 tag:0];
      goto LABEL_7;
    }
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCTabBarItem()
{
  return self;
}

uint64_t sub_10005B338(uint64_t a1)
{
  switch(a1)
  {
    case 2:
      int64_t v11 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v11)
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      id v2 = v11;
      unint64_t v10 = 0xD00000000000007BLL;
      unint64_t v15 = 0x80000001005E2120;
      uint64_t v3 = 0x6573776F7242;
      unint64_t v4 = 0xE600000000000000;
LABEL_10:
      uint64_t v5 = 0x617A696C61636F4CLL;
      unint64_t v6 = 0xEB00000000656C62;
      v7.super.Class isa = v2;
      uint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      goto LABEL_11;
    case 1:
      uint64_t v1 = (objc_class *)(id)_DocumentManagerBundle();
      if (v1)
      {
        id v2 = v1;
        unint64_t v15 = 0x80000001005E21A0;
        uint64_t v3 = 0x646572616853;
        unint64_t v4 = 0xE600000000000000;
        uint64_t v5 = 0x617A696C61636F4CLL;
        unint64_t v6 = 0xEB00000000656C62;
        v7.super.Class isa = v2;
        uint64_t v8 = 0;
        unint64_t v9 = 0xE000000000000000;
        unint64_t v10 = 0xD000000000000017;
LABEL_11:
        uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)&v10)._countAndFlagsBits;

        return countAndFlagsBits;
      }
      __break(1u);
      goto LABEL_13;
    case 0:
      uint64_t v12 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v12)
      {
LABEL_14:
        __break(1u);
        break;
      }
      id v2 = v12;
      unint64_t v10 = 0xD000000000000018;
      unint64_t v15 = 0x80000001005E21C0;
      uint64_t v3 = 0x73746E65636552;
      unint64_t v4 = 0xE700000000000000;
      goto LABEL_10;
  }
  type metadata accessor for DOCTab(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_10005B5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID);
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = v3[1];
  uint64_t v5 = (void *)(*(void *)(v2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource)
                + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID);
  *uint64_t v5 = *v3;
  v5[1] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

void sub_10005BC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005BCFC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (v7)
  {
    uint64_t v8 = v7;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    id v9 = a1;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
      int64_t v11 = (char *)[v2 dataSource];
      id v12 = *(id *)&v11[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

      id v13 = [self browseStartingPointsLocation];
      id v14 = [objc_allocWithZone((Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource()) init];
      unint64_t v15 = &v6[v4[9]];
      *(_OWORD *)unint64_t v15 = 0u;
      *((_OWORD *)v15 + 1) = 0u;
      UUID.init()();
      *(void *)&v6[v4[5]] = v13;
      *(void *)&v6[v4[6]] = _swiftEmptyArrayStorage;
      *(void *)&v6[v4[7]] = 0;
      *(void *)&v6[v4[8]] = v14;
      sub_1000BC328((uint64_t)v6);

      sub_10008BB90((uint64_t)v6, type metadata accessor for DOCBrowserHistoryItem);
    }
  }
  sub_10005BEB8();
}

void sub_10005BEB8()
{
  uint64_t v1 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(v0, "doc_hasAppeared")) {
    return;
  }
  id v5 = [v0 internalNavigationController];
  type metadata accessor for DOCFullDocumentManagerNavigationController();
  id v6 = [(id)swift_dynamicCastClassUnconditional() viewControllers];

  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v23 = v2;
  uint64_t v24 = v1;
  uint64_t v9 = 4;
  while (1)
  {
    uint64_t v2 = v9 - 4;
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * v9);
    }
    int64_t v11 = v10;
    uint64_t v1 = v9 - 3;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    unsigned int v12 = [v10 doc_isPlaceholder];

    if (!v12) {
      break;
    }
    ++v9;
    if (v1 == v8) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease_n();
  byte_100708490 = 0;
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v14 = v24;
  uint64_t v15 = sub_10009D098(v24, (uint64_t)qword_100708498);
  uint64_t v16 = v23;
  char v17 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v17(v4, v15, v14);
  uint64_t v22 = v13;
  uint64_t v18 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v16 + 8);
  v19(v4, v14);
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  id v20 = v25;
  if (v25)
  {
    [v25 removeFromSuperview];
  }
  v17(v4, v15, v14);
  uint64_t v21 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  v19(v4, v14);
  swift_getKeyPath();
  id v25 = 0;
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
}

uint64_t sub_10005C224(void *a1)
{
  uint64_t v2 = v1;
  v39[1] = swift_getObjectType();
  uint64_t v4 = sub_1000CBE70(&qword_100708758);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v7 = *(void *)(v39[0] - 8);
  __chkstk_darwin(v39[0]);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)type metadata accessor for DOCActionManager()) init];
  [v2 setActionManager:v10];

  int64_t v11 = (char *)[v2 actionManager];
  id v12 = [v2 configuration];
  id v13 = [v12 forbiddenActionIdentifiers];

  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)&v11[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = v14;

  swift_bridgeObjectRelease();
  uint64_t v15 = (char *)[v2 actionManager];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005A04F0;
  *(void *)(v16 + 32) = [a1 sourcesActionManager];
  aBlock[0] = v16;
  specialized Array._endMutation()();
  *(void *)&v15[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = aBlock[0];

  swift_bridgeObjectRelease();
  [v2 setSourceObserver:a1];
  id v17 = sub_10005F8CC();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v17;
  aBlock[4] = sub_1000718F4;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000704F8;
  void aBlock[3] = &unk_1006935E8;
  id v20 = _Block_copy(aBlock);
  id v21 = v17;
  swift_release();
  [a1 retrieveAllSourcesCompletionBlock:v20];
  _Block_release(v20);
  id v22 = [v2 configuration];
  id v23 = [v22 defaultLocation];

  id v24 = [self recentDocumentsLocation];
  id v25 = v24;
  if (!v23)
  {
    uint64_t v28 = v39[0];
    if (!v24) {
      goto LABEL_6;
    }
LABEL_9:

    goto LABEL_10;
  }
  if (!v24)
  {
    id v25 = v23;
    uint64_t v28 = v39[0];
    goto LABEL_9;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  id v26 = v23;
  char v27 = static NSObject.== infix(_:_:)();

  uint64_t v28 = v39[0];
  if ((v27 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_6:
  if (!DOCUsePhoneIdiomForTraits())
  {
LABEL_10:
    uint64_t v33 = sub_10005CC10(0);
    uint64_t v34 = (char *)[v2 displayModeHandler];
    uint64_t v35 = &v34[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
    *(void *)uint64_t v35 = v33;
    v35[8] = 0;

    DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(v33, 0, 0);
    goto LABEL_11;
  }
  uint64_t v29 = (id *)DOCDocumentSourceIdentifierRecentDocuments;
  uint64_t v30 = sub_10005CC10(DOCDocumentSourceIdentifierRecentDocuments);
  uint64_t v31 = (char *)[v2 displayModeHandler];
  Swift::String v32 = &v31[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
  *(void *)Swift::String v32 = v30;
  v32[8] = 0;

  DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(v30, 0, v29);
LABEL_11:
  sub_10005C828((uint64_t)v9);
  sub_10005CF00((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v28);
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1005A0030;
  *(void *)(v36 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v36 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = type metadata accessor for DOCTraitChangeObservingOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v6, 1, 1, v37);
  UIViewController.registerForUIPDocumentLandingTraitChanges<A>(options:_:)();

  swift_unknownObjectRelease();
  return sub_1000CBBA4((uint64_t)v6, &qword_100708758);
}

uint64_t sub_10005C828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  id v12 = &v22[-v11];
  sub_10009E6C4(0, (unint64_t *)&unk_1007086B0);
  id v13 = [v1 configuration];
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v12, enum case for DOCItemGroupingBehavior.none(_:), v6);
  static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)();

  id v26 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v26(v12, v6);
  static Logger.UI.getter();
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  v14(v10, a1, v6);
  uint64_t v28 = v5;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v30 = v24;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v25 = v3;
    uint64_t v29 = sub_10009B0E4(0xD000000000000027, 0x80000001005D7750, &v30);
    int v23 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    v14(v12, (uint64_t)v10, v6);
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v29 = sub_10009B0E4(v19, v20, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v26(v10, v6);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v23, "%s %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v28, v27);
  }
  else
  {
    v26(v10, v6);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v28, v27);
  }
}

uint64_t sub_10005CC10(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v2 configuration];
  uint64_t v9 = sub_10005FA50((uint64_t)v8, a1, 0);

  static Logger.StateStore.getter();
  id v10 = a1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v4;
    uint64_t v14 = v13;
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v22 = v9;
    uint64_t v23 = sub_10009B0E4(0xD000000000000022, 0x80000001005D7780, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v23 = (uint64_t)a1;
    id v15 = v10;
    sub_1000CBE70((uint64_t *)&unk_100711B40);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v23 = sub_10009B0E4(v16, v17, &v24);
    uint64_t v9 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v23 = v9;
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v23 = sub_10009B0E4(v18, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s for source: %s result: %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

uint64_t sub_10005CF00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v79 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  id v78 = (char *)&v69 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v69 - v9;
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v69 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  unint64_t v73 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v80 = a1;
  v16(v12, a1, v2);
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  unint64_t v77 = v10;
  uint64_t v76 = v3 + 16;
  Swift::String v81 = (void (*)(char *, char *, uint64_t))v16;
  uint64_t v71 = v3;
  uint64_t v70 = v2;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v72 = (void (**)(char *, char *, uint64_t))v13;
    uint64_t v13 = v20;
    uint64_t v69 = swift_slowAlloc();
    v85[0] = v69;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v84 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005D7600, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    v81(v10, v12, v2);
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v84 = sub_10009B0E4(v21, v22, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void (**)(char *, uint64_t))(v71 + 8);
    v75(v12, v2);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, void (**)(char *, char *, uint64_t)))(v73 + 8))(v15, v72);
  }
  else
  {
    uint64_t v75 = *(void (**)(char *, uint64_t))(v3 + 8);
    v75(v12, v2);

    (*(void (**)(char *, uint64_t))(v73 + 8))(v15, v13);
  }
  uint64_t v23 = (SEL *)&unk_1006E3000;
  uint64_t v24 = (char *)[v74 dataSource];
  uint64_t v25 = (unint64_t *)&v24[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v26 = *v25;
  swift_bridgeObjectRetain();

  unint64_t v83 = (unint64_t)_swiftEmptyArrayStorage;
  if (v26 >> 62) {
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (!v27)
  {
    swift_bridgeObjectRelease();
    unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease();
    if (v35 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      if (!v36)
      {
LABEL_41:
        swift_bridgeObjectRelease_n();
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v36) {
        goto LABEL_41;
      }
    }
    unint64_t v27 = (unint64_t)v23;
    uint64_t v37 = 4;
    while (1)
    {
      uint64_t v38 = (v35 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v35 + 8 * v37);
      uint64_t v13 = (uint64_t)v38;
      uint64_t v23 = (SEL *)(v37 - 3);
      if (__OFADD__(v37 - 4, 1)) {
        break;
      }
      unint64_t v26 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
      if (*(void *)&v38[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]) {
        goto LABEL_35;
      }

      ++v37;
      if (v23 == (SEL *)v36)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v23 = (SEL *)v27;
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    unint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  }
  while (1)
  {
    if (__OFSUB__(v27--, 1))
    {
      __break(1u);
LABEL_22:
      swift_bridgeObjectRelease();
      unint64_t v35 = v83;
      goto LABEL_23;
    }
    if ((v26 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t v29 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_15:
    uint64_t v30 = v29;
    uint64_t v31 = (void **)&v29[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    Swift::String v32 = *v31;
    if (v32 && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v33 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v13 = v33;
      id v34 = v32;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (!v27) {
        goto LABEL_22;
      }
    }
    else
    {

      if (!v27) {
        goto LABEL_22;
      }
    }
  }
  if ((v27 & 0x8000000000000000) == 0)
  {
    if (v27 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_34;
    }
    uint64_t v29 = (char *)*(id *)(v26 + 32 + 8 * v27);
    goto LABEL_15;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  swift_bridgeObjectRelease_n();
  uint64_t v39 = *(void *)(v13 + v26);
  swift_retain();

  uint64_t v23 = (SEL *)v27;
  if (v39)
  {
    sub_100425850();
    swift_release();
  }
LABEL_42:
  uint64_t v40 = (char *)[v74 v23[226]];
  uint64_t v41 = &v40[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v42 = *(void *)v41;
  swift_bridgeObjectRetain();

  unint64_t v82 = (unint64_t)_swiftEmptyArrayStorage;
  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v43 = result;
    if (!result) {
      goto LABEL_58;
    }
LABEL_44:
    if (v43 >= 1)
    {
      for (uint64_t i = 0; i != v43; ++i)
      {
        if ((v42 & 0xC000000000000001) != 0) {
          uint64_t v46 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v46 = (char *)*(id *)(v42 + 8 * i + 32);
        }
        uint64_t v47 = v46;
        id v48 = (void **)&v46[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        unint64_t v49 = *v48;
        if (v49 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
        {
          id v50 = v49;

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v51 = (void *)v82;
      goto LABEL_59;
    }
    __break(1u);
LABEL_73:
    __break(1u);
  }
  else
  {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v43) {
      goto LABEL_44;
    }
LABEL_58:
    swift_bridgeObjectRelease();
    unint64_t v51 = _swiftEmptyArrayStorage;
LABEL_59:
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_10005D9D8();
    unint64_t v82 = (unint64_t)v51;
    sub_1000601A8((unint64_t)v52, (unint64_t *)type metadata accessor for DOCItemCollectionViewController, &qword_1007086C8, &qword_1007086C0, (uint64_t *)sub_10010A510);
    unint64_t v53 = v82;
    uint64_t v54 = v71;
    if (v82 >> 62) {
      goto LABEL_70;
    }
    Class v55 = *(void **)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v56 = v70;
    id v74 = v55;
    if (v55)
    {
      do
      {
        unint64_t v73 = v53 & 0xC000000000000001;
        uint64_t v72 = (void (**)(char *, char *, uint64_t))(v54 + 32);
        uint64_t v57 = (void (**)(char *, char *, uint64_t))(v54 + 40);
        uint64_t v71 = v54 + 8;
        uint64_t v54 = 4;
        uint64_t v58 = v78;
        CGRect v59 = (void (*)(char *, uint64_t, uint64_t))v81;
        while (1)
        {
          uint64_t v60 = v73
              ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : (char *)*(id *)(v53 + 8 * v54);
          uint64_t v61 = v60;
          id v62 = (id)(v54 - 3);
          if (__OFADD__(v54 - 4, 1)) {
            break;
          }
          v59(v58, v80, v56);
          unint64_t v63 = v77;
          v59(v77, (uint64_t)v58, v56);
          unsigned __int8 v64 = v79;
          (*v72)(v79, v63, v56);
          Swift::String v65 = &v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
          swift_beginAccess();
          (*v57)(v65, v64, v56);
          swift_endAccess();
          uint64_t result = sub_100080930(0);
          if (!*(void *)&v61[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection]) {
            goto LABEL_73;
          }
          unint64_t v66 = sub_10007CC5C(result);
          DOCItemCollectionViewController.items.setter(v66);
          swift_beginAccess();
          long long v67 = swift_bridgeObjectRetain();
          sub_10007A41C(v67, 0);
          swift_bridgeObjectRelease();
          v75(v58, v56);

          ++v54;
          if (v62 == v74) {
            return swift_bridgeObjectRelease_n();
          }
        }
        __break(1u);
LABEL_70:
        swift_bridgeObjectRetain();
        double v68 = (void *)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v56 = v70;
        id v74 = v68;
      }
      while (v68);
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

void *sub_10005D9D8()
{
  uint64_t v2 = v0;
  id v3 = [v0 dataSource];
  unint64_t v4 = sub_10008A504();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (!v5) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_19;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v20 = v2;
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    id v9 = [v7 navigationItem];
    id v10 = [v9 searchController];

    if (v10
      && (id v11 = [v10 searchResultsController], v10, v11))
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v12 = swift_dynamicCastClass();

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    else
    {
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (!v13) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = v13;
  id v14 = [v13 presentedViewController];
  if (!v14)
  {
LABEL_26:

    return _swiftEmptyArrayStorage;
  }
  unint64_t v4 = (unint64_t)v14;
  type metadata accessor for DOCSearchController();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {

    goto LABEL_26;
  }
  uint64_t v1 = *(void **)(v15 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    id v16 = v1;
LABEL_24:
    sub_10051512C(0, 0, (uint64_t)v1);

    return _swiftEmptyArrayStorage;
  }
LABEL_29:
  id v18 = v1;
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if ((v19 & 0x8000000000000000) == 0) {
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id DOCFullDocumentManagerViewController.sidebarViewController.getter()
{
  uint64_t v1 = self;
  id v2 = [v0 configuration];
  id v3 = [v2 sceneIdentifier];

  id v4 = [v1 globalTabbedBrowserControllerForIdentifier:v3];
  if (!v4
    || (id v5 = [v4 splitBrowserViewController],
        v4,
        id v6 = [v5 sidebarViewController],
        v5,
        !v6))
  {
    id v7 = [v0 splitViewController];
    if (v7)
    {
      uint64_t v8 = v7;
      self;
      id v9 = (void *)swift_dynamicCastObjCClass();
      if (v9)
      {
        id v6 = [v9 sidebarViewController];

        return v6;
      }
    }
    return 0;
  }
  return v6;
}

void DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(uint64_t a1, int a2, id *a3)
{
  id v5 = v3;
  long long v67 = a3;
  HIDWORD(v66) = a2;
  uint64_t v7 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v7 - 8);
  uint64_t v68 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (char *)[v3 dataSource];
  id v10 = (unint64_t *)&v9[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v11 = *v10;
  swift_bridgeObjectRetain();

  unint64_t v70 = (unint64_t)_swiftEmptyArrayStorage;
  if (v11 >> 62) {
    goto LABEL_34;
  }
  unint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v69 = a1;
  if (!v12) {
    goto LABEL_35;
  }
  while (1)
  {
LABEL_5:
    BOOL v13 = __OFSUB__(v12--, 1);
    if (v13)
    {
      __break(1u);
LABEL_18:
      swift_bridgeObjectRelease();
      unint64_t v19 = v70;
      a1 = v69;
      while (1)
      {
        swift_bridgeObjectRelease();
        if (v19 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
          if (!v11)
          {
LABEL_37:
            swift_bridgeObjectRelease_n();
            goto LABEL_38;
          }
        }
        else
        {
          unint64_t v11 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v11) {
            goto LABEL_37;
          }
        }
        uint64_t v20 = 4;
        a1 = (uint64_t)&OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
        while (1)
        {
          id v4 = (void **)(v20 - 4);
          uint64_t v21 = (v19 & 0xC000000000000001) != 0
              ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : (char *)*(id *)(v19 + 8 * v20);
          unint64_t v12 = (unint64_t)v21;
          uint64_t v22 = v20 - 3;
          if (__OFADD__(v4, 1)) {
            break;
          }
          id v4 = (void **)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
          if (*(void *)&v21[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]) {
            goto LABEL_31;
          }

          ++v20;
          if (v22 == v11)
          {
            swift_bridgeObjectRelease_n();
            a1 = v69;
            goto LABEL_38;
          }
        }
        __break(1u);
LABEL_34:
        swift_bridgeObjectRetain();
        unint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v69 = a1;
        if (v12) {
          goto LABEL_5;
        }
LABEL_35:
        swift_bridgeObjectRelease();
        unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
      }
    }
    if ((v11 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
    uint64_t v15 = v14;
    id v4 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v16 = *v4;
    if (*v4 && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v17 = swift_dynamicCastClass()) != 0))
    {
      id v4 = (void **)v17;
      id v18 = v16;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (!v12) {
        goto LABEL_18;
      }
    }
    else
    {

      if (!v12) {
        goto LABEL_18;
      }
    }
  }
  if ((v12 & 0x8000000000000000) == 0)
  {
    if (v12 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_30;
    }
    id v14 = (char *)*(id *)(v11 + 32 + 8 * v12);
    goto LABEL_11;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease_n();
  uint64_t v23 = *(uint64_t *)((char *)v4 + v12);
  swift_retain();

  a1 = v69;
  if (v23)
  {
    sub_100425850();
    swift_release();
  }
LABEL_38:
  uint64_t v24 = (char *)[v5 dataSource];
  uint64_t v25 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle;
  uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];
  if (v26 != a1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong dataSource:v24 willSwitchFrom:v26 to:a1];
      swift_unknownObjectRelease();
    }
  }
  *(void *)&v24[v25] = a1;
  sub_1000606A8(v26);

  sub_1000899F4();
  uint64_t v28 = (id *)[v5 effectiveSearchController];
  uint64_t v29 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  if (v28)
  {
    uint64_t v30 = v28;
    if ([v28 isActive])
    {
      uint64_t v31 = *(char **)((char *)v30 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
      id v32 = [v31 viewIfLoaded];
      if (v32)
      {
        uint64_t v33 = v32;
        unsigned __int8 v34 = [v32 isHidden];

        if ((v34 & 1) == 0)
        {
          unint64_t v35 = &v31[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
          swift_beginAccess();
          unint64_t v36 = *((void *)v35 + 1);
          if (v36 >> 62) {
            goto LABEL_77;
          }
          if (*(uint64_t *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
          {
            do
            {
              unint64_t v37 = (unint64_t)sub_10005D9D8();
              a1 = v37;
              if (v37 >> 62)
              {
                swift_bridgeObjectRetain();
                id v5 = (char **)_CocoaArrayWrapper.endIndex.getter();
                if (!v5)
                {
LABEL_87:
                  swift_bridgeObjectRelease_n();
                  goto LABEL_85;
                }
              }
              else
              {
                id v5 = *(char ***)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (!v5) {
                  goto LABEL_87;
                }
              }
              uint64_t v29 = 0;
              long long v67 = (id *)(a1 + 32);
              while (1)
              {
                if ((a1 & 0xC000000000000001) != 0) {
                  uint64_t v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  uint64_t v38 = (char *)v67[(void)v29];
                }
                uint64_t v39 = v38;
                BOOL v13 = __OFADD__(v29, 1);
                uint64_t v29 = (char **)((char *)v29 + 1);
                if (v13)
                {
                  __break(1u);
                  goto LABEL_76;
                }
                uint64_t v40 = *(void **)(*(void *)&v38[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes);
                uint64_t v41 = v40[2];
                if (!v41) {
                  goto LABEL_63;
                }
                uint64_t v42 = v69;
                if (v40[4] != v69)
                {
                  if (v41 == 1) {
                    goto LABEL_63;
                  }
                  uint64_t v42 = v69;
                  if (v40[5] != v69)
                  {
                    if (v41 == 2) {
                      goto LABEL_63;
                    }
                    uint64_t v42 = v69;
                    if (v40[6] != v69) {
                      break;
                    }
                  }
                }
LABEL_64:
                uint64_t v43 = (uint64_t *)&v38[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
                swift_beginAccess();
                uint64_t v44 = *v43;
                *uint64_t v43 = v42;
                if (v44 != v42)
                {
                  uint64_t v45 = (uint64_t)v39 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
                  swift_beginAccess();
                  uint64_t v46 = v68;
                  sub_10008BC50(v45, v68, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
                  uint64_t v47 = *(void *)(*(void *)v46 + 16);
                  if (v47)
                  {
                    id v48 = (uint64_t *)(*(void *)v46 + 64);
                    do
                    {
                      uint64_t v49 = *v48;
                      v48 += 5;
                      *(unsigned char *)(v49 + 24) = *(unsigned char *)(v49 + 25);
                      --v47;
                    }
                    while (v47);
                  }
                  sub_10008BB90(v68, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
                  sub_10001E85C();
                }

                if (v29 == v5) {
                  goto LABEL_87;
                }
              }
              if (v41 == 3)
              {
LABEL_63:
                uint64_t v42 = 1;
                goto LABEL_64;
              }
              uint64_t v50 = 7;
              while (1)
              {
                uint64_t v51 = v50 - 3;
                if (__OFADD__(v50 - 4, 1)) {
                  break;
                }
                if (v40[v50] == v69)
                {
                  uint64_t v42 = v69;
                  goto LABEL_64;
                }
                ++v50;
                uint64_t v42 = 1;
                if (v51 == v41) {
                  goto LABEL_64;
                }
              }
LABEL_76:
              __break(1u);
LABEL_77:
              swift_bridgeObjectRetain();
              uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            while (v52 >= 1);
          }
        }
      }
    }
  }
  id v53 = [v5 internalNavigationController];
  type metadata accessor for DOCFullDocumentManagerNavigationController();
  uint64_t v54 = (unsigned char *)swift_dynamicCastClassUnconditional();
  uint64_t v55 = OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled;
  v54[OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled] = a1 == 2;
  id v56 = [v54 navigationBar];
  type metadata accessor for DOCNavigationBar();
  uint64_t v57 = swift_dynamicCastClassUnconditional();
  LODWORD(v55) = v54[v55];
  uint64_t v58 = (unsigned char *)(v57 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess();
  id v59 = 0;
  *uint64_t v58 = v55;
  if (v55 == 1) {
    id v59 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  }
  sub_100064AD8(v59);

  id v60 = [v5 v29[431]];
  id v61 = [v60 window];

  id v62 = [v61 windowScene];
  if (v62) {
    char v63 = [v62 _isPerformingSystemSnapshot] ^ 1;
  }
  else {
    char v63 = 1;
  }
  unsigned __int8 v64 = v67;
  uint64_t v30 = v67;
  Swift::String v65 = v5;
  sub_10005EB98(a1, v63, v65, (uint64_t)v65, a1, BYTE4(v66) & 1, v64);

LABEL_85:
}

void sub_10005E6EC(unint64_t a1)
{
  uint64_t v2 = (uint64_t)v1;
  id v4 = (SEL *)&unk_1006E3000;
  id v5 = (char *)[v1 hierarchyController];
  id v6 = &v5[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v7 = *(void *)v6;
  swift_bridgeObjectRetain();

  if (v7 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      id v35 = (id)v2;
      uint64_t v9 = 0;
      while (1)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v7 + 8 * v9 + 32);
        }
        unint64_t v11 = v10;
        unint64_t v12 = (SEL *)[v10 fileProviderItem];
        if (v12)
        {
          id v4 = v12;
          uint64_t v2 = (uint64_t)[(SEL *)v12 isFolder];

          BOOL v13 = a1 == 2;
          if (a1 >= 2) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v2 = 2;
          BOOL v13 = a1 == 2;
          if (a1 >= 2)
          {
LABEL_13:
            if (!v13)
            {
              _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
              __break(1u);
              return;
            }

            goto LABEL_16;
          }
        }

        if (v2 != 2 && (v2 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          id v4 = (SEL *)&unk_1006E3000;
          uint64_t v2 = (uint64_t)v35;
          id v16 = (char *)[v35 hierarchyController];
          uint64_t v17 = (unint64_t *)&v16[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
          swift_beginAccess();
          unint64_t v18 = *v17;
          swift_bridgeObjectRetain();

          uint64_t v19 = sub_10023A868(v9, v18);
          uint64_t v21 = v20;
          uint64_t v23 = v22;
          unint64_t v25 = v24;
          swift_bridgeObjectRelease();
          if ((v25 & 1) == 0) {
            goto LABEL_20;
          }
          type metadata accessor for __ContiguousArrayStorageBase();
          swift_unknownObjectRetain_n();
          uint64_t v26 = (void *)swift_dynamicCastClass();
          if (!v26)
          {
            swift_unknownObjectRelease();
            uint64_t v26 = _swiftEmptyArrayStorage;
          }
          uint64_t v27 = v26[2];
          swift_release();
          if (__OFSUB__(v25 >> 1, v23))
          {
            __break(1u);
          }
          else if (v27 == (v25 >> 1) - v23)
          {
            unint64_t v15 = swift_dynamicCastClass();
            swift_unknownObjectRelease();
            if (!v15)
            {
              swift_unknownObjectRelease();
              goto LABEL_30;
            }
            goto LABEL_31;
          }
          swift_unknownObjectRelease();
LABEL_20:
          unint64_t v15 = (unint64_t)sub_1002F507C(v19, v21, v23, v25);
          swift_unknownObjectRelease();
          goto LABEL_31;
        }
LABEL_16:
        uint64_t v14 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        ++v9;
        if (v14 == v8)
        {
          swift_bridgeObjectRelease();
          unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
          uint64_t v2 = (uint64_t)v35;
          id v4 = (SEL *)&unk_1006E3000;
          goto LABEL_31;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_30:
  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_31:
  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_33;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_100066CC4();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_41;
  }
LABEL_33:
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [(id)v2 setDroppedLocationsAfterSwitchingDisplayMode:isa];

  id v29 = [(id)v2 viewIfLoaded];
  id v30 = [v29 window];

  id v31 = [v30 windowScene];
  if (!v31 || ([v31 _isPerformingSystemSnapshot] & 1) == 0)
  {
    [self cancelPreviousPerformRequestsWithTarget:v2 selector:"clearDroppedLocationsAfterSwitchingViewStyle" object:0];
    [(id)v2 performSelector:"clearDroppedLocationsAfterSwitchingViewStyle" withObject:0 afterDelay:1.0];
  }
  id v32 = [(id)v2 v4[367]];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_10023C8FC(v33);
}

void sub_10005EB98(uint64_t a1, char a2, id a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  char v30 = a6;
  uint64_t v26 = a7;
  id v31 = a7;
  unint64_t v12 = [a3 dataSource];
  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight];
  char v14 = v12[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight + 8];

  if ((v14 & 1) != 0 || v13 != a1)
  {
    if (a2)
    {
      unint64_t v15 = (char *)[a3 dataSource];
      uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

      BOOL v17 = v16 != a1;
    }
    else
    {
      BOOL v17 = 0;
    }
    unint64_t v18 = (char *)[a3 dataSource];
    uint64_t v19 = &v18[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight];
    *(void *)uint64_t v19 = a1;
    v19[8] = 0;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    unint64_t v25 = v18;
    if (v17
      && (id v21 = [a3 internalNavigationController],
          uint64_t v22 = sub_10045DD00(),
          v21,
          v22))
    {

      id v23 = [a3 internalNavigationController];
      __chkstk_darwin(v23);
      v24[2] = sub_1004619B4;
      _OWORD v24[3] = &v27;
      sub_10045DEA0(sub_1000D8564, (uint64_t)v24, (void (*)(uint64_t))sub_1004619C4, v20);

      swift_release();
    }
    else
    {
      sub_10005EDF4(a5, a6 & 1, v26);
      swift_release();
      *(void *)uint64_t v19 = 0;
      v19[8] = 1;
    }
  }
}

unint64_t sub_10005EDF4(uint64_t a1, int a2, void *a3)
{
  id v4 = v3;
  int v87 = a2;
  uint64_t v86 = type metadata accessor for Logger();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v7 = __chkstk_darwin(v86);
  unint64_t v82 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v10 = (char *)&v81 - v9;
  uint64_t v11 = type metadata accessor for DOCItemCollectionFPController();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v89 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v81 - v14;
  uint64_t v16 = (char *)[v3 dataSource];
  BOOL v17 = (unint64_t *)&v16[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers];
  swift_beginAccess();
  unint64_t v18 = *v17;
  swift_bridgeObjectRetain();

  if (v18) {
    goto LABEL_14;
  }
  uint64_t v19 = (char *)[v4 dataSource];
  unint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers];
  swift_bridgeObjectRetain();

  if (!v20)
  {
LABEL_13:
    unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_5:
  unint64_t result = v21 - 1;
  if (__OFSUB__(v21, 1)) {
    goto LABEL_91;
  }
  if ((v20 & 0xC000000000000001) != 0) {
    goto LABEL_92;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_94;
  }
  if (result >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_94:
    __break(1u);
    return result;
  }
  for (uint64_t i = (char *)*(id *)(v20 + 8 * result + 32);
        ;
        uint64_t i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    unint64_t v24 = i;
    swift_bridgeObjectRelease();
    unint64_t v25 = (unint64_t *)&v24[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess();
    unint64_t v18 = *v25;
    swift_bridgeObjectRetain();

LABEL_14:
    uint64_t v84 = v10;
    Swift::String v81 = a3;
    unint64_t v91 = (unint64_t)_swiftEmptyArrayStorage;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      if (!v26)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v26) {
        goto LABEL_35;
      }
    }
    if (v26 >= 1) {
      break;
    }
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    ;
  }
  char v27 = v4;
  if ((v18 & 0xC000000000000001) != 0)
  {
    for (uint64_t j = 0; j != v26; ++j)
    {
      uint64_t v29 = (void **)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                    + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess();
      char v30 = *v29;
      if (*v29 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
      {
        id v31 = v30;
        swift_unknownObjectRelease();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t k = 0; k != v26; ++k)
    {
      uint64_t v33 = (void **)(*(void *)(v18 + 8 * k + 32)
                    + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess();
      uint64_t v34 = *v33;
      if (v34)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass())
        {
          id v35 = v34;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  id v4 = v27;
LABEL_36:
  unint64_t v36 = v91;
  swift_bridgeObjectRelease();
  if (v36 >> 62) {
    goto LABEL_51;
  }
  uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v37; uint64_t v37 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v38 = 0;
    while (1)
    {
      uint64_t v39 = (v36 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v36 + 32 + 8 * v38);
      uint64_t v40 = v39;
      BOOL v41 = __OFADD__(v38++, 1);
      if (v41) {
        break;
      }
      uint64_t v42 = (uint64_t *)&v39[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      uint64_t v43 = *v42;
      *uint64_t v42 = a1;
      if (v43 != a1)
      {
        uint64_t v44 = (uint64_t)v40 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
        swift_beginAccess();
        sub_10008BC50(v44, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
        uint64_t v45 = *(void *)(*(void *)v15 + 16);
        if (v45)
        {
          uint64_t v46 = (uint64_t *)(*(void *)v15 + 64);
          do
          {
            uint64_t v47 = *v46;
            v46 += 5;
            *(unsigned char *)(v47 + 24) = *(unsigned char *)(v47 + 25);
            --v45;
          }
          while (v45);
        }
        sub_10008BB90((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
        sub_10001E85C();
      }

      if (v38 == v37) {
        goto LABEL_52;
      }
    }
    __break(1u);
LABEL_51:
    swift_bridgeObjectRetain();
  }
LABEL_52:
  swift_bridgeObjectRelease_n();
  id v83 = v4;
  unint64_t v48 = (unint64_t)sub_10005D9D8();
  unint64_t v49 = v48;
  if (v48 >> 62) {
    goto LABEL_80;
  }
  uint64_t v50 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v50)
  {
    while (2)
    {
      uint64_t v51 = 0;
      unint64_t v88 = v49 + 32;
      while (1)
      {
        if ((v49 & 0xC000000000000001) != 0) {
          uint64_t v52 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v52 = (char *)*(id *)(v88 + 8 * v51);
        }
        id v53 = v52;
        BOOL v41 = __OFADD__(v51++, 1);
        if (v41)
        {
          __break(1u);
          goto LABEL_79;
        }
        uint64_t v54 = *(void **)(*(void *)&v52[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                         + OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes);
        uint64_t v55 = v54[2];
        if (!v55) {
          goto LABEL_66;
        }
        uint64_t v56 = a1;
        if (v54[4] != a1)
        {
          if (v55 == 1) {
            goto LABEL_66;
          }
          uint64_t v56 = a1;
          if (v54[5] != a1) {
            break;
          }
        }
LABEL_67:
        uint64_t v57 = (uint64_t *)&v52[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess();
        uint64_t v58 = *v57;
        *uint64_t v57 = v56;
        if (v58 != v56)
        {
          uint64_t v59 = (uint64_t)v53 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
          swift_beginAccess();
          uint64_t v60 = v89;
          sub_10008BC50(v59, v89, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
          uint64_t v61 = *(void *)(*(void *)v60 + 16);
          if (v61)
          {
            id v62 = (uint64_t *)(*(void *)v60 + 64);
            do
            {
              uint64_t v63 = *v62;
              v62 += 5;
              *(unsigned char *)(v63 + 24) = *(unsigned char *)(v63 + 25);
              --v61;
            }
            while (v61);
          }
          sub_10008BB90(v89, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
          sub_10001E85C();
        }

        if (v51 == v50) {
          goto LABEL_81;
        }
      }
      if (v55 != 2)
      {
        uint64_t v64 = 6;
        while (1)
        {
          uint64_t v65 = v64 - 3;
          if (__OFADD__(v64 - 4, 1)) {
            break;
          }
          if (v54[v64] == a1)
          {
            uint64_t v56 = a1;
            goto LABEL_67;
          }
          ++v64;
          uint64_t v56 = 1;
          if (v65 == v55) {
            goto LABEL_67;
          }
        }
LABEL_79:
        __break(1u);
LABEL_80:
        swift_bridgeObjectRetain();
        uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
        if (!v50) {
          goto LABEL_81;
        }
        continue;
      }
      break;
    }
LABEL_66:
    uint64_t v56 = 1;
    goto LABEL_67;
  }
LABEL_81:
  swift_bridgeObjectRelease_n();
  uint64_t v66 = v84;
  static Logger.StateStore.getter();
  long long v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 134218240;
    uint64_t v90 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v69 + 12) = 1024;
    LODWORD(v90) = v87 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "updateDisplayMode(to) %ld saveAsUserSelection: %{BOOL}d", (uint8_t *)v69, 0x12u);
    swift_slowDealloc();
  }

  unint64_t v70 = *(void (**)(char *, uint64_t))(v85 + 8);
  uint64_t v71 = v86;
  v70(v66, v86);
  id v72 = v83;
  if (v87)
  {
    id v73 = [v83 configuration];
    unsigned __int8 v74 = [v73 supportsColumnView];

    if ((v74 & 1) != 0
      || (objc_msgSend(v72, "enclosingTabSwitcherStyle", v81), (DOCTabSwitcherStyle.showsTabs.getter() & 1) != 0))
    {
      static Logger.StateStore.getter();
      uint64_t v75 = Logger.logObject.getter();
      os_log_type_t v76 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v75, v76))
      {
        unint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v77 = 134217984;
        uint64_t v90 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "pdateDisplayMode(to) %ld updating defaults", v77, 0xCu);
        swift_slowDealloc();
      }

      v70(v82, v71);
      id v78 = [v72 configuration];
      sub_10017F6AC(a1, v81, (uint64_t)v78);

      uint64_t v79 = (char *)[v72 displayModeHandler];
      uint64_t v80 = &v79[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
      *(void *)uint64_t v80 = a1;
      v80[8] = 0;
    }
  }
  [v72 updateNavigationBarPrefersLargeTitles:v81];
  return (unint64_t)[v72 updateRelatedViewControllersWithCurrentHierarchy];
}

id sub_10005F8CC()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v1 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCLazyActionManager());
  *(void *)&v1[OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions] = 0;
  uint64_t v2 = &v1[OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure];
  *(void *)uint64_t v2 = sub_10018027C;
  *((void *)v2 + 1) = v0;
  id v3 = self;
  swift_retain_n();
  id v4 = [v3 defaultManager];
  id v5 = [self defaultPermission];
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = v4;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = v5;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCActionManager();
  [super init];
  swift_release_n();
  return v6;
}

uint64_t sub_10005FA50(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v44 - v12;
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v44 - v14;
  if (qword_100704E90 != -1) {
    swift_once();
  }
  if (byte_100736E70)
  {
    id v16 = [self sharedStore];
    id v17 = [v16 interfaceStateForConfiguration:a1];

    uint64_t v18 = sub_10017F2F0(a2);
    unint64_t v20 = v19;
    id v49 = v17;
    uint64_t v47 = v18;
    id v21 = sub_10017B180(v17, v18, v19);
    uint64_t v22 = (uint64_t)v21;
    uint64_t v50 = v6;
    if (v23)
    {
      static Logger.StateStore.getter();
      char v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v48 = (uint64_t)a2;
        uint64_t v30 = v29;
        uint64_t v46 = swift_slowAlloc();
        uint64_t v53 = v46;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v51 = sub_10009B0E4(0xD000000000000044, 0x80000001005D77B0, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v30 + 12) = 2080;
        uint64_t v45 = v30 + 14;
        uint64_t v51 = v22;
        char v52 = 1;
        sub_1000CBE70(&qword_100708770);
        uint64_t v31 = String.init<A>(describing:)();
        uint64_t v51 = sub_10009B0E4(v31, v32, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s fetched value: %s could not be converted to DOCDisplayMode", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = (void *)v48;
        swift_slowDealloc();
      }

      uint64_t v6 = v50;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v50);
    }
    else
    {
      a3 = (uint64_t)v21;
    }
    static Logger.StateStore.getter();
    uint64_t v33 = (uint64_t)a2;
    id v34 = a2;
    swift_bridgeObjectRetain();
    id v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v51 = v45;
      *(_DWORD *)uint64_t v37 = 136315906;
      uint64_t v48 = v33;
      uint64_t v53 = sub_10009B0E4(0xD000000000000044, 0x80000001005D77B0, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v53 = a3;
      uint64_t v44 = v7;
      uint64_t v38 = String.init<A>(describing:)();
      uint64_t v46 = a3;
      uint64_t v53 = sub_10009B0E4(v38, v39, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_10009B0E4(v47, v20, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 32) = 2080;
      uint64_t v53 = v48;
      id v40 = v34;
      sub_1000CBE70((uint64_t *)&unk_100711B40);
      uint64_t v41 = String.init<A>(describing:)();
      uint64_t v53 = sub_10009B0E4(v41, v42, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      a3 = v46;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s fetched: %s for state identifier: %s derived from sourceIdentifier: %s", (uint8_t *)v37, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v50);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  else
  {
    a3 = qword_100736E68;
    static Logger.StateStore.getter();
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v53 = sub_10009B0E4(0xD000000000000044, 0x80000001005D77B0, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2048;
      uint64_t v53 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s overriding stored value for PPT test with value: %ld", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  return a3;
}

uint64_t sub_1000601A8(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *id v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_1000603CC(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000603CC(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_100073DF0(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1000CBE70(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          id v24 = *v23;
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000606A8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCItemCollectionFPController();
  uint64_t result = __chkstk_darwin(v3 - 8);
  uint64_t v168 = (uint64_t)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle);
  if (v6 == a1 || a1 != 2 && v6 != 2) {
    return result;
  }
  uint64_t v7 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  uint64_t v8 = v1;
  if (v6 == 2)
  {
    swift_beginAccess();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1005A04F0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_196;
    }
    uint64_t v11 = (void *)Strong;
    type metadata accessor for DOCBrowserContainerController();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v13 = [v11 provideColumnViewControllerWithContains:isa];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    *(void *)(v9 + 32) = v13;
    uint64_t v173 = v9;
    specialized Array._endMutation()();
    *(void *)(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers) = v173;
    swift_bridgeObjectRelease();
    unint64_t v14 = (void *)(v8 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
    swift_beginAccess();
    *unint64_t v14 = 0;
    goto LABEL_188;
  }
  uint64_t v156 = v1;
  swift_beginAccess();
  unint64_t v15 = *v7;
  swift_bridgeObjectRetain();
  unint64_t v165 = sub_100061B18((uint64_t)_swiftEmptyArrayStorage);
  if (v15 >> 62) {
    goto LABEL_121;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_9:
  unint64_t v164 = v15;
  uint64_t v163 = v16;
  if (v16)
  {
    unint64_t v17 = 0;
    unint64_t v18 = v15 & 0xC000000000000001;
    unint64_t v166 = v15 & 0xFFFFFFFFFFFFFF8;
    uint64_t v162 = v15 + 32;
    unint64_t v167 = v15 & 0xC000000000000001;
    while (1)
    {
      if (v18)
      {
        uint64_t v19 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v17 >= *(void *)(v166 + 16)) {
          goto LABEL_117;
        }
        uint64_t v19 = *(id *)(v162 + 8 * v17);
      }
      uint64_t v20 = v19;
      BOOL v21 = __OFADD__(v17++, 1);
      if (v21)
      {
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        swift_bridgeObjectRetain_n();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      uint64_t v22 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
      char v23 = v19[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled];
      unint64_t v15 = v19;
      unint64_t v24 = v165;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v170 = v24;
      unint64_t v27 = sub_10017C19C(v15);
      uint64_t v28 = *(void *)(v24 + 16);
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29)) {
        goto LABEL_113;
      }
      char v31 = v26;
      if (*(void *)(v24 + 24) >= v30)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1003580B0();
        }
      }
      else
      {
        sub_10034E500(v30, isUniquelyReferenced_nonNull_native);
        unint64_t v32 = sub_10017C19C(v15);
        if ((v31 & 1) != (v33 & 1)) {
          goto LABEL_195;
        }
        unint64_t v27 = v32;
      }
      id v34 = (void *)v170;
      unint64_t v165 = v170;
      if (v31)
      {
        *(unsigned char *)(*(void *)(v170 + 56) + v27) = v23;
      }
      else
      {
        *(void *)(v170 + 8 * (v27 >> 6) + 64) |= 1 << v27;
        *(void *)(v34[6] + 8 * v27) = v15;
        *(unsigned char *)(v34[7] + v27) = v23;
        uint64_t v35 = v34[2];
        BOOL v21 = __OFADD__(v35, 1);
        uint64_t v36 = v35 + 1;
        if (v21) {
          goto LABEL_116;
        }
        v34[2] = v36;
        id v37 = (id)v15;
      }

      swift_bridgeObjectRelease();
      v20[v22] = 0;
      unint64_t v38 = (unint64_t)sub_10007679C();
      unint64_t v39 = v38;
      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        if (v40)
        {
LABEL_29:
          if (v40 < 1) {
            goto LABEL_114;
          }
          for (uint64_t i = 0; i != v40; ++i)
          {
            if ((v39 & 0xC000000000000001) != 0) {
              unint64_t v42 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              unint64_t v42 = *(id *)(v39 + 8 * i + 32);
            }
            uint64_t v43 = v42;
            (*(void (**)(void))((swift_isaMask & *v42) + 0x208))(v20[v22]);
          }
        }
      }
      else
      {
        uint64_t v40 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v40) {
          goto LABEL_29;
        }
      }
      swift_bridgeObjectRelease_n();

      uint64_t v16 = v163;
      unint64_t v15 = v164;
      unint64_t v18 = v167;
      if (v17 == v163)
      {
        swift_bridgeObjectRelease();
        if (v16 < 1) {
          goto LABEL_194;
        }
        swift_bridgeObjectRetain();
        for (uint64_t j = 0; j != v16; ++j)
        {
          if (v18) {
            id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v45 = *(id *)(v15 + 8 * j + 32);
          }
          uint64_t v46 = v45;
          [v45 doc_removeFromParentWithRemoveSubviewBlock:0];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v47 = 0;
        while (1)
        {
          if (v18)
          {
            uint64_t v48 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v47 >= *(void *)(v166 + 16)) {
              goto LABEL_118;
            }
            uint64_t v48 = (unsigned __int8 *)*(id *)(v162 + 8 * v47);
          }
          id v49 = v48;
          if (*(void *)(v165 + 16))
          {
            unint64_t v50 = sub_10017C19C((uint64_t)v48);
            if (v51) {
              break;
            }
          }
LABEL_45:
          ++v47;

          if (v47 == v16) {
            goto LABEL_78;
          }
        }
        uint64_t v52 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
        v49[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled] = *(unsigned char *)(*(void *)(v165 + 56) + v50);
        id v53 = [v49 childViewControllers];
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        unint64_t v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)&long long v170 = _swiftEmptyArrayStorage;
        if (v54 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
          if (!v55) {
            goto LABEL_67;
          }
LABEL_54:
          if (v55 < 1) {
            goto LABEL_119;
          }
          uint64_t v56 = 0;
          unint64_t v15 = v54 & 0xC000000000000001;
          do
          {
            if (v15) {
              id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v57 = *(id *)(v54 + 8 * v56 + 32);
            }
            uint64_t v58 = v57;
            type metadata accessor for DOCBrowserContainedViewController();
            if (swift_dynamicCastClass())
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            else
            {
            }
            ++v56;
          }
          while (v55 != v56);
          swift_bridgeObjectRelease();
          unint64_t v59 = v170;
          unint64_t v18 = v167;
        }
        else
        {
          uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v55) {
            goto LABEL_54;
          }
LABEL_67:
          swift_bridgeObjectRelease();
          unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        if (v59 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
          if (v60)
          {
LABEL_70:
            if (v60 < 1) {
              goto LABEL_120;
            }
            for (uint64_t k = 0; k != v60; ++k)
            {
              if ((v59 & 0xC000000000000001) != 0) {
                id v62 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v62 = *(id *)(v59 + 8 * k + 32);
              }
              uint64_t v63 = v62;
              (*(void (**)(void))((swift_isaMask & *v62) + 0x208))(v49[v52]);
            }
          }
        }
        else
        {
          uint64_t v60 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v60) {
            goto LABEL_70;
          }
        }
        swift_bridgeObjectRelease_n();
        unint64_t v15 = v164;
        uint64_t v16 = v163;
        goto LABEL_45;
      }
    }
  }
LABEL_78:
  swift_bridgeObjectRelease();
  uint64_t v64 = v156;
  uint64_t v65 = (unint64_t *)(v156 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
  swift_beginAccess();
  *uint64_t v65 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = v64;
  uint64_t v67 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers;
  unint64_t v68 = *(void *)(v64 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (v68)
  {
    uint64_t v155 = OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers;
    if (v68 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
      if (v69) {
        goto LABEL_81;
      }
    }
    else
    {
      uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v69)
      {
LABEL_81:
        unint64_t v70 = 0;
        unint64_t v71 = v68 & 0xC000000000000001;
        unint64_t v157 = v68 + 32;
        id v72 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
        unint64_t v158 = v68;
        uint64_t v162 = v69;
        id v161 = (id)(v68 & 0xC000000000000001);
        while (1)
        {
          if (v71) {
            unsigned __int8 v74 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            unsigned __int8 v74 = (char *)*(id *)(v157 + 8 * v70);
          }
          uint64_t v75 = v74;
          BOOL v21 = __OFADD__(v70++, 1);
          if (v21) {
            goto LABEL_115;
          }
          os_log_type_t v76 = (uint64_t *)&v74[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
          swift_beginAccess();
          uint64_t v77 = *v76;
          swift_bridgeObjectRetain();
          sub_100412F6C((unint64_t)_swiftEmptyArrayStorage);
          *os_log_type_t v76 = (uint64_t)_swiftEmptyArrayStorage;
          swift_bridgeObjectRelease();
          unint64_t v78 = swift_bridgeObjectRetain();
          unint64_t v166 = v77;
          unsigned __int8 v79 = sub_10028ED04(v78, v77);
          swift_bridgeObjectRelease();
          if (v79) {
            break;
          }
          id v159 = v75;
          unint64_t v15 = *v76;
          unint64_t v80 = (unint64_t)*v76 >> 62;
          unint64_t v160 = v70;
          if (v80)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
            if (v81)
            {
LABEL_92:
              uint64_t v82 = 0;
              unint64_t v167 = v15 + 32;
              while (1)
              {
                uint64_t v85 = (v15 & 0xC000000000000001) != 0
                    ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                    : (char *)*(id *)(v167 + 8 * v82);
                uint64_t v84 = v85;
                BOOL v21 = __OFADD__(v82++, 1);
                if (v21) {
                  break;
                }
                uint64_t v86 = (void **)&v85[*v72];
                swift_beginAccess();
                int v87 = *v86;
                if (v87)
                {
                  type metadata accessor for DOCItemCollectionViewController(0);
                  uint64_t v88 = swift_dynamicCastClass();
                  if (v88)
                  {
                    uint64_t v89 = v88;
                    uint64_t v90 = v72;
                    unint64_t v91 = (uint64_t *)(v88 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
                    swift_beginAccess();
                    uint64_t v92 = *v91;
                    *unint64_t v91 = 2;
                    if (v92 != 2)
                    {
                      uint64_t v93 = v89 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
                      swift_beginAccess();
                      uint64_t v94 = v93;
                      uint64_t v95 = v168;
                      sub_10013D2A0(v94, v168);
                      uint64_t v96 = *(void *)(*(void *)v95 + 16);
                      if (v96)
                      {
                        uint64_t v97 = (uint64_t *)(*(void *)v95 + 64);
                        do
                        {
                          uint64_t v98 = *v97;
                          v97 += 5;
                          *(unsigned char *)(v98 + 24) = *(unsigned char *)(v98 + 25);
                          --v96;
                        }
                        while (v96);
                      }
                      id v83 = v87;
                      sub_10013D304(v168);
                      sub_10001E85C();

                      uint64_t v84 = v83;
                    }
                    id v72 = v90;
                  }
                }

                if (v82 == v81) {
                  goto LABEL_108;
                }
              }
              __break(1u);
              goto LABEL_112;
            }
          }
          else
          {
            uint64_t v81 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (v81) {
              goto LABEL_92;
            }
          }
LABEL_108:
          swift_bridgeObjectRelease_n();
          id v99 = v159;
          if ([v159 isViewLoaded])
          {
            uint64_t v100 = swift_bridgeObjectRetain();
            sub_100413804(v100);

            swift_bridgeObjectRelease();
            unint64_t v15 = v164;
            uint64_t v16 = v163;
            uint64_t v73 = v162;
            unint64_t v70 = v160;
            goto LABEL_110;
          }
          *((unsigned char *)v99 + OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot) = 1;

          unint64_t v15 = v164;
          uint64_t v16 = v163;
          uint64_t v73 = v162;
          unint64_t v70 = v160;
          unint64_t v71 = (unint64_t)v161;
LABEL_83:
          swift_bridgeObjectRelease();
          if (v70 == v73) {
            goto LABEL_123;
          }
        }

        uint64_t v73 = v162;
LABEL_110:
        unint64_t v71 = (unint64_t)v161;
        goto LABEL_83;
      }
    }
LABEL_123:
    swift_bridgeObjectRelease_n();
    uint64_t v66 = v156;
    uint64_t v67 = v155;
  }
  *(void *)(v66 + v67) = 0;
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_187:
    swift_bridgeObjectRelease();
    uint64_t v8 = v156;
LABEL_188:
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v152 = (void *)result;
      sub_10008A504();
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      Class v153 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v152 dataSource:v8 didUpdate:v153 animated:0];

      return swift_unknownObjectRelease();
    }
    return result;
  }
  unint64_t v160 = v15 & 0xC000000000000001;
  id v159 = (id)(v15 + 32);
  swift_bridgeObjectRetain();
  uint64_t v101 = 0;
  Swift::String v102 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  while (1)
  {
    Swift::String v104 = v160 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (char *)*((id *)v159 + v101);
    Swift::String v105 = v104;
    BOOL v21 = __OFADD__(v101, 1);
    uint64_t v106 = v101 + 1;
    if (v21) {
      break;
    }
    id v107 = [v104 navigationItem];
    Swift::String v108 = *(void **)&v105[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
    uint64_t v168 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem;
    *(void *)&v105[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem] = v107;
    id v109 = v107;

    id v110 = [v105 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v111 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)&long long v170 = _swiftEmptyArrayStorage;
    if (v111 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v112 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v162 = v106;
    id v161 = v109;
    if (v112)
    {
      if (v112 < 1) {
        goto LABEL_192;
      }
      for (uint64_t m = 0; m != v112; ++m)
      {
        if ((v111 & 0xC000000000000001) != 0) {
          id v114 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v114 = *(id *)(v111 + 8 * m + 32);
        }
        uint64_t v115 = v114;
        type metadata accessor for DOCBrowserContainedViewController();
        if (swift_dynamicCastClass())
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v116 = v170;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v116 = (unint64_t)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    if (v116 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
      if (!v117) {
        goto LABEL_177;
      }
    }
    else
    {
      uint64_t v117 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v117) {
        goto LABEL_177;
      }
    }
    if (v117 < 1) {
      goto LABEL_193;
    }
    uint64_t v118 = 0;
    unint64_t v166 = v116 & 0xC000000000000001;
    unint64_t v167 = (unint64_t)v105;
    do
    {
      if (v166) {
        unint64_t v119 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v119 = *(id *)(v116 + 8 * v118 + 32);
      }
      long long v120 = v119;
      objc_super v121 = *(void **)&v105[v168];
      if (v121) {
        id v122 = *(id *)&v105[v168];
      }
      else {
        id v122 = [v105 navigationItem];
      }
      uint64_t v123 = *(void **)&v120[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
      *(void *)&v120[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = v122;
      id v124 = v122;
      id v125 = v121;

      uint64_t v126 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v120[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      unint64_t v127 = v102;
      id v128 = [v120 v102[431]];
      id v129 = [v128 window];

      if (v129)
      {
        int v130 = v120[v126];
        if (v130 != 2)
        {
          sub_1000A6AA0();
          char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if ((valid & 1) == 0)
          {
            if (objc_msgSend(v120, "doc_hasAppearedOrIsAppearing"))
            {
              id v169 = v120;
              type metadata accessor for DOCBrowserContainedViewController();
              char v132 = v120;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v133 = v130 & 1;
                uint64_t v134 = *((void *)&v171 + 1);
                uint64_t v135 = v172;
                sub_1000A6B78(&v170, *((uint64_t *)&v171 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 8))(v133, v134, v135);
                sub_10009B1B8((uint64_t)&v170);
              }
              else
              {
                uint64_t v172 = 0;
                long long v170 = 0u;
                long long v171 = 0u;
                sub_100240A64((uint64_t)&v170);
              }
              v120[v126] = 2;
            }
          }
        }
      }

      v120[v126] = 0;
      Swift::String v102 = v127;
      id v136 = [v120 v127[431]];
      id v137 = [v136 window];

      if (v137)
      {
        int v138 = v120[v126];
        if (v138 != 2)
        {
          sub_1000A6AA0();
          char v139 = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if ((v139 & 1) == 0)
          {
            if (objc_msgSend(v120, "doc_hasAppearedOrIsAppearing"))
            {
              id v169 = v120;
              type metadata accessor for DOCBrowserContainedViewController();
              uint64_t v140 = v120;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v141 = v138 & 1;
                uint64_t v142 = *((void *)&v171 + 1);
                uint64_t v143 = v172;
                sub_1000A6B78(&v170, *((uint64_t *)&v171 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 8))(v141, v142, v143);
                sub_10009B1B8((uint64_t)&v170);
              }
              else
              {
                uint64_t v172 = 0;
                long long v170 = 0u;
                long long v171 = 0u;
                sub_100240A64((uint64_t)&v170);
              }
              v120[v126] = 2;
            }
          }
        }
      }

      ++v118;
      Swift::String v105 = (char *)v167;
    }
    while (v117 != v118);
LABEL_177:
    swift_bridgeObjectRelease_n();
    uint64_t v144 = *(void **)&v105[v168];
    if (v144)
    {
      id v145 = *(id *)&v105[v168];
    }
    else
    {
      id v145 = [v105 navigationItem];
      uint64_t v144 = 0;
    }
    uint64_t v146 = v163;
    uint64_t v101 = v162;
    id v147 = v144;
    id v148 = [v105 parentViewController];
    if (!v148) {
      goto LABEL_183;
    }
    id v149 = v148;
    type metadata accessor for DOCColumnViewController(0);
    uint64_t v150 = (char *)swift_dynamicCastClass();
    if (!v150)
    {

LABEL_183:
      uint64_t v150 = v105;
    }
    id v151 = [v150 traitCollection];

    if (DOCUsePadIdiomForTraits()) {
      BOOL v103 = [v151 horizontalSizeClass] == (id)2;
    }
    else {
      BOOL v103 = 0;
    }
    [v145 setStyle:v103];

    if (v101 == v146)
    {
      swift_bridgeObjectRelease();
      goto LABEL_187;
    }
  }
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  type metadata accessor for DOCBrowserContainerController();
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_196:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_100061B18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711E70);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_10017C19C((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100061C84(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers] = _swiftEmptyArrayStorage;
  uint64_t v9 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID];
  BOOL v10 = v2;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100062330(6);
  swift_bridgeObjectRelease();
  uint64_t v11 = static String._fromSubstring(_:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *uint64_t v9 = v11;
  v9[1] = v13;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  unint64_t v14 = &v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight];
  *(void *)unint64_t v14 = 0;
  v14[8] = 1;
  *(void *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle] = 2;
  *(void *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_configuration] = a1;
  *(void *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_sourceObserver] = a2;
  id v15 = objc_allocWithZone((Class)type metadata accessor for DOCBrowserHistoryDataSource());
  id v16 = a2;
  id v17 = a1;
  unint64_t v18 = (char *)sub_100061FD0(v16);
  *(void *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource] = v18;
  uint64_t v19 = v9[1];
  uint64_t v20 = (uint64_t *)&v18[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID];
  *uint64_t v20 = *v9;
  v20[1] = v19;
  BOOL v21 = v18;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  uint64_t v22 = (objc_class *)type metadata accessor for DOCBrowserNavigationDataSource();
  v24.receiver = v10;
  v24.super_class = v22;
  return [super init];
}

uint64_t type metadata accessor for DOCBrowserHistoryDataSource()
{
  return self;
}

uint64_t type metadata accessor for DOCBrowserNavigationDataSource()
{
  return self;
}

uint64_t type metadata accessor for DOCDisplayModeChangeHandler()
{
  return self;
}

id sub_100061FD0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken] = 0;
  v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] = 0;
  uint64_t v3 = (uint64_t (**)())&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter];
  *uint64_t v3 = variable initialization expression of DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourceObserver] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DOCBrowserHistoryDataSource();
  id v4 = a1;
  id v5 = [super init];
  sub_1000623F0();

  return v5;
}

id sub_1000620B4()
{
  uint64_t v1 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)&v0[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_shortDebugID];
  BOOL v10 = v0;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100062330(6);
  swift_bridgeObjectRelease();
  uint64_t v11 = static String._fromSubstring(_:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *uint64_t v9 = v11;
  v9[1] = v13;
  uint64_t v14 = OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state;
  uint64_t v15 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  uint64_t v16 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&v4[*(int *)(v16 + 20)] = _swiftEmptyArrayStorage;
  *(void *)&v4[*(int *)(v16 + 24)] = _swiftEmptyArrayStorage;
  id v17 = &v4[*(int *)(v2 + 28)];
  *(void *)id v17 = 0;
  *((void *)v17 + 1) = 0;
  sub_1000CBE70(&qword_10071A1C8);
  swift_allocObject();
  *(void *)&v10[v14] = DOCThreadSafeState.init(_:)();
  uint64_t v18 = OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager;
  *(void *)&v10[v18] = [self defaultManager];

  uint64_t v19 = (objc_class *)type metadata accessor for _DOCBrowserHistoryDataSourceBase();
  v21.receiver = v10;
  v21.super_class = v19;
  return [super init];
}

uint64_t sub_100062330(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase()
{
  return self;
}

void sub_1000623F0()
{
  uint64_t v1 = v0;
  id v2 = [self shared];
  [v2 addChangeObserver:v1];

  uint64_t v3 = OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection);
  if (v4) {
    goto LABEL_5;
  }
  id v5 = [*(id *)(v1 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager) newTrashCollection];
  objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
  id v6 = v5;
  sub_1000B3300(v6, 0);
  uint64_t v7 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = v8;

  uint64_t v9 = *(void *)(v1 + v3);
  if (v9)
  {
    *(void *)(v9 + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate + 8) = &off_1006B3518;
    swift_unknownObjectWeakAssign();
  }

  id v4 = *(void **)(v1 + v3);
  if (v4)
  {
LABEL_5:
    id v10 = v4;
    sub_10006415C();
  }
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourceObserver);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17[4] = sub_1000B81B0;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_1000704F8;
  v17[3] = &unk_1006B3DC0;
  uint64_t v13 = _Block_copy(v17);
  id v14 = v11;
  swift_release();
  id v15 = [v14 addSubscriber:v13];
  _Block_release(v13);

  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken);
  *(void *)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken) = v15;
}

id sub_100062624(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool____lazy_storage___notificationsController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_configuration] = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCItemCollectionViewPool();
  id v3 = a1;
  id v4 = [super init];
  sub_1000627C0();
  id v5 = [self mainQueue:0, 0, v8.receiver, v8.super_class];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_10006273C((uint64_t)&v7);
  return v4;
}

uint64_t sub_10006273C(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100705D60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DOCItemCollectionViewPool()
{
  return self;
}

uint64_t sub_1000627C0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool____lazy_storage___notificationsController;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool____lazy_storage___notificationsController])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool____lazy_storage___notificationsController];
  }
  else
  {
    id v3 = v0;
    sub_1000CBE70((uint64_t *)&unk_100717620);
    swift_allocObject();
    id v4 = v0;
    uint64_t v2 = NSNotification.SubscriptionsController.init(observee:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t type metadata accessor for DOCLocationChangePacer()
{
  uint64_t result = qword_10071CFD8;
  if (!qword_10071CFD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006294C(NSObject *a1, int a2, char *a3, char *a4, uint64_t a5)
{
  uint64_t v154 = a3;
  LODWORD(v147) = a2;
  uint64_t v153 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v150 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for DispatchQoS();
  uint64_t v149 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  id v148 = (char *)&v141 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v146 = *(void ***)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v141 - v18;
  uint64_t v20 = swift_allocObject();
  uint64_t v155 = a4;
  *(void *)(v20 + 16) = a4;
  *(void *)(v20 + 24) = a5;
  uint64_t v158 = v20;
  uint64_t v157 = a5;
  swift_retain_n();
  uint64_t v156 = a1;
  id v21 = [a1 sourceIdentifier];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v24 != v25)
  {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_5;
    }
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34) {
      goto LABEL_10;
    }
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_12;
    }
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;
    if (v47 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v49 == v50) {
      goto LABEL_10;
    }
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51) {
      goto LABEL_12;
    }
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;
    if (v52 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v54 == v55) {
      goto LABEL_10;
    }
    char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v56) {
      goto LABEL_12;
    }
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v58;
    if (v57 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v59 == v60)
    {
LABEL_10:
      swift_bridgeObjectRelease_n();
LABEL_12:

      static Logger.UI.getter();
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "We don't have to prepare the parent hierarchy for Tags/Trash/RecentsOnly/SharedItems", v38, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      unint64_t v39 = (void *)swift_allocObject();
      uint64_t v40 = v158;
      void v39[2] = sub_10006B560;
      void v39[3] = v40;
      uint64_t v41 = v156;
      v39[4] = v156;
      unint64_t v42 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
      uint64_t v43 = (void *)swift_allocObject();
      void v43[2] = sub_10006B55C;
      void v43[3] = v39;
      v43[4] = v41;
      unint64_t v164 = sub_1000BB090;
      unint64_t v165 = v43;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v161 = 1107296256;
      uint64_t v44 = &unk_100698CA8;
LABEL_15:
      uint64_t v162 = sub_1000704F8;
      uint64_t v163 = v44;
      id v45 = _Block_copy(&aBlock);
      uint64_t v46 = v41;
      swift_retain();
      swift_retain();
      swift_release();
      [v42 retrieveAllSourcesCompletionBlock:v45];
      _Block_release(v45);
      swift_release();
      swift_release();
      goto LABEL_35;
    }
    char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v61) {
      goto LABEL_12;
    }
    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v63;
    if (v62 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v64 != v65)
    {
      char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v66)
      {
LABEL_60:
        swift_release_n();
        swift_release();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v69 = v68;
      if (v67 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v69 == v70)
      {
        swift_bridgeObjectRelease_n();
LABEL_32:

        type metadata accessor for DOCHierarchyController(0);
        id v72 = v154;
        uint64_t v73 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        unsigned __int8 v74 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        uint64_t v75 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        os_log_type_t v76 = (void *)swift_allocObject();
        v76[2] = v72;
        v76[3] = sub_10006B560;
        v76[4] = v158;
        id v77 = v75;
        id v78 = v72;
        swift_retain();
        sub_100230898(v73, v74, v75, (uint64_t)sub_10023A4A8, (uint64_t)v76);
        goto LABEL_33;
      }
      char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v71) {
        goto LABEL_32;
      }
      uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v81 = v80;
      if (v79 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v81 == v82)
      {

        swift_bridgeObjectRelease_n();
LABEL_40:
        type metadata accessor for DOCHierarchyController(0);
        uint64_t v84 = v154;
        uint64_t v85 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
        uint64_t v86 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        int v87 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext];
        uint64_t v88 = (void *)swift_allocObject();
        v88[2] = v84;
        v88[3] = sub_10006B560;
        v88[4] = v158;
        id v77 = v87;
        swift_retain();
        id v89 = v84;
        sub_100020114(v85, v86, v87, (uint64_t)sub_1000D75E4, (uint64_t)v88);
LABEL_33:
        swift_release();
        swift_release();

        goto LABEL_35;
      }
      char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v83) {
        goto LABEL_40;
      }
      id v145 = [v156 node];
      if (!v145)
      {
        if (v147)
        {
          id v103 = [v156 sourceIdentifier];
          Swift::String v104 = (void *)swift_allocObject();
          Swift::String v105 = v154;
          v104[2] = v154;
          v104[3] = sub_10006B560;
          v104[4] = v158;
          uint64_t v106 = *(void **)&v105[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
          uint64_t v107 = *(void *)&v105[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
          Swift::String v108 = (void *)swift_allocObject();
          v108[2] = sub_1000D754C;
          uint64_t v108[3] = v104;
          v108[4] = v103;
          v108[5] = v105;
          unint64_t v164 = (uint64_t (*)())sub_1000D76F8;
          unint64_t v165 = v108;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v161 = 1107296256;
          uint64_t v162 = sub_1000704F8;
          uint64_t v163 = &unk_100698A50;
          id v109 = _Block_copy(&aBlock);
          id v110 = v105;
          swift_retain();
          unint64_t v111 = v110;
          swift_retain();
          id v112 = v103;
          swift_release();
          [v106 retrieveSourcesForConfiguration:v107 usingBlock:v109];
          _Block_release(v109);
          swift_release();
          swift_release();

          goto LABEL_35;
        }
        unint64_t v113 = (void *)swift_allocObject();
        uint64_t v114 = v158;
        v113[2] = sub_10006B560;
        v113[3] = v114;
        uint64_t v41 = v156;
        unsigned char v113[4] = v156;
        unint64_t v42 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        uint64_t v115 = (void *)swift_allocObject();
        v115[2] = sub_10006B55C;
        v115[3] = v113;
        v115[4] = v41;
        unint64_t v164 = (uint64_t (*)())sub_1000BB094;
        unint64_t v165 = v115;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v161 = 1107296256;
        uint64_t v44 = &unk_1006989D8;
        goto LABEL_15;
      }
      uint64_t v90 = swift_allocObject();
      uint64_t v144 = (char *)v90;
      *(unsigned char *)(v90 + 16) = 0;
      unint64_t v91 = (unsigned char *)(v90 + 16);
      uint64_t v92 = swift_allocObject();
      uint64_t v142 = v92;
      *(unsigned char *)(v92 + 16) = 0;
      uint64_t v93 = (unsigned char *)(v92 + 16);
      uint64_t v147 = swift_allocObject();
      *(void *)(v147 + 16) = 0;
      uint64_t v94 = swift_allocObject();
      uint64_t v143 = v94;
      *(unsigned char *)(v94 + 16) = 0;
      uint64_t v141 = (unsigned char *)(v94 + 16);
      uint64_t v95 = dispatch_group_create();
      swift_getObjectType();
      if ((DOCNode.isFPItem.getter() & 1) == 0
        || (id v96 = objc_msgSend(v145, "fpfs_fpItem")) == 0)
      {
        *unint64_t v91 = 1;
        unsigned char *v93 = 1;
        goto LABEL_54;
      }
      uint64_t v97 = v96;
      dispatch_group_enter(v95);
      uint64_t v98 = (void *)swift_allocObject();
      uint64_t v99 = v142;
      v98[2] = v144;
      v98[3] = v99;
      v98[4] = v95;
      swift_retain_n();
      swift_retain_n();
      uint64_t v100 = v95;
      if (([v97 isRootItem] & 1) == 0
        && ![v97 isCollaborationInvitation])
      {
        uint64_t v116 = swift_allocObject();
        *(void *)(v116 + 16) = sub_10023A454;
        *(void *)(v116 + 24) = v98;
        swift_retain();
        FPItemManager.doc_refetchItem(_:completion:)();
        swift_release();
        swift_release();
        goto LABEL_53;
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      *uint64_t v12 = static OS_dispatch_queue.main.getter();
      uint64_t v101 = v146;
      ((void (*)(uint64_t *, void, uint64_t))v146[13])(v12, enum case for DispatchPredicate.onQueue(_:), v10);
      char v102 = _dispatchPreconditionTest(_:)();
      ((void (*)(uint64_t *, uint64_t))v101[1])(v12, v10);
      if (v102)
      {
        swift_beginAccess();
        v144[16] = 1;
        swift_beginAccess();
        unsigned char *v93 = 1;
        dispatch_group_leave(v100);
        swift_release();
LABEL_53:
        swift_release();

        swift_release();
LABEL_54:
        dispatch_group_enter(v95);
        uint64_t v117 = (void *)swift_allocObject();
        uint64_t v118 = v147;
        uint64_t v119 = v143;
        v117[2] = v147;
        v117[3] = v119;
        v117[4] = v95;
        long long v120 = *(void **)&v154[OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver];
        objc_super v121 = (void *)swift_allocObject();
        v121[2] = sub_1000D753C;
        v121[3] = v117;
        id v122 = v156;
        v121[4] = v156;
        unint64_t v164 = sub_1000BB090;
        unint64_t v165 = v121;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v161 = 1107296256;
        uint64_t v146 = &v162;
        uint64_t v162 = sub_1000704F8;
        uint64_t v163 = &unk_100698B18;
        uint64_t v123 = _Block_copy(&aBlock);
        id v124 = v122;
        uint64_t v156 = v95;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        [v120 retrieveAllSourcesCompletionBlock:v123];
        _Block_release(v123);
        swift_release();
        uint64_t v125 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v126 = (void *)swift_allocObject();
        v126[2] = v125;
        v126[3] = v118;
        v126[4] = v144;
        v126[5] = v124;
        v126[6] = v145;
        v126[7] = sub_10006B560;
        v126[8] = v158;
        swift_beginAccess();
        if (*v93 == 1)
        {
          unint64_t v127 = v141;
          swift_beginAccess();
          if (*v127 == 1)
          {
            uint64_t v128 = v157;
            swift_retain();
            id v129 = v124;
            swift_retain();
            int v130 = v144;
            swift_retain();
            uint64_t v131 = v147;
            swift_retain();
            swift_retain();
            id v132 = v145;
            swift_unknownObjectRetain();
            sub_100238144(v125, v131, v130, v129, v132, v155, v128);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
            swift_release();
            swift_release();

            swift_release_n();
            return;
          }
        }
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        uint64_t v133 = v124;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_unknownObjectRetain();
        uint64_t v134 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v135 = swift_allocObject();
        *(void *)(v135 + 16) = sub_1000D7520;
        *(void *)(v135 + 24) = v126;
        unint64_t v164 = sub_1000D8564;
        unint64_t v165 = (void *)v135;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v161 = 1107296256;
        uint64_t v162 = sub_1000666D8;
        uint64_t v163 = &unk_100698B90;
        id v136 = _Block_copy(&aBlock);
        swift_retain();
        id v137 = v148;
        static DispatchQoS.unspecified.getter();
        id v159 = _swiftEmptyArrayStorage;
        sub_100076EA4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        int v138 = v150;
        uint64_t v139 = v153;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v140 = v156;
        OS_dispatch_group.notify(qos:flags:queue:execute:)();
        _Block_release(v136);

        swift_unknownObjectRelease();
        swift_release();

        (*(void (**)(char *, uint64_t))(v152 + 8))(v138, v139);
        (*(void (**)(char *, uint64_t))(v149 + 8))(v137, v151);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_35:
        swift_release();
        return;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_60;
  }
  swift_bridgeObjectRelease_n();
LABEL_5:

  static Logger.UI.getter();
  unint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    BOOL v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "We don't have to prepare the parent hierarchy for Empty Location", v29, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  uint64_t v30 = v156;
  ((void (*)(void))v155)();
  swift_release();
  swift_release();
}

uint64_t type metadata accessor for DOCDocumentManager()
{
  return self;
}

void sub_10006415C()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v5 = v0;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v6, v7))
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_5:
    uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    if (v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
    {
      uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
      id v14 = v12;
      sub_1003ACB74();
      if (qword_100705120 != -1) {
        swift_once();
      }
      uint64_t v15 = qword_100737460;
      uint64_t v16 = *(NSObject **)(qword_100737460 + 24);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v14;
      *(void *)(v17 + 24) = v15;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_1001A1764;
      *(void *)(v18 + 24) = v17;
      aBlock[4] = (uint64_t)sub_1000879B8;
      aBlock[5] = v18;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100087990;
      void aBlock[3] = (uint64_t)&unk_100694FD0;
      uint64_t v19 = _Block_copy(aBlock);
      swift_retain();
      sub_10007896C(v12, v13, 1);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v16, v19);
      _Block_release(v19);
      LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      sub_1000C71C8(v12, v13, 1);
      if ((v16 & 1) == 0) {
        goto LABEL_11;
      }
      __break(1u);
    }
    id v20 = v12;
    [v20 doc_startObserving];

LABEL_11:
    sub_100064614();
    return;
  }
  uint64_t v23 = v1;
  uint64_t v8 = swift_slowAlloc();
  id v21 = (void *)swift_slowAlloc();
  uint64_t v22 = swift_slowAlloc();
  aBlock[0] = v22;
  *(_DWORD *)uint64_t v8 = 136446722;
  unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v9)
  {
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10009B0E4(v10, v9, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v24 = sub_10009B0E4(0xD000000000000010, 0x80000001005D9210, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v24 = (uint64_t)v5;
    uint64_t v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
    goto LABEL_5;
  }

  __break(1u);
}

void sub_100064614()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v5 = v0;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v29 = v1;
    uint64_t v8 = swift_slowAlloc();
    unint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v31 = v28;
    *(_DWORD *)uint64_t v8 = 136446722;
    unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v9)
    {

      __break(1u);
      return;
    }
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10009B0E4(v10, v9, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v30 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005D91D0, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v30 = (uint64_t)v5;
    uint64_t v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v27 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v29);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if (v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
  {
    uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    uint64_t v31 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
    swift_getKeyPath();
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(void *)(v16 + 24) = v15;
    id v17 = v12;
    uint64_t v18 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
    uint64_t v19 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation];
    *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = v18;

    sub_1000C71C8(v12, v13, 1);
  }
  else
  {
    id v20 = v12;
    uint64_t v31 = (uint64_t)v20;
    swift_getKeyPath();
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v22;
    uint64_t v24 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
    uint64_t v25 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation];
    *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = v24;
  }
}

void sub_100064AD8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC5Files16DOCNavigationBar_overrideScrollEdgeAppearance;
  id v5 = *(void **)&v2[OBJC_IVAR____TtC5Files16DOCNavigationBar_overrideScrollEdgeAppearance];
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCNavigationBar_overrideScrollEdgeAppearance] = a1;
  id v9 = a1;
  if (v3)
  {
    if (v5)
    {
      sub_10009E6C4(0, &qword_10071C9C8);
      id v6 = v5;
      id v7 = v9;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_9;
      }
      uint64_t v3 = *(void **)&v2[v4];
    }
    goto LABEL_7;
  }
  if (v5)
  {
    uint64_t v3 = 0;
LABEL_7:
    [v2 setScrollEdgeAppearance:v3];
  }
  id v6 = v5;
LABEL_9:
}

void sub_100064C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100064F2C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100065094(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1000653CC()
{
  id v1 = [v0 configuration];
  unsigned __int8 v2 = [v1 forPickingDocuments];

  if (v2)
  {
    BOOL v3 = 0;
  }
  else
  {
    uint64_t v4 = (char *)[v0 dataSource];
    uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

    BOOL v3 = v5 != 2;
  }
  id v6 = [v0 internalNavigationController];
  id v7 = [v6 navigationBar];

  [v7 setPrefersLargeTitles:v3];
}

void sub_100065510()
{
  if (DOCDebugMenuEnabled())
  {
    id v1 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v0 action:"presentDebugMenuForLongPress:"];
    [v1 setNumberOfTouchesRequired:2];
    id v2 = [v0 internalNavigationController];
    type metadata accessor for DOCFullDocumentManagerNavigationController();
    id v3 = [(id)swift_dynamicCastClassUnconditional() navigationBar];

    [v3 addGestureRecognizer:v1];
  }
}

void sub_100065654()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009D098(v2, (uint64_t)qword_100708498);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  id v7 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(void *)&v10[-1] = v1;
  dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

  swift_release();
  if (qword_100704EB8 != -1) {
    swift_once();
  }
  memset(v10, 0, sizeof(v10));
  id v9 = [self mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_100705D60);
  sub_1000658C0();
}

void sub_1000658C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (byte_100708490 == 1)
  {
    id v6 = [objc_allocWithZone((Class)_s13FocusBackstopCMa()) initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_1000CBE70((uint64_t *)&unk_1007084D0);
    uint64_t v7 = qword_100704E88;
    id v8 = v6;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10009D098(v2, (uint64_t)qword_100708498);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    uint64_t v10 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_getKeyPath();
    v14[1] = v6;
    id v11 = v8;
    dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();

    id v12 = [v1 view];
    if (v12)
    {
      uint64_t v13 = v12;
      [v12 addSubview:v11];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100065C14(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100065D5C(char a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 traitCollection];
  BOOL v5 = sub_1000951EC(1);

  if (!v5) {
    return;
  }
  id v6 = sub_1000876F0();
  uint64_t v7 = (char *)[v2 effectiveBrowserViewController];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = (id *)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v10 = *v9;
    if (!v10)
    {

      goto LABEL_9;
    }
    type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v11 = swift_dynamicCastClass();
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = v10;

      id v10 = *(id *)(v12 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
      goto LABEL_9;
    }
  }
  id v10 = 0;
LABEL_9:
  uint64_t v14 = (char *)[v2 dataSource];
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v15 == 2 && (sub_100109124(2, (uint64_t)v6) & 1) == 0)
  {
    if (v10) {
      uint64_t v16 = (id *)[v10 identifier];
    }
    else {
      uint64_t v16 = 0;
    }
    DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(1, 0, v16);
  }
  id v17 = (char *)[v2 displayModeHandler];
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
  int v19 = v17[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode + 8];

  if (v19 == 1
    || (id v20 = (char *)[v2 dataSource],
        uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle],
        v20,
        v21 == 2)
    || v18 != 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = sub_100109124(2, (uint64_t)v6);
    swift_bridgeObjectRelease();
    if (v22)
    {
      if (v10) {
        id v23 = [v10 identifier];
      }
      else {
        id v23 = 0;
      }
      sub_100173B14(2, v23);
    }
  }
  uint64_t v24 = (char *)[v2 effectiveBrowserViewController];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = (void **)&v24[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    unint64_t v27 = *v26;
    if (*v26
      && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v28 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v29 = (unsigned char *)v28;
      id v30 = v27;

      v29[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = a1 & 1;
      id v31 = [v29 viewIfLoaded];
      id v32 = [v31 window];

      if (v32) {
        sub_1000A6988();
      }
    }
    else
    {
      id v30 = v25;
    }
  }
}

void sub_1000662F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000666D8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_100066720()
{
  sub_100066728(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100066728(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (char *)Strong;
    sub_100094988();
    uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    if (v5) {
      BOOL v6 = v5 == a2;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
      if (v7)
      {
        id v8 = [v7 preferredContentSizeCategory];
        char v9 = UIContentSizeCategory.isAccessibilityCategory.getter();

        if (v9)
        {
          id v10 = *(void **)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags];
          *(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;
        }
      }
      uint64_t v11 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      uint64_t v12 = *(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
      if ((v12 & 0x100) == 0)
      {
        v12 |= 0x100uLL;
        *(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v12;
      }
      if (!*(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
        && !sub_1000CBC64())
      {
        *(void *)&v4[v11] = 0;
        sub_100090F98(v12, (uint64_t)v4);
      }
    }
  }
}

void sub_100066840()
{
}

void sub_100066848()
{
  type metadata accessor for DOCServiceDocumentBrowserViewController();
  uint64_t v0 = UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)();
  if (v0)
  {
    id v1 = (id)v0;
    sub_100448478(0);
  }
}

uint64_t type metadata accessor for DOCServiceDocumentBrowserViewController()
{
  return self;
}

void sub_1000668E0()
{
}

void sub_1000668E8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v2 = [Strong effectiveSearchController];

    if (v2)
    {
      type metadata accessor for DOCPlaceholderSearchController();
      if (([v2 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
      {
        swift_beginAccess();
        uint64_t v3 = swift_unknownObjectWeakLoadStrong();
        if (v3)
        {
          id v4 = (void *)v3;
          id v5 = sub_100066A5C();

          [v5 signal];
        }
      }
    }
  }
}

void sub_1000669C8()
{
  sub_1000669DC(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_1000669DC(uint64_t a1, char *a2, void *a3, char a4, unint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    sub_1000689F0(a5, a2, a3, a4 & 1);
  }
}

id sub_100066A5C()
{
  if ([v0 _postSearchInitializationBufferStorage])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1000A54B0(v4, v5);
    sub_1000A54B0(v5, v4);
    sub_10009E6C4(0, &qword_100708870);
    swift_dynamicCast();
    return (id)v3;
  }
  else
  {
    id v1 = [objc_allocWithZone((Class)DOCPostSearchInitializationBuffer) init];
    [v0 set_postSearchInitializationBufferStorage:v1];
  }
  return v1;
}

uint64_t type metadata accessor for DOCPlaceholderSearchController()
{
  return self;
}

uint64_t sub_100066B70()
{
  return sub_100066B78(*(void *)(v0 + 16));
}

uint64_t sub_100066B78(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_15;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = (char *)*(id *)(a1 + 8 * i + 32);
    }
    BOOL v6 = v5;
    uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v7)
    {
      id v8 = v7;
      if ((FPProviderDomain.shouldUseDSEnumeration.getter() & 1) != 0 && [v8 isUsingFPFS])
      {
        type metadata accessor for DOCICloudRootNode();
        uint64_t v9 = static DOCICloudRootNode.iCloudRootNode(for:)();

        id v8 = (id)v9;
      }
    }
  }
LABEL_15:

  return swift_bridgeObjectRelease();
}

id sub_100066CBC()
{
  return sub_1000676F8(*(void **)(v0 + 16));
}

void sub_100066CC4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v73 = *(void *)(v2 - 8);
  uint64_t v74 = v2;
  __chkstk_darwin(v2);
  char v71 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for DispatchQoS();
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v69 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  __chkstk_darwin(v5);
  char v66 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v64 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v62 - v11;
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self attributeWithDomain:v13 name:v14];

  id v16 = [self currentProcess];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1005A04F0;
  *(void *)(v17 + 32) = v15;
  aBlock[0] = (id)v17;
  specialized Array._endMutation()();
  id v18 = objc_allocWithZone((Class)RBSAssertion);
  id v65 = v15;
  NSString v19 = String._bridgeToObjectiveC()();
  sub_10009E6C4(0, (unint64_t *)&unk_100716BA0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v21 = [v18 initWithExplanation:v19 target:v16 attributes:isa];

  char v22 = &selRef_doc_adjustForAutomaticKeyboardInfo_animated_lastAdjustment_;
  [v1 setProcessAssertion:v21];

  id v23 = [v1 processAssertion];
  if (v23)
  {
    uint64_t v24 = v23;
    static Logger.UI.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Acquiring background assertion to save last visited location.", v27, 2u);
      swift_slowDealloc();
    }

    id v30 = *(void (**)(void, void))(v8 + 8);
    uint64_t v29 = (uint8_t *)(v8 + 8);
    uint64_t v28 = v30;
    v30(v12, v7);
    aBlock[0] = 0;
    if ([v24 acquireWithError:aBlock])
    {
      id v31 = aBlock[0];
    }
    else
    {
      id v32 = aBlock[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v33 = v64;
      static Logger.UI.getter();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      uint64_t v63 = v34;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        v62[1] = v29;
        os_log_type_t v37 = (uint8_t *)v36;
        unint64_t v38 = (void *)swift_slowAlloc();
        v62[0] = v37;
        *(_DWORD *)os_log_type_t v37 = 138412290;
        swift_errorRetain();
        unint64_t v39 = v28;
        uint64_t v40 = v7;
        uint64_t v41 = (void *)_swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v41;
        char v22 = &selRef_doc_adjustForAutomaticKeyboardInfo_animated_lastAdjustment_;
        uint64_t v33 = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v38 = v41;
        uint64_t v7 = v40;
        uint64_t v28 = v39;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v63, v35, "Failed to aquired background assertion Error %@.", v62[0], 0xCu);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      v28(v33, v7);
      [v1 v22[117]];

      swift_errorRelease();
    }
  }
  unint64_t v42 = dispatch_group_create();
  id v43 = [v1 droppedLocationsAfterSwitchingDisplayMode];
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  unint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v44 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    if (!v45) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v45) {
      goto LABEL_19;
    }
  }
  if (v45 < 1) {
    __break(1u);
  }
  uint64_t v46 = 0;
  do
  {
    if ((v44 & 0xC000000000000001) != 0) {
      id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v47 = *(id *)(v44 + 8 * v46 + 32);
    }
    uint64_t v48 = v47;
    ++v46;
    dispatch_group_enter(v42);
    id v49 = [v1 hierarchyController];
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v42;
    char v51 = v42;
    sub_10022EBF4(v48, 0, 1, 0, 0, (uint64_t)sub_10021FD14, v50);

    swift_release();
  }
  while (v45 != v46);
LABEL_19:
  swift_bridgeObjectRelease_n();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v53 = v66;
  uint64_t v52 = v67;
  uint64_t v54 = v68;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for DispatchQoS.QoSClass.default(_:), v68);
  uint64_t v55 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  char v56 = (void *)swift_allocObject();
  v56[2] = v1;
  aBlock[4] = sub_100066CBC;
  aBlock[5] = v56;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006AD7E0;
  uint64_t v57 = _Block_copy(aBlock);
  id v58 = v1;
  uint64_t v59 = v69;
  static DispatchQoS.unspecified.getter();
  uint64_t v75 = _swiftEmptyArrayStorage;
  sub_100073F9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v60 = v71;
  uint64_t v61 = v74;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v57);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v72);
  swift_release();
  [v58 clearDroppedLocationsAfterSwitchingViewStyle];
}

id sub_1000676F8(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Invalidating background assertion, our work is done here.", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = [a1 processAssertion];
  [v9 invalidate];

  return [a1 setProcessAssertion:0];
}

uint64_t sub_100067928()
{
  return sub_100067930(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100067930(uint64_t a1, char *a2)
{
  uint64_t v40 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  unint64_t v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v38);
  os_log_type_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(a1 + 16);
  if (v44)
  {
    uint64_t v9 = *(void *)&a2[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state];
    uint64_t v42 = a1 + 32;
    uint64_t v43 = v9;
    uint64_t v45 = &v51;
    uint64_t v36 = (void (**)(char *, uint64_t))(v4 + 8);
    os_log_type_t v35 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v34 = a1;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v41 = (char *)&type metadata for () + 8;
    uint64_t v11 = v37;
    do
    {
      uint64_t v12 = swift_allocObject();
      long long v48 = *(_OWORD *)(v42 + 16 * v10);
      *(_OWORD *)(v12 + 16) = v48;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_100500F7C;
      *(void *)(v13 + 24) = v12;
      char v57 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = 0;
      uint64_t v14 = __chkstk_darwin(v13);
      *((unsigned char *)&v34 - 48) = 0;
      *(&v34 - 5) = (uint64_t)sub_100363E10;
      *(&v34 - 4) = v14;
      *(&v34 - 3) = (uint64_t)&v57;
      *(&v34 - 2) = (uint64_t)&v55;
      uint64_t v15 = *((void *)&v48 + 1);
      swift_retain_n();
      dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();
      uint64_t v16 = v55;
      if (v55)
      {
        uint64_t v17 = v56;
        uint64_t v18 = *(void *)(v55 + 16);
        uint64_t v47 = v13;
        *(void *)&long long v48 = v15;
        if (v18)
        {
          uint64_t v19 = swift_bridgeObjectRetain();
          sub_1000B0094(v19);
          uint64_t v20 = v16 + 40;
          do
          {
            id v21 = *(void (**)(uint64_t))(v20 - 8);
            uint64_t v22 = swift_retain();
            v21(v22);
            swift_release();
            v20 += 16;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        swift_bridgeObjectRetain_n();
        uint64_t v46 = static OS_dispatch_queue.main.getter();
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v17;
        *(void *)(v23 + 24) = a2;
        uint64_t v53 = (void (*)())sub_10050137C;
        uint64_t v54 = v23;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        char v51 = sub_1000666D8;
        uint64_t v52 = &unk_1006B3D20;
        uint64_t v24 = _Block_copy(&aBlock);
        uint64_t v25 = a2;
        swift_release();
        static DispatchQoS.unspecified.getter();
        uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
        sub_1000BAE4C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        os_log_type_t v26 = v39;
        unint64_t v27 = a2;
        uint64_t v28 = v40;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v29 = (void *)v46;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v24);

        uint64_t v30 = v28;
        a2 = v27;
        (*v36)(v26, v30);
        (*v35)(v11, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      if (v57 == 1)
      {
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = a2;
        uint64_t v53 = sub_100067F0C;
        uint64_t v54 = v31;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        char v51 = sub_1000666D8;
        uint64_t v52 = &unk_1006B3CD0;
        id v32 = _Block_copy(&aBlock);
        uint64_t v33 = a2;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v32);
      }
      ++v10;
      sub_10008937C(v55);
      swift_release();
      swift_release();
    }
    while (v10 != v44);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100067F0C()
{
  sub_100067F14(*(void *)(v0 + 16));
}

void sub_100067F14(uint64_t a1)
{
  id v2 = [self defaultCenter];
  id v3 = v2;
  if (qword_100705280 != -1)
  {
    swift_once();
    id v2 = v3;
  }
  [v2 postNotificationName:qword_1007376B0 object:a1];
}

uint64_t sub_100067FC0()
{
  return sub_100067FC8(v0);
}

uint64_t sub_100067FC8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  id v3 = *(void (**)(uint64_t))(a1 + 16);
  if (v3)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    return sub_1000A7258((uint64_t)v3);
  }
  return result;
}

uint64_t sub_100068034()
{
  return sub_1000AD57C(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_100068040(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    int v61 = a4;
    uint64_t v15 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v60 = sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0230;
    uint64_t v59 = type metadata accessor for DOCBrowserContainerController();
    *(void *)(v16 + 56) = v59;
    uint64_t v58 = sub_100076EEC(&qword_100711808, v17, (void (*)(uint64_t))type metadata accessor for DOCBrowserContainerController);
    *(void *)(v16 + 64) = v58;
    *(void *)(v16 + 32) = v5;
    uint64_t v62 = v5;
    unint64_t v18 = sub_1000696E0(a2, a3);
    uint64_t v20 = v19;
    *(void *)(v16 + 96) = &type metadata for String;
    unint64_t v21 = sub_100073F48();
    *(void *)(v16 + 104) = v21;
    *(void *)(v16 + 72) = v18;
    *(void *)(v16 + 80) = v20;
    sub_10009B208(a1, (uint64_t)v65);
    sub_1000CBE70((uint64_t *)&unk_100711810);
    swift_dynamicCast();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    switch(a3)
    {
      case 1:
        unint64_t v57 = v21;
        id v24 = v62;
        if (a2)
        {
          uint64_t v25 = (id *)&v62[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          id v23 = *v25;
          id v26 = *v25;
          unint64_t v22 = 1;
        }
        else
        {
          id v23 = 0;
          unint64_t v22 = 3;
        }
        goto LABEL_15;
      case 2:
        id v27 = v62;
        id v28 = [v62 parentViewController];
        if (!v28) {
          goto LABEL_26;
        }
        uint64_t v29 = v28;
        type metadata accessor for DOCColumnViewController(0);
        uint64_t v30 = swift_dynamicCastClass();
        if (v30)
        {
          uint64_t v31 = (void *)v30;
          sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
          id v32 = v29;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v31 setToolbarItems:isa];
        }
        else
        {

LABEL_26:
          sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
          Class v56 = Array._bridgeToObjectiveC()().super.isa;
          [v27 setToolbarItems:v56];
        }
        break;
      case 3:
        id v34 = [v62 navigationController];
        if (v34)
        {
          os_log_type_t v35 = v34;
          [v34 setToolbarHidden:(a2 & 1) == 0 animated:0];
        }
        return;
      case 4:
        unint64_t v57 = v21;
        id v23 = 0;
        if (a2) {
          unint64_t v22 = 2;
        }
        else {
          unint64_t v22 = 4;
        }
        goto LABEL_14;
      default:
        unint64_t v57 = v21;
        unint64_t v22 = a2;
        swift_errorRetain();
        id v23 = 0;
LABEL_14:
        id v24 = v62;
LABEL_15:
        sub_10006927C(v22);
        uint64_t v36 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_10059B760;
        uint64_t v38 = v58;
        *(void *)(v37 + 56) = v59;
        *(void *)(v37 + 64) = v38;
        *(void *)(v37 + 32) = v24;
        switch(v22)
        {
          case 0uLL:
            id v39 = v24;
            unint64_t v40 = 0xE700000000000000;
            unint64_t v41 = 0x676E6964616F6CLL;
            break;
          case 1uLL:
            id v51 = v24;
            unint64_t v40 = 0xE700000000000000;
            unint64_t v41 = 0x746E65746E6F63;
            break;
          case 2uLL:
            id v52 = v24;
            unint64_t v40 = 0x80000001005EA550;
            unint64_t v41 = 0xD000000000000010;
            break;
          case 3uLL:
            id v53 = v24;
            unint64_t v40 = 0xE500000000000000;
            unint64_t v41 = 0x7974706D65;
            break;
          case 4uLL:
            id v54 = v24;
            unint64_t v40 = 0xEA0000000000676ELL;
            unint64_t v41 = 0x697265766F636572;
            break;
          default:
            id v42 = v24;
            sub_10006947C(v22);
            uint64_t v43 = (void *)_convertErrorToNSError(_:)();
            id v44 = [v43 domain];
            uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v46 = v45;

            id v63 = [v43 code];
            uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
            id v49 = v48;
            id v63 = (id)v60;
            unint64_t v64 = v46;
            swift_bridgeObjectRetain();
            v50._uint64_t countAndFlagsBits = v47;
            v50._unint64_t object = v49;
            String.append(_:)(v50);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1000686AC(v22);
            unint64_t v41 = (unint64_t)v63;
            unint64_t v40 = v64;
            break;
        }
        unint64_t v55 = v57;
        *(void *)(v37 + 96) = &type metadata for String;
        *(void *)(v37 + 104) = v55;
        *(void *)(v37 + 72) = v41;
        *(void *)(v37 + 80) = v40;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        sub_1000686CC(v22, v23, v61 & 1);

        sub_1000686AC(v22);
        sub_1000686AC(v22);
        break;
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1000686AC(unint64_t result)
{
  if (result != 5) {
    return sub_1000686BC(result);
  }
  return result;
}

unint64_t sub_1000686BC(unint64_t result)
{
  if (result >= 5) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1000686CC(unint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  char v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue];
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v4;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a3;
  *(void *)(v16 + 48) = a1;
  aBlock[4] = sub_1000669C8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006A2FC8;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a2;
  swift_retain();
  uint64_t v19 = v4;
  sub_10006927C(a1);
  static DispatchQoS.unspecified.getter();
  id v23 = _swiftEmptyArrayStorage;
  sub_100076EEC((unint64_t *)&qword_100706770, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  swift_release();
  return swift_release();
}

void sub_1000689F0(unint64_t a1, char *a2, void *a3, char a4)
{
  uint64_t v8 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state;
  unint64_t v9 = *(void *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state];
  if (v9 != 5)
  {
    sub_10006927C(a1);
    sub_10006947C(v9);
    char v10 = sub_10006AAD0(v9, a1);
    sub_1000686BC(a1);
    sub_1000686AC(v9);
    if (v10) {
      return;
    }
    unint64_t v11 = *(void *)&a2[v8];
    if (v11 != 5)
    {
      sub_10006947C(*(void *)&a2[v8]);
      char v12 = sub_100069FE0(v11, a1);
      sub_1000686AC(v11);
      if ((v12 & 1) == 0) {
        return;
      }
    }
  }
  uint64_t v58 = a3;
  if (!a3)
  {
    uint64_t v13 = *(void *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v58 = (void *)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v13 + 8))(a1, ObjectType, v13);
    if (!v58) {
      return;
    }
  }
  uint64_t v15 = *(NSObject **)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue];
  unint64_t v55 = a3;
  id v16 = a3;
  dispatch_suspend(v15);
  uint64_t v17 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1005A0030;
  uint64_t aBlock = 0;
  unint64_t v61 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  unint64_t v66 = a1;
  _print_unlocked<A, B>(_:_:)();
  v19._uint64_t countAndFlagsBits = 0x747320646C6F202CLL;
  v19._unint64_t object = (void *)0xEC00000020657461;
  String.append(_:)(v19);
  unint64_t v66 = *(void *)&a2[v8];
  sub_10006947C(v66);
  sub_1000CBE70(&qword_100711830);
  v20._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = sub_100073F48();
  *(void *)(v18 + 32) = 0;
  *(void *)(v18 + 40) = 0xE000000000000000;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  unint64_t v21 = *(void *)&a2[v8];
  *(void *)&a2[v8] = a1;
  sub_10006927C(a1);
  sub_1000686AC(v21);
  id v22 = [a2 childViewControllers];
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v57 = a1;
  char v56 = a4;
  if (v23 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v24)
    {
LABEL_9:
      uint64_t v59 = (id *)&a2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v25 = 4;
      do
      {
        if ((v23 & 0xC000000000000001) != 0) {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v27 = *(id *)(v23 + 8 * v25);
        }
        id v28 = v27;
        uint64_t v29 = v25 - 3;
        if (__OFADD__(v25 - 4, 1))
        {
          __break(1u);
          goto LABEL_39;
        }
        if (*v59
          && (id v30 = *v59, v31 = static NSObject.== infix(_:_:)(), v30, (v31 & 1) != 0))
        {
          id v32 = [v28 view];
          if (!v32)
          {
            __break(1u);
LABEL_53:
            __break(1u);
            return;
          }
          id v26 = v32;
          [v32 setHidden:1];
          id v33 = v28;
        }
        else
        {
          id v33 = [v28 presentedViewController];
          if (v33
            && ((uint64_t aBlock = swift_getObjectType(),
                 sub_1000CBE70(&qword_100711838),
                 uint64_t v34 = String.init<A>(describing:)(),
                 uint64_t v36 = v35,
                 type metadata accessor for DOCDocumentPickerViewController(),
                 swift_dynamicCastClass())
             || (self, swift_dynamicCastObjCClass())
             || v34 == 0xD000000000000027 && v36 == 0x80000001005EA7C0))
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v33 && (v37 & 1) == 0) {
              [v33 dismissViewControllerAnimated:0 completion:0];
            }
          }
          if ([a2 _appearState] == 1
            || [a2 _appearState] == 2)
          {
            [v28 beginAppearanceTransition:0 animated:0];
          }
          sub_100334518(v28);
          if ([a2 _appearState] == 1
            || [a2 _appearState] == 2
            || [a2 _appearState] == 3)
          {
            [v28 endAppearanceTransition];
          }
          id v26 = v28;
        }

        ++v25;
      }
      while (v29 != v24);
    }
  }
  swift_bridgeObjectRelease();
  id v38 = [a2 presentedViewController];
  if (v38)
  {
    id v39 = v38;
    type metadata accessor for DOCGetInfoErrorPresentingViewController();
    unint64_t v40 = (void *)swift_dynamicCastClass();
    if (v40) {
      [v40 dismissViewControllerAnimated:0 completion:0];
    }
  }
  id v41 = v58;
  sub_10006928C(v58);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = a2;
  *(void *)(v42 + 24) = v41;
  uint64_t v43 = (void *)swift_allocObject();
  void v43[2] = a2;
  void v43[3] = v57;
  v43[4] = v41;
  id v44 = v41;
  unint64_t v45 = a2;
  sub_10006927C(v57);
  unint64_t v46 = v44;
  uint64_t v47 = v45;
  sub_10009DE78(v46, (char)[v47 isViewLoaded]);
  if (!v55)
  {
    uint64_t v48 = *(void *)&v47[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    uint64_t v49 = swift_getObjectType();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 16))(v57, v49, v48);
  }
  sub_100069ADC();
  if (v56)
  {
    Swift::String v50 = [v47 view];
    if (!v50) {
      goto LABEL_53;
    }
    id v51 = v50;
    id v52 = self;
    unint64_t v64 = sub_1000D62C4;
    id v65 = (void *)v42;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v61 = 1107296256;
    uint64_t v62 = sub_1000666D8;
    id v63 = &unk_1006A3040;
    id v53 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    unint64_t v64 = sub_1000D62CC;
    id v65 = v43;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v61 = 1107296256;
    uint64_t v62 = sub_10000A884;
    id v63 = &unk_1006A3068;
    id v54 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v52 transitionWithView:v51 duration:5242880 options:v53 animations:v54 completion:0.2];
    swift_release();
    swift_release();

    _Block_release(v54);
    _Block_release(v53);
  }
  else
  {
    id v51 = v46;
    sub_1000695FC(v58);
    sub_10006928C(0);
    sub_10006948C(v47, v57, (uint64_t)v51);
    swift_release();
    swift_release();
  }
}

unint64_t sub_10006927C(unint64_t result)
{
  if (result >= 5) {
    return swift_errorRetain();
  }
  return result;
}

void sub_10006928C(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  id v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = v2;
    if (Strong)
    {
      type metadata accessor for DOCBrowserContainedViewController();
      id v4 = Strong;
      id v5 = v3;
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        goto LABEL_9;
      }
    }
    else
    {
    }
LABEL_8:
    sub_10006936C();
    id v4 = Strong;
LABEL_9:

    goto LABEL_10;
  }
  if (Strong) {
    goto LABEL_8;
  }
LABEL_10:
}

void sub_10006936C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v2 = Strong;
  if (Strong) {
    goto LABEL_4;
  }
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    id v2 = v3;
LABEL_4:
    id v4 = Strong;
    id v5 = [v2 contentScrollViewForEdge:1];

    goto LABEL_5;
  }
  id v5 = 0;
  id v2 = 0;
LABEL_5:
  [v0 setContentScrollView:v5 forEdge:1];

  if (v2) {
    id v6 = [v2 contentScrollViewForEdge:4];
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;
  [v0 setContentScrollView:forEdge:];
}

unint64_t sub_10006947C(unint64_t result)
{
  if (result != 5) {
    return sub_10006927C(result);
  }
  return result;
}

void sub_10006948C(char *a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void (**)(uint64_t))&a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
  if (v5)
  {
    swift_retain();
    v5(a2);
    sub_1000A7258((uint64_t)v5);
  }
  id v7 = [self defaultCenter];
  if (qword_100704F48 != -1) {
    swift_once();
  }
  [v7 postNotificationName:qword_100736F28 object:a3];

  id v8 = [a1 viewIfLoaded];
  id v9 = [v8 window];

  id v10 = [v9 rootViewController];
  [v10 setNeedsFocusUpdate];

  unint64_t v11 = *(NSObject **)&a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue];

  dispatch_resume(v11);
}

void sub_1000695FC(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  id v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    id v3 = v2;
    if (Strong)
    {
      type metadata accessor for DOCBrowserContainedViewController();
      id v4 = Strong;
      id v5 = v3;
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        goto LABEL_9;
      }
    }
    else
    {
    }
LABEL_8:
    sub_100035508();
    sub_10006936C();
    id v4 = Strong;
LABEL_9:

    goto LABEL_10;
  }
  if (Strong) {
    goto LABEL_8;
  }
LABEL_10:
}

unint64_t sub_1000696E0(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD00000000000001BLL;
      uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
      goto LABEL_13;
    case 2:
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000012;
      sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      uint64_t v5 = Array.description.getter();
      goto LABEL_13;
    case 3:
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD00000000000001ALL;
      if (a1) {
        uint64_t v5 = 1702195828;
      }
      else {
        uint64_t v5 = 0x65736C6166;
      }
      if (a1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      unint64_t v6 = v7;
LABEL_13:
      String.append(_:)(*(Swift::String *)&v5);
      swift_bridgeObjectRelease();
      v8._uint64_t countAndFlagsBits = 41;
      v8._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v8);
      return v10;
    case 4:
      if (a1) {
        return 0xD000000000000017;
      }
      else {
        return 0xD000000000000019;
      }
    default:
      unint64_t v10 = 0;
      swift_errorRetain();
      _StringGuts.grow(_:)(21);
      v3._unint64_t object = (void *)0x80000001005EA720;
      v3._uint64_t countAndFlagsBits = 0xD000000000000012;
      String.append(_:)(v3);
      sub_1000CBE70((uint64_t *)&unk_1007076D0);
      _print_unlocked<A, B>(_:_:)();
      v4._uint64_t countAndFlagsBits = 41;
      v4._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v4);
      sub_100336DE8(a1, 0);
      return v10;
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.didMove(toParent:)(UIViewController_optional toParent)
{
  id v2 = v1;
  Class isa = toParent.value.super.super.isa;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super didMoveToParentViewController:isa];
  id v4 = [v2 parentViewController];
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for DOCColumnViewController(0);
    uint64_t v6 = swift_dynamicCastClass();

    if (v6)
    {
      unint64_t v7 = (void **)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      Swift::String v8 = *v7;
      if (*v7)
      {
        v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v9 = v8;
        id v10 = [v9 viewIfLoaded];
        id v11 = [v10 window];

        if (v11) {
          sub_1000A6988();
        }
      }
    }
  }
  sub_100069ADC();
}

void sub_100069ADC()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    id v9 = v1;
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    sub_100069BE0(ObjectType, v2);
    if (v4)
    {
      id v5 = [v9 view];
      if (!v5)
      {
        __break(1u);
        return;
      }
      uint64_t v6 = v5;
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 setAccessibilityIdentifier:v7];

      Swift::String v8 = v7;
    }
    else
    {
      Swift::String v8 = v9;
    }
  }
}

uint64_t sub_100069BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 48))();
  Swift::String v3 = (void *)v2;
  uint64_t v5 = v4;
  NSString v7 = v6;
  uint64_t v8 = v2;
  unint64_t v9 = v2;
  if (!v2)
  {
LABEL_5:
    if (!v7) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  if (v2 == 1) {
    return 0;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  objc_super v12 = v11;
  if (String.count.getter() >= 1)
  {
    v13._uint64_t countAndFlagsBits = v10;
    v13._unint64_t object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0x203A656372756F53;
    unint64_t v9 = 0xE800000000000000;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  if (!v7) {
    goto LABEL_10;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  if (String.count.getter() >= 1)
  {
    v14._uint64_t countAndFlagsBits = v5;
    v14._unint64_t object = v7;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    uint64_t v16 = 0x203A656C746954;
    unint64_t v15 = 0xE700000000000000;
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v16 = 0;
  unint64_t v15 = 0;
LABEL_11:
  sub_1000CBE70((uint64_t *)&unk_100708C00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = v16;
  *(void *)(inited + 56) = v15;
  if (!v9)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    if (!v15) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1000825D0(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    uint64_t v18 = sub_1000825D0((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  id v18[2] = v20 + 1;
  unint64_t v21 = &v18[2 * v20];
  v21[4] = v8;
  v21[5] = v9;
  if (v15)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_1000825D0(0, v18[2] + 1, 1, v18);
    }
    unint64_t v23 = v18[2];
    unint64_t v22 = v18[3];
    if (v23 >= v22 >> 1) {
      uint64_t v18 = sub_1000825D0((void *)(v22 > 1), v23 + 1, 1, v18);
    }
    id v18[2] = v23 + 1;
    uint64_t v24 = &v18[2 * v23];
    void v24[4] = v16;
    v24[5] = v15;
  }
LABEL_22:
  swift_release();
  if (!v18[2])
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  id v30 = v18;
  sub_1000CBE70(&qword_10070AEB0);
  sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  uint64_t v25 = self;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v25 browsingRootIdentifierForSourceIdentifier:v26, v30];

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_100069F44()
{
  return 1;
}

id sub_100069F54()
{
  id v1 = *(void **)(v0 + 40);
  id v2 = [v1 sourceIdentifier];
  id v3 = [v1 displayName];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v2;
}

uint64_t sub_100069FE0(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x746E65746E6F63;
  switch(a1)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_5;
    case 1uLL:
      break;
    default:
      swift_errorRetain();
      uint64_t v6 = (void *)_convertErrorToNSError(_:)();
      id v7 = [v6 domain];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v10 = v9;

      [v6 code];
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
      Swift::String v13 = v12;
      swift_bridgeObjectRetain();
      v14._uint64_t countAndFlagsBits = v11;
      v14._unint64_t object = v13;
      String.append(_:)(v14);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a1);
      uint64_t v5 = v8;
      unint64_t v4 = v10;
      break;
  }
  if (v5 == 0x746E65746E6F63 && v4 == 0xE700000000000000)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_5:
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_12;
  }
  unint64_t v16 = 0x80000001005EA550;
  unint64_t v17 = 0xD000000000000010;
  switch(a1)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_11;
    case 2uLL:
      break;
    default:
      swift_errorRetain();
      uint64_t v18 = (void *)_convertErrorToNSError(_:)();
      id v19 = [v18 domain];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      [v18 code];
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v25 = v24;
      swift_bridgeObjectRetain();
      v26._uint64_t countAndFlagsBits = v23;
      v26._unint64_t object = v25;
      String.append(_:)(v26);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a1);
      unint64_t v17 = v20;
      unint64_t v16 = v22;
      break;
  }
  if (v17 == 0xD000000000000010 && v16 == 0x80000001005EA550) {
    goto LABEL_10;
  }
LABEL_11:
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    char v30 = 1;
    return v30 & 1;
  }
LABEL_12:
  unint64_t v28 = 0xE700000000000000;
  uint64_t v29 = 0x676E6964616F6CLL;
  switch(a2)
  {
    case 0uLL:
      goto LABEL_15;
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_18;
    default:
      swift_errorRetain();
      char v31 = (void *)_convertErrorToNSError(_:)();
      id v32 = [v31 domain];
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v35 = v34;

      [v31 code];
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      id v38 = v37;
      swift_bridgeObjectRetain();
      v39._uint64_t countAndFlagsBits = v36;
      v39._unint64_t object = v38;
      String.append(_:)(v39);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a2);
      uint64_t v29 = v33;
      unint64_t v28 = v35;
LABEL_15:
      if (v29 == 0x676E6964616F6CLL && v28 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        char v30 = 0;
      }
      else
      {
LABEL_18:
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        char v30 = v40 ^ 1;
      }
      break;
  }
  return v30 & 1;
}

void sub_10006A558()
{
  sub_10006A560(*(void *)(v0 + 16));
}

void sub_10006A560(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending) = 0;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates) & 1) == 0)
  {
    uint64_t v5 = type metadata accessor for DOCBrowserHistoryItem(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v6 = (void *)static OS_dispatch_queue.main.getter();
    int64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = DOCSplitBrowserViewController.didCommitPreview(of:);
    *(void *)(v7 + 24) = 0;
    sub_1000CC768((uint64_t)v4, 0, v6, (uint64_t)sub_100045FAC, v7);

    swift_release();
    sub_1000CBBA4((uint64_t)v4, &qword_10070E838);
  }
}

void sub_10006A6D4()
{
  sub_10006A6DC(*(unsigned char **)(v0 + 16));
}

void sub_10006A6DC(unsigned char *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v10);
  objc_super v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)v23 - v15;
  if ((a1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] & 1) == 0
    && (a1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] & 1) == 0)
  {
    a1[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_scheduleRefreshUnderlyingNodesPending] = 1;
    uint64_t v27 = v6;
    uint64_t v17 = v14;
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v26 = v3;
    uint64_t v24 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v17 + 8);
    v23[1] = v17 + 8;
    uint64_t v25 = v18;
    v18(v12, v10);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a1;
    aBlock[4] = sub_10006A558;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B35C8;
    uint64_t v20 = _Block_copy(aBlock);
    unint64_t v21 = a1;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000BAE4C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v22 = (void *)v24;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
    v25(v16, v10);
  }
}

uint64_t sub_10006AAD0(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = 0x676E6964616F6CLL;
  unint64_t v5 = 0xE700000000000000;
  uint64_t v6 = 0x676E6964616F6CLL;
  switch(a1)
  {
    case 0uLL:
      goto LABEL_9;
    case 1uLL:
      uint64_t v6 = 0x746E65746E6F63;
      if (a2 > 4) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 2uLL:
      unint64_t v5 = 0x80000001005EA550;
      uint64_t v6 = 0xD000000000000010;
      if (a2 > 4) {
        goto LABEL_13;
      }
      goto LABEL_9;
    case 3uLL:
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x7974706D65;
      goto LABEL_9;
    case 4uLL:
      uint64_t v6 = 0x697265766F636572;
      unint64_t v5 = 0xEA0000000000676ELL;
      if (a2 > 4) {
        goto LABEL_13;
      }
      goto LABEL_9;
    default:
      swift_errorRetain();
      uint64_t v7 = (void *)_convertErrorToNSError(_:)();
      id v8 = [v7 domain];
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v10 = v9;

      [v7 code];
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v13 = v12;
      swift_bridgeObjectRetain();
      v14._uint64_t countAndFlagsBits = v11;
      v14._unint64_t object = v13;
      String.append(_:)(v14);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a1);
      unint64_t v5 = v10;
      if (a2 <= 4)
      {
LABEL_9:
        unint64_t v15 = 0xE700000000000000;
        switch(a2)
        {
          case 0uLL:
            break;
          case 1uLL:
            if (v6 != 0x746E65746E6F63) {
              goto LABEL_22;
            }
            goto LABEL_19;
          case 2uLL:
            unint64_t v15 = 0x80000001005EA550;
            if (v6 != 0xD000000000000010) {
              goto LABEL_22;
            }
            goto LABEL_19;
          case 3uLL:
            unint64_t v15 = 0xE500000000000000;
            uint64_t v4 = 0x7974706D65;
            break;
          case 4uLL:
            unint64_t v15 = 0xEA0000000000676ELL;
            if (v6 != 0x697265766F636572) {
              goto LABEL_22;
            }
            goto LABEL_19;
          default:
            goto LABEL_13;
        }
        if (v6 != v4) {
          goto LABEL_22;
        }
      }
      else
      {
LABEL_13:
        swift_errorRetain();
        unint64_t v16 = (void *)_convertErrorToNSError(_:)();
        id v17 = [v16 domain];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v20 = v19;

        [v16 code];
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v23 = v22;
        swift_bridgeObjectRetain();
        v24._uint64_t countAndFlagsBits = v21;
        v24._unint64_t object = v23;
        String.append(_:)(v24);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000686BC(a2);
        unint64_t v15 = v20;
        if (v6 != v18) {
          goto LABEL_22;
        }
      }
LABEL_19:
      if (v5 == v15)
      {
        char v25 = 1;
        goto LABEL_23;
      }
LABEL_22:
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v25 & 1;
  }
}

void *sub_10006AE38()
{
  return sub_10004ECD4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_10006AE44()
{
  return sub_10006B510((uint64_t (*)(void, void, void, void, void))sub_10006AE5C);
}

void sub_10006AE5C(uint64_t a1, void (*a2)(id), uint64_t a3, unint64_t a4, void *a5)
{
  if (a1)
  {
    uint64_t v6 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
    uint64_t v8 = _convertErrorToNSError(_:)();
    *(void *)(v7 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v7 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v7 + 32) = v8;
LABEL_3:
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    a2(0);
    return;
  }
  id v10 = a5;
  id v13 = sub_10006B068(a4, v10);

  if (!v13)
  {
    uint64_t v6 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
    *(void *)(v11 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    *(void *)(v11 + 64) = sub_1000C5A24((unint64_t *)&qword_10070B688, (unint64_t *)&unk_1007085C0);
    *(void *)(v11 + 32) = v10;
    id v12 = v10;
    goto LABEL_3;
  }
  a2(v13);
}

void *sub_10006B068(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v24 = v2;
    unint64_t v25 = v2 & 0xC000000000000001;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = v25 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v2 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v8 = v3;
      id v9 = [v5 identifier];
      id v10 = [a2 sourceIdentifier];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
      BOOL v15 = v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14;
      if (v15)
      {

        swift_bridgeObjectRelease_n();
LABEL_19:
        swift_bridgeObjectRelease();
        return v6;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_19;
      }
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v17 = swift_dynamicCastClass();
      if (v17)
      {
        uint64_t v18 = *(void **)(v17 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
        if (v18)
        {
          id v19 = v6;
          id v20 = v18;
          id v21 = [a2 sourceIdentifier];
          char v22 = sub_10006B2B0();

          if (v22) {
            goto LABEL_19;
          }
        }
      }

      ++v4;
      uint64_t v3 = v8;
      BOOL v15 = v7 == v8;
      unint64_t v2 = v24;
      if (v15) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10006B2B0()
{
  unsigned int v1 = [v0 isiCloudDriveProvider];
  unsigned int v2 = [v0 isEnterpriseDomain];
  unsigned int v3 = [v0 isHidden];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Bool v5 = String.hasPrefix(_:)(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (v1) {
      return v2 & (v3 ^ 1);
    }
    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v7._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Bool v8 = String.hasPrefix(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (v1) {
      return (v2 | v3) ^ 1;
    }
    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v9._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::Bool v10 = String.hasPrefix(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    v11._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Bool v12 = String.hasPrefix(_:)(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v12) {
      return 0;
    }
  }
  id v13 = [v0 providerID];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v18 & 1;
  }
}

uint64_t sub_10006B510(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10006B528(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(*(void *)(v1 + 32), a1);
}

void sub_10006B560(void *a1, void *a2)
{
  sub_10006B568(a1, a2, *(void (**)(void))(v2 + 16));
}

void sub_10006B568(void *a1, void *a2, void (*a3)(void))
{
  id v5 = a2;
  id v6 = a1;
  a3();
}

void sub_10006B5E0(void *a1, void *a2)
{
  sub_1000BE198(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(unsigned __int8 *)(v2 + 49));
}

void sub_10006B5F4()
{
  sub_10006B5FC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10006B5FC(uint64_t a1, int64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v4 = (void *)Strong;
    sub_10006D0F0(a2);
  }
}

void sub_10006B658(int a1)
{
  LODWORD(v2) = a1;
  uint64_t ObjectType = (uint64_t *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v7 = ((char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v140 = ((char *)&v132 - v9);
  uint64_t v10 = __chkstk_darwin(v8);
  id v132 = (char *)&v132 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v139 = (char *)&v132 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v137 = (char *)&v132 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v132 - v16;
  char v18 = *(char **)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration];
  id v19 = [v18 defaultEffectiveTabIdentifierForLocationRestore];
  uint64_t v20 = sub_10006DAB4();
  char v22 = v21;

  uint64_t v133 = v7;
  if (v22) {
    uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab];
  }
  uint64_t v135 = (void *)v20;
  id v23 = [self sharedManager];
  NSString v24 = [v18 hostIdentifier];
  if (!v24)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v23 setHostIdentifier:v24];

  id v25 = [self defaultPermission];
  NSString v26 = [v18 hostIdentifier];
  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v25 setHostIdentifier:v26];

  static Logger.UI.getter();
  uint64_t v27 = v1;
  unint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  int v141 = (int)v2;
  if (v30)
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    id v136 = (void *)swift_slowAlloc();
    int v138 = v17;
    *(_DWORD *)uint64_t v2 = 138412290;
    uint64_t v142 = v4;
    uint64_t v144 = (char *)v27;
    char v31 = v27;
    uint64_t v4 = v142;
    uint64_t v17 = v138;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v136 = v27;

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "0. Will reset initially selected location (browser: %@)", v2, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v2) = v141;
    swift_slowDealloc();
  }
  else
  {

    unint64_t v28 = v27;
  }

  unint64_t v34 = *(char **)(v4 + 8);
  uint64_t v32 = v4 + 8;
  uint64_t v33 = v34;
  ((void (*)(char *, uint64_t))v34)(v17, v3);
  id v35 = [v18 defaultLocation];
  if (v35)
  {
    uint64_t v36 = v35;
    if ([v18 allowsDisplaying:v35])
    {
      int v138 = v33;
      uint64_t v142 = v32;
      char v37 = v137;
      static Logger.UI.getter();
      id v38 = v27;
      id v39 = v36;
      char v40 = v38;
      id v41 = (char *)v39;
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v140 = v40;
        uint64_t v45 = v44;
        unint64_t v46 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = 138412546;
        uint64_t v144 = (char *)v140;
        id v136 = (void *)v3;
        uint64_t v47 = v140;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v46 = v140;

        *(_WORD *)(v45 + 12) = 2112;
        uint64_t v144 = v41;
        uint64_t v2 = v41;
        uint64_t v3 = (uint64_t)v136;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v46[1] = v36;

        LOBYTE(v2) = v141;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "1. Will reset to configuration's defaultLocation (browser: %@, location: %@)", (uint8_t *)v45, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        char v37 = v137;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v42 = v40;
      }

      ((void (*)(char *, uint64_t))v138)(v37, v3);
      sub_1000BCD84(v41, 0, v2 & 1, 0, 1, 0, 0);

      return;
    }
  }
  if (![v18 isPickerUI])
  {
    sub_10006C62C(v2 & 1);
    return;
  }
  id v137 = v18;
  int v138 = v33;
  uint64_t v142 = v32;
  id v136 = (void *)v3;
  uint64_t v48 = v139;
  static Logger.UI.getter();
  uint64_t v49 = v27;
  Swift::String v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v50, v51))
  {
    id v52 = (uint8_t *)swift_slowAlloc();
    id v53 = (void *)swift_slowAlloc();
    *(_DWORD *)id v52 = 138412290;
    uint64_t v144 = (char *)v49;
    id v54 = v49;
    uint64_t v48 = v139;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v53 = v49;

    _os_log_impl((void *)&_mh_execute_header, v50, v51, "2 Will reset using picker strategy (browser: %@)", v52, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    Swift::String v50 = v49;
  }
  id v55 = v135;

  char v56 = (void (*)(NSObject *, void *))v138;
  ((void (*)(char *, void *))v138)(v48, v136);
  if (![v137 isPickerUI] || (id v57 = sub_100236C2C()) == 0)
  {
LABEL_34:
    static Logger.UI.getter();
    uint64_t v84 = v49;
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v85, v86))
    {
      int v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = (void *)swift_slowAlloc();
      *(_DWORD *)int v87 = 138412290;
      uint64_t v144 = (char *)v84;
      id v89 = v84;
      char v56 = (void (*)(NSObject *, void *))v138;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v88 = v84;

      _os_log_impl((void *)&_mh_execute_header, v85, v86, "2.2 lastUsedOpenSaveLocation couldn't be found or used. Will fetch from getSaveLocation (browser: %@)", v87, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v85 = v84;
    }
    char v90 = v141;
    unint64_t v91 = v136;
    id v92 = v137;

    v56(v140, v91);
    id v93 = [v92 defaultEffectiveTabIdentifierForLocationRestore];
    unint64_t v94 = sub_10006DAB4();
    char v96 = v95;

    if (v96)
    {
      uint64_t v98 = v133;
      static Logger.UI.getter();
      uint64_t v99 = Logger.logObject.getter();
      os_log_type_t v100 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v101 = 0;
        _os_log_impl((void *)&_mh_execute_header, v99, v100, "WARNING: expected configuration.defaultEffectiveTabForLocationRestore to be set at this point", v101, 2u);
        swift_slowDealloc();
      }

      v56(v98, v91);
      unint64_t v94 = 2;
      *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = (Class)2;
      uint64_t v97 = &DOCTabIdentifierBrowse;
    }
    else
    {
      *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab) = (Class)v94;
      if (v94 > 2)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      uint64_t v97 = *(&off_10069AB78 + v94);
    }
    [v92 setDefaultEffectiveTabIdentifierForLocationRestore:*v97];
    uint64_t v102 = swift_allocObject();
    *(void *)(v102 + 16) = v94;
    *(void *)(v102 + 24) = v92;
    *(void *)(v102 + 32) = v84;
    *(unsigned char *)(v102 + 40) = v90 & 1;
    id v103 = (unint64_t *)((char *)v84 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
    swift_beginAccess();
    unint64_t v104 = *v103;
    if (v104 >> 62)
    {
      id v124 = v84;
      id v125 = v92;
      uint64_t v126 = v124;
      id v127 = v125;
      swift_bridgeObjectRetain();
      uint64_t v105 = _CocoaArrayWrapper.endIndex.getter();
      if (v105)
      {
LABEL_45:
        unint64_t v110 = v105 - 1;
        if (__OFSUB__(v105, 1))
        {
          __break(1u);
        }
        else if ((v104 & 0xC000000000000001) == 0)
        {
          if ((v110 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v110 < *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v111 = *(id *)(v104 + 8 * v110 + 32);
            goto LABEL_50;
          }
          __break(1u);
          goto LABEL_68;
        }
        id v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_50:
        id v112 = v111;
        swift_bridgeObjectRelease();
        id v113 = [v112 fileProviderItem];
        if (v113)
        {
          uint64_t v114 = v113;
          uint64_t v115 = (void *)FPActionImportHere;
          sub_1000CBE70((uint64_t *)&unk_1007084E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
          *(void *)(inited + 32) = v114;
          unint64_t v143 = inited;
          specialized Array._endMutation()();
          unint64_t v117 = v143;
          id v118 = v114;
          LOBYTE(v115) = sub_1000301E0(v115, v117);
          swift_bridgeObjectRelease();

          if (v115)
          {
            id v119 = v112;
            sub_100227AD4(v112, (id)v94, v92, v84, v90 & 1);

            swift_release();
LABEL_62:

            return;
          }
        }

LABEL_61:
        uint64_t v128 = *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
        id v129 = *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext);
        uint64_t v130 = swift_allocObject();
        *(void *)(v130 + 16) = sub_10023F408;
        *(void *)(v130 + 24) = v102;
        id v131 = v129;
        swift_retain();
        sub_100230898(v92, v128, v129, (uint64_t)sub_100162670, v130);

        swift_release();
        swift_release();
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v105 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v106 = v84;
      id v107 = v92;
      Swift::String v108 = v106;
      id v109 = v107;
      swift_bridgeObjectRetain();
      if (v105) {
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  uint64_t v58 = v57;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v59 = swift_initStackObject();
  *(_OWORD *)(v59 + 16) = xmmword_1005A04F0;
  *(void *)(v59 + 32) = v58;
  uint64_t v144 = (char *)v59;
  specialized Array._endMutation()();
  unint64_t v60 = (unint64_t)v144;
  id v61 = v58;
  uint64_t v62 = (void *)sub_1000C0650(v60, 0);
  unint64_t v64 = v63;
  unint64_t v66 = v65;
  swift_bridgeObjectRelease();
  if (!v62)
  {
LABEL_69:
    __break(1u);
    return;
  }

  if (v66) {
    uint64_t v67 = v66;
  }
  else {
    uint64_t v67 = v62;
  }
  if (v55 != [v67 effectiveTabSwitcherTab]
    || ![v62 canBeRestored]
    || ![v137 allowsDisplaying:v62])
  {
    swift_bridgeObjectRelease();

    goto LABEL_34;
  }
  id v68 = v62;
  static Logger.UI.getter();
  uint64_t v69 = v49;
  id v70 = v68;
  char v71 = v69;
  uint64_t v72 = (char *)v70;
  uint64_t v73 = Logger.logObject.getter();
  os_log_type_t v74 = static os_log_type_t.debug.getter();
  int v75 = v74;
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v139 = v64;
    uint64_t v77 = v76;
    id v78 = v72;
    uint64_t v79 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v77 = 138412546;
    LODWORD(v135) = v75;
    uint64_t v133 = (v77 + 4);
    uint64_t v144 = (char *)v71;
    uint64_t ObjectType = &v145;
    uint64_t v80 = v71;
    uint64_t v140 = v71;
    uint64_t v81 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v79 = v140;

    *(_WORD *)(v77 + 12) = 2112;
    uint64_t v144 = v78;
    uint64_t v82 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    char v83 = v79;
    uint64_t v72 = v78;
    v83[1] = v62;

    _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v135, "2.1 Will reset to lastUsedOpenSaveLocation (browser: %@, location: %@)", (uint8_t *)v77, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v73 = v71;
  }
  char v120 = v141;
  id v122 = v136;
  id v121 = v137;

  ((void (*)(char *, void *))v138)(v132, v122);
  if ([v121 isPickerUI]) {
    id v123 = sub_100236C2C();
  }
  else {
    id v123 = 0;
  }
  sub_1000BCD84(v72, v123, v120 & 1, 0, 1, 0, 0);
  swift_bridgeObjectRelease();
}

void sub_10006C62C(int a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v40 - v8;
  uint64_t v10 = sub_10006CB88();
  uint64_t v48 = v12;
  if (v10)
  {
    uint64_t v13 = v10;
    unint64_t v14 = v11;
    [*(id *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration] setRestoreLastVisitedLocation:0];
    static Logger.UI.getter();
    uint64_t v15 = v48;
    uint64_t v16 = v1;
    id v17 = v13;
    swift_bridgeObjectRetain_n();
    char v18 = v15;
    id v19 = v16;
    uint64_t v20 = v17;
    char v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v45 = v4;
      uint64_t v25 = v24;
      NSString v26 = (void *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v49 = (uint64_t)v19;
      Swift::String v50 = v44;
      *(_DWORD *)uint64_t v25 = 138412546;
      unint64_t v46 = v18;
      uint64_t v47 = v3;
      uint64_t v42 = v9;
      uint64_t v27 = v19;
      os_log_t v43 = v21;
      unint64_t v28 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *NSString v26 = v19;

      *(_WORD *)(v25 + 12) = 2080;
      v40[1] = v25 + 14;
      os_log_type_t v29 = v20;
      swift_bridgeObjectRetain();
      BOOL v30 = v46;
      uint64_t v31 = sub_1000418D4(v29, v14, v48);
      int v41 = v23;
      unint64_t v33 = v32;

      swift_bridgeObjectRelease();
      uint64_t v49 = sub_10009B0E4(v31, v33, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease_n();
      char v18 = v46;
      swift_bridgeObjectRelease();
      os_log_t v34 = v43;
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v41, "3. Using last visited information to perform restoration (browser:%@, restoreState: %s)", (uint8_t *)v25, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v47);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
    sub_1000BCA8C((uint64_t)v19, 0, v20, v14, v48);

    swift_bridgeObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    id v35 = v1;
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v47 = v3;
      id v38 = (uint8_t *)swift_slowAlloc();
      unint64_t v46 = (void *)swift_slowAlloc();
      LODWORD(v48) = a1;
      *(_DWORD *)id v38 = 138412290;
      Swift::String v50 = v35;
      id v39 = v35;
      LOBYTE(a1) = (_BYTE)v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v46 = v35;

      uint64_t v3 = v47;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "4. Will use emptyLocation as initially selected location since no other cases are valid (browser:%@)", v38, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v36 = v35;
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v20 = [self emptyLocation];
    sub_1000BCD84(v20, 0, a1 & 1, 1, 1, 0, 0);
  }
}

void *sub_10006CB88()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  id v2 = [v1 defaultEffectiveTabIdentifierForLocationRestore];
  uint64_t v3 = (void *)sub_10006DAB4();
  char v5 = v4;

  if (v5) {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  }
  if (![v1 restoreLastVisitedLocation]
    || (uint64_t v6 = (void *)sub_10006DCC0(v3),
        uint64_t v8 = v7,
        uint64_t v10 = v9,
        unint64_t v11 = sub_10006D97C(v6, v7, v9, v3, v0),
        uint64_t v13 = v12,
        sub_10006DA60(v6, v8, v10),
        !v11))
  {
    unint64_t v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
    swift_beginAccess();
    uint64_t v15 = sub_10006DC48((uint64_t)v3, *v14);
    uint64_t v17 = v16;
    id v19 = v18;
    swift_endAccess();
    unint64_t v11 = sub_10006D97C(v15, v17, v19, v3, v0);
    uint64_t v13 = v20;
    sub_10006DA60(v15, v17, v19);
    if (!v11)
    {
      unint64_t v11 = sub_10006E6F8((unint64_t)v3);
      uint64_t v13 = v21;
    }
  }
  if (([v1 allowsDisplaying:v11] & 1) == 0
    || (id v22 = [self sharedManager],
        char v23 = sub_10006CD6C(v11),
        v22,
        (v23 & 1) == 0))
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  return v11;
}

uint64_t sub_10006CD6C(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self protectedAppsEnabled]) {
    return 1;
  }
  id v7 = [a1 node];
  id v8 = v7;
  if (v7)
  {
    id v9 = [v7 fpfs_fpItem];
    swift_unknownObjectRelease();
    if (v9)
    {
      id v8 = [v9 cachedDomain];

      if (v8)
      {
        BOOL v10 = [v1 hostAppCanNavigateToFileProviderDomain:v8] == 0;
        goto LABEL_9;
      }
    }
    else
    {
      id v8 = 0;
    }
  }
  BOOL v10 = 1;
LABEL_9:
  static Logger.UI.getter();
  id v11 = a1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v15 = v14;
    id v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v25 = v20;
    *(_DWORD *)uint64_t v15 = 136315650;
    id v22 = v8;
    uint64_t v24 = sub_10009B0E4(0xD000000000000017, 0x80000001005DF180, &v25);
    uint64_t v21 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v24) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 18) = 2112;
    uint64_t v24 = (uint64_t)v11;
    id v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v19 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[PROTECTED APPS] %s canNavigate: %{BOOL}d to: %@", (uint8_t *)v15, 0x1Cu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v10;
}

void sub_10006D0F0(int64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v5 = *(void **)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_43;
    }
  }
  id v6 = [*(id *)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration) defaultEffectiveTabIdentifierForLocationRestore];
  id v7 = (void *)sub_10006DAB4();
  char v9 = v8;

  uint64_t v76 = v4;
  if (v9) {
    id v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  }
  unint64_t v10 = sub_10006DCC0(v7);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = sub_10006D97C((void *)v10, v11, v13, v7, v2);
  uint64_t v17 = v16;
  sub_10006DA60((void *)v10, v12, v14);
  if (!v15)
  {
    uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController__lastBrowsedStateByTab);
    swift_beginAccess();
    unint64_t v10 = (unint64_t)sub_10006DC48((uint64_t)v7, *v18);
    uint64_t v20 = v19;
    id v22 = v21;
    swift_endAccess();
    uint64_t v15 = sub_10006D97C((void *)v10, v20, v22, v7, v2);
    uint64_t v17 = v23;
    sub_10006DA60((void *)v10, v20, v22);
    if (!v15)
    {
      unint64_t v10 = v2;
      uint64_t v15 = sub_10006E6F8((unint64_t)v7);
      uint64_t v17 = v24;
    }
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v77 = v15;
    if (v25) {
      goto LABEL_10;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_28;
  }
  if (a1 < 0) {
    unint64_t v10 = a1;
  }
  else {
    unint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  id v77 = v15;
  if (!v25) {
    goto LABEL_27;
  }
LABEL_10:
  if (v25 < 1)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  for (uint64_t i = 0; i != v25; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(a1 + 8 * i + 32);
    }
    unint64_t v28 = v27;
    if (((unint64_t)[v27 status] | 2) == 2)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v29 = v78;
  uint64_t v15 = v77;
  uint64_t v5 = _swiftEmptyArrayStorage;
  if ((v78 & 0x8000000000000000) != 0)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v30) {
      goto LABEL_40;
    }
LABEL_30:
    os_log_type_t v74 = v17;
    uint64_t v75 = v2;
    unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v10 = (unint64_t)&v78;
    sub_10006EB0C(0, v30 & ~(v30 >> 63), 0);
    if (v30 < 0)
    {
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    uint64_t v31 = 0;
    unint64_t v32 = (void *)v78;
    do
    {
      if ((v29 & 0xC000000000000001) != 0) {
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v33 = *(id *)(v29 + 8 * v31 + 32);
      }
      os_log_t v34 = v33;
      id v35 = [v33 identifier:v74, v75];

      unint64_t v78 = (unint64_t)v32;
      unint64_t v37 = v32[2];
      unint64_t v36 = v32[3];
      if (v37 >= v36 >> 1)
      {
        sub_10006EB0C(v36 > 1, v37 + 1, 1);
        unint64_t v32 = (void *)v78;
      }
      ++v31;
      v32[2] = v37 + 1;
      v32[v37 + 4] = v35;
    }
    while (v30 != v31);
    swift_release();
    uint64_t v17 = v74;
    uint64_t v2 = v75;
    uint64_t v15 = v77;
    goto LABEL_41;
  }
LABEL_28:
  if ((v29 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30) {
    goto LABEL_30;
  }
LABEL_40:
  swift_release();
  unint64_t v32 = _swiftEmptyArrayStorage;
LABEL_41:
  uint64_t v5 = [v15 sourceIdentifier];
  char v38 = sub_100082AC0(v5, v32);
  swift_bridgeObjectRelease();

  if ((v38 & 1) == 0)
  {
    sub_10001AD60(1, 1);
    swift_bridgeObjectRelease();

    return;
  }
  swift_bridgeObjectRelease();

  uint64_t v4 = v76;
LABEL_43:
  unint64_t v10 = *v4;
  if (!(*v4 >> 62))
  {
    uint64_t v39 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_45;
    }
LABEL_74:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  if (!v39) {
    goto LABEL_74;
  }
LABEL_45:
  unint64_t v40 = v39 - 1;
  if (__OFSUB__(v39, 1))
  {
    __break(1u);
    goto LABEL_76;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_76:
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_50;
  }
  if ((v40 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_78;
  }
  if (v40 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  id v41 = *(id *)(v10 + 8 * v40 + 32);
LABEL_50:
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  id v43 = [v42 sourceIdentifier];

  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;
  if (v44 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v46 == v47) {
    goto LABEL_57;
  }
  char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v49)
  {
LABEL_58:

    return;
  }
  uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v51;
  if (v50 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v52 == v53)
  {
LABEL_57:
    swift_bridgeObjectRelease_n();
    goto LABEL_58;
  }
  char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v54) {
    goto LABEL_58;
  }
  id v55 = v43;
  char v56 = sub_10023A5D0(a1);

  if (v56)
  {
    if ([v56 status] == (id)1)
    {
      sub_10001AD60(1, 1);
      id v57 = [*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration) defaultEffectiveTabIdentifierForLocationRestore];
      unint64_t v58 = sub_10006DAB4();
      char v60 = v59;

      if (v60) {
        unint64_t v58 = *(void *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
      }
      id v61 = sub_10006E6F8(v58);
      id v63 = v62;
      swift_bridgeObjectRelease();

      sub_1000BCD84(v61, 0, 0, 1, 0, 0, 0);
    }

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = v55;
  unint64_t v10 = (unint64_t)sub_100237D8C(a1);
  swift_bridgeObjectRelease();

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_69;
    }
    goto LABEL_82;
  }
LABEL_81:
  if (_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_69:
    if ((v10 & 0xC000000000000001) != 0)
    {
      id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v64 = *(id *)(v10 + 32);
    }
    id v65 = v64;
    swift_bridgeObjectRelease();
    unint64_t v66 = sub_100249AB0();
    sub_1000BCD84(v66, 0, 0, 1, 0, 0, 0);

    return;
  }
LABEL_82:
  swift_bridgeObjectRelease();
  id v67 = [*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration) defaultEffectiveTabIdentifierForLocationRestore];
  unint64_t v68 = sub_10006DAB4();
  char v70 = v69;

  if (v70) {
    unint64_t v68 = *(void *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  }
  char v71 = sub_10006E6F8(v68);
  uint64_t v73 = v72;
  swift_bridgeObjectRelease();

  sub_1000BCD84(v71, 0, 0, 1, 0, 0, 0);
}

void *sub_10006D97C(void *a1, uint64_t a2, void *a3, id a4, uint64_t a5)
{
  id v6 = a1;
  if (a1)
  {
    char v8 = *(void **)(a5 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    if (a3)
    {
      id v9 = a1;
      swift_bridgeObjectRetain();
      id v10 = a3;
    }
    else
    {
      id v10 = a1;
      swift_bridgeObjectRetain();
    }
    if ([v10 effectiveTabSwitcherTab] != a4
      || ![v6 canBeRestored]
      || ([v8 allowsDisplaying:v6] & 1) == 0)
    {
      swift_bridgeObjectRelease();

      return 0;
    }
  }
  return v6;
}

void sub_10006DA60(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10006DAB4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    return 0;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    return 1;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15) {
    char v16 = 1;
  }
  else {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    return 2;
  }
  else {
    return 0;
  }
}

void *sub_10006DC48(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = sub_1000BBA9C(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(a2 + 56) + 24 * v3;
  uint64_t v6 = *(void **)v5;
  id v7 = *(id *)(v5 + 16);
  id v8 = v6;
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_10006DCC0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v9 = [*(id *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_userInterfaceStateStore) interfaceStateForConfiguration:*(void *)(v2 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration)];
  uint64_t result = (uint64_t)sub_10006E510();
  if (!result)
  {
    uint64_t v58 = v5;
    if ((unint64_t)a1 > 2) {
      goto LABEL_34;
    }
    uint64_t v21 = *(void **)*(&off_10069AB78 + (void)a1);
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
    {
      id v33 = v21;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v28 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;
        if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
          {
            uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v38 = v37;
            if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
            {
              swift_bridgeObjectRelease_n();
              if (!v9) {
                goto LABEL_28;
              }
            }
            else
            {
              char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v40 & 1) == 0 || !v9) {
                goto LABEL_28;
              }
            }
            id v34 = [v9 mostRecentlyVisitedBrowsedState_FullBrowser];
LABEL_26:
            id v41 = v34;
            if (v41)
            {
              uint64_t v42 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v44 = v43;

              type metadata accessor for JSONDecoder();
              swift_allocObject();
              sub_100168CBC(v42, v44);
              JSONDecoder.init()();
              sub_10023F4A0();
              dispatch thunk of JSONDecoder.decode<A>(_:from:)();
              swift_release();
              uint64_t v56 = v42;
              unint64_t v57 = v44;
              uint64_t v51 = v59[0];
              uint64_t v52 = v60;
              uint64_t v20 = sub_100236FD8(v59[0], (uint64_t)v59[1], v60, a1);
              uint64_t v54 = v56;
              unint64_t v53 = v57;
              sub_10023E59C(v56, v57);
              swift_bridgeObjectRelease();

              sub_100021020(v54, v53);
              return v20;
            }
LABEL_28:
            static Logger.DocumentManager.getter();
            id v45 = v21;
            uint64_t v46 = Logger.logObject.getter();
            os_log_type_t v47 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v46, v47))
            {
              unint64_t v57 = v4;
              uint64_t v48 = (uint8_t *)swift_slowAlloc();
              v59[0] = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v48 = 136315138;
              uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v61 = sub_10009B0E4(v49, v50, (uint64_t *)v59);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to locate unarchivable BrowsedState for %s", v48, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, unint64_t))(v58 + 8))(v8, v57);
            }
            else
            {

              (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v4);
            }
            return 0;
          }
        }
        if (!v9) {
          goto LABEL_28;
        }
        id v34 = [v9 mostRecentlyVisitedBrowsedState_Shared];
        goto LABEL_26;
      }
    }
    if (!v9) {
      goto LABEL_28;
    }
    id v34 = [v9 mostRecentlyVisitedBrowsedState_Recents];
    goto LABEL_26;
  }
  char v11 = (void *)result;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005A04F0;
  *(void *)(v12 + 32) = v11;
  v59[0] = (void *)v12;
  specialized Array._endMutation()();
  uint64_t v13 = v59[0];
  id v14 = v11;
  uint64_t v15 = (void *)sub_1000C0650((unint64_t)v13, 0);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v20 = sub_100236FD8(v15, v17, v19, a1);

    swift_bridgeObjectRelease();
    return v20;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

id sub_10006E510()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithSuiteName:v1];

  if (!v2)
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_11:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    goto LABEL_12;
  }
  if ([v2 objectForKey:DOCTestUserDefaultsKeyBrowseTabSelected])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1000CBE0C((uint64_t)v10, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_11;
  }
  sub_10009E6C4(0, &qword_10070A280);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    static DOCTabSwitcherStyleTrait.defaultValue.getter();
    goto LABEL_13;
  }
  uint64_t v3 = *(void **)&v10[0];
  static DOCTabSwitcherStyleTrait.defaultValue.getter();
  if (!v3)
  {
LABEL_13:

    return 0;
  }
  id v4 = v3;
  if (DOCTabSwitcherStyle.showsTabs.getter())
  {

    goto LABEL_13;
  }
  unsigned int v7 = [v4 BOOLValue];
  id v8 = self;
  if (v7) {
    id v9 = [v8 iCloudDriveLocation];
  }
  else {
    id v9 = [v8 recentDocumentsLocation];
  }
  id v5 = v9;

  return v5;
}

id sub_10006E6F8(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unsigned int v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v32 - v8;
  if (a1 != 2)
  {
    if (a1 == 1)
    {
      id v10 = [self sharedItemsLocation];
LABEL_12:
      id v22 = v10;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1005A04F0;
      *(void *)(v23 + 32) = v22;
      unint64_t v33 = v23;
      specialized Array._endMutation()();
      return v22;
    }
    goto LABEL_10;
  }
  long long v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
  id v12 = [v11 defaultLocation];
  if (!v12) {
    goto LABEL_14;
  }
  uint64_t v13 = v12;
  if (![v11 allowsDisplaying:v12])
  {

LABEL_14:
    id v24 = [self defaultLocation];
    [v24 setNeedsToResolveHierarchy:1];
    static Logger.DocumentManager.getter();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Returning the default defaultLocation as the lastVisitedFullBrowseLocation.", v27, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1005A04F0;
    *(void *)(v28 + 32) = v24;
    unint64_t v33 = v28;
    specialized Array._endMutation()();
    unint64_t v29 = v33;
    id v19 = v24;
    unint64_t v20 = sub_1000C0650(v29, 0);
    a1 = v30;
    swift_bridgeObjectRelease();
    if (!v20)
    {
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:

    return (id)v20;
  }
  static Logger.DocumentManager.getter();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Returning the configuration specified defaultLocation as the lastVisitedFullBrowseLocation.", v16, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1005A04F0;
  *(void *)(v17 + 32) = v13;
  unint64_t v33 = v17;
  specialized Array._endMutation()();
  unint64_t v18 = v33;
  id v19 = v13;
  unint64_t v20 = sub_1000C0650(v18, 0);
  a1 = v21;
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (!a1)
  {
    id v10 = [self recentDocumentsLocation];
    goto LABEL_12;
  }
LABEL_20:
  type metadata accessor for DOCTab(0);
  unint64_t v33 = a1;
  id result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_10006EB0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006EB48(a1, a2, a3, (void *)*v3, &qword_10070CE50, type metadata accessor for DOCDocumentSourceIdentifier);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10006EB48(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1000CBE70(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    _OWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10006ECDC()
{
  sub_10006ECE8(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_10006ECE8(char a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    int64_t v10 = &a2[OBJC_IVAR____TtC5Files14DOCApplication_loadedTabs];
    swift_beginAccess();
    uint64_t v11 = *(void **)v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)int64_t v10 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v11 = sub_1000D286C(0, v11[2] + 1, 1, v11);
      *(void *)int64_t v10 = v11;
    }
    unint64_t v14 = v11[2];
    unint64_t v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      uint64_t v11 = sub_1000D286C((void *)(v13 > 1), v14 + 1, 1, v11);
      *(void *)int64_t v10 = v11;
    }
    v11[2] = v14 + 1;
    v11[v14 + 4] = a3;
    swift_endAccess();
  }
  uint64_t v15 = OBJC_IVAR____TtC5Files14DOCApplication_finishedLaunchTest;
  if ((a2[OBJC_IVAR____TtC5Files14DOCApplication_finishedLaunchTest] & 1) == 0)
  {
    id v19 = [a2 _launchTestName];
    [a2 finishedTest:v19 waitForCommit:0 extraResults:0];

    a2[v15] = 1;
    if ((a1 & 1) == 0) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)&a2[OBJC_IVAR____TtC5Files14DOCApplication_currentTestName + 8];
  if (!v16) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)&a2[OBJC_IVAR____TtC5Files14DOCApplication_currentTestName];
  if (a3)
  {
    if (a3 == 1)
    {
      uint64_t v18 = 0x646572616853;
    }
    else
    {
      if (a3 != 2)
      {
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      uint64_t v18 = 0x6573776F7242;
    }
    unint64_t v21 = v18 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
  }
  else
  {
    unint64_t v21 = 0xEF73746E65636552;
  }
  BOOL v22 = v17 == 0x6F54686374697753 && v16 == v21;
  if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v31 = v7;
    swift_bridgeObjectRetain();
    static Logger.Tests.getter();
    swift_bridgeObjectRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v30 = v17;
      os_log_type_t v26 = (uint8_t *)v25;
      uint64_t v29 = swift_slowAlloc();
      v32[0] = v29;
      *(_DWORD *)os_log_type_t v26 = 136315138;
      uint64_t v28 = v26 + 4;
      swift_bridgeObjectRetain();
      v32[3] = sub_10009B0E4(0x6F54686374697753, v21, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "finishing test %s after commit", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v6);
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a2 finishedTest:v27 waitForCommit:0 extraResults:0];

LABEL_28:
    if ((a1 & 1) == 0) {
      return;
    }
LABEL_13:
    NSLog(_:_:)();
    id v20 = [self shared];
    [v20 signal];

    return;
  }
  swift_bridgeObjectRelease();
  if (a1) {
    goto LABEL_13;
  }
}

uint64_t sub_10006F368(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v44 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v42 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v41 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v40 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (v12) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_19;
  }
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v36 = v10;
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  uint64_t v39 = a4;
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      id v18 = v15;
      sub_10006F9FC();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if ([v17 isiCloudBased])
      {
        id v19 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v20 = v49;
  uint64_t v6 = v38;
  a4 = v39;
  uint64_t v10 = v36;
  uint64_t v7 = v37;
LABEL_20:
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v29 <= 0) {
      goto LABEL_25;
    }
  }
  else if (*(uint64_t *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
    goto LABEL_25;
  }
  if (FPIsCloudDocsWithFPFSEnabled())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    BOOL v22 = v40;
    uint64_t v21 = v41;
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, enum case for DispatchQoS.QoSClass.default(_:), v10);
    uint64_t v46 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v10);
    unint64_t v23 = v49;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    aBlock[4] = sub_100066B70;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_100693688;
    uint64_t v25 = _Block_copy(aBlock);
    os_log_type_t v26 = v42;
    static DispatchQoS.unspecified.getter();
    unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
    sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    NSString v27 = v44;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v28 = (void *)v46;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v45);
    swift_release();
    goto LABEL_26;
  }
LABEL_25:
  swift_bridgeObjectRelease();
LABEL_26:
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v31 = Strong;
    uint64_t v12 = (uint64_t)[Strong actionManager];

    unint64_t v48 = v50;
    id v32 = a4;
    swift_bridgeObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_28:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v33 = v48;
      swift_bridgeObjectRelease();
      *(void *)(v12 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers) = v33;

      return swift_bridgeObjectRelease();
    }
LABEL_31:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_28;
  }
  return swift_bridgeObjectRelease();
}

id sub_10006F9FC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource____lazy_storage___actionManager);
  }
  else
  {
    id v4 = sub_10006FBDC(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id DOCActionManager.__allocating_init(itemManager:managedPermission:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = a1;
  *(void *)&v5[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return [super init];
}

id sub_10006FBDC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8) & 1) != 0
    || (uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
  {
    id v11 = objc_allocWithZone((Class)type metadata accessor for DOCActionManager());
    return [v11 init];
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v1;
    id v3 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCLazyActionManager());
    *(void *)&v3[OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions] = 0;
    id v4 = &v3[OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure];
    *(void *)id v4 = sub_100317AA8;
    *((void *)v4 + 1) = v2;
    uint64_t v5 = self;
    id v6 = v1;
    swift_retain();
    id v7 = [v5 defaultManager];
    id v8 = [self defaultPermission];
    *(void *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
    *(void *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
    *(void *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
    *(void *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate + 8] = 0;
    swift_unknownObjectWeakInit();
    *(void *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = v7;
    *(void *)&v3[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = v8;
    v12.receiver = v3;
    v12.super_class = (Class)type metadata accessor for DOCActionManager();
    [super init];

    swift_release();
    return v9;
  }
}

uint64_t type metadata accessor for DOCActionManager()
{
  return self;
}

id sub_10006FFAC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 configuration];
  id v5 = [v3 isValidForConfiguration:v4];

  return v5;
}

uint64_t DOCFileProviderSource.isValid(for:)(void *a1)
{
  id v3 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (!v3) {
    goto LABEL_12;
  }
  if ([*(id *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain] isHiddenByProvider])return 0; {
  id v5 = v3;
  }
  if ([a1 supportsRemovableFileProviders])
  {
  }
  else
  {
    if ([v5 canDisconnect])
    {
LABEL_24:

      return 0;
    }
    id v28 = [v5 identifier];
    char v29 = DOCProviderDomainIDIsExternalDevice();

    if (v29) {
      return 0;
    }
  }
  id v5 = [v5 identifier];
  if (DOCProviderDomainIDIsExternalDevice())
  {
    id v6 = [self defaultPermission];
    unsigned __int8 v7 = [v6 isUSBAccessAllowed];

    if ((v7 & 1) == 0) {
      goto LABEL_24;
    }
  }
  int v8 = DOCProviderDomainIDIsWebDAV();
  int v9 = DOCProviderDomainIDIsSharedServerDomainID();
  id v10 = [self defaultPermission];
  unsigned int v11 = [v10 isNetworkDriveAllowed];

  if ((v8 | v9) == 1 && v11 == 0) {
    return 0;
  }
LABEL_12:
  id v13 = [v1 identifier];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v19) {
    return result;
  }
  if (([v1 isAvailableSystemWide] & 1) == 0)
  {
    if (!v3) {
      return 0;
    }
    id v20 = [v3 topLevelBundleIdentifier];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    id v24 = [a1 hostIdentifier];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    if (v21 == v25 && v23 == v27)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v30 & 1) == 0) {
        return result;
      }
    }
  }
  if ([a1 forPickingDocuments]) {
    return 1;
  }
  v31.receiver = v1;
  v31.super_class = (Class)type metadata accessor for DOCFileProviderSource(0);
  return (uint64_t)[super isValidForConfiguration:a1];
}

uint64_t type metadata accessor for DOCFileProviderSource(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_100710A50);
}

void sub_100070424(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v12 = a2;
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id v10 = [WeakRetained sourcesSubscribers];
    unsigned int v11 = [v12 identifier];
    [v10 removeObjectForKey:v11];
  }
}

void sub_1000704F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_10009E6C4(0, &qword_100707CD0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1000705A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    id v3 = objc_opt_new();
    [v3 setBlock:*(void *)(a1 + 48)];
    [v3 setToken:*(void *)(a1 + 32)];
    [v3 setConfiguration:*(void *)(a1 + 40)];
    id v4 = [v6 sourcesSubscribers];
    uint64_t v5 = [*(id *)(a1 + 32) identifier];
    [v4 setObject:v3 forKeyedSubscript:v5];

    if ([v6 hasReceivedFirstFullUpdate]) {
      [v6 notifySubscriber:v3];
    }

    id WeakRetained = v6;
  }
}

uint64_t type metadata accessor for DOCLazyActionManager()
{
  return self;
}

uint64_t sub_10007075C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100070780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a1;
  void v7[4] = sub_10006B5F4;
  v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000666D8;
  v7[3] = &unk_10069A918;
  id v6 = _Block_copy(v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v6);
}

uint64_t sub_10007085C(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711CD0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  char v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          id v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1000717F0(&qword_1007086E0, (void (*)(uint64_t))&type metadata accessor for UTType);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  id v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v12;
  return result;
}

uint64_t sub_100070C80@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v7 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v59 - v13;
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)v59 - v15;
  UTType.identifier.getter();
  v17._unint64_t object = (void *)0x80000001005F3C30;
  v17._uint64_t countAndFlagsBits = 0xD000000000000010;
  Swift::Bool v18 = String.hasPrefix(_:)(v17);
  swift_bridgeObjectRelease();
  if (v18)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v16, a2, v7);
    sub_10009E6C4(0, &qword_10070A280);
    Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = *a1;
    *a1 = 0x8000000000000000;
    sub_1000712E0((uint64_t)isa, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
    *a1 = v67;
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    char v22 = 0;
  }
  else
  {
    uint64_t v64 = v7;
    if (UTType.isFolderUTI.getter())
    {
      uint64_t v23 = v64;
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v16, a2, v64);
      sub_10009E6C4(0, &qword_10070A280);
      char v22 = 1;
      Class v24 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = *a1;
      *a1 = 0x8000000000000000;
      sub_1000712E0((uint64_t)v24, (uint64_t)v16, v25);
      *a1 = v67;
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v16, v23);
    }
    else
    {
      unint64_t v66 = a2;
      uint64_t v61 = a4;
      uint64_t v26 = sub_1000BAFD8();
      uint64_t v27 = *(void *)(v26 + 16);
      uint64_t v62 = v16;
      id v63 = a1;
      uint64_t v60 = v8;
      if (v27)
      {
        uint64_t v29 = v8 + 16;
        uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
        v59[1] = v26;
        unint64_t v31 = v26 + v30;
        unint64_t v32 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v33 = *(void *)(v29 + 56);
        uint64_t v34 = v64;
        while (1)
        {
          v28(v14, v31, v34);
          if (UTType.conforms(to:)()) {
            break;
          }
          (*v32)(v14, v34);
          v31 += v33;
          if (!--v27)
          {
            swift_bridgeObjectRelease();
            unint64_t v16 = v62;
            a1 = v63;
            uint64_t v8 = v60;
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v43 = (uint64_t)v62;
        v28(v62, v66, v34);
        sub_10009E6C4(0, &qword_10070A280);
        char v22 = 1;
        Class v44 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
        uint64_t v45 = v63;
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v67 = *v45;
        *uint64_t v45 = 0x8000000000000000;
        sub_1000712E0((uint64_t)v44, v43, v46);
        *uint64_t v45 = v67;
        swift_bridgeObjectRelease();
        os_log_type_t v47 = *v32;
        (*v32)((char *)v43, v34);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v47)(v14, v34);
        a4 = v61;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_11:
        uint64_t v35 = sub_1000BB034();
        uint64_t v36 = *(void *)(v35 + 16);
        if (v36)
        {
          uint64_t v38 = v8 + 16;
          uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
          unint64_t v39 = v35 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
          char v40 = (void (**)(char *, uint64_t))(v8 + 8);
          uint64_t v41 = *(void *)(v38 + 56);
          uint64_t v42 = v64;
          while (1)
          {
            v37(v11, v39, v42);
            if (UTType.conforms(to:)()) {
              break;
            }
            (*v40)(v11, v42);
            v39 += v41;
            if (!--v36)
            {
              swift_bridgeObjectRelease();
              unint64_t v16 = v62;
              a1 = v63;
              uint64_t v8 = v60;
              goto LABEL_18;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v52 = (uint64_t)v62;
          v37(v62, v66, v42);
          sub_10009E6C4(0, &qword_10070A280);
          Class v53 = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
          uint64_t v54 = v63;
          char v55 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v67 = *v54;
          *uint64_t v54 = 0x8000000000000000;
          sub_1000712E0((uint64_t)v53, v52, v55);
          *uint64_t v54 = v67;
          swift_bridgeObjectRelease();
          uint64_t v56 = *v40;
          (*v40)((char *)v52, v42);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v56)(v11, v42);
          char v22 = 0;
          a4 = v61;
        }
        else
        {
          swift_bridgeObjectRelease();
LABEL_18:
          static UTType.package.getter();
          unint64_t v48 = v66;
          char v49 = UTType.conforms(to:)();
          unint64_t v50 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
          uint64_t v51 = v64;
          uint64_t result = v50(v16, v64);
          a4 = v61;
          if (v49)
          {
            char v22 = 0;
          }
          else
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v16, v48, v51);
            sub_10009E6C4(0, &qword_10070A280);
            char v22 = 1;
            Class v57 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
            char v58 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v67 = *a1;
            *a1 = 0x8000000000000000;
            sub_1000712E0((uint64_t)v57, (uint64_t)v16, v58);
            *a1 = v67;
            swift_bridgeObjectRelease();
            uint64_t result = v50(v16, v51);
          }
        }
      }
    }
  }
  *a4 = v22;
  return result;
}

void sub_1000712E0(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1000714EC(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    int64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10035A988();
    goto LABEL_7;
  }
  sub_10007085C(v17, a3 & 1);
  unint64_t v22 = sub_1000714EC(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  int64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100071838(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for UTType);
}

unint64_t sub_10007149C@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (uint64_t result = sub_1000714EC(a2), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void **)(*(void *)(v4 + 56) + 8 * result);
    uint64_t result = v6;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a3 = v6;
  return result;
}

unint64_t sub_1000714EC(uint64_t a1)
{
  type metadata accessor for UTType();
  sub_100071760(&qword_1007086E0, (void (*)(uint64_t))&type metadata accessor for UTType);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1000715C0(a1, v2, (uint64_t (*)(void))&type metadata accessor for UTType, (unint64_t *)&qword_100705C30, (void (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
}

unint64_t sub_1000715C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  char v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_100071760(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_100071760(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000717A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000717F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100071838(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a4[6];
  uint64_t v10 = a5(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a2, v10);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_1000718F4(unint64_t a1, uint64_t a2)
{
  return sub_10006F368(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1000718FC()
{
  uint64_t v1 = v0;
  id v2 = [v0 internalNavigationController];
  type metadata accessor for DOCFullDocumentManagerNavigationController();
  id v3 = [(id)swift_dynamicCastClassUnconditional() parentViewController];

  if (v3)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    id v4 = v1;
    id v5 = v3;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      return;
    }
  }
  id v7 = [v1 internalNavigationController];
  id v8 = [(id)swift_dynamicCastClassUnconditional() navigationBar];

  NSString v9 = [self fullNavBar];
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v8 setAccessibilityIdentifier:v9];

  id v10 = [v1 internalNavigationController];
  id v11 = [(id)swift_dynamicCastClassUnconditional() view];

  if (!v11)
  {
    __break(1u);
    goto LABEL_14;
  }
  [v11 setAutoresizingMask:18];

  id v12 = [v1 internalNavigationController];
  id v13 = [(id)swift_dynamicCastClassUnconditional() view];

  if (!v13)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v14 = [v1 view];
  if (!v14)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = v14;
  [v14 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;

  [v13 setFrame:v17, v19, v21, v23];
  id v24 = [v1 internalNavigationController];
  [v1 addChildViewController:swift_dynamicCastClassUnconditional()];

  id v25 = [v1 view];
  if (!v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v26 = v25;
  id v27 = [v1 internalNavigationController];
  id v28 = [(id)swift_dynamicCastClassUnconditional() view];

  if (!v28)
  {
LABEL_17:
    __break(1u);
    return;
  }
  [v26 addSubview:v28];

  id v29 = [v1 internalNavigationController];
  [(id)swift_dynamicCastClassUnconditional() didMoveToParentViewController:v1];
}

void sub_100071CF4(uint64_t a1, char *a2, int a3)
{
  id v4 = v3;
  LODWORD(v248) = a3;
  v249 = a2;
  uint64_t v243 = a1;
  uint64_t v235 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v234 = *(void *)(v235 - 8);
  __chkstk_darwin(v235);
  v232 = (char *)&v220 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  id v8 = (char *)&v220 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v227 = *(SEL **)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v220 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v236 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (SEL *)((char *)&v220 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  double v17 = (SEL *)((char *)&v220 - v16);
  uint64_t v18 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v18 - 8);
  double v20 = (char *)&v220 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = v4;
  double v22 = (char *)[v4 locationChangePacer];
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];

  if (v23)
  {
    v249 = (char *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    id v24 = v249;

    return;
  }
  uint64_t v228 = v20;
  uint64_t v221 = v11;
  uint64_t v222 = v9;
  v225 = v15;
  v223 = v17;
  uint64_t v229 = v12;
  uint64_t v226 = v8;
  [v21 updateCustomActions];
  uint64_t v25 = swift_allocObject();
  uint64_t v224 = v25;
  *(void *)(v25 + 16) = v249;
  uint64_t v26 = (void *)(v25 + 16);
  swift_bridgeObjectRetain();
  id v27 = [v21 rootViewController];
  v231 = (void **)v26;
  uint64_t v28 = v243;
  LOBYTE(v12) = (_BYTE)v248;
  if (v27)
  {
    unint64_t v29 = (unint64_t)v27;
    if (*v26 >> 62)
    {
      id v219 = v27;
      swift_bridgeObjectRetain();
      uint64_t v165 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v165 < 0)
      {
        __break(1u);
        goto LABEL_204;
      }
    }
    else
    {
      id v30 = v27;
    }
    sub_1005159F8(0, 0, v29);
  }
  id v31 = v21;
  unint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = (uint64_t)v31;
  unint64_t v34 = (unint64_t)sub_100074660(v32, v31);
  swift_bridgeObjectRelease();

  if (v34 >> 62) {
    goto LABEL_163;
  }
  uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
  uint64_t v246 = v6;
  id v247 = (id)v33;
  if (v35)
  {
    unint64_t v36 = 0;
    unint64_t v241 = v34 & 0xC000000000000001;
    uint64_t v238 = v34 & 0xFFFFFFFFFFFFFF8;
    unint64_t v237 = v34 + 32;
    v230 = (char *)&type metadata for Any + 8;
    unint64_t v240 = v34;
    uint64_t v239 = v35;
    do
    {
      if (v241)
      {
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v36 >= *(void *)(v238 + 16)) {
          goto LABEL_159;
        }
        id v38 = *(id *)(v237 + 8 * v36);
      }
      uint64_t v33 = (uint64_t)v38;
      BOOL v39 = __OFADD__(v36++, 1);
      if (v39)
      {
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_11;
      }
      type metadata accessor for DOCBrowserContainerController();
      v249 = (char *)swift_dynamicCastClass();
      if (!v249)
      {
        type metadata accessor for DOCColumnViewController(0);
        uint64_t v62 = swift_dynamicCastClass();
        if (!v62) {
          goto LABEL_16;
        }
        uint64_t v63 = v62;
        uint64_t v245 = v36;
        id v244 = (id)v33;
        id v64 = [v247 additionalLeadingNavigationBarButtonItems];
        sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
        uint64_t v65 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v66 = sub_100073FE4((unint64_t)v65);
        if (v66)
        {
          sub_1000741D0((unint64_t)v66);
          swift_bridgeObjectRelease();
          id v67 = objc_allocWithZone((Class)NSArray);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v69 = [v67 initWithArray:isa copyItems:1];

          *(void *)&long long aBlock = 0;
          static Array._conditionallyBridgeFromObjectiveC(_:result:)();

          char v70 = (void *)aBlock;
          swift_bridgeObjectRelease();
          if (v70) {
            uint64_t v65 = v70;
          }
          else {
            uint64_t v65 = _swiftEmptyArrayStorage;
          }
        }
        *(void *)(v63 + OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems) = v65;
        swift_bridgeObjectRelease();
        sub_10041418C();
        id v71 = [v247 additionalTrailingNavigationBarButtonItems];
        uint64_t v72 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v73 = sub_100073FE4((unint64_t)v72);
        if (v73)
        {
          sub_1000741D0((unint64_t)v73);
          swift_bridgeObjectRelease();
          id v74 = objc_allocWithZone((Class)NSArray);
          Class v75 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v76 = [v74 initWithArray:v75 copyItems:1];

          *(void *)&long long aBlock = 0;
          static Array._conditionallyBridgeFromObjectiveC(_:result:)();

          id v77 = (void *)aBlock;
          swift_bridgeObjectRelease();
          if (v77) {
            uint64_t v72 = v77;
          }
          else {
            uint64_t v72 = _swiftEmptyArrayStorage;
          }
        }
        uint64_t v28 = v243;
        *(void *)(v63 + OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems) = v72;
        swift_bridgeObjectRelease();
        sub_1004141A8();
        goto LABEL_82;
      }
      uint64_t v245 = v36;
      id v244 = (id)v33;
      id v40 = [v247 additionalLeadingNavigationBarButtonItems];
      uint64_t v41 = sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      uint64_t v42 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v43 = sub_100073FE4((unint64_t)v42);
      if (v43)
      {
        sub_1000741D0((unint64_t)v43);
        swift_bridgeObjectRelease();
        id v44 = objc_allocWithZone((Class)NSArray);
        Class v45 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v46 = [v44 initWithArray:v45 copyItems:1];

        *(void *)&long long aBlock = 0;
        static Array._conditionallyBridgeFromObjectiveC(_:result:)();

        os_log_type_t v47 = (void *)aBlock;
        swift_bridgeObjectRelease();
        if (v47) {
          uint64_t v42 = v47;
        }
        else {
          uint64_t v42 = _swiftEmptyArrayStorage;
        }
      }
      uint64_t v48 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems;
      *(void *)&v249[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems] = v42;
      swift_bridgeObjectRelease();
      unint64_t v49 = (unint64_t)sub_10007679C();
      uint64_t v28 = v49;
      uint64_t v242 = v41;
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        if (!v33) {
          goto LABEL_54;
        }
      }
      else
      {
        uint64_t v33 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v33) {
          goto LABEL_54;
        }
      }
      if (v33 < 1) {
        goto LABEL_157;
      }
      uint64_t v50 = 0;
      unint64_t v34 = v28 & 0xC000000000000001;
      do
      {
        if (v34) {
          uint64_t v51 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v51 = (char *)*(id *)(v28 + 8 * v50 + 32);
        }
        uint64_t v52 = v51;
        *(void *)&v51[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = *(void *)&v249[v48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v53 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v52[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v54 = [v52 viewIfLoaded];
        id v55 = [v54 window];

        if (v55)
        {
          int v56 = v52[v53];
          if (v56 != 2)
          {
            sub_1000A6AA0();
            char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
            swift_release();
            if (valid & 1) == 0 && (objc_msgSend(v52, "doc_hasAppearedOrIsAppearing"))
            {
              v250 = v52;
              type metadata accessor for DOCBrowserContainedViewController();
              char v58 = v52;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v59 = v56 & 1;
                uint64_t v60 = *((void *)&v252 + 1);
                uint64_t v61 = v253;
                sub_1000A6B78(&aBlock, *((uint64_t *)&v252 + 1));
                (*((void (**)(uint64_t, uint64_t, void (*)()))v61 + 1))(v59, v60, v61);
                sub_10009B1B8((uint64_t)&aBlock);
              }
              else
              {
                v253 = 0;
                long long aBlock = 0u;
                long long v252 = 0u;
                sub_100240A64((uint64_t)&aBlock);
              }
              v52[v53] = 2;
            }
          }
        }

        ++v50;
        LOBYTE(v12) = (_BYTE)v248;
      }
      while (v33 != v50);
LABEL_54:
      swift_bridgeObjectRelease_n();
      id v78 = [v247 additionalTrailingNavigationBarButtonItems];
      uint64_t v79 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v80 = sub_100073FE4((unint64_t)v79);
      if (v80)
      {
        sub_1000741D0((unint64_t)v80);
        swift_bridgeObjectRelease();
        id v81 = objc_allocWithZone((Class)NSArray);
        Class v82 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v83 = [v81 initWithArray:v82 copyItems:1];

        *(void *)&long long aBlock = 0;
        static Array._conditionallyBridgeFromObjectiveC(_:result:)();

        uint64_t v84 = (void *)aBlock;
        swift_bridgeObjectRelease();
        if (v84) {
          uint64_t v79 = v84;
        }
        else {
          uint64_t v79 = _swiftEmptyArrayStorage;
        }
      }
      uint64_t v6 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems;
      *(void *)&v249[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems] = v79;
      swift_bridgeObjectRelease();
      unint64_t v85 = (unint64_t)sub_10007679C();
      uint64_t v28 = v85;
      if (v85 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        if (v33)
        {
LABEL_60:
          if (v33 < 1) {
            goto LABEL_158;
          }
          for (uint64_t i = 0; i != v33; ++i)
          {
            if ((v28 & 0xC000000000000001) != 0) {
              int v87 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              int v87 = (char *)*(id *)(v28 + 8 * i + 32);
            }
            uint64_t v88 = v87;
            *(void *)&v87[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = *(void *)&v249[v6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v89 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
            v88[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
            id v90 = [v88 viewIfLoaded];
            id v91 = [v90 window];

            if (v91)
            {
              int v92 = v88[v89];
              if (v92 != 2)
              {
                sub_1000A6AA0();
                char v93 = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
                swift_release();
                if (v93 & 1) == 0 && (objc_msgSend(v88, "doc_hasAppearedOrIsAppearing"))
                {
                  v250 = v88;
                  type metadata accessor for DOCBrowserContainedViewController();
                  unint64_t v94 = v88;
                  sub_1000CBE70(&qword_100711800);
                  if (swift_dynamicCast())
                  {
                    uint64_t v95 = v92 & 1;
                    uint64_t v96 = *((void *)&v252 + 1);
                    uint64_t v97 = v253;
                    sub_1000A6B78(&aBlock, *((uint64_t *)&v252 + 1));
                    (*((void (**)(uint64_t, uint64_t, void (*)()))v97 + 1))(v95, v96, v97);
                    sub_10009B1B8((uint64_t)&aBlock);
                  }
                  else
                  {
                    v253 = 0;
                    long long aBlock = 0u;
                    long long v252 = 0u;
                    sub_100240A64((uint64_t)&aBlock);
                  }
                  v88[v89] = 2;
                }
              }
            }

            LOBYTE(v12) = (_BYTE)v248;
          }
        }
      }
      else
      {
        uint64_t v33 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v33) {
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v98 = (void **)&v249[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v99 = *v98;
      if (!v99)
      {
        id v37 = v244;
        uint64_t v33 = (uint64_t)v244;
        uint64_t v6 = v246;
        uint64_t v28 = v243;
        unint64_t v34 = v240;
        uint64_t v35 = v239;
        goto LABEL_15;
      }
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v100 = swift_dynamicCastClass();
      uint64_t v6 = v246;
      uint64_t v28 = v243;
      unint64_t v34 = v240;
      uint64_t v35 = v239;
      if (v100)
      {
        uint64_t v101 = v100;
        uint64_t v33 = v99;
        uint64_t v102 = (char *)[v247 dataSource];
        uint64_t v103 = *(void *)&v102[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

        unint64_t v104 = (uint64_t *)(v101 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess();
        uint64_t v105 = *v104;
        *unint64_t v104 = v103;
        if (v105 != v103)
        {
          uint64_t v106 = v101 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
          swift_beginAccess();
          uint64_t v107 = v106;
          uint64_t v108 = (uint64_t)v228;
          sub_10013D2A0(v107, (uint64_t)v228);
          uint64_t v109 = *(void *)(*(void *)v108 + 16);
          if (v109)
          {
            unint64_t v110 = (uint64_t *)(*(void *)v108 + 64);
            do
            {
              uint64_t v111 = *v110;
              v110 += 5;
              *(unsigned char *)(v111 + 24) = *(unsigned char *)(v111 + 25);
              --v109;
            }
            while (v109);
          }
          sub_10013D304(v108);
          sub_10001E85C();
        }
        id v37 = v244;

        goto LABEL_15;
      }
LABEL_82:
      id v37 = v244;
      uint64_t v33 = (uint64_t)v244;
LABEL_15:

      unint64_t v36 = v245;
LABEL_16:

      uint64_t v33 = (uint64_t)v247;
    }
    while (v36 != v35);
  }
  swift_bridgeObjectRelease();
  unint64_t v112 = (unint64_t)*v231;
  if ((unint64_t)*v231 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v113 = _CocoaArrayWrapper.endIndex.getter();
    if (v113) {
      goto LABEL_86;
    }
  }
  else
  {
    uint64_t v113 = *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v113)
    {
LABEL_86:
      unint64_t v114 = 0;
      v249 = (char *)(v112 & 0xC000000000000001);
      uint64_t v242 = v112 & 0xFFFFFFFFFFFFFF8;
      unint64_t v241 = v112 + 32;
      id v244 = (id)v112;
      uint64_t v245 = v113;
      while (1)
      {
        if (v249)
        {
          id v115 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v114 >= *(void *)(v242 + 16)) {
            goto LABEL_160;
          }
          id v115 = *(id *)(v241 + 8 * v114);
        }
        unint64_t v34 = (unint64_t)v115;
        BOOL v39 = __OFADD__(v114++, 1);
        if (v39) {
          goto LABEL_156;
        }
        type metadata accessor for DOCBrowserContainerController();
        uint64_t v116 = swift_dynamicCastClass();
        if (v116) {
          break;
        }
        type metadata accessor for DOCColumnViewController(0);
        uint64_t v129 = swift_dynamicCastClass();
        if (v129)
        {
          uint64_t v130 = (uint64_t *)(v129 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
          swift_beginAccess();
          uint64_t v28 = *v130;
          *(void *)&long long aBlock = _swiftEmptyArrayStorage;
          if ((unint64_t)v28 >> 62)
          {
            swift_bridgeObjectRetain_n();
            id v155 = (id)v34;
            uint64_t v131 = _CocoaArrayWrapper.endIndex.getter();
          }
          else
          {
            uint64_t v131 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            id v132 = (id)v34;
          }
          uint64_t v12 = (uint64_t)&OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
          if (v131)
          {
            if (v131 < 1) {
              goto LABEL_161;
            }
            for (uint64_t j = 0; j != v131; ++j)
            {
              if ((v28 & 0xC000000000000001) != 0) {
                uint64_t v134 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                uint64_t v134 = (char *)*(id *)(v28 + 8 * j + 32);
              }
              uint64_t v135 = v134;
              id v136 = (void **)&v134[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
              swift_beginAccess();
              id v137 = *v136;
              if (v137)
              {
                type metadata accessor for DOCItemCollectionViewController(0);
                if (swift_dynamicCastClass())
                {
                  id v138 = v137;

                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                }
                else
                {
                }
                uint64_t v6 = v246;
              }
              else
              {
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v139 = aBlock;
            uint64_t v33 = (uint64_t)v247;
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease();
          if (v139 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            if (v28)
            {
LABEL_132:
              if (v28 < 1) {
                goto LABEL_162;
              }
              uint64_t v143 = 0;
              while (2)
              {
                if ((v139 & 0xC000000000000001) != 0) {
                  uint64_t v145 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  uint64_t v145 = (char *)*(id *)(v139 + 8 * v143 + 32);
                }
                id v144 = v145;
                uint64_t v146 = &v145[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
                uint64_t Strong = swift_unknownObjectWeakLoadStrong();
                *((void *)v146 + 1) = &off_1006932F8;
                swift_unknownObjectWeakAssign();
                uint64_t v148 = swift_unknownObjectWeakLoadStrong();
                if (v148)
                {
                  uint64_t v149 = (void *)v33;
                  uint64_t v150 = v148;
                  id v151 = v149;
                  swift_unknownObjectRelease();
                  if (Strong) {
                    BOOL v152 = v150 == Strong;
                  }
                  else {
                    BOOL v152 = 0;
                  }
                  if (!v152)
                  {
LABEL_148:
                    if (objc_msgSend(v144, "doc_hasAppearedOrIsAppearing")) {
                      sub_100016C84();
                    }

                    swift_unknownObjectRelease();
                    uint64_t v33 = (uint64_t)v247;
                    id v144 = v247;
LABEL_135:

                    ++v143;
                    uint64_t v6 = v246;
                    if (v28 == v143) {
                      goto LABEL_87;
                    }
                    continue;
                  }

                  swift_unknownObjectRelease();
                  id v144 = v151;
                }
                else if (Strong)
                {
                  id v153 = v247;
                  goto LABEL_148;
                }
                break;
              }
              uint64_t v33 = (uint64_t)v247;
              goto LABEL_135;
            }
          }
          else
          {
            uint64_t v28 = *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v28) {
              goto LABEL_132;
            }
          }
LABEL_87:

          swift_bridgeObjectRelease_n();
          uint64_t v28 = v243;
          LOBYTE(v12) = (_BYTE)v248;
        }
LABEL_88:

        if (v114 == v245) {
          goto LABEL_165;
        }
      }
      unint64_t v117 = (void **)(v116 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess();
      id v118 = *v117;
      if (!*v117) {
        goto LABEL_88;
      }
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v119 = swift_dynamicCastClass();
      if (!v119) {
        goto LABEL_88;
      }
      char v120 = (void *)v119;
      uint64_t v121 = v119 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
      uint64_t v122 = swift_unknownObjectWeakLoadStrong();
      *(void *)(v121 + 8) = &off_1006932F8;
      swift_unknownObjectWeakAssign();
      uint64_t v123 = swift_unknownObjectWeakLoadStrong();
      if (v123)
      {
        uint64_t v124 = v123;
        id v125 = (id)v33;
        id v126 = (id)v34;
        id v127 = v118;
        swift_unknownObjectRelease();
        if (v122) {
          BOOL v128 = v124 == v122;
        }
        else {
          BOOL v128 = 0;
        }
        uint64_t v6 = v246;
        if (!v128) {
          goto LABEL_125;
        }

        swift_unknownObjectRelease();
      }
      else
      {
        if (v122)
        {
          id v140 = (id)v33;
          id v141 = (id)v34;
          id v142 = v118;
          uint64_t v6 = v246;
LABEL_125:
          if (objc_msgSend(v120, "doc_hasAppearedOrIsAppearing")) {
            sub_100016C84();
          }

          swift_unknownObjectRelease();
          goto LABEL_128;
        }
        id v154 = v118;
        uint64_t v6 = v246;
      }
LABEL_128:

      uint64_t v28 = v243;
      goto LABEL_88;
    }
  }
LABEL_165:
  swift_bridgeObjectRelease();
  uint64_t v15 = (SEL *)&unk_1006E3000;
  id v156 = [(id)v33 internalNavigationController];
  id v157 = [v156 viewControllers];

  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  uint64_t v158 = (void *)v33;
  unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v159 = [v158 hierarchyController];
  uint64_t v160 = *(void *)&v159[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation];
  char v161 = v159[OBJC_IVAR____TtC5Files22DOCHierarchyController_activeSemanticNavigationOperation + 8];

  if ((v12 & 1) == 0)
  {
    BOOL v163 = 0;
    goto LABEL_185;
  }
  uint64_t v162 = *(void *)(v28 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle);
  BOOL v163 = v162 != 2;
  if (v162 == 2) {
    char v164 = 1;
  }
  else {
    char v164 = v161;
  }
  if ((v164 & 1) == 0)
  {
    if (v160 != 2) {
      goto LABEL_183;
    }
    uint64_t v165 = (uint64_t)*v231;
    if ((unint64_t)*v231 >> 62) {
      goto LABEL_210;
    }
    unint64_t v166 = *(char **)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v166) {
      goto LABEL_211;
    }
LABEL_173:
    unint64_t v167 = v166 - 1;
    if (__OFSUB__(v166, 1))
    {
      __break(1u);
    }
    else if ((v165 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v167 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v167 < *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v168 = (char *)*(id *)(v165 + 8 * (void)v167 + 32);
        goto LABEL_178;
      }
      __break(1u);
      goto LABEL_216;
    }
    uint64_t v168 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_178:
    unint64_t v166 = v168;
    swift_bridgeObjectRelease();
    if (!(v29 >> 62))
    {
      uint64_t v169 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_180;
    }
LABEL_216:
    swift_bridgeObjectRetain();
    uint64_t v169 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_180:
    long long v170 = v231;
    if (v169)
    {
      sub_1004616E0();
      swift_bridgeObjectRetain();
      char v171 = Array<A>.hasAny(_:)();
      uint64_t v172 = swift_bridgeObjectRelease();
      if ((v171 & 1) == 0)
      {
        __chkstk_darwin(v172);
        id v193 = v247;
        *(&v220 - 4) = v29;
        *(&v220 - 3) = (uint64_t)v193;
        *(&v220 - 2) = (uint64_t)v170;
        DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)();
        swift_bridgeObjectRelease();
        id v218 = [v193 v15[421]];

        goto LABEL_197;
      }
    }

LABEL_183:
    BOOL v163 = 1;
  }
LABEL_185:
  while (1)
  {
    swift_bridgeObjectRelease();
    id v173 = [v247 v15[421]];
    unint64_t v29 = (unint64_t)[v173 transitionCoordinator];

    if (!v29) {
      break;
    }
    id v174 = [(id)v29 viewControllerForKey:UITransitionContextToViewControllerKey];
    if (!v174 || (uint64_t v175 = v174, self, v176 = swift_dynamicCastObjCClass(), v175, !v176))
    {
      swift_unknownObjectRelease();
      break;
    }
    uint64_t v177 = (void *)static DOCLog.UI.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v165 = swift_allocObject();
    *(_OWORD *)(v165 + 16) = xmmword_10059B760;
    id v178 = [v247 shortDebugID];
    uint64_t v179 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v181 = v180;

    *(void *)(v165 + 56) = &type metadata for String;
    *(void *)(v165 + 64) = sub_100073F48();
    *(void *)(v165 + 32) = v179;
    *(void *)(v165 + 40) = v181;
    [(id)v29 transitionDuration];
    double v183 = v182 * 1000.0;
    if ((~*(void *)&v183 & 0x7FF0000000000000) == 0)
    {
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
      goto LABEL_209;
    }
    uint64_t v6 = (uint64_t)v226;
    uint64_t v184 = v225;
    uint64_t v15 = v227;
    if (v183 <= -9.22337204e18) {
      goto LABEL_205;
    }
    if (v183 >= 9.22337204e18) {
      goto LABEL_206;
    }
    *(void *)(v165 + 96) = &type metadata for Int;
    *(void *)(v165 + 104) = &protocol witness table for Int;
    *(void *)(v165 + 72) = (uint64_t)v183;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v165 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    [(id)v29 transitionDuration];
    double v186 = v185 * 1000.0;
    if ((~*(void *)&v186 & 0x7FF0000000000000) == 0) {
      goto LABEL_207;
    }
    uint64_t v187 = v229;
    uint64_t v188 = v236;
    uint64_t v189 = v222;
    id v190 = v221;
    if (v186 <= -9.22337204e18) {
      goto LABEL_208;
    }
    v249 = (char *)v165;
    if (v186 < 9.22337204e18)
    {
      *uint64_t v221 = (uint64_t)v186;
      ((void (*)(void *, void, uint64_t))v15[13])(v190, enum case for DispatchTimeInterval.milliseconds(_:), v189);
      uint64_t v191 = v223;
      + infix(_:_:)();
      ((void (*)(void *, uint64_t))v15[1])(v190, v189);
      uint64_t v248 = *(void (**)(SEL *, uint64_t))(v188 + 8);
      v248(v184, v187);
      uint64_t v192 = swift_allocObject();
      id v193 = v247;
      swift_unknownObjectWeakInit();
      uint64_t v194 = swift_allocObject();
      uint64_t v195 = v224;
      *(void *)(v194 + 16) = v192;
      *(void *)(v194 + 24) = v195;
      *(unsigned char *)(v194 + 32) = v163;
      v253 = sub_1004616D4;
      uint64_t v254 = v194;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v252 = sub_1000666D8;
      *((void *)&v252 + 1) = &unk_1006AD768;
      uint64_t v196 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_100073F9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v197 = v6;
      uint64_t v198 = v232;
      uint64_t v199 = v235;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v200 = v249;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v196);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v234 + 8))(v198, v199);
      uint64_t v6 = v246;
      (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v197, v233);
      v248(v191, v229);
      goto LABEL_198;
    }
LABEL_209:
    __break(1u);
LABEL_210:
    swift_bridgeObjectRetain();
    unint64_t v166 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (v166) {
      goto LABEL_173;
    }
LABEL_211:
    swift_bridgeObjectRelease();
    BOOL v163 = 1;
  }
  os_log_t v201 = (void *)static DOCLog.UI.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v202 = swift_allocObject();
  *(_OWORD *)(v202 + 16) = xmmword_1005A0030;
  id v193 = v247;
  id v203 = [v247 shortDebugID];
  uint64_t v204 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v206 = v205;

  *(void *)(v202 + 56) = &type metadata for String;
  *(void *)(v202 + 64) = sub_100073F48();
  *(void *)(v202 + 32) = v204;
  *(void *)(v202 + 40) = v206;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v207 = [v193 v15[421]];
  swift_bridgeObjectRetain();
  Class v208 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v207 setViewControllers:v208 animated:v163];

LABEL_197:
  uint64_t v191 = v223;
LABEL_198:
  [v193 setEditing:0 animated:0];
  sub_100074978(0);
  id v209 = (char *)[v193 dataSource];
  uint64_t v210 = *(void *)&v209[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v210 == 2) {
    [v193 establishFirstResponder];
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v211 = (void *)static OS_dispatch_queue.main.getter();
  id v212 = v225;
  static DispatchTime.now()();
  + infix(_:_:)();
  v249 = *(char **)(v236 + 8);
  ((void (*)(SEL *, uint64_t))v249)(v212, v229);
  uint64_t v213 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v253 = sub_1000668E0;
  uint64_t v254 = v213;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v252 = sub_1000666D8;
  *((void *)&v252 + 1) = &unk_1006AD718;
  id v214 = _Block_copy(&aBlock);
  swift_release();
  v215 = v226;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100073F9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v216 = v232;
  uint64_t v217 = v235;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v214);

  (*(void (**)(char *, uint64_t))(v234 + 8))(v216, v217);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v215, v233);
  ((void (*)(SEL *, uint64_t))v249)(v191, v229);
  swift_release();
}

uint64_t sub_100073DF0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DOCFullDocumentManagerNavigationController()
{
  return self;
}

unint64_t sub_100073F08()
{
  unint64_t result = qword_100707710;
  if (!qword_100707710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100707710);
  }
  return result;
}

unint64_t sub_100073F48()
{
  unint64_t result = qword_100706760;
  if (!qword_100706760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100706760);
  }
  return result;
}

uint64_t sub_100073F9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100073FE4(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        if (!swift_dynamicCastObjCProtocolConditional())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (v4 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        id v8 = *(void **)(v6 + 8 * v5);
        uint64_t v9 = swift_dynamicCastObjCProtocolConditional();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v5;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000741D0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190C20(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      id v3 = v12;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1000CBE70((uint64_t *)&unk_10071A1E0);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190C20(0, v3[2] + 1, 1);
          id v3 = v12;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_100190C20(v6 > 1, v7 + 1, 1);
          id v3 = v12;
        }
        ++v5;
        v3[2] = v7 + 1;
        sub_1000A54B0(v11, &v3[4 * v7 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v8 = a1 + 32;
      id v3 = v12;
      do
      {
        swift_unknownObjectRetain();
        sub_1000CBE70((uint64_t *)&unk_10071A1E0);
        swift_dynamicCast();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190C20(0, v3[2] + 1, 1);
          id v3 = v12;
        }
        unint64_t v10 = v3[2];
        unint64_t v9 = v3[3];
        if (v10 >= v9 >> 1)
        {
          sub_100190C20(v9 > 1, v10 + 1, 1);
          id v3 = v12;
        }
        v3[2] = v10 + 1;
        sub_1000A54B0(v11, &v3[4 * v10 + 4]);
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100074600(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC5Files16DOCActionManager_actions) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100074618(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void *sub_100074660(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  id v31 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = 0;
    unint64_t v5 = v2 & 0xC000000000000001;
    uint64_t v6 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v7 = v2 + 32;
    unint64_t v28 = v2 & 0xC000000000000001;
    uint64_t v29 = i;
    uint64_t v26 = v2 + 32;
    uint64_t v27 = v2 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v5)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v6 + 16))
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        id v8 = *(id *)(v7 + 8 * v4);
      }
      unint64_t v9 = v8;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_36;
      }
      type metadata accessor for DOCColumnViewController(0);
      if (swift_dynamicCastClass()) {
        goto LABEL_5;
      }
      id v11 = [a2 internalNavigationController];
      id v12 = [v11 viewControllers];

      uint64_t v2 = sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v13 >> 62) {
        break;
      }
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_14;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();
      unint64_t v5 = v28;
      uint64_t i = v29;
      uint64_t v7 = v26;
      uint64_t v6 = v27;
LABEL_5:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t v2 = (uint64_t)&v31;
      specialized ContiguousArray._endMutation()();
LABEL_6:
      if (v4 == i) {
        return v31;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (!v14) {
      goto LABEL_4;
    }
LABEL_14:
    if ((v13 & 0xC000000000000001) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v13 + 32);
    }
    uint64_t v16 = v15;
    char v17 = static NSObject.== infix(_:_:)();

    if (v17)
    {
LABEL_17:

      swift_bridgeObjectRelease_n();
      unint64_t v5 = v28;
      uint64_t i = v29;
      uint64_t v7 = v26;
      uint64_t v6 = v27;
      goto LABEL_6;
    }
    if (v14 == 1) {
      goto LABEL_4;
    }
    if ((v13 & 0xC000000000000001) != 0)
    {
      uint64_t v18 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v19 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_37;
        }
        char v20 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v20) {
          goto LABEL_17;
        }
        ++v18;
        if (v19 == v14) {
          goto LABEL_4;
        }
      }
    }
    uint64_t v21 = 5;
    while (1)
    {
      uint64_t v22 = v21 - 3;
      if (__OFADD__(v21 - 4, 1)) {
        break;
      }
      id v23 = *(id *)(v13 + 8 * v21);
      char v24 = static NSObject.== infix(_:_:)();

      if (v24) {
        goto LABEL_17;
      }
      ++v21;
      if (v22 == v14) {
        goto LABEL_4;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    ;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for DOCColumnViewController(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_100714CC8);
}

void sub_100074978(void *a1)
{
  id v3 = (char *)[v1 dataSource];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v4 != 2) {
    return;
  }
  id v5 = [v1 internalNavigationController];
  id v30 = [v5 topViewController];

  if (!v30) {
    return;
  }
  uint64_t v6 = type metadata accessor for DOCColumnViewController(0);
  uint64_t v7 = (char *)swift_dynamicCastClass();
  if (!v7 || (id v8 = v7, ![v7 isEditing]))
  {

    return;
  }
  unint64_t v9 = &v8[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  unint64_t v28 = (objc_class *)v6;
  uint64_t v29 = a1;
  if (*(void *)v9 >> 62) {
    goto LABEL_36;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v11)
  {
LABEL_37:
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_7:
  uint64_t v12 = 4;
  uint64_t v13 = 0;
  if ((v10 & 0xC000000000000001) != 0)
  {
LABEL_8:
    uint64_t v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  while (1)
  {
    uint64_t v14 = (char *)*(id *)(v10 + 8 * v12);
LABEL_10:
    id v15 = v14;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain_n();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11) {
        goto LABEL_37;
      }
      goto LABEL_7;
    }
    uint64_t v16 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    if (*v16)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      char v17 = (void *)swift_dynamicCastClass();
      if (v17)
      {
        if ([v17 isEditing]) {
          break;
        }
      }
    }

    if (v13 + 1 == v11) {
      goto LABEL_37;
    }
    uint64_t v13 = ++v12 - 4;
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v18 = *v16;
  if (!*v16 || !swift_dynamicCastClass())
  {

    return;
  }
  if (v29)
  {
    id v19 = v18;
    id v20 = v29;
    char v21 = static NSObject.== infix(_:_:)();

    if (v21)
    {

      return;
    }
  }
  else
  {
    id v22 = v18;
  }
  v31.receiver = v8;
  v31.super_class = v28;
  [super setEditing:0 animated:0];
  uint64_t v23 = *(void *)v9;
  if (*(void *)v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    if (!v24) {
      goto LABEL_40;
    }
LABEL_29:
    unint64_t v25 = v24 - 1;
    if (__OFSUB__(v24, 1))
    {
      __break(1u);
    }
    else if ((v23 & 0xC000000000000001) == 0)
    {
      if ((v25 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v25 < *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v26 = *(id *)(v23 + 8 * v25 + 32);
LABEL_34:
        uint64_t v27 = v26;
        swift_bridgeObjectRelease();
        [v27 setEditing:0 animated:0];

        return;
      }
      __break(1u);
      return;
    }
    id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_34;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v24) {
    goto LABEL_29;
  }
LABEL_40:

  swift_bridgeObjectRelease();
}

void *sub_100074D8C(void *a1, void *a2, int a3, int a4)
{
  LODWORD(v229) = a4;
  int v231 = a3;
  uint64_t v235 = (void *)type metadata accessor for DOCItemSortMode();
  uint64_t v232 = *(v235 - 1);
  uint64_t v6 = __chkstk_darwin(v235);
  uint64_t v228 = (char *)&v220 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v230 = (char *)&v220 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v220 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v220 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v220 - v17;
  __chkstk_darwin(v16);
  id v20 = (char *)&v220 - v19;
  uint64_t v233 = a1;
  id v21 = [a1 sourceIdentifier];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_10:

    unint64_t v32 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    uint64_t v33 = v234;
    id v34 = [v234 configuration];
    id v35 = [v33 documentManager];
    id v36 = [v33 actionManager];
    type metadata accessor for DOCEmptyDataSource();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v34;
    *(void *)(v37 + 24) = v35;
    *(void *)(v37 + 32) = v36;
    id v38 = &off_10068CDD0;
    goto LABEL_11;
  }
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;
  if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
LABEL_27:

    uint64_t v33 = v234;
    id v54 = [v234 configuration];
    id v55 = [v33 documentManager];
    id v56 = [v33 actionManager];
    type metadata accessor for DOCPlaceholderDataSource();
    uint64_t v37 = swift_allocObject();
    Class v57 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCPlaceHolderViewController());
    char v58 = v233;
    *(void *)&v57[OBJC_IVAR____TtC5FilesP33_A5A64235B1E100244B7B9EBD6441597E28DOCPlaceHolderViewController_location] = v233;
    id v59 = v58;
    *(void *)(v37 + 16) = sub_1000784A0(v54, v55, v56);
    id v38 = &off_1006B81E0;
    goto LABEL_11;
  }
  char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_27;
  }
  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v61;
  if (v60 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v62 == v63)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v64 & 1) == 0)
  {
    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v81 = v80;
    if (v79 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v81 == v82)
    {

      swift_bridgeObjectRelease_n();
LABEL_45:
      if (!a2) {
        goto LABEL_160;
      }
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v84 = swift_dynamicCastClass();
      if (!v84) {
        goto LABEL_160;
      }
      uint64_t v85 = v84;
      id v86 = a2;
      uint64_t v33 = v234;
      id v87 = [v234 configuration];
      [v87 copy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
      swift_dynamicCast();
      uint64_t v88 = v239;

      uint64_t v89 = *(void *)(v85 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
      uint64_t v90 = v232;
      id v91 = v235;
      (*(void (**)(char *, void, void *))(v232 + 104))(v15, enum case for DOCItemSortMode.lastUsedDate(_:), v235);
      uint64_t v229 = *(void *)(v89 + 16);
      if (!v229)
      {
        unint64_t v114 = *(char **)(v90 + 8);
        swift_bridgeObjectRetain();
        char v98 = 0;
        uint64_t v97 = v233;
LABEL_82:
        ((void (*)(char *, void *))v114)(v15, v91);
        swift_bridgeObjectRelease();
        [v88 setPreferLastUsedDate:v98 & 1];
        id v144 = [v33 itemCollectionViewPool];
        id v145 = [v33 documentManager];
        id v146 = [v33 actionManager];
        id v147 = [v33 effectiveAppearance];
        if (v231) {
          unsigned __int8 v148 = 1;
        }
        else {
          unsigned __int8 v148 = [v33 isActivated];
        }
        id v149 = [v33 hierarchyController];
        type metadata accessor for DOCItemCollectionContainerDataSource();
        uint64_t v150 = swift_allocObject();
        *(void *)(v150 + 104) = 0;
        *(void *)(v150 + 112) = 0;
        *(void *)(v150 + 16) = v88;
        *(void *)(v150 + 24) = v144;
        *(void *)(v150 + 32) = v145;
        *(void *)(v150 + 40) = v97;
        *(void *)(v150 + 48) = v85;
        *(void *)(v150 + 56) = v146;
        uint64_t v37 = v150;
        *(void *)(v150 + 64) = v147;
        *(unsigned char *)(v150 + 72) = v148;
        *(void *)(v150 + 80) = v149;
        *(void *)(v150 + 88) = &off_1006988A8;
        *(_WORD *)(v150 + 96) = 0;
        id v151 = v97;
        goto LABEL_60;
      }
      v225 = v88;
      uint64_t v226 = v85;
      unint64_t v92 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      uint64_t v228 = *(char **)(v90 + 16);
      ((void (*)(char *, unint64_t, void *))v228)(v12, v89 + v92, v91);
      uint64_t v93 = sub_100073F9C(&qword_10070ADD0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
      swift_bridgeObjectRetain();
      unint64_t v94 = v91;
      uint64_t v227 = (void (*)(void, void))v93;
      char v95 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v96 = *(char **)(v90 + 8);
      uint64_t v224 = (v90 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v230 = v96;
      ((void (*)(char *, void *))v96)(v12, v94);
      uint64_t v97 = v233;
      if (v95)
      {
        char v98 = 1;
      }
      else
      {
        if (v229 != 1)
        {
          uint64_t v139 = *(void *)(v90 + 72);
          uint64_t v232 = v89;
          unint64_t v140 = v89 + v139 + v92;
          uint64_t v141 = 1;
          id v91 = v235;
          do
          {
            ((void (*)(char *, unint64_t, void *))v228)(v12, v140, v91);
            uint64_t v142 = v141 + 1;
            if (__OFADD__(v141, 1)) {
              goto LABEL_158;
            }
            char v143 = dispatch thunk of static Equatable.== infix(_:_:)();
            id v91 = v235;
            char v98 = v143;
            ((void (*)(char *, void *))v230)(v12, v235);
            if (v98) {
              break;
            }
            ++v141;
            v140 += v139;
          }
          while (v142 != v229);
          uint64_t v97 = v233;
          uint64_t v33 = v234;
          uint64_t v88 = v225;
          uint64_t v85 = v226;
          goto LABEL_81;
        }
        char v98 = 0;
      }
      uint64_t v33 = v234;
      id v91 = v235;
      uint64_t v88 = v225;
      uint64_t v85 = v226;
LABEL_81:
      unint64_t v114 = v230;
      goto LABEL_82;
    }
    char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v83) {
      goto LABEL_45;
    }
    if (!a2) {
      goto LABEL_160;
    }
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v115 = swift_dynamicCastClass();
    if (!v115) {
      goto LABEL_160;
    }
    uint64_t v116 = v115;
    id v117 = a2;
    id v118 = v233;
    id v119 = [v233 node];
    swift_unknownObjectRelease();
    if (v119)
    {
      id v120 = [v118 node];
      if (!v120
        || (unsigned int v121 = [v120 isFolder], swift_unknownObjectRelease(), !v121)
        || (id v122 = [v118 node]) != 0
        && (unsigned __int8 v123 = objc_msgSend(v122, "doc_isCollaborationInvitation"),
            swift_unknownObjectRelease(),
            (v123 & 1) != 0))
      {
        uint64_t v33 = v234;
        id v124 = [v234 configuration];
        id v125 = [v33 documentManager];
        id v126 = v118;
        id v127 = [v33 actionManager];
        type metadata accessor for DOCItemInfoContainerDataSource();
        swift_allocObject();
        uint64_t v37 = sub_1005344E0((uint64_t)v124, (uint64_t)v125, v126, (uint64_t)v127);

        id v38 = &off_1006B5840;
        goto LABEL_11;
      }
    }
    uint64_t v33 = v234;
    id v128 = [v234 configuration];
    uint64_t v129 = *(void *)(v116 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
    uint64_t v130 = v232;
    uint64_t v131 = v230;
    id v132 = v235;
    (*(void (**)(char *, void, void *))(v232 + 104))(v230, enum case for DOCItemSortMode.lastUsedDate(_:), v235);
    uint64_t v226 = *(void *)(v129 + 16);
    if (!v226)
    {
      BOOL v152 = *(void (**)(void, void))(v130 + 8);
      swift_bridgeObjectRetain();
      char v138 = 0;
LABEL_96:
      v152(v131, v132);
      swift_bridgeObjectRelease();
      [v128 setPreferLastUsedDate:v138 & 1];

      id v158 = [v33 configuration];
      id v159 = [v33 itemCollectionViewPool];
      id v160 = [v33 documentManager];
      id v161 = [v33 actionManager];
      id v162 = [v33 effectiveAppearance];
      if (v231) {
        unsigned __int8 v163 = 1;
      }
      else {
        unsigned __int8 v163 = [v33 isActivated];
      }
      id v164 = [v33 hierarchyController];
      type metadata accessor for DOCItemCollectionContainerDataSource();
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 104) = 0;
      *(void *)(v37 + 112) = 0;
      *(void *)(v37 + 16) = v158;
      *(void *)(v37 + 24) = v159;
      unint64_t v112 = v233;
      *(void *)(v37 + 32) = v160;
      *(void *)(v37 + 40) = v112;
      *(void *)(v37 + 48) = v116;
      *(void *)(v37 + 56) = v161;
      *(void *)(v37 + 64) = v162;
      *(unsigned char *)(v37 + 72) = v163;
      *(void *)(v37 + 80) = v164;
      *(void *)(v37 + 88) = &off_1006988A8;
      *(_WORD *)(v37 + 96) = v229 & 1;
      goto LABEL_59;
    }
    uint64_t v223 = v116;
    unint64_t v133 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v134 = v228;
    v225 = *(char **)(v130 + 16);
    ((void (*)(char *, unint64_t, void *))v225)(v228, v129 + v133, v132);
    sub_100073F9C(&qword_10070ADD0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
    uint64_t v224 = v129;
    swift_bridgeObjectRetain();
    uint64_t v135 = v132;
    char v136 = dispatch thunk of static Equatable.== infix(_:_:)();
    id v137 = *(void (**)(void, void))(v130 + 8);
    uint64_t v222 = (v130 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v227 = v137;
    v137(v134, v135);
    if (v136)
    {
      char v138 = 1;
    }
    else
    {
      if (v226 != 1)
      {
        id v221 = v128;
        uint64_t v153 = *(void *)(v232 + 72);
        unint64_t v154 = v224 + v153 + v133;
        uint64_t v155 = 1;
        id v132 = v235;
        do
        {
          ((void (*)(char *, unint64_t, void *))v225)(v134, v154, v132);
          uint64_t v156 = v155 + 1;
          if (__OFADD__(v155, 1)) {
            goto LABEL_159;
          }
          char v157 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v132 = v235;
          char v138 = v157;
          v227(v134, v235);
          if (v138) {
            break;
          }
          ++v155;
          v154 += v153;
        }
        while (v156 != v226);
        uint64_t v33 = v234;
        uint64_t v131 = v230;
        uint64_t v116 = v223;
        id v128 = v221;
        goto LABEL_95;
      }
      char v138 = 0;
    }
    uint64_t v33 = v234;
    id v132 = v235;
    uint64_t v116 = v223;
LABEL_95:
    BOOL v152 = v227;
    goto LABEL_96;
  }
LABEL_32:

  if (!a2) {
    goto LABEL_160;
  }
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v65 = swift_dynamicCastClass();
  if (!v65) {
    goto LABEL_160;
  }
  unint64_t v66 = (char *)v65;
  id v67 = a2;
  id v68 = [v234 configuration];
  [v68 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
  swift_dynamicCast();
  id v69 = v239;

  uint64_t v70 = *(void *)&v66[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
  uint64_t v71 = v232;
  uint64_t v72 = v235;
  (*(void (**)(char *, void, void *))(v232 + 104))(v20, enum case for DOCItemSortMode.lastUsedDate(_:), v235);
  uint64_t v229 = *(void *)(v70 + 16);
  if (!v229)
  {
    id v78 = *(void (**)(void, void))(v71 + 8);
    swift_bridgeObjectRetain();
    char v77 = 0;
    v78(v20, v72);
    goto LABEL_55;
  }
  v225 = v66;
  unint64_t v73 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v228 = *(char **)(v71 + 16);
  ((void (*)(char *, unint64_t, void *))v228)(v18, v70 + v73, v72);
  uint64_t v74 = sub_100073F9C(&qword_10070ADD0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
  uint64_t v226 = v70;
  swift_bridgeObjectRetain();
  Class v75 = v72;
  uint64_t v227 = (void (*)(void, void))v74;
  char v76 = dispatch thunk of static Equatable.== infix(_:_:)();
  v230 = *(char **)(v71 + 8);
  ((void (*)(char *, void *))v230)(v18, v75);
  if (v76)
  {
    char v77 = 1;
LABEL_43:
    unint64_t v66 = v225;
    ((void (*)(char *, void *))v230)(v20, v235);
    goto LABEL_55;
  }
  if (v229 == 1)
  {
    char v77 = 0;
    goto LABEL_43;
  }
  uint64_t v223 = (v71 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v224 = (uint64_t)v69;
  uint64_t v99 = *(void *)(v71 + 72);
  unint64_t v100 = v226 + v99 + v73;
  uint64_t v101 = 1;
  uint64_t v102 = v235;
  do
  {
    ((void (*)(char *, unint64_t, void *))v228)(v18, v100, v102);
    uint64_t v103 = v101 + 1;
    if (__OFADD__(v101, 1))
    {
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
      while (1)
      {
LABEL_160:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }
    }
    char v104 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v102 = v235;
    char v77 = v104;
    ((void (*)(char *, void *))v230)(v18, v235);
    if (v77) {
      break;
    }
    ++v101;
    v100 += v99;
  }
  while (v103 != v229);
  id v69 = (id)v224;
  unint64_t v66 = v225;
  ((void (*)(char *, void *))v230)(v20, v102);
LABEL_55:
  swift_bridgeObjectRelease();
  [v69 setPreferLastUsedDate:v77 & 1];
  uint64_t v33 = v234;
  id v105 = [v234 itemCollectionViewPool];
  id v106 = [v33 documentManager];
  id v107 = [v33 actionManager];
  id v108 = [v33 effectiveAppearance];
  id v109 = v69;
  if (v231) {
    unsigned __int8 v110 = 1;
  }
  else {
    unsigned __int8 v110 = [v33 isActivated];
  }
  id v111 = [v33 hierarchyController];
  type metadata accessor for DOCItemCollectionContainerDataSource();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 104) = 0;
  *(void *)(v37 + 112) = 0;
  *(void *)(v37 + 16) = v109;
  *(void *)(v37 + 24) = v105;
  unint64_t v112 = v233;
  *(void *)(v37 + 32) = v106;
  *(void *)(v37 + 40) = v112;
  *(void *)(v37 + 48) = v66;
  *(void *)(v37 + 56) = v107;
  *(void *)(v37 + 64) = v108;
  *(unsigned char *)(v37 + 72) = v110;
  *(void *)(v37 + 80) = v111;
  *(void *)(v37 + 88) = &off_1006988A8;
  *(_WORD *)(v37 + 96) = 0;
LABEL_59:
  id v113 = v112;
LABEL_60:
  id v38 = &off_1006B8B70;
LABEL_11:
  id v39 = objc_allocWithZone((Class)type metadata accessor for DOCBrowserContainerController());
  uint64_t v40 = swift_unknownObjectRetain();
  uint64_t v232 = v37;
  uint64_t v235 = sub_100076988(v40, (uint64_t)v38);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  uint64_t v42 = swift_unknownObjectWeakLoadStrong();
  if (!v42)
  {
    if (Strong)
    {
      Class v45 = v33;
      goto LABEL_17;
    }
    goto LABEL_103;
  }
  uint64_t v43 = v42;
  id v44 = v33;
  swift_unknownObjectRelease();
  if (Strong && v43 == Strong)
  {
    swift_unknownObjectRelease();

    goto LABEL_103;
  }
LABEL_17:
  unint64_t v46 = (unint64_t)sub_10007679C();
  unint64_t v47 = v46;
  if (v46 >> 62)
  {
    uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
    if (!v48) {
      goto LABEL_101;
    }
LABEL_19:
    if (v48 >= 1)
    {
      uint64_t v49 = 0;
      do
      {
        if ((v47 & 0xC000000000000001) != 0) {
          uint64_t v50 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v50 = *(id *)(v47 + 8 * v49 + 32);
        }
        uint64_t v51 = v50;
        ++v49;
        uint64_t v52 = swift_unknownObjectWeakLoadStrong();
        (*(void (**)(uint64_t))((swift_isaMask & *v51) + 0x110))(v52);
      }
      while (v48 != v49);
      swift_unknownObjectRelease();
      uint64_t v33 = v234;
      goto LABEL_102;
    }
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  uint64_t v48 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v48) {
    goto LABEL_19;
  }
LABEL_101:
  swift_unknownObjectRelease();
LABEL_102:

  swift_bridgeObjectRelease();
LABEL_103:
  uint64_t v165 = (char *)v235 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *((void *)v165 + 1) = &off_100693338;
  swift_unknownObjectWeakAssign();
  uint64_t v166 = swift_unknownObjectWeakLoadStrong();
  if (!v166)
  {
    if (Strong)
    {
      long long v170 = v33;
      goto LABEL_112;
    }
    goto LABEL_124;
  }
  uint64_t v167 = v166;
  uint64_t v168 = v33;
  swift_unknownObjectRelease();
  if (Strong) {
    BOOL v169 = v167 == Strong;
  }
  else {
    BOOL v169 = 0;
  }
  if (v169)
  {
    swift_unknownObjectRelease();

    goto LABEL_124;
  }
LABEL_112:
  unint64_t v171 = (unint64_t)sub_10007679C();
  unint64_t v172 = v171;
  if (v171 >> 62)
  {
    uint64_t v173 = _CocoaArrayWrapper.endIndex.getter();
    if (!v173) {
      goto LABEL_122;
    }
LABEL_114:
    if (v173 >= 1)
    {
      uint64_t v174 = 0;
      do
      {
        if ((v172 & 0xC000000000000001) != 0) {
          uint64_t v175 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v175 = (char *)*(id *)(v172 + 8 * v174 + 32);
        }
        uint64_t v176 = v175;
        ++v174;
        swift_unknownObjectWeakLoadStrong();
        *(void *)&v176[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate + 8] = *((void *)v165 + 1);
        swift_unknownObjectWeakAssign();

        swift_unknownObjectRelease();
      }
      while (v173 != v174);
      swift_unknownObjectRelease();
      uint64_t v33 = v234;
      goto LABEL_123;
    }
    goto LABEL_155;
  }
  uint64_t v173 = *(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v173) {
    goto LABEL_114;
  }
LABEL_122:
  swift_unknownObjectRelease();
LABEL_123:

  swift_bridgeObjectRelease();
LABEL_124:
  unsigned __int8 v177 = [v33 allowsPickingMultipleItems];
  uint64_t v178 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems;
  *((unsigned char *)v235 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems) = v177;
  unint64_t v179 = (unint64_t)sub_10007679C();
  uint64_t Strong = v179;
  if (v179 >> 62)
  {
    uint64_t v180 = _CocoaArrayWrapper.endIndex.getter();
    if (!v180) {
      goto LABEL_140;
    }
LABEL_126:
    if (v180 >= 1)
    {
      for (uint64_t i = 0; i != v180; ++i)
      {
        if ((Strong & 0xC000000000000001) != 0) {
          double v182 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          double v182 = (char *)*(id *)(Strong + 8 * i + 32);
        }
        double v183 = v182;
        v182[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = *((unsigned char *)v235 + v178);
        uint64_t v184 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        int v185 = v182[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
        if (v185 != 2)
        {
          sub_1000A6AA0();
          char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if (valid & 1) == 0 && (objc_msgSend(v183, "doc_hasAppearedOrIsAppearing"))
          {
            uint64_t v239 = v183;
            type metadata accessor for DOCBrowserContainedViewController();
            uint64_t v187 = v183;
            sub_1000CBE70(&qword_100711800);
            if (swift_dynamicCast())
            {
              uint64_t v188 = v185 & 1;
              uint64_t v190 = *((void *)&v237 + 1);
              uint64_t v189 = v238;
              sub_1000A6B78(&v236, *((uint64_t *)&v237 + 1));
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v189 + 8))(v188, v190, v189);
              sub_10009B1B8((uint64_t)&v236);
            }
            else
            {
              uint64_t v238 = 0;
              long long v236 = 0u;
              long long v237 = 0u;
              sub_100240A64((uint64_t)&v236);
            }
            v183[v184] = 2;
          }
        }
      }
      goto LABEL_140;
    }
    __break(1u);
    goto LABEL_154;
  }
  uint64_t v180 = *(void *)((v179 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v180) {
    goto LABEL_126;
  }
LABEL_140:
  swift_bridgeObjectRelease();
  id v191 = [v233 sourceIdentifier];
  uint64_t v192 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v194 = v193;
  if (v192 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v194 == v195)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_152;
  }
  char v197 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v197 & 1) == 0)
  {
    uint64_t v198 = v234;
    id v199 = [v234 configuration];
    id v200 = [v198 itemCollectionViewPool];
    id v201 = [v198 documentManager];
    id v202 = [v198 actionManager];
    [v199 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
    swift_dynamicCast();
    id v203 = v239;
    [v239 setPresentingMakesCollectionFirstResponder:0];
    uint64_t v204 = (void *)sub_1000B1A24(v233, v203, v200, v201, v202);
    id v205 = objc_allocWithZone((Class)type metadata accessor for DOCSearchController());
    uint64_t v206 = (char *)sub_1000C64DC(v203, v204);

    uint64_t v207 = OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController;
    Class v208 = *(void **)&v206[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
    swift_unknownObjectWeakAssign();
    id v209 = v198;
    uint64_t v33 = v206;
    id v210 = v208;
    sub_1000AD448();

    *(void *)(*(void *)&v206[v207] + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate + 8) = &off_100693338;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectWeakAssign();
    uint64_t v211 = qword_1007052B0;
    uint64_t Strong = v209;
    if (v211 == -1)
    {
LABEL_146:
      if ((byte_10071ABA0 & 1) == 0)
      {
        uint64_t v212 = swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectRelease();
        if (v212)
        {
          id v213 = [v33 presentingViewController];

          if (!v213) {
            sub_100053754(1);
          }
        }
      }

      *(void *)&v33[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate + 8] = &off_100693398;
      swift_unknownObjectWeakAssign();
      id v214 = v235;
      id v215 = [v235 navigationItem];
      [v215 setSearchController:v33];

      id v216 = [v214 navigationItem];
      [v216 setHidesSearchBarWhenScrolling:0];

      id v217 = [v214 navigationItem];
      [v217 _setPreserveSearchBarAcrossTransitions:1];

      id v218 = v214;
      [v218 setDefinesPresentationContext:1];

      goto LABEL_152;
    }
LABEL_156:
    swift_once();
    goto LABEL_146;
  }
LABEL_152:
  swift_unknownObjectRelease();
  return v235;
}

void *sub_10007679C()
{
  id v1 = [v0 childViewControllers];
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = (uint64_t)result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v7 = v6;
      type metadata accessor for DOCBrowserContainedViewController();
      if (swift_dynamicCastClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCBrowserContainedViewController()
{
  return self;
}

char *sub_100076988(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  id v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  *(void *)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController] = 0;
  v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state] = 5;
  uint64_t v26 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_queue;
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v8 = v2;
  v25[1] = static OS_dispatch_queue.main.getter();
  static DispatchQoS.unspecified.getter();
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_100076EEC((unint64_t *)&qword_1007054C0, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  uint64_t v9 = v29;
  *(void *)&v2[v26] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v10 = &v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
  *uint64_t v10 = 0;
  v10[1] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
  *(void *)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem] = 0;
  uint64_t v11 = &v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource];
  uint64_t v12 = v30;
  *uint64_t v11 = v9;
  v11[1] = v12;
  swift_unknownObjectRetain();

  uint64_t v13 = (objc_class *)type metadata accessor for DOCBrowserContainerController();
  v32.receiver = v8;
  v32.super_class = v13;
  uint64_t v14 = v12;
  [super init];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8);
  uint64_t v18 = (char *)v15;
  uint64_t v19 = v17(1, ObjectType, v14);
  if (v19)
  {
    id v20 = (void *)v19;
    id v21 = (void **)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v22 = *v21;
    void *v21 = v20;
    uint64_t v23 = v20;

    swift_unknownObjectWeakAssign();
    sub_10009DE78(v23, 0);
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(ObjectType, v14))
  {
    sub_10002D100();
    if (*(void *)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state] == 5) {
      sub_1000686CC(0, 0, 0);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(1, ObjectType, v14);
  }
  sub_100076F34();

  swift_unknownObjectRelease();
  return v18;
}

uint64_t sub_100076E5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100076EA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100076EEC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100076F34()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  if (v1)
  {
    id v2 = *(id *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  }
  else
  {
    id v2 = [v0 navigationItem];
    id v1 = 0;
  }
  id v3 = v1;
  id v4 = [v0 parentViewController];
  if (v4)
  {
    id v5 = v4;
    type metadata accessor for DOCColumnViewController(0);
    uint64_t v6 = (char *)swift_dynamicCastClass();
    if (v6) {
      goto LABEL_8;
    }
  }
  uint64_t v6 = v0;
LABEL_8:
  id v8 = [v6 traitCollection];

  if (DOCUsePadIdiomForTraits()) {
    BOOL v7 = [v8 horizontalSizeClass] == (id)2;
  }
  else {
    BOOL v7 = 0;
  }
  [v2 setStyle:v7];
}

uint64_t type metadata accessor for DOCAppearStateTracker()
{
  return self;
}

uint64_t sub_1000770FC(uint64_t a1, void *a2, void *a3, void *a4)
{
  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsManager] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___familySharedFolderTip] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks] = &_swiftEmptySetSingleton;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_emptyTargetedPreview] = 0;
  id v5 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf] = 0;
  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isActiveDragSource] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipsHeaderView] = 0;
  uint64_t v6 = (uint64_t *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher];
  uint64_t v7 = type metadata accessor for FamilyFetcher();
  uint64_t v8 = swift_allocObject();
  v6[3] = v7;
  void v6[4] = (uint64_t)&off_1006A5950;
  *uint64_t v6 = v8;
  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tipViewIsAvailable] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDropSession] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier;
  uint64_t v11 = v4;
  *(void *)&v4[v10] = sub_10007920C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortOptionsAccessibilityModelView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] = 2;
  uint64_t v13 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath];
  uint64_t v14 = type metadata accessor for IndexPath();
  id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_dropTargetHighlightedCell] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload] = 2;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = 1;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache] = &_swiftEmptyDictionarySingleton;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___visibleItemsCorpus] = 0;
  uint64_t v16 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier];
  *uint64_t v16 = 0xD000000000000020;
  v16[1] = 0x80000001005D2690;
  uint64_t v17 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
  *uint64_t v17 = 0xD000000000000020;
  v17[1] = 0x80000001005D26C0;
  uint64_t v18 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier];
  void *v18 = 0xD000000000000029;
  v18[1] = 0x80000001005D26F0;
  uint64_t v19 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionCreateCellIdentifier];
  *uint64_t v19 = 0xD000000000000022;
  v19[1] = 0x80000001005D2720;
  id v20 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionFooterIdentifier];
  *id v20 = 0xD00000000000002BLL;
  v20[1] = 0x80000001005D2750;
  id v21 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyFooterIdentifier];
  void *v21 = 0xD000000000000030;
  v21[1] = 0x80000001005D2780;
  uint64_t v22 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionHeaderIdentifier];
  void *v22 = 0xD00000000000002BLL;
  v22[1] = 0x80000001005D27C0;
  uint64_t v23 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGroupedSectionHeaderIdentifier];
  void *v23 = 0xD00000000000002CLL;
  v23[1] = 0x80000001005D27F0;
  uint64_t v24 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionStatusSectionEmptyHeaderIdentifier];
  *uint64_t v24 = 0xD000000000000030;
  v24[1] = 0x80000001005D2820;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState] = 4;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode] = 0;
  uint64_t v25 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility];
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool;
  type metadata accessor for DOCItemCollectionCellContentPool();
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  v28[3] = [objc_allocWithZone((Class)NSLock) init];
  v28[4] = sub_1000790C8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v11[v27] = v28;
  uint64_t v29 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_thumbnailLoadingPool;
  type metadata accessor for DOCThumbnailLoadingPool();
  swift_allocObject();
  *(void *)&v11[v29] = sub_10007EF2C();
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = 1;
  uint64_t v30 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  *uint64_t v30 = 2;
  v30[1] = 0;
  v30[2] = 0;
  v30[3] = 0;
  uint64_t v31 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive;
  id v129 = self;
  id v32 = [v129 shared];
  LOBYTE(v29) = [v32 locked];

  v11[v31] = v29;
  v15(&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath], 1, 1, v14);
  uint64_t v33 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  *uint64_t v33 = _swiftEmptyArrayStorage;
  v33[1] = _swiftEmptyArrayStorage;
  v33[2] = sub_100078F9C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v34 = type metadata accessor for DOCItemCollectionFPController();
  id v35 = (char *)v33 + *(int *)(v34 + 28);
  uint64_t v36 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v35, 1, 1, v36);
  *((unsigned char *)v33 + *(int *)(v34 + 32)) = 0;
  (*(void (**)(unsigned char *, void, uint64_t))(v37 + 104))(&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior], enum case for DOCItemGroupingBehavior.none(_:), v36);
  uint64_t v38 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher;
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  *(void *)&v11[v38] = sub_10007F190();
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringObservation] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation] = 0;
  *(_DWORD *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeThumbnailBatchingTokens] = _swiftEmptyArrayStorage;
  v15(&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode], 1, 1, v14);
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_firstItemInsertionRequestsFocus] = 0;
  id v39 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell;
  uint64_t v40 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_typeToFocusController;
  *(void *)&v11[v40] = [objc_allocWithZone((Class)type metadata accessor for DOCTypeToFocusController()) init];
  uint64_t v41 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration];
  uint64_t v42 = type metadata accessor for UICollectionLayoutListConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout] = 0;
  uint64_t v43 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics];
  *uint64_t v43 = 0;
  *(_OWORD *)(v43 + 8) = xmmword_10059B770;
  *(_OWORD *)(v43 + 24) = xmmword_10059B780;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___promptView] = 1;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetricsSourceTraits] = 0;
  id v44 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
  *(_OWORD *)id v44 = 0u;
  *((_OWORD *)v44 + 1) = 0u;
  *((void *)v44 + 4) = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSpringLoading] = 0;
  Class v45 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  uint64_t v46 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails] = 1;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled] = 2;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_didKickstartNotifyContentDidLoad] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastPreviewedFPItem] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForBrowserLayoutChanges] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForUIPChanges] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registrationForInsetChanges] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = 0;
  unint64_t v47 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext];
  *(_OWORD *)unint64_t v47 = 0u;
  *((_OWORD *)v47 + 1) = 0u;
  *((void *)v47 + 4) = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_updateSnapshot] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_liveResizeDidSkip_computeStackMetrics] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_renamingNewlyCreatedFolder] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 0;
  uint64_t v48 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
  *(_OWORD *)uint64_t v48 = 0u;
  *((_OWORD *)v48 + 1) = 0u;
  *((void *)v48 + 4) = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___notificationsController] = 0;
  uint64_t v49 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName];
  *uint64_t v49 = 0;
  v49[1] = 0;
  uint64_t v50 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_overridenEstimatedCollectionViewSize];
  *(void *)uint64_t v50 = 0;
  *((void *)v50 + 1) = 0;
  v50[16] = 1;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  uint64_t v51 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(void *)uint64_t v51 = 0;
  v51[8] = 0;
  uint64_t v52 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  uint64_t v53 = type metadata accessor for ScrollPositionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell] = 0;
  id v54 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastCollectionViewSafeInsets];
  *(_OWORD *)id v54 = 0u;
  *((_OWORD *)v54 + 1) = 0u;
  v54[32] = 1;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 0;
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] = 0;
  uint64_t v55 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage;
  _s10BBIStorageCMa();
  swift_allocObject();
  sub_10007EEE4();
  *(void *)&v11[v55] = v56;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedCreatedFolderToBeRenamed] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToBeMovedIntoCreatedFolder] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer] = 0;
  uint64_t v57 = a1;
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewPool] = a2;
  sub_10008BCB8(a1, (uint64_t)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration], (uint64_t (*)(void))type metadata accessor for DOCItemCollectionConfiguration);
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = *(unsigned char *)(a1 + 16) == 3;
  char v58 = *(void **)(qword_100737550 + 40);
  id v59 = a2;
  unsigned __int8 v60 = [v58 forceDisplayFilenameExtensions];
  v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isShowingAllFilenameExtensions] = v60;
  uint64_t v61 = type metadata accessor for DOCItemCollectionConfiguration();
  uint64_t v62 = *(char **)(a1 + *(int *)(v61 + 52));
  uint64_t v131 = v59;
  if (v62)
  {
    uint64_t v63 = *(char **)a1;
    if ((*(unsigned char *)(*(void *)a1 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_requiresCustomEnumerationProperties) & 1) == 0)
    {
      uint64_t v88 = v62;
      id v89 = 0;
      goto LABEL_17;
    }
    char v64 = *(void **)(a1 + 24);
    if (v64)
    {
      uint64_t v65 = v62;
      id v66 = [v64 representedTag];
      if (v66)
      {
        id v67 = v66;
        sub_1000CBE70(&qword_100707EF0);
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1005A0030;
        id v69 = [v67 displayName];
        uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v72 = v71;

        *(void *)(v68 + 32) = v70;
        *(void *)(v68 + 40) = v72;

        id v73 = *(id *)(a1 + 8);
        v74.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
LABEL_16:
        id v89 = [objc_allocWithZone((Class)DOCEnumerationProperties) initWithConfiguration:v73 tags:v74.super.isa];

LABEL_17:
        id v98 = [v63 identifier];
        uint64_t v99 = &v62[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        unint64_t v100 = *(char **)&v62[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        if (v62[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
        {
          uint64_t v101 = *(void **)&v100[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
          id v102 = v101;
        }
        else
        {
          uint64_t v103 = v100;
          id v102 = [v103 itemFilteringPredicate];

          uint64_t v101 = v102;
        }
        id v104 = [self defaultPermission];
        id v105 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0((uint64_t)v98, v89, v104, a1, v101);

        id v106 = *(char **)v99;
        if (v99[16])
        {
          id v107 = *(void **)&v106[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
          *(void *)&v106[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v105;

          id v108 = (id *)&v63[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
          uint64_t v96 = a3;
          id v39 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell;
          if (v63[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] != 1)
          {
LABEL_22:
            id v93 = 0;
LABEL_25:
            char v95 = a4;
            *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationProperties] = v89;
            unint64_t v94 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v109 = *((void *)v99 + 1);
          id v110 = v105;
          sub_10007896C(v106, v109, 0);
          swift_unknownObjectRelease();
          [v106 setItemFilteringPredicate:v110];

          id v108 = (id *)&v63[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
          uint64_t v96 = a3;
          id v39 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell;
          if ((v63[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0) {
            goto LABEL_22;
          }
        }
        id v93 = *v108;
        id v111 = *v108;
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v97 = v62;
    }
    id v73 = *(id *)(a1 + 8);
    v74.super.Class isa = 0;
    goto LABEL_16;
  }
  Class v75 = *(void **)(a1 + *(int *)(v61 + 48));
  if (!v75)
  {
    *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] = 0;

    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  char v76 = *(char **)a1;
  swift_unknownObjectRetain();
  id v77 = [v76 identifier];
  id v78 = [self defaultPermission];
  id v79 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0((uint64_t)v77, 0, v78, a1, 0);

  uint64_t v80 = type metadata accessor for DOCNodeCollection();
  uint64_t v81 = *(void **)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  id v83 = v81;
  uint64_t v84 = v76;
  LOBYTE(aBlock[0]) = 1;
  uint64_t v85 = (char *)sub_10001A2F0(v75, v81, v76, 0x100000000uLL, v80, ObjectType);
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] = v85;
  id v86 = *(char **)&v85[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if (v85[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
  {
    id v87 = *(void **)&v86[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
    *(void *)&v86[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v79;
    swift_unknownObjectRelease();

    uint64_t v57 = a1;
  }
  else
  {
    uint64_t v90 = *(void *)&v85[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    id v91 = v85;
    id v92 = v79;
    sub_10007896C(v86, v90, 0);
    swift_unknownObjectRelease();
    [v86 setItemFilteringPredicate:v92];

    swift_unknownObjectRelease();
  }
  id v93 = 0;
  uint64_t v62 = 0;
  unint64_t v94 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationProperties;
  uint64_t v96 = a3;
  char v95 = a4;
LABEL_26:
  *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enumerationIdentifier] = v93;
  *(void *)&v11[*v94] = v62;

  uint64_t v112 = v57;
  id v113 = *(void **)(v57 + 8);
  id v114 = v95;
  id v115 = v113;
  id v116 = v96;
  id v117 = (char *)sub_1000784A0(v115, v96, v95);
  id v118 = *(void **)&v117[v39[22]];
  sub_100078438(&qword_10070AB28, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
  id v119 = v117;
  id v120 = v118;
  dispatch thunk of DOCTypeToFocusController.delegate.setter();

  if (sub_100078760())
  {
    id v121 = [v129 shared];
    uint64_t v122 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v123 = swift_allocObject();
    *(void *)(v123 + 16) = v122;
    *(void *)(v123 + 24) = v115;
    aBlock[4] = sub_1000D4D90;
    aBlock[5] = v123;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_100695F98;
    id v124 = _Block_copy(aBlock);
    id v125 = v115;
    swift_release();
    [v121 performAfterLaunch:v124];
    _Block_release(v124);
  }
  sub_100079344();
  id v126 = *(void **)&v119[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = xmmword_1005A0C30;
  *(void *)(v127 + 32) = sub_1000789AC();
  *(void *)(v127 + 40) = sub_100078CC4();
  aBlock[0] = v127;
  specialized Array._endMutation()();
  (*(void (**)(void))((swift_isaMask & *v126) + 0xB8))(aBlock[0]);

  sub_10008BBF0(v112, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionConfiguration);
  return (uint64_t)v119;
}

uint64_t sub_100078438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScrollPositionInfo(uint64_t a1)
{
  return sub_10009E984(a1, qword_10070AA38);
}

id sub_1000784A0(void *a1, void *a2, void *a3)
{
  id v4 = v3;
  swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 2;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = 0;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = &_swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = &_swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled] = 1;
  v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed] = 1;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackground] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] = a1;
  *(void *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager] = a2;
  id v8 = objc_allocWithZone((Class)type metadata accessor for DOCActionManager());
  id v9 = a2;
  uint64_t v10 = v4;
  id v11 = a1;
  uint64_t v12 = (char *)[v8 init];
  if (a3)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1005A04F0;
    *(void *)(v13 + 32) = a3;
    uint64_t v20 = v13;
    specialized Array._endMutation()();
    *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = v20;
    id v14 = a3;
    swift_bridgeObjectRelease();
  }
  *(void *)&v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager] = v12;
  id v15 = v12;

  v21.receiver = v10;
  v21.super_class = (Class)type metadata accessor for DOCBrowserContainedViewController();
  [super initWithNibName:0 bundle:0];
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
  *(void *)(v17 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v17 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  id v18 = v16;
  UIViewController.registerForTraitChanges<A>(_:handler:)();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t sub_100078760()
{
  if ([*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) isFilesApp])
  {
    id v1 = [self showTips];
    unsigned int v2 = [v1 isEnabled];

    if (v2)
    {
      DOCItemCollectionViewController.getCurrentLocation()();
      id v4 = v3;
      id v5 = [self sharedItemsLocation];
      uint64_t v6 = v5;
      if (v4)
      {
        if (v5)
        {
          sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
          id v7 = v4;
          LOBYTE(v2) = static NSObject.== infix(_:_:)();
        }
        else
        {
          LOBYTE(v2) = 0;
          uint64_t v6 = v4;
        }
      }
      else
      {
        if (!v5)
        {
          LOBYTE(v2) = 1;
          return v2 & 1;
        }
        LOBYTE(v2) = 0;
      }
    }
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

void DOCItemCollectionViewController.getCurrentLocation()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v2 + 16))
    {
      uint64_t v3 = *(void *)(*(void *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
LABEL_5:
      id v4 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
      [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v4 node:v3];
      swift_unknownObjectRelease();

      return;
    }
    uint64_t v3 = *(void *)(v2 + 8);
    swift_unknownObjectRetain();
    if (v3) {
      goto LABEL_5;
    }
    id v5 = objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration
                           + 24));
  }
  else
  {
    __break(1u);
  }
}

id sub_10007896C(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    id v5 = a1;
    swift_unknownObjectRetain();
    a1 = v5;
    uint64_t v3 = vars8;
  }
  return a1;
}

id sub_1000789AC()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v20._unint64_t object = (void *)0x80000001005D6770;
    v2._uint64_t countAndFlagsBits = 0x75625B2073676154;
    v2._unint64_t object = (void *)0xED00005D6E6F7474;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._unint64_t object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0xA680E273676154;
    v4._unint64_t object = (void *)0xA700000000000000;
    v20._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = sub_100152618;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100156760;
    uint64_t v17 = &unk_100691DB8;
    id v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setSupportsMultipleItems:1];
    [v9 setAvailability:UIDocumentBrowserActionAvailabilityToolbar | 1];
    [v9 setMenuSortOrder:11];
    id v18 = (void (*)(unint64_t, uint64_t))sub_10014D7F8;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100053508;
    uint64_t v17 = &unk_100691DE0;
    uint64_t v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100078CC4()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v14._uint64_t countAndFlagsBits = 0xD000000000000050;
    v14._unint64_t object = (void *)0x80000001005D64D0;
    v2._unint64_t object = (void *)0x80000001005D64A0;
    v2._uint64_t countAndFlagsBits = 0xD000000000000027;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._unint64_t object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0x6F666E4920746547;
    v4._unint64_t object = (void *)0xE800000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1001523AC;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100156760;
    void aBlock[3] = &unk_100691B38;
    id v8 = _Block_copy(aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setSupportsMultipleItems:1];
    [v9 setNavigationSide:2];
    [v9 setAvailability:1];
    [v9 setMenuSortOrder:2];
    id v12 = [self predicateWithValue:1];
    [v9 setFilteringPredicate:v12];

    [v9 setRequiresFullyFormedItems:0];
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100078F9C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100717980);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v4, (uint64_t)v13, &qword_100717988);
    unint64_t result = sub_10008E070((uint64_t)v13);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v13[0];
    long long v9 = v13[1];
    *(void *)(v7 + 32) = v14;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(void *)(v2[7] + 8 * result) = v15;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000790C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100717990);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v4, (uint64_t)v15, &qword_100717998);
    unint64_t result = sub_10008E070((uint64_t)v15);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v15[0];
    long long v9 = v15[1];
    *(void *)(v7 + 32) = v16;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    uint64_t v10 = v2[7] + 24 * result;
    uint64_t v11 = v18;
    *(_OWORD *)uint64_t v10 = v17;
    *(void *)(v10 + 16) = v11;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007920C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_1007179A0);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100042F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCItemCollectionCellContentPool()
{
  return self;
}

uint64_t sub_100079344()
{
  uint64_t v1 = v0;
  uint64_t v125 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v115 = *(void *)(v125 - 8);
  uint64_t v2 = __chkstk_darwin(v125);
  id v110 = (char *)v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v109 = (char *)v103 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  id v113 = (char *)v103 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v112 = (char *)v103 - v9;
  __chkstk_darwin(v8);
  id v116 = (char *)v103 - v10;
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  id v111 = (id *)((char *)v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v103 - v17;
  uint64_t v19 = type metadata accessor for DOCItemSortMode();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  id v117 = (char *)v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  id v121 = (char *)v103 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v114 = (char *)v103 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v103 - v27;
  uint64_t v29 = (id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
      + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultSorting;
  swift_beginAccess();
  uint64_t v31 = v30;
  uint64_t v32 = v19;
  uint64_t v123 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v124 = v20 + 16;
  v123(v28, v31, v19);
  uint64_t v33 = *(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 32);
  id v118 = v29;
  sub_1000CBC00((uint64_t)v29 + v33, (uint64_t)v18, (uint64_t *)&unk_10070ADC0);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  unsigned int v35 = v34(v18, 1, v19);
  uint64_t v119 = v19;
  id v120 = v28;
  uint64_t v122 = v20;
  if (v35 != 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v18, v19);
LABEL_9:
    unint64_t v47 = v114;
    goto LABEL_10;
  }
  sub_1000CBBA4((uint64_t)v18, (uint64_t *)&unk_10070ADC0);
  uint64_t v36 = *(void **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  if (![v36 showCollectionControls]) {
    goto LABEL_9;
  }
  uint64_t v37 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v34;
  id v38 = [self sharedStore];
  id v39 = [v38 interfaceStateForConfiguration:v36];

  if (!v39) {
    goto LABEL_9;
  }
  id v40 = [v39 sortingMode];
  if (!v40)
  {

    goto LABEL_9;
  }
  uint64_t v41 = v40;
  uint64_t v42 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v42 + 16) && (uint64_t v45 = sub_100042F50(v43, v44), (v46 & 1) != 0))
  {
    sub_10009B208(*(void *)(v42 + 56) + 32 * v45, (uint64_t)&v126);
  }
  else
  {
    long long v126 = 0u;
    long long v127 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v127 + 1)) {
    goto LABEL_53;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

LABEL_54:
    uint64_t v32 = v119;
    goto LABEL_9;
  }
  id v108 = v128;
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v42 + 16) && (uint64_t v98 = sub_100042F50(v96, v97), (v99 & 1) != 0))
  {
    sub_10009B208(*(void *)(v42 + 56) + 32 * v98, (uint64_t)&v126);
  }
  else
  {
    long long v126 = 0u;
    long long v127 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v127 + 1))
  {
LABEL_53:
    swift_bridgeObjectRelease();

    sub_1000CBBA4((uint64_t)&v126, (uint64_t *)&unk_100705D60);
    goto LABEL_54;
  }
  char v100 = swift_dynamicCast();
  unint64_t v47 = v114;
  if (v100)
  {
    uint64_t v101 = (uint64_t)v111;
    DOCItemSortMode.init(rawValue:)();

    uint64_t v32 = v119;
    if (v37(v101, 1, v119) == 1)
    {
      sub_1000CBBA4(v101, (uint64_t *)&unk_10070ADC0);
    }
    else
    {
      uint64_t v102 = v122;
      (*(void (**)(char *, uint64_t))(v122 + 8))(v28, v32);
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v28, v101, v32);
    }
  }
  else
  {
    swift_bridgeObjectRelease();

    uint64_t v32 = v119;
  }
LABEL_10:
  v123(v47, (uint64_t)v120, v32);
  DOCItemSortDescriptor.init(type:isReversed:)();
  uint64_t v48 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v13, 0, 1, v48);
  uint64_t v49 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
  swift_beginAccess();
  sub_10009758C((uint64_t)v13, v49, (uint64_t *)&unk_1007086D0);
  swift_endAccess();
  sub_10007C014();
  uint64_t result = sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_1007086D0);
  uint64_t v51 = *(char **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v51)
  {
LABEL_58:
    __break(1u);
    return result;
  }
  *(void *)&v51[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate + 8] = &off_100695BE8;
  swift_unknownObjectWeakAssign();
  uint64_t v52 = (id *)&v51[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if ((v51[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
  {
    id v53 = *v52;
    self;
    uint64_t v54 = swift_dynamicCastObjCClass();
    if (v54)
    {
      *(void *)&long long v126 = v54;
      swift_getKeyPath();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v55 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
      uint64_t v32 = v119;
      swift_release();
      swift_release();
      uint64_t v56 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation);
      *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsOriginObservation) = v55;

      id v53 = v56;
    }
  }
  id v111 = v52;
  id v114 = v51;
  uint64_t v57 = v118;
  *(void *)&long long v126 = *v118;
  char v58 = (void *)v126;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v59 = v58;
  uint64_t v60 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  uint64_t v61 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation);
  *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sourceEjectableObservation) = v60;

  id v62 = [*v57 identifier];
  if (*((unsigned char *)*v57 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault) == 1)
  {
    uint64_t v63 = (uint64_t)*v57 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode;
    swift_beginAccess();
    char v64 = v112;
    v123(v112, v63, v32);
    unsigned int v65 = enum case for DOCItemGroupingBehavior.grouped(_:);
    uint64_t v66 = v115;
    id v108 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 104);
    v108(v64, enum case for DOCItemGroupingBehavior.grouped(_:), v125);
  }
  else
  {
    uint64_t v66 = v115;
    char v64 = v112;
    id v108 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 104);
    v108(v112, enum case for DOCItemGroupingBehavior.none(_:), v125);
    unsigned int v65 = enum case for DOCItemGroupingBehavior.grouped(_:);
  }
  id v67 = v116;
  sub_10009E6C4(0, (unint64_t *)&unk_1007086B0);
  static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)();

  uint64_t v68 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v69 = v125;
  v68(v64, v125);
  uint64_t v70 = v113;
  uint64_t v112 = *(char **)(v66 + 16);
  ((void (*)(char *, char *, uint64_t))v112)(v113, v67, v69);
  if ((*(unsigned int (**)(char *, uint64_t))(v66 + 88))(v70, v69) != v65)
  {
    v68(v70, v125);
    goto LABEL_23;
  }
  unsigned int v104 = v65;
  id v106 = v68;
  uint64_t v107 = v66 + 8;
  (*(void (**)(char *, uint64_t))(v66 + 96))(v70, v125);
  uint64_t v71 = v121;
  (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v121, v70, v32);
  id v72 = *v118;
  unint64_t v73 = sub_10007FCA0();

  id v113 = *(char **)(v73 + 16);
  if (v113)
  {
    v103[1] = v1;
    uint64_t v74 = v122;
    unint64_t v75 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    char v76 = v117;
    v123(v117, v73 + v75, v32);
    sub_100078438(&qword_10070ADD0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
    unint64_t v105 = v73;
    swift_bridgeObjectRetain();
    char v77 = dispatch thunk of static Equatable.== infix(_:_:)();
    id v78 = *(void (**)(char *, uint64_t))(v74 + 8);
    v78(v76, v32);
    if (v77)
    {
LABEL_21:
      swift_bridgeObjectRelease_n();
      uint64_t v32 = v119;
      v78(v121, v119);
      id v67 = v116;
      uint64_t v68 = v106;
LABEL_23:
      uint64_t v79 = (uint64_t)v110;
      ((void (*)(char *, char *, uint64_t))v112)(v110, v67, v125);
      uint64_t v80 = sub_10007A27C(v79);
      goto LABEL_35;
    }
    if (v113 != (char *)1)
    {
      uint64_t v81 = *(void *)(v122 + 72);
      unint64_t v82 = v105 + v81 + v75;
      uint64_t v83 = 1;
      uint64_t v84 = v119;
      while (1)
      {
        uint64_t v85 = v117;
        uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v123)(v117, v82, v84);
        id v86 = (char *)(v83 + 1);
        if (__OFADD__(v83, 1)) {
          break;
        }
        char v87 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v88 = v85;
        char v89 = v87;
        v78(v88, v84);
        if (v89) {
          goto LABEL_21;
        }
        ++v83;
        v82 += v81;
        if (v86 == v113) {
          goto LABEL_30;
        }
      }
      __break(1u);
      goto LABEL_58;
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
    id v67 = v116;
    uint64_t v32 = v119;
    uint64_t v71 = v121;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v90 = (uint64_t)v109;
  if (*((unsigned char *)*v118 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_groupingEnabledByDefault) == 1)
  {
    uint64_t v91 = (uint64_t)*v118 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode;
    swift_beginAccess();
    v123((char *)v90, v91, v32);
    uint64_t v92 = v104;
  }
  else
  {
    uint64_t v92 = enum case for DOCItemGroupingBehavior.none(_:);
  }
  v108((char *)v90, v92, v125);
  sub_10007A27C(v90);
  uint64_t v80 = (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v71, v32);
  uint64_t v68 = v106;
LABEL_35:
  unint64_t v93 = sub_10007CC5C(v80);
  DOCItemCollectionViewController.items.setter(v93);
  if (((_BYTE)v111[2] & 1) == 0)
  {
    id v94 = *v111;
    self;
    uint64_t v95 = swift_dynamicCastObjCClass();

    if (v95) {
      sub_1001D4184();
    }
  }
  v68(v67, v125);
  return (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v120, v32);
}

uint64_t sub_10007A27C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  swift_endAccess();
  uint64_t result = sub_100080930(0);
  if (*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    unint64_t v10 = sub_10007CC5C(result);
    DOCItemCollectionViewController.items.setter(v10);
    swift_beginAccess();
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_10007A41C(v11, 0);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10007A41C(NSObject *a1, int a2)
{
  uint64_t v3 = v2;
  int v196 = a2;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v193 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCItemGroupingBehavior();
  unint64_t v207 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v187 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v189 = (char *)&v157 - v11;
  __chkstk_darwin(v10);
  uint64_t v195 = (char *)&v157 - v12;
  uint64_t v192 = type metadata accessor for DOCItemSortMode();
  Class v206 = *(Class *)(v192 - 8);
  uint64_t v13 = __chkstk_darwin(v192);
  double v186 = (char *)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v188 = (char *)&v157 - v16;
  __chkstk_darwin(v15);
  id v191 = (char *)&v157 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v157 - v25;
  uint64_t result = __chkstk_darwin(v24);
  unint64_t v31 = (unint64_t)&v157 - v30;
  uint64_t v32 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource];
  if (!v32) {
    return result;
  }
  uint64_t v203 = v29;
  uint64_t v204 = v28;
  uint64_t v205 = result;
  uint64_t v194 = v7;
  swift_retain();
  unsigned int v33 = [v3 doc_hasAppearedOrIsAppearing];
  char v34 = v33;
  if (!v33
    || (uint64_t v35 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot,
        (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isApplyingSnapshot] & 1) != 0))
  {
    uint64_t result = swift_release();
    v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] & 1 | ((v34 & 1) == 0);
    return result;
  }
  v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsUpdateDiffableSnapshot] = 0;
  uint64_t v165 = v35;
  v3[v35] = 1;
  int shouldAllow = UIViewController.doc_shouldAllowAnimations.getter();
  int v201 = v196;
  BOOL v37 = v196 != 2;
  LODWORD(v202) = shouldAllow & v196 & v37;
  char v213 = shouldAllow & v196 & v37;
  id v38 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  if (v38)
  {
    id v39 = (unsigned __int8 *)[v38 activeDocumentCreationSession];
    if (v39)
    {
      int v40 = v39[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates];

      if (v40 == 1)
      {
        LODWORD(v202) = 0;
        char v213 = 0;
      }
    }
  }
  uint64_t v166 = a1;
  uint64_t v172 = v32;
  static Logger.UI.getter();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.default.getter();
  int v43 = v42;
  BOOL v44 = os_log_type_enabled(v41, v42);
  uint64_t v167 = v3;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    LODWORD(isa) = v43;
    uint64_t v46 = v45;
    id v200 = (uint64_t *)swift_slowAlloc();
    v218[0] = (uint64_t)v200;
    *(_DWORD *)uint64_t v46 = 136315650;
    v216[0] = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DD770, v218);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v46 + 12) = 2080;
    os_log_t v198 = v41;
    uint64_t v47 = sub_1000B1618(v196);
    v216[0] = sub_10009B0E4(v47, v48, v218);
    uint64_t v3 = v167;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 22) = 1024;
    LODWORD(v216[0]) = v202;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v49 = v198;
    _os_log_impl((void *)&_mh_execute_header, v198, (os_log_type_t)isa, "%s reloadType: %s actually animate: %{BOOL}d", (uint8_t *)v46, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v50 = *(void (**)(unint64_t, uint64_t))(v204 + 8);
  v50(v31, v205);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t *v21 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  uint64_t v51 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v21, v18);
  if ((v51 & 1) == 0)
  {
    __break(1u);
LABEL_141:
    swift_once();
LABEL_129:
    [v21 postNotificationName:qword_100736F18 object:v51];
    swift_release();

    [v164 setAnimationsEnabled:v31];
    uint64_t result = swift_release();
    *(unsigned char *)(v51 + v165) = 0;
    return result;
  }
  uint64_t v52 = self;
  unsigned int v53 = [v52 areAnimationsEnabled];
  swift_beginAccess();
  if ((v213 & 1) == 0) {
    [v52 setAnimationsEnabled:0];
  }
  uint64_t v54 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  uint64_t v55 = type metadata accessor for DOCItemCollectionFPController();
  uint64_t v56 = *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v56) {
    goto LABEL_151;
  }
  int v57 = v54[*(int *)(v55 + 32)];
  id v58 = [*(id *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] isGathering];
  id v164 = v52;
  unsigned int v163 = v53;
  if (v58)
  {
    if ((v57 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v57 != v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton])
  {
LABEL_20:
    unint64_t v59 = sub_10007CC5C((uint64_t)v58);
    DOCItemCollectionViewController.items.setter(v59);
  }
LABEL_21:
  uint64_t v190 = v56;
  uint64_t v60 = sub_1000B82B0();
  uint64_t v61 = self;
  unsigned int v62 = [v61 protectedAppsEnabled];
  uint64_t v63 = v3;
  uint64_t v179 = v60;
  if (v62)
  {
    uint64_t v64 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
    if (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1)
    {
      uint64_t v65 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated;
      if (*((unsigned char *)v63 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated) != 1)
      {
        uint64_t v152 = v203;
        static Logger.UI.getter();
        id v153 = v63;
        unint64_t v154 = Logger.logObject.getter();
        LODWORD(v207) = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v154, (os_log_type_t)v207))
        {
          id v202 = (void (*)(uint64_t, uint64_t))v50;
          uint64_t v155 = swift_slowAlloc();
          v218[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v155 = 136315394;
          v216[0] = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DD770, v218);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v155 + 12) = 1024;
          BOOL v156 = [v61 protectedAppsEnabled] && v167[v64] == 1 && v167[v65] != 1;
          LODWORD(v216[0]) = v156;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v207, "[PROTECTED APPS] %s removing content from collection because shouldShowAppProtectionShieldUI: %{BOOL}d", (uint8_t *)v155, 0x12u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v202(v203, v205);
          uint64_t v60 = v179;
        }
        else
        {

          v50(v152, v205);
        }
        goto LABEL_124;
      }
    }
  }
  static Logger.UI.getter();
  uint64_t v66 = v63;
  id v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v67, v68))
  {
    id v202 = (void (*)(uint64_t, uint64_t))v50;
    uint64_t v69 = swift_slowAlloc();
    v218[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 136315394;
    v216[0] = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DD770, v218);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v69 + 12) = 1024;
    BOOL v70 = [v61 protectedAppsEnabled]
       && v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] == 1
       && v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] != 1;
    LODWORD(v216[0]) = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v67, v68, "[PROTECTED APPS] %s allowing all items in collection because shouldShowAppProtectionShieldUI: %{BOOL}d", (uint8_t *)v69, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v202((uint64_t)v26, v205);
    uint64_t v60 = v179;
  }
  else
  {

    v50((unint64_t)v26, v205);
  }
  Class isa = v166[2].isa;
  if (!isa)
  {
LABEL_124:
    if (v201 == 2)
    {
      sub_10001177C(v60);
      uint64_t v51 = (uint64_t)v167;
      sub_1000B145C();
      sub_10001ECEC();
      unint64_t v31 = v163;
    }
    else
    {
      char v151 = v213;
      sub_10000FB44(v60);
      uint64_t v51 = (uint64_t)v167;
      unint64_t v31 = v163;
      if ((v151 & 1) == 0) {
        sub_1000B145C();
      }
    }
    sub_1000B00FC(0);
    sub_10007D124();
    uint64_t v21 = (uint64_t *)[self defaultCenter];
    if (qword_100704F38 == -1) {
      goto LABEL_129;
    }
    goto LABEL_141;
  }
  uint64_t v71 = v60 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
  id v72 = (void (*)(uint64_t, uint64_t))(v60
                                              + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot);
  unint64_t v73 = (uint64_t *)&v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  id v162 = v66;
  uint64_t v74 = &v66[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
  uint64_t v161 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits;
  uint64_t v158 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  os_log_t v198 = v166 + 4;
  swift_bridgeObjectRetain();
  id v200 = v73;
  swift_beginAccess();
  int v185 = v74;
  swift_beginAccess();
  uint64_t v75 = 0;
  double v183 = (uint64_t (**)(char *, uint64_t))(v207 + 88);
  uint64_t v184 = (void (**)(char *, char *, uint64_t))(v207 + 16);
  int v182 = enum case for DOCItemGroupingBehavior.grouped(_:);
  unsigned __int8 v177 = (void (**)(char *, uint64_t))(v207 + 96);
  uint64_t v178 = (void (**)(char *, uint64_t))(v207 + 8);
  uint64_t v175 = (void (**)(char *, char *, uint64_t))((char *)v206 + 16);
  uint64_t v176 = (void (**)(char *, char *, uint64_t))((char *)v206 + 32);
  uint64_t v173 = (void (**)(char *, uint64_t))((char *)v206 + 8);
  uint64_t v174 = (void (**)(uint64_t, void, uint64_t, uint64_t))((char *)v206 + 56);
  long long v197 = xmmword_1005A0030;
  id v202 = v72;
  uint64_t v203 = v71;
  while (1)
  {
    uint64_t v204 = v75;
    char v76 = &v198[5 * v75];
    uint64_t v77 = v60;
    Class v78 = v76->isa;
    Class v79 = v76[1].isa;
    Class v80 = v76[2].isa;
    Class v81 = v76[3].isa;
    Class v82 = v76[4].isa;
    sub_1000CBE70(&qword_100708DB0);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = v197;
    uint64_t v205 = (uint64_t)v78;
    Class v206 = v80;
    *(void *)(v83 + 32) = v78;
    *(void *)(v83 + 40) = v79;
    uint64_t v60 = v77;
    *(void *)(v83 + 48) = v80;
    *(void *)(v83 + 56) = v81;
    *(void *)(v83 + 64) = v82;
    if (*(unsigned char *)(v77 + 16))
    {
      swift_beginAccess();
      uint64_t v84 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v71, 1, v84) == 1) {
        goto LABEL_145;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v83);
      swift_endAccess();
      id v72 = v202;
    }
    else
    {
      swift_beginAccess();
      uint64_t v85 = sub_1000CBE70(&qword_100719440);
      if ((*(unsigned int (**)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v72, 1, v85) == 1)goto LABEL_147; {
      swift_bridgeObjectRetain_n();
      }
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v83);
      swift_endAccess();
    }
    swift_bridgeObjectRelease();
    id v86 = (void *)((char *)v82 + 16);
    swift_beginAccess();
    uint64_t v87 = *v200;
    unint64_t v207 = *((void *)v82 + 2);
    if (v87)
    {
      swift_bridgeObjectRetain();
      goto LABEL_42;
    }
    uint64_t v95 = v190 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v190 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      id v96 = *(id *)v95;
      swift_bridgeObjectRetain();
      id v97 = v96;
      unsigned __int8 v98 = [v97 doc_displaysSearchResults];

      if (v98)
      {
        id v72 = v202;
        goto LABEL_42;
      }
    }
    uint64_t v99 = v194;
    char v100 = v195;
    uint64_t v181 = *v184;
    v181(v195, v185, v194);
    uint64_t v180 = *v183;
    int v101 = v180(v100, v99);
    if (v101 != v182)
    {
      (*v178)(v100, v99);
      id v72 = v202;
      goto LABEL_42;
    }
    unint64_t v171 = *v177;
    v171(v100, v99);
    uint64_t v102 = v191;
    uint64_t v103 = v192;
    long long v170 = *v176;
    v170(v191, v100, v192);
    uint64_t v104 = (uint64_t)v193;
    uint64_t v168 = *v175;
    v168(v193, v102, v103);
    BOOL v169 = *v174;
    v169(v104, 0, 1, v103);
    BOOL v105 = sub_100325528(v104);
    sub_1000CBBA4(v104, (uint64_t *)&unk_10070ADC0);
    id v106 = *v173;
    (*v173)(v102, v103);
    if (!v105)
    {
      uint64_t v60 = v179;
      id v72 = v202;
      goto LABEL_42;
    }
    id v159 = v106;
    uint64_t v60 = v179;
    id v72 = v202;
    if (!*(void *)&v162[v161]) {
      goto LABEL_42;
    }
    swift_retain();
    sub_10004B1F0((uint64_t)v214);
    swift_release();
    int v160 = *((unsigned __int8 *)v82 + 24);
    if (*v200) {
      goto LABEL_64;
    }
    if ((*(unsigned char *)(v95 + 16) & 1) == 0)
    {
      id v117 = *(id *)v95;
      unsigned __int8 v118 = [v117 doc_displaysSearchResults];

      if (v118) {
        goto LABEL_64;
      }
    }
    uint64_t v119 = v189;
    uint64_t v120 = v194;
    v181(v189, v185, v194);
    int v121 = v180(v119, v120);
    if (v121 != v182)
    {
      (*v178)(v119, v120);
      goto LABEL_64;
    }
    v171(v119, v120);
    uint64_t v122 = v188;
    uint64_t v123 = v192;
    v170(v188, v119, v192);
    uint64_t v124 = (uint64_t)v193;
    v168(v193, v122, v123);
    v169(v124, 0, 1, v123);
    BOOL v125 = sub_100325528(v124);
    sub_1000CBBA4(v124, (uint64_t *)&unk_10070ADC0);
    long long v126 = v122;
    uint64_t v60 = v179;
    uint64_t v127 = v123;
    id v72 = v202;
    v159(v126, v127);
    if (!v125 || !*(void *)&v162[v161]) {
      goto LABEL_64;
    }
    swift_retain();
    sub_10004B1F0((uint64_t)v216);
    swift_release();
    if (*((unsigned char *)v82 + 24)) {
      goto LABEL_91;
    }
    if (*v200) {
      goto LABEL_91;
    }
    if ((*(unsigned char *)(v190 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
    {
      id v134 = *(id *)(v190 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      unsigned __int8 v135 = [v134 doc_displaysSearchResults];

      if (v135) {
        goto LABEL_91;
      }
    }
    char v136 = v187;
    uint64_t v137 = v194;
    v181(v187, v185, v194);
    int v138 = v180(v136, v137);
    if (v138 != v182)
    {
      (*v178)(v136, v137);
LABEL_91:
      sub_10004B470((uint64_t)v216);
LABEL_64:
      sub_10004B470((uint64_t)v214);
LABEL_65:
      if (v160) {
        goto LABEL_42;
      }
      goto LABEL_66;
    }
    v171(v136, v137);
    uint64_t v139 = v186;
    uint64_t v140 = v192;
    v170(v186, v136, v192);
    uint64_t v141 = (uint64_t)v193;
    v168(v193, v139, v140);
    v169(v141, 0, 1, v140);
    BOOL v142 = sub_100325528(v141);
    sub_1000CBBA4(v141, (uint64_t *)&unk_10070ADC0);
    char v143 = v139;
    uint64_t v60 = v179;
    uint64_t v144 = v140;
    id v72 = v202;
    v159(v143, v144);
    if (!v142 || !*(void *)&v162[v161]) {
      goto LABEL_91;
    }
    swift_retain();
    sub_10004B1F0((uint64_t)v218);
    swift_release();
    if (!*(void *)&v162[v158])
    {
      sub_10004B470((uint64_t)v218);
      goto LABEL_91;
    }
    if (*v86 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v145 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v145 = *(void *)((*v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_10004B470((uint64_t)v218);
    sub_10004B470((uint64_t)v216);
    sub_10004B470((uint64_t)v214);
    uint64_t v60 = v179;
    id v72 = v202;
    if (v218[13] >= v145) {
      goto LABEL_65;
    }
    if ((v160 | v217)) {
      goto LABEL_42;
    }
LABEL_66:
    uint64_t v107 = v215;
    unint64_t v108 = v207;
    uint64_t v181 = (void (*)(char *, char *, uint64_t))(v207 >> 62);
    if (v207 >> 62)
    {
      unint64_t v146 = v207;
      swift_bridgeObjectRetain();
      uint64_t v147 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v107 >= v147) {
        uint64_t v148 = v147;
      }
      else {
        uint64_t v148 = v107;
      }
      if (v148 < 0) {
        break;
      }
      uint64_t v180 = (uint64_t (*)(char *, uint64_t))v148;
      swift_bridgeObjectRetain();
      uint64_t v149 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v149 < 0) {
        goto LABEL_152;
      }
      swift_bridgeObjectRetain();
      uint64_t v150 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v150 < (uint64_t)v180) {
        goto LABEL_143;
      }
      uint64_t v60 = v179;
      uint64_t v107 = (uint64_t)v180;
      unint64_t v108 = v146;
      goto LABEL_70;
    }
    if (v215 >= *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      uint64_t v107 = *(void *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v107 < 0) {
      break;
    }
LABEL_70:
    if ((v108 & 0xC000000000000001) != 0 && v107)
    {
      for (Swift::Int i = 0; i != v107; ++i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    if (v181)
    {
      swift_bridgeObjectRetain();
      uint64_t v111 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v110 = v128;
      unint64_t v113 = v129;
      uint64_t v112 = v130;
      swift_bridgeObjectRelease_n();
      id v72 = v202;
      if ((v113 & 1) == 0) {
        goto LABEL_93;
      }
    }
    else
    {
      uint64_t v110 = 0;
      uint64_t v111 = v108 & 0xFFFFFFFFFFFFFF8;
      uint64_t v112 = (v108 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v113 = (2 * v107) | 1;
      id v72 = v202;
      if ((v113 & 1) == 0) {
        goto LABEL_93;
      }
    }
    unint64_t v207 = v112;
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    uint64_t v131 = (void *)swift_dynamicCastClass();
    if (!v131)
    {
      swift_unknownObjectRelease();
      uint64_t v131 = _swiftEmptyArrayStorage;
    }
    uint64_t v132 = v131[2];
    swift_release();
    if (__OFSUB__(v113 >> 1, v110)) {
      goto LABEL_144;
    }
    if (v132 != (v113 >> 1) - v110)
    {
      swift_unknownObjectRelease();
      uint64_t v60 = v179;
      uint64_t v112 = v207;
LABEL_93:
      unint64_t v207 = (unint64_t)sub_1002F4C80(v111, v112, v110, v113);
      swift_unknownObjectRelease();
      goto LABEL_42;
    }
    uint64_t v133 = swift_dynamicCastClass();
    swift_unknownObjectRelease();
    uint64_t v60 = v179;
    unint64_t v207 = v133;
    if (!v133)
    {
      swift_unknownObjectRelease();
      unint64_t v207 = (unint64_t)_swiftEmptyArrayStorage;
    }
LABEL_42:
    char v88 = *(unsigned char *)(v60 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v88)
    {
      if (!sub_1000D24AC(v207)) {
        goto LABEL_153;
      }
      uint64_t v208 = v205;
      Class v209 = v79;
      Class v210 = v206;
      Class v211 = v81;
      Class v212 = v82;
      uint64_t v89 = v203;
      swift_beginAccess();
      uint64_t v90 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 48))(v89, 1, v90) == 1) {
        goto LABEL_146;
      }
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v72 = v202;
    }
    else
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      if (!Array<A>.fpfs_syncFetchAllFPItems()()) {
        goto LABEL_153;
      }
      uint64_t v208 = v205;
      Class v209 = v79;
      Class v210 = v206;
      Class v211 = v81;
      Class v212 = v82;
      swift_beginAccess();
      uint64_t v91 = sub_1000CBE70(&qword_100719440);
      if ((*(unsigned int (**)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v72, 1, v91) == 1)goto LABEL_148; {
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      }
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v201 == 2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_82:
      uint64_t v71 = v203;
      goto LABEL_34;
    }
    uint64_t v71 = v203;
    if ((v196 & 0x100) != 0)
    {
      if (*(unsigned char *)(v60 + 16))
      {
        uint64_t v92 = sub_1000D24AC(v207);
        if (!v92) {
          goto LABEL_153;
        }
        v93._rawValue = v92;
        swift_beginAccess();
        uint64_t v94 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 48))(v71, 1, v94) == 1) {
          goto LABEL_150;
        }
        NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v93);
        swift_endAccess();
        id v72 = v202;
      }
      else
      {
        id v114 = sub_100166FA0(v207);
        if (!v114) {
          goto LABEL_153;
        }
        v115._rawValue = v114;
        swift_beginAccess();
        uint64_t v116 = sub_1000CBE70(&qword_100719440);
        if ((*(unsigned int (**)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))(*(void *)(v116 - 8) + 48))(v72, 1, v116) == 1)goto LABEL_149; {
        NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v115);
        }
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_82;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v75 = v204 + 1;
    if ((Class)(v204 + 1) == isa)
    {
      swift_bridgeObjectRelease();
      goto LABEL_124;
    }
  }
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10007C014()
{
  unint64_t v101 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v95 = *(void *)(v101 - 8);
  uint64_t v1 = __chkstk_darwin(v101);
  uint64_t v99 = (char *)v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v86 - v3;
  uint64_t v5 = type metadata accessor for DOCItemSortMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v96 = (char *)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v102 = (uint64_t)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v86 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v86 - v15;
  __chkstk_darwin(v14);
  uint64_t v98 = (uint64_t)v86 - v17;
  uint64_t v18 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)__chkstk_darwin(v20);
  uint64_t v25 = (char *)v86 - v24;
  uint64_t v26 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v26)
  {
    __break(1u);
    return result;
  }
  uint64_t v92 = v6;
  uint64_t v27 = *(char **)(v26 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  char v28 = *(unsigned char *)(v26 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
  Swift::OpaquePointer v93 = (void (*)(char *, unint64_t, unint64_t))v5;
  uint64_t v94 = v4;
  uint64_t v97 = v26;
  if (v28)
  {
    uint64_t v29 = *(void *)&v27[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = v18;
    unint64_t v31 = v27;
    id v32 = [v31 sortDescriptors];
    sub_10009E6C4(0, (unint64_t *)&unk_10070ABE0);
    uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = v30;
  }
  char v100 = v0;
  uint64_t v33 = (uint64_t)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  swift_beginAccess();
  char v34 = *(char **)(v19 + 48);
  int v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v33, 1, v18);
  uint64_t v103 = v33;
  if (v35)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v25, v33, v18);
    DOCItemSortDescriptor.sortDescriptors.getter();
    uint64_t v91 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
    unint64_t v36 = swift_bridgeObjectRetain();
    unsigned __int8 v37 = sub_10007EC90(v36, v29);
    uint64_t v22 = v91;
    swift_bridgeObjectRelease_n();
    id result = (id)swift_bridgeObjectRelease();
    if (v37) {
      return result;
    }
  }
  uint64_t v38 = v98;
  sub_1000CBC00(v103, v98, (uint64_t *)&unk_1007086D0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v34)(v38, 1, v18) == 1)
  {
    id v39 = (char *)v18;
    sub_1000CBBA4(v38, (uint64_t *)&unk_1007086D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v18);
    DOCNodeCollection.reorderItems(with:)((uint64_t)v16);
    sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007086D0);
    for (Swift::Int i = v100; ; Swift::Int i = v66)
    {
      id result = [i isViewLoaded];
      if (!result) {
        break;
      }
      unint64_t v67 = (unint64_t)sub_10001A904();
      unint64_t v52 = v67;
      if (v67 >> 62)
      {
LABEL_40:
        uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
        if (!v62) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v62 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v62) {
          goto LABEL_41;
        }
      }
      if (v62 >= 1)
      {
        uint64_t v68 = 0;
        do
        {
          if ((v52 & 0xC000000000000001) != 0) {
            id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v69 = *(id *)(v52 + 8 * v68 + 32);
          }
          BOOL v70 = v69;
          ++v68;
          sub_1000CBC00(v103, (uint64_t)v16, (uint64_t *)&unk_1007086D0);
          uint64_t v71 = (uint64_t)v70 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor;
          swift_beginAccess();
          sub_1000CBC00(v71, (uint64_t)v13, (uint64_t *)&unk_1007086D0);
          swift_beginAccess();
          sub_10009758C((uint64_t)v16, v71, (uint64_t *)&unk_1007086D0);
          swift_endAccess();
          sub_1004D41B0((uint64_t)v13);
          sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007086D0);
          sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_1007086D0);
        }
        while (v62 != v68);
LABEL_41:
        swift_bridgeObjectRelease();
        unint64_t v72 = (unint64_t)sub_1001BA864();
        unint64_t v73 = v72;
        if (v72 >> 62) {
          goto LABEL_57;
        }
        uint64_t v74 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
        while (v74)
        {
          unint64_t v101 = v73 & 0xC000000000000001;
          for (uint64_t j = 4; ; ++j)
          {
            char v76 = v101
                ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v73 + 8 * j);
            uint64_t v77 = v76;
            uint64_t v78 = j - 3;
            if (__OFADD__(j - 4, 1)) {
              break;
            }
            uint64_t v79 = (*(uint64_t (**)(void))((swift_isaMask & *v76) + 0x1F8))();
            if (v79)
            {
              Class v80 = (char *)v79;
              uint64_t v81 = v102;
              sub_1000CBC00(v103, v102, (uint64_t *)&unk_1007086D0);
              uint64_t v82 = (uint64_t)&v80[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
              swift_beginAccess();
              sub_10009758C(v81, v82, (uint64_t *)&unk_1007086D0);
              swift_endAccess();
              uint64_t v83 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
              uint64_t v84 = *(void *)&v80[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications];
              if ((v84 & 0x200) == 0)
              {
                v84 |= 0x200uLL;
                *(void *)&v80[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = v84;
              }
              if (!*(void *)&v80[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
                && !sub_1000CBC64())
              {
                *(void *)&v80[v83] = 0;
                sub_100090F98(v84, (uint64_t)v80);
              }
              sub_1000CBBA4(v102, (uint64_t *)&unk_1007086D0);
            }
            if (v78 == v74) {
              return (id)swift_bridgeObjectRelease();
            }
          }
          __break(1u);
LABEL_57:
          swift_bridgeObjectRetain();
          uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        return (id)swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_61:
      uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
LABEL_26:
      uint64_t v66 = v100;
      swift_bridgeObjectRelease();
      if (!v65
        && (*((unsigned char *)v66 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive) & 1) == 0)
      {
        _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
      }
      (*(void (**)(char *, char *))(v62 + 8))(v34, v39);
    }
    return result;
  }
  uint64_t v89 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v22, v38, v18);
  sub_100080930(0);
  sub_10007D124();
  swift_bridgeObjectRetain();
  uint64_t v41 = Array<A>.displayableModes.getter();
  swift_bridgeObjectRelease();
  os_log_type_t v42 = v96;
  DOCItemSortDescriptor.sortType.getter();
  int v43 = v94;
  DOCItemSortMode.displayableMode.getter();
  (*(void (**)(char *, void (*)(char *, unint64_t, unint64_t)))(v92 + 8))(v42, v93);
  uint64_t v98 = *(void *)(v41 + 16);
  if (!v98)
  {
    (*(void (**)(char *, unint64_t))(v95 + 8))(v43, v101);
    goto LABEL_22;
  }
  uint64_t v91 = v22;
  uint64_t v88 = v18;
  uint64_t v44 = v95;
  unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v46 = *(void (**)(char *, unint64_t, unint64_t))(v95 + 16);
  id v39 = v99;
  unint64_t v47 = v101;
  id v96 = (char *)(v95 + 16);
  Swift::OpaquePointer v93 = v46;
  v46(v99, v41 + v45, v101);
  uint64_t v48 = sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  swift_bridgeObjectRetain();
  uint64_t v92 = v48;
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v50 = v47;
  char v34 = *(char **)(v44 + 8);
  ((void (*)(char *, unint64_t))v34)(v39, v50);
  if (v49)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v87 = v41;
  v86[1] = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v98 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v88;
    unint64_t v51 = v101;
    goto LABEL_21;
  }
  uint64_t v95 = *(void *)(v44 + 72);
  unint64_t v52 = v87 + v95 + v45;
  uint64_t v53 = 1;
  unint64_t v51 = v101;
  uint64_t v90 = v44 + 8;
  do
  {
    v93(v39, v52, v51);
    uint64_t v54 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v55 = v34;
    uint64_t v56 = v39;
    int v57 = v43;
    char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v59 = v56;
    char v34 = v55;
    ((void (*)(char *, unint64_t))v55)(v59, v51);
    if (v58)
    {
      swift_bridgeObjectRelease();
      int v43 = v57;
LABEL_24:
      ((void (*)(char *, unint64_t))v34)(v43, v101);
      swift_bridgeObjectRelease();
      uint64_t v62 = v89;
      char v34 = v91;
      id v39 = (char *)v88;
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v16, v91, v88);
      (*(void (**)(char *, void, uint64_t, char *))(v62 + 56))(v16, 0, 1, v39);
      DOCNodeCollection.reorderItems(with:)((uint64_t)v16);
      uint64_t v63 = sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007086D0);
      unint64_t v64 = sub_10007CC5C(v63);
      if (!(v64 >> 62))
      {
        uint64_t v65 = *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_26;
      }
      goto LABEL_61;
    }
    ++v53;
    v52 += v95;
    unint64_t v51 = v101;
    int v43 = v57;
    id v39 = v99;
  }
  while (v54 != v98);
  swift_bridgeObjectRelease();
  uint64_t v18 = v88;
LABEL_21:
  uint64_t v22 = v91;
  ((void (*)(char *, unint64_t))v34)(v43, v51);
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v60 = v89;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v22, v18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v16, 1, 1, v18);
  uint64_t v61 = v103;
  swift_beginAccess();
  sub_10008C318((uint64_t)v16, v61, (uint64_t *)&unk_1007086D0);
  return (id)swift_endAccess();
}

unint64_t sub_10007CC5C(uint64_t a1)
{
  uint64_t v2 = *(char **)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    uint64_t v4 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
    uint64_t v5 = __chkstk_darwin(a1);
    __chkstk_darwin(v5);
    sub_10007896C(v2, v3, 1);
    swift_retain();
    os_unfair_lock_lock(v4 + 4);
    sub_1001A17EC(&v11);
    os_unfair_lock_unlock(v4 + 4);
    unint64_t v6 = v11;
    swift_release();
    sub_1000C71C8(v2, v3, 1);
  }
  else
  {
    uint64_t v7 = v2;
    id v8 = [v7 items];
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v10 = _bridgeCocoaArray<A>(_:)();

      swift_bridgeObjectRelease_n();
      return v10;
    }
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();

    swift_bridgeObjectRelease();
  }
  return v6;
}

id sub_10007CE38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == v28) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v29 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v15 = v14;
    sub_10009E6C4(0, (unint64_t *)a3);
    a3 = static NSObject.== infix(_:_:)();

    if ((a3 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v16 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v7 - 2;
      while (v16 != v17)
      {
        unint64_t v7 = v17 + 1;
        if (v29) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(v5 + 40 + 8 * v17);
        }
        a3 = (uint64_t)v19;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v17);
        }
        uint64_t v21 = v20;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if ((v7 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      a3 = v23 - 1;
      uint64_t v24 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v16)
      {
        if (!a3) {
          goto LABEL_53;
        }
        uint64_t v26 = *v24++;
        uint64_t v25 = v26;
        uint64_t v27 = *(void **)v9;
        v9 += 8;
        a2 = v25;
        uint64_t v5 = v27;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if (v7)
        {
          --a3;
          if (--v16) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007D124()
{
  uint64_t v1 = sub_10007D23C();
  *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel) = v1;
  swift_retain();
  swift_release();
  uint64_t v2 = *(char **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
  if (v2)
  {
    uint64_t v3 = OBJC_IVAR____TtC5Files28DOCViewOptionsViewController_viewModel;
    *(void *)&v2[OBJC_IVAR____TtC5Files28DOCViewOptionsViewController_viewModel] = v1;
    swift_retain();
    uint64_t v4 = v2;
    swift_release();
    uint64_t v5 = *(void *)&v2[v3];
    swift_retain();
    unint64_t v6 = (void (*)(uint64_t *, void))dispatch thunk of UIHostingController.rootView.modify();
    uint64_t v8 = v7;
    swift_release();
    *(void *)(v8 + 8) = v5;
    v6(&v10, 0);

    return swift_release();
  }
  else
  {
    return swift_release();
  }
}

Swift::String *sub_10007D23C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v47 = v2;
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v39 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v40 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = type metadata accessor for DOCItemSortMode();
  os_log_type_t v42 = *(void (**)(uint64_t, uint64_t))(v12 - 8);
  uint64_t v43 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v45 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  id v19 = (char *)&v39 - v18;
  id v20 = [v0 traitCollection];
  sub_10009E9DC();
  UITraitCollection.subscript.getter();

  int v44 = v49;
  id v21 = [self viewOptionsSizeSetting];
  LODWORD(v41) = [v21 isEnabled];

  sub_10007D85C();
  uint64_t v22 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  swift_beginAccess();
  sub_1000CBC00(v22, (uint64_t)v11, (uint64_t *)&unk_1007086D0);
  unint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v4;
  if (v23(v11, 1, v4))
  {
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007086D0);
    uint64_t v25 = v42;
    uint64_t v26 = v43;
    (*((void (**)(char *, void, uint64_t))v42 + 13))(v19, enum case for DOCItemSortMode.kind(_:), v43);
  }
  else
  {
    uint64_t v27 = v39;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v39, v11, v24);
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007086D0);
    DOCItemSortDescriptor.sortType.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v27, v24);
    uint64_t v25 = v42;
    uint64_t v26 = v43;
    (*((void (**)(char *, char *, uint64_t))v42 + 4))(v19, v17, v43);
  }
  uint64_t v28 = v40;
  sub_1000CBC00(v22, v40, (uint64_t *)&unk_1007086D0);
  if (v23((char *)v28, 1, v24))
  {
    sub_1000CBBA4(v28, (uint64_t *)&unk_1007086D0);
    LODWORD(v43) = 0;
  }
  else
  {
    unint64_t v29 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v39, v28, v24);
    sub_1000CBBA4(v28, (uint64_t *)&unk_1007086D0);
    LODWORD(v43) = DOCItemSortDescriptor.ascending.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v24);
  }
  uint64_t v30 = (void (*)(uint64_t, uint64_t))_swiftEmptyArrayStorage;
  if (v41) {
    uint64_t v30 = (void (*)(uint64_t, uint64_t))&off_1006899B0;
  }
  os_log_type_t v42 = v30;
  uint64_t v41 = sub_10007DA34(1);
  unint64_t v31 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
  swift_beginAccess();
  uint64_t v32 = (uint64_t)v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v48, v31, v47);
  uint64_t v33 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                  + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
  uint64_t v34 = (uint64_t)v45;
  (*((void (**)(char *, char *, uint64_t))v25 + 2))(v45, v19, v26);
  int v35 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isShowingAllFilenameExtensions];
  uint64_t v36 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldShowAllFilenameExtensionPublisher];
  type metadata accessor for DOCViewOptionsViewModel();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  unsigned __int8 v37 = sub_10007E3C8((uint64_t)v41, v32, v33, v34, v43 & 1, v42, v44, v35, v36);
  swift_release();
  (*((void (**)(char *, uint64_t))v25 + 1))(v19, v26);
  *(void **)((char *)&v37->_object + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate) = &off_1006A31B0;
  swift_unknownObjectWeakAssign();
  return v37;
}

id sub_10007D85C()
{
  uint64_t v1 = v0;
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  id result = [*(id *)(qword_100737550 + 40) forceDisplayFilenameExtensions];
  uint64_t v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isShowingAllFilenameExtensions;
  if (result != v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isShowingAllFilenameExtensions])
  {
    if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      char v4 = (char)result;
      unint64_t v5 = sub_10007CC5C((uint64_t)result);
      DOCItemCollectionViewController.items.setter(v5);
      swift_beginAccess();
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_10007A41C(v6, 257);
      swift_bridgeObjectRelease();
      id v7 = [v0 presentedViewController];
      if (!v7)
      {
LABEL_11:
        v1[v3] = v4;
        return (id)sub_100016C84();
      }
      uint64_t v8 = v7;
      type metadata accessor for DOCSearchController();
      uint64_t v9 = (char *)swift_dynamicCastClass();
      if (!v9 || (v10 = v9, id result = [v9 isActive], !result))
      {

        goto LABEL_11;
      }
      uint64_t v11 = *(char **)&v10[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
      if (*(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
      {
        uint64_t v12 = v11;
        unint64_t v13 = sub_10007CC5C((uint64_t)v12);
        DOCItemCollectionViewController.items.setter(v13);
        swift_beginAccess();
        uint64_t v14 = swift_bridgeObjectRetain();
        sub_10007A41C(v14, 257);

        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

char *sub_10007DA34(int a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_100711B50);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v55 = (char *)v40 - v14;
  __chkstk_darwin(v13);
  unint64_t v45 = (char *)v40 - v15;
  uint64_t v54 = type metadata accessor for DOCItemSortMode();
  uint64_t v16 = *(void *)(v54 - 8);
  id result = (char *)__chkstk_darwin(v54);
  id v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v20)
  {
    uint64_t v43 = v12;
    uint64_t v21 = v20 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v21 + 16) & 1) != 0
      || (id v22 = *(id *)v21,
          unsigned __int8 v23 = objc_msgSend(v22, "doc_displaysSearchResults"),
          v22,
          (v23 & 1) == 0))
    {
      id v24 = *(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
      unint64_t v25 = sub_10007FCA0();

      uint64_t v26 = *(void *)(v25 + 16);
      if (v26)
      {
        int v41 = a1;
        os_log_type_t v42 = v5;
        uint64_t v28 = v16 + 16;
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
        unint64_t v29 = v25 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
        uint64_t v52 = *(void *)(v16 + 72);
        uint64_t v53 = v27;
        unint64_t v51 = (void (**)(char *, void, uint64_t))(v46 + 104);
        unsigned int v50 = enum case for DOCItemGroupingBehavior.grouped(_:);
        uint64_t v48 = (void (**)(char *, uint64_t))(v16 + 8);
        unsigned __int8 v49 = (void (**)(char *, void, uint64_t, uint64_t))(v46 + 56);
        uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
        uint64_t v30 = (void (**)(char *, char *, uint64_t))(v46 + 32);
        v40[1] = v25;
        swift_bridgeObjectRetain();
        unint64_t v31 = (char *)_swiftEmptyArrayStorage;
        uint64_t v44 = v28;
        do
        {
          uint64_t v33 = v53;
          uint64_t v32 = v54;
          v53(v19, (char *)v29, v54);
          v33(v8, v19, v32);
          (*v51)(v8, v50, v9);
          (*v49)(v8, 0, 1, v9);
          (*v48)(v19, v32);
          if ((*v47)(v8, 1, v9) == 1)
          {
            sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10070A1B8);
          }
          else
          {
            uint64_t v34 = *v30;
            int v35 = v45;
            (*v30)(v45, v8, v9);
            v34(v55, v35, v9);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v31 = (char *)sub_10007EC5C(0, *((void *)v31 + 2) + 1, 1, (unint64_t)v31);
            }
            unint64_t v37 = *((void *)v31 + 2);
            unint64_t v36 = *((void *)v31 + 3);
            if (v37 >= v36 >> 1) {
              unint64_t v31 = (char *)sub_10007EC5C(v36 > 1, v37 + 1, 1, (unint64_t)v31);
            }
            *((void *)v31 + 2) = v37 + 1;
            v34(&v31[((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v37], v55, v9);
          }
          v29 += v52;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease_n();
        unint64_t v5 = v42;
        LOBYTE(a1) = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v31 = (char *)_swiftEmptyArrayStorage;
      }
      uint64_t v56 = v31;
      if (*((void *)v31 + 2))
      {
        if (a1)
        {
          uint64_t v38 = v46;
          id v39 = v43;
          (*(void (**)(char *, void, uint64_t))(v46 + 104))(v43, enum case for DOCItemGroupingBehavior.none(_:), v9);
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v5, v39, v9);
          sub_10007ECA4(0, 0, (uint64_t)v5);
          return v56;
        }
        return v31;
      }
      swift_bridgeObjectRelease();
    }
    return (char *)_swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007DFA0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000CBE70(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  id v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10007E220(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10007E220(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCViewOptionsViewModel()
{
  uint64_t result = qword_100711EF0;
  if (!qword_100711EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::String *sub_10007E3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(uint64_t, uint64_t), int a7, int a8, uint64_t a9)
{
  int v68 = a5;
  int v69 = a8;
  int v63 = a7;
  uint64_t v65 = a3;
  uint64_t v66 = a6;
  uint64_t v76 = a4;
  uint64_t v77 = a2;
  uint64_t v64 = a1;
  uint64_t v10 = sub_1000CBE70(&qword_100712028);
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v73 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v74 = (char *)&v60 - v13;
  uint64_t v14 = type metadata accessor for DOCItemSortMode();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v67 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v70 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v19 = *(void *)(v70 - 8);
  uint64_t v20 = __chkstk_darwin(v70);
  unint64_t v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v24 = (char *)&v60 - v23;
  uint64_t result = (Swift::String *)(id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v26 = result;
  v79._uint64_t countAndFlagsBits = 0xD000000000000025;
  v79._unint64_t object = (void *)0x80000001005EAC80;
  v27._uint64_t countAndFlagsBits = 0x74704F2077656956;
  v27._unint64_t object = (void *)0xEC000000736E6F69;
  v28._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v28._unint64_t object = (void *)0xEB00000000656C62;
  v29._uint64_t countAndFlagsBits = 0x74704F2077656956;
  v29._unint64_t object = (void *)0xEC000000736E6F69;
  Swift::String v30 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v79);

  v9[1] = v30;
  uint64_t result = (Swift::String *)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v31 = result;
  v80._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v80._unint64_t object = (void *)0x80000001005EB060;
  v32._uint64_t countAndFlagsBits = 0x79422070756F7247;
  v32._unint64_t object = (void *)0xE800000000000000;
  v33._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v33._unint64_t object = (void *)0xEB00000000656C62;
  v34._uint64_t countAndFlagsBits = 0x79422070756F7247;
  v34._unint64_t object = (void *)0xE800000000000000;
  Swift::String v35 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v80);

  v9[2] = v35;
  uint64_t result = (Swift::String *)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v36 = result;
  v81._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v81._unint64_t object = (void *)0x80000001005EB980;
  v37._uint64_t countAndFlagsBits = 0x79422074726F53;
  v37._unint64_t object = (void *)0xE700000000000000;
  v38._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v38._unint64_t object = (void *)0xEB00000000656C62;
  v39._uint64_t countAndFlagsBits = 0x79422074726F53;
  v39._unint64_t object = (void *)0xE700000000000000;
  Swift::String v40 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v81);

  v9[3] = v40;
  uint64_t result = (Swift::String *)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  int v41 = result;
  uint64_t v62 = v10;
  v82._uint64_t countAndFlagsBits = 0xD000000000000042;
  v82._unint64_t object = (void *)0x80000001005EB9E0;
  v42._unint64_t object = (void *)0x80000001005EB9C0;
  v42._uint64_t countAndFlagsBits = 0xD000000000000012;
  v43._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v43._unint64_t object = (void *)0xEB00000000656C62;
  v44._uint64_t countAndFlagsBits = 0xD000000000000012;
  v44._unint64_t object = (void *)0x80000001005EB9C0;
  Swift::String v45 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v82);

  v9[4] = v45;
  uint64_t result = (Swift::String *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v46 = result;
    uint64_t v61 = a9;
    v63 &= 1u;
    v47._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v83._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
    v83._unint64_t object = (void *)0x80000001005EBA50;
    v47._unint64_t object = (void *)0x80000001005EBA30;
    v48._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v48._unint64_t object = (void *)0xEB00000000656C62;
    v49._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v49._unint64_t object = (void *)0x80000001005EBA30;
    Swift::String v50 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v83);

    v9[5] = v50;
    *(void **)((char *)&v9->_object + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate) = 0;
    swift_unknownObjectWeakInit();
    *(uint64_t *)((char *)&v9->_countAndFlagsBits + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_groupingBehaviors) = v64;
    *(uint64_t *)((char *)&v9->_countAndFlagsBits + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_sortModes) = v65;
    *(uint64_t *)((char *)&v9->_countAndFlagsBits + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_sizeSettings) = (uint64_t)v66;
    unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v52 = v70;
    v51(v24, v77, v70);
    swift_beginAccess();
    v51(v22, (uint64_t)v24, v52);
    Published.init(initialValue:)();
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v65 = v19 + 8;
    uint64_t v66 = v53;
    v53((uint64_t)v24, v52);
    swift_endAccess();
    uint64_t v55 = v71;
    uint64_t v54 = v72;
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
    v56(v18, v76, v72);
    swift_beginAccess();
    v56(v67, (uint64_t)v18, v54);
    Published.init(initialValue:)();
    uint64_t v71 = *(void *)(v55 + 8);
    ((void (*)(char *, uint64_t))v71)(v18, v54);
    swift_endAccess();
    *((unsigned char *)&v9->_countAndFlagsBits + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_selectedSortOrderAscending) = v68 & 1;
    swift_beginAccess();
    LOBYTE(v78) = v63;
    Published.init(initialValue:)();
    swift_endAccess();
    swift_beginAccess();
    LOBYTE(v78) = v69 & 1;
    Published.init(initialValue:)();
    *(uint64_t *)((char *)&v9->_countAndFlagsBits + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_availableSections) = (uint64_t)&off_100689988;
    uint64_t v78 = v61;
    sub_1000CBE70(&qword_100712008);
    int v57 = v74;
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1000CBE70(&qword_10070AEA0);
    sub_10007EC00();
    Publisher<>.assign(to:)();
    uint64_t v58 = v75;
    uint64_t v59 = v62;
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v73, v57, v62);
    swift_beginAccess();
    Published.projectedValue.setter();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
    ((void (*)(uint64_t, uint64_t))v71)(v76, v54);
    v66(v77, v52);
    return v9;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007EC00()
{
  unint64_t result = qword_10070AEA8;
  if (!qword_10070AEA8)
  {
    sub_100074618(&qword_10070AEA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AEA8);
  }
  return result;
}

uint64_t sub_10007EC5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_100708E90, (uint64_t (*)(void))&type metadata accessor for DOCItemGroupingBehavior, (uint64_t (*)(void))&type metadata accessor for DOCItemGroupingBehavior);
}

id sub_10007EC90(unint64_t a1, uint64_t a2)
{
  return sub_10007CE38(a1, a2, (uint64_t)&unk_10070ABE0);
}

uint64_t sub_10007ECA4(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_10007EC5C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v17 = *(void *)(v15 + 72);
  unint64_t v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_33;
  }
  if (v20 < 0)
  {
LABEL_35:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v21 = v18 + v17;
  unint64_t v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v24 = *(void *)(v5 + 16);
  BOOL v25 = __OFADD__(v24, v9);
  uint64_t v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  }
  return sub_1000CBBA4(a3, (uint64_t *)&unk_100711B50);
}

uint64_t _s10BBIStorageCMa()
{
  return self;
}

double sub_10007EEE4()
{
  double result = 0.0;
  v0[10] = 0u;
  v0[11] = 0u;
  v0[8] = 0u;
  v0[9] = 0u;
  v0[6] = 0u;
  v0[7] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t type metadata accessor for DOCThumbnailLoadingPool()
{
  return self;
}

uint64_t sub_10007EF2C()
{
  v7[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v7[0] - 8);
  __chkstk_darwin(v7[0]);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  *(unsigned char *)(v0 + 24) = 0;
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7[0]);
  *(void *)(v0 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  return v0;
}

uint64_t sub_10007F190()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_1007155A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 48))
  {
    uint64_t v6 = *(void *)(v0 + 48);
  }
  else
  {
    swift_getKeyPath();
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
    swift_release();
    sub_1000D2AA4();
    uint64_t v6 = Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 48) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

id _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void **)(a4 + 8);
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
  static UTType.url.getter();
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_15:
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = v8;
    v26[3] = v9;
    v26[4] = a3;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_1000536DC;
    *(void *)(v27 + 24) = v26;
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_1000535D8;
    uint64_t v85 = v27;
    Swift::String v80 = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    Swift::String v82 = sub_100053508;
    Swift::String v83 = &unk_1006A21B8;
    Swift::String v28 = _Block_copy(&v80);
    Swift::String v29 = self;
    id v30 = v8;
    id v31 = a3;
    id v32 = [v29 predicateWithBlock:v28];
    goto LABEL_16;
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_18:
    Swift::String v35 = (void *)swift_allocObject();
    v35[2] = v8;
    v35[3] = v9;
    v35[4] = a3;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_100317BD0;
    *(void *)(v36 + 24) = v35;
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_1000535D8;
    uint64_t v85 = v36;
    Swift::String v80 = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    Swift::String v82 = sub_100053508;
    Swift::String v83 = &unk_1006A2140;
    Swift::String v28 = _Block_copy(&v80);
    Swift::String v37 = self;
    id v38 = v8;
    id v39 = a3;
    id v32 = [v37 predicateWithBlock:v28];
    goto LABEL_16;
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = a3;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_100317BC4;
    *(void *)(v42 + 24) = v41;
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_1000535D8;
    uint64_t v85 = v42;
    Swift::String v80 = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    Swift::String v82 = sub_100053508;
    Swift::String v83 = &unk_1006A20C8;
    Swift::String v28 = _Block_copy(&v80);
    Swift::String v43 = self;
    id v44 = a3;
    id v32 = [v43 predicateWithBlock:v28];
    goto LABEL_16;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_20;
  }
  uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v46;
  if (v45 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v47 == v48)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = a3;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_100317BBC;
    *(void *)(v51 + 24) = v50;
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_1000535D8;
    uint64_t v85 = v51;
    Swift::String v80 = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    Swift::String v82 = sub_100053508;
    Swift::String v83 = &unk_1006A2050;
    Swift::String v28 = _Block_copy(&v80);
    uint64_t v52 = self;
    id v53 = a3;
    id v32 = [v52 predicateWithBlock:v28];
    goto LABEL_16;
  }
  char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v49) {
    goto LABEL_25;
  }
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v55;
  if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    uint64_t v59 = (void *)swift_allocObject();
    void v59[2] = v8;
    v59[3] = v9;
    v59[4] = a3;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = sub_100317BB0;
    *(void *)(v60 + 24) = v59;
    uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_1000535D8;
    uint64_t v85 = v60;
    Swift::String v80 = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    Swift::String v82 = sub_100053508;
    Swift::String v83 = &unk_1006A1FD8;
    Swift::String v28 = _Block_copy(&v80);
    uint64_t v61 = self;
    id v62 = v8;
    id v63 = a3;
    id v32 = [v61 predicateWithBlock:v28];
    goto LABEL_16;
  }
  char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v58) {
    goto LABEL_30;
  }
  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v65;
  if (v64 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v66 == v67)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v68 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = a5;
      *(void *)(v75 + 24) = a3;
      uint64_t v76 = swift_allocObject();
      *(void *)(v76 + 16) = sub_100317B48;
      *(void *)(v76 + 24) = v75;
      uint64_t v84 = sub_1000535DC;
      uint64_t v85 = v76;
      Swift::String v80 = _NSConcreteStackBlock;
      uint64_t v81 = 1107296256;
      Swift::String v82 = sub_100053508;
      Swift::String v83 = &unk_1006A1EE8;
      Swift::String v28 = _Block_copy(&v80);
      uint64_t v77 = self;
      id v78 = a5;
      id v79 = a3;
      id v32 = [v77 predicateWithBlock:v28];
      goto LABEL_16;
    }
  }
  int v69 = (void *)swift_allocObject();
  v69[2] = a2;
  v69[3] = v8;
  v69[4] = v9;
  v69[5] = a3;
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = sub_100317BA0;
  *(void *)(v70 + 24) = v69;
  uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t))sub_1000535D8;
  uint64_t v85 = v70;
  Swift::String v80 = _NSConcreteStackBlock;
  uint64_t v81 = 1107296256;
  Swift::String v82 = sub_100053508;
  Swift::String v83 = &unk_1006A1F60;
  Swift::String v28 = _Block_copy(&v80);
  uint64_t v71 = self;
  id v72 = a2;
  id v73 = v8;
  id v74 = a3;
  id v32 = [v71 predicateWithBlock:v28];
LABEL_16:
  id v33 = v32;
  _Block_release(v28);
  swift_release();
  return v33;
}

unint64_t sub_10007FCA0()
{
  uint64_t v1 = type metadata accessor for DOCItemSortMode();
  uint64_t v2 = *(void (**)(char *, char *, uint64_t))(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  Swift::String v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (unint64_t)&v33 - v12;
  __chkstk_darwin(v11);
  char v49 = (char *)&v33 - v14;
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes);
  unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v42 = v17;
  if (!v17)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    (*((void (**)(unint64_t, void, uint64_t))v2 + 13))(v13, enum case for DOCItemSortMode.sharedBy(_:), v1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  unint64_t v34 = v13;
  unint64_t v13 = 0;
  char v40 = v10;
  uint64_t v41 = (char *)v2 + 16;
  unsigned int v39 = enum case for DOCItemSortMode.name(_:);
  unsigned int v36 = enum case for DOCItemSortMode.tags(_:);
  Swift::String v43 = v2;
  Swift::String v35 = (void (**)(char *, char *, uint64_t))((char *)v2 + 32);
  uint64_t v47 = (char *)v2 + 104;
  uint64_t v38 = v18;
  while (v13 < *(void *)(v18 + 16))
  {
    uint64_t v20 = v43;
    unint64_t v21 = (*((unsigned __int8 *)v20 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v20 + 80);
    uint64_t v44 = *((void *)v43 + 9);
    unint64_t v45 = v21;
    unint64_t v48 = v13;
    uint64_t v2 = (void (*)(char *, char *, uint64_t))*((void *)v43 + 2);
    unint64_t v16 = v1;
    uint64_t v22 = v49;
    v2(v49, (char *)(v18 + v21 + v44 * v13), v16);
    uint64_t v23 = v7;
    uint64_t v46 = (void (*)(char *, void, unint64_t))*((void *)v20 + 13);
    v46(v10, v39, v16);
    sub_100080190(&qword_10070ADD0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
    char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v25 = (void (*)(char *, unint64_t))*((void *)v20 + 1);
    v25(v10, v16);
    uint64_t v26 = v22;
    uint64_t v1 = v16;
    v2(v23, v26, v16);
    if (v24)
    {
      v25(v23, v16);
      uint64_t v7 = v23;
    }
    else
    {
      v46(v10, v36, v16);
      unint64_t v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      v25(v10, v1);
      v25(v23, v1);
      uint64_t v7 = v23;
      if ((v16 & 1) == 0)
      {
        uint64_t v2 = *v35;
        (*v35)(v37, v49, v1);
        unint64_t v16 = (unint64_t)v50;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v19 = v48;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000802B0(0, *(void *)(v16 + 16) + 1, 1);
          unint64_t v16 = (unint64_t)v50;
        }
        unint64_t v29 = *(void *)(v16 + 16);
        unint64_t v28 = *(void *)(v16 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1000802B0(v28 > 1, v29 + 1, 1);
          unint64_t v16 = (unint64_t)v50;
        }
        *(void *)(v16 + 16) = v29 + 1;
        v2((char *)(v16 + v45 + v29 * v44), v37, v1);
        uint64_t v50 = (void *)v16;
        uint64_t v18 = v38;
        goto LABEL_5;
      }
    }
    v25(v49, v1);
    uint64_t v18 = v38;
    unint64_t v19 = v48;
LABEL_5:
    unint64_t v13 = v19 + 1;
    if (v42 == v13)
    {
      unint64_t v16 = (unint64_t)v50;
      uint64_t v2 = v43;
      unint64_t v13 = v34;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_20:
  unint64_t v16 = sub_10018F39C(0, *(void *)(v16 + 16) + 1, 1, v16);
LABEL_16:
  unint64_t v31 = *(void *)(v16 + 16);
  unint64_t v30 = *(void *)(v16 + 24);
  if (v31 >= v30 >> 1) {
    unint64_t v16 = sub_10018F39C(v30 > 1, v31 + 1, 1, v16);
  }
  *(void *)(v16 + 16) = v31 + 1;
  (*((void (**)(unint64_t, unint64_t, uint64_t))v2 + 4))(v16+ ((*((unsigned __int8 *)v2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v2 + 80))+ *((void *)v2 + 9) * v31, v13, v1);
  return v16;
}

uint64_t sub_100080190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000801D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100080220(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100080268(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000802B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_1007054E0, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000802EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021D774);
}

uint64_t sub_100080300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021DCEC);
}

void DOCNodeCollection.reorderItems(with:)(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v23 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    sub_100080648(a1, (uint64_t)v9);
    uint64_t v13 = type metadata accessor for DOCItemSortDescriptor();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    int v16 = v15(v9, 1, v13);
    id v23 = v12;
    if (v16 == 1)
    {
      sub_10019F074((uint64_t)v9);
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v17 = (void *)DOCItemSortDescriptor.sortDescriptors.getter();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    }
    sub_100080648(a1, (uint64_t)v6);
    if (v15(v6, 1, v13) == 1)
    {
      sub_10019F074((uint64_t)v6);
      unint64_t v21 = &_swiftEmptySetSingleton;
    }
    else
    {
      unint64_t v21 = (void *)DOCItemSortDescriptor.nodePropertiesAffectingSort.getter();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    }
    sub_10001BF3C((uint64_t)v17, (uint64_t)v21);
    swift_bridgeObjectRelease();
    sub_1000C71C8(v12, v24, 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v18 = v12;
    sub_100080648(a1, (uint64_t)v11);
    uint64_t v19 = type metadata accessor for DOCItemSortDescriptor();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
    {
      sub_10019F074((uint64_t)v11);
    }
    else
    {
      DOCItemSortDescriptor.sortDescriptors.getter();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    }
    sub_10009E6C4(0, (unint64_t *)&unk_10070ABE0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 reorderItemsWithSortDescriptors:isa];
  }
}

uint64_t sub_100080648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FamilyFetcher()
{
  return self;
}

void _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0()
{
  uint64_t v1 = v0;
  if ((objc_msgSend(v0, "doc_scheduleHandlerIfInLiveResize:", "_doc_performLiveResizeSkipped_updateOverlay") & 1) == 0)
  {
    sub_10008110C();
    if ((v2 & 1) == 0)
    {
      id v3 = sub_10009E55C();
      if (sub_1000951EC(1))
      {
        uint64_t v4 = sub_100086544();
        unint64_t v5 = sub_100082C28();
        unint64_t v6 = sub_100081638();
        uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
        if (v7)
        {
          id v8 = v7;
          [v8 setHidesBackButton:[v1 hidesNavigationBackButton]];
        }
        if ([v1 isEditing])
        {
          sub_1003395FC();
        }
        else
        {
          unint64_t v10 = swift_bridgeObjectRetain();
          sub_100083AD8(v10);
        }
        sub_100080C70((unint64_t)v4, v5, v6, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100080AD4();
        sub_100081C14();
        id v11 = [v1 splitViewController];
        if (v11)
        {
          uint64_t v12 = v11;
          self;
          uint64_t v13 = (void *)swift_dynamicCastObjCClass();
          if (v13)
          {
            id v14 = [v13 sidebarViewController];
            sub_100020748();

            uint64_t v12 = v14;
          }
        }
        sub_10008152C();
        sub_100080930(2);
      }
      else
      {
        id v9 = [self standardUserDefaults];
        id v15 = String._bridgeToObjectiveC()();
        [v9 BOOLForKey:v15];
      }
    }
  }
}

uint64_t sub_100080930(uint64_t result)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    return result;
  }
  unsigned __int8 v3 = result;
  uint64_t v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v4 + 16))
  {
    unint64_t v5 = *(void **)(*(void *)v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    unint64_t v5 = *(void **)(v4 + 8);
    uint64_t result = swift_unknownObjectRetain();
    if (!v5) {
      return result;
    }
  }
  int v6 = v3;
  uint64_t v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  int v8 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton];
  id v9 = [v1 effectiveAppearance];
  if (v9
    && (unint64_t v10 = v9, v11 = [v9 showsCreateButton], v10, v11)
    && ([*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPickerUI] & 1) == 0&& (type metadata accessor for DOCActionManager(), swift_getObjectType(), (sub_10000C134((uint64_t)v5) & 1) != 0)&& (objc_msgSend(v5, "isTrashed") & 1) == 0&& (uint64_t v12 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], swift_beginAccess(), *(void *)v12 != 2))
  {
    char v13 = sub_10008BD6C() ^ 1;
  }
  else
  {
    char v13 = 0;
  }
  int v14 = v13 & 1;
  v1[v7] = v14;
  if (v6 == 2)
  {
    if (v8 == v14) {
      return swift_unknownObjectRelease();
    }
    goto LABEL_16;
  }
  if (v6) {
LABEL_16:
  }
    sub_1000D54D8();
  return swift_unknownObjectRelease();
}

void sub_100080AD4()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (v1)
  {
    id v7 = v1;
    if ([v0 enclosedInUIPDocumentLanding])
    {
      if (qword_1007052A8 != -1) {
        swift_once();
      }
      uint64_t v2 = qword_1007376F0;
    }
    else if (DOCDeviceIsPhone())
    {
      uint64_t v2 = 2;
    }
    else
    {
      uint64_t v2 = 0;
    }
    id v3 = [v7 setPreferredSearchBarPlacement:v2];
    if (((*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x168))(v3) & 1) == 0)
    {
      id v4 = [v7 searchController];
      if (v4)
      {
        unint64_t v5 = v4;
        id v6 = [v4 searchBar];

        [v6 _setEnabled:[v0 isEditing] ^ 1];
      }
    }
  }
}

void sub_100080C70(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5 = *(void **)((char *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (v5)
  {
    id v6 = v4;
    if ((a4 & 1) == 0)
    {
      id v21 = v5;
      unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_41;
    }
    unint64_t v10 = (char *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v11 = *((void *)v10 + 1);
      uint64_t ObjectType = swift_getObjectType();
      char v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 48);
      id v14 = v5;
      unint64_t v15 = v13(ObjectType, v11);
      swift_unknownObjectRelease();
      if (!(v15 >> 62)) {
        goto LABEL_5;
      }
    }
    else
    {
      id v22 = v5;
      unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      {
LABEL_5:
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v16)
        {
LABEL_6:
          if ((v15 & 0xC000000000000001) != 0)
          {
            uint64_t v17 = 0;
            while (1)
            {
              uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v19 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                break;
              }
              char v20 = *(unsigned char *)(v18 + OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction);
              swift_unknownObjectRelease();
              if (v20) {
                goto LABEL_21;
              }
              ++v17;
              if (v19 == v16) {
                goto LABEL_20;
              }
            }
            __break(1u);
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
          uint64_t v23 = 0;
          while (1)
          {
            uint64_t v24 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_46;
            }
            if ((*(unsigned char *)(*(void *)(v15 + 32 + 8 * v23)
                           + OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction) & 1) != 0)
              break;
            ++v23;
            if (v24 == v16) {
              goto LABEL_20;
            }
          }
LABEL_21:
          char v25 = 1;
          goto LABEL_22;
        }
LABEL_20:
        char v25 = 0;
LABEL_22:
        swift_bridgeObjectRelease_n();
        unsigned int v26 = [v6 enclosedInUIPDocumentLanding];
        if ((v25 & 1) == 0 && v26)
        {
          swift_bridgeObjectRelease();
          unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
        }
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v27 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v27)
          {
LABEL_27:
            unint64_t v36 = a1;
            uint64_t v37 = a2;
            uint64_t v38 = a3;
            unsigned int v39 = v5;
            if (v27 < 1)
            {
              __break(1u);
              return;
            }
            swift_bridgeObjectRetain_n();
            uint64_t v28 = 0;
            while (1)
            {
              if ((v15 & 0xC000000000000001) != 0) {
                unint64_t v31 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                unint64_t v31 = *(id *)(v15 + 8 * v28 + 32);
              }
              id v32 = v31;
              if (objc_msgSend(v6, "isEditing", v36, v37, v38, v39))
              {
                char v33 = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x168))();
                v32[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canEnable] = v33 & 1;
                if ((v33 & 1) == 0)
                {
                  uint64_t v29 = 0;
                  goto LABEL_31;
                }
              }
              else
              {
                v32[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canEnable] = 1;
              }
              uint64_t v29 = v32[OBJC_IVAR____TtC5Files30DOCHistoryNavigationButtonItem_canPerformShiftAction];
LABEL_31:
              ++v28;
              unint64_t v30 = (objc_class *)type metadata accessor for DOCHistoryNavigationButtonItem();
              v40.receiver = v32;
              v40.super_class = v30;
              [super setEnabled:v29];

              if (v27 == v28)
              {
                swift_bridgeObjectRelease_n();
                a3 = v38;
                unint64_t v5 = v39;
                a1 = v36;
                a2 = v37;
                if (!(v15 >> 62)) {
                  goto LABEL_39;
                }
LABEL_50:
                swift_bridgeObjectRetain();
                uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                goto LABEL_40;
              }
            }
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
        if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
          goto LABEL_50;
        }
LABEL_39:
        uint64_t v34 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_40:
        [v5 setLeftItemsSupplementBackButton:v34 == 0];
LABEL_41:
        [v5 setHidesBackButton:[v6 hidesNavigationBackButton]];
        if (!(v15 >> 62))
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
          swift_bridgeObjectRelease();
          unint64_t v35 = v15;
LABEL_43:
          sub_1000ABADC(a1, v35);
          swift_bridgeObjectRelease();
          sub_1000AA3C0(a2, a3);

          return;
        }
LABEL_47:
        sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
        swift_bridgeObjectRetain();
        unint64_t v35 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease_n();
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (v16) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
}

void sub_10008110C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v3 + 16) & 1) != 0
      || (id v4 = *(id *)v3,
          unsigned __int8 v5 = objc_msgSend(v4, "doc_displaysSearchResults"),
          v4,
          (v5 & 1) == 0))
    {
      sub_10008762C();
      if (v6)
      {
        id v7 = v6;
        if (v6[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1])
        {
          int v8 = *(char **)&v6[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
          if (((*(unsigned __int8 *)(v2
                                                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState)
               - 5 < 0xFFFFFFFD) & *(unsigned char *)(v2
                                            + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState)) == 1)
          {
            id v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
            unint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
            *(void *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = v9;
            uint64_t v11 = v8;
            id v12 = v9;
            char v13 = v11;
            id v14 = v12;

            uint64_t v15 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
            v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
            id v16 = [v13 viewIfLoaded];
            id v17 = [v16 window];

            if (v17) {
              sub_1000A6988();
            }

            *(void *)&v13[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = *(void *)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems);
            uint64_t v18 = v13;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v13[v15] = 0;
            id v19 = [v18 viewIfLoaded];
            id v20 = [v19 window];

            if (v20) {
              sub_1000A6988();
            }

            *(void *)&v18[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = *(void *)(v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
            id v21 = v18;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v13[v15] = 0;
            id v22 = [v21 viewIfLoaded];
            id v23 = [v22 window];

            if (v23) {
              sub_1000A6988();
            }

            *(void *)&v21[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = &off_1006A3190;
          }
          else
          {
            uint64_t v24 = *(void **)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
            *(void *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = 0;
            char v25 = v8;

            uint64_t v26 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
            v25[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
            id v27 = [v25 viewIfLoaded];
            id v28 = [v27 window];

            if (v28) {
              sub_1000A6988();
            }

            *(void *)&v25[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
            uint64_t v29 = v25;
            swift_bridgeObjectRelease();
            v25[v26] = 0;
            id v30 = [v29 viewIfLoaded];
            id v31 = [v30 window];

            if (v31) {
              sub_1000A6988();
            }

            *(void *)&v29[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
            id v32 = v29;
            swift_bridgeObjectRelease();
            v25[v26] = 0;
            id v33 = [v32 viewIfLoaded];
            id v34 = [v33 window];

            if (v34) {
              sub_1000A6988();
            }

            *(void *)&v32[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = 0;
          }
          swift_unknownObjectWeakAssign();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10008152C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
  if (v1)
  {
    id v2 = [v1 popoverPresentationController];
    if (v2)
    {
      id v5 = v2;
      if ([v2 sourceItem])
      {
        swift_unknownObjectRelease();
        uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
        if (!v3 || (id v4 = [v3 overflowPresentationSource]) == 0) {
          id v4 = sub_10033C90C();
        }
        [v5 setSourceItem:v4];

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

unint64_t sub_100081638()
{
  uint64_t v1 = v0;
  unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  id v2 = sub_10009E55C();
  id v3 = sub_100082AD8();
  if (!v3) {
    goto LABEL_26;
  }
  id v4 = v3;
  if (!DOCUsePadIdiomForTraits() || [v2 horizontalSizeClass] != (id)2)
  {
    unint64_t v5 = (unint64_t)sub_10003B6F8(0);
    uint64_t v6 = v5 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (!v6
      && ([*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forPickingFolders] & 1) == 0)
    {
      unint64_t v15 = swift_bridgeObjectRetain();
      id v16 = sub_10033C518(v15);
      swift_bridgeObjectRelease();
      sub_100083AD8((unint64_t)v16);

      goto LABEL_26;
    }
  }
  if (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] == 1)
  {
    sub_10033CA80();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_26;
  }
  v29[3] = type metadata accessor for DOCItemCollectionViewController(0);
  v29[0] = v0;
  id v7 = v0;
  int v8 = sub_100343980(v4, v29, (uint64_t)"actionBarButtonTriggeredWithActionBarButton:");
  sub_10009B1B8((uint64_t)v29);
  unint64_t v9 = (unint64_t)sub_10003B6F8(0);
  if (v9 >> 62) {
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v10 <= 0)
  {
    if (![*(id *)&v7[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forPickingFolders]|| (id v12 = *(void **)(*(void *)&v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]+ OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0|| !objc_msgSend(v12, "supportsPickingFolders")|| (v13 = sub_1002A0990()) == 0)
    {
      uint64_t v11 = 0;
      goto LABEL_22;
    }
  }
  uint64_t v11 = 1;
LABEL_22:
  [v8 setEnabled:v11];
  id v14 = v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_26:
  id v17 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (([v17 forSavingDocuments] & 1) != 0
    || ([v17 forPickingFolders] & 1) != 0
    || [v17 forPickingDownloadsFolder])
  {
    id v18 = sub_100082AD8();

    if (!v18)
    {
      id v19 = &v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled];
      swift_beginAccess();
      if (*v19 == 1) {
        sub_100529154();
      }
      else {
        sub_10033CA80();
      }
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  if ([v1 isEditing]
    && (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0
    && sub_1000837FC())
  {
    uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
    swift_beginAccess();
    id v21 = *(void **)(v20 + 24);
    if (v21)
    {
      swift_retain();
    }
    else
    {
      sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      id v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      id v23 = sub_100514174((uint64_t)v22);

      *(void *)(v20 + 24) = v23;
      type metadata accessor for DOCBarButtonItemGroup();
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1005A04F0;
      *(void *)(v24 + 32) = v23;
      v29[7] = v24;
      specialized Array._endMutation()();
      id v25 = v23;
      uint64_t v26 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
      swift_bridgeObjectRelease();

      id v21 = 0;
      *(void *)(v20 + 16) = v26;
    }
    swift_endAccess();
    id v27 = v21;
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }

  return v30;
}

void sub_100081C14()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
  if (!v2) {
    return;
  }
  id v3 = (id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  id v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24];
  unint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  id v52 = v4;
  id v6 = v2;
  uint64_t v7 = sub_1000822E4(v4, v5)[2];
  swift_bridgeObjectRelease();
  if (sub_1000AC0CC(v4))
  {
    [v6 set_alternateLargeTitles:0];
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 setTitle:v8];

LABEL_30:
    uint64_t v34 = 2;
    goto LABEL_33;
  }
  if ([v1 isEditing]
    && (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0)
  {
    id v14 = (id)_DocumentManagerBundle();
    if (!v14)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    unint64_t v15 = v14;
    v54._unint64_t object = (void *)0x80000001005EAAF0;
    v16._uint64_t countAndFlagsBits = 0x49207463656C6553;
    v16._unint64_t object = (void *)0xEC000000736D6574;
    v17._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v17._unint64_t object = (void *)0xEB00000000656C62;
    v18._uint64_t countAndFlagsBits = 0;
    v18._unint64_t object = (void *)0xE000000000000000;
    v54._uint64_t countAndFlagsBits = 0xD000000000000040;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v54);

    swift_bridgeObjectRelease();
    unint64_t v19 = (unint64_t)sub_10003B6F8(0);
    if (v19 >> 62) {
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v20)
    {
      id v21 = [v1 traitCollection];
      id v22 = [v21 horizontalSizeClass];

      if (v22 == (id)1
        || (id v23 = [v1 traitCollection],
            id v24 = [v23 userInterfaceIdiom],
            v23,
            v24 == (id)6))
      {
        unint64_t v25 = 0xD000000000000058;
        unint64_t v26 = 0x80000001005EABB0;
        unint64_t v27 = 0x6D65744920756C25;
        unint64_t v28 = 0xE900000000000073;
      }
      else
      {
        unint64_t v27 = 0xD000000000000012;
        unint64_t v25 = 0xD000000000000049;
        unint64_t v28 = 0x80000001005EAB40;
        unint64_t v26 = 0x80000001005EAB60;
      }
      DOCLocalizedDictionaryString(_:comment:)(*(Swift::String *)&v27, *(Swift::String *)&v25);
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1005A0030;
      *(void *)(v50 + 56) = &type metadata for Int;
      *(void *)(v50 + 64) = &protocol witness table for Int;
      *(void *)(v50 + 32) = v20;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v45 = (id)_DocumentManagerBundle();
      if (!v45)
      {
LABEL_51:
        __break(1u);
        return;
      }
      uint64_t v46 = v45;
      v56._unint64_t object = (void *)0x80000001005EAAF0;
      v47._uint64_t countAndFlagsBits = 0x49207463656C6553;
      v47._unint64_t object = (void *)0xEC000000736D6574;
      v48._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v48._unint64_t object = (void *)0xEB00000000656C62;
      v49._uint64_t countAndFlagsBits = 0;
      v49._unint64_t object = (void *)0xE000000000000000;
      v56._uint64_t countAndFlagsBits = 0xD000000000000040;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v56);
    }
    [v6 set_alternateLargeTitles:0];
    NSString v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setTitle:v51];

    if (!v7) {
      goto LABEL_30;
    }
    goto LABEL_32;
  }
  if (v4)
  {
    id v9 = v52;
    uint64_t v10 = sub_1000822E4(v4, v5);

    if (!v10[2])
    {
      swift_bridgeObjectRelease();
      id v11 = [v9 displayName];
      if (v11)
      {
LABEL_22:
        uint64_t v29 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v30;

        uint64_t v10 = _swiftEmptyArrayStorage;
        goto LABEL_23;
      }
LABEL_21:
      id v11 = [*v3 displayName];
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2])
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  uint64_t v13 = v10[4];
  uint64_t v12 = v10[5];
  swift_bridgeObjectRetain();
LABEL_23:
  id v31 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  uint64_t v32 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename + 8];
  if (v32
    && (*(void *)v31 == v13 ? (BOOL v33 = v32 == v12) : (BOOL v33 = 0),
        v33 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_30;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1000ABC60(v10, v13, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setTitle:v35];

    *(void *)id v31 = 0;
    *((void *)v31 + 1) = 0;
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_30;
    }
  }
LABEL_32:
  uint64_t v34 = 1;
LABEL_33:
  [v6 setLargeTitleDisplayMode:v34];
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState]
     - 2 >= 3)
  {
    sub_10008762C();
    if (v36)
    {
      uint64_t v37 = v36;
      id v38 = sub_1000C6E20();
      sub_10051D910();
    }
    id v39 = (id)_DocumentManagerBundle();
    if (v39)
    {
      objc_super v40 = v39;
      v55._uint64_t countAndFlagsBits = 0xD000000000000030;
      v55._unint64_t object = (void *)0x80000001005EAAB0;
      v41._uint64_t countAndFlagsBits = 0x686372616553;
      v41._unint64_t object = (void *)0xE600000000000000;
      v42._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v42._unint64_t object = (void *)0xEB00000000656C62;
      v43._uint64_t countAndFlagsBits = 0x686372616553;
      v43._unint64_t object = (void *)0xE600000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v55);

      NSString v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 setBackButtonTitle:v44];

      goto LABEL_39;
    }
    __break(1u);
    goto LABEL_50;
  }
  [v6 setBackButtonTitle:0];
LABEL_39:
  sub_1000AC418();
}

void *sub_1000822E4(void *a1, void *a2)
{
  if (!a1) {
    return _swiftEmptyArrayStorage;
  }
  id v4 = a1;
  if ([a2 isInUIPDocumentLanding] & 1) == 0 && (sub_1000827D4(v4))
  {
    id v5 = [a2 hostBundleTitle];
    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    id v11 = [v2 splitViewController];
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [v11 doc_splitViewState];

      unsigned __int8 v14 = [v13 isSidebarShownInline];
      unsigned __int8 v15 = [a2 isFilesApp];
      if (v14) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned __int8 v15 = [a2 isFilesApp];
    }
    unsigned __int8 v16 = v15;
    if (([a2 isPickerUI] & 1) == 0 && (v16 & 1) == 0)
    {
      if (!v8)
      {

        goto LABEL_19;
      }
      id v25 = [v4 displayNameComposedWithLocalizedAppName:v5];

      if (v25)
      {
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        id v9 = sub_1000825D0(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v30 = v9[2];
        unint64_t v29 = v9[3];
        int64_t v31 = v29 >> 1;
        unint64_t v32 = v30 + 1;
        if (v29 >> 1 <= v30)
        {
          id v9 = sub_1000825D0((void *)(v29 > 1), v30 + 1, 1, v9);
          unint64_t v29 = v9[3];
          int64_t v31 = v29 >> 1;
        }
        v9[2] = v32;
        BOOL v33 = &v9[2 * v30];
        id v33[4] = v26;
        v33[5] = v28;
        if (v31 < (uint64_t)(v30 + 2)) {
          id v9 = sub_1000825D0((void *)(v29 > 1), v30 + 2, 1, v9);
        }
        v9[2] = v30 + 2;
        uint64_t v34 = &v9[2 * v32];
        v34[4] = v6;
        v34[5] = v8;
        goto LABEL_20;
      }
LABEL_18:
      swift_bridgeObjectRelease();
LABEL_19:
      id v9 = _swiftEmptyArrayStorage;
LABEL_20:
      id v17 = [v4 displayName];
      if (v17)
      {
        Swift::String v18 = v17;
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v9 = sub_1000825D0(0, v9[2] + 1, 1, v9);
        }
        unint64_t v23 = v9[2];
        unint64_t v22 = v9[3];
        if (v23 >= v22 >> 1) {
          id v9 = sub_1000825D0((void *)(v22 > 1), v23 + 1, 1, v9);
        }
        v9[2] = v23 + 1;
        id v24 = &v9[2 * v23];
        void v24[4] = v19;
        v24[5] = v21;
      }
      goto LABEL_7;
    }
LABEL_17:

    goto LABEL_18;
  }
  id v9 = _swiftEmptyArrayStorage;
LABEL_7:

  return v9;
}

void *sub_1000825D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100707EF0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000826E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000826E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000827D4(void *a1)
{
  id v3 = [v1 traitCollection];
  id v4 = [v3 userInterfaceIdiom];

  if (v4 == (id)6)
  {
    char v5 = 0;
  }
  else
  {
    sub_1000CBE70(&qword_10070CE50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10059B760;
    uint64_t v7 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
    *(void *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
    uint64_t v8 = (void *)DOCDocumentSourceIdentifierSharedItems;
    *(void *)(inited + 40) = DOCDocumentSourceIdentifierSharedItems;
    id v9 = v7;
    id v10 = v8;
    id v11 = [a1 sourceIdentifier];
    NSString v12 = [a1 originalSourceIdentifier];
    if (!v12) {
      NSString v12 = String._bridgeToObjectiveC()();
    }
    if (sub_100082AC0(v11, inited))
    {

      swift_setDeallocating();
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy();

      char v5 = 1;
    }
    else
    {
      char v5 = sub_100082AC0(v12, inited);

      swift_setDeallocating();
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy();
    }
  }
  return v5 & 1;
}

uint64_t sub_100082968(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

void type metadata accessor for DOCDocumentSourceIdentifier(uint64_t a1)
{
}

id sub_100082AD8()
{
  uint64_t v1 = self;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  id v3 = [v2 sceneIdentifier];
  id v4 = [v1 globalTabbedBrowserControllerForIdentifier:v3];

  if (!v4) {
    return 0;
  }
  id v5 = [v4 effectiveFullBrowser];

  unsigned int v6 = [v5 allowsPickingMultipleItems];
  if (!v6
    || ([v2 forPickingFoldersOnly] & 1) != 0
    || ([v2 forSavingDocuments] & 1) != 0)
  {
    return 0;
  }
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v7 = sub_100157E88((uint64_t)sub_100345230, v9);
  swift_release_n();
  return v7;
}

unint64_t sub_100082C28()
{
  uint64_t v3 = (uint64_t)v0;
  unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
  id v4 = self;
  if (([v4 _UIPTabInfrastructureEnabled] & 1) == 0) {
    sub_1000858A4(&v57, v0);
  }
  if (([v0 isEditing] & 1) == 0) {
    goto LABEL_24;
  }
LABEL_4:
  id v5 = _swiftEmptyArrayStorage;
  unsigned int v6 = _swiftEmptyArrayStorage;
LABEL_5:
  sub_100083AD8((unint64_t)v5);
  uint64_t v7 = v57;
  Swift::String v55 = v4;
  Swift::String v56 = (unsigned char *)v3;
  unint64_t v54 = (unint64_t)v6;
  if (v57 >> 62) {
    goto LABEL_59;
  }
  id v5 = *(void **)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_7:
    unint64_t v1 = 0;
    id v4 = (void *)(v7 + 32);
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *((id *)v4 + v1);
      }
      unint64_t v2 = (unint64_t)v9;
      if (objc_msgSend(v9, "systemItem", v51, v52, v53) == (id)1)
      {
        uint64_t v10 = v57;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v10 < 0
          || (v10 & 0x4000000000000000) != 0)
        {
          uint64_t v10 = sub_1000BC324(v10);
          unint64_t v57 = v10;
        }
        uint64_t v11 = v10 & 0xFFFFFFFFFFFFFF8;
        unint64_t v12 = *(void *)(v11 + 16);
        if (v1 >= v12)
        {
          __break(1u);
LABEL_59:
          if (v7 < 0) {
            unint64_t v20 = v7;
          }
          else {
            unint64_t v20 = v7 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain();
          uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
          if (v34 < 0)
          {
            __break(1u);
LABEL_64:
            swift_bridgeObjectRetain_n();
            uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v7 >= 2) {
              uint64_t v7 = 2;
            }
            if (v7 < 0)
            {
              __break(1u);
            }
            else
            {
              swift_bridgeObjectRetain();
              if ((_CocoaArrayWrapper.endIndex.getter() & 0x8000000000000000) == 0)
              {
                swift_bridgeObjectRetain();
                unsigned int v6 = (void *)_CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if ((uint64_t)v6 < v7)
                {
                  __break(1u);
LABEL_70:
                  __break(1u);
                  goto LABEL_71;
                }
LABEL_34:
                if ((v20 & 0xC000000000000001) != 0 && v7 != 0)
                {
                  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
                  Swift::Int v22 = 0;
                  do
                  {
                    Swift::Int v23 = v22 + 1;
                    _ArrayBuffer._typeCheckSlowPath(_:)(v22);
                    Swift::Int v22 = v23;
                  }
                  while (v7 != v23);
                }
                if (!v5)
                {
                  unsigned int v6 = 0;
                  id v5 = (void *)(v20 & 0xFFFFFFFFFFFFFF8);
                  unint64_t v1 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
                  unint64_t v2 = (2 * v7) | 1;
                  goto LABEL_44;
                }
                swift_bridgeObjectRetain();
                id v5 = (void *)_CocoaArrayWrapper.subscript.getter();
                unint64_t v1 = v24;
                unsigned int v6 = v25;
                unint64_t v2 = v26;
                swift_bridgeObjectRelease_n();
                if (v2)
                {
LABEL_44:
                  type metadata accessor for __ContiguousArrayStorageBase();
                  swift_unknownObjectRetain_n();
                  uint64_t v27 = (void *)swift_dynamicCastClass();
                  if (!v27)
                  {
                    swift_unknownObjectRelease();
                    uint64_t v27 = _swiftEmptyArrayStorage;
                  }
                  uint64_t v28 = v27[2];
                  swift_release();
                  if (!__OFSUB__(v2 >> 1, v6))
                  {
                    if (v28 == (v2 >> 1) - (void)v6)
                    {
                      unsigned int v6 = (void *)swift_dynamicCastClass();
                      if (!v6)
                      {
                        swift_unknownObjectRelease();
                        unsigned int v6 = _swiftEmptyArrayStorage;
                      }
                      goto LABEL_50;
                    }
                    goto LABEL_72;
                  }
                  goto LABEL_70;
                }
                while (1)
                {
                  unsigned int v6 = sub_1002F48E0((uint64_t)v5, v1, (uint64_t)v6, v2);
LABEL_50:
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRetain();
                  uint64_t v7 = sub_1000841E0(v7, v20);
                  id v5 = v29;
                  unint64_t v1 = v30;
                  unint64_t v2 = v31;
                  swift_bridgeObjectRelease();
                  if ((v2 & 1) == 0) {
                    goto LABEL_51;
                  }
                  type metadata accessor for __ContiguousArrayStorageBase();
                  swift_unknownObjectRetain_n();
                  unint64_t v32 = (void *)swift_dynamicCastClass();
                  if (!v32)
                  {
                    swift_unknownObjectRelease();
                    unint64_t v32 = _swiftEmptyArrayStorage;
                  }
                  uint64_t v33 = v32[2];
                  swift_release();
                  if (!__OFSUB__(v2 >> 1, v1)) {
                    break;
                  }
LABEL_71:
                  __break(1u);
LABEL_72:
                  swift_unknownObjectRelease();
                }
                if (v33 != (v2 >> 1) - v1)
                {
                  swift_unknownObjectRelease();
LABEL_51:
                  id v5 = sub_1002F48E0(v7, (uint64_t)v5, v1, v2);
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                  goto LABEL_5;
                }
                id v5 = (void *)swift_dynamicCastClass();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                if (!v5)
                {
                  swift_unknownObjectRelease();
                  id v5 = _swiftEmptyArrayStorage;
                }
                goto LABEL_5;
              }
            }
            __break(1u);
LABEL_76:
            LODWORD(v53) = 0;
            uint64_t v52 = 1046;
            LOBYTE(v51) = 2;
            uint64_t v34 = _fatalErrorMessage(_:_:file:line:flags:)();
            __break(1u);
          }
          id v5 = (void *)v34;
          if (v34) {
            goto LABEL_7;
          }
          break;
        }
        unint64_t v13 = v12 - 1;
        uint64_t v14 = v12 - 1 - v1;
        if (v14 < 0) {
          goto LABEL_76;
        }
        unint64_t v15 = v11 + 8 * v1;
        uint64_t v3 = *(void *)(v15 + 32);
        memmove((void *)(v15 + 32), (const void *)(v15 + 40), 8 * v14);
        *(void *)(v11 + 16) = v13;
        specialized Array._endMutation()();

        if (v57 >> 62)
        {
          id v16 = (id)v2;
          swift_bridgeObjectRetain();
          uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v3 < 0)
          {
            __break(1u);
LABEL_24:
            if (![*(id *)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) isPickerUI])
            {
              unint64_t v20 = *(void *)(v3
                              + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
              id v5 = (void *)(v20 >> 62);
              if (v20 >> 62) {
                goto LABEL_64;
              }
              if (*(uint64_t *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
                uint64_t v7 = 2;
              }
              else {
                uint64_t v7 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRetain_n();
              goto LABEL_34;
            }
            id v17 = [(id)v3 splitViewController];
            if (!v17
              || (Swift::String v18 = v17,
                  id v19 = objc_msgSend(v17, "doc_splitViewState"),
                  v18,
                  LOBYTE(v18) = [v19 isSidebarShown],
                  v19,
                  (v18 & 1) == 0))
            {
              if ((sub_1000B1360() & 1) == 0)
              {
                id v5 = *(void **)(v3
                                + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
                swift_bridgeObjectRetain();
                unsigned int v6 = _swiftEmptyArrayStorage;
                goto LABEL_5;
              }
            }
            goto LABEL_4;
          }
        }
        else
        {
          id v8 = (id)v2;
        }
        sub_100514948(0, 0, v2);
      }
      ++v1;
    }
    while ((void *)v1 != v5);
  }
  swift_bridgeObjectRelease();
  if (!sub_1000837FC() || [v56 isEditing])
  {
    id v35 = sub_10033C90C();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    sub_10033BD20(v35);
  }
  char v36 = sub_100084450();
  char v37 = sub_1000841F4();
  if (([v55 _UIPTabInfrastructureEnabled] & 1) != 0 || (id v38 = sub_100086CC0(1)) == 0)
  {
    id v41 = sub_100086E48();
    id v40 = v41;
    if (v36 != 2)
    {
      [v41 setEnabled:v36 & 1];
      id v40 = v40;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  else
  {
    id v39 = v38;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    id v40 = sub_100086E48();
  }

  if (sub_1000837FC() && ([v56 isEditing] & 1) == 0)
  {
    id v42 = sub_100083AF0();
    Class v43 = sub_1000846EC();
    [v42 setMenu:v43];
    sub_100083E58();

    sub_100083AF0();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (objc_msgSend(v55, "_UIPTabInfrastructureEnabled", v51)) {
    sub_1000858A4(&v57, v56);
  }
  id v44 = sub_100086904();
  id v45 = v44;
  if (v37 != 2)
  {
    [v44 setEnabled:v37 & 1];
    id v46 = v45;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }

  if ([v55 _UIPTabInfrastructureEnabled])
  {
    id v47 = [self fixedSpaceItemOfWidth:20.0];
    sub_100085CFC(&v57, v47);
  }
  if ((v56[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_appLaunchOptimizationsActive] & 1) == 0)
  {
    Swift::String v48 = sub_1000AA298();
    if (v48)
    {
      Swift::String v49 = v48;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  sub_100083AD8(v54);
  return v57;
}

uint64_t sub_100083628(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *unint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

BOOL sub_1000837FC()
{
  id v1 = sub_10009E55C();
  id v2 = [v1 horizontalSizeClass];

  BOOL v3 = v2 == (id)1;
  id v4 = sub_10009EA30(v0);
  if ((v5 & 1) == 0)
  {
    double v6 = *(double *)&v4;
    if [v0 enclosedInUIPDocumentLanding] && (sub_100339534()) {
      double v6 = v6 + -319.0;
    }
    return v6 <= 876.0;
  }
  return v3;
}

uint64_t sub_1000838A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_1007085B8, &qword_1007085B0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_1007085B0);
          unint64_t v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100083AD8(unint64_t a1)
{
  return sub_100083628(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000838A4);
}

id sub_100083AF0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage);
  swift_beginAccess();
  id v2 = *(void **)(v1 + 136);
  if (v2)
  {
    swift_retain();
    id v3 = v2;
  }
  else
  {
    id v4 = objc_allocWithZone((Class)type metadata accessor for DOCLegacyOverflowBarButtonItem());
    swift_retain();
    id v5 = [v4 init];
    *(void *)(v1 + 136) = v5;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1005A04F0;
    *(void *)(v6 + 32) = v5;
    specialized Array._endMutation()();
    id v3 = v5;
    uint64_t v7 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    id v2 = 0;
    *(void *)(v1 + 128) = v7;
  }
  swift_endAccess();
  id v8 = v2;
  swift_release();
  return v3;
}

uint64_t sub_100083C24(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0((unint64_t *)&unk_1007086F0, &qword_1007086E8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_1007086E8);
          unint64_t v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, &qword_100707CD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100083E58()
{
  uint64_t v1 = v0;
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  UIMenuElementSize v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A04F0;
  id v3 = self;
  UIMenuElementSize v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (UIMenuElementSize)sub_100344D24;
  aBlock[5] = v4;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_100514064;
  void aBlock[3] = (UIMenuElementSize)&unk_1006A3278;
  id v5 = _Block_copy(aBlock);
  swift_release();
  id v6 = [v3 elementWithUncachedProvider:v5];
  _Block_release(v5);
  *(void *)(v2 + 32) = v6;
  aBlock[0] = v2;
  specialized Array._endMutation()();
  v7._uint64_t countAndFlagsBits = 0;
  v7._unint64_t object = (void *)0xE000000000000000;
  v11.value.super.Class isa = 0;
  v11.Swift::Bool is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v7, (Swift::String_optional)0, v11, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v9).super.super.isa;
  [v1 setMenuRepresentation:isa];
}

uint64_t sub_100083FF8(uint64_t result, unint64_t a2, unint64_t *a3)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    id v5 = a3;
    unint64_t v3 = a2;
    uint64_t v4 = result;
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v7 >= v4) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v7 < 0) {
    uint64_t v8 = v4;
  }
  if (v4) {
    Swift::Int v9 = v8;
  }
  else {
    Swift::Int v9 = 0;
  }
  if (v7 < v9)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 < v9) {
    goto LABEL_34;
  }
  if (v9 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v11 < v7) {
    goto LABEL_36;
  }
  if ((v3 & 0xC000000000000001) != 0 && v9 != v7)
  {
    if (v9 < (unint64_t)v7)
    {
      sub_10009E6C4(0, v5);
      Swift::Int v12 = v9;
      do
      {
        Swift::Int v13 = v12 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v12);
        Swift::Int v12 = v13;
      }
      while (v7 != v13);
      goto LABEL_27;
    }
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_27:
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1000841E0(uint64_t a1, unint64_t a2)
{
  return sub_100083FF8(a1, a2, (unint64_t *)&qword_10070B700);
}

uint64_t sub_1000841F4()
{
  if (([*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forMovingDocuments] & 1) != 0|| objc_msgSend(v0, "enclosedInUIPDocumentLanding")&& objc_msgSend(v0, "enclosingDocumentLandingMode"))
  {
    return 2;
  }
  id v1 = [v0 effectiveAppearance];
  if (!v1) {
    return 2;
  }
  UIMenuElementSize v2 = v1;
  unsigned int v3 = [v1 showsCreateButton];

  if (!v3
    || ([self _UIPTabInfrastructureEnabled] & 1) == 0
    && ([v0 isEditing] & 1) != 0)
  {
    return 2;
  }
  uint64_t result = (uint64_t)[v0 isEditing];
  if (result) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v5)
  {
    uint64_t v6 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v6 + 16))
    {
      uint64_t v7 = *(void **)(*(void *)v6 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v7 = *(void **)(v6 + 8);
      swift_unknownObjectRetain();
      if (!v7)
      {
        uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24];
        if (v10)
        {
          id v11 = v10;
          id v12 = [v11 sourceIdentifier];
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            char v9 = 1;
          }
          else {
            char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v9 & 1;
        }
        goto LABEL_17;
      }
    }
    type metadata accessor for DOCActionManager();
    swift_getObjectType();
    if (sub_10000C134((uint64_t)v7))
    {
      unsigned __int8 v8 = [v7 isTrashed];
      swift_unknownObjectRelease();
      char v9 = v8 ^ 1;
      return v9 & 1;
    }
    swift_unknownObjectRelease();
LABEL_17:
    char v9 = 0;
    return v9 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100084450()
{
  id v1 = v0;
  UIMenuElementSize v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ([v2 isPickerUI]
    && ([v2 forSavingDocuments] & 1) == 0
    && ![v2 forPickingFolders])
  {
    return 2;
  }
  uint64_t result = sub_1000837FC();
  if (result) {
    return 2;
  }
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v4)
  {
    uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16)) {
      uint64_t v6 = *(void **)(*v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    }
    else {
      uint64_t v6 = (void *)v5[1];
    }
    swift_unknownObjectRetain();
    uint64_t v7 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    id v8 = *(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    unsigned int v9 = [v1 isEditing];
    if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) != 0
      || (id v10 = *(id *)(v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type),
          unsigned int v11 = objc_msgSend(v10, "doc_displaysSearchResults"),
          v10,
          !v11))
    {
      if (v6)
      {
        int v18 = v9 ^ 1;
        id v17 = v8;
        swift_unknownObjectRetain();
        id v14 = v6;
        goto LABEL_17;
      }
    }
    else
    {
      id v12 = *(void **)&v7[*(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 44)];
      if (!v12)
      {

        goto LABEL_23;
      }
      id v13 = v12;
      id v14 = [v13 node];

      swift_unknownObjectRelease();
      if (v14)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v15 = (void *)DOCNode.sourceIdentifier.getter();
        id v16 = sub_1001B86F8();
        swift_unknownObjectRelease();

        if (v16)
        {
          swift_unknownObjectRetain();
          id v17 = v16;
          int v18 = 0;
LABEL_17:
          swift_getObjectType();
          if ([v14 isFolder])
          {
            int v19 = DOCNode.newFolderButtonMode(for:)(v17);
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            if (v19 != 2) {
              return v19 & v18;
            }
            return 2;
          }
          swift_unknownObjectRelease();
        }
LABEL_23:
        swift_unknownObjectRelease();
        return 2;
      }
    }

    return 2;
  }
  __break(1u);
  return result;
}

Class sub_1000846EC()
{
  id v1 = v0;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v48[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
  if ([v0 isEditing]) {
    goto LABEL_2;
  }
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ([*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPickerUI])
  {
    if (![v6 forPickingDocuments] || (id v7 = sub_100082AD8()) == 0)
    {
LABEL_2:
      id v5 = 0;
      goto LABEL_9;
    }
  }
  Class result = (Class)(id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_54:
    __break(1u);
    return result;
  }
  Class v9 = result;
  UIMenuElementSize v10 = sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  v53._uint64_t countAndFlagsBits = 0xD000000000000027;
  v53._unint64_t object = (void *)0x80000001005EAC30;
  v11._uint64_t countAndFlagsBits = 0x5B207463656C6553;
  v11._unint64_t object = (void *)0xED00005D756E656DLL;
  v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v12._unint64_t object = (void *)0xEB00000000656C62;
  v13._uint64_t countAndFlagsBits = 0x7463656C6553;
  v13._unint64_t object = (void *)0xE600000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v9, v13, v53);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self systemImageNamed:v15];

  [v14 setImage:v16];
  v48[3] = v10;
  v48[0] = (UIMenuElementSize)v14;
  id v5 = v14;
  sub_10008517C((uint64_t)v48);
  sub_10009B1B8((uint64_t)v48);
LABEL_9:
  id v17 = sub_100086A20();
  if (([v1 isEditing] & 1) != 0
    || (int v18 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration],
        ([v18 isFilesApp] & 1) == 0)
    || ([v18 isPickerUI] & 1) != 0
    || ![self isSupported])
  {
    unint64_t v20 = 0;
  }
  else
  {
    NSString v19 = String._bridgeToObjectiveC()();
    id v47 = [self systemImageNamed:v19];

    if (qword_1007050C8 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    String._bridgeToObjectiveC()();
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v20 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  id v21 = sub_100085318();
  v48[0] = (UIMenuElementSize)_swiftEmptyArrayStorage;
  if (v5)
  {
    id v22 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v17)
  {
    id v23 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v20)
  {
    id v24 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v21)
  {
    id v25 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  UIMenuElementSize v26 = v48[0];

  if ((unint64_t)v26 >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    swift_bridgeObjectRetain();
    UIMenuElementSize v27 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    UIMenuElementSize v27 = v26;
  }
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v28._uint64_t countAndFlagsBits = 0;
  v28._unint64_t object = (void *)0xE000000000000000;
  v50.value.super.Class isa = 0;
  v50.Swift::Bool is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v50, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v27, v44);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class v29 = sub_100085DFC(0, 1);
  if (v29)
  {
    unint64_t v30 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v31 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v4, 1, 1, v31);
  unint64_t v32 = (void *)sub_1000B9278((uint64_t)v4);
  sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007086D0);
  if (v32)
  {
    id v33 = v32;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  UIMenuElementSize v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1005A04F0;
  Class result = (Class)(id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_54;
  }
  Class v35 = result;
  v54._uint64_t countAndFlagsBits = 0xD000000000000025;
  v54._unint64_t object = (void *)0x80000001005EAC80;
  v36._uint64_t countAndFlagsBits = 0x74704F2077656956;
  v36._unint64_t object = (void *)0xEC000000736E6F69;
  v37._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v37._unint64_t object = (void *)0xEB00000000656C62;
  v38._uint64_t countAndFlagsBits = 0x74704F2077656956;
  v38._unint64_t object = (void *)0xEC000000736E6F69;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v54);

  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v34 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v48[0] = v34;
  specialized Array._endMutation()();
  v39._uint64_t countAndFlagsBits = 0;
  v39._unint64_t object = (void *)0xE000000000000000;
  v51.value.super.Class isa = 0;
  v51.Swift::Bool is_nil = 0;
  id v40 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v51, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v48[0], v45).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  id v41 = (void *)v49;
  if (v49 >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    swift_bridgeObjectRetain();
    UIMenuElementSize v42 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    UIMenuElementSize v42 = (UIMenuElementSize)v41;
  }
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 0;
  v43._unint64_t object = (void *)0xE000000000000000;
  v52.value.super.Class isa = 0;
  v52.Swift::Bool is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v43, (Swift::String_optional)0, v52, 0, 0xFFFFFFFFFFFFFFFFLL, v42, v46).super.super.isa;
}

void sub_10008517C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 8);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10009B208(a1, (uint64_t)v8);
  sub_10009E6C4(0, &qword_100711B68);
  if (swift_dynamicCast()
    || (sub_10009B208(a1, (uint64_t)v8),
        sub_10009E6C4(0, (unint64_t *)&unk_100711B70),
        swift_dynamicCast()))
  {
    uint64_t v6 = v7;
    [v7 setEnabled:v5 != 0];
LABEL_6:

    return;
  }
  sub_10009B208(a1, (uint64_t)v8);
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  if (swift_dynamicCast())
  {
    uint64_t v6 = v7;
    [v7 setAttributes:v5 == 0];
    goto LABEL_6;
  }
}

id sub_100085318()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v8 = (char *)v24 - v7;
  uint64_t v9 = 0;
  if ([v1 isEditing]) {
    return (id)v9;
  }
  UIMenuElementSize v10 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, enum case for DOCAnalyticsConnectToServerShownEvent.Origin.moreButtonBrowser(_:), v2);
  Swift::String v11 = self;
  id v12 = [v10 sceneIdentifier];
  id v13 = [v11 globalTabbedBrowserControllerForIdentifier:v12];

  if (!v13) {
    goto LABEL_7;
  }
  if ((sub_1000857CC(v10) & 1) == 0)
  {

LABEL_7:
    uint64_t v9 = 0;
    goto LABEL_8;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  _OWORD v24[3] = [self systemImageNamed:v14];

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v16 = result;
    v25._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v25._unint64_t object = (void *)0x80000001005E2F80;
    v17._unint64_t object = (void *)0x80000001005E2F60;
    v17._uint64_t countAndFlagsBits = 0xD000000000000011;
    v18._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v18._unint64_t object = (void *)0xEB00000000656C62;
    v19._uint64_t countAndFlagsBits = 0;
    v19._unint64_t object = (void *)0xE000000000000000;
    Swift::String v20 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v25);
    v24[1] = v20._object;
    v24[2] = v20._countAndFlagsBits;

    String._bridgeToObjectiveC()();
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    unint64_t v21 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    unint64_t v22 = (v4 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v23 + v21, v6, v2);
    *(void *)(v23 + v22) = v13;
    uint64_t v9 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
LABEL_8:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return (id)v9;
  }
  __break(1u);
  return result;
}

void sub_100085760(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1000857CC(void *a1)
{
  id v2 = [self defaultPermission];
  if ([v2 isNetworkDriveAllowed]
    && [a1 supportsRemovableFileProviders]
    && ([a1 isPickerUI] & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v3 = [v2 canHostAppPerformAction:0 bundleIdentifier:v5];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t sub_1000858A4(void *a1, unsigned char *a2)
{
  if ([a2 isEditing])
  {
    if ((a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0 && !sub_1000837FC())
    {
      uint64_t v4 = *(void *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
      swift_beginAccess();
      NSString v5 = *(void **)(v4 + 24);
      if (v5)
      {
        swift_retain();
      }
      else
      {
        sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        uint64_t v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v10 = sub_100514174((uint64_t)v9);

        *(void *)(v4 + 24) = v10;
        type metadata accessor for DOCBarButtonItemGroup();
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1005A04F0;
        *(void *)(v11 + 32) = v10;
        specialized Array._endMutation()();
        id v12 = v10;
        uint64_t v13 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
        swift_bridgeObjectRelease();

        NSString v5 = 0;
        *(void *)(v4 + 16) = v13;
      }
      swift_endAccess();
      id v14 = v5;
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    NSString v15 = *(void **)(*(void *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                   + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v15) {
      int v16 = [v15 isiCloudDriveProvider];
    }
    else {
      int v16 = 0;
    }
    Swift::String v17 = (void (**)(char *, uint64_t))sub_10003B6F8(0);
    uint64_t v18 = sub_1003D5E40((id)2, v17, v16, *(id **)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration]);
    uint64_t v19 = swift_bridgeObjectRelease();
    __chkstk_darwin(v19);
    Swift::String v20 = sub_1003433FC(v18, (void (*)(void))sub_100345178);
    swift_bridgeObjectRelease();
    return sub_100083AD8((unint64_t)v20);
  }
  else
  {
    uint64_t v6 = *(void **)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    if ([v6 isPickerUI])
    {
      uint64_t result = (uint64_t)[v6 forPickingDocuments];
      if (!result) {
        return result;
      }
      uint64_t result = (uint64_t)sub_100082AD8();
      if (!result) {
        return result;
      }
    }
    if (a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] == 1)
    {
      sub_10033C608(1);
    }
    else
    {
      uint64_t result = sub_1000837FC();
      if (result) {
        return result;
      }
      id v8 = sub_10033C7F0();
      v21[3] = sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      v21[0] = v8;
      sub_10008517C((uint64_t)v21);
      sub_10009B1B8((uint64_t)v21);
      sub_10033C7F0();
    }
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    return specialized Array._endMutation()();
  }
}

BOOL sub_100085CFC(void *a1, void *a2)
{
  id v4 = sub_100086CC0(1);
  if (v4)
  {
    if (a2)
    {
      id v5 = a2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    id v6 = v4;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  return v4 != 0;
}

Class sub_100085DFC(uint64_t a1, char a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
  Class result = (Class)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(ObjectType, v6);
  swift_unknownObjectRelease();
  unint64_t v49 = v8;
  if (!v8[2])
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v48 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v9) {
    goto LABEL_65;
  }
  uint64_t v10 = v9 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if ((*(unsigned char *)(v10 + 16) & 1) == 0)
  {
    id v11 = *(id *)v10;
    unsigned int v12 = [v11 doc_displaysSearchResults];

    if (v12)
    {
      unint64_t v13 = v8[2];
      if (v13)
      {
        if (v8[4] == 2)
        {
          uint64_t v14 = 0;
LABEL_9:
          uint64_t v15 = v14 + 1;
          if (!__OFADD__(v14, 1))
          {
            if (v15 == v13)
            {
LABEL_11:
              if ((uint64_t)v13 < v14)
              {
                __break(1u);
                goto LABEL_13;
              }
              goto LABEL_34;
            }
            uint64_t v16 = v14 + 5;
            while ((v15 & 0x8000000000000000) == 0)
            {
              if (v16 - 4 >= v13) {
                goto LABEL_57;
              }
              uint64_t v18 = v8[v16];
              if (v18 != 2)
              {
                if (v16 - 4 != v14)
                {
                  if (v14 >= v13) {
                    goto LABEL_60;
                  }
                  uint64_t v19 = v8[v14 + 4];
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    id v8 = sub_10050DC50(v8);
                  }
                  v8[v14 + 4] = v18;
                  v8[v16] = v19;
                  unint64_t v49 = v8;
                }
                if (__OFADD__(v14++, 1)) {
                  goto LABEL_58;
                }
                unint64_t v13 = v8[2];
              }
              uint64_t v17 = v16 - 3;
              ++v16;
              if (v17 == v13) {
                goto LABEL_11;
              }
            }
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
          }
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          Class result = (Class)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          return result;
        }
        if (v13 == 1)
        {
          uint64_t v14 = 1;
        }
        else
        {
          uint64_t v21 = 5;
          do
          {
            uint64_t v14 = v21 - 4;
            if (v8[v21] == 2) {
              goto LABEL_9;
            }
            uint64_t v22 = v21 - 3;
            if (__OFADD__(v14, 1)) {
              goto LABEL_59;
            }
            ++v21;
          }
          while (v22 != v13);
          uint64_t v14 = v8[2];
        }
      }
      else
      {
        uint64_t v14 = 0;
      }
LABEL_34:
      sub_100516030(v14, v13);
    }
  }
  if (a2) {
    swift_beginAccess();
  }
  uint64_t v23 = v49[2];
  if (v23)
  {
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    uint64_t v24 = 0;
    while (1)
    {
      uint64_t v37 = v49[v24 + 4];
      if (v37)
      {
        if (v37 != 1)
        {
          if (v37 != 2) {
            goto LABEL_66;
          }
          NSString v38 = String._bridgeToObjectiveC()();
          id v39 = [self systemImageNamed:v38];

          id v40 = (objc_class *)(id)_DocumentManagerBundle();
          if (!v40) {
            goto LABEL_64;
          }
          Swift::String v28 = v40;
          unint64_t v36 = 0xD000000000000028;
          UIMenuElementSize preferredElementSize = 0x80000001005EAD70;
          uint64_t v29 = 0x736E6D756C6F43;
          unint64_t v30 = 0xE700000000000000;
          uint64_t v31 = 0x617A696C61636F4CLL;
          unint64_t v32 = 0xEB00000000656C62;
          v33.super.Class isa = v28;
          uint64_t v34 = 0;
          unint64_t v35 = 0xE000000000000000;
          goto LABEL_42;
        }
        NSString v25 = String._bridgeToObjectiveC()();
        id v26 = [self systemImageNamed:v25];

        UIMenuElementSize v27 = (objc_class *)(id)_DocumentManagerBundle();
        if (!v27) {
          goto LABEL_62;
        }
        Swift::String v28 = v27;
        UIMenuElementSize preferredElementSize = 0x80000001005EADA0;
        uint64_t v29 = 1953720652;
        unint64_t v30 = 0xE400000000000000;
        uint64_t v31 = 0x617A696C61636F4CLL;
        unint64_t v32 = 0xEB00000000656C62;
        v33.super.Class isa = v28;
        uint64_t v34 = 1953720652;
        unint64_t v35 = 0xE400000000000000;
      }
      else
      {
        NSString v41 = String._bridgeToObjectiveC()();
        id v42 = [self systemImageNamed:v41];

        Swift::String v43 = (objc_class *)(id)_DocumentManagerBundle();
        if (!v43) {
          goto LABEL_63;
        }
        Swift::String v28 = v43;
        UIMenuElementSize preferredElementSize = 0x80000001005EAD20;
        uint64_t v29 = 0x736E6F6349;
        unint64_t v30 = 0xE500000000000000;
        uint64_t v31 = 0x617A696C61636F4CLL;
        unint64_t v32 = 0xEB00000000656C62;
        v33.super.Class isa = v28;
        uint64_t v34 = 0;
        unint64_t v35 = 0xE000000000000000;
      }
      unint64_t v36 = 0xD000000000000026;
LABEL_42:
      DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v29, *(Swift::String *)&v31, v33, *(Swift::String *)&v34, *(Swift::String *)(&preferredElementSize - 1));

      ++v24;
      dispatch thunk of CustomStringConvertible.description.getter();
      String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      v47._rawValue = 0;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v23 == v24)
      {
        swift_bridgeObjectRelease_n();
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
          goto LABEL_51;
        }
LABEL_55:
        sub_10009E6C4(0, (unint64_t *)&qword_100708610);
        swift_bridgeObjectRetain();
        Swift::OpaquePointer v44 = (void *)_bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
    }
  }
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_55;
  }
LABEL_51:
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_10009E6C4(0, (unint64_t *)&qword_100708610);
  Swift::OpaquePointer v44 = _swiftEmptyArrayStorage;
LABEL_52:
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v45._uint64_t countAndFlagsBits = 0;
  v45._unint64_t object = (void *)0xE000000000000000;
  v50.value.super.Class isa = 0;
  v50.Swift::Bool is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v45, (Swift::String_optional)0, v50, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v44, v47).super.super.isa;
}

void *sub_100086544()
{
  uint64_t v1 = v0;
  if ([v0 isEditing]
    && (v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0)
  {
    id v2 = sub_100086CC0(0);
    id v3 = v2;
    if (v2)
    {
      id v4 = v2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }

    id v5 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                  + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v5) {
      int v6 = [v5 isiCloudDriveProvider];
    }
    else {
      int v6 = 0;
    }
    uint64_t v7 = (void (**)(char *, uint64_t))sub_10003B6F8(0);
    uint64_t v8 = sub_1003D5E40((id)1, v7, v6, *(id **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration]);
    uint64_t v9 = swift_bridgeObjectRelease();
    __chkstk_darwin(v9);
    uint64_t v10 = sub_1003433FC(v8, (void (*)(void))sub_10034560C);
    swift_bridgeObjectRelease();
    sub_100083AD8((unint64_t)v10);
  }
  id v11 = [v1 navigationController];
  if (v11)
  {
    unsigned int v12 = v11;
    id v13 = [v11 viewControllers];

    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v15 == 1)
    {
      id v16 = [v1 navigationController];
      if (v16)
      {
        uint64_t v17 = v16;
        id v18 = [v16 topViewController];

        if (v18)
        {
          type metadata accessor for DOCBrowserContainerController();
          uint64_t v19 = swift_dynamicCastClass();
          if (v19
            && (Swift::String v20 = (void **)(v19 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController),
                swift_beginAccess(),
                (uint64_t v21 = *v20) != 0)
            && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
          {
            id v22 = v21;
            id v23 = v1;
            char v24 = static NSObject.== infix(_:_:)();

            if (v24 & 1) != 0 && (sub_1000B1360())
            {
              unint64_t v25 = swift_bridgeObjectRetain();
              id v26 = sub_10033C518(v25);
              swift_bridgeObjectRelease();
              sub_100083AD8((unint64_t)v26);
            }
          }
          else
          {
          }
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

id sub_100086904()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
  swift_beginAccess();
  id v2 = *(void **)(v1 + 104);
  swift_retain();
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = sub_1000AC9C0(v0);
    *(void *)(v1 + 104) = v4;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = v4;
    specialized Array._endMutation()();
    id v3 = v4;
    uint64_t v6 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    id v2 = 0;
    *(void *)(v1 + 96) = v6;
  }
  swift_endAccess();
  id v7 = v2;
  swift_release();
  return v3;
}

id sub_100086A20()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  id result = [v2 isPickerUI];
  if (result)
  {
    id result = [v2 forSavingDocuments];
    if ((result & 1) == 0)
    {
      id result = [v2 forPickingFolders];
      if (!result) {
        return 0;
      }
    }
  }
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t v6 = *(void **)(*(void *)v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v6 = *(void **)(v5 + 8);
      swift_unknownObjectRetain();
      if (!v6) {
        return 0;
      }
    }
    swift_getObjectType();
    if ([v6 isFolder] && (objc_msgSend(v6, "isAnyParentTrashed") & 1) == 0)
    {
      type metadata accessor for DOCActionManager();
      char v8 = sub_10000FFC4(v6);
      if ([v1 isEditing]) {
        uint64_t v9 = sub_10003B6F8(0);
      }
      else {
        uint64_t v9 = _swiftEmptyArrayStorage;
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      sub_10000BB8C((unint64_t)v9);
      swift_bridgeObjectRelease();
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = [self systemImageNamed:v10];

      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v7 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      [v7 setAttributes:(v8 & 1) == 0, 0, 0, 0, sub_100345170, v12];
      unsigned __int8 v13 = [v1 isEditing];
      swift_unknownObjectRelease();
      if ((v13 & 1) == 0) {
        return v7;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return 0;
  }
  __break(1u);
  return result;
}

id sub_100086CC0(char a1)
{
  unsigned int v3 = [v1 isEditing];
  id result = 0;
  if (v3)
  {
    if ((*((unsigned char *)v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode) & 1) == 0)
    {
      id v5 = sub_10009E55C();
      if (DOCUsePadIdiomForTraits())
      {
        id v6 = [v5 horizontalSizeClass];

        if (v6 == (id)2)
        {
          if (!a1) {
            return 0;
          }
LABEL_11:
          unint64_t v7 = (unint64_t)sub_10003B6F8(0);
          if (v7 >> 62) {
            uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          }
          else {
            uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          swift_beginAccess();
          id v9 = v1;
          unint64_t v10 = swift_bridgeObjectRetain();
          unint64_t v11 = (unint64_t)sub_1003430C0(v10, (uint64_t)v9);
          swift_bridgeObjectRelease();

          if (v11 >> 62) {
            uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
          }
          else {
            uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (v8 < v12) {
            return sub_10033AFA4();
          }
          if (v12 >= 1) {
            return sub_10033B0C0();
          }
          return 0;
        }
      }
      else
      {
      }
      if (!a1) {
        goto LABEL_11;
      }
    }
    return 0;
  }
  return result;
}

id sub_100086E48()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage);
  swift_beginAccess();
  id v2 = *(void **)(v1 + 72);
  swift_retain();
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = sub_1000ACCAC(v0);
    *(void *)(v1 + 72) = v4;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = v4;
    specialized Array._endMutation()();
    id v3 = v4;
    uint64_t v6 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    id v2 = 0;
    *(void *)(v1 + 64) = v6;
  }
  swift_endAccess();
  id v7 = v2;
  swift_release();
  return v3;
}

uint64_t DOCItemCollectionViewController.hidesNavigationBackButton.getter()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  if (objc_msgSendSuper2(&v4, "hidesNavigationBackButton"))
  {
    char v1 = 1;
  }
  else if ([v0 isEditing])
  {
    char v1 = v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] ^ 1;
  }
  else
  {
    id v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    char v1 = *(void *)v2 == 2;
  }
  return v1 & 1;
}

void *sub_10008713C()
{
  char v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v0 traitCollection];
  id v7 = [v6 horizontalSizeClass];

  if (v7 != (id)2) {
    return _swiftEmptyArrayStorage;
  }
  id v8 = [v1 traitCollection];
  unsigned int v9 = [v8 supportHistoryNavigation];

  if (!v9) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10009D098(v2, (uint64_t)qword_100708498);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  unint64_t v11 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v20 - 2) = (uint64_t)v1;
  dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

  swift_release();
  unsigned __int8 v13 = v21;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  id result = (void *)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_1005A0C30;
  uint64_t v15 = (void *)v13[7];
  if (v15)
  {
    result[4] = v15;
    id v16 = (void *)v13[8];
    if (v16)
    {
      result[5] = v16;
      uint64_t v21 = result;
      specialized Array._endMutation()();
      uint64_t v17 = v21;
      id v18 = v15;
      id v19 = v16;
      swift_release();
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCLegacyOverflowBarButtonItem()
{
  return self;
}

uint64_t sub_1000873F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0((unint64_t *)&unk_1007085D0, &qword_10070B6A0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_10070B6A0);
          uint64_t v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10008762C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v2 + 16) & 1) != 0
      || (id v3 = *(id *)v2,
          unsigned __int8 v4 = objc_msgSend(v3, "doc_displaysSearchResults"),
          v3,
          (v4 & 1) == 0))
    {
      uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
      if (v5)
      {
        id v6 = [v5 searchController];
        if (v6)
        {
          uint64_t v7 = v6;
          type metadata accessor for DOCSearchController();
          if (!swift_dynamicCastClass()) {
        }
          }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

_UNKNOWN **sub_1000876F0()
{
  if (![v0 environmentSupportsColumnView]) {
    return &off_100689708;
  }
  id v1 = [v0 configuration];
  unsigned int v2 = [v1 supportsColumnView];

  id v3 = &off_100689708;
  if (v2)
  {
    id v4 = [v0 configuration];
    unsigned int v5 = [v4 isPickerUI];

    if (!v5) {
      return &off_1006896D0;
    }
  }
  return v3;
}

uint64_t sub_1000877C0()
{
  char v2 = 0;
  uint64_t v1 = 0;
  dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();
  return sub_10008937C(0);
}

uint64_t sub_100087990(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1000879B8()
{
  return sub_1000879C0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000879C0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1000879E8()
{
  sub_1000879F0(*(char **)(v0 + 16));
}

void sub_1000879F0(char *a1)
{
  v14.receiver = a1;
  v14.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  char v2 = *(void **)&a1[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  if (v2)
  {
    id v3 = v2;
    [a1 frame];
    double v5 = v4;
    double v7 = v6;
    [v3 fittingSize];
    if (v5 != v9 || v7 != v8)
    {
      id v11 = v3;
      [a1 frame];
      [v11 setFittingSize:v12 v13];
    }
    sub_100087AC8(0);
  }
}

void sub_100087AC8(char a1)
{
  if (v1[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode] != 1) {
    return;
  }
  [v1 frame];
  if (v4 == 0.0 && v3 == 0.0) {
    return;
  }
  id v5 = [v1 effectiveAppearance];
  if (!v5) {
    return;
  }
  double v6 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  if (v6)
  {
    id v33 = v5;
    id v32 = v6;
    [v1 frame];
    double v8 = v7;
    double v10 = v9;
    [v33 defaultDocumentAspectRatio];
    double v12 = v11;
    [v33 defaultDocumentAspectRatio];
    if (v12 >= 1.0)
    {
      double v10 = sub_1002D3B98(v10 / v13);
      if (a1) {
        goto LABEL_15;
      }
    }
    else
    {
      double v8 = sub_1002D3B98(v8 * v13);
      if (a1) {
        goto LABEL_15;
      }
    }
    id v14 = [v32 image];
    if (!v14
      || ((v15 = v14, [v14 size], double v17 = v16, v19 = v18, v15, v17 == v8)
        ? (BOOL v20 = v19 == v10)
        : (BOOL v20 = 0),
          !v20))
    {
LABEL_15:
      v36.origin.x = 0.0;
      v36.origin.y = 0.0;
      v36.size.width = v8;
      v36.size.height = v10;
      double MidX = CGRectGetMidX(v36);
      double v22 = sub_1002D3B98(MidX);
      v37.origin.x = 0.0;
      v37.origin.y = 0.0;
      v37.size.width = v8;
      v37.size.height = v10;
      double MidY = CGRectGetMidY(v37);
      double v24 = sub_1002D3B98(MidY);
      if (v24 < v22) {
        double v22 = v24;
      }
      id v25 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v8];
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 24) = 0;
      *(void *)(v26 + 32) = 0;
      *(void *)(v26 + 16) = v1;
      *(double *)(v26 + 40) = v8;
      *(double *)(v26 + 48) = v10;
      *(double *)(v26 + 56) = v22;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_1002D3BD8;
      *(void *)(v27 + 24) = v26;
      aBlock[4] = sub_100162780;
      aBlock[5] = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100429DC4;
      void aBlock[3] = &unk_10069F010;
      Swift::String v28 = _Block_copy(aBlock);
      uint64_t v29 = v1;
      swift_retain();
      swift_release();
      id v30 = [v25 imageWithActions:v28];
      _Block_release(v28);
      LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v28)
      {
        __break(1u);
      }
      else
      {
        id v31 = v30;
        [v32 setImage:v31];
        swift_release();
      }
      return;
    }

    id v5 = v32;
  }
}

uint64_t sub_100087E2C()
{
  return sub_100087E38(*(void *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100087E38(int a1, id a2, void *a3)
{
  id v4 = [a2 thumbnailIdentifier];
  swift_beginAccess();
  sub_100087F24((uint64_t)v4, v7);
  swift_endAccess();

  sub_1000CBE0C((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_10071A1F0);
  sub_1000CBE0C((uint64_t)v8, (uint64_t)&v9, (uint64_t *)&unk_10071A1F0);
  uint64_t result = sub_1000CBEB4(&v9);
  if (result != 1)
  {
    swift_unknownObjectRelease();
    uint64_t v6 = v10[0];
    swift_unknownObjectRetain();
    sub_1000A3084((uint64_t)v10);
    *a3 = v6;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100087F24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  double v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100088020(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    *(void *)&v11[0] = *v3;
    *double v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10035A730();
      uint64_t v9 = *(void *)&v11[0];
    }

    memmove(a2, (const void *)(*(void *)(v9 + 56) + 224 * v6), 0xD9uLL);
    sub_100354E84(v6, v9);
    *double v3 = v9;
    swift_bridgeObjectRelease();
    return DOCSplitBrowserViewController.didCommitPreview(of:)(a2);
  }
  else
  {
    sub_100088184(v11);
    return sub_1000CBE0C((uint64_t)v11, (uint64_t)a2, (uint64_t *)&unk_10071A1F0);
  }
}

unint64_t sub_100088020(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, &qword_100714430);
}

unint64_t sub_100088070(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10009E6C4(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

double sub_100088184(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 201) = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

id sub_1000881AC()
{
  return sub_100088744(*(char **)(v0 + 16));
}

void *sub_100088248(void *a1, double a2, double a3, double a4, double a5)
{
  id v11 = objc_allocWithZone(v5);
  return sub_1000882AC(a1, a2, a3, a4, a5);
}

void *sub_1000882AC(void *a1, double a2, double a3, double a4, double a5)
{
  unint64_t v6 = v5;
  swift_getObjectType();
  uint64_t v12 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView;
  type metadata accessor for DOCNotifyingStackView();
  id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v14 = v6;
  *(void *)&v6[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel;
  type metadata accessor for DOCFastLabel();
  *(void *)&v14[v15] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v16 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel;
  id v17 = [objc_allocWithZone((Class)DOCLabel) init];
  double v18 = self;
  id v19 = v17;
  id v20 = [v18 secondaryLabelColor];
  [v19 setTextColor:v20];

  [v19 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v14[v16] = v19;
  uint64_t v21 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel;
  id v22 = [objc_allocWithZone((Class)DOCLabel) init];
  id v23 = [v18 secondaryLabelColor];
  [v22 setTextColor:v23];

  [v22 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v14[v21] = v22;
  uint64_t v24 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView;
  type metadata accessor for DOCImageViewContainerView();
  *(void *)&v14[v24] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView] = 0;
  id v25 = &v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider];
  *(_OWORD *)id v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  *((void *)v25 + 4) = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant] = 0;
  v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFolderActivated] = 1;
  v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFileActivated] = 1;
  uint64_t v26 = &v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics];
  *(void *)uint64_t v26 = 0xBFF0000000000000;
  *((_WORD *)v26 + 4) = 257;
  *((_OWORD *)v26 + 1) = xmmword_1005B0FA0;
  *((_OWORD *)v26 + 2) = xmmword_1005B0FB0;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding] = 0x4041800000000000;
  *(void *)&v14[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints] = &_swiftEmptyArrayStorage;

  id v27 = a1;
  Swift::String v28 = sub_10008883C(a1, a2, a3, a4, a5);
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1005A0030;
  unint64_t v30 = sub_10009E9DC();
  *(void *)(v29 + 32) = &type metadata for DOCBrowserLayoutConfiguration.Trait;
  *(void *)(v29 + 40) = v30;
  id v31 = v28;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_100088EF4();

  return v31;
}

id sub_100088744(char *a1)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for DOCNotifyingStackView();
  id result = [super layoutSubviews];
  uint64_t v3 = *(void (**)(uint64_t))&a1[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  if (v3)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    return (id)sub_1000A7258((uint64_t)v3);
  }
  return result;
}

uint64_t type metadata accessor for DOCNotifyingStackView()
{
  return self;
}

void sub_1000887E0()
{
}

void sub_1000887E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000A0C38();
  }
}

void *sub_10008883C(void *a1, double a2, double a3, double a4, double a5)
{
  unint64_t v6 = v5;
  swift_getObjectType();
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY] = 0;
  v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemStatusBadge] = 0;
  v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___itemAccessStatusBadge] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___renameGestureRecognizer] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_actions] = &_swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView] = 1;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView] = 0;
  v6[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming] = 0;
  id v12 = objc_allocWithZone((Class)type metadata accessor for DOCBadgedFittingImageView());
  id v13 = v6;
  id v14 = [v12 initWithFrame:a2, a3, a4, a5];
  *(void *)&v13[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] = v14;
  v13[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isDummyCell] = a1 != 0;

  v24.receiver = v13;
  v24.super_class = (Class)type metadata accessor for DOCItemCollectionCell();
  uint64_t v15 = [super initWithFrame:a2, a3, a4, a5];
  uint64_t v16 = v15;
  if (a1)
  {
    id v17 = v15;
    id v18 = a1;
  }
  else
  {
    id v18 = [v15 contentView];
  }
  id v19 = *(void (**)(id))((swift_isaMask & *v16) + 0x268);
  id v20 = a1;
  v19(v18);

  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
  *(void *)(v21 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v21 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v22 = v16;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v22;
}

uint64_t type metadata accessor for DOCBadgedFittingImageView()
{
  return self;
}

uint64_t type metadata accessor for DOCImageViewContainerView()
{
  return self;
}

id sub_100088DE0(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView] = 0;
  v4[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode] = 0;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  id v10 = [super initWithFrame:a1, a2, a3, a4];
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
  *(void *)(v11 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v11 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  id v12 = v10;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v12;
}

void sub_100088EF4()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = (objc_class *)_s19BackgroundStateViewCMa();
  id v4 = objc_allocWithZone(v3);
  id v5 = objc_allocWithZone((Class)UITraitCollection);
  unint64_t v6 = v4;
  [v5 init];
  UICellConfigurationState.init(traitCollection:)();
  v6[OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_style] = 0;

  v16.receiver = v6;
  v16.super_class = v3;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100089158();
  [v7 setAutoresizingMask:18];
  [v7 setHidden:1];
  [v2 addSubview:v7];
  char v8 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
  *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView] = v7;

  id v9 = objc_allocWithZone(v3);
  id v10 = objc_allocWithZone((Class)UITraitCollection);
  uint64_t v11 = v9;
  [v10 init];
  UICellConfigurationState.init(traitCollection:)();
  v11[OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_style] = 1;

  v15.receiver = v11;
  v15.super_class = v3;
  id v12 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100089158();
  [v12 setAutoresizingMask:18];
  [v12 setHidden:1];
  [v2 addSubview:v12];
  id v13 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
  *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView] = v12;

  id v14 = [objc_allocWithZone((Class)UIView) init];
  [v1 setSelectedBackgroundView:v14];

  [v1 setBackgroundView:v2];
}

void sub_100089158()
{
  id v1 = [v0 layer];
  [v1 setCornerCurve:kCACornerCurveContinuous];

  id v2 = [v0 layer];
  [v2 setCornerRadius:0.0];

  LODWORD(v2) = v0[OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_style];
  id v3 = [v0 layer];
  id v4 = v3;
  if (v2 == 1)
  {
    [v3 setCornerRadius:5.0];

    id v4 = [self secondarySystemFillColor];
    [v0 setBackgroundColor:];
  }
  else
  {
    [v3 setCornerRadius:0.0];
  }
}

id sub_100089280(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return [super initWithFrame:a2, a3, a4, a5];
}

uint64_t type metadata accessor for DOCView()
{
  return self;
}

uint64_t _s19BackgroundStateViewCMa()
{
  uint64_t result = qword_1007192B8;
  if (!qword_1007192B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008937C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000895E0()
{
  sub_1000899F4();
  id v1 = [v0 fullDocumentManagerDelegate];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 hierarchyController];
    id v4 = [v0 displayedRootLocation];
    [v2 fullDocumentManagerViewController:v0 didUpdateHierarchy:v3 displayedRootLocation:v4];
    swift_unknownObjectRelease();
  }
  if ([v0 delegate])
  {
    uint64_t v5 = swift_dynamicCastObjCProtocolConditional();
    if (v5)
    {
      unint64_t v6 = (void *)v5;
      id v7 = [v0 hierarchyController];
      id v8 = [v0 displayedRootLocation];
      [v6 fullDocumentManagerViewController:v0 didUpdateHierarchy:v7 displayedRootLocation:v8];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_10008978C()
{
  id v1 = v0;
  id v2 = (char *)[v0 dataSource];
  uint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  id v4 = (char *)[v0 hierarchyController];
  uint64_t v5 = v4;
  if (v3 != 2)
  {
    id v9 = &v4[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    unint64_t v10 = *(void *)v9;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11)
      {
LABEL_11:

        goto LABEL_24;
      }
    }
    unint64_t v12 = v11 - 1;
    if (__OFSUB__(v11, 1))
    {
      __break(1u);
    }
    else if ((v10 & 0xC000000000000001) == 0)
    {
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v12 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v13 = *(id *)(v10 + 8 * v12 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_23;
    }
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  unint64_t v6 = (void *)sub_1000BB4AC();

  id v7 = (char *)[v1 hierarchyController];
  id v8 = v7;
  if (v6)
  {
    sub_1000BB4AC();

    return;
  }
  id v14 = &v7[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v10 = *(void *)v14;
  swift_bridgeObjectRetain();

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_24;
  }
LABEL_14:
  if ((v10 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_24;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    *(id *)(v10 + 32);
    goto LABEL_24;
  }
  __break(1u);
}

void sub_1000899F4()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v2);

  id v3 = [v0 configuration];
  sub_100089B98((uint64_t)v3);

  UIViewController.traitOverrides.getter();
  sub_10009E9DC();
  dispatch thunk of UIMutableTraits.subscript.setter();
  UIViewController.traitOverrides.setter();
  if ([v1 enclosedInUIPDocumentLanding])
  {
    id v4 = [v1 view];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [self clearColor];
      [v5 setBackgroundColor:v6];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100089B98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  id v9 = (char *)&v29 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - v10;
  id v12 = [self sharedStore];
  id v13 = [v12 interfaceStateForConfiguration:a1];

  if (!v13)
  {
    static Logger.StateStore.getter();
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v31 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005DFAC0, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2048;
      uint64_t v31 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s state store was nil, returning default sizeSetting: %ld", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 1;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 1;
  }
  id v14 = [v13 sizeSetting];
  if (!v14)
  {
    static Logger.StateStore.getter();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v31 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005DFAC0, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2048;
      uint64_t v31 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s sizeSetting property is nil, returning default sizeSetting: %ld", (uint8_t *)v23, 0x16u);
      uint64_t v17 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      return v17;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    return 1;
  }
  uint64_t v15 = v14;
  id v16 = [v14 integerValue];

  if (!v16)
  {

    return 1;
  }
  if (v16 != (id)-1)
  {
    static Logger.StateStore.getter();
    objc_super v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315650;
      uint64_t v27 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005DFAC0, &v32);
      uint64_t v30 = v2;
      uint64_t v31 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 12) = 2048;
      uint64_t v31 = (uint64_t)v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v26 + 22) = 2048;
      uint64_t v31 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s could not initialize SizeSetting from the provided raw value: %ld, returning default sizeSetting: %ld", (uint8_t *)v26, 0x20u);
      uint64_t v17 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v30);
      return v17;
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
    return 1;
  }

  return 0;
}

uint64_t type metadata accessor for DOCBrowserContainerController()
{
  return self;
}

uint64_t sub_10008A504()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2)
  {
    unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
    if (v1)
    {
      if (v1 >> 62)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        swift_bridgeObjectRetain();
        uint64_t v2 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
        return v2;
      }
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
    swift_beginAccess();
    unint64_t v1 = *v4;
    if (v1)
    {
      if (v1 >> 62)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        swift_bridgeObjectRetain();
        unint64_t v1 = _bridgeCocoaArray<A>(_:)();
        goto LABEL_8;
      }
LABEL_7:
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
LABEL_8:
      swift_bridgeObjectRelease();
      return v1;
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t DOCItemCollectionViewController.items.setter(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v135 = a1;
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  int v138 = (char *)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v137 = (char *)&v129 - v6;
  uint64_t v7 = type metadata accessor for DOCItemCollectionFPController();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v136 = (uint64_t)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v131 = (char *)&v129 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v130 = (char *)&v129 - v13;
  __chkstk_darwin(v12);
  uint64_t v142 = (uint64_t)&v129 - v14;
  uint64_t v15 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v139 = (char *)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v132 = (char *)&v129 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v133 = (char *)&v129 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  objc_super v24 = (char *)&v129 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v129 - v25;
  uint64_t v27 = type metadata accessor for IndexPath();
  unint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  id v33 = (char *)&v129 - v32;
  uint64_t v34 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  unint64_t v141 = v34[1];
  uint64_t v140 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v35 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  unint64_t v145 = v28;
  if (v35)
  {
    uint64_t v36 = *(void *)(v35 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess();
    sub_1000CBC00(v36, (uint64_t)v26, (uint64_t *)&unk_1007069A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
    {
      CGRect v37 = (void *)v145;
      (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v33, v26, v27);
      swift_bridgeObjectRetain();
      uint64_t v147 = sub_1001BAA44((uint64_t)v33, 0);
      ((void (*)(char *, uint64_t))v37[1])(v33, v27);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
  }
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_1007069A0);
  uint64_t v147 = 0;
LABEL_6:
  uint64_t v38 = (uint64_t)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
  swift_beginAccess();
  uint64_t v134 = v38;
  sub_1000CBC00(v38, (uint64_t)v24, (uint64_t *)&unk_1007069A0);
  id v39 = (void *)v145;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v145 + 48))(v24, 1, v27) == 1)
  {
    sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_1007069A0);
    uint64_t v148 = 0;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v39[4])(v31, v24, v27);
    uint64_t v148 = sub_1001BAA44((uint64_t)v31, 0);
    ((void (*)(char *, uint64_t))v39[1])(v31, v27);
  }
  unint64_t v143 = v27;
  uint64_t v40 = v142;
  sub_10008BCB8((uint64_t)v34, v142, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  uint64_t v41 = *(void *)(*(void *)v40 + 16);
  uint64_t v144 = v2;
  unint64_t v146 = (void **)v34;
  if (v41)
  {
    uint64_t v129 = swift_bridgeObjectRetain();
    uint64_t v42 = v129 + 56;
    Swift::String v43 = _swiftEmptyArrayStorage;
    do
    {
      if (*(unsigned __int8 *)(*(void *)(v42 + 8) + 24) != *(unsigned __int8 *)(*(void *)(v42 + 8) + 25))
      {
        uint64_t v49 = *(void *)(v42 - 24);
        uint64_t v48 = *(void *)(v42 - 16);
        uint64_t v50 = *(void *)(v42 - 8);
        long long v149 = *(_OWORD *)v42;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v151[0] = (uint64_t)v43;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000A4ED0(0, v43[2] + 1, 1);
          Swift::String v43 = (void *)v151[0];
        }
        unint64_t v45 = v43[2];
        unint64_t v44 = v43[3];
        long long v46 = v149;
        if (v45 >= v44 >> 1)
        {
          sub_1000A4ED0(v44 > 1, v45 + 1, 1);
          long long v46 = v149;
          Swift::String v43 = (void *)v151[0];
        }
        void v43[2] = v45 + 1;
        Swift::OpaquePointer v47 = &v43[5 * v45];
        v47[4] = v49;
        v47[5] = v48;
        v47[6] = v50;
        *(_OWORD *)(v47 + 7) = v46;
      }
      v42 += 40;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    uint64_t v2 = v144;
    uint64_t v34 = v146;
  }
  else
  {
    Swift::String v43 = _swiftEmptyArrayStorage;
  }
  sub_10008BBF0(v142, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  if ((sub_10008BD6C() & 1) == 0)
  {
    uint64_t v53 = type metadata accessor for DOCItemGroupingBehavior();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v137, 1, 1, v53);
    uint64_t v55 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v55)
    {
      if ([*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] isGathering])char v56 = 0; {
      else
      }
        char v56 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton];
      if (*(unsigned char *)(v55 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
      {
        type metadata accessor for FISentinelNode();
        uint64_t v63 = static FISentinelNode.createSentinelNode.getter();
      }
      else
      {
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        uint64_t v63 = static FPItem.createDocumentSentinelItem()();
      }
      uint64_t v65 = v63;
      uint64_t v66 = (uint64_t)v130;
      uint64_t v67 = (uint64_t)v130;
      unint64_t v68 = v135;
      uint64_t v69 = (uint64_t)v137;
      goto LABEL_40;
    }
    __break(1u);
LABEL_118:
    __break(1u);
    return result;
  }
  UIImage_optional v52 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (([v52 isFilesApp] & 1) == 0)
  {
    id v57 = [v52 recentDocumentsContentTypes];
    type metadata accessor for UTType();
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  char v58 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
  swift_beginAccess();
  uint64_t v59 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = v138;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v138, v58, v59);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v59);
  uint64_t v62 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v62) {
    goto LABEL_118;
  }
  if ([*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] isGathering])char v56 = 0; {
  else
  }
    char v56 = v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton];
  if (*(unsigned char *)(v62 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    type metadata accessor for FISentinelNode();
    uint64_t v64 = static FISentinelNode.createSentinelNode.getter();
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v64 = static FPItem.createDocumentSentinelItem()();
  }
  uint64_t v65 = v64;
  uint64_t v66 = (uint64_t)v131;
  uint64_t v67 = (uint64_t)v131;
  unint64_t v68 = v135;
  uint64_t v69 = (uint64_t)v138;
LABEL_40:
  sub_10008DB64(v68, v69, v56, v65, v67);
  swift_beginAccess();
  sub_10008C4FC(v66, (uint64_t)v34);
  swift_endAccess();
  uint64_t v70 = v136;
  sub_10008BCB8((uint64_t)v34, v136, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  sub_10008C71C((uint64_t)v43);
  swift_release();
  sub_10008BBF0(v70, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  if (v147)
  {
    uint64_t v71 = *(char **)&v2[v140];
    unint64_t v72 = v143;
    id v73 = (void *)v145;
    if (!v71) {
      goto LABEL_65;
    }
    uint64_t v74 = *v34;
    unint64_t v135 = *(void *)(*v34 + 16);
    if (!v135)
    {
      swift_unknownObjectRetain();
      uint64_t v91 = v71;
      uint64_t v90 = 1;
      uint64_t v77 = v133;
      goto LABEL_63;
    }
    int v138 = (char *)(v74 + 32);
    swift_unknownObjectRetain();
    uint64_t v75 = v71;
    swift_bridgeObjectRetain();
    unint64_t v76 = 0;
    uint64_t v137 = v71;
    uint64_t v136 = v74;
    while (1)
    {
      if (v76 >= *(void *)(v74 + 16)) {
        goto LABEL_114;
      }
      id v78 = &v138[40 * v76];
      uint64_t v79 = *((void *)v78 + 1);
      uint64_t v80 = *((void *)v78 + 3);
      uint64_t v81 = *((void *)v78 + 4);
      swift_beginAccess();
      unint64_t v82 = *(void *)(v81 + 16);
      *(void *)&long long v149 = v80;
      uint64_t v142 = v79;
      if (v82 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v83)
        {
LABEL_48:
          swift_getObjectType();
          uint64_t v84 = 0;
          while (1)
          {
            if ((v82 & 0xC000000000000001) != 0)
            {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v85 = v84 + 1;
              if (__OFADD__(v84, 1)) {
                goto LABEL_109;
              }
            }
            else
            {
              swift_unknownObjectRetain();
              uint64_t v85 = v84 + 1;
              if (__OFADD__(v84, 1))
              {
LABEL_109:
                __break(1u);
                goto LABEL_110;
              }
            }
            swift_getObjectType();
            DOCNode.identifierKey.getter();
            DOCNode.identifierKey.getter();
            char v86 = static AnyHashable.== infix(_:_:)();
            sub_10008E17C((uint64_t)v150);
            sub_10008E17C((uint64_t)v151);
            if (v86) {
              break;
            }
            swift_unknownObjectRelease();
            ++v84;
            if (v85 == v83) {
              goto LABEL_44;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v77 = v133;
          IndexPath.init(item:section:)();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v90 = 0;
          uint64_t v2 = v144;
          uint64_t v34 = v146;
          unint64_t v72 = v143;
          id v73 = (void *)v145;
          uint64_t v71 = v137;
LABEL_63:
          ((void (*)(char *, uint64_t, uint64_t, unint64_t))v73[7])(v77, v90, 1, v72);
          uint64_t v92 = (uint64_t)v77;
          uint64_t v93 = *(void *)&v71[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
              + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
          swift_beginAccess();
          swift_retain();
          sub_10008C318(v92, v93, (uint64_t *)&unk_1007069A0);
          swift_endAccess();
          swift_unknownObjectRelease();
LABEL_64:

          swift_release();
          goto LABEL_65;
        }
      }
      else
      {
        uint64_t v83 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v83) {
          goto LABEL_48;
        }
      }
LABEL_44:
      ++v76;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v2 = v144;
      uint64_t v34 = v146;
      uint64_t v77 = v133;
      uint64_t v71 = v137;
      uint64_t v74 = v136;
      if (v76 == v135)
      {
        swift_bridgeObjectRelease();
        uint64_t v90 = 1;
        unint64_t v72 = v143;
        id v73 = (void *)v145;
        goto LABEL_63;
      }
    }
  }
  uint64_t v87 = *(char **)&v2[v140];
  unint64_t v72 = v143;
  id v73 = (void *)v145;
  if (v87)
  {
    uint64_t v88 = (uint64_t)v132;
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v145 + 56))(v132, 1, 1, v143);
    uint64_t v89 = *(void *)&v87[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess();
    uint64_t v71 = v87;
    swift_retain();
    sub_10008C318(v88, v89, (uint64_t *)&unk_1007069A0);
    swift_endAccess();
    goto LABEL_64;
  }
LABEL_65:
  if (v148)
  {
    uint64_t v94 = (char *)*v34;
    uint64_t v136 = *(void *)(*v34 + 16);
    if (v136)
    {
      int v138 = v94 + 32;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v95 = 0;
      uint64_t v137 = v94;
      do
      {
        if (v95 >= *((void *)v94 + 2)) {
          goto LABEL_113;
        }
        uint64_t v97 = &v138[40 * v95];
        uint64_t v98 = *((void *)v97 + 1);
        uint64_t v99 = *((void *)v97 + 3);
        uint64_t v100 = *((void *)v97 + 4);
        swift_beginAccess();
        unint64_t v101 = *(void *)(v100 + 16);
        *(void *)&long long v149 = v99;
        uint64_t v142 = v98;
        if (v101 >> 62)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v102)
          {
LABEL_72:
            swift_getObjectType();
            uint64_t v103 = 0;
            do
            {
              if ((v101 & 0xC000000000000001) != 0)
              {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v104 = v103 + 1;
                if (__OFADD__(v103, 1)) {
                  goto LABEL_108;
                }
              }
              else
              {
                swift_unknownObjectRetain();
                uint64_t v104 = v103 + 1;
                if (__OFADD__(v103, 1))
                {
LABEL_108:
                  __break(1u);
                  goto LABEL_109;
                }
              }
              swift_getObjectType();
              DOCNode.identifierKey.getter();
              DOCNode.identifierKey.getter();
              char v105 = static AnyHashable.== infix(_:_:)();
              sub_10008E17C((uint64_t)v150);
              sub_10008E17C((uint64_t)v151);
              if (v105)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v96 = (uint64_t)v139;
                IndexPath.init(item:section:)();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                uint64_t v108 = 0;
                uint64_t v2 = v144;
                uint64_t v34 = v146;
                unint64_t v72 = v143;
                id v73 = (void *)v145;
                goto LABEL_86;
              }
              swift_unknownObjectRelease();
              ++v103;
            }
            while (v104 != v102);
          }
        }
        else
        {
          uint64_t v102 = *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          if (v102) {
            goto LABEL_72;
          }
        }
        ++v95;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v96 = (uint64_t)v139;
        unint64_t v72 = v143;
        id v73 = (void *)v145;
        uint64_t v94 = v137;
      }
      while (v95 != v136);
      swift_bridgeObjectRelease();
      uint64_t v108 = 1;
      uint64_t v2 = v144;
      uint64_t v34 = v146;
    }
    else
    {
      swift_unknownObjectRetain();
      uint64_t v108 = 1;
      uint64_t v96 = (uint64_t)v139;
    }
LABEL_86:
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v73[7])(v96, v108, 1, v72);
    uint64_t v109 = v134;
    swift_beginAccess();
    sub_10008C318(v96, v109, (uint64_t *)&unk_1007069A0);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v106 = (uint64_t)v132;
    ((void (*)(char *, uint64_t, uint64_t, unint64_t))v73[7])(v132, 1, 1, v72);
    uint64_t v107 = v134;
    swift_beginAccess();
    sub_10008C318(v106, v107, (uint64_t *)&unk_1007069A0);
    swift_endAccess();
  }
  unint64_t v110 = v34[1];
  swift_bridgeObjectRetain();
  sub_10008C37C(v141, v110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v2 docSetNeedsUpdateContentUnavailableConfiguration];
  if ((sub_10008BD6C() & 1) != 0 && *(void *)&v2[v140])
  {
    unint64_t v145 = (unint64_t)sub_10001A904();
    if (v145 >> 62) {
      goto LABEL_115;
    }
    for (uint64_t i = *(void *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v143 = v145 & 0xC000000000000001;
      uint64_t v112 = 4;
      uint64_t v142 = i;
      while (1)
      {
        unint64_t v113 = v143
             ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : (char *)*(id *)(v145 + 8 * v112);
        id v114 = v113;
        if (__OFADD__(v112 - 4, 1)) {
          break;
        }
        Swift::OpaquePointer v115 = (uint64_t *)&v113[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
        uint64_t v116 = *(void *)&v113[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                              + 8];
        if (!v116)
        {

          goto LABEL_104;
        }
        uint64_t v117 = *v115;
        uint64_t v118 = (uint64_t)*v146;
        unint64_t v119 = sub_10020872C(*v115, *(void *)&v113[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection+ 8], *v146);
        if (v120)
        {
          sub_100208814(v117, v116);

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_104;
        }
        if ((v119 & 0x8000000000000000) != 0) {
          goto LABEL_111;
        }
        if (v119 >= *(void *)(v118 + 16)) {
          goto LABEL_112;
        }
        int v121 = (void *)(v118 + 40 * v119);
        uint64_t v122 = v121[4];
        uint64_t v123 = v121[5];
        *(void *)&long long v149 = v112 - 3;
        uint64_t v124 = (char *)v114;
        uint64_t v125 = v121[6];
        uint64_t v126 = v121[7];
        uint64_t v127 = v121[8];
        v151[0] = v122;
        v151[1] = v123;
        v151[2] = v125;
        v151[3] = v126;
        v151[4] = v127;
        sub_100208814(v117, v116);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1001DE428(v124, v151);
        uint64_t v128 = v142;
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v112;
        if ((void)v149 == v128) {
          goto LABEL_104;
        }
      }
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      ;
    }
LABEL_104:
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_10008BB90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008BBF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008BC50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008BCB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DOCItemCollectionFPController()
{
  uint64_t result = qword_100710FA8;
  if (!qword_100710FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008BD6C()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCItemSortMode();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v13)
  {
    uint64_t v14 = v13 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v14 + 16) & 1) != 0
      || (id v15 = *(id *)v14,
          unsigned __int8 v16 = objc_msgSend(v15, "doc_displaysSearchResults"),
          v15,
          (v16 & 1) == 0))
    {
      uint64_t v17 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
      if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for DOCItemGroupingBehavior.grouped(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v3, v12, v8);
        uint64_t v18 = 1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v3, 0, 1, v8);
        BOOL v19 = sub_100325528((uint64_t)v3);
        sub_1000CBBA4((uint64_t)v3, (uint64_t *)&unk_10070ADC0);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        if (v19) {
          return v18;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008C084(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_10008C164(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 28);
  __dst = (char *)a1 + v6;
  uint64_t v7 = (char *)a2 + v6;
  uint64_t v8 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
    memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(__dst, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v8);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 32)) = *((unsigned char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_10008C318(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000CBE70(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008C37C(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails];
  uint64_t result = swift_beginAccess();
  if (*v5) {
    return result;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!(a2 >> 62)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!(a2 >> 62))
    {
LABEL_4:
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_5:
  if ((v7 == 0) == (v8 != 0))
  {
    uint64_t v9 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v10 = *((void *)v9 + 1);
      uint64_t ObjectType = swift_getObjectType();
      v14[3] = type metadata accessor for DOCItemCollectionViewController(0);
      v14[0] = v2;
      uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
      uint64_t v13 = v2;
      v12(v14, v8, 1, 1, ObjectType, v10);
      swift_unknownObjectRelease();
      return sub_10009B1B8((uint64_t)v14);
    }
  }
  return result;
}

uint64_t sub_10008C4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCItemCollectionFPController();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_10008C560(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 32)) = *((unsigned char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_10008C71C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return result;
  }
  uint64_t v3 = *(void **)v1;
  uint64_t v24 = *(void *)(*(void *)v1 + 16);
  uint64_t v21 = *(void *)v1 + 32;
  uint64_t v22 = result + 32;
  uint64_t result = swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (!v24) {
      continue;
    }
    uint64_t v7 = (uint64_t *)(v22 + 40 * i);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = v7[4];
    BOOL v11 = v3[4] == v8 && v3[5] == v9;
    uint64_t v23 = v10;
    if (v11)
    {
      unint64_t v5 = v3[2];
      if (!v5) {
        continue;
      }
      goto LABEL_4;
    }
    uint64_t v12 = v2;
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      goto LABEL_14;
    }
    if (v24 == 1) {
      continue;
    }
    uint64_t result = v3[9];
    BOOL v13 = result == v8 && v3[10] == v9;
    if (v13 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_14:
      unint64_t v5 = v3[2];
      uint64_t v2 = v12;
      if (!v5) {
        continue;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0)
      {
        if (v5 == 1) {
          continue;
        }
        uint64_t result = v3[9];
        if (result != v8 || v3[10] != v9)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0)
          {
            uint64_t v18 = v3 + 15;
            uint64_t v19 = 2;
            while (v5 != v19)
            {
              unint64_t v6 = v19;
              uint64_t result = *(v18 - 1);
              if (result != v8 || *v18 != v9)
              {
                uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
                uint64_t v19 = v6 + 1;
                v18 += 5;
                if ((result & 1) == 0) {
                  continue;
                }
              }
              goto LABEL_5;
            }
            continue;
          }
        }
        unint64_t v6 = 1;
        goto LABEL_5;
      }
LABEL_4:
      unint64_t v6 = 0;
LABEL_5:
      if (v6 >= v5)
      {
        __break(1u);
LABEL_51:
        __break(1u);
        return result;
      }
      *(unsigned char *)(*(void *)(v21 + 40 * v6 + 32) + 24) = *(unsigned char *)(v23 + 24);
      continue;
    }
    if (v24 != 2)
    {
      uint64_t v14 = v3 + 15;
      uint64_t v15 = 2;
      do
      {
        uint64_t v16 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_51;
        }
        uint64_t result = *(v14 - 1);
        if (result == v8 && *v14 == v9) {
          goto LABEL_14;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if (result) {
          goto LABEL_14;
        }
        v14 += 5;
        ++v15;
        BOOL v11 = v16 == v24;
        uint64_t v2 = v12;
      }
      while (!v11);
    }
  }

  return swift_bridgeObjectRelease();
}

void *_s5Files31DOCItemCollectionViewControllerC010collectionD0_11cellForNode2atSo012UICollectionD4CellCSo0kD0C_So7DOCNode_p10Foundation9IndexPathVtF_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [v3 traitCollection];
  id v9 = [v8 preferredContentSizeCategory];

  UIContentSizeCategory.isAccessibilityCategory.getter();
  swift_bridgeObjectRetain();
  uint64_t v10 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (!*(void *)v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v13 = [a1 dequeueReusableCellWithReuseIdentifier:v11 forIndexPath:isa];

  type metadata accessor for DOCItemCollectionCell();
  uint64_t v14 = (void *)swift_dynamicCastClassUnconditional();
  unsigned int v15 = [*(id *)&v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPopoverOrWidget];
  int v16 = *((unsigned __int8 *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView);
  *((unsigned char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_canShowBackgroundView) = v15 ^ 1;
  if (v15 == v16) {
    [v14 setNeedsUpdateConfiguration];
  }
  *(void *)((char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate + 8) = &off_100695C80;
  swift_unknownObjectWeakAssign();
  uint64_t v17 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  uint64_t v18 = *((void *)v17 + 2);
  swift_getObjectType();
  swift_bridgeObjectRetain();
  DOCNode.identifierKey.getter();
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_10008E070((uint64_t)v43), (v20 & 1) != 0))
  {
    a2 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)v43);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)v43);
    swift_unknownObjectRetain();
  }
  swift_getObjectType();
  if (DOCNode.isCreateDocumentSentinel()())
  {
    uint64_t v21 = (char *)[objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionCellContent()) init];
    sub_100095970(v21);
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v23 = *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_cellContentPool];
    uint64_t v21 = v4;
    uint64_t v22 = (char *)sub_10008D208(a2, v23, (uint64_t)v21);
  }

  uint64_t v24 = (void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  uint64_t v25 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress];
  if (v25)
  {
    sub_1002211F8(*(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress]);
    swift_unknownObjectRetain();
    sub_10021FC9C(v25);
    swift_getObjectType();
    char v26 = DOCNode.isEqualTo(node:)();
    swift_unknownObjectRelease();
    if (v26)
    {
      uint64_t v25 = *v24;
      if (*v24)
      {
        sub_1002211F8(*v24);
        id v27 = v25;
        sub_10021FC9C(v25);
      }
    }
    else
    {
      uint64_t v25 = 0;
    }
  }
  unint64_t v28 = *(void **)&v22[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress];
  *(void *)&v22[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = v25;
  id v29 = v25;
  sub_100090210(v28);

  if (*(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility + 8])
  {
    BOOL v30 = (*(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentTransitionVisibility] & 1) == 0;
    uint64_t v31 = *(void **)((char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    swift_getObjectType();
    swift_unknownObjectRetain();
    id v32 = v31;
    [v32 setHidden:DOCNode.isEqualTo(node:)() & v30];
    swift_unknownObjectRelease();
  }
  else
  {
    [*(id *)((char *)v14 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView) setHidden:0];
  }
  id v33 = *(void (**)(char *))((swift_isaMask & *v14) + 0x200);
  uint64_t v34 = v22;
  v33(v22);
  id v35 = v13;
  id v36 = [a1 indexPathsForSelectedItems];
  if (v36)
  {
    CGRect v37 = v36;
    type metadata accessor for IndexPath();
    uint64_t v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v39);
    v42[2] = a3;
    BOOL v40 = sub_10008CF28((uint64_t (*)(char *))sub_1002188C0, (uint64_t)v42, v38, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0);
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v40 = 0;
  }
  [v14 setSelected:v40];
  swift_unknownObjectRelease();

  return v14;
}

BOOL sub_10008CF28(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v41 = a1;
  uint64_t v42 = a4(0);
  uint64_t v9 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  NSString v11 = (char *)v32 - v10;
  uint64_t v12 = sub_1000CBE70(a5);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a3 + 16);
  if (v15)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    BOOL v40 = v17;
    uint64_t v18 = a3 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v19 = *(void *)(v16 + 56);
    CGRect v37 = v11;
    uint64_t v38 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v34 = v19;
    id v35 = (void (**)(char *))(v16 + 16);
    id v36 = (void (**)(char *, uint64_t))(v16 - 8);
    v32[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
    v32[1] = (v16 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v20 = v42;
      uint64_t v21 = v16;
      v40(v14, v18, v42);
      uint64_t v22 = *v39;
      (*v39)(v14, 0, 1, v20);
      int v23 = (*v38)(v14, 1, v20);
      BOOL v24 = v23 != 1;
      if (v23 == 1) {
        break;
      }
      id v33 = v22;
      uint64_t v25 = v14;
      char v26 = v37;
      id v27 = v25;
      (*v35)(v37);
      char v28 = v41(v26);
      if (v7)
      {
        (*v36)(v26, v20);
        swift_bridgeObjectRelease();
        return v24;
      }
      char v29 = v28;
      (*v36)(v26, v20);
      if (v29) {
        break;
      }
      v18 += v34;
      --v15;
      uint64_t v7 = 0;
      uint64_t v16 = v21;
      uint64_t v14 = v27;
      if (!v15)
      {
        v33(v27, 1, 1, v42);
        goto LABEL_9;
      }
    }
  }
  else
  {
    BOOL v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
    v30(v14, 1, 1, v42);
LABEL_9:
    BOOL v24 = 0;
  }
  swift_bridgeObjectRelease();
  return v24;
}

void *sub_10008D208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void **)(a2 + 24);
  [v6 lock];
  uint64_t v9 = (void *)sub_10008D444(a1, 0, 0, a2, a3, (uint64_t)&unk_1006917A8, (uint64_t)sub_10013F850, (uint64_t)&unk_1006917C0);
  if (v8 < 0)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    id v12 = [v6 unlock];
    if (qword_100704E30 != -1) {
      id v12 = (id)swift_once();
    }
    __chkstk_darwin(v12);
    type metadata accessor for DOCItemCollectionCellContent();
    OS_dispatch_queue.sync<A>(execute:)();
    sub_10008D3E0(v9, v10, v11);
    uint64_t v9 = (void *)v19[0];
  }
  swift_getObjectType();
  DOCNode.identifierKey.getter();
  swift_beginAccess();
  uint64_t v13 = (void *)sub_10008DA78((uint64_t)v19);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_10008E17C((uint64_t)v19);
  swift_endAccess();
  sub_10008D42C(v13, v15, v17);
  [v6 unlock];
  return v9;
}

void sub_10008D3E0(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v4 = a3 & 0x7FFFFFFFFFFFFFFFLL;
    swift_release();
    a1 = (void *)v4;
  }
  else if (((v3 ^ (2 * v3)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
}

void sub_10008D42C(void *a1, uint64_t a2, uint64_t a3)
{
  if ((~((unint64_t)a1 & a3) & 0xF000000000000007) != 0) {
    sub_10008D3E0(a1, a2, a3);
  }
}

uint64_t sub_10008D444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v13);
  swift_getObjectType();
  DOCNode.identifierKey.getter();
  uint64_t v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a4 + 32);
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_10008E070((uint64_t)aBlock);
    if (v17)
    {
      uint64_t v18 = *(void *)(v15 + 56) + 24 * v16;
      uint64_t v20 = *(void **)v18;
      uint64_t v19 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(v18 + 16);
      sub_10008F4B4(*(void **)v18, v19, v21);
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)aBlock);
      if ((v21 & 0x8000000000000000) == 0)
      {
        sub_100095970((char *)v20);
        sub_10008D3E0(v20, v19, v21);
      }
      return (uint64_t)v20;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = a8;
  sub_10008E17C((uint64_t)aBlock);
  uint64_t v22 = (char *)[objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionCellContent()) init];
  int v23 = &v22[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
  swift_beginAccess();
  *(void *)int v23 = a1;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  sub_10008FA2C();
  swift_unknownObjectRelease();
  sub_100095970(v22);
  if (!a2)
  {
    uint64_t v27 = 0;
    unint64_t v28 = 0;
    uint64_t v20 = v22;
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)(a4 + 16);
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = a2;
  v25[3] = a3;
  v25[4] = v22;
  v25[5] = a4;
  v25[6] = a1;
  v25[7] = v24;
  aBlock[4] = a7;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = v31;
  _Block_copy(aBlock);
  id v36 = _swiftEmptyArrayStorage;
  sub_1000C0640(a2);
  swift_unknownObjectRetain();
  sub_1000C0640(a2);
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  id v32 = v22;
  swift_retain();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v20 = (void *)DispatchWorkItem.init(flags:block:)();
  swift_release();
  if (qword_100704E30 != -1) {
    swift_once();
  }
  OS_dispatch_queue.async(execute:)();
  uint64_t result = sub_1000A7258(a2);
  uint64_t v27 = *(void *)(a4 + 16);
  if (v27 != -1)
  {
    unint64_t v28 = (unint64_t)v32 | 0x8000000000000000;
    *(void *)(a4 + 16) = v27 + 1;
LABEL_12:
    char v29 = v22;
    DOCNode.identifierKey.getter();
    swift_beginAccess();
    sub_10008F4B4(v20, v27, v28);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = *v14;
    *uint64_t v14 = 0x8000000000000000;
    sub_10008D8EC((uint64_t)v20, v27, v28, (uint64_t)aBlock, isUniquelyReferenced_nonNull_native);
    *uint64_t v14 = v35;
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)aBlock);
    swift_endAccess();

    return (uint64_t)v20;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCItemCollectionCellContent()
{
  uint64_t result = qword_10071CDB0;
  if (!qword_10071CDB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008D8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10008E070(a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100358254();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      sub_10008D3E0(*(void **)v21, *(void *)(v21 + 8), *(void *)(v21 + 16));
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      *(void *)(v21 + 16) = a3;
      return;
    }
    goto LABEL_11;
  }
  sub_10000617C(v17, a5 & 1);
  unint64_t v22 = sub_10008E070(a4);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_16:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10008E1D0(a4, (uint64_t)v31);
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v24 = v20[6] + 40 * v14;
  uint64_t v25 = v32;
  long long v26 = v31[1];
  *(_OWORD *)uint64_t v24 = v31[0];
  *(_OWORD *)(v24 + 16) = v26;
  *(void *)(v24 + 32) = v25;
  uint64_t v27 = (void *)(v20[7] + 24 * v14);
  *uint64_t v27 = a1;
  v27[1] = a2;
  v27[2] = a3;
  uint64_t v28 = v20[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  void v20[2] = v30;
}

unint64_t sub_10008DA78(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10008E070(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0xF000000000000007;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100358254();
    uint64_t v7 = v10;
  }
  sub_10008E17C(*(void *)(v7 + 48) + 40 * v4);
  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 24 * v4);
  sub_10008F2D4(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10008DB64@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DOCItemCollectionFPController();
  sub_1000CBC00(a2, a5 + *(int *)(v13 + 28), (uint64_t *)&unk_10070A1B8);
  uint64_t v14 = *(int *)(v13 + 32);
  uint64_t v15 = a5;
  *(unsigned char *)(a5 + v14) = a3;
  unint64_t v16 = sub_10008EBC4(a1);
  uint64_t v48 = a2;
  sub_1000CBC00(a2, (uint64_t)v12, (uint64_t *)&unk_10070A1B8);
  type metadata accessor for DOCItemCollectionViewNodeGrouper();
  uint64_t inited = swift_initStackObject();
  sub_10008E6D8(v16, (uint64_t)v12);
  uint64_t v50 = a4;
  if (a3)
  {
    swift_beginAccess();
    uint64_t v18 = *(void *)(inited + 24);
    if (*(void *)(v18 + 16))
    {
      uint64_t v19 = inited;
      uint64_t v20 = *(void *)(v18 + 64);
      swift_beginAccess();
      if (*(void *)(v20 + 16) >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v21 = v50;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v45 < 0)
        {
          __break(1u);
LABEL_41:
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v21 = v50;
        swift_unknownObjectRetain();
      }
      sub_100514C78(0, 0, v21);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t inited = v19;
    }
  }
  swift_beginAccess();
  uint64_t v22 = *(void *)(inited + 24);
  *(void *)uint64_t v15 = v22;
  v52[0] = _swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v24 = 64;
    do
    {
      swift_beginAccess();
      unint64_t v25 = swift_bridgeObjectRetain();
      sub_10008E684(v25);
      v24 += 40;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease_n();
    long long v26 = (void *)v52[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    long long v26 = _swiftEmptyArrayStorage;
  }
  *(void *)(v15 + 8) = v26;
  if (a1 >> 62) {
    goto LABEL_38;
  }
  uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_13:
  uint64_t v46 = inited;
  uint64_t v47 = v15;
  if (v27)
  {
    unint64_t v49 = a1 & 0xC000000000000001;
    uint64_t v28 = &_swiftEmptyDictionarySingleton;
    uint64_t v15 = 4;
    while (1)
    {
      uint64_t v30 = v15 - 4;
      if (v49)
      {
        uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v32 = v15 - 3;
        if (__OFADD__(v30, 1)) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v31 = *(void *)(a1 + 8 * v15);
        swift_unknownObjectRetain();
        uint64_t v32 = v15 - 3;
        if (__OFADD__(v30, 1))
        {
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_13;
        }
      }
      unint64_t v33 = a1;
      swift_getObjectType();
      DOCNode.identifierKey.getter();
      uint64_t inited = swift_isUniquelyReferenced_nonNull_native();
      UIImage_optional v51 = v28;
      a1 = sub_10008E070((uint64_t)v52);
      uint64_t v35 = v28[2];
      BOOL v36 = (v34 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_36;
      }
      char v38 = v34;
      if (v28[3] >= v37)
      {
        if (inited)
        {
          uint64_t v28 = v51;
          if (v34) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_100357158();
          uint64_t v28 = v51;
          if (v38) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_1000A631C(v37, inited);
        unint64_t v39 = sub_10008E070((uint64_t)v52);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_41;
        }
        a1 = v39;
        uint64_t v28 = v51;
        if (v38)
        {
LABEL_15:
          uint64_t v29 = v28[7];
          uint64_t inited = 8 * a1;
          swift_unknownObjectRelease();
          *(void *)(v29 + 8 * a1) = v31;
          goto LABEL_16;
        }
      }
      v28[(a1 >> 6) + 8] |= 1 << a1;
      sub_10008E1D0((uint64_t)v52, v28[6] + 40 * a1);
      *(void *)(v28[7] + 8 * a1) = v31;
      uint64_t v41 = v28[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_37;
      }
      v28[2] = v43;
LABEL_16:
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)v52);
      ++v15;
      a1 = v33;
      if (v32 == v27) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v28 = &_swiftEmptyDictionarySingleton;
LABEL_34:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000CBBA4(v48, (uint64_t *)&unk_10070A1B8);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v47 + 16) = v28;
  return result;
}

unint64_t sub_10008E070(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10008E0B4(a1, v4);
}

unint64_t sub_10008E0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10008E1D0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10008E17C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10008E17C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008E1D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10008E22C(unint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_10008E450(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10008E450(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_100073DF0(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_1000CBE70(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_1000CBE70(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008E684(unint64_t a1)
{
  return sub_10008E22C(a1, (uint64_t *)&unk_100706730, &qword_100708720, (uint64_t *)&unk_100707B20, (uint64_t *)sub_10010A57C);
}

uint64_t type metadata accessor for DOCItemCollectionViewNodeGrouper()
{
  return self;
}

void *sub_10008E6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[3] = _swiftEmptyArrayStorage;
  v2[4] = _swiftEmptyArrayStorage;
  v2[2] = a1;
  unint64_t v12 = swift_bridgeObjectRetain();
  char v13 = sub_10008EAAC(v12);
  swift_bridgeObjectRelease();
  sub_1000CBC00(a2, (uint64_t)v7, (uint64_t *)&unk_10070A1B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_10070A1B8);
LABEL_5:
    sub_10008E9A0();
    sub_1000CBBA4(a2, (uint64_t *)&unk_10070A1B8);
    return v2;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_10031E61C((uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v15 = v2[3];
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000CBBA4(a2, (uint64_t *)&unk_10070A1B8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v16 == 1) {
      *(_WORD *)(v17 + 24) = 257;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000CBBA4(a2, (uint64_t *)&unk_10070A1B8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v2;
}

uint64_t sub_10008E9A0()
{
  sub_1000CBE70(&qword_100708DB0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A0030;
  type metadata accessor for DOCCollectionNodes();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  *(_WORD *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  swift_beginAccess();
  unint64_t v3 = swift_bridgeObjectRetain();
  sub_10008E684(v3);
  swift_endAccess();
  *(unsigned char *)(v2 + 24) = 1;
  *(void *)(v1 + 32) = 0xD00000000000002ALL;
  *(void *)(v1 + 40) = 0x80000001005E9560;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0xE000000000000000;
  *(void *)(v1 + 64) = v2;
  swift_beginAccess();
  *(void *)(v0 + 24) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10008EAAC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    return 1;
  }
LABEL_3:
  if (v3 != 1) {
    return 0;
  }
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_6:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_getObjectType();
    Swift::Bool Document = DOCNode.isCreateDocumentSentinel()();
    swift_unknownObjectRelease();
    return Document;
  }
  __break(1u);
  return result;
}

unint64_t sub_10008EBC4(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v22 = a1;
  uint64_t v2 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_66;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v3)
  {
    while ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_getObjectType();
        Swift::Bool Document = DOCNode.isCreateDocumentSentinel()();
        swift_unknownObjectRelease();
        if (Document) {
          goto LABEL_18;
        }
        uint64_t v6 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          break;
        }
        ++v4;
        if (v6 == v3) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      swift_bridgeObjectRetain_n();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        goto LABEL_13;
      }
    }
    uint64_t v4 = 0;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      Swift::Bool v7 = DOCNode.isCreateDocumentSentinel()();
      swift_unknownObjectRelease();
      if (v7) {
        break;
      }
      uint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_58;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_13;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!v2)
    {
      if (v11 == *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_15;
      }
LABEL_21:
      uint64_t v2 = v4 + 5;
      while (1)
      {
        unint64_t v12 = v2 - 4;
        if ((v1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_55;
          }
          if (v12 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_56;
          }
          swift_unknownObjectRetain();
        }
        swift_getObjectType();
        Swift::Bool v13 = DOCNode.isCreateDocumentSentinel()();
        swift_unknownObjectRelease();
        if (!v13)
        {
          if (v12 != v4)
          {
            if ((v1 & 0xC000000000000001) != 0)
            {
              uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v4 < 0) {
                goto LABEL_60;
              }
              unint64_t v14 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v4 >= v14) {
                goto LABEL_61;
              }
              uint64_t v15 = *(void *)(v1 + 8 * v4 + 32);
              swift_unknownObjectRetain();
              if ((v12 & 0x8000000000000000) != 0) {
                goto LABEL_62;
              }
              if (v12 >= v14) {
                goto LABEL_63;
              }
              uint64_t v16 = *(void *)(v1 + 8 * v2);
              swift_unknownObjectRetain();
            }
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (v1 & 0x8000000000000000) != 0
              || (v1 & 0x4000000000000000) != 0)
            {
              unint64_t v1 = sub_1000BC324(v1);
              unint64_t v22 = v1;
            }
            *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v16;
            swift_unknownObjectRelease();
            specialized Array._endMutation()();
            uint64_t v17 = v22;
            if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
              || (v22 & 0x8000000000000000) != 0
              || (v22 & 0x4000000000000000) != 0)
            {
              uint64_t v17 = sub_1000BC324(v22);
              unint64_t v22 = v17;
            }
            if ((v12 & 0x8000000000000000) != 0) {
              goto LABEL_64;
            }
            if (v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_65;
            }
            *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v2) = v15;
            swift_unknownObjectRelease();
            specialized Array._endMutation()();
          }
          BOOL v18 = __OFADD__(v4++, 1);
          if (v18) {
            goto LABEL_59;
          }
        }
        BOOL v18 = __OFADD__(v12, 1);
        uint64_t v19 = v2 - 3;
        if (v18) {
          goto LABEL_57;
        }
        unint64_t v1 = v22;
        if (v22 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v20 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v2;
        if (v19 == v20) {
          goto LABEL_15;
        }
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11 == v21) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (v2) {
    goto LABEL_70;
  }
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  while (!(v1 >> 62))
  {
    uint64_t v9 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v4) {
      goto LABEL_17;
    }
LABEL_69:
    __break(1u);
LABEL_70:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9 < v4) {
    goto LABEL_69;
  }
LABEL_17:
  sub_10008EFCC(v4, v9);
  return v22;
}

uint64_t sub_10008EFCC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_1000CBE70((uint64_t *)&unk_100706730);
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        unint64_t v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t type metadata accessor for DOCCollectionNodes()
{
  return self;
}

unint64_t sub_10008F2D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10008E1D0(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        Swift::Int v10 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
        uint64_t result = sub_10008E17C((uint64_t)v28);
        Swift::Int v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            uint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = v19 + 24 * v3;
            uint64_t v21 = (long long *)(v19 + 24 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= (unint64_t)v21 + 24))
            {
              long long v9 = *v21;
              *(void *)(v20 + 16) = *((void *)v21 + 2);
              *(_OWORD *)unint64_t v20 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_10008F4B4(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t v5 = a3 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    a1 = (void *)v5;
  }
  else if (((v3 ^ (2 * v3)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return a1;
}

id DOCItemCollectionCellContent.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = 0;
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits];
  sub_10008FA08((uint64_t)v31);
  sub_1000CBE0C((uint64_t)v31, v1, (uint64_t *)&unk_100705550);
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits];
  sub_10008F9F0(v32);
  sub_1000CBE0C((uint64_t)v32, v2, (uint64_t *)&unk_10070AD40);
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumRowHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_useSystemHighlightStyle] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_roundedCorners] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor];
  uint64_t v4 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isParentItemShared] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode] = 2;
  uint64_t v5 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable] = 2;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable] = 2;
  unint64_t v6 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics];
  *(_OWORD *)unint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  v6[40] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress] = 0;
  v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress] = 0;
  uint64_t v7 = &v0[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock];
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock;
  id v9 = objc_allocWithZone((Class)NSLock);
  Swift::Int v10 = v0;
  *(void *)&v0[v8] = [v9 init];
  Swift::Int v11 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
  *Swift::Int v11 = 0;
  v11[1] = 0;
  uint64_t v12 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle];
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title];
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleColor;
  unint64_t v15 = self;
  *(void *)&v10[v14] = [v15 labelColor];
  uint64_t v16 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor;
  *(void *)&v10[v16] = [v15 secondaryLabelColor];
  uint64_t v17 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__suffixColor;
  *(void *)&v10[v17] = [v15 labelColor];
  uint64_t v18 = (uint64_t)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags];
  sub_1000951C8((uint64_t)v33);
  sub_1000CBE0C((uint64_t)v33, v18, &qword_100705560);
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags] = 0;
  uint64_t v19 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date];
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sizeLock;
  *(void *)&v10[v20] = [objc_allocWithZone((Class)NSLock) init];
  uint64_t v21 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size];
  void *v21 = 0;
  v21[1] = 0;
  unint64_t v22 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind];
  void *v22 = 0;
  v22[1] = 0;
  uint64_t v23 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress];
  *(void *)uint64_t v23 = 0;
  v23[8] = 1;
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumProgressFractionForStatusTextUpdate] = 0x3FA999999999999ALL;
  uint64_t v24 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString];
  *uint64_t v24 = 0;
  v24[1] = 0;
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags] = 0;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder] = 2;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync] = 2;
  uint64_t v25 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName];
  *uint64_t v25 = 0;
  v25[1] = 0;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge] = 2;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge] = 2;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews] = 0;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView] = 2;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView] = 2;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim] = 2;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail] = 2;
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail] = 0;
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool] = 0;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance] = 10;
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle] = 0;
  BOOL v26 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle];
  *BOOL v26 = 0;
  v26[1] = 0;
  uint64_t v27 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle];
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle];
  *uint64_t v28 = 0;
  v28[1] = 0;
  v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory] = 2;
  *(void *)&v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  v30.receiver = v10;
  v30.super_class = (Class)type metadata accessor for DOCItemCollectionCellContent();
  return [super init];
}

double sub_10008F9F0(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_10008FA08(uint64_t a1)
{
  *(void *)(a1 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void sub_10008FA2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!*v2) {
    return;
  }
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
  *uint64_t v4 = 0;
  v4[1] = 0;
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
  *uint64_t v5 = 0;
  v5[1] = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags) = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 2;
  unint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
  *unint64_t v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind);
  *uint64_t v7 = 0;
  v7[1] = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance) = 10;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  *(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
  sub_100098488(v8);
  swift_unknownObjectRelease();
  id v9 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
  *id v9 = 0;
  v9[1] = 0;
  swift_bridgeObjectRelease();
  sub_1000951C8((uint64_t)v44);
  uint64_t v10 = v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
  sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v45, &qword_100705560);
  sub_1000CBE0C((uint64_t)v44, v10, &qword_100705560);
  sub_10009A828(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
  Swift::Int v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
  *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

  uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
  *uint64_t v13 = 0;
  v13[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
  *uint64_t v14 = 0;
  v14[1] = 0;
  swift_bridgeObjectRelease();
  unint64_t v15 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
  void *v15 = 0;
  v15[1] = 0;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory) = 2;
  uint64_t v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle + 8);
  if (v17)
  {
    uint64_t v18 = *v16;
    swift_bridgeObjectRetain();
    id v19 = [v3 filename];
    if (!v19)
    {
      __break(1u);
      return;
    }
    uint64_t v20 = v19;
    id v21 = [v19 stringByDeletingPathExtension];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    if (v18 == v22 && v17 == v24)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_10;
      }
      BOOL v26 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
      uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
      uint64_t v28 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8);
      *BOOL v26 = 0;
      v26[1] = 0;
      sub_10056F320(v27, v28);
      swift_bridgeObjectRelease();
      *uint64_t v16 = 0;
      v16[1] = 0;
    }
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v29 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
  if (*v2)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v31 = v29;
    swift_unknownObjectRetain();
    sub_100093E64(ObjectType, (uint64_t)v46);
    swift_unknownObjectRelease();
    sub_1000CBE0C((uint64_t)v46, (uint64_t)v47, (uint64_t *)&unk_10071CDF0);
    if (v47[0] != 1)
    {
      id v32 = v48;
      id v33 = v48;
      sub_1002B9150((uint64_t)v46);
      if (v32)
      {

        uint64_t v29 = v32;
        goto LABEL_34;
      }
    }
  }
  else
  {
    id v34 = v29;
  }
  if ([v3 isExternalDownloadPlaceholder])
  {
    id v35 = [v3 downloadingProgress];
    if (v35) {
      goto LABEL_27;
    }
  }
  if ([v3 isCloudItem] && objc_msgSend(v3, "isDownloading"))
  {
    id v36 = [v3 downloadingError];
    if (v36)
    {
    }
    else
    {
      id v35 = [v3 downloadingProgress];
      if (v35) {
        goto LABEL_27;
      }
    }
  }
  if ([v3 isCloudItem] && objc_msgSend(v3, "isUploading"))
  {
    id v37 = [v3 uploadingError];
    if (v37)
    {

      goto LABEL_25;
    }
    id v35 = [v3 uploadingProgress];
    if (!v35) {
      goto LABEL_25;
    }
LABEL_27:
    id v33 = v35;

    uint64_t v29 = v33;
    goto LABEL_34;
  }
LABEL_25:
  if ([v3 isCopying])
  {
    id v35 = [v3 copyingProgress];
    if (v35) {
      goto LABEL_27;
    }
  }
  if (([v3 isActionable] & 1) == 0)
  {
    id v39 = [self progressWithTotalUnitCount:-1];

    uint64_t v29 = v39;
    goto LABEL_32;
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress))
  {
LABEL_32:
    if (!v29)
    {
LABEL_35:
      uint64_t v38 = 0;
      goto LABEL_37;
    }
    id v33 = v29;
LABEL_34:
    if (([v33 isFinished] & 1) == 0)
    {
      id v40 = v29;
      uint64_t v38 = (uint64_t)v29;
      goto LABEL_37;
    }
    goto LABEL_35;
  }

  uint64_t v38 = 0;
  uint64_t v29 = 0;
LABEL_37:
  sub_100090068(v38);
  uint64_t v41 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  uint64_t v42 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x3185;
  if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x3185) != 0) {
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v42;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_1000CBC64())
  {
    *(void *)(v1 + v41) = 0;
    sub_100090F98(v42, v1);
  }
  swift_unknownObjectRelease();
}

void sub_100090068(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
  if (v4 && *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) == 1)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) = 0;
    id v5 = v4;
    unint64_t v6 = (void *)static DOCLog.UI.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
    *(void *)(v7 + 56) = sub_10009E6C4(0, &qword_10070EB70);
    *(void *)(v7 + 64) = sub_1001141E0();
    *(void *)(v7 + 32) = v5;
    id v8 = v5;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    NSString v9 = String._bridgeToObjectiveC()();
    [v8 removeObserver:v1 forKeyPath:v9 context:&unk_10071CC00];

    NSString v10 = String._bridgeToObjectiveC()();
    [v8 removeObserver:v1 forKeyPath:v10 context:&unk_10071CC00];

    uint64_t v4 = *(void **)(v1 + v3);
  }
  *(void *)(v1 + v3) = a1;
}

void sub_100090210(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
  if (a1)
  {
    if (v4)
    {
      id v5 = a1;
      sub_10009E6C4(0, &qword_10070EB70);
      id v6 = v4;
      id v7 = v5;
      LOBYTE(v5) = static NSObject.== infix(_:_:)();

      if (v5) {
        return;
      }
    }
  }
  else if (!v4)
  {
    return;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance) = 10;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory) = 2;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = 2;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 2;
  uint64_t v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
  if ((v9 & 4) == 0) {
    *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v9 | 4;
  }
  NSString v10 = *(void **)(v2 + v3);
  if (v10 && ([v10 isFinished] & 1) == 0)
  {
    Swift::Int v11 = *(void **)(v2 + v3);
    id v12 = v11;
  }
  else
  {
    Swift::Int v11 = 0;
  }
  sub_100090068((uint64_t)v11);
  if (!*(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_1000CBC64())
  {
    uint64_t v13 = *(void *)(v2 + v8);
    *(void *)(v2 + v8) = 0;
    sub_100090F98(v13, v2);
  }
}

void sub_1000903A8()
{
  uint64_t v1 = v0;
  sub_10009F620();
  uint64_t v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (!*v2) {
    return;
  }
  uint64_t v3 = *v2;
  sub_1000A1028();
  sub_1000913EC();
  sub_1000A0308();
  uint64_t v4 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  int v5 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder];
  if (v5 == 2)
  {
    id v6 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
    swift_beginAccess();
    if (*v6)
    {
      unsigned __int8 v7 = [*v6 isFolder];
      v3[v4] = v7;
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
LABEL_7:
      char v8 = 0;
      uint64_t v9 = 1;
      goto LABEL_10;
    }
    v3[v4] = 0;
  }
  else if (v5)
  {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = 0;
  char v8 = 1;
LABEL_10:
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFileActivated) = v8;
  [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile) setActive:];
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFolderActivated) = v9;
  [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder) setActive:v9];
  if (*v2)
  {
    NSString v10 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    id v11 = *v2;
    sub_100099DF8((uint64_t)v30);
    v25[10] = *(_OWORD *)&v30[160];
    v25[11] = *(_OWORD *)&v30[176];
    uint64_t v26 = *(void *)&v30[192];
    v25[6] = *(_OWORD *)&v30[96];
    v25[7] = *(_OWORD *)&v30[112];
    v25[8] = *(_OWORD *)&v30[128];
    v25[9] = *(_OWORD *)&v30[144];
    void v25[2] = *(_OWORD *)&v30[32];
    v25[3] = *(_OWORD *)&v30[48];
    v25[4] = *(_OWORD *)&v30[64];
    v25[5] = *(_OWORD *)&v30[80];
    v25[0] = *(_OWORD *)v30;
    v25[1] = *(_OWORD *)&v30[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v25);
    id v12 = *(void **)&v10[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v13 = (uint64_t)v12
        + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v12+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v27, &qword_100705560);
    sub_1000CBE0C((uint64_t)v25, v13, &qword_100705560);
    sub_10009ABF0((uint64_t)v30);
    sub_10009ABF0((uint64_t)v30);
    sub_1000A0B6C((uint64_t)v27);
    [v12 setNeedsDisplay];
    sub_10009A978((uint64_t)v30);
    sub_1000CBE0C(v13, (uint64_t)v28, &qword_100705560);
    sub_1000CBE0C((uint64_t)v28, (uint64_t)v29, &qword_100705560);
    if (sub_1000CBEB4(v29) != 1) {
      [v10 setFont:v29[0]];
    }
    long long v37 = *(_OWORD *)&v30[136];
    long long v38 = *(_OWORD *)&v30[152];
    long long v39 = *(_OWORD *)&v30[168];
    long long v40 = *(_OWORD *)&v30[184];
    long long v33 = *(_OWORD *)&v30[72];
    long long v34 = *(_OWORD *)&v30[88];
    long long v35 = *(_OWORD *)&v30[104];
    long long v36 = *(_OWORD *)&v30[120];
    v31[0] = *(_OWORD *)&v30[8];
    v31[1] = *(_OWORD *)&v30[24];
    _OWORD v31[2] = *(_OWORD *)&v30[40];
    long long v32 = *(_OWORD *)&v30[56];
    sub_10009AB2C((uint64_t)v31);
    [v10 bounds];
    [v10 contentScaleFactor];
    long long v14 = v32;
    UIPointRoundToScale();
    double v16 = v15;
    double v18 = v17;
    sub_10005519C(v31);
    [v12 setFrame:v16, v18, v14];
    [v10 invalidateIntrinsicContentSize];
    sub_10009A978((uint64_t)v30);
    sub_1000A0C38();
  }
  uint64_t v19 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode;
  int v20 = v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
  if (v20 == 2)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  if (v20)
  {
    id v21 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    [v21 setAddDecoration:1];
    [v21 setThumbnail:0];
    int v20 = v3[v19];
  }
  if (v20 == 2) {
    goto LABEL_23;
  }
  uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView);
  int v23 = v20 & 1;
  int v24 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode);
  *(unsigned char *)(v22 + OBJC_IVAR____TtC5Files25DOCImageViewContainerView_isInCreateMode) = v23;
  if ((((v23 == 0) ^ v24) & 1) == 0) {
    sub_100087AC8(0);
  }
  sub_1000907DC();
}

void sub_1000907DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v2)
  {
    uint64_t v3 = (char *)*v2;
    if ((sub_100090D3C() & 1) == 0)
    {
      uint64_t v28 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView;
      uint64_t v29 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView);
      if (v29)
      {
        id v30 = v29;
        [v30 removeFromSuperview];
        id v31 = *(void **)(v1 + v28);
        *(void *)(v1 + v28) = 0;
      }
      long long v32 = *(void **)(v1
                     + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder);
      *(void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder) = 0;

      char v25 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile);
      *(void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile) = 0;
      goto LABEL_27;
    }
    if (*v2)
    {
      uint64_t v4 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView;
      if (!*(void *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView))
      {
        int v5 = (char *)*v2;
        if (sub_100090D3C())
        {
          id v6 = *(void **)&v5[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
          if (v6)
          {
            unsigned __int8 v7 = [v6 isFinished];

            if (v7) {
              goto LABEL_10;
            }
            id v8 = [objc_allocWithZone((Class)DOCDownloadProgressView) init];
            uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
            [v9 addSubview:v8];
            [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v10 = [v9 bottomAnchor];
            id v11 = [v8 centerYAnchor];
            id v12 = [v10 constraintEqualToAnchor:v11];

            id v13 = [v8 centerYAnchor];
            id v14 = [v9 centerYAnchor];
            id v15 = [v13 constraintEqualToAnchor:v14];

            long long v40 = v12;
            [v12 setActive:*(unsigned __int8 *)(v1+ OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFolderActivated)];
            [v15 setActive:*(unsigned __int8 *)(v1+ OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isGridCircularProgressVerticalConstraintFileActivated)];
            [v12 setConstant:*(double *)(v1+ OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant)];
            id v39 = self;
            sub_1000CBE70((uint64_t *)&unk_1007084E0);
            uint64_t v16 = swift_allocObject();
            *(_OWORD *)(v16 + 16) = xmmword_1005A04F0;
            id v17 = [v8 centerXAnchor];
            id v18 = [v9 centerXAnchor];
            id v19 = [v17 constraintEqualToAnchor:v18];

            *(void *)(v16 + 32) = v19;
            v42[0] = v16;
            specialized Array._endMutation()();
            sub_10009E6C4(0, (unint64_t *)&unk_100706720);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v39 activateConstraints:isa];

            id v21 = *(void **)(v1
                           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder);
            *(void *)(v1
                      + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder) = v40;
            id v22 = v40;

            int v23 = *(void **)(v1
                           + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile);
            *(void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFile) = v15;
            id v24 = v15;

            int v5 = *(char **)(v1 + v4);
            *(void *)(v1 + v4) = v8;
          }
        }
      }
    }
LABEL_10:
    char v25 = *(void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
    if (v25
      && ([v25 isFinished] & 1) == 0
      && (uint64_t v26 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node], swift_beginAccess(), *v26)
      && (([*v26 isDownloading] & 1) != 0
       || *v26 && ([*v26 isExternalDownloadPlaceholder] & 1) != 0))
    {
      uint64_t v27 = 1;
    }
    else
    {
      long long v33 = (id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
      swift_beginAccess();
      if (*v33) {
        uint64_t v27 = (uint64_t)[*v33 isCopying];
      }
      else {
        uint64_t v27 = 0;
      }
    }
    uint64_t v34 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView;
    [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_circularProgressView) setObservedProgress:v25];
    [*(id *)(v1 + v34) setCanShowStopButton:v27];
    long long v35 = &v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
    swift_beginAccess();
    if (*(void *)v35)
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100093E64(ObjectType, (uint64_t)v41);
      swift_unknownObjectRelease();
      sub_1002B9150((uint64_t)v41);
      sub_1000CBE0C((uint64_t)v41, (uint64_t)v42, (uint64_t *)&unk_10071CDF0);
      if (v42[0] != 1)
      {
        long long v37 = *(void **)(v1 + v34);
        if (v37)
        {
          id v38 = v37;
          [v38 setCanShowStopButton:1];
        }
      }
    }
LABEL_27:
  }
}

uint64_t sub_100090D3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews))
  {
    char v3 = 0;
LABEL_3:
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = v3;
    goto LABEL_8;
  }
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (*v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100093E64(ObjectType, (uint64_t)v16);
    swift_unknownObjectRelease();
    sub_1000CBE0C((uint64_t)v16, (uint64_t)v17, (uint64_t *)&unk_10071CDF0);
    if (*(void *)&v17[0] != 1)
    {
      long long v21 = v17[2];
      long long v22 = v17[3];
      long long v23 = v17[4];
      uint64_t v24 = v18;
      long long v19 = v17[0];
      long long v20 = v17[1];
      sub_1000CBE0C((uint64_t)&v24, (uint64_t)&v25, (uint64_t *)&unk_10071CE10);
      sub_1000CED00(&v25);
      sub_1002B9150((uint64_t)v16);
      sub_1000CBE0C((uint64_t)&v25, (uint64_t)&v26, (uint64_t *)&unk_10071CE10);
      if (v26)
      {
        unsigned __int8 v6 = [v26 isFinished];
        sub_1000CF6B4(&v25);
        if ((v6 & 1) == 0)
        {
          char v3 = 1;
          goto LABEL_3;
        }
      }
    }
  }
LABEL_8:
  uint64_t v7 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView;
  int v8 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView);
  if (v8 != 2) {
    return v8 & 1;
  }
  uint64_t v9 = (void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  id v10 = *v9;
  if (!v10) {
    goto LABEL_20;
  }
  id v11 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
  if (!v11 || (*(unsigned char *)(v1 + v2) & 1) != 0) {
    goto LABEL_20;
  }
  swift_unknownObjectRetain();
  id v12 = v11;
  if ([v12 isIndeterminate])
  {

LABEL_17:
    swift_getObjectType();
    if (([v10 isExternalDownloadPlaceholder] & 1) == 0
      && (DOCNode.doc_isAppContainerRoot.getter() & 1) == 0)
    {
      unsigned int v15 = [v10 isTrashed];
      swift_unknownObjectRelease();
      uint64_t result = v15 ^ 1;
      *(unsigned char *)(v1 + v7) = v15 ^ 1;
      return result;
    }
    goto LABEL_19;
  }
  unsigned __int8 v14 = [v12 isFinished];

  if ((v14 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_19:
  swift_unknownObjectRelease();
LABEL_20:
  uint64_t result = 0;
  *(unsigned char *)(v1 + v7) = 0;
  return result;
}

uint64_t sub_100090F98(uint64_t result, uint64_t a2)
{
  __int16 v3 = result;
  if (result)
  {
    uint64_t v4 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v7 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t v9 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t v12 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v12, v11);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 8) != 0)
  {
    uint64_t v13 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v14 = *(void *)(v13 + 8);
      uint64_t v15 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v15, v14);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x10) != 0)
  {
    uint64_t v16 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t v18 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v17 + 40))(v18, v17);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v19 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v20 = *(void *)(v19 + 8);
      uint64_t v21 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v20 + 48))(v21, v20);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v22 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v24 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v23 + 56))(v24, v23);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v25 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t v27 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v26 + 64))(v27, v26);
      swift_unknownObjectRelease();
    }
    uint64_t v28 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock;
    [*(id *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock) lock];
    uint64_t v29 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
    id v30 = *(void (**)(uint64_t))(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
    if (v30)
    {
      uint64_t v31 = swift_retain();
      v30(v31);
      sub_1000A7258((uint64_t)v30);
      uint64_t v32 = *v29;
      *uint64_t v29 = 0;
      v29[1] = 0;
      sub_1000A7258(v32);
    }
    uint64_t result = (uint64_t)[*(id *)(a2 + v28) unlock];
  }
  if ((v3 & 0x200) != 0)
  {
    uint64_t v33 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v34 = *(void *)(v33 + 8);
      uint64_t v35 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v34 + 72))(v35, v34);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x400) != 0)
  {
    uint64_t v36 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v37 = *(void *)(v36 + 8);
      uint64_t v38 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v37 + 80))(v38, v37);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x800) != 0)
  {
    uint64_t v39 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v40 = *(void *)(v39 + 8);
      uint64_t v41 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v40 + 88))(v41, v40);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x1000) != 0)
  {
    uint64_t v42 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v43 = *(void *)(v42 + 8);
      uint64_t v44 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v43 + 96))(v44, v43);
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  if ((v3 & 0x2000) != 0)
  {
    uint64_t v45 = a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v46 = *(void *)(v45 + 8);
      uint64_t v47 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v46 + 104))(v47, v46);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_1000913EC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  id result = (id)swift_beginAccess();
  __int16 v3 = *v1;
  if (!*v1) {
    return result;
  }
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  uint64_t v177 = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  uint64_t v171 = v10;
  sub_1000CBE0C((uint64_t)v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v179, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v179, (uint64_t)v180, (uint64_t *)&unk_100705550);
  id result = (id)sub_1000CBEB4(v180);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_223;
  }
  unint64_t v11 = v180[4];
  uint64_t v12 = v3;
  uint64_t v174 = v6;
  uint64_t v175 = v4;
  uint64_t v170 = v5;
  uint64_t v172 = v7;
  uint64_t v173 = v8;
  uint64_t v176 = (uint64_t)v12;
  if (v11 > 1)
  {
    if (sub_100092938(v4, (uint64_t)v12))
    {
      if (sub_1000927E8(v177, (uint64_t)v12, sub_1000929F0)) {
        BOOL v14 = 0;
      }
      else {
        BOOL v14 = v13 == 0xE000000000000000;
      }
      if (v14)
      {
        unint64_t v169 = 0xE000000000000000;
        swift_bridgeObjectRelease();
        uint64_t v16 = 0;
        goto LABEL_133;
      }
      unint64_t v169 = 0xE000000000000000;
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v15)
      {
        uint64_t v16 = 0;
        goto LABEL_133;
      }
      uint64_t v51 = v5;
      uint64_t v52 = sub_1000927E8(v177, (uint64_t)v12, sub_1000929F0);
      uint64_t v54 = v53;
      if (v52 == sub_1000943F0(v171) && v54 == v55)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v73 & 1) == 0)
        {
          uint64_t v16 = sub_1000927E8(v177, (uint64_t)v12, sub_1000929F0);
          unint64_t v169 = v101;
          goto LABEL_132;
        }
      }
      uint64_t v16 = 0;
      unint64_t v169 = 0xE000000000000000;
LABEL_132:
      uint64_t v5 = v51;
LABEL_133:
      uint64_t v102 = sub_1000927E8(v5, (uint64_t)v12, (uint64_t (*)(void))sub_100092EFC);
      uint64_t v104 = v103;
      uint64_t v105 = sub_100093F38(v8);
      uint64_t v107 = v106;
      uint64_t v108 = sub_100093D0C(v7, (uint64_t)v12);
      uint64_t v110 = v109;
      if (v102) {
        BOOL v111 = 0;
      }
      else {
        BOOL v111 = v104 == 0xE000000000000000;
      }
      int v112 = v111;
      if (v111 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (!v105 && v107 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_146:
          swift_bridgeObjectRelease();
          uint64_t countAndFlagsBits = sub_100093D0C(v7, (uint64_t)v12);
          unint64_t object = v114;
          Swift::OpaquePointer v115 = (void *)v169;
LABEL_163:
          uint64_t v122 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync;
          int v123 = v12[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync];
          if (v123 == 2)
          {
            uint64_t v124 = (id *)&v12[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
            swift_beginAccess();
            if (!*v124)
            {
              v12[v122] = 0;
              goto LABEL_171;
            }
            unsigned __int8 v125 = [*v124 isExcludedFromSync];
            v12[v122] = v125;
            if ((v125 & 1) == 0)
            {
LABEL_171:
              if (!sub_1000927E8(v177, (uint64_t)v12, sub_1000929F0) && v133 == 0xE000000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_179:
                if (v16 || v115 != (void *)0xE000000000000000)
                {
                  if (_stringCompareWithSmolCheck(_:_:expecting:)())
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v131 = 0;
                    unint64_t v132 = 0xE000000000000000;
                  }
                  else
                  {
                    uint64_t v131 = countAndFlagsBits;
                    unint64_t v132 = (unint64_t)object;
                    uint64_t countAndFlagsBits = v16;
                    unint64_t object = v115;
                  }
                  goto LABEL_197;
                }
                goto LABEL_191;
              }
              char v134 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v134) {
                goto LABEL_179;
              }
              uint64_t v135 = sub_1000927E8(v177, (uint64_t)v12, sub_1000929F0);
              uint64_t v137 = v136;
              if (v135 == sub_1000943F0(v171) && v137 == v138)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_179;
              }
              char v139 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v139) {
                goto LABEL_179;
              }
              swift_bridgeObjectRelease();
              uint64_t v140 = sub_1000927E8(v177, (uint64_t)v12, sub_1000929F0);
LABEL_196:
              uint64_t v131 = countAndFlagsBits;
              unint64_t v132 = (unint64_t)object;
              uint64_t countAndFlagsBits = v140;
              unint64_t object = v141;
              goto LABEL_197;
            }
          }
          else if ((v123 & 1) == 0)
          {
            goto LABEL_171;
          }
          swift_bridgeObjectRelease();
          id result = (id)_DocumentManagerBundle();
          if (result)
          {
            uint64_t v126 = result;
            v181._unint64_t object = (void *)0x8000000100600750;
            v127._uint64_t countAndFlagsBits = 0x626967696C656E49;
            v127._unint64_t object = (void *)0xEA0000000000656CLL;
            v128._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v128._unint64_t object = (void *)0xEB00000000656C62;
            v129._uint64_t countAndFlagsBits = 0;
            v129._unint64_t object = (void *)0xE000000000000000;
            v181._uint64_t countAndFlagsBits = 0xD000000000000061;
            Swift::String v130 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v127, v128, (NSBundle)v126, v129, v181);

            uint64_t v131 = countAndFlagsBits;
            unint64_t v132 = (unint64_t)object;
            uint64_t countAndFlagsBits = v130._countAndFlagsBits;
            unint64_t object = v130._object;
LABEL_197:
            unint64_t v82 = *(void **)(v178 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
            id v147 = [v82 text];
            if (!v147) {
              goto LABEL_203;
            }
            uint64_t v148 = v147;
            uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            char v151 = v150;

            if (countAndFlagsBits == v149 && object == v151)
            {
              swift_bridgeObjectRelease_n();
              int v88 = 0;
              goto LABEL_204;
            }
            char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v152)
            {
              swift_bridgeObjectRelease();
              int v88 = 0;
            }
            else
            {
LABEL_203:
              NSString v153 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              [v82 setText:v153];

              int v88 = 1;
            }
LABEL_204:
            uint64_t v91 = *(void **)(v178 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
            id v154 = [v91 text];
            if (v154)
            {
              uint64_t v155 = v154;
              uint64_t v156 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v158 = v157;

              if (v131 == v156 && v132 == v158)
              {
                swift_bridgeObjectRelease_n();
LABEL_211:
                uint64_t v93 = (void *)v176;
                goto LABEL_212;
              }
              char v159 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v159)
              {
                swift_bridgeObjectRelease();
                goto LABEL_211;
              }
            }
            NSString v160 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v91 setText:v160];

            int v88 = 1;
            goto LABEL_211;
          }
LABEL_223:
          __break(1u);
          return result;
        }
        char v113 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v113)
        {
          swift_bridgeObjectRelease();
          goto LABEL_146;
        }
        if (v112) {
          goto LABEL_150;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v116 = v173;
        Swift::OpaquePointer v115 = (void *)v169;
        goto LABEL_154;
      }
LABEL_150:
      uint64_t v116 = v173;
      if (!v108 && v110 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_157:
        swift_bridgeObjectRelease();
        Swift::OpaquePointer v115 = (void *)v169;
        uint64_t v119 = sub_100093F38(v173);
LABEL_162:
        uint64_t countAndFlagsBits = v119;
        unint64_t object = v120;
        goto LABEL_163;
      }
      char v118 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v118) {
        goto LABEL_157;
      }
      Swift::OpaquePointer v115 = (void *)v169;
      if (v112)
      {
        swift_bridgeObjectRelease();
        goto LABEL_161;
      }
LABEL_154:
      char v117 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v117 & 1) == 0)
      {
        uint64_t v119 = sub_1000927E8(v170, (uint64_t)v12, (uint64_t (*)(void))sub_100092EFC);
        goto LABEL_162;
      }
LABEL_161:
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_100093F38(v116);
      Swift::OpaquePointer v115 = v121;
      uint64_t v119 = sub_100093D0C(v7, (uint64_t)v12);
      goto LABEL_162;
    }
    uint64_t v32 = (uint64_t)v12;
    uint64_t v33 = sub_1000927E8(v5, (uint64_t)v12, (uint64_t (*)(void))sub_100092EFC);
    uint64_t v35 = v34;
    uint64_t v36 = sub_100093F38(v8);
    uint64_t v38 = v37;
    uint64_t v39 = sub_100093D0C(v7, v32);
    uint64_t v41 = v40;
    uint64_t v42 = sub_1000927E8(v177, v32, sub_1000929F0);
    uint64_t v44 = v43;
    if (v33) {
      BOOL v45 = 0;
    }
    else {
      BOOL v45 = v35 == 0xE000000000000000;
    }
    int v46 = v45;
    if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if (!v36 && v38 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v39 && v41 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        if (sub_1000943F0(v171) == v42 && v47 == v44)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_62:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t countAndFlagsBits = 0;
          uint64_t v58 = 0;
          unint64_t object = (void *)0xE000000000000000;
          unint64_t v60 = 0xE000000000000000;
          uint64_t v61 = v176;
          goto LABEL_129;
        }
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v56) {
          goto LABEL_62;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (v46) {
        goto LABEL_65;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
LABEL_74:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_90:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v70 = v173;
          goto LABEL_92;
        }
LABEL_123:
        if (!v39 && v41 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_127:
          swift_bridgeObjectRelease();
          uint64_t v61 = v176;
          uint64_t v64 = sub_100093F38(v173);
          goto LABEL_128;
        }
        char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v100) {
          goto LABEL_127;
        }
        uint64_t v70 = v173;
        if (v46)
        {
          swift_bridgeObjectRelease();
          goto LABEL_187;
        }
LABEL_92:
        char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v71 & 1) == 0)
        {
          uint64_t v62 = (uint64_t (*)(void))sub_100092EFC;
          uint64_t v63 = v170;
          goto LABEL_72;
        }
LABEL_187:
        uint64_t v142 = v70;
        uint64_t v61 = v176;
        uint64_t v58 = sub_100093F38(v142);
        unint64_t v60 = v143;
        uint64_t countAndFlagsBits = sub_100093D0C(v7, v176);
        unint64_t object = v144;
        if (v58) {
          goto LABEL_188;
        }
        goto LABEL_129;
      }
LABEL_75:
      if (!v36 && v38 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_96:
        swift_bridgeObjectRelease();
        uint64_t v61 = v176;
        uint64_t v64 = sub_100093D0C(v7, v176);
        goto LABEL_128;
      }
      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v72)
      {
        swift_bridgeObjectRelease();
        goto LABEL_96;
      }
      if (v46) {
        goto LABEL_123;
      }
      goto LABEL_90;
    }
LABEL_65:
    if (!v36 && v38 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      && (!v39 && v41 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = sub_1000929F0;
      uint64_t v63 = v177;
LABEL_72:
      uint64_t v61 = v176;
      uint64_t v64 = sub_1000927E8(v63, v176, v62);
LABEL_128:
      uint64_t countAndFlagsBits = v64;
      unint64_t object = v65;
      uint64_t v58 = 0;
      unint64_t v60 = 0xE000000000000000;
LABEL_129:
      if (v60 == 0xE000000000000000)
      {
LABEL_189:
        swift_bridgeObjectRelease();
        if (!sub_100092880(v174, v175, v61) && v145 == 0xE000000000000000)
        {
LABEL_191:
          unint64_t v132 = 0xE000000000000000;
          swift_bridgeObjectRelease();
LABEL_193:
          uint64_t v131 = 0;
          goto LABEL_197;
        }
        unint64_t v132 = 0xE000000000000000;
        char v146 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v146) {
          goto LABEL_193;
        }
        uint64_t v140 = sub_100092880(v174, v175, v176);
        goto LABEL_196;
      }
LABEL_188:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v131 = countAndFlagsBits;
        unint64_t v132 = (unint64_t)object;
        uint64_t countAndFlagsBits = v58;
        unint64_t object = (void *)v60;
        goto LABEL_197;
      }
      goto LABEL_189;
    }
    if (v46) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  uint64_t v17 = sub_1000927E8(v5, (uint64_t)v12, (uint64_t (*)(void))sub_100092EFC);
  uint64_t v19 = v18;
  uint64_t v20 = sub_100093F38(v8);
  uint64_t v22 = v21;
  uint64_t v23 = sub_100092880(v6, v4, (uint64_t)v12);
  uint64_t v25 = v24;
  uint64_t v26 = sub_100093D0C(v7, (uint64_t)v12);
  uint64_t v28 = v27;
  if (v17) {
    BOOL v29 = 0;
  }
  else {
    BOOL v29 = v19 == 0xE000000000000000;
  }
  int v30 = v29;
  if (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_51:
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
LABEL_79:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = v173;
        uint64_t v67 = v176;
        goto LABEL_84;
      }
LABEL_80:
      if (!v26 && v28 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_88:
        swift_bridgeObjectRelease();
        uint64_t v49 = sub_100093F38(v173);
        goto LABEL_107;
      }
      char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v69)
      {
        swift_bridgeObjectRelease();
        goto LABEL_88;
      }
      uint64_t v66 = v173;
      uint64_t v67 = v176;
      if (v30)
      {
        swift_bridgeObjectRelease();
        goto LABEL_101;
      }
LABEL_84:
      char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v68 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_106;
      }
LABEL_101:
      if (sub_100093F38(v66) == v20 && v74 == v22)
      {
        swift_bridgeObjectRelease_n();
LABEL_105:
        uint64_t v76 = sub_100093F38(v66);
        uint64_t v78 = v77;
        uint64_t v79 = sub_100093D0C(v172, v67);
        unint64_t v81 = v80;
        goto LABEL_108;
      }
      char v75 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v75) {
        goto LABEL_105;
      }
LABEL_106:
      uint64_t v49 = sub_1000927E8(v170, v67, (uint64_t (*)(void))sub_100092EFC);
      goto LABEL_107;
    }
LABEL_52:
    if (!v20 && v22 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_100092880(v174, v175, v176);
      goto LABEL_107;
    }
    if (v30) {
      goto LABEL_80;
    }
    goto LABEL_79;
  }
  if (v20) {
    BOOL v31 = 0;
  }
  else {
    BOOL v31 = v22 == 0xE000000000000000;
  }
  if (!v31 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  if (v23 || v25 != 0xE000000000000000)
  {
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v48)
    {
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
LABEL_50:
    if (v30) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_100093D0C(v172, v176);
LABEL_107:
  uint64_t v76 = v49;
  uint64_t v78 = v50;
  uint64_t v79 = 0;
  unint64_t v81 = 0xE000000000000000;
LABEL_108:
  unint64_t v82 = *(void **)(v178 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
  id v83 = [v82 text];
  if (!v83) {
    goto LABEL_114;
  }
  uint64_t v84 = v83;
  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v87 = v86;

  if (v76 != v85 || v78 != v87)
  {
    char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v89)
    {
      swift_bridgeObjectRelease();
      int v88 = 0;
      goto LABEL_115;
    }
LABEL_114:
    NSString v90 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v82 setText:v90];

    int v88 = 1;
    goto LABEL_115;
  }
  swift_bridgeObjectRelease_n();
  int v88 = 0;
LABEL_115:
  uint64_t v91 = *(void **)(v178 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
  id v92 = [v91 text];
  uint64_t v93 = (void *)v176;
  if (!v92) {
    goto LABEL_121;
  }
  uint64_t v94 = v92;
  uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v97 = v96;

  if (v79 == v95 && v81 == v97)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_212;
  }
  char v98 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v98)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_121:
    NSString v99 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v91 setText:v99];

    int v88 = 1;
  }
LABEL_212:
  id v161 = [v91 text];
  if (!v161) {
    goto LABEL_216;
  }
  id v162 = v161;
  uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v165 = v164;

  swift_bridgeObjectRelease();
  uint64_t v166 = HIBYTE(v165) & 0xF;
  if ((v165 & 0x2000000000000000) == 0) {
    uint64_t v166 = v163 & 0xFFFFFFFFFFFFLL;
  }
  if (!v166)
  {
    uint64_t v167 = 1;
    uint64_t v168 = 2;
  }
  else
  {
LABEL_216:
    uint64_t v167 = 2;
    uint64_t v168 = 1;
  }
  [v82 setNumberOfLines:v168];
  [v91 setNumberOfLines:v167];
  if (v88) {
    sub_1000A0C38();
  }
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (id)swift_release();
}

uint64_t sub_1000927E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  else
  {
    uint64_t v4 = a3();
    uint64_t v6 = v5;
    swift_beginAccess();
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_100092880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  else
  {
    if (sub_100092938(a2, a3))
    {
      uint64_t v4 = 0;
      unint64_t v5 = 0xE000000000000000;
    }
    else
    {
      sub_100092D1C();
      uint64_t v4 = v6;
      unint64_t v5 = v7;
      swift_bridgeObjectRetain();
    }
    swift_beginAccess();
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_100092938(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)(a1 + 16);
  LODWORD(v3) = *(unsigned __int8 *)(a1 + 16);
  if (v3 == 2)
  {
    uint64_t v5 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
    LODWORD(v3) = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
    if (v3 == 2)
    {
      __int16 v3 = (id *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      if (*v3) {
        LOBYTE(v3) = [*v3 isFolder];
      }
      else {
        LOBYTE(v3) = 0;
      }
      *(unsigned char *)(a2 + v5) = (_BYTE)v3;
    }
    swift_beginAccess();
    *uint64_t v2 = (_BYTE)v3;
  }
  return v3 & 1;
}

uint64_t sub_1000929F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sizeLock);
  [v2 lock];
  __int16 v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
  uint64_t countAndFlagsBits = *(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
  uint64_t v5 = v3[1];
  swift_bridgeObjectRetain();
  [v2 unlock];
  if (!v5)
  {
    uint64_t v6 = (id *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess();
    if (*v6)
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100093E64(ObjectType, (uint64_t)v18);
      swift_unknownObjectRelease();
      sub_1000CBE0C((uint64_t)v18, (uint64_t)v19, (uint64_t *)&unk_10071CDF0);
      if (v19[0] != 1)
      {
        *(_OWORD *)&v19[15] = *(_OWORD *)&v19[4];
        long long v20 = *(_OWORD *)&v19[6];
        long long v21 = *(_OWORD *)&v19[8];
        *(_OWORD *)&v19[11] = *(_OWORD *)v19;
        *(_OWORD *)&v19[13] = *(_OWORD *)&v19[2];
        sub_1000CBE0C((uint64_t)&v20, (uint64_t)v23, (uint64_t *)&unk_10070BD50);
        sub_1000CBE0C((uint64_t)v23, (uint64_t)v24, (uint64_t *)&unk_10070BD50);
        if (v25)
        {
          sub_1000CBE0C((uint64_t)&v21, (uint64_t)v22, (uint64_t *)&unk_10070BD50);
          sub_1000CBE0C((uint64_t)v22, (uint64_t)v26, (uint64_t *)&unk_10070BD50);
          uint64_t v8 = v27;
          sub_1002B9150((uint64_t)v18);
          if (v8) {
            goto LABEL_20;
          }
        }
        else
        {
          sub_1002B9150((uint64_t)v18);
        }
      }
    }
    uint64_t v9 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
    int v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
    if (v10 == 2)
    {
      if (!*v6)
      {
        *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 0;
        if (!*v6) {
          goto LABEL_20;
        }
        goto LABEL_18;
      }
      unsigned __int8 v11 = [*v6 isFolder];
      *(unsigned char *)(v1 + v9) = v11;
      if ((v11 & 1) == 0)
      {
LABEL_11:
        if (!*v6) {
          goto LABEL_20;
        }
LABEL_18:
        swift_getObjectType();
        if (([(id)swift_unknownObjectRetain() isExternalDownloadPlaceholder] & 1) == 0)
        {
          Swift::String v14 = DOCNode.localizedSizeDescription()();
          uint64_t countAndFlagsBits = v14._countAndFlagsBits;
          unint64_t object = v14._object;
          swift_unknownObjectRelease();
          goto LABEL_23;
        }
        swift_unknownObjectRelease();
LABEL_20:
        uint64_t countAndFlagsBits = 0;
        unint64_t object = (void *)0xE000000000000000;
LABEL_23:
        [v2 lock];
        *__int16 v3 = countAndFlagsBits;
        v3[1] = (uint64_t)object;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        [v2 unlock];
        return countAndFlagsBits;
      }
    }
    else if ((v10 & 1) == 0)
    {
      goto LABEL_11;
    }
    if (*v6)
    {
      swift_getObjectType();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t countAndFlagsBits = DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)();
      unint64_t object = v12;
      swift_release_n();
      if (object)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        id v15 = (id)DOCLocalizedMetadataStringForUnavailablePropertyValue();
        uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t object = v16;
        swift_unknownObjectRelease();
      }
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  return countAndFlagsBits;
}

void sub_100092D1C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date + 8))
  {
    uint64_t v2 = v0;
    __int16 v3 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess();
    if (*v3)
    {
      uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
      if (v4)
      {
        swift_unknownObjectRetain();
        id v5 = v4;
        if (sub_1000951EC(1))
        {
          id v6 = [v5 preferredContentSizeCategory];
          char v7 = UIContentSizeCategory.isAccessibilityCategory.getter();

          if ((v7 & 1) == 0) {
            [v5 horizontalSizeClass];
          }
          if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate) == 2) {
            goto LABEL_20;
          }
          swift_getObjectType();
          uint64_t v10 = DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)();
          if (v11) {
            uint64_t v12 = v10;
          }
          else {
            uint64_t v12 = 0;
          }
          unint64_t v13 = 0xE000000000000000;
          if (v11) {
            unint64_t v13 = v11;
          }
          *uint64_t v1 = v12;
          v1[1] = v13;
          swift_unknownObjectRelease();

LABEL_9:
          swift_bridgeObjectRelease();
          if (v1[1]) {
            return;
          }
          __break(1u);
LABEL_20:
          __break(1u);
          return;
        }
        id v8 = [self standardUserDefaults];
        NSString v9 = String._bridgeToObjectiveC()();
        [v8 BOOLForKey:v9];
        swift_unknownObjectRelease();
      }
    }
    *(_OWORD *)uint64_t v1 = xmmword_1005B0980;
    goto LABEL_9;
  }
}

objc_class *sub_100092EFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  __int16 v3 = *v2;
  if (!v3) {
    return 0;
  }
  if ([(id)swift_unknownObjectRetain() isExcludedFromSync]
    && ![v3 isExternalDownloadPlaceholder])
  {
    goto LABEL_72;
  }
  id v4 = [v3 downloadingError];
  if (v4)
  {

    id v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    if (v5 && [v5 horizontalSizeClass] == (id)1)
    {
      id result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        char v7 = result;
        uint64_t v8 = 0x6F727245209386E2;
        unint64_t v9 = 0xD00000000000003ALL;
        unint64_t v98 = 0x80000001006024D0;
LABEL_17:
        unint64_t v11 = 0xA900000000000072;
        goto LABEL_20;
      }
      goto LABEL_108;
    }
    id result = (objc_class *)(id)_DocumentManagerBundle();
    if (result)
    {
      char v7 = result;
      unint64_t v9 = 0xD000000000000030;
      unint64_t v98 = 0x8000000100602490;
      uint64_t v8 = 0x64616F6C6E776F44;
      unint64_t v11 = 0xEE00726F72724520;
LABEL_20:
      uint64_t v14 = 0x617A696C61636F4CLL;
      unint64_t v15 = 0xEB00000000656C62;
      v16.super.Class isa = v7;
      uint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
LABEL_21:
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, *(Swift::String *)&v14, v16, *(Swift::String *)&v17, *(Swift::String *)&v9)._countAndFlagsBits;

LABEL_22:
      unsigned __int8 v19 = [v3 isDownloading];
      goto LABEL_23;
    }
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }
  id v12 = [v3 uploadingError];
  if (v12)
  {

    unint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
    if (v13 && [v13 horizontalSizeClass] == (id)1)
    {
      id result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        char v7 = result;
        unint64_t v9 = 0xD000000000000038;
        unint64_t v98 = 0x8000000100602450;
        uint64_t v8 = 0x6F727245209186E2;
        goto LABEL_17;
      }
      goto LABEL_110;
    }
    id result = (objc_class *)(id)_DocumentManagerBundle();
    if (result)
    {
      char v7 = result;
      unint64_t v9 = 0xD00000000000002ELL;
      unint64_t v98 = 0x8000000100602420;
      uint64_t v8 = 0x452064616F6C7055;
      unint64_t v11 = 0xEC000000726F7272;
      goto LABEL_20;
    }
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  if (([v3 isUploaded] & 1) == 0
    && ([v3 isActionable] & 1) == 0
    && ([v3 isExternalDownloadPlaceholder] & 1) == 0)
  {
    id v21 = [v3 providerID];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
      int v26 = 1;
    }
    else {
      int v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v27) {
      int v28 = 1;
    }
    else {
      int v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v29)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (((v26 | v28) & 1) == 0 && (v30 & 1) == 0)
      {
        id result = (objc_class *)(id)_DocumentManagerBundle();
        if (result)
        {
          char v7 = result;
          unint64_t v98 = 0x8000000100602220;
          uint64_t v8 = 0x6F6C705520746F4ELL;
          unint64_t v11 = 0xEC00000064656461;
          uint64_t v14 = 0x617A696C61636F4CLL;
          unint64_t v15 = 0xEB00000000656C62;
          v16.super.Class isa = v7;
          uint64_t v17 = 0;
          unint64_t v18 = 0xE000000000000000;
          unint64_t v9 = 0xD000000000000029;
          goto LABEL_21;
        }
        goto LABEL_114;
      }
    }
  }
  id v31 = [v3 downloadingProgress];
  if (v31)
  {
    uint64_t v32 = v31;
    unsigned int v33 = [v31 doc_isPending];

    if ([v3 isDownloading] && v33)
    {
      id result = (objc_class *)(id)_DocumentManagerBundle();
      if (!result)
      {
LABEL_111:
        __break(1u);
        goto LABEL_112;
      }
      uint64_t v34 = result;
      v100._uint64_t countAndFlagsBits = 0x1000000000000046;
      v35._uint64_t countAndFlagsBits = 0x74696157209386E2;
      v100._unint64_t object = (void *)0x80000001006023D0;
      v35._unint64_t object = (void *)0xAE00A680E2676E69;
      v36._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v36._unint64_t object = (void *)0xEB00000000656C62;
      v37._uint64_t countAndFlagsBits = 0;
      v37._unint64_t object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v100)._countAndFlagsBits;

      unsigned __int8 v19 = [v3 isDownloading];
LABEL_23:
      if (v19) {
        goto LABEL_73;
      }
      goto LABEL_24;
    }
  }
  else
  {
    [v3 isDownloading];
  }
  id v38 = [v3 uploadingProgress];
  if (v38)
  {
    uint64_t v39 = v38;
    unsigned int v40 = [v38 doc_isPending];

    if ([v3 isUploading] && v40)
    {
      id result = (objc_class *)(id)_DocumentManagerBundle();
      if (!result)
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      uint64_t v41 = result;
      v101._uint64_t countAndFlagsBits = 0x1000000000000044;
      v101._unint64_t object = (void *)0x8000000100602380;
      v42._uint64_t countAndFlagsBits = 0x74696157209186E2;
      v42._unint64_t object = (void *)0xAE00A680E2676E69;
      v43._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v43._unint64_t object = (void *)0xEB00000000656C62;
      v44._uint64_t countAndFlagsBits = 0;
      v44._unint64_t object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v101)._countAndFlagsBits;

      if ([v3 isDownloading]) {
        goto LABEL_73;
      }
LABEL_24:
      if (([v3 isUploading] & 1) == 0)
      {
LABEL_25:
        uint64_t v20 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress;
        *(void *)uint64_t v20 = 0;
        *(unsigned char *)(v20 + 8) = 1;
      }
LABEL_73:
      swift_unknownObjectRelease();
      return (objc_class *)countAndFlagsBits;
    }
  }
  else
  {
    [v3 isUploading];
  }
  if ([v3 isExternalDownloadPlaceholder])
  {
    id v45 = [v3 downloadingProgress];
    if (v45)
    {
      int v46 = v45;
      if (([v45 isFinished] & 1) == 0)
      {
        sub_10009E6C4(0, &qword_10070A280);
        [v46 fractionCompleted];
        v55.super.super.Class isa = NSNumber.init(floatLiteral:)(v54).super.super.isa;
        if (qword_100705350 != -1) {
          swift_once();
        }
        char v56 = (objc_class *)[(id)qword_1007377D8 stringFromNumber:v55.super.super.isa];
        if (v56)
        {
          id v57 = v56;
          uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          id result = (objc_class *)(id)_DocumentManagerBundle();
          if (!result)
          {
LABEL_115:
            __break(1u);
            goto LABEL_116;
          }
          id v57 = result;
          v102._uint64_t countAndFlagsBits = 0x100000000000003ALL;
          v102._unint64_t object = (void *)0x80000001006022B0;
          v60._uint64_t countAndFlagsBits = 4271950;
          v60._unint64_t object = (void *)0xE300000000000000;
          v61._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v61._unint64_t object = (void *)0xEB00000000656C62;
          v62._uint64_t countAndFlagsBits = 0;
          v62._unint64_t object = (void *)0xE000000000000000;
          Swift::String v63 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v57, v62, v102);
          unint64_t object = v63._object;
          uint64_t v58 = v63._countAndFlagsBits;
        }
        uint64_t v64 = v58;
        uint64_t v65 = object;

        uint64_t v66 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
        if (v66 && [v66 horizontalSizeClass] == (id)1)
        {
          id result = (objc_class *)(id)_DocumentManagerBundle();
          if (!result)
          {
LABEL_116:
            __break(1u);
            goto LABEL_117;
          }
          uint64_t v67 = result;
          uint64_t v68 = 0x100000000000002ELL;
          unint64_t v99 = 0x8000000100602350;
          uint64_t v69 = 0x4025209386E2;
          unint64_t v70 = 0xA600000000000000;
        }
        else
        {
          id result = (objc_class *)(id)_DocumentManagerBundle();
          if (!result)
          {
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
            goto LABEL_115;
          }
          uint64_t v67 = result;
          uint64_t v68 = 0x1000000000000038;
          unint64_t v99 = 0x8000000100602310;
          unint64_t v70 = 0x80000001006022F0;
          uint64_t v69 = 0x1000000000000011;
        }
        v71._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v71._unint64_t object = (void *)0xEB00000000656C62;
        v72._uint64_t countAndFlagsBits = 0;
        v72._unint64_t object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v69, v71, (NSBundle)v67, v72, *(Swift::String *)&v68);

        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1005A0030;
        *(void *)(v73 + 56) = &type metadata for String;
        *(void *)(v73 + 64) = sub_100073F48();
        *(void *)(v73 + 32) = v64;
        *(void *)(v73 + 40) = v65;
        uint64_t countAndFlagsBits = String.init(format:_:)();

        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  id v47 = [v3 fileSize];
  if (!v47 || (char v48 = v47, v49 = (uint64_t)[v47 longLongValue], v48, v49 < 1))
  {
LABEL_71:
    if (([v3 isDownloading] & 1) == 0)
    {
      uint64_t countAndFlagsBits = 0;
      if ([v3 isUploading]) {
        goto LABEL_73;
      }
      goto LABEL_25;
    }
LABEL_72:
    uint64_t countAndFlagsBits = 0;
    goto LABEL_73;
  }
  if ([v3 isDownloading])
  {
    id v50 = [v3 downloadingProgress];
    if (v50)
    {
      uint64_t v51 = v50;
      if ([v50 isFinished])
      {

        goto LABEL_67;
      }
      id result = (objc_class *)[v51 fractionCompleted];
      double v75 = (1.0 - v74) * (double)v49;
      if ((~*(void *)&v75 & 0x7FF0000000000000) != 0)
      {
        if (v75 > -9.22337204e18)
        {
          if (v75 < 9.22337204e18)
          {
            uint64_t v76 = sub_100570524((uint64_t)v75, v49);
            id v77 = [self stringFromByteCount:v76 countStyle:0];
            uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v80 = v79;

            id result = (objc_class *)(id)_DocumentManagerBundle();
            if (!result)
            {
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            unint64_t v81 = result;
            v103._uint64_t countAndFlagsBits = 0x100000000000002DLL;
            v103._unint64_t object = (void *)0x8000000100602280;
            v82._uint64_t countAndFlagsBits = 0x4025209386E2;
            v82._unint64_t object = (void *)0xA600000000000000;
            v83._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v83._unint64_t object = (void *)0xEB00000000656C62;
            v84._uint64_t countAndFlagsBits = 0;
            v84._unint64_t object = (void *)0xE000000000000000;
            DOCLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v103);

            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v85 = swift_allocObject();
            *(_OWORD *)(v85 + 16) = xmmword_1005A0030;
            *(void *)(v85 + 56) = &type metadata for String;
            *(void *)(v85 + 64) = sub_100073F48();
            *(void *)(v85 + 32) = v78;
            *(void *)(v85 + 40) = v80;
            uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unsigned __int8 v19 = [v3 isDownloading];
            goto LABEL_23;
          }
          goto LABEL_103;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
  }
LABEL_67:
  if (![v3 isUploading]) {
    goto LABEL_71;
  }
  id v52 = [v3 uploadingProgress];
  if (!v52) {
    goto LABEL_71;
  }
  uint64_t v53 = v52;
  if ([v52 isFinished])
  {

    goto LABEL_71;
  }
  id result = (objc_class *)[v53 fractionCompleted];
  double v87 = (1.0 - v86) * (double)v49;
  if ((~*(void *)&v87 & 0x7FF0000000000000) == 0) {
    goto LABEL_104;
  }
  if (v87 <= -9.22337204e18)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  if (v87 >= 9.22337204e18)
  {
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  uint64_t v88 = sub_100570524((uint64_t)v87, v49);
  id v89 = [self stringFromByteCount:v88 countStyle:0];
  uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v92 = v91;

  id result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v93 = result;
    v94._uint64_t countAndFlagsBits = 0x4025209186E2;
    v104._uint64_t countAndFlagsBits = 0x100000000000002BLL;
    v104._unint64_t object = (void *)0x8000000100602250;
    v94._unint64_t object = (void *)0xA600000000000000;
    v95._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v95._unint64_t object = (void *)0xEB00000000656C62;
    v96._uint64_t countAndFlagsBits = 0;
    v96._unint64_t object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v93, v96, v104);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = xmmword_1005A0030;
    *(void *)(v97 + 56) = &type metadata for String;
    *(void *)(v97 + 64) = sub_100073F48();
    *(void *)(v97 + 32) = v90;
    *(void *)(v97 + 40) = v92;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ([v3 isDownloading]) {
      goto LABEL_73;
    }
    goto LABEL_24;
  }
LABEL_118:
  __break(1u);
  return result;
}

uint64_t sub_100093D0C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v3 = *(void *)(a1 + 16);
  }
  else
  {
    if (*(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8))
    {
      uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName);
      unint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      id v5 = (void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      if (!*v5) {
        goto LABEL_9;
      }
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100093E64(ObjectType, (uint64_t)v8);
      swift_unknownObjectRelease();
      sub_1000CBE0C((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_10071CDF0);
      if (v9[0] == 1) {
        goto LABEL_9;
      }
      uint64_t v3 = v9[8];
      unint64_t v4 = v9[9];
      swift_bridgeObjectRetain();
      sub_1002B9150((uint64_t)v8);
      if (v4)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
LABEL_9:
        swift_bridgeObjectRelease();
        uint64_t v3 = 0;
        unint64_t v4 = 0xE000000000000000;
      }
    }
    swift_beginAccess();
    *(void *)(a1 + 16) = v3;
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_100093E64@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = qword_100706380;
  if (qword_100706380)
  {
    uint64_t v5 = result;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1000FB874(v2, v4, v5, (uint64_t *)v17);
    long long v15 = v17[1];
    long long v16 = v17[0];
    long long v13 = v17[3];
    long long v14 = v17[2];
    long long v12 = v17[4];
    uint64_t v6 = v18;
    swift_release();
    id result = swift_unknownObjectRelease();
    long long v8 = v12;
    long long v7 = v13;
    long long v10 = v14;
    long long v9 = v15;
    long long v11 = v16;
  }
  else
  {
    uint64_t v6 = 0;
    long long v11 = xmmword_1005A0020;
    long long v9 = 0uLL;
    long long v10 = 0uLL;
    long long v7 = 0uLL;
    long long v8 = 0uLL;
  }
  *(_OWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v9;
  *(_OWORD *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 48) = v7;
  *(_OWORD *)(a2 + 64) = v8;
  *(void *)(a2 + 80) = v6;
  return result;
}

uint64_t sub_100093F38(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  else
  {
    uint64_t v2 = sub_100093FD0();
    uint64_t v4 = v3;
    swift_beginAccess();
    *(void *)(a1 + 16) = v2;
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100093FD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FPItem.SharingStatusOptions();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FPItem.SharingStatusStringType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
  if (*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString + 8)) {
    return *v10;
  }
  uint64_t v20 = v3;
  long long v11 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (!*v11) {
    goto LABEL_14;
  }
  uint64_t v19 = v7;
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  sub_100093E64(ObjectType, (uint64_t)v22);
  swift_unknownObjectRelease();
  sub_1000CBE0C((uint64_t)v22, (uint64_t)v23, (uint64_t *)&unk_10071CDF0);
  if (v23[0] != 1)
  {
    *(_OWORD *)&v23[15] = *(_OWORD *)&v23[4];
    v24[0] = *(_OWORD *)&v23[6];
    v24[1] = *(_OWORD *)&v23[8];
    *(_OWORD *)&v23[11] = *(_OWORD *)v23;
    *(_OWORD *)&v23[13] = *(_OWORD *)&v23[2];
    sub_1000CBE0C((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_10070BD50);
    sub_10021FE8C((uint64_t)v25);
    sub_1002B9150((uint64_t)v22);
    sub_1000CBE0C((uint64_t)v25, (uint64_t)v26, (uint64_t *)&unk_10070BD50);
    if (v27)
    {
      sub_1000CBE0C((uint64_t)v25, (uint64_t)v10, (uint64_t *)&unk_10070BD50);
      goto LABEL_15;
    }
  }
  if (!*v11) {
    goto LABEL_14;
  }
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v9, enum case for FPItem.SharingStatusStringType.update(_:), v6);
  long long v13 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v13)
  {
    swift_unknownObjectRetain();
    if ([v13 horizontalSizeClass] == (id)1)
    {
      sub_1000CBE70((uint64_t *)&unk_10071CE00);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1005A0030;
      static FPItem.SharingStatusOptions.compact.getter();
      id v21 = (void *)v14;
      goto LABEL_12;
    }
  }
  else
  {
    swift_unknownObjectRetain();
  }
  id v21 = _swiftEmptyArrayStorage;
LABEL_12:
  sub_100094E5C((unint64_t *)&unk_10070ADE0, (void (*)(uint64_t))&type metadata accessor for FPItem.SharingStatusOptions);
  sub_1000CBE70((uint64_t *)&unk_10070C640);
  sub_10009449C(&qword_10070ADF0, (uint64_t *)&unk_10070C640);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  swift_getObjectType();
  uint64_t v15 = DOCNode.localizedSharingStatusDescription(type:options:)();
  uint64_t v17 = v16;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  if (v17)
  {
    *long long v10 = v15;
    v10[1] = v17;
    goto LABEL_15;
  }
LABEL_14:
  *(_OWORD *)long long v10 = xmmword_1005B0980;
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease();
  if (v10[1]) {
    return *v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000943F0(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v2 = *(void *)(a1 + 16);
  }
  else
  {
    id v3 = (id)DOCLocalizedMetadataStringForUnavailablePropertyValue();
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    swift_beginAccess();
    *(void *)(a1 + 16) = v2;
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10009449C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000944EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  if (*v10)
  {
    long long v11 = (char *)*v10;
    sub_100094988();
    uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    uint64_t v21 = v7;
    if (v12)
    {
      long long v13 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
      swift_unknownObjectRetain();
      [v13 updateImage:v12 addDecoration:(unint64_t)sub_1000948A0() & 1];
      swift_unknownObjectRelease();
    }
    else
    {
      int v14 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
      if (v14 == 2)
      {
        __break(1u);
        return;
      }
      [*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] setThumbnail:0];
      if (v14) {
        sub_100087AC8(0);
      }
    }
    if (sub_100094B80())
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v20 = static OS_dispatch_queue.main.getter();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v1;
      aBlock[4] = sub_10055C6A0;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006B74D0;
      uint64_t v16 = _Block_copy(aBlock);
      uint64_t v17 = v1;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1001102E4();
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v18 = (void *)v20;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v16);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
    }
    else
    {
    }
  }
}

id sub_1000948A0()
{
  sub_100094988();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
    int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
    if (v3 == 2)
    {
      uint64_t v4 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      uint64_t v5 = *v4;
      if (v5)
      {
        swift_unknownObjectRetain();
        unsigned __int8 v6 = [v5 isFolder];
        *(unsigned char *)(v0 + v2) = v6;
        if (v6) {
          goto LABEL_8;
        }
      }
      else
      {
        *(unsigned char *)(v0 + v2) = 0;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      swift_unknownObjectRetain();
      if (v3)
      {
LABEL_8:
        id v7 = 0;
LABEL_11:
        swift_unknownObjectRelease();
        return v7;
      }
    }
    id v7 = [v1 isRepresentativeIcon];
    goto LABEL_11;
  }
  return 0;
}

void sub_100094988()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail))
  {
    uint64_t v2 = v0;
    if (*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool))
    {
      int v3 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      uint64_t v4 = *v3;
      if (*v3)
      {
        uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
        if (v5)
        {
          sub_1000CBE0C(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v12, (uint64_t *)&unk_100705550);
          sub_1000CBE0C((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_100705550);
          if (sub_1000CBEB4((uint64_t *)v13) != 1)
          {
            v15[8] = v13[8];
            v15[9] = v13[9];
            v15[10] = v13[10];
            uint64_t v16 = v14;
            void v15[4] = v13[4];
            void v15[5] = v13[5];
            v15[6] = v13[6];
            v15[7] = v13[7];
            v15[0] = v13[0];
            v15[1] = v13[1];
            _OWORD v15[2] = v13[2];
            v15[3] = v13[3];
            uint64_t v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
            int v7 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
            swift_retain();
            swift_unknownObjectRetain();
            id v8 = v5;
            sub_1000958FC(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
            if (v7 == 2)
            {
              char v9 = [v4 isFolder];
              *(unsigned char *)(v2 + v6) = v9;
            }
            else
            {
              char v9 = v7 & 1;
            }
            uint64_t v10 = sub_1000A2B6C(v4, (uint64_t)v15, v8, v9);
            long long v11 = *(void **)(v2 + v1);
            *(void *)(v2 + v1) = v10;
            swift_unknownObjectRetain();
            sub_100098488(v11);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            sub_1000958FC(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
            swift_release();
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

uint64_t sub_100094B80()
{
  uint64_t v1 = type metadata accessor for UICellConfigurationState();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  id v8 = (char *)&v22 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  long long v11 = (char *)&v22 - v10;
  __chkstk_darwin(v9);
  long long v13 = (char *)&v22 - v12;
  uint64_t v14 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  if (*(void *)v14)
  {
    id v15 = [v0 _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v15) = UICellConfigurationState.isFocused.getter();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v16(v11, v13, v1);
    if (v15) {
      char v17 = 1;
    }
    else {
      char v17 = UICellConfigurationState.isHighlighted.getter();
    }
    uint64_t v19 = *(void (**)(char *, uint64_t))(v2 + 8);
    v19(v11, v1);
    v16(v8, v13, v1);
    if (v17)
    {
      v19(v8, v1);
      v16(v5, v13, v1);
      char v18 = 1;
    }
    else
    {
      char v20 = UICellConfigurationState.isSelected.getter();
      v19(v8, v1);
      v16(v5, v13, v1);
      if (v20) {
        char v18 = 1;
      }
      else {
        char v18 = UICellConfigurationState.isEditing.getter();
      }
    }
    v19(v5, v1);
    v19(v13, v1);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_100094E20()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x330))();
}

uint64_t sub_100094E5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100094EA8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x328))();
}

uint64_t sub_100094EE4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x300))();
}

void sub_100094F20(void *a1)
{
  if (a1)
  {
    uint64_t v2 = v1;
    id v26 = a1;
    if (sub_1000951EC(4))
    {
      [v26 displayScale];
      uint64_t v5 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection;
      uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
      BOOL v11 = !v6
         || (double v7 = v4, [v6 displayScale], v7 != v8)
         || (id v9 = [v26 userInterfaceStyle], (v10 = *(void **)(v2 + v5)) == 0)
         || v9 != [v10 userInterfaceStyle];
      uint64_t v12 = *(void **)(v2 + v5);
      *(void *)(v2 + v5) = a1;
      id v13 = v26;

      uint64_t v14 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
      *uint64_t v14 = 0;
      v14[1] = 0;
      swift_bridgeObjectRelease();
      id v15 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
      *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

      uint64_t v16 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
      *uint64_t v16 = 0;
      v16[1] = 0;
      swift_bridgeObjectRelease();
      if (v11)
      {
        char v17 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
        *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
        sub_100098488(v17);
        swift_unknownObjectRelease();
      }
      sub_1000951C8((uint64_t)v27);
      uint64_t v18 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
      sub_1000CBE0C(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v28, &qword_100705560);
      sub_1000CBE0C((uint64_t)v27, v18, &qword_100705560);
      sub_10009A828(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
      uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
      *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

      char v20 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
      *char v20 = 0;
      v20[1] = 0;
      swift_bridgeObjectRelease();
      uint64_t v21 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
      void *v21 = 0;
      v21[1] = 0;
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
      void *v22 = 0;
      v22[1] = 0;
      swift_bridgeObjectRelease();
      uint64_t v23 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x182;
      if ((~*(_DWORD *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x182) != 0) {
        *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v24;
      }
      if (!*(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_1000CBC64())
      {
        *(void *)(v2 + v23) = 0;
        sub_100090F98(v24, v2);
      }
    }
    else
    {
    }
  }
}

double sub_1000951C8(uint64_t a1)
{
  *(void *)(a1 + 192) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

BOOL sub_1000951EC(uint64_t a1)
{
  BOOL v3 = 1;
  uint64_t v4 = sub_10009B02C(1);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_10009B02C(v4 & a1);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    BOOL v3 = [v1 horizontalSizeClass] != 0;
  }
  uint64_t v6 = sub_10009B02C(2);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_10009B02C(v6 & a1);
  swift_bridgeObjectRelease();
  BOOL v8 = v7 != 2 && v3;
  if (v7 == 2 && v3) {
    BOOL v8 = [v1 verticalSizeClass] != 0;
  }
  uint64_t v9 = sub_10009B02C(4);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_10009B02C(v9 & a1);
  swift_bridgeObjectRelease();
  BOOL v11 = v10 != 4 && v8;
  if (v10 == 4 && v8)
  {
    [v1 displayScale];
    double v13 = v12;
    if (qword_1007050C0 != -1) {
      swift_once();
    }
    BOOL v11 = *(double *)&qword_100711028 < v13;
  }
  uint64_t v14 = sub_10009B02C(8);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_10009B02C(v14 & a1);
  swift_bridgeObjectRelease();
  BOOL v16 = v15 != 8 && v11;
  if (v15 == 8 && v11) {
    BOOL v16 = [v1 userInterfaceStyle] != 0;
  }
  uint64_t v17 = sub_10009B02C(16);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_10009B02C(v17 & a1);
  swift_bridgeObjectRelease();
  LOBYTE(v19) = v18 != 16 && v16;
  if (v18 == 16 && v16)
  {
    id v20 = [v1 preferredContentSizeCategory];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
    if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24) {
      LOBYTE(v19) = 0;
    }
    else {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = sub_10009B02C(32);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10009B02C(v25 & a1);
  swift_bridgeObjectRelease();
  int v27 = (v26 != 32) & v19;
  if (v26 == 32 && (v19 & 1) != 0) {
    int v27 = [v1 userInterfaceIdiom] != (id)-1;
  }
  uint64_t v28 = sub_10009B02C(64);
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_10009B02C(v28 & a1);
  swift_bridgeObjectRelease();
  if (v29 == 64) {
    BOOL v30 = 0;
  }
  else {
    BOOL v30 = v27;
  }
  if (v29 == 64 && v27) {
    BOOL v30 = [v1 layoutDirection] != (id)-1;
  }
  uint64_t v31 = sub_10009B02C(256);
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_10009B02C(v31 & a1);
  swift_bridgeObjectRelease();
  BOOL result = v32 != 256 && v30;
  if (v32 == 256 && v30) {
    return [v1 legibilityWeight] != (id)-1;
  }
  return result;
}

void sub_100095550(void *a1)
{
  sub_1000CBE0C((uint64_t)a1, (uint64_t)v19, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v19, (uint64_t)v25, (uint64_t *)&unk_100705550);
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
  sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v26, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v27) == 1)
  {
    sub_1000CBE0C((uint64_t)a1, (uint64_t)v23, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4((uint64_t *)v23) == 1) {
      return;
    }
  }
  else
  {
    sub_1000CBE0C((uint64_t)a1, (uint64_t)v20, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v20) != 1)
    {
      sub_1000CBE0C((uint64_t)v25, (uint64_t)v12, (uint64_t *)&unk_100705550);
      v23[8] = v12[8];
      v23[9] = v12[9];
      v23[10] = v12[10];
      uint64_t v24 = v13;
      v23[4] = v12[4];
      v23[5] = v12[5];
      v23[6] = v12[6];
      v23[7] = v12[7];
      v23[0] = v12[0];
      v23[1] = v12[1];
      void v23[2] = v12[2];
      v23[3] = v12[3];
      sub_1000CBE0C((uint64_t)v26, (uint64_t)v16, (uint64_t *)&unk_100705550);
      v21[8] = v16[8];
      v21[9] = v16[9];
      v21[10] = v16[10];
      uint64_t v22 = v17;
      void v21[4] = v16[4];
      v21[5] = v16[5];
      v21[6] = v16[6];
      v21[7] = v16[7];
      v21[0] = v16[0];
      v21[1] = v16[1];
      void v21[2] = v16[2];
      v21[3] = v16[3];
      sub_1000958FC(v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
      sub_1000958FC(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
      BOOL v11 = sub_1003659C4((uint64_t)v21, (uint64_t)v23);
      sub_1000958FC(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
      sub_1000958FC(v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
      if (v11) {
        return;
      }
      goto LABEL_6;
    }
  }
  sub_1000CBE0C((uint64_t)v26, (uint64_t)v16, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v25, (uint64_t)&v18, (uint64_t *)&unk_100705550);
  sub_1000958FC(v26, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  sub_1000958FC(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  sub_1000978BC((uint64_t)v16);
LABEL_6:
  sub_1000CBE0C(v3, (uint64_t)v14, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v15) != 1)
  {
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100098488(v4);
    swift_unknownObjectRelease();
    uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    *uint64_t v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease();
    sub_1000951C8((uint64_t)v12);
    uint64_t v6 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v16, &qword_100705560);
    sub_1000CBE0C((uint64_t)v12, v6, &qword_100705560);
    sub_10009A828(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    uint64_t v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x3300;
    if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x3300) != 0) {
      *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v9;
    }
    if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(v1 + v8) = 0;
      sub_100090F98(v9, v1);
    }
  }
}

void *sub_1000958FC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

void sub_100095970(char *a1)
{
  uint64_t v2 = (unsigned __int8 *)v1;
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v55 - v9;
  uint64_t v11 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits;
  if (*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits])
  {
    swift_retain();
    sub_10009611C((uint64_t)&v72);
    swift_release();
    v84[8] = v80;
    v84[9] = v81;
    _OWORD v84[10] = v82;
    uint64_t v85 = v83;
    v84[4] = v76;
    v84[5] = v77;
    v84[6] = v78;
    v84[7] = v79;
    v84[0] = v72;
    v84[1] = v73;
    v84[2] = v74;
    _OWORD v84[3] = v75;
    DOCSplitBrowserViewController.didCommitPreview(of:)(v84);
  }
  else
  {
    sub_10008FA08((uint64_t)v84);
  }
  sub_1000CBE0C((uint64_t)v84, (uint64_t)v86, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v86, (uint64_t)v84, (uint64_t *)&unk_100705550);
  if (*(void *)&v1[v11])
  {
    double v12 = v10;
    swift_retain();
    sub_1000976F0((uint64_t)&v63);
    swift_release();
    long long v76 = v67;
    long long v77 = v68;
    long long v78 = v69;
    long long v79 = v70;
    float64x2_t v72 = v63;
    long long v73 = v64;
    long long v74 = v65;
    long long v75 = v66;
    DOCSplitBrowserViewController.didCommitPreview(of:)(&v72);
  }
  else
  {
    double v12 = v10;
    sub_10008F9F0(&v72);
  }
  sub_1000CBE0C((uint64_t)&v72, (uint64_t)v71, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v71, (uint64_t)&v72, (uint64_t *)&unk_10070AD40);
  id v62 = a1;
  uint64_t v13 = (void **)&a1[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
  swift_beginAccess();
  uint64_t v58 = *v13;
  long long v14 = *(_OWORD *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 16];
  float64x2_t v63 = *(float64x2_t *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics];
  long long v64 = v14;
  *(void *)&long long v65 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 32];
  uint64_t v59 = sub_100096514();
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  unsigned int v61 = [v15 preferLastUsedDate];
  unsigned int v60 = [v1 isEditing];
  BOOL v16 = *v13;
  if (*v13)
  {
    uint64_t v56 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
    int v17 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
    swift_unknownObjectRetain();
    if (v17 == 1) {
      unsigned int v18 = [v16 isFolder] ^ 1;
    }
    else {
      unsigned int v18 = 1;
    }
    unsigned int v57 = v18;
    if (sub_1000968BC(v16))
    {
      id v20 = [v16 contentType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      static UTType.folder.getter();
      LOBYTE(v20) = static UTType.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v8, v4);
      v21(v12, v4);
      if ((v20 & 1) != 0
        && [v15 forPickingDocuments]
        && [v2 isEditing])
      {
        int v19 = v2[v56];
      }
      else
      {
        int v19 = 1;
      }
    }
    else
    {
      int v19 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned int v57 = 0;
    int v19 = 1;
  }
  uint64_t v22 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v22)
  {
    char v23 = *(unsigned char *)(v22 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
    LODWORD(v56) = v19;
    if (v23)
    {
      BOOL v24 = 0;
    }
    else
    {
      id v25 = *(id *)(v22 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      self;
      BOOL v24 = swift_dynamicCastObjCClass() != 0;
    }
    if (*(unsigned char *)(v22 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      id v26 = 0;
    }
    else
    {
      id v27 = *(id *)(v22 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      self;
      uint64_t v28 = (void *)swift_dynamicCastObjCClass();
      if (v28) {
        id v26 = [v28 itemsOrigin];
      }
      else {
        id v26 = 0;
      }
    }
    id v29 = *(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    id v30 = [v29 identifier];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34) {
      char v35 = 1;
    }
    else {
      char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v36 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
    if (v36)
    {
      Swift::String v37 = *v13;
      if (*v13)
      {
        id v38 = v36;
        swift_unknownObjectRetain();
        if (v35 & 1 | (v26 == (id)1)
          || v24
          && ((id v39 = [v37 providerDomainID],
               char v40 = DOCProviderDomainIDIsSharedServerDomainID(),
               v39,
               (v40 & 1) != 0)
           || (id v41 = [v37 providerDomainID],
               int v42 = DOCProviderDomainIDIsExternalDevice(),
               v41,
               v42)))
        {
          Swift::String v43 = *(void **)&v38[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
          swift_getObjectType();
          id v44 = v43;
          id v45 = (void *)DOCNode.sourceIdentifier.getter();
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          NSString v46 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v47 = [v44 cachedDisplayNameForSourceIdentifier:v46];

          if (v47)
          {
            uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v50 = v49;

            swift_unknownObjectRelease();
LABEL_44:
            BOOL v51 = v58 == 0;
            id v52 = v62;
            sub_10009736C(v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
            sub_100097480(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
            uint64_t v53 = v2;
            Swift::Double v54 = v59;
            swift_bridgeObjectRetain();
            sub_100097AAC((uint64_t)v52, (uint64_t)v52, v84, &v72, v53, v51, &v63, v54, v61, v57, v60, 0, (uint64_t)v26, v56, v48, v50);

            swift_bridgeObjectRelease();
            sub_100097480(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
            sub_10009736C(v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);

            sub_10009736C(v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
            sub_100097480(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
            swift_bridgeObjectRelease();

            return;
          }
        }

        swift_unknownObjectRelease();
      }
    }
    uint64_t v48 = 0;
    uint64_t v50 = 0xE000000000000000;
    goto LABEL_44;
  }
  __break(1u);
}

double sub_10009611C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 136;
  sub_1000CBE0C(v1 + 136, (uint64_t)v82, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v82, (uint64_t)v83, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v83) == 1)
  {
    swift_beginAccess();
    sub_1000C8674(&v73);
    swift_endAccess();
    uint64_t v5 = v78;
    uint64_t v6 = self;
    uint64_t v7 = *((void *)&v73 + 1);
    uint64_t v8 = v74;
    uint64_t v47 = v4;
    uint64_t v9 = v75;
    char v10 = v76;
    char v56 = v77;
    uint64_t v11 = *(void *)(v2 + 552);
    id v46 = [v6 preferredFontForTextStyle:(void)v73 compatibleWithTraitCollection:v11];
    id v12 = [v6 preferredFontForTextStyle:v8 compatibleWithTraitCollection:v11];
    v13.super.Class isa = UIFont.doc_withFeatureMonospacedDigits()().super.isa;
    uint64_t v45 = v80;
    uint64_t v55 = v79;
    char v14 = v56 & 1;
    sub_1000B69C0(v81);
    double v15 = v81[0];
    double v16 = v81[1];
    double v57 = v81[2];
    double v17 = v81[4];
    double v43 = v81[3];
    double v44 = v81[5];
    double v18 = v81[6];
    double v19 = v81[7];
    double v20 = v81[8];
    sub_1000B6738();
    uint64_t v41 = v22;
    uint64_t v42 = v21;
    uint64_t v24 = v23;
    double v26 = v25;
    sub_1000CAA5C((void **)&v73);
    *(void *)&long long v58 = v46;
    *((void *)&v58 + 1) = v7;
    uint64_t v27 = v7;
    *(void *)&long long v59 = v12;
    *((UIFont *)&v59 + 1) = v13;
    uint64_t v48 = v9;
    *(void *)&long long v60 = v9;
    char v28 = v14;
    char v29 = v10 & 1;
    double v30 = v20;
    *((void *)&v60 + 1) = v45;
    *(void *)&long long v61 = v5;
    *((void *)&v61 + 1) = v5;
    *(void *)&long long v62 = v55;
    BYTE8(v62) = v10 & 1;
    BYTE9(v62) = v28;
    double v53 = v16;
    double v54 = v15;
    *(double *)&long long v63 = v15;
    *((double *)&v63 + 1) = v16;
    uint64_t v31 = v5;
    double v32 = v26;
    double v33 = v43;
    *(double *)&long long v64 = v57;
    *((double *)&v64 + 1) = v43;
    double v51 = v18;
    double v52 = v17;
    *(double *)&long long v65 = v17;
    double v34 = v44;
    uint64_t v35 = v41;
    *((double *)&v65 + 1) = v44;
    *(double *)&long long v66 = v18;
    double v49 = v19;
    double v50 = v32;
    *((double *)&v66 + 1) = v19;
    uint64_t v36 = v45;
    *(double *)&long long v67 = v20;
    uint64_t v37 = v42;
    *((void *)&v67 + 1) = v42;
    *(void *)&long long v68 = v24;
    *((double *)&v68 + 1) = v32;
    uint64_t v69 = v41;
    v70[6] = v64;
    v70[7] = v65;
    unsigned char v70[4] = v62;
    v70[5] = v63;
    id v70[2] = v60;
    v70[3] = v61;
    v70[0] = v58;
    v70[1] = v59;
    uint64_t v71 = v41;
    v70[9] = v67;
    v70[10] = v68;
    v70[8] = v66;
    DOCSplitBrowserViewController.didCommitPreview(of:)(v70);
    sub_1000CBE0C(v47, (uint64_t)v72, (uint64_t *)&unk_100705550);
    uint64_t v38 = (uint64_t)v46;
    sub_1000CBE0C((uint64_t)v70, v47, (uint64_t *)&unk_100705550);
    sub_1000A2E70((uint64_t)&v58);
    sub_1000958FC(v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
    uint64_t v39 = v31;
  }
  else
  {
    uint64_t v37 = v95;
    uint64_t v24 = v96;
    uint64_t v35 = v98;
    double v53 = v87;
    double v54 = v86;
    double v33 = v89;
    double v52 = v90;
    double v34 = v91;
    double v50 = v97;
    double v51 = v92;
    double v49 = v93;
    double v30 = v94;
    char v28 = v85;
    char v29 = v84;
    uint64_t v55 = v83[8];
    double v57 = v88;
    uint64_t v39 = v83[7];
    uint64_t v31 = v83[6];
    uint64_t v36 = v83[5];
    uint64_t v48 = v83[4];
    v13.super.Class isa = (Class)v83[3];
    id v12 = (id)v83[2];
    uint64_t v27 = v83[1];
    uint64_t v38 = v83[0];
  }
  sub_1000958FC(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  *(void *)a1 = v38;
  *(void *)(a1 + 8) = v27;
  *(void *)(a1 + 16) = v12;
  *(UIFont *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v48;
  *(void *)(a1 + 40) = v36;
  *(void *)(a1 + 48) = v31;
  *(void *)(a1 + 56) = v39;
  *(void *)(a1 + 64) = v55;
  *(unsigned char *)(a1 + 72) = v29;
  *(unsigned char *)(a1 + 73) = v28;
  *(double *)(a1 + 80) = v54;
  *(double *)(a1 + 88) = v53;
  *(double *)(a1 + 96) = v57;
  *(double *)(a1 + 104) = v33;
  *(double *)(a1 + 112) = v52;
  *(double *)(a1 + 120) = v34;
  *(double *)(a1 + 128) = v51;
  *(double *)(a1 + 136) = v49;
  *(double *)(a1 + 144) = v30;
  *(void *)(a1 + 152) = v37;
  *(void *)(a1 + 160) = v24;
  double result = v50;
  *(double *)(a1 + 168) = v50;
  *(void *)(a1 + 176) = v35;
  return result;
}

_OWORD *sub_100096514()
{
  id v1 = [v0 effectiveAppearance];
  if (v1) {
    return v1;
  }
  if (*(void *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager])
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = Strong;
      id v1 = [Strong effectiveAppearance];

      if (v1)
      {
        uint64_t v4 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        double result = (_OWORD *)swift_allocObject();
        result[1] = xmmword_1005A0030;
        uint64_t v6 = *(unsigned char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
        if (v6)
        {
          uint64_t v7 = result;
          if ((v6[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0) {
            uint64_t v6 = *(unsigned char **)&v6[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
          }
LABEL_14:
          char v10 = v6;
          v7[7] = sub_10009E6C4(0, (unint64_t *)&qword_100706710);
          v7[8] = sub_1000C5A24((unint64_t *)&unk_1007069B0, (unint64_t *)&qword_100706710);
          void v7[4] = v10;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          return v1;
        }
        goto LABEL_24;
      }
    }
  }
  id v8 = [self anyWindowPreferingKeyWindow];
  if (v8)
  {
    uint64_t v9 = v8;
    id v1 = [v8 effectiveAppearance];

    if (v1)
    {
      uint64_t v4 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      double result = (_OWORD *)swift_allocObject();
      result[1] = xmmword_1005A0030;
      uint64_t v6 = *(unsigned char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (v6)
      {
        uint64_t v7 = result;
        if ((v6[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0) {
          uint64_t v6 = *(unsigned char **)&v6[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
        }
        goto LABEL_14;
      }
      goto LABEL_23;
    }
  }
  uint64_t v11 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  double result = (_OWORD *)swift_allocObject();
  result[1] = xmmword_1005A0030;
  id v12 = *(unsigned char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v12)
  {
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  UIFont v13 = result;
  if ((v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0) {
    id v12 = *(unsigned char **)&v12[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  }
  char v14 = v12;
  v13[7] = sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  v13[8] = sub_1000C5A24((unint64_t *)&unk_1007069B0, (unint64_t *)&qword_100706710);
  v13[4] = v14;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v15 = objc_allocWithZone((Class)DOCAppearance);

  return [v15 init];
}

BOOL sub_1000968BC(void *a1)
{
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![a1 isActionable]
    || ![a1 isReadable]
    || ([a1 isCopying] & 1) != 0
    || ![a1 isFullyFormed])
  {
    return 0;
  }
  if (((uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration),
         ([v7 forMovingDocuments] & 1) != 0)
     || ([v7 forSavingDocuments] & 1) != 0
     || [v7 forPickingFoldersOnly])
    && ![a1 isFolder])
  {
    return 0;
  }
  else if ([a1 isFolder])
  {
    return 1;
  }
  else
  {
    id v10 = [a1 contentType];
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    id v11 = [v7 documentContentTypes];
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::Bool v8 = UTType.doc_conformsToAny(inContentTypes:)((Swift::OpaquePointer)v12);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v8;
}

uint64_t sub_100096AC0(uint64_t a1, void *a2, void *a3, void *a4, char a5, float64x2_t *a6, void *a7, int a8, unsigned __int8 a9, char a10, unsigned __int8 a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15)
{
  HIDWORD(v82) = a8;
  float64x2_t v21 = *a6;
  float64x2_t v84 = a6[1];
  float64x2_t v85 = v21;
  double v22 = a6[2].f64[0];
  uint64_t v23 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v23 - 8);
  uint64_t v83 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
  sub_1000CBE0C(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v87, (uint64_t *)&unk_100705550);
  sub_1000CBE0C(v25, (uint64_t)v88, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)a2, v25, (uint64_t *)&unk_100705550);
  sub_10009736C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  sub_10009736C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  sub_10009736C(v87, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  sub_10009736C(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  sub_100095550(v87);
  sub_10009736C(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  sub_10009736C(v87, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  uint64_t v26 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits;
  sub_1000CBE0C(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v86, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C(v26, (uint64_t)v89, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)a3, v26, (uint64_t *)&unk_10070AD40);
  sub_100097480(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  sub_100097480(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  sub_100097480(v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  sub_100097480(v89, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
  sub_100097DD0(v86);
  sub_100097480(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
  sub_100097480(v86, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
  if (*(void *)((char *)a4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits))
  {
    swift_retain();
    double v27 = sub_1000979F8();
    swift_release();
  }
  else
  {
    double v27 = 0.0;
  }
  double v28 = *(double *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumRowHeight);
  *(double *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_minimumRowHeight) = v27;
  if (v27 != v28)
  {
    uint64_t v29 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v30 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v30 & 0x200) == 0)
    {
      v30 |= 0x200uLL;
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v30;
    }
    if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(a1 + v29) = 0;
      sub_100090F98(v30, a1);
    }
  }
  char v31 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode) = a5 & 1;
  sub_100098208(v31);
  uint64_t v32 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics;
  double v33 = *(double *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32);
  int v34 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40);
  *(double *)(v32 + 32) = v22;
  *(unsigned char *)(v32 + 40) = 0;
  float64x2_t v35 = *(float64x2_t *)v32;
  float64x2_t v36 = *(float64x2_t *)(v32 + 16);
  float64x2_t v38 = v84;
  float64x2_t v37 = v85;
  *(float64x2_t *)uint64_t v32 = v85;
  *(float64x2_t *)(v32 + 16) = v38;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v35, v37), (int32x4_t)vceqq_f64(v36, v38))), 0xFuLL))) & 1) == 0|| v34|| v33 != v22)
  {
    uint64_t v39 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v40 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v40 & 0x400) == 0)
    {
      v40 |= 0x400uLL;
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v40;
    }
    if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(a1 + v39) = 0;
      sub_100090F98(v40, a1);
    }
  }
  int v42 = HIDWORD(v82);
  double v43 = *(void **)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance) = a7;
  id v44 = a7;
  sub_1000987A8(v43);

  int v45 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_preferLastUsedDate) = v42 & 1;
  if (v45 == 2 || ((((v45 & 1) == 0) ^ v42) & 1) == 0)
  {
    id v46 = (void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
    *id v46 = 0;
    v46[1] = 0;
    swift_bridgeObjectRelease();
    if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      uint64_t v47 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = 0;
      sub_100090F98(v47, a1);
    }
  }
  int v49 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable) = a9 & 1;
  if (v49 == 2 || ((((v49 & 1) == 0) ^ a9) & 1) == 0)
  {
    uint64_t v50 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v51 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 9;
    if ((~*(_DWORD *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 9) != 0) {
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v51;
    }
    if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(a1 + v50) = 0;
      sub_100090F98(v51, a1);
    }
  }
  char v53 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) = a10 & 1;
  sub_100098510(v53);
  int v54 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) = a11 & 1;
  if (v54 == 2 || ((((v54 & 1) == 0) ^ a11) & 1) == 0)
  {
    uint64_t v55 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v56 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v56 & 0x800) == 0)
    {
      v56 |= 0x800uLL;
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v56;
    }
    if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(a1 + v55) = 0;
      sub_100090F98(v56, a1);
    }
  }
  long long v60 = *(void **)((char *)a4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  unsigned __int8 v61 = [v60 isPickerUI];
  id v62 = [a4 traitCollection];
  if (v61)
  {
    uint64_t v63 = UITraitCollection.modifyingTraits(_:)();

    id v62 = (id)v63;
  }
  sub_100094F20(v62);
  uint64_t v64 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin;
  uint64_t v65 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin);
  char v66 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin + 8);
  *(void *)uint64_t v64 = a12;
  *(unsigned char *)(v64 + 8) = 0;
  if ((v66 & 1) != 0 || v65 != a12)
  {
    *(void *)&v85.f64[0] = a4;
    uint64_t v67 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v68 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v68 & 1) == 0)
    {
      v68 |= 1uLL;
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v68;
    }
    if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(a1 + v67) = 0;
      sub_100090F98(v68, a1);
    }
    a4 = *(void **)&v85.f64[0];
  }
  uint64_t v70 = (uint64_t)v83;
  char v71 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable) = a13 & 1;
  sub_10009865C(v71);
  uint64_t v72 = swift_retain();
  sub_100097D44(v72);
  swift_release();
  swift_bridgeObjectRetain();
  if (String.count.getter() <= 0)
  {
    swift_bridgeObjectRelease();
    a14 = 0;
    a15 = 0;
  }
  long long v73 = (void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName);
  void *v73 = a14;
  v73[1] = a15;
  swift_bridgeObjectRelease();
  unsigned __int8 v74 = [v60 isPopoverOrWidget];
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) = v74;
  uint64_t v75 = (uint64_t)a4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
  swift_beginAccess();
  sub_1000CBC00(v75, v70, (uint64_t *)&unk_1007086D0);
  uint64_t v76 = a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_sortingDescriptor;
  swift_beginAccess();
  sub_10009758C(v70, v76, (uint64_t *)&unk_1007086D0);
  swift_endAccess();
  uint64_t v77 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  uint64_t v78 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
  if ((v78 & 0x200) == 0)
  {
    v78 |= 0x200uLL;
    *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v78;
  }
  if (!*(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_1000CBC64())
  {
    *(void *)(a1 + v77) = 0;
    sub_100090F98(v78, a1);
  }
  sub_1000CBBA4(v70, (uint64_t *)&unk_1007086D0);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_useSystemHighlightStyle) = 1;
  uint64_t result = sub_1000975F0();
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_roundedCorners) = result & 1;
  return result;
}

void *sub_10009736C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

void sub_1000973E0(void *a1, uint64_t a2, void *a3, void *a4)
{
  if (a1)
  {
  }
}

id sub_100097430(id result, uint64_t a2, void *a3, void *a4)
{
  if (result)
  {
    id v5 = result;
    id v6 = a3;
    return a4;
  }
  return result;
}

void *sub_100097480(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_1000974E4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
  }
}

id sub_100097538(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (result)
  {
    id v11 = result;
    id v12 = a2;
    return a10;
  }
  return result;
}

uint64_t sub_10009758C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000CBE70(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000975F0()
{
  if (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics]) {
    return 1;
  }
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*v2 == 2) {
    return 0;
  }
  uint64_t result = DOCDeviceIsPad();
  if (result)
  {
    unsigned int v3 = [*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPickerUI];
    id v4 = [v0 traitCollection];
    if (v3)
    {
      uint64_t v5 = UITraitCollection.modifyingTraits(_:)();

      id v4 = (id)v5;
    }
    id v6 = [v4 horizontalSizeClass];

    return v6 == (id)2;
  }
  return result;
}

__n128 sub_1000976F0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t)(v1 + 52);
  sub_1000CBE0C((uint64_t)(v1 + 52), (uint64_t)v22, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v22, (uint64_t)v23, (uint64_t *)&unk_10070AD40);
  if (sub_1000CBEB4((uint64_t *)v23) == 1)
  {
    sub_10000DF74(v1, (uint64_t)&v18);
    v16[4] = *(_OWORD *)&v20[32];
    v16[5] = *(_OWORD *)v21;
    v16[6] = *(_OWORD *)&v21[16];
    v16[7] = *(_OWORD *)&v21[32];
    v16[0] = v18;
    v16[1] = v19;
    v16[2] = *(_OWORD *)v20;
    v16[3] = *(_OWORD *)&v20[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v16);
    sub_1000CBE0C(v3, (uint64_t)v17, (uint64_t *)&unk_10070AD40);
    sub_1000CBE0C((uint64_t)v16, v3, (uint64_t *)&unk_10070AD40);
    sub_1000104D0((uint64_t)&v18);
    sub_1000980C0(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
    uint64_t v4 = *(void *)&v21[40];
    long long v14 = *(_OWORD *)&v21[8];
    __n128 v15 = *(__n128 *)&v21[24];
    char v5 = v21[0];
    long long v12 = *(_OWORD *)&v20[24];
    long long v13 = *(_OWORD *)&v20[8];
    uint64_t v6 = *(void *)&v20[40];
    uint64_t v7 = *(void *)v20;
    long long v11 = v19;
    long long v8 = v18;
  }
  else
  {
    uint64_t v4 = v31;
    long long v14 = v29;
    __n128 v15 = v30;
    char v5 = v28;
    long long v12 = v26;
    long long v13 = v25;
    uint64_t v6 = v27;
    uint64_t v7 = v24;
    long long v11 = v23[1];
    long long v8 = v23[0];
  }
  long long v10 = v8;
  sub_1000980C0(v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 56) = v12;
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 88) = v14;
  __n128 result = v15;
  *(__n128 *)(a1 + 104) = v15;
  *(void *)(a1 + 120) = v4;
  return result;
}

uint64_t sub_1000978BC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 192);
  uint64_t v4 = *(void **)(a1 + 200);
  char v5 = *(void **)(a1 + 208);
  sub_1000973E0(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24));
  sub_1000973E0(v2, v3, v4, v5);
  return a1;
}

double sub_1000979F8()
{
  if (*(unsigned char *)(v0 + 408) != 2) {
    return *(double *)(v0 + 400);
  }
  long long v1 = *(_OWORD *)(v0 + 912);
  unsigned char v8[8] = *(_OWORD *)(v0 + 896);
  v8[9] = v1;
  long long v2 = *(_OWORD *)(v0 + 944);
  long long v9 = *(_OWORD *)(v0 + 928);
  long long v10 = v2;
  uint64_t v3 = *(void **)(v0 + 552);
  sub_10009611C((uint64_t)v7);
  sub_1000976F0((uint64_t)v8);
  double v4 = sub_100024924(v3, (uint64_t)v7, v8);
  sub_10000A628((uint64_t)v8);
  sub_10004B944((uint64_t)v7);
  char v5 = BYTE8(v9);
  *(double *)(v0 + 400) = v4;
  *(unsigned char *)(v0 + 408) = v5;
  return v4;
}

void sub_100097AAC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, int a6, float64x2_t *a7, void *a8, char a9, unsigned __int8 a10, unsigned __int8 a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  int v46 = a6;
  uint64_t v45 = a2;
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  long long v25 = (uint64_t *)((char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *long long v25 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  char v26 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v27 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount;
  uint64_t v28 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount);
  uint64_t v29 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  int v42 = a5;
  double v43 = a7;
  id v44 = a8;
  unsigned __int8 v30 = a11;
  unsigned __int8 v31 = a10;
  if (v28) {
    BOOL v32 = v29 == 0;
  }
  else {
    BOOL v32 = 0;
  }
  *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount) = v29;
  if (v32)
  {
    int v38 = a11;
    int v39 = a10;
    if (!sub_1000CBC64())
    {
      uint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = 0;
      sub_100090F98(v33, a1);
    }
    unsigned __int8 v30 = v38;
    unsigned __int8 v31 = v39;
  }
  sub_100096AC0(v45, v40, v41, v42, v46 & 1, v43, v44, a9 & 1, v31 & 1, v30 & 1, a12 & 1, a13, a14 & 1, a15, a16);
  uint64_t v34 = *(void *)(a1 + v27);
  if (__OFSUB__(v34, 1)) {
    goto LABEL_18;
  }
  *(void *)(a1 + v27) = v34 - 1;
  if (v34 == 1 && !sub_1000CBC64())
  {
    uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = 0;
    sub_100090F98(v35, a1);
  }
}

uint64_t sub_100097D44(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool);
  if (!v2)
  {
    if (!result) {
      return result;
    }
    goto LABEL_6;
  }
  if (!result || v2 != result)
  {
LABEL_6:
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnailLoadingPool) = result;
    swift_retain();
    swift_release();
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100098488(v3);
    __n128 result = swift_unknownObjectRelease();
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v4 & 0x100) == 0) {
      *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v4 | 0x100;
    }
  }
  return result;
}

void sub_100097DD0(void *a1)
{
  sub_1000CBE0C((uint64_t)a1, (uint64_t)v16, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_10070AD40);
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits;
  sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v20, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v20, (uint64_t)v21, (uint64_t *)&unk_10070AD40);
  if (sub_1000CBEB4(v21) == 1)
  {
    sub_1000CBE0C((uint64_t)a1, (uint64_t)v18, (uint64_t *)&unk_10070AD40);
    if (sub_1000CBEB4((uint64_t *)v18) == 1) {
      return;
    }
  }
  else
  {
    sub_1000CBE0C((uint64_t)a1, (uint64_t)v17, (uint64_t *)&unk_10070AD40);
    if (sub_1000CBEB4(v17) != 1)
    {
      sub_1000CBE0C((uint64_t)v19, (uint64_t)v12, (uint64_t *)&unk_10070AD40);
      void v14[4] = v12[4];
      v14[5] = v12[5];
      v14[6] = v12[6];
      v14[7] = v12[7];
      v14[0] = v12[0];
      v14[1] = v12[1];
      void v14[2] = v12[2];
      v14[3] = v12[3];
      sub_1000CBE0C((uint64_t)v20, (uint64_t)v13, (uint64_t *)&unk_10070AD40);
      v18[4] = v13[4];
      v18[5] = v13[5];
      void v18[6] = v13[6];
      v18[7] = v13[7];
      v18[0] = v13[0];
      v18[1] = v13[1];
      id v18[2] = v13[2];
      v18[3] = v13[3];
      sub_1000980C0(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
      sub_1000980C0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
      BOOL v11 = sub_1003655AC((uint64_t)v18, (uint64_t)v14);
      sub_1000980C0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
      sub_1000980C0(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000974E4);
      if (v11) {
        return;
      }
      goto LABEL_6;
    }
  }
  sub_1000CBE0C((uint64_t)v20, (uint64_t)v14, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v19, (uint64_t)&v15, (uint64_t *)&unk_10070AD40);
  sub_1000980C0(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  sub_1000980C0(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097538);
  sub_100098124((uint64_t)v14);
LABEL_6:
  sub_1000CBE0C(v3, (uint64_t)v12, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_10070AD40);
  if (sub_1000CBEB4((uint64_t *)v13) != 1)
  {
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    char v5 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
    *char v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
    *uint64_t v6 = 0;
    v6[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
    *uint64_t v7 = 0;
    v7[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v9 & 0x200) == 0)
    {
      v9 |= 0x200uLL;
      *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v9;
    }
    if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(v1 + v8) = 0;
      sub_100090F98(v9, v1);
    }
  }
}

void *sub_1000980C0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100098124(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 136);
  BOOL v11 = *(void **)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 184);
  long long v10 = *(_OWORD *)(a1 + 192);
  sub_1000974E4(*(void **)a1, *(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72));
  sub_1000974E4(v11, v2, v3, v4, v5, v6, v7, v8, v10, *((void **)&v10 + 1));
  return a1;
}

void sub_100098208(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode);
  if (v2 != 2 && (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0))
  {
    uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size);
    *uint64_t v3 = 0;
    v3[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shareString);
    *uint64_t v4 = 0;
    v4[1] = 0;
    swift_bridgeObjectRelease();
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags) = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 2;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isExcludedFromSync) = 2;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showGridCircularProgressView) = 2;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 2;
    uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__date);
    *uint64_t v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance) = 10;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
    sub_100098488(v6);
    swift_unknownObjectRelease();
    uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
    *uint64_t v7 = 0;
    v7[1] = 0;
    swift_bridgeObjectRelease();
    sub_1000951C8((uint64_t)v17);
    uint64_t v8 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v18, &qword_100705560);
    sub_1000CBE0C((uint64_t)v17, v8, &qword_100705560);
    sub_10009A828(v18, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    long long v10 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    BOOL v11 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
    *BOOL v11 = 0;
    v11[1] = 0;
    swift_bridgeObjectRelease();
    long long v12 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
    *long long v12 = 0;
    v12[1] = 0;
    swift_bridgeObjectRelease();
    long long v13 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
    *long long v13 = 0;
    v13[1] = 0;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory) = 2;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = 2;
    uint64_t v14 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x109;
    if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x109) != 0) {
      *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v15;
    }
    if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(v1 + v14) = 0;
      sub_100090F98(v15, v1);
    }
  }
}

id sub_100098488(id result)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  if (!v3)
  {
    if (!result) {
      return result;
    }
LABEL_7:
    __n128 result = [result removeListener:v1];
    id v3 = *(id *)(v1 + v2);
    if (!v3) {
      return result;
    }
    goto LABEL_8;
  }
  if (result && v3 == result) {
    return result;
  }
  if (result) {
    goto LABEL_7;
  }
LABEL_8:

  return [v3 addListener:v1];
}

void sub_100098510(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting);
  if (v2 != 2 && (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = 2;
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000951C8((uint64_t)v9);
    uint64_t v4 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v10, &qword_100705560);
    sub_1000CBE0C((uint64_t)v9, v4, &qword_100705560);
    sub_10009A828(v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail) = 2;
    uint64_t v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v7 & 8) == 0)
    {
      v7 |= 8uLL;
      *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v7;
    }
    if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(v1 + v6) = 0;
      sub_100090F98(v7, v1);
    }
  }
}

void sub_10009865C(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
  if (v2 != 2 && (a1 == 2 || ((((a1 & 1) == 0) ^ v2) & 1) == 0))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = 2;
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

    sub_1000951C8((uint64_t)v9);
    uint64_t v4 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
    sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v10, &qword_100705560);
    sub_1000CBE0C((uint64_t)v9, v4, &qword_100705560);
    sub_10009A828(v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
    *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

    uint64_t v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x28;
    if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x28) != 0) {
      *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v7;
    }
    if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)(v1 + v6) = 0;
      sub_100090F98(v7, v1);
    }
  }
}

void sub_1000987A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (v4)
  {
    if (!a1
      || (sub_10009E6C4(0, (unint64_t *)&qword_10070D090),
          id v6 = a1,
          id v7 = v4,
          char v8 = static NSObject.== infix(_:_:)(),
          v7,
          v6,
          (v8 & 1) == 0)
      && *(void *)(v2 + v3))
    {
      uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
      *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

      long long v10 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
      *long long v10 = 0;
      v10[1] = 0;
      swift_bridgeObjectRelease();
      sub_1000951C8((uint64_t)v16);
      uint64_t v11 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
      sub_1000CBE0C(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v17, &qword_100705560);
      sub_1000CBE0C((uint64_t)v16, v11, &qword_100705560);
      sub_10009A828(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
      long long v12 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
      *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

      uint64_t v13 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
      uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
      if ((v14 & 1) == 0)
      {
        v14 |= 1uLL;
        *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v14;
      }
      if (!*(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
        && !sub_1000CBC64())
      {
        *(void *)(v2 + v13) = 0;
        sub_100090F98(v14, v2);
      }
    }
  }
}

void sub_100098940(void *a1)
{
  uint64_t v2 = v1;
  sub_1000A34E4(a1);
  uint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  *(void *)&v3[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView] = v4;
  id v6 = v4;

  [v6 setDelegate:v1];
  id v7 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel];
  [v7 setTextAlignment:1];
  char v8 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel];
  [v8 setTextAlignment:1];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
  [v9 setUserInteractionEnabled:1];
  id v10 = sub_1000A4858();
  [v2 addGestureRecognizer:v10];

  LODWORD(v11) = 1148846080;
  [v9 setContentHuggingPriority:1 forAxis:v11];
  LODWORD(v12) = 1148846080;
  [v9 setContentCompressionResistancePriority:1 forAxis:v12];
  LODWORD(v13) = 1148846080;
  [v8 setContentHuggingPriority:1 forAxis:v13];
  LODWORD(v14) = 1148846080;
  [v8 setContentCompressionResistancePriority:1 forAxis:v14];
  LODWORD(v15) = 1148846080;
  [v7 setContentHuggingPriority:1 forAxis:v15];
  LODWORD(v16) = 1148846080;
  [v7 setContentCompressionResistancePriority:1 forAxis:v16];
  double v17 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  if (*(void *)v17)
  {
    sub_1000CBE0C(*(void *)v17 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v154, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v154, (uint64_t)v155, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v155) == 1)
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v18 = v155[6];
    uint64_t v19 = *(void *)v17;
    if (*(void *)v17)
    {
LABEL_4:
      sub_1000CBE0C(v19 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v154, (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)v154, (uint64_t)v155, (uint64_t *)&unk_100705550);
      if (sub_1000CBEB4(v155) != 1)
      {
        uint64_t v20 = v155[8];
        uint64_t v21 = *(void *)v17;
        if (*(void *)v17) {
          goto LABEL_6;
        }
        goto LABEL_14;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
  }
  else
  {
    if (qword_100705328 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_10071BF50;
    uint64_t v19 = *(void *)v17;
    if (*(void *)v17) {
      goto LABEL_4;
    }
  }
  if (qword_100705328 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10071BF58;
  uint64_t v21 = *(void *)v17;
  if (*(void *)v17)
  {
LABEL_6:
    sub_1000CBE0C(v21 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v154, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v154, (uint64_t)v155, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v155) != 1)
    {
      uint64_t v22 = v155[5];
      goto LABEL_17;
    }
LABEL_37:
    __break(1u);
    return;
  }
LABEL_14:
  if (qword_100705328 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10071BF60;
LABEL_17:
  [v3 setFrame:*(double *)&v20 + (*(double *)&v22 - *(double *)&v18) * 0.5, *(double *)&v20, *(double *)&v18, *(double *)&v18];
  uint64_t v23 = *(char **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView];
  [v23 frame];
  double Width = CGRectGetWidth(v156);
  [v23 frame];
  [v23 setFrame:CGRectMake(*(double *)&v20, *(double *)&v18 + *(double *)&v20 + *(double *)&v20, Width, CGRectGetHeight(v157))];
  [a1 addSubview:v3];
  [a1 addSubview:v23];
  id v25 = sub_100099D70();
  [a1 addSubview:v25];

  [v3 addSubview:v6];
  char v26 = (double *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics];
  [v6 setDecorationCornerRadius:*(double *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics]];
  [v23 setAxis:1];
  [v23 setAlignment:0];
  [v23 addArrangedSubview:v9];
  [v23 addArrangedSubview:v7];
  id v142 = v8;
  [v23 addArrangedSubview:v8];
  id v150 = v9;
  [v23 setCustomSpacing:v9 afterView:v26[4]];
  id v147 = v26;
  id v141 = v7;
  [v23 setCustomSpacing:v7 afterView:v26[5]];
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v28 = (void (**)())&v23[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  uint64_t v29 = *(void *)&v23[OBJC_IVAR____TtC5FilesP33_AC5D3075082B3B9466C6D761FB909D2D21DOCNotifyingStackView_stackViewDidLayoutSubviews];
  *uint64_t v28 = sub_1000887E0;
  v28[1] = (void (*)())v27;
  sub_1000A7258(v29);
  id v149 = v6;
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v30 = sub_100099D70();
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];

  char v151 = v23;
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  v155[0] = (uint64_t)_swiftEmptyArrayStorage;
  id v31 = [v3 widthAnchor];
  id v32 = [v3 heightAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  LODWORD(v34) = 1148829696;
  [v33 setPriority:v34];
  id v35 = [v3 widthAnchor];
  id v36 = [v35 constraintEqualToConstant:*(double *)&v18];

  float64x2_t v37 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint];
  *(void *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint] = v36;
  id v38 = v36;

  id v39 = v33;
  id v40 = [v3 centerXAnchor];
  uint64_t v41 = _swiftEmptyArrayStorage;
  id v42 = [a1 centerXAnchor];
  id v43 = [v40 constraintEqualToAnchor:v42];

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    id v140 = v38;
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v45 = v38;
  }
  if (__OFADD__(v44, 3))
  {
    __break(1u);
    goto LABEL_34;
  }
  sub_10009EEB0(v44 + 3, 1);
  specialized Array._endMutation()();
  uint64_t v41 = v39;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v155[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v155[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_34:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v46 = v43;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v155[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v155[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v47 = v38;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v155[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v155[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v145 = v41;
  id v48 = [v3 topAnchor];
  id v49 = [a1 topAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49 constant:*(double *)&v20];

  if (*(double *)&v20 + -1.0 < 0.0) {
    double v51 = 0.0;
  }
  else {
    double v51 = *(double *)&v20 + -1.0;
  }
  id v52 = [v151 leadingAnchor];
  id v53 = [a1 leadingAnchor];
  id v146 = v47;
  id v54 = [v52 constraintEqualToAnchor:v53 constant:v51];

  id v55 = [v151 trailingAnchor];
  id v56 = [a1 trailingAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56 constant:-v51];

  id v58 = [a1 bottomAnchor];
  id v59 = [v151 bottomAnchor];
  id v60 = [v58 constraintGreaterThanOrEqualToAnchor:v59 constant:*(double *)&v20];

  LODWORD(v61) = 1144750080;
  [v60 setPriority:v61];
  id v62 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint];
  *(void *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint] = v50;
  id v63 = v50;

  uint64_t v64 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint];
  *(void *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint] = v60;
  id v65 = v60;

  char v66 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint];
  *(void *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint] = v54;
  id v67 = v54;

  uint64_t v68 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint];
  *(void *)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint] = v57;
  id v69 = v57;

  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1005AD440;
  *(void *)(v70 + 32) = v63;
  *(void *)(v70 + 40) = v65;
  id v144 = v63;
  id v143 = v65;
  id v71 = [v3 heightAnchor];
  id v72 = [a1 heightAnchor];
  id v73 = [v71 constraintLessThanOrEqualToAnchor:v72];

  *(void *)(v70 + 48) = v73;
  id v74 = [v150 firstBaselineAnchor];
  id v75 = [v3 bottomAnchor];
  id v76 = [v74 constraintEqualToSystemSpacingBelowAnchor:v75 multiplier:v147[3]];

  *(void *)(v70 + 56) = v76;
  *(void *)(v70 + 64) = v67;
  *(void *)(v70 + 72) = v69;
  id v153 = v67;
  id v148 = v69;
  id v77 = [v149 centerXAnchor];
  id v78 = [v3 centerXAnchor];
  id v79 = [v77 constraintEqualToAnchor:v78];

  *(void *)(v70 + 80) = v79;
  id v80 = [v149 bottomAnchor];
  id v81 = [v3 bottomAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81];

  *(void *)(v70 + 88) = v82;
  id v83 = [v3 trailingAnchor];
  id v84 = [v149 trailingAnchor];
  id v85 = [v83 constraintGreaterThanOrEqualToAnchor:v84];

  *(void *)(v70 + 96) = v85;
  id v86 = [v149 leadingAnchor];
  id v87 = [v3 leadingAnchor];
  id v88 = [v86 constraintGreaterThanOrEqualToAnchor:v87];

  *(void *)(v70 + 104) = v88;
  id v89 = [v149 topAnchor];
  id v90 = [v3 topAnchor];
  id v91 = [v89 constraintGreaterThanOrEqualToAnchor:v90];

  *(void *)(v70 + 112) = v91;
  id v92 = [v149 bottomAnchor];
  id v93 = sub_100099D70();
  id v94 = [v93 bottomAnchor];

  id v95 = [v92 constraintEqualToAnchor:v94 constant:6.0];
  *(void *)(v70 + 120) = v95;
  id v96 = sub_100099D70();
  id v97 = [v96 centerXAnchor];

  id v98 = [v149 centerXAnchor];
  id v99 = [v97 constraintEqualToAnchor:v98];

  *(void *)(v70 + 128) = v99;
  v154[0] = v70;
  specialized Array._endMutation()();
  sub_10009EDD8(v154[0]);
  Swift::String v100 = self;
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v100 activateConstraints:isa];

  id v102 = [self standardUserDefaults];
  NSString v103 = String._bridgeToObjectiveC()();
  LODWORD(v99) = [v102 BOOLForKey:v103];

  if (v99)
  {
    id v104 = [v2 contentView];
    uint64_t v105 = self;
    id v106 = [v105 blackColor];
    id v107 = [v104 layer];
    id v108 = [v106 colorWithAlphaComponent:0.5];
    id v109 = [v108 CGColor];

    [v107 setBorderColor:v109];
    id v110 = [v104 layer];
    [v110 setBorderWidth:0.5];

    id v111 = [v105 orangeColor];
    id v112 = [v151 layer];
    id v113 = [v111 colorWithAlphaComponent:0.5];
    id v114 = [v113 CGColor];

    [v112 setBorderColor:v114];
    id v115 = [v151 layer];
    [v115 setBorderWidth:0.5];

    id v116 = [v105 greenColor];
    id v117 = [v3 layer];
    id v118 = [v116 colorWithAlphaComponent:0.5];
    id v119 = [v118 CGColor];

    [v117 setBorderColor:v119];
    id v120 = [v3 layer];
    [v120 setBorderWidth:0.5];

    id v121 = [v105 redColor];
    id v122 = [v150 layer];
    id v123 = [v121 colorWithAlphaComponent:0.5];
    id v124 = [v123 CGColor];

    [v122 setBorderColor:v124];
    id v125 = [v150 layer];
    [v125 setBorderWidth:0.5];

    id v126 = [v105 greenColor];
    id v127 = [v141 layer];
    id v128 = [v126 colorWithAlphaComponent:0.5];
    id v129 = [v128 CGColor];

    [v127 setBorderColor:v129];
    id v130 = [v141 layer];
    [v130 setBorderWidth:0.5];

    id v131 = [v105 blueColor];
    id v132 = [v142 layer];
    id v133 = [v131 colorWithAlphaComponent:0.5];
    id v134 = [v133 CGColor];

    [v132 setBorderColor:v134];
    id v135 = [v142 layer];
    [v135 setBorderWidth:0.5];

    uint64_t v136 = v153;
    uint64_t v137 = v144;
    id v153 = v143;
    char v139 = v145;
    uint64_t v138 = v146;
  }
  else
  {
    uint64_t v138 = v145;
    id v135 = v146;
    uint64_t v137 = v143;
    char v139 = v144;
    uint64_t v136 = v148;
  }
}

id sub_100099D70()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell____lazy_storage___selectionView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIImageView) init];
    [v4 setAccessibilityIgnoresInvertColors:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100099DF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
  sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v138, &qword_100705560);
  sub_1000CBE0C((uint64_t)v138, (uint64_t)&v139, &qword_100705560);
  if (sub_1000CBEB4(&v139) != 1)
  {
    uint64_t v9 = v152;
    long long v98 = v151;
    long long v99 = v150;
    long long v96 = v149;
    long long v97 = v146;
    long long v94 = v148;
    long long v95 = v147;
    uint64_t v10 = v139;
    uint64_t v11 = v145;
    long long v92 = v142;
    long long v93 = v144;
    long long v90 = v140;
    long long v91 = v143;
    long long v89 = v141;
LABEL_35:
    uint64_t result = (uint64_t)sub_10009A828(v138, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009AA50);
    *(void *)a1 = v10;
    *(_OWORD *)(a1 + 8) = v90;
    *(_OWORD *)(a1 + 24) = v89;
    *(_OWORD *)(a1 + 40) = v92;
    *(_OWORD *)(a1 + 56) = v91;
    *(_OWORD *)(a1 + 72) = v93;
    *(void *)(a1 + 88) = v11;
    long long v80 = v95;
    *(_OWORD *)(a1 + 96) = v97;
    *(_OWORD *)(a1 + 112) = v80;
    long long v81 = v96;
    *(_OWORD *)(a1 + 128) = v94;
    *(_OWORD *)(a1 + 144) = v81;
    long long v82 = v98;
    *(_OWORD *)(a1 + 160) = v99;
    *(_OWORD *)(a1 + 176) = v82;
    *(void *)(a1 + 192) = v9;
    return result;
  }
  *(void *)&long long v94 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection;
  char v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v8)
  {
    [v8 displayScale];
  }
  else
  {
    id v12 = [self mainScreen];
    [v12 scale];
  }
  *(void *)&long long v93 = v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits;
  sub_1000CBE0C(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v134, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v134, (uint64_t)v135, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v135) == 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  double v13 = (void *)v135[0];
  double v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *v14;
  uint64_t v86 = v7;
  id v88 = v13;
  if (v16)
  {
    double v17 = *(void **)(v1 + v94);
    if (v17)
    {
      id v18 = v13;
      [v17 displayScale];
    }
    else
    {
      double v34 = self;
      id v35 = v13;
      id v36 = [v34 mainScreen];
      [v36 scale];
    }
    [v13 capHeight];
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FloatingPointRoundingRule.down(_:), v3);
    CGFloat.init(_:roundedBy:inScale:)();
    if (v37 < 5.0) {
      double v38 = 10.0;
    }
    else {
      double v38 = v37 + v37;
    }
    sub_10009B86C();
    sub_10009E6C4(0, &qword_10070E2D0);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v40 = [self requestForChainedTags:isa tagDimension:v38];

    if (v40)
    {
      uint64_t v41 = *(void **)(v1 + v94);
      if (v41) {
        BOOL v42 = [v41 layoutDirection] == (id)1;
      }
      else {
        BOOL v42 = 0;
      }
      [v40 setLayoutDirection:v42];
      [v40 setSpacingType:1];
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing) == 1) {
        id v43 = [self lightTextColor];
      }
      else {
        id v43 = 0;
      }
      [v40 setSelectionOutlineColor:v43];

      id v44 = [self shared];
      [v44 sizeOfTagContentForRenderingRequest:v40];
      uint64_t v46 = v45;
      uint64_t v48 = v47;

      *(void *)&long long v95 = swift_allocObject();
      *(void *)(v95 + 16) = v40;
      *(void *)&long long v96 = v46;
      *(void *)&long long v99 = v48;
      id v32 = sub_10005578C;
      *(void *)&long long v98 = 0x4018000000000000;
    }
    else
    {
      *(void *)&long long v96 = 0;
      *(void *)&long long v99 = 0;
      *(void *)&long long v98 = 0;
      id v32 = 0;
      *(void *)&long long v95 = 0;
    }
    char v49 = sub_10009BA18();
    id v50 = (void *)sub_10009BF68(*(uint64_t *)&v38, 0, v49);
    uint64_t v28 = (uint64_t)v50;
    if (v50)
    {
      [v50 size];
      uint64_t v52 = v51;
      uint64_t v54 = v53;
      sub_10056F47C(v88);
      uint64_t v56 = v55;
      uint64_t v57 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v57;
      *(void *)(v58 + 24) = v28;
      uint64_t v28 = v58;
      uint64_t v23 = v52;
      uint64_t v24 = v54;
      uint64_t v26 = v56;
      uint64_t v27 = sub_1005741F4;
      *(void *)&long long v97 = 0x4010000000000000;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      *(void *)&long long v97 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
    }
    id v84 = (unint64_t *)sub_10009B780();
    uint64_t v85 = v59;
    swift_bridgeObjectRetain();
    uint64_t v30 = v99;
    uint64_t v31 = v98;
    uint64_t v25 = v97;
    uint64_t v33 = v95;
    uint64_t v29 = v96;
LABEL_29:
    uint64_t v60 = v93;
    *(void *)&long long v92 = v23;
    v137[0] = v23;
    *(void *)&long long v91 = v24;
    v137[1] = v24;
    *(void *)&long long v97 = v25;
    v137[2] = v25;
    *(void *)&long long v90 = v26;
    v137[3] = v26;
    *(void *)&long long v89 = v27;
    v137[4] = v27;
    uint64_t v87 = v28;
    v137[5] = v28;
    *(void *)&long long v96 = v29;
    v136[0] = v29;
    *(void *)&long long v99 = v30;
    v136[1] = v30;
    *(void *)&long long v98 = v31;
    v136[2] = v31;
    v136[3] = 0;
    *(void *)&long long v93 = v32;
    v136[4] = v32;
    v136[5] = v33;
    sub_1000CBE0C(v60, (uint64_t)v132, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v132, (uint64_t)v133, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v133) != 1)
    {
      *(void *)&long long v95 = v33;
      id v61 = v88;
      id v88 = sub_10009B76C();
      id v62 = *(void **)(v1 + v94);
      uint64_t v83 = a1;
      if (v62) {
        *(void *)&long long v94 = [v62 layoutDirection] == (id)1;
      }
      else {
        *(void *)&long long v94 = 0;
      }
      sub_1000CBE0C((uint64_t)v132, (uint64_t)v101, (uint64_t *)&unk_100705550);
      uint64_t v63 = v101[1];
      id v64 = v61;
      uint64_t v65 = v92;
      uint64_t v66 = v91;
      uint64_t v67 = v97;
      uint64_t v68 = v90;
      uint64_t v69 = v89;
      sub_10009ACB8(v92, v91, v97, v90, v89);
      sub_10009ACB8(v96, v99, v98, 0, v93);
      uint64_t v70 = v63;
      id v71 = v64;
      id v72 = v64;
      id v73 = v88;
      sub_10009C7C8(v84, v85, (uint64_t)v136, (uint64_t)v137, v70, v72, v88, v94, (uint64_t)v102);

      sub_10009AA40(v65, v66, v67, v68, v69);
      uint64_t v74 = v96;
      uint64_t v75 = v99;
      uint64_t v76 = v98;
      uint64_t v77 = v93;
      sub_10009AA40(v96, v99, v98, 0, v93);
      swift_bridgeObjectRelease();
      long long v112 = v102[8];
      long long v113 = v102[9];
      long long v114 = v102[10];
      long long v115 = v102[11];
      long long v108 = v102[4];
      long long v109 = v102[5];
      long long v110 = v102[6];
      long long v111 = v102[7];
      long long v104 = v102[0];
      long long v105 = v102[1];
      long long v106 = v102[2];
      long long v107 = v102[3];
      id v78 = v71;
      NSString v103 = v71;
      DOCSplitBrowserViewController.didCommitPreview(of:)(&v103);
      uint64_t v79 = v86;
      sub_1000CBE0C(v86, (uint64_t)v116, &qword_100705560);
      sub_1000CBE0C((uint64_t)&v103, v79, &qword_100705560);
      sub_10009A828(v116, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
      sub_10009AA40(v74, v75, v76, 0, v77);
      sub_10009AA40(v92, v91, v97, v90, v89);
      sub_1000CBE0C(v79, (uint64_t)v117, &qword_100705560);
      sub_1000CBE0C((uint64_t)v117, (uint64_t)&v118, &qword_100705560);
      uint64_t result = sub_1000CBEB4(&v118);
      if (result != 1)
      {
        sub_1000CBE0C((uint64_t)v117, (uint64_t)v100, &qword_100705560);
        sub_10009ABF0((uint64_t)v100);

        uint64_t v9 = v131;
        long long v98 = v130;
        long long v99 = v129;
        long long v96 = v128;
        long long v97 = v125;
        long long v94 = v127;
        long long v95 = v126;
        uint64_t v10 = v118;
        uint64_t v11 = v124;
        long long v92 = v121;
        long long v93 = v123;
        long long v90 = v119;
        long long v91 = v122;
        long long v89 = v120;
        a1 = v83;
        goto LABEL_35;
      }
      goto LABEL_38;
    }
LABEL_37:
    sub_10009AA40(v96, v99, v98, 0, v93);
    uint64_t result = sub_10009AA40(v92, v91, v97, v90, v89);
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (v19)
  {
    id v20 = v13;
    id v21 = [v19 collectionCreateButtonTitle];
    id v84 = (unint64_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v85 = v22;

    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    id v32 = 0;
    uint64_t v33 = 0;
    goto LABEL_29;
  }
LABEL_39:
  __break(1u);
  return result;
}

void *sub_10009A828(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

void *sub_10009A89C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10009AA40(a13, a14, a15, a16, a17);
    return (void *)sub_10009AA40(a19, a20, a21, a22, a23);
  }
  return result;
}

uint64_t sub_10009A978(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 152);
  uint64_t v14 = *(void *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 168);
  uint64_t v12 = *(void *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10009AA40(v4, v5, v6, v7, v8);
  sub_10009AA40(v14, v13, v12, v11, v10);
  return a1;
}

uint64_t sub_10009AA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5) {
    return swift_release();
  }
  return result;
}

void *sub_10009AA50(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (result)
  {
    id v23 = result;
    id v24 = a10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10009ACB8(a13, a14, a15, a16, a17);
    return (void *)sub_10009ACB8(a19, a20, a21, a22, a23);
  }
  return result;
}

uint64_t sub_10009AB2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 152);
  uint64_t v13 = *(void *)(a1 + 144);
  uint64_t v10 = *(void *)(a1 + 168);
  uint64_t v11 = *(void *)(a1 + 160);
  id v8 = *(id *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10009ACB8(v2, v3, v4, v5, v6);
  sub_10009ACB8(v7, v13, v12, v11, v10);
  return a1;
}

uint64_t sub_10009ABF0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 152);
  uint64_t v15 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 168);
  uint64_t v13 = *(void *)(a1 + 160);
  uint64_t v11 = *(void *)(a1 + 176);
  id v8 = *(id *)a1;
  id v9 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10009ACB8(v3, v4, v5, v6, v7);
  sub_10009ACB8(v15, v14, v13, v12, v11);
  return a1;
}

uint64_t sub_10009ACB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10009ACC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for UTType();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009B208(a1, (uint64_t)v35);
  sub_1000CBE70((uint64_t *)&unk_100706730);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v13 = v34;
  swift_getObjectType();
  if ([v13 isTrashed] & 1) != 0 || (DOCNode.isSharedServerNode.getter()) {
    goto LABEL_4;
  }
  id v15 = [a3 recentDocumentsContentTypes];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
LABEL_11:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  id v31 = a5;
  uint64_t v32 = a4;
  unint64_t v30 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v18 = v16 + v30;
  uint64_t v19 = *(void *)(v10 + 72);
  id v20 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v33 = v16;
  swift_bridgeObjectRetain();
  while (1)
  {
    id v21 = [v13 contentType];
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v21) = UTType.conforms(to:)();
    uint64_t v22 = *v20;
    (*v20)(v12, v9);
    if (v21) {
      break;
    }
    v18 += v19;
    if (!--v17)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v23 = *(void *)(v32 + 16);
  if (v23)
  {
    uint64_t v24 = v32 + v30;
    swift_bridgeObjectRetain();
    while (1)
    {
      id v25 = [v13 contentType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v25) = UTType.conforms(to:)();
      v22(v12, v9);
      if (v25) {
        goto LABEL_11;
      }
      v24 += v19;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (([v31 canHostAppPerformAction:2 targetNode:v13] & 1) == 0)
  {
LABEL_4:
    swift_unknownObjectRelease();
    return 0;
  }
  id v26 = [v13 cachedDomain];
  if (v26)
  {
    uint64_t v27 = v26;
    if (([v26 isEnabled] & 1) == 0)
    {
      swift_unknownObjectRelease();

      return 0;
    }
    unsigned int v28 = [v27 needsAuthentication];
    swift_unknownObjectRelease();

    return v28 ^ 1;
  }
  else
  {
    swift_unknownObjectRelease();
    return 1;
  }
}

uint64_t sub_10009B02C(uint64_t a1)
{
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 41;
  v3._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return a1;
}

uint64_t sub_10009B0E4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10009B264(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10009B208((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10009B208((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10009B1B8((uint64_t)v12);
  return v7;
}

uint64_t sub_10009B1B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10009B208(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10009B264(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10009B420(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10009B420(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10009B4B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10019FF6C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10019FF6C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10009B4B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10009B630(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10009B630(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_1000CBE70(&qword_100711B60);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _OWORD v4[2] = a1;
  void v4[3] = 2 * v5 - 64;
  return v4;
}

id sub_10009B69C(SEL *a1, void *a2)
{
  int v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim);
  if (v3 != 2)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    id v10 = [self *a1];
    return v10;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode))
  {
    char v9 = *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = v9 & 1;
    if ((v9 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  int v4 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
  BOOL v5 = (v4 & 1) != 0 || v4 == 2;
  char v6 = !v5;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = v6;
  if (!v5) {
    goto LABEL_16;
  }
LABEL_12:
  uint64_t v7 = *(void **)(v2 + *a2);

  return v7;
}

id sub_10009B76C()
{
  return sub_10009B69C((SEL *)&selRef_tertiaryLabelColor, &OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleColor);
}

void *sub_10009B780()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title + 8)) {
    return (void *)*v1;
  }
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (*v2)
  {
    int v3 = (void *)swift_unknownObjectRetain();
    *uint64_t v1 = sub_10009F0E8(v3);
    v1[1] = v4;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t result = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
    if (!result) {
      goto LABEL_9;
    }
    id v6 = [result collectionCreateButtonTitle];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    *uint64_t v1 = v7;
    v1[1] = v9;
  }
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (v1[1]) {
    return (void *)*v1;
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10009B86C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags;
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tags);
  if (!result)
  {
    uint64_t v3 = v0;
    uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess();
    if (*v4)
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100093E64(ObjectType, (uint64_t)v10);
      swift_unknownObjectRelease();
      sub_1000CBE0C((uint64_t)v10, (uint64_t)v11, (uint64_t *)&unk_10071CDF0);
      if (*(void *)&v11[0] != 1)
      {
        long long v15 = v11[2];
        long long v16 = v11[3];
        long long v17 = v11[4];
        uint64_t v18 = v12;
        long long v13 = v11[0];
        long long v14 = v11[1];
        uint64_t v9 = sub_1000F9DB8();
        sub_1002B9150((uint64_t)v10);
        *(void *)(v3 + v1) = v9;
LABEL_8:
        swift_bridgeObjectRelease();
        uint64_t result = *(void *)(v3 + v1);
        if (!result) {
          __break(1u);
        }
        return result;
      }
      if (*v4)
      {
        id v6 = [(id)swift_unknownObjectRetain() tags];
        id v7 = (id)DOCTagsFromFPTags();

        sub_10009E6C4(0, &qword_10070E2D0);
        uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)(v0 + v1) = v8;
        swift_unknownObjectRelease();
        goto LABEL_8;
      }
    }
    *(void *)(v0 + v1) = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_10009BA18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCNodeCollaborationType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v22[-v7];
  uint64_t v9 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance;
  uint64_t v10 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__statusAppearance);
  if (v10 == 10)
  {
    uint64_t v11 = (void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess();
    if (!*v11) {
      goto LABEL_8;
    }
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100093E64(ObjectType, (uint64_t)v24);
    swift_unknownObjectRelease();
    sub_1000CBE0C((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_10071CDF0);
    if (*(void *)&v25[0] != 1)
    {
      long long v29 = v25[2];
      long long v30 = v25[3];
      long long v31 = v25[4];
      uint64_t v32 = v26;
      long long v27 = v25[0];
      long long v28 = v25[1];
      uint64_t v10 = sub_1000F9FD8();
      sub_1002B9150((uint64_t)v24);
      goto LABEL_10;
    }
    long long v13 = *v11;
    if (!v13)
    {
LABEL_8:
      uint64_t v10 = 2;
LABEL_10:
      *(unsigned char *)(v1 + v9) = v10;
      return v10;
    }
    swift_getObjectType();
    if ([(id)swift_unknownObjectRetain() isExcludedFromSync]
      && [v13 isExternalDownloadPlaceholder])
    {
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
    if ([v13 isExcludedFromSync])
    {
      swift_unknownObjectRelease();
      uint64_t v10 = 4;
      goto LABEL_10;
    }
    long long v15 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
    if (v15 && ![v15 isFinished]
      || ([v13 isCopying] & 1) != 0)
    {
LABEL_17:
      swift_unknownObjectRelease();
      uint64_t v10 = 7;
      goto LABEL_10;
    }
    if ([v13 isDownloading])
    {
      id v16 = [v13 downloadingError];
      if (!v16) {
        goto LABEL_17;
      }
    }
    if (![v13 isCloudItem]
      || ([v13 isDownloading] & 1) != 0
      || ([v13 isExternalDownloadPlaceholder] & 1) != 0)
    {
LABEL_24:
      id v17 = [v13 uploadingError];
      if (v17 || (id v17 = [v13 downloadingError]) != 0)
      {
        swift_unknownObjectRelease();

        uint64_t v10 = 3;
      }
      else if ([v13 isCloudItem] {
             && [v13 isItemPinned]
      }
             && ([v13 isExternalDownloadPlaceholder] & 1) == 0)
      {
        swift_unknownObjectRelease();
        uint64_t v10 = 9;
      }
      else if (![v13 isCloudItem] {
             || ([v13 isUploaded] & 1) != 0
      }
             || ([v13 isExternalDownloadPlaceholder] & 1) != 0)
      {
        DOCNode.collaborationType.getter();
        (*(void (**)(unsigned __int8 *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
        int v18 = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v3 + 88))(v6, v2);
        if (v18 == enum case for DOCNodeCollaborationType.sharedWithYou(_:))
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 96))(v6, v2);
          int v19 = *v6;
          swift_unknownObjectRelease();
          if (v19) {
            uint64_t v10 = 6;
          }
          else {
            uint64_t v10 = 0;
          }
        }
        else if (v18 == enum case for DOCNodeCollaborationType.returnToSender(_:))
        {
          swift_unknownObjectRelease();
          uint64_t v10 = 8;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v6, v2);
          swift_unknownObjectRelease();
          uint64_t v10 = 2;
        }
        (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
      }
      else
      {
        swift_unknownObjectRelease();
        uint64_t v10 = 5;
      }
      goto LABEL_10;
    }
    if ([v13 isDownloaded])
    {
      if (![v13 isFolder]) {
        goto LABEL_24;
      }
      id v20 = [v13 cachedDomain];
      if (!v20) {
        goto LABEL_24;
      }
      id v21 = v20;
      if ([v20 isiCloudDriveProvider])
      {
        int v23 = FPProviderDomain.shouldUseDSEnumeration.getter();

        if ((v23 & 1) == 0) {
          goto LABEL_24;
        }
      }
      else
      {
      }
      if ([v13 isRecursivelyDownloaded]) {
        goto LABEL_24;
      }
    }
    swift_unknownObjectRelease();
    uint64_t v10 = 1;
    goto LABEL_10;
  }
  return v10;
}

uint64_t sub_10009BF68(uint64_t a1, char a2, char a3)
{
  uint64_t v3 = (void *)0xE700000000000000;
  uint64_t v4 = 0x6567617373656DLL;
  id v5 = 0;
  switch(a3)
  {
    case 1:
      uint64_t v4 = 0xD000000000000015;
      id v6 = "icloud.and.arrow.down";
      goto LABEL_8;
    case 2:
    case 7:
      return (uint64_t)v5;
    case 3:
      uint64_t v7 = "exclamationmark.icloud";
      goto LABEL_5;
    case 4:
      uint64_t v3 = (void *)0xEC0000006873616CLL;
      uint64_t v4 = 0x732E64756F6C6369;
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 5:
      uint64_t v3 = (void *)0xED00006465687361;
      uint64_t v4 = 0x642E64756F6C6369;
      goto LABEL_13;
    case 6:
      uint64_t v4 = 0xD000000000000012;
      id v6 = "arrow.down.message";
LABEL_8:
      uint64_t v3 = (void *)((unint64_t)(v6 - 32) | 0x8000000000000000);
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 8:
      uint64_t v3 = (void *)0xE800000000000000;
      uint64_t v4 = 0x65706F6C65766E65;
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    case 9:
      uint64_t v7 = "arrow.down.circle.fill";
LABEL_5:
      uint64_t v3 = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
      uint64_t v4 = 0xD000000000000016;
      if (a2) {
        goto LABEL_18;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (a2)
      {
LABEL_18:
        swift_bridgeObjectRetain();
        NSString v15 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v5 = [self systemImageNamed:v15];

        if (!v5)
        {
          id v17 = self;
          swift_bridgeObjectRetain();
          NSString v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v5 = [v17 _systemImageNamed:v18 withConfiguration:0];

          if (v5) {
            goto LABEL_16;
          }
          goto LABEL_22;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
LABEL_14:
      id v9 = [self configurationWithPointSize:*(double *)&a1];
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v5 = [self systemImageNamed:v10 withConfiguration:v9];

      if (v5) {
        goto LABEL_19;
      }
      id v11 = [self configurationWithPointSize:*(double *)&a1];
      uint64_t v12 = self;
      swift_bridgeObjectRetain();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = [v12 _systemImageNamed:v13 withConfiguration:v11];

      id v5 = v14;
      if (v5)
      {
LABEL_16:
        swift_bridgeObjectRelease();

        return (uint64_t)v5;
      }
LABEL_22:
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = v4;
      v19._unint64_t object = v3;
      String.append(_:)(v19);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
  }
}

void **sub_10009C304(const __CFAttributedString *a1, uint64_t a2, double a3, double a4, double a5)
{
  CFAttributedStringRef v9 = a1;
  NSString v10 = CTTypesetterCreateWithAttributedString(a1);
  unint64_t v11 = (unint64_t)&_swiftEmptyArrayStorage;
  unint64_t v46 = (unint64_t)&_swiftEmptyArrayStorage;
  id v12 = [(__CFAttributedString *)v9 length];
  if ((uint64_t)v12 > 0)
  {
    uint64_t v13 = (uint64_t)v12;
    if ((unint64_t)&_swiftEmptyArrayStorage >> 62) {
      goto LABEL_32;
    }
    if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < a2)
    {
      do
      {
        CFIndex v14 = 0;
        uint64_t v15 = a2 - 1;
        uint64_t v43 = v13;
        uint64_t v44 = a2;
        uint64_t v41 = v10;
        uint64_t v42 = a2 - 1;
        while (1)
        {
          if (v11 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v16 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          double v17 = v14 ? 0.0 : a4;
          double v18 = a3 - v17;
          if (v16 == v15)
          {
            double v19 = v18 - a5;
            v47.location = v14;
            v47.length = 0;
            CTLineRef Line = CTTypesetterCreateLine(v10, v47);
            type metadata accessor for DOCUnicode();
            id v21 = Line;
            uint64_t v22 = (void *)static DOCUnicode.horizontalEllipsis.getter();
            dispatch thunk of DOCUnicode.rawValue.getter();

            id v23 = [(__CFAttributedString *)v9 attributesAtIndex:0 effectiveRange:0];
            type metadata accessor for Key(0);
            CFAttributedStringRef v24 = v9;
            sub_10009CBF0();
            static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v25 = objc_allocWithZone((Class)NSAttributedString);
            NSString v26 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            CFAttributedStringRef v28 = (const __CFAttributedString *)[v25 initWithString:v26 attributes:isa];

            long long v29 = CTLineCreateWithAttributedString(v28);
            TruncatedCTLineRef Line = CTLineCreateTruncatedLine(v21, v19, kCTLineTruncationMiddle, v29);

            if (TruncatedLine)
            {

              CFIndex v31 = 0;
              id v21 = TruncatedLine;
            }
            else
            {
              id v33 = sub_100502218();
              static os_log_type_t.error.getter();
              sub_1000CBE70((uint64_t *)&unk_100708800);
              uint64_t v34 = swift_allocObject();
              *(_OWORD *)(v34 + 16) = xmmword_1005A0030;
              *(void *)(v34 + 56) = sub_10009E6C4(0, &qword_10070E2E8);
              *(void *)(v34 + 64) = sub_100502260();
              *(void *)(v34 + 32) = v24;
              CFAttributedStringRef v35 = v24;
              os_log(_:dso:log:type:_:)();

              swift_bridgeObjectRelease();
              CFIndex v31 = 0;
            }
            CFAttributedStringRef v9 = v24;
            uint64_t v13 = v43;
            a2 = v44;
            NSString v10 = v41;
            uint64_t v15 = v42;
          }
          else
          {
            double v45 = v18;
            CFIndex v32 = CTTypesetterSuggestLineBreak(v10, v14, v18);
            if (__OFADD__(v14, v32)) {
              goto LABEL_31;
            }
            CFIndex v31 = v32;
            if (v14 + v32 >= v13)
            {
              swift_beginAccess();
              CFIndex v31 = CTTypesetterSuggestLineBreak(v10, v14, v45 - a5);
            }
            v48.location = v14;
            v48.length = v31;
            id v21 = CTTypesetterCreateLine(v10, v48);
          }
          id v36 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          unint64_t v11 = (unint64_t)&v46;
          specialized Array._endMutation()();

          BOOL v37 = __OFADD__(v14, v31);
          v14 += v31;
          if (v37) {
            break;
          }
          if (v14 >= v13)
          {

            return (void **)v46;
          }
          unint64_t v11 = v46;
          if (v46 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v38 >= a2) {
              goto LABEL_33;
            }
          }
          else if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2)
          {
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        swift_bridgeObjectRetain();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      while (v39 < a2);
    }
  }
LABEL_33:

  return (void **)v11;
}

double sub_10009C7C8@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  sub_1000CBE0C(a4, (uint64_t)v73, &qword_10071A338);
  double v61 = *(double *)v73;
  double v15 = *(double *)&v73[2];
  double v70 = *(double *)&v73[1];
  uint64_t v16 = v73[3];
  uint64_t v17 = v73[5];
  uint64_t v69 = v73[4];
  sub_1000CBE0C(a3, (uint64_t)v72, &qword_10071A338);
  double v19 = *(double *)v72;
  uint64_t v18 = v72[1];
  double v21 = *(double *)&v72[2];
  uint64_t v20 = v72[3];
  uint64_t v23 = v72[4];
  uint64_t v22 = v72[5];
  sub_1000CBE0C(a3, (uint64_t)&v77, &qword_10071A338);
  uint64_t v24 = v78;
  double v25 = 0.0;
  if (v78)
  {
    uint64_t v26 = v79;
    swift_retain();
    UICeilToScale();
    double v19 = v27;
    UICeilToScale();
    uint64_t v64 = v28;
    UIPointRoundToScale();
    double v21 = v29;
    uint64_t v63 = v30;
    double v31 = v19 + v29;
    uint64_t v62 = v24;
    uint64_t v22 = v26;
  }
  else
  {
    uint64_t v62 = v23;
    uint64_t v63 = v20;
    uint64_t v64 = v18;
    double v31 = 0.0;
  }
  double v65 = v19;
  sub_1000CBE0C(a4, (uint64_t)&v74, &qword_10071A338);
  uint64_t v32 = v75;
  uint64_t v33 = v17;
  if (v75)
  {
    uint64_t v34 = v76;
    swift_retain();
    UICeilToScale();
    double v36 = v35;
    UICeilToScale();
    double v70 = v37;
    UIPointRoundToScale();
    double v39 = v38;
    uint64_t v16 = v40;
    double v25 = v36 + v38;
    uint64_t v69 = v32;
    uint64_t v33 = v34;
  }
  else
  {
    double v36 = v61;
    double v39 = v15;
  }
  UICeilToScale();
  double v42 = v41;
  sub_1000CBE70((uint64_t *)&unk_100706750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v44 = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
  *(void *)(inited + 40) = a6;
  *(void *)(inited + 64) = v44;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  *(void *)(inited + 104) = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  *(void *)(inited + 80) = a7;
  swift_bridgeObjectRetain();
  double v45 = NSFontAttributeName;
  unint64_t v46 = a6;
  CFRange v47 = NSForegroundColorAttributeName;
  id v48 = a7;
  sub_10009CC48(inited);
  id v49 = objc_allocWithZone((Class)NSAttributedString);
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10009CBF0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v52 = (const __CFAttributedString *)[v49 initWithString:v50 attributes:isa];

  uint64_t v53 = sub_10009C304(v52, a5, v42, v31, v25);
  double v54 = sub_10009D348((unint64_t)v53, v46, v31, v25);
  uint64_t v56 = v55;
  sub_10009CC70(v55, a1, a2, (uint64_t)v71, v54);
  long long v57 = v71[3];
  long long v58 = v71[0];
  long long v59 = v71[1];
  *(_OWORD *)a9 = v71[2];
  *(_OWORD *)(a9 + 16) = v57;
  *(_OWORD *)(a9 + 32) = v58;
  *(_OWORD *)(a9 + 48) = v59;
  *(void *)(a9 + 64) = v52;
  *(void *)(a9 + 72) = v53;
  *(void *)(a9 + 80) = v56;
  *(double *)(a9 + 88) = v65;
  *(void *)(a9 + 96) = v64;
  *(double *)(a9 + 104) = v21;
  *(void *)(a9 + 112) = v63;
  *(void *)(a9 + 120) = v62;
  *(void *)(a9 + 128) = v22;
  double result = v70;
  *(double *)(a9 + 136) = v36;
  *(double *)(a9 + 144) = v70;
  *(double *)(a9 + 152) = v39;
  *(void *)(a9 + 160) = v16;
  *(void *)(a9 + 168) = v69;
  *(void *)(a9 + 176) = v33;
  *(void *)(a9 + 184) = a8;
  return result;
}

void sub_10009CB94(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    ForeignTypeMetadatCGFloat a = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for Key(uint64_t a1)
{
}

unint64_t sub_10009CBF0()
{
  unint64_t result = qword_100706230;
  if (!qword_100706230)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100706230);
  }
  return result;
}

unint64_t sub_10009CC48(uint64_t a1)
{
  return sub_1000A5174(a1, &qword_1007177B0, &qword_1007177B8, (uint64_t (*)(uint64_t))sub_1000A54AC);
}

uint64_t sub_10009CC70@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = sub_1000CBE70(&qword_10071A340);
  __chkstk_darwin(v10);
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CharacterSet();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat bottom = UIEdgeInsetsZero.bottom;
  CGFloat right = UIEdgeInsetsZero.right;
  double left = UIEdgeInsetsZero.left;
  double top = UIEdgeInsetsZero.top;
  double v42 = right;
  double v43 = bottom;
  if (qword_100705288 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10009D098(v10, (uint64_t)qword_10071A258);
  sub_10009D2E0(v19, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1005021B8((uint64_t)v12);
    id v20 = sub_100502218();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v40 = a2;
    uint64_t v41 = a3;
    sub_10009D28C();
    StringProtocol.rangeOfCharacter(from:options:range:)();
    char v22 = v21;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if ((v22 & 1) == 0)
    {
      CTFontGetLanguageAwareOutsets();
      double left = -left;
      double top = -top;
      double v42 = -v42;
      double v43 = -v43;
    }
  }
  int64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v40 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_10009D10C(0, v23, 0);
    uint64_t v24 = v40;
    uint64_t v25 = a1 + 56;
    do
    {
      CGFloat Height = CGRectGetHeight(*(CGRect *)(v25 - 24));
      uint64_t v40 = v24;
      unint64_t v28 = v24[2];
      unint64_t v27 = v24[3];
      unint64_t v29 = v28 + 1;
      if (v28 >= v27 >> 1)
      {
        sub_10009D10C(v27 > 1, v28 + 1, 1);
        uint64_t v24 = v40;
      }
      _OWORD v24[2] = v29;
      *(CGFloat *)&v24[v28 + 4] = Height;
      v25 += 32;
      --v23;
    }
    while (v23);
  }
  else
  {
    uint64_t v24 = (unint64_t *)&_swiftEmptyArrayStorage;
    unint64_t v29 = *((void *)&_swiftEmptyArrayStorage + 2);
    if (!v29)
    {
      double v31 = 0.0;
      goto LABEL_22;
    }
  }
  if (v29 >= 2)
  {
    uint64_t v32 = 0;
    unint64_t v30 = v29 & 0xFFFFFFFFFFFFFFFELL;
    double v31 = 0.0;
    do
    {
      double v31 = v31 + *(double *)&v24[v32 + 4] + *(double *)&v24[v32 + 5];
      v32 += 2;
    }
    while (v30 != v32);
    goto LABEL_21;
  }
  unint64_t v30 = 0;
  double v31 = 0.0;
  do
  {
    double v33 = *(double *)&v24[v30++ + 4];
    double v31 = v31 + v33;
LABEL_21:
    ;
  }
  while (v29 != v30);
LABEL_22:
  swift_bridgeObjectRelease();
  sub_10009D0D0(0.0, 0.0, a5, v31, top, left);
  uint64_t result = UIRectIntegralWithScale();
  *(void *)a4 = v35;
  *(void *)(a4 + 8) = v36;
  *(void *)(a4 + 16) = v37;
  *(void *)(a4 + 24) = v38;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(double *)(a4 + 48) = a5;
  *(double *)(a4 + 56) = v31;
  return result;
}

uint64_t sub_10009D098(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

double sub_10009D0D0(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

double sub_10009D0EC(double a1)
{
  return a1 + 2.0;
}

uint64_t sub_10009D10C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009D12C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10009D12C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708C10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10009D28C()
{
  unint64_t result = qword_10070CE70;
  if (!qword_10070CE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070CE70);
  }
  return result;
}

uint64_t sub_10009D2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071A340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_10009D348(unint64_t a1, double *font, double a3, double a4)
{
  uint64_t v10 = a1;
  unint64_t v11 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  CTFontGetAscent((CTFontRef)font);
  CGFloat Descent = CTFontGetDescent((CTFontRef)font);
  CGFloat Leading = CTFontGetLeading((CTFontRef)font);
  if (!v11)
  {
    uint64_t v15 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_5;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    font = (double *)_swiftEmptyArrayStorage;
    uint64_t v19 = _swiftEmptyArrayStorage[2];
    if (!v19) {
      goto LABEL_41;
    }
    goto LABEL_27;
  }
  if (v10 < 0) {
    font = (double *)v10;
  }
  else {
    font = (double *)(v10 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  if (!v15) {
    goto LABEL_18;
  }
LABEL_5:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_56;
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = 0;
    font = (double *)_swiftEmptyArrayStorage;
    do
    {
      uint64_t v16 = (const __CTLine *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      double TypographicBounds = CTLineGetTypographicBounds(v16, 0, 0, 0);
      TrailingWhitespacedouble Width = CTLineGetTrailingWhitespaceWidth(v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        font = (double *)sub_10009D99C(0, *((void *)font + 2) + 1, 1, font);
      }
      unint64_t v18 = *((void *)font + 2);
      unint64_t v17 = *((void *)font + 3);
      if (v18 >= v17 >> 1) {
        font = (double *)sub_10009D99C((void *)(v17 > 1), v18 + 1, 1, font);
      }
      uint64_t v4 = (const __CTLine *)((char *)v4 + 1);
      *((void *)font + 2) = v18 + 1;
      font[v18 + 4] = TypographicBounds - TrailingWhitespaceWidth;
      swift_unknownObjectRelease();
    }
    while ((const __CTLine *)v15 != v4);
  }
  else
  {
    uint64_t v20 = 0;
    font = (double *)_swiftEmptyArrayStorage;
    do
    {
      uint64_t v4 = (const __CTLine *)*(id *)(v10 + 8 * v20 + 32);
      double TypographicBounds = CTLineGetTypographicBounds(v4, 0, 0, 0);
      TrailingWhitespacedouble Width = CTLineGetTrailingWhitespaceWidth(v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        font = (double *)sub_10009D99C(0, *((void *)font + 2) + 1, 1, font);
      }
      unint64_t v22 = *((void *)font + 2);
      unint64_t v21 = *((void *)font + 3);
      if (v22 >= v21 >> 1) {
        font = (double *)sub_10009D99C((void *)(v21 > 1), v22 + 1, 1, font);
      }
      ++v20;
      *((void *)font + 2) = v22 + 1;
      font[v22 + 4] = TypographicBounds - TrailingWhitespaceWidth;
    }
    while (v15 != v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)font + 2);
  if (v19)
  {
LABEL_27:
    if (!__OFSUB__(v12, 1))
    {
      if (v12 == 1) {
        double v23 = a4;
      }
      else {
        double v23 = 0.0;
      }
      double v24 = font[4] + a3 + v23;
      if (v24 < 0.0) {
        double v24 = 0.0;
      }
      uint64_t v25 = v19 - 1;
      if (v25)
      {
        uint64_t v26 = v12 - 2;
        unint64_t v27 = font + 5;
        do
        {
          double v28 = *v27++;
          double v29 = v28;
          if (v26) {
            double v30 = 0.0;
          }
          else {
            double v30 = a4;
          }
          double v31 = v29 + 0.0 + v30;
          if (v24 <= v31) {
            double v24 = v31;
          }
          --v26;
          --v25;
        }
        while (v25);
      }
      goto LABEL_41;
    }
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_41:
  UICeilToScale();
  double TypographicBounds = v32;
  uint64_t v4 = (const __CTLine *)*((void *)font + 2);
  if (!v4) {
    goto LABEL_53;
  }
  if (__OFSUB__(v12, 1)) {
    goto LABEL_57;
  }
  UIRectIntegralWithScale();
  a3 = v33;
  CGFloat Descent = v34;
  CGFloat Leading = v35;
  TrailingWhitespacedouble Width = v36;
  uint64_t v10 = (uint64_t)_swiftEmptyArrayStorage;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_58:
  }
    uint64_t v10 = (uint64_t)sub_10009D88C(0, *(void *)(v10 + 16) + 1, 1, (void *)v10);
  unint64_t v38 = *(void *)(v10 + 16);
  unint64_t v37 = *(void *)(v10 + 24);
  if (v38 >= v37 >> 1) {
    uint64_t v10 = (uint64_t)sub_10009D88C((void *)(v37 > 1), v38 + 1, 1, (void *)v10);
  }
  *(void *)(v10 + 16) = v38 + 1;
  uint64_t v39 = (double *)(v10 + 32 * v38);
  v39[4] = a3;
  v39[5] = Descent;
  v39[6] = Leading;
  v39[7] = TrailingWhitespaceWidth;
  uint64_t v40 = (char *)v4 - 1;
  if (v4 != (const __CTLine *)1)
  {
    uint64_t v41 = v12 - 2;
    double v42 = (char *)(font + 5);
    do
    {
      UIRectIntegralWithScale();
      uint64_t v44 = v43;
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = (uint64_t)sub_10009D88C(0, *(void *)(v10 + 16) + 1, 1, (void *)v10);
      }
      unint64_t v52 = *(void *)(v10 + 16);
      unint64_t v51 = *(void *)(v10 + 24);
      if (v52 >= v51 >> 1) {
        uint64_t v10 = (uint64_t)sub_10009D88C((void *)(v51 > 1), v52 + 1, 1, (void *)v10);
      }
      *(void *)(v10 + 16) = v52 + 1;
      uint64_t v53 = (void *)(v10 + 32 * v52);
      v53[4] = v44;
      v53[5] = v46;
      v53[6] = v48;
      v53[7] = v50;
      --v41;
      v42 += 8;
      --v40;
    }
    while (v40);
  }
LABEL_53:
  swift_bridgeObjectRelease();
  return TypographicBounds;
}

void *sub_10009D88C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708C18);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009DAAC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10009D99C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708C10);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009DB98(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10009DAAC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10009DB98(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009DC84(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t type metadata accessor for ScrollPositionInfo.ItemOffset(uint64_t a1)
{
  return sub_10009E984(a1, qword_10070AAD0);
}

void sub_10009DE78(void *a1, char a2)
{
  uint64_t v3 = v2;
  id v6 = [v2 childViewControllers];
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  char v8 = sub_10009EDC4((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  if ([a1 wantsAppearanceOverride] && (v8 & 1) == 0)
  {
    if (sub_1000B6B68()) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(ObjectType, v10);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      [a1 setAppearance:v12];
    }
    goto LABEL_9;
  }
  unsigned int v9 = [a1 wantsAppearanceOverride];
  if (v8) {
    goto LABEL_21;
  }
  if (v9) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x110))(Strong);
  BOOL v15 = *(void (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *a1) + 0xE0);
  uint64_t v16 = swift_unknownObjectRetain();
  v15(v16, &off_1006A2B00);
  *(void *)((char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing + 8) = &off_1006A2B10;
  swift_unknownObjectWeakAssign();
  uint64_t v17 = *(void **)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  if (v17) {
    id v18 = *(id *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  }
  else {
    id v18 = [v3 navigationItem];
  }
  uint64_t v19 = *(void **)((char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  *(void *)((char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem) = v18;
  id v20 = v18;
  id v21 = v17;

  uint64_t v22 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  *((unsigned char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
  id v23 = [a1 viewIfLoaded];
  id v24 = [v23 window];

  if (v24) {
    sub_1000A6988();
  }

  uint64_t v25 = &v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate];
  swift_unknownObjectWeakLoadStrong();
  *(void *)((char *)a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate + 8) = *((void *)v25 + 1);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(void *)((char *)a1
            + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems) = *(void *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v22) = 0;
  id v26 = [a1 viewIfLoaded];
  id v27 = [v26 window];

  if (v27) {
    sub_1000A6988();
  }
  *(void *)((char *)a1
            + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems) = *(void *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v22) = 0;
  id v28 = [a1 viewIfLoaded];
  id v29 = [v28 window];

  if (v29) {
    sub_1000A6988();
  }
  sub_1000A6864(v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems]);
  if ([v3 _appearState] == 1 || objc_msgSend(v3, "_appearState") == 2) {
    [a1 beginAppearanceTransition:1 animated:0];
  }
LABEL_21:
  [v3 addChildViewController:a1];
  if (a2)
  {
    id v30 = [a1 view];
    if (!v30)
    {
      __break(1u);
      goto LABEL_45;
    }
    double v31 = v30;
    id v32 = [v30 superview];

    id v33 = [v3 view];
    id v34 = v33;
    if (v32)
    {

      if (v34)
      {

        if (v32 == v34) {
          goto LABEL_35;
        }
      }
LABEL_29:
      id v35 = [a1 view];
      if (v35)
      {
        double v36 = v35;
        id v37 = [v3 view];
        if (v37)
        {
          unint64_t v38 = v37;
          [v37 bounds];
          double v40 = v39;
          double v42 = v41;
          double v44 = v43;
          double v46 = v45;

          [v36 setFrame:v40, v42, v44, v46];
          id v47 = [a1 view];
          if (v47)
          {
            uint64_t v48 = v47;
            [v47 setAutoresizingMask:18];

            id v49 = [v3 view];
            if (v49)
            {
              uint64_t v50 = v49;
              id v51 = [a1 view];
              if (v51)
              {
                unint64_t v52 = v51;
                [v50 addSubview:v51];

                goto LABEL_35;
              }
LABEL_49:
              __break(1u);
              return;
            }
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v33)
    {

      goto LABEL_29;
    }
  }
LABEL_35:
  id v53 = [a1 viewIfLoaded];
  if (v53)
  {
    double v54 = v53;
    [v53 setHidden:0];
  }
  if ((v8 & 1) == 0)
  {
    [a1 didMoveToParentViewController:v3];
    if ([v3 _appearState] == 1 || objc_msgSend(v3, "_appearState") == 2)
    {
      [a1 endAppearanceTransition];
    }
  }
}

id sub_10009E55C()
{
  id v1 = [v0 splitViewController];
  if (v1)
  {
    uint64_t v2 = v1;
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = [v3 fullDocumentManagerViewController];

      if (v4) {
        goto LABEL_8;
      }
    }
    else
    {
    }
  }
  sub_10009E6C4(0, (unint64_t *)&unk_100711B80);
  uint64_t v5 = UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)();
  if (v5)
  {
    id v4 = (id)v5;
    goto LABEL_8;
  }
  id v8 = [v0 viewIfLoaded];
  if (!v8) {
    goto LABEL_13;
  }
  unsigned int v9 = v8;
  id v6 = [v8 window];

  if (!v6)
  {
LABEL_14:
    id v7 = [v0 traitCollection];
    goto LABEL_15;
  }
  id v4 = [v6 rootViewController];

  if (!v4)
  {
LABEL_13:
    id v6 = 0;
    goto LABEL_14;
  }
LABEL_8:
  id v6 = v4;
  id v7 = [v6 traitCollection];

  if (!v7) {
    goto LABEL_14;
  }
LABEL_15:

  return v7;
}

uint64_t sub_10009E6C4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void DOCItemCollectionViewController.splitViewController.getter()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v2 + 16) & 1) != 0
      || (id v3 = *(id *)v2,
          unsigned int v4 = objc_msgSend(v3, "doc_displaysSearchResults"),
          v3,
          !v4)
      || (id v5 = [v0 presentingViewController]) == 0
      || (id v6 = v5,
          id v7 = [v5 splitViewController],
          v6,
          !v7))
    {
      v8.receiver = v0;
      v8.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
      [super splitViewController];
    }
  }
  else
  {
    __break(1u);
  }
}

id DOCItemCollectionViewController.traitCollection.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v12.receiver = v0;
  v12.super_class = v2;
  id v3 = [super traitCollection];
  sub_10009E9DC();
  UITraitCollection.subscript.getter();

  unsigned int v4 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (v11 == *(void *)v4)
  {
    v9.receiver = v1;
    v9.super_class = v2;
    id v5 = [super traitCollection];
    return v5;
  }
  else
  {
    v10.receiver = v1;
    v10.super_class = v2;
    id v7 = [super traitCollection];
    __chkstk_darwin(v7);
    uint64_t v8 = UITraitCollection.modifyingTraits(_:)();

    return (id)v8;
  }
}

uint64_t sub_10009E984(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DOCItemCollectionViewController(uint64_t a1)
{
  return sub_10009E984(a1, qword_10070A518);
}

unint64_t sub_10009E9DC()
{
  unint64_t result = qword_10070A1B0;
  if (!qword_10070A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070A1B0);
  }
  return result;
}

id sub_10009EA30(char *a1)
{
  id v2 = [a1 splitViewController];
  if (!v2
    || (id v3 = v2,
        id v4 = objc_msgSend(v2, "doc_splitViewState"),
        v3,
        LOBYTE(v3) = [v4 isSidebarShown],
        v4,
        (v3 & 1) == 0))
  {
    if ([a1 enclosingTabSwitcherStyle] == (id)2) {
      goto LABEL_7;
    }
  }
  if ([self _UIPTabInfrastructureEnabled])
  {
    id result = [a1 splitViewController];
    if (!result) {
      return result;
    }
    id v6 = result;
    id v7 = [result doc_splitViewState];

    LODWORD(v6) = [v7 isSidebarShownInOverlay];
    if (v6)
    {
LABEL_7:
      id v8 = [a1 viewIfLoaded];
      objc_super v9 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
      swift_beginAccess();
      if (*(void *)v9 == 2)
      {
        if (!v8) {
          return 0;
        }
        id v10 = [v8 window];

        id v8 = v10;
        if (!v10) {
          return 0;
        }
LABEL_13:
        [v8 bounds];
        CGFloat Width = CGRectGetWidth(v12);

        return *(id *)&Width;
      }
      if (v8) {
        goto LABEL_13;
      }
    }
  }
  return 0;
}

uint64_t sub_10009EC34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      id v8 = v7;
      sub_10009E6C4(0, (unint64_t *)a3);
      a3 = static NSObject.== infix(_:_:)();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10009EDC4(uint64_t a1, unint64_t a2)
{
  return sub_10009EC34(a1, a2, (uint64_t)&qword_100707710);
}

uint64_t sub_10009EDD8(unint64_t a1)
{
  return sub_10009DC84(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10009EEB4);
}

uint64_t sub_10009EDF0(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_10009EEB4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0((unint64_t *)&unk_100708630, (uint64_t *)&unk_100708620);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70((uint64_t *)&unk_100708620);
          unint64_t v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10009F0E8(void *a1)
{
  unsigned __int8 v3 = sub_10009F23C();
  if (!*(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8))
  {
    swift_getObjectType();
    return (id)DOCNode.displayName(withHiddenPathExtension:)((v3 & 1) == 0)._countAndFlagsBits;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
  swift_bridgeObjectRetain();
  id result = [a1 filename];
  if (result)
  {
    unint64_t v6 = result;
    id v7 = [result pathExtension];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    if (v3)
    {
      v11._uint64_t countAndFlagsBits = v8;
      v11._unint64_t object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v12._uint64_t countAndFlagsBits = 46;
      v12._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    return (id)v4;
  }
  __break(1u);
  return result;
}

id sub_10009F23C()
{
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  id result = (id)swift_beginAccess();
  id v7 = *v5;
  if (!v7)
  {
    char v13 = 1;
    return (id)(v13 & 1);
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8))
  {
    id result = [(id)swift_unknownObjectRetain() filename];
    if (result)
    {
      uint64_t v8 = result;
      id v9 = [result pathExtension];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id result = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
      if (result)
      {
        if ([result shouldShowFileExtensions]) {
          goto LABEL_9;
        }
        if (qword_1007051D0 != -1) {
          swift_once();
        }
        id v10 = [v7 contentType];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        char v11 = sub_1000A3170();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        if (v11)
        {
LABEL_9:
          uint64_t v12 = String.count.getter();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          char v13 = v12 > 0;
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          char v13 = 0;
        }
        return (id)(v13 & 1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    id v14 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
    if (v14)
    {
      swift_unknownObjectRetain();
      if ([v14 shouldShowFileExtensions])
      {
        swift_unknownObjectRelease();
        char v13 = 1;
      }
      else
      {
        if (qword_1007051D0 != -1) {
          swift_once();
        }
        id v15 = [v7 contentType];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        char v13 = sub_1000A3170();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        swift_unknownObjectRelease();
      }
      return (id)(v13 & 1);
    }
  }
  __break(1u);
  return result;
}

void sub_10009F554()
{
  uint64_t v1 = v0;
  sub_10009F620();
  uint64_t v2 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *v2;
    if ([v1 isHighlighted]
      && v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics + 9] == 1)
    {
      uint64_t v4 = 2;
    }
    else if (sub_1000A03F4())
    {
      uint64_t v4 = 3;
    }
    else
    {
      uint64_t v4 = 0;
    }
    [*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] setDrawMode:v4];
  }
  sub_1000907DC();
}

void sub_10009F620()
{
  uint64_t v1 = v0;
  uint64_t v2 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  id v3 = (char *)*v2;
  if (*v2)
  {
    uint64_t v4 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView;
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView];
    if (v5)
    {
      unint64_t v6 = self;
      id v7 = v3;
      id v8 = v5;
      id v9 = [v6 standardUserDefaults];
      NSString v10 = String._bridgeToObjectiveC()();
      unsigned __int8 v11 = [v9 BOOLForKey:v10];

      if ((v11 & 1) == 0)
      {
        if (!*v2 || (id v12 = *v2, v13 = sub_1000A01D8(), v12, (v13 & 1) == 0))
        {
          [v8 removeFromSuperview];
          uint64_t v68 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
          uint64_t v69 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
          if (v69) {
            [v69 removeFromSuperview];
          }
          [*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] setClipsToBounds:1];
          double v70 = *(void **)&v1[v4];
          *(void *)&v1[v4] = 0;

          id v71 = *(void **)&v1[v68];
          *(void *)&v1[v68] = 0;

          id v72 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint];
          *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint] = 0;

          id v73 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint];
          *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint] = 0;

          uint64_t v74 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint];
          *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint] = 0;

          uint64_t v75 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint];
          *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint] = 0;

          uint64_t v76 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint;
          uint64_t v77 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint];
          *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint] = 0;

          id v3 = *(char **)&v1[v76];
          *(void *)&v1[v76] = 0;

          goto LABEL_42;
        }
      }
    }
    else
    {
      id v14 = v3;
    }
    if (sub_1000A0030())
    {
      long long v104 = v3;
      id v15 = [objc_allocWithZone((Class)UIProgressView) init];
      uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
      [v16 addSubview:v15];
      uint64_t v17 = *(void **)&v1[v4];
      uint64_t v103 = v4;
      *(void *)&v1[v4] = v15;
      id v18 = v15;

      [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v19 = [v18 bottomAnchor];
      id v20 = [v16 bottomAnchor];
      id v21 = [v19 constraintEqualToAnchor:v20 constant:-12.0];

      uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint];
      uint64_t v101 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint;
      *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressBottomConstraint] = v21;

      id v23 = [v18 heightAnchor];
      id v24 = [v23 constraintEqualToConstant:4.0];

      uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint];
      uint64_t v100 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint;
      *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressHeightConstraint] = v24;

      id v26 = [v18 leadingAnchor];
      id v27 = [v16 leadingAnchor];
      id v28 = [v26 constraintEqualToAnchor:v27 constant:12.0];

      uint64_t v29 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint;
      id v30 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint];
      *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressLeadingConstraint] = v28;

      id v102 = v18;
      id v31 = [v18 trailingAnchor];
      id v32 = [v16 trailingAnchor];
      id v33 = [v31 constraintEqualToAnchor:v32 constant:-12.0];

      id v34 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint];
      uint64_t v99 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint;
      *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalProgressTrailingConstraint] = v33;

      uint64_t v35 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton;
      double v36 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
      if (!v36)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        id v37 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v38 = objc_allocWithZone((Class)type metadata accessor for DOCCircularCancelButton());
        id v39 = sub_1004034D8(v37);
        double v40 = *(void **)&v1[v35];
        *(void *)&v1[v35] = v39;

        double v36 = *(void **)&v1[v35];
        if (!v36)
        {
          __break(1u);
          return;
        }
      }
      id v41 = v36;
      id v42 = [v1 contentView];
      [v42 addSubview:v41];

      [v16 setClipsToBounds:0];
      id v43 = [v41 centerXAnchor];
      id v44 = [v16 leadingAnchor];
      id v45 = [v43 constraintEqualToAnchor:v44];

      uint64_t v46 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint;
      id v47 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint];
      *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterXConstraint] = v45;

      long long v98 = v41;
      id v48 = [v41 centerYAnchor];
      id v49 = [v16 topAnchor];
      id v50 = [v48 constraintEqualToAnchor:v49];

      uint64_t v51 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint;
      unint64_t v52 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint];
      *(void *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridHorizontalStopButtonCenterYConstraint] = v50;

      sub_1000CBE70((uint64_t *)&unk_10071C0C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A8670;
      double v54 = *(void **)&v1[v101];
      *(void *)(inited + 32) = v54;
      uint64_t v55 = *(void **)&v1[v100];
      *(void *)(inited + 40) = v55;
      uint64_t v56 = *(void **)&v1[v29];
      *(void *)(inited + 48) = v56;
      long long v57 = *(void **)&v1[v99];
      *(void *)(inited + 56) = v57;
      long long v58 = *(void **)&v1[v46];
      *(void *)(inited + 64) = v58;
      long long v59 = *(void **)&v1[v51];
      *(void *)(inited + 72) = v59;
      long long v105 = (void *)inited;
      specialized Array._endMutation()();
      uint64_t v60 = (void *)v105[4];
      if (v60)
      {
        id v61 = v60;
        id v62 = v54;
        id v63 = v55;
        id v64 = v56;
        id v65 = v57;
        id v66 = v58;
        id v67 = v59;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        id v78 = v59;
        id v79 = v54;
        id v80 = v55;
        id v81 = v56;
        id v82 = v57;
        id v83 = v58;
      }
      uint64_t v4 = v103;
      id v3 = v104;
      id v84 = (void *)v105[5];
      if (v84)
      {
        id v85 = v84;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      uint64_t v86 = (void *)v105[6];
      if (v86)
      {
        id v87 = v86;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      id v88 = (void *)v105[7];
      if (v88)
      {
        id v89 = v88;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      long long v90 = (void *)v105[8];
      if (v90)
      {
        id v91 = v90;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      long long v92 = (void *)v105[9];
      if (v92)
      {
        id v93 = v92;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      swift_bridgeObjectRelease();
      long long v94 = self;
      sub_10009E6C4(0, (unint64_t *)&unk_100706720);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v94 activateConstraints:isa];
    }
    long long v96 = *(void **)&v1[v4];
    if (!v96) {
      goto LABEL_43;
    }
    id v97 = *(id *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
    id v8 = v96;
    [v8 setObservedProgress:v97];

LABEL_42:
LABEL_43:
  }
}

uint64_t sub_1000A0030()
{
  uint64_t v1 = self;
  id v2 = [v1 standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  unsigned int v4 = [v2 BOOLForKey:v3];

  if (v4) {
    return *(void *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView) == 0;
  }
  unint64_t v6 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v6 && !*(void *)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_horizontalProgressView))
  {
    id v7 = (char *)*v6;
    id v8 = [v1 standardUserDefaults];
    NSString v9 = String._bridgeToObjectiveC()();
    unsigned __int8 v10 = [v8 BOOLForKey:v9];

    if (v10 & 1) != 0 || *v6 && (v11 = *v6, char v12 = sub_1000A01D8(), v11, (v12))
    {
      char v13 = *(void **)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
      if (v13)
      {
        unsigned int v14 = [v13 isFinished];

        return v14 ^ 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000A01D8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disableProgressViews) == 1) {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView) = 0;
  }
  uint64_t v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView;
  int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__showHorizontalProgressView);
  if (v3 != 2) {
    return v3 & 1;
  }
  unsigned int v4 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (!*v4)
  {
LABEL_9:
    uint64_t result = 0;
    *(unsigned char *)(v0 + v2) = 0;
    return result;
  }
  if (![(id)swift_unknownObjectRetain() isExternalDownloadPlaceholder]
    || (uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress)) == 0
    || (*(unsigned char *)(v0 + v1) & 1) != 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  id v7 = v5;
  if ([v7 isIndeterminate])
  {
    swift_unknownObjectRelease();

    uint64_t result = 1;
    *(unsigned char *)(v0 + v2) = 1;
  }
  else
  {
    unsigned int v8 = [v7 isFinished];
    swift_unknownObjectRelease();

    uint64_t result = v8 ^ 1;
    *(unsigned char *)(v0 + v2) = v8 ^ 1;
  }
  return result;
}

void sub_1000A0308()
{
  uint64_t v1 = v0;
  uint64_t v2 = (id *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *v2;
    if ([v1 isHighlighted]
      && v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics + 9] == 1)
    {
      [*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] setDrawMode:2];
    }
    else
    {
      if (sub_1000A03F4()) {
        uint64_t v4 = 3;
      }
      else {
        uint64_t v4 = 0;
      }
      [*(id *)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView] setDrawMode:v4];
    }
  }
}

uint64_t sub_1000A03F4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDimThumbnail);
  if (v2 != 2) {
    return v2 & 1;
  }
  id v3 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!v4)
  {
    uint64_t result = *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) & 1;
    goto LABEL_8;
  }
  if (![(id)swift_unknownObjectRetain() isActionable]
    || [v4 isCopying])
  {
    goto LABEL_5;
  }
  if ([v4 isDownloading])
  {
    id v6 = [v4 downloadingError];
    if (!v6)
    {
LABEL_5:
      swift_unknownObjectRelease();
      uint64_t result = 1;
      goto LABEL_8;
    }
  }
  id v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
  if (!v7)
  {
    swift_unknownObjectRelease();
    uint64_t result = 0;
    *(unsigned char *)(v0 + v1) = 0;
    return result;
  }
  id v8 = v7;
  unsigned int v9 = [v8 isFinished];

  swift_unknownObjectRelease();
  uint64_t result = v9 ^ 1;
LABEL_8:
  *(unsigned char *)(v0 + v1) = result;
  return result;
}

void sub_1000A0540()
{
  sub_1000A1028();
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v1)
  {
    int v2 = *(char **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    id v3 = *v1;
    sub_100099DF8((uint64_t)v26);
    v21[10] = *(_OWORD *)&v26[160];
    _OWORD v21[11] = *(_OWORD *)&v26[176];
    uint64_t v22 = *(void *)&v26[192];
    v21[6] = *(_OWORD *)&v26[96];
    v21[7] = *(_OWORD *)&v26[112];
    v21[8] = *(_OWORD *)&v26[128];
    v21[9] = *(_OWORD *)&v26[144];
    void v21[2] = *(_OWORD *)&v26[32];
    v21[3] = *(_OWORD *)&v26[48];
    void v21[4] = *(_OWORD *)&v26[64];
    v21[5] = *(_OWORD *)&v26[80];
    v21[0] = *(_OWORD *)v26;
    v21[1] = *(_OWORD *)&v26[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v21);
    uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v5 = (uint64_t)v4
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v4+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v23, &qword_100705560);
    sub_1000CBE0C((uint64_t)v21, v5, &qword_100705560);
    sub_10009ABF0((uint64_t)v26);
    sub_10009ABF0((uint64_t)v26);
    sub_1000A0B6C((uint64_t)v23);
    [v4 setNeedsDisplay];
    sub_10009A978((uint64_t)v26);
    sub_1000CBE0C(v5, (uint64_t)v24, &qword_100705560);
    sub_1000CBE0C((uint64_t)v24, (uint64_t)v25, &qword_100705560);
    if (sub_1000CBEB4(v25) != 1) {
      [v2 setFont:v25[0]];
    }
    long long v33 = *(_OWORD *)&v26[136];
    long long v34 = *(_OWORD *)&v26[152];
    long long v35 = *(_OWORD *)&v26[168];
    long long v36 = *(_OWORD *)&v26[184];
    long long v29 = *(_OWORD *)&v26[72];
    long long v30 = *(_OWORD *)&v26[88];
    long long v31 = *(_OWORD *)&v26[104];
    long long v32 = *(_OWORD *)&v26[120];
    v27[0] = *(_OWORD *)&v26[8];
    v27[1] = *(_OWORD *)&v26[24];
    v27[2] = *(_OWORD *)&v26[40];
    long long v28 = *(_OWORD *)&v26[56];
    sub_10009AB2C((uint64_t)v27);
    [v2 bounds];
    [v2 contentScaleFactor];
    long long v6 = v28;
    UIPointRoundToScale();
    double v8 = v7;
    double v10 = v9;
    sub_10005519C(v27);
    [v4 setFrame:v8, v10, v6];
    [v2 invalidateIntrinsicContentSize];
    sub_10009A978((uint64_t)v26);
    sub_1000A0C38();
  }
  sub_1000A1930();
  sub_1000A0308();
  id v11 = (unsigned __int8 *)*v1;
  if (!*v1) {
    goto LABEL_14;
  }
  int v12 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_canBecomeSelectable];
  if (v12 == 2)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((v12 & 1) == 0) {
    goto LABEL_14;
  }
  int v13 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting];
  if (v13 == 2) {
    goto LABEL_19;
  }
  if ((v13 & 1) == 0) {
    goto LABEL_14;
  }
  int v14 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
  if (v14 == 2)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v14)
  {
    int v15 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode];
    if (v15 != 2)
    {
      double v16 = 1.0;
      if ((v15 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
LABEL_21:
    __break(1u);
    return;
  }
LABEL_14:
  double v16 = 0.0;
LABEL_15:
  id v17 = sub_100099D70();
  [v17 alpha];
  double v19 = v18;

  if (v19 != v16)
  {
    id v20 = sub_100099D70();
    [v20 setAlpha:v16];
  }
}

void sub_1000A08CC()
{
  uint64_t v1 = v0;
  sub_1000A1028();
  int v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    id v4 = *v2;
    sub_100099DF8((uint64_t)v17);
    v12[10] = *(_OWORD *)&v17[160];
    _OWORD v12[11] = *(_OWORD *)&v17[176];
    uint64_t v13 = *(void *)&v17[192];
    v12[6] = *(_OWORD *)&v17[96];
    v12[7] = *(_OWORD *)&v17[112];
    _OWORD v12[8] = *(_OWORD *)&v17[128];
    v12[9] = *(_OWORD *)&v17[144];
    _OWORD v12[2] = *(_OWORD *)&v17[32];
    uint64_t v12[3] = *(_OWORD *)&v17[48];
    void v12[4] = *(_OWORD *)&v17[64];
    v12[5] = *(_OWORD *)&v17[80];
    v12[0] = *(_OWORD *)v17;
    v12[1] = *(_OWORD *)&v17[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v12);
    uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v14, &qword_100705560);
    sub_1000CBE0C((uint64_t)v12, v6, &qword_100705560);
    sub_10009ABF0((uint64_t)v17);
    sub_10009ABF0((uint64_t)v17);
    sub_1000A0B6C((uint64_t)v14);
    [v5 setNeedsDisplay];
    sub_10009A978((uint64_t)v17);
    sub_1000CBE0C(v6, (uint64_t)v15, &qword_100705560);
    sub_1000CBE0C((uint64_t)v15, (uint64_t)v16, &qword_100705560);
    if (sub_1000CBEB4(v16) != 1) {
      [v3 setFont:v16[0]];
    }
    long long v24 = *(_OWORD *)&v17[136];
    long long v25 = *(_OWORD *)&v17[152];
    long long v26 = *(_OWORD *)&v17[168];
    long long v27 = *(_OWORD *)&v17[184];
    long long v20 = *(_OWORD *)&v17[72];
    long long v21 = *(_OWORD *)&v17[88];
    long long v22 = *(_OWORD *)&v17[104];
    long long v23 = *(_OWORD *)&v17[120];
    v18[0] = *(_OWORD *)&v17[8];
    v18[1] = *(_OWORD *)&v17[24];
    id v18[2] = *(_OWORD *)&v17[40];
    long long v19 = *(_OWORD *)&v17[56];
    sub_10009AB2C((uint64_t)v18);
    [v3 bounds];
    [v3 contentScaleFactor];
    long long v7 = v19;
    UIPointRoundToScale();
    double v9 = v8;
    double v11 = v10;
    sub_10005519C(v18);
    [v5 setFrame:v9, v11, v7];
    [v3 invalidateIntrinsicContentSize];
    sub_10009A978((uint64_t)v17);
    sub_1000A0C38();
  }
}

uint64_t sub_1000A0B6C(uint64_t a1)
{
  sub_10009A89C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176));
  return a1;
}

uint64_t sub_1000A0C38()
{
  uint64_t v1 = type metadata accessor for UICellConfigurationState();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  double v8 = (char *)&aBlock[-1] - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  double v11 = (char *)&aBlock[-1] - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&aBlock[-1] - v12;
  int v14 = &v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  uint64_t result = swift_beginAccess();
  if (*(void *)v14)
  {
    long long v29 = v0;
    id v16 = [v0 _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v16) = UICellConfigurationState.isFocused.getter();
    id v17 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v17(v11, v13, v1);
    if (v16) {
      char v18 = 1;
    }
    else {
      char v18 = UICellConfigurationState.isHighlighted.getter();
    }
    long long v19 = *(void (**)(char *, uint64_t))(v2 + 8);
    v19(v11, v1);
    v17(v8, v13, v1);
    if (v18)
    {
      v19(v8, v1);
      v17(v5, v13, v1);
    }
    else
    {
      char v20 = UICellConfigurationState.isSelected.getter();
      v19(v8, v1);
      v17(v5, v13, v1);
      if ((v20 & 1) == 0)
      {
        char v28 = UICellConfigurationState.isEditing.getter();
        v19(v5, v1);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v13, v1);
        long long v21 = v29;
        if ((v28 & 1) == 0) {
          return result;
        }
        goto LABEL_9;
      }
    }
    v19(v5, v1);
    v19(v13, v1);
    long long v21 = v29;
LABEL_9:
    long long v22 = self;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_10055C6C4;
    *(void *)(v24 + 24) = v23;
    aBlock[4] = sub_1000879B8;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100087990;
    void aBlock[3] = &unk_1006B7548;
    long long v25 = _Block_copy(aBlock);
    id v26 = v21;
    swift_retain();
    swift_release();
    [v22 performWithoutAnimation:v25];
    _Block_release(v25);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_1000A1028()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (v6 && !sub_1000CBC64())
  {
    id v7 = v6;
    BOOL v8 = sub_1000A14C0();
    uint64_t v9 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView;
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
    if (v10)
    {
      id v11 = v10;
      id v12 = [v1 _bridgedConfigurationState];
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000A1260(v4);
      uint64_t v13 = *(void **)&v1[v9];
      if (v13) {
        [v13 setHidden:!v8];
      }
    }
    uint64_t v14 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView;
    int v15 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
    if (v15)
    {
      id v16 = v15;
      id v17 = [v1 _bridgedConfigurationState];
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000A1260(v4);
      char v18 = *(void **)&v1[v14];
      if (v18) {
        [v18 setHidden:!v8];
      }
    }
    [v1 setNeedsLayout];
    long long v19 = &v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v20 = *((void *)v19 + 1);
      uint64_t ObjectType = swift_getObjectType();
      LOBYTE(v20) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v1, ObjectType, v20);
      swift_unknownObjectRelease();
      if (v20)
      {
        id v22 = sub_100099D70();
        uint64_t v23 = sub_100559504();
        [v22 setImage:v23];

        id v7 = (id)v23;
      }
    }
  }
}

uint64_t sub_1000A1260(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for UICellConfigurationState();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v14[-v8];
  uint64_t v10 = v1 + OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_configurationState;
  swift_beginAccess();
  id v11 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  v11(v9, v10, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 24))(v10, a1, v3);
  swift_endAccess();
  v11(v7, v10, v3);
  sub_1000A1444();
  LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)();
  id v12 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  if ((v10 & 1) == 0) {
    sub_100089158();
  }
  v12(a1, v3);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v9, v3);
}

unint64_t sub_1000A1444()
{
  unint64_t result = qword_1007134A8[0];
  if (!qword_1007134A8[0])
  {
    type metadata accessor for UICellConfigurationState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1007134A8);
  }
  return result;
}

id sub_1000A149C()
{
  return [v0 isEditing];
}

BOOL sub_1000A14C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  id v7 = *v6;
  if (!v7 || sub_1000CBC64()) {
    return 0;
  }
  int v10 = v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];
  id v11 = v7;
  if (v10 == 1)
  {
    id v12 = [v1 traitCollection];
    id v13 = [v12 userInterfaceIdiom];

    return v13 == (id)6;
  }
  else
  {
    id v14 = [v1 _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v14) = UICellConfigurationState.isSelected.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v14)
    {

      return 1;
    }
    else
    {
      uint64_t v8 = v11[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing];
    }
  }
  return v8;
}

void sub_1000A1688()
{
  uint64_t v1 = v0;
  sub_1000A1028();
  uint64_t v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v2)
  {
    uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    id v4 = *v2;
    sub_100099DF8((uint64_t)v17);
    v12[10] = *(_OWORD *)&v17[160];
    _OWORD v12[11] = *(_OWORD *)&v17[176];
    uint64_t v13 = *(void *)&v17[192];
    v12[6] = *(_OWORD *)&v17[96];
    v12[7] = *(_OWORD *)&v17[112];
    _OWORD v12[8] = *(_OWORD *)&v17[128];
    v12[9] = *(_OWORD *)&v17[144];
    _OWORD v12[2] = *(_OWORD *)&v17[32];
    uint64_t v12[3] = *(_OWORD *)&v17[48];
    void v12[4] = *(_OWORD *)&v17[64];
    v12[5] = *(_OWORD *)&v17[80];
    v12[0] = *(_OWORD *)v17;
    v12[1] = *(_OWORD *)&v17[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v12);
    uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v14, &qword_100705560);
    sub_1000CBE0C((uint64_t)v12, v6, &qword_100705560);
    sub_10009ABF0((uint64_t)v17);
    sub_10009ABF0((uint64_t)v17);
    sub_1000A0B6C((uint64_t)v14);
    [v5 setNeedsDisplay];
    sub_10009A978((uint64_t)v17);
    sub_1000CBE0C(v6, (uint64_t)v15, &qword_100705560);
    sub_1000CBE0C((uint64_t)v15, (uint64_t)v16, &qword_100705560);
    if (sub_1000CBEB4(v16) != 1) {
      [v3 setFont:v16[0]];
    }
    long long v24 = *(_OWORD *)&v17[136];
    long long v25 = *(_OWORD *)&v17[152];
    long long v26 = *(_OWORD *)&v17[168];
    long long v27 = *(_OWORD *)&v17[184];
    long long v20 = *(_OWORD *)&v17[72];
    long long v21 = *(_OWORD *)&v17[88];
    long long v22 = *(_OWORD *)&v17[104];
    long long v23 = *(_OWORD *)&v17[120];
    v18[0] = *(_OWORD *)&v17[8];
    v18[1] = *(_OWORD *)&v17[24];
    id v18[2] = *(_OWORD *)&v17[40];
    long long v19 = *(_OWORD *)&v17[56];
    sub_10009AB2C((uint64_t)v18);
    [v3 bounds];
    [v3 contentScaleFactor];
    long long v7 = v19;
    UIPointRoundToScale();
    double v9 = v8;
    double v11 = v10;
    sub_10005519C(v18);
    [v5 setFrame:v9, v11, v7];
    [v3 invalidateIntrinsicContentSize];
    sub_10009A978((uint64_t)v17);
    sub_1000A0C38();
  }
  sub_1000A1930();
}

void sub_1000A1930()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*v2)
  {
    char v4 = sub_1000A1B30();
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
    uint64_t v6 = self;
    id v7 = v3;
    if (v4)
    {
      id v8 = [v6 quaternaryLabelColor];
      [v5 setTextColor:v8];

      double v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
      id v10 = [v6 quaternaryLabelColor];
      [v9 setTextColor:v10];

      id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "superview"));
      if (v11)
      {
        id v12 = v11;
        [v11 setAlpha:0.35];
LABEL_7:
      }
    }
    else
    {
      id v13 = [v6 secondaryLabelColor];
      [v5 setTextColor:v13];

      id v14 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
      id v15 = [v6 secondaryLabelColor];
      [v14 setTextColor:v15];

      id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView), "superview"));
      if (v16)
      {
        id v12 = v16;
        [v16 setAlpha:1.0];
        goto LABEL_7;
      }
    }
  }
}

uint64_t sub_1000A1B30()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim);
  if (v1 != 2) {
    return v1 & 1;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isInCreateMode))
  {
    uint64_t result = *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) & 1;
    *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = *(unsigned char *)(v0
                                                                                                + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isSelecting) & 1;
  }
  else
  {
    int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable);
    uint64_t result = (v2 & 1) == 0 && v2 != 2;
    *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldDim) = result;
  }
  return result;
}

void sub_1000A1B94()
{
  sub_1000A1BE8(v0);
}

void *sub_1000A1BE8(uint64_t a1)
{
  int v2 = (id *)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  uint64_t result = (void *)swift_beginAccess();
  if (*v2)
  {
    sub_1000CBE0C((uint64_t)*v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v32, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v32, (uint64_t)v33, (uint64_t *)&unk_100705550);
    uint64_t result = (void *)sub_1000CBEB4(v33);
    if (result != 1)
    {
      char v4 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
      sub_1000CBE0C((uint64_t)v32, (uint64_t)v30, (uint64_t *)&unk_100705550);
      if (v31 < 1) {
        char v5 = 1;
      }
      else {
        char v5 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
      }
      id v6 = v34;
      id v7 = v34;
      sub_10009736C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
      v39[0] = 0;
      sub_1000A2120(v4, v5, v6, 1061158912);

      id v8 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
      if (!*v2) {
        goto LABEL_10;
      }
      sub_1000CBE0C((uint64_t)*v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v29, (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)v29, (uint64_t)v39, (uint64_t *)&unk_100705550);
      uint64_t result = (void *)sub_1000CBEB4((uint64_t *)v39);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      if (*(uint64_t *)&v39[32] >= 2) {
        char v9 = *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
      }
      else {
LABEL_10:
      }
        char v9 = 1;
      id v10 = v35;
      id v11 = v35;
      v39[0] = 1;
      sub_1000A2120(v8, v9, v10, 0x100000000);

      double v12 = v37;
      [*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_iconWidthConstraint) setConstant:v36];
      double v13 = v38;
      [*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTopConstraint) setConstant:v38];
      [*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackBottomConstraint) setConstant:v13];
      if (v13 + -1.0 < 0.0) {
        double v14 = 0.0;
      }
      else {
        double v14 = v13 + -1.0;
      }
      [*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackLeadingConstraint) setConstant:v14];
      id v15 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackTrailingConstraint);
      if (v15) {
        [v15 setConstant:-v14];
      }
      sub_1000913EC();
      if (*v2)
      {
        id v16 = *(char **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
        id v17 = *v2;
        sub_100099DF8((uint64_t)v39);
        v25[10] = *(_OWORD *)&v39[160];
        v25[11] = *(_OWORD *)&v39[176];
        uint64_t v26 = *(void *)&v39[192];
        v25[6] = *(_OWORD *)&v39[96];
        v25[7] = *(_OWORD *)&v39[112];
        v25[8] = *(_OWORD *)&v39[128];
        v25[9] = *(_OWORD *)&v39[144];
        void v25[2] = *(_OWORD *)&v39[32];
        v25[3] = *(_OWORD *)&v39[48];
        v25[4] = *(_OWORD *)&v39[64];
        _OWORD v25[5] = *(_OWORD *)&v39[80];
        v25[0] = *(_OWORD *)v39;
        v25[1] = *(_OWORD *)&v39[16];
        DOCSplitBrowserViewController.didCommitPreview(of:)(v25);
        char v18 = *(void **)&v16[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
        uint64_t v19 = (uint64_t)v18
            + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
        sub_1000CBE0C((uint64_t)v18+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v27, &qword_100705560);
        sub_1000CBE0C((uint64_t)v25, v19, &qword_100705560);
        sub_10009ABF0((uint64_t)v39);
        sub_10009ABF0((uint64_t)v39);
        sub_1000A0B6C((uint64_t)v27);
        [v18 setNeedsDisplay];
        sub_10009A978((uint64_t)v39);
        sub_1000CBE0C(v19, (uint64_t)v28, &qword_100705560);
        sub_1000CBE0C((uint64_t)v28, (uint64_t)v29, &qword_100705560);
        if (sub_1000CBEB4(v29) != 1) {
          [v16 setFont:v29[0]];
        }
        long long v46 = *(_OWORD *)&v39[136];
        long long v47 = *(_OWORD *)&v39[152];
        long long v48 = *(_OWORD *)&v39[168];
        long long v49 = *(_OWORD *)&v39[184];
        long long v42 = *(_OWORD *)&v39[72];
        long long v43 = *(_OWORD *)&v39[88];
        long long v44 = *(_OWORD *)&v39[104];
        long long v45 = *(_OWORD *)&v39[120];
        v40[0] = *(_OWORD *)&v39[8];
        v40[1] = *(_OWORD *)&v39[24];
        void v40[2] = *(_OWORD *)&v39[40];
        long long v41 = *(_OWORD *)&v39[56];
        sub_10009AB2C((uint64_t)v40);
        [v16 bounds];
        [v16 contentScaleFactor];
        long long v20 = v41;
        UIPointRoundToScale();
        double v22 = v21;
        double v24 = v23;
        sub_10005519C(v40);
        [v18 setFrame:v22, v24, v20];
        [v16 invalidateIntrinsicContentSize];
        sub_10009A978((uint64_t)v39);
        sub_1000A0C38();
      }
      if (*(double *)(a1
                     + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant) != v12 / 3.0)
      {
        *(double *)(a1
                  + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolderConstant) = v12 / 3.0;
        [*(id *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder) setConstant:];
      }
      sub_1000A2618();
      sub_1000A22E8();
      return sub_10009736C(v32, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
    }
  }
  return result;
}

void sub_1000A2120(id a1, char a2, void *a3, uint64_t a4)
{
  if (a2 == 2) {
    id v7 = [a1 isHidden];
  }
  else {
    id v7 = (id)(a2 & 1);
  }
  int v8 = v7 ^ [a1 isHidden];
  if (v8 == 1) {
    [a1 setHidden:v7];
  }
  id v9 = a3;
  if (!a3) {
    id v9 = [a1 font];
  }
  id v17 = v9;
  id v10 = a3;
  id v11 = [a1 font];
  if (v17)
  {
    if (v11)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
      id v12 = v17;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    if (!v11) {
      goto LABEL_15;
    }
  }
  [a1 setFont:v17];
  int v8 = 1;
LABEL_15:
  if ((a4 & 0x100000000) != 0)
  {
    [a1 _hyphenationFactor];
    float v14 = v15;
  }
  else
  {
    float v14 = *(float *)&a4;
  }
  [a1 _hyphenationFactor];
  if (v14 != *(float *)&v16)
  {
    *(float *)&double v16 = v14;
    [a1 _setHyphenationFactor:v16];
    goto LABEL_22;
  }
  if (v8) {
LABEL_22:
  }
    [a1 invalidateIntrinsicContentSize];
}

void sub_1000A22E8()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) != 1) {
    return;
  }
  char v5 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  id v6 = *v5;
  if (v6)
  {
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX);
    if (v7)
    {
      sub_1000CBE0C((uint64_t)v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v19, (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_100705550);
      if (sub_1000CBEB4(v20) == 1) {
        goto LABEL_20;
      }
      float64_t v8 = -v22.f64[0];
      id v9 = v6;
      [v7 setConstant:v8];
    }
    else
    {
      id v13 = v6;
    }
    float v14 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY);
    if (v14)
    {
      sub_1000CBE0C((uint64_t)v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v19, (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_100705550);
      if (sub_1000CBEB4(v20) == 1)
      {
LABEL_21:
        __break(1u);
        return;
      }
      [v14 setConstant:v22.f64[1]];
    }
    float v15 = (char *)sub_1002D048C();
    sub_1000CBE0C((uint64_t)v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v19, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v20) != 1)
    {
      float64x2_t v16 = v22;
      id v17 = (float64x2_t *)&v15[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits];
      if ((v15[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits + 32] & 1) != 0
        || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v17, v21), (int32x4_t)vceqq_f64(v17[1], v22))), 0xFuLL))) & 1) == 0)
      {
        *id v17 = v21;
        v17[1] = v16;
        LOBYTE(v17[2].f64[0]) = 0;
        [v15 invalidateIntrinsicContentSize];
      }

      return;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  static Logger.UI.getter();
  id v10 = Logger.logObject.getter();
  uint64_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v11, "Cannot update constraints in updateItemAccessStatusConstraints because cellContent is nil", v12, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1000A2618()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) != 1) {
    return;
  }
  char v5 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  id v6 = *v5;
  if (v6)
  {
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX);
    if (v7)
    {
      sub_1000CBE0C((uint64_t)v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v19, (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_100705550);
      if (sub_1000CBEB4(v20) == 1) {
        goto LABEL_20;
      }
      double v8 = v22.f64[0];
      id v9 = v6;
      [v7 setConstant:v8];
    }
    else
    {
      id v13 = v6;
    }
    float v14 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY);
    if (v14)
    {
      sub_1000CBE0C((uint64_t)v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v19, (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_100705550);
      if (sub_1000CBEB4(v20) == 1)
      {
LABEL_21:
        __break(1u);
        return;
      }
      [v14 setConstant:v22.f64[1]];
    }
    float v15 = (char *)sub_1002D0478();
    sub_1000CBE0C((uint64_t)v6 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v19, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v20) != 1)
    {
      float64x2_t v16 = v22;
      id v17 = (float64x2_t *)&v15[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits];
      if ((v15[OBJC_IVAR____TtC5Files22DOCItemStatusBadgeView_layoutTraits + 32] & 1) != 0
        || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v17, v21), (int32x4_t)vceqq_f64(v17[1], v22))), 0xFuLL))) & 1) == 0)
      {
        *id v17 = v21;
        v17[1] = v16;
        LOBYTE(v17[2].f64[0]) = 0;
        [v15 invalidateIntrinsicContentSize];
      }

      return;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  static Logger.UI.getter();
  id v10 = Logger.logObject.getter();
  uint64_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v11, "Cannot update constraints in updateItemStatusConstraints because cellContent is nil", v12, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1000A2944(void *a1)
{
  sub_1000A48F0(a1);
  if (qword_100705328 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v3)
  {
    sub_1000CBE0C(*v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v4, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v4, (uint64_t)v5, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v5) != 1)
    {
      qword_10071BF50 = v5[6];
      qword_10071BF58 = v5[8];
      qword_10071BF60 = v5[5];
    }
  }
}

id sub_1000A2AFC(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for DOCItemCollectionGridCell();
  return [super *a3];
}

uint64_t type metadata accessor for DOCItemCollectionGridCell()
{
  return self;
}

uint64_t sub_1000A2B6C(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  long long v10 = *(_OWORD *)(a2 + 144);
  long long v42 = *(_OWORD *)(a2 + 128);
  long long v43 = v10;
  long long v44 = *(_OWORD *)(a2 + 160);
  uint64_t v45 = *(void *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v38 = *(_OWORD *)(a2 + 64);
  long long v39 = v11;
  long long v12 = *(_OWORD *)(a2 + 112);
  long long v40 = *(_OWORD *)(a2 + 96);
  long long v41 = v12;
  long long v13 = *(_OWORD *)(a2 + 16);
  long long v34 = *(_OWORD *)a2;
  long long v35 = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v36 = *(_OWORD *)(a2 + 32);
  long long v37 = v14;
  uint64_t v27 = 0;
  float v15 = *(NSObject **)(v5 + 32);
  float64x2_t v16 = (void *)swift_allocObject();
  v16[2] = v5;
  v16[3] = a1;
  v16[4] = &v27;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100087E2C;
  *(void *)(v17 + 24) = v16;
  long long v30 = sub_1000879B8;
  uint64_t v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  long long v29 = &unk_1006A93F0;
  char v18 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v27;
    if (v27)
    {
      swift_release();
    }
    else
    {
      unint64_t v21 = (unint64_t)[a3 userInterfaceStyle];
      unint64_t v22 = v21;
      if (v21 >= 3)
      {
        type metadata accessor for UIUserInterfaceStyle(0);
        long long v29 = v24;
        aBlock[0] = v22;
        doc_warnUnrecognizedEnumValueEncountered(_:)();
        sub_10009B1B8((uint64_t)aBlock);
        uint64_t v23 = 1;
      }
      else
      {
        uint64_t v23 = qword_1005AA450[v21];
      }
      *(void *)uint64_t v26 = v23;
      *(_OWORD *)&v26[136] = v42;
      *(_OWORD *)&v26[152] = v43;
      *(_OWORD *)&v26[168] = v44;
      *(_OWORD *)&v26[72] = v38;
      *(_OWORD *)&v26[88] = v39;
      *(_OWORD *)&v26[104] = v40;
      *(_OWORD *)&v26[120] = v41;
      *(_OWORD *)&char v26[8] = v34;
      *(_OWORD *)&v26[24] = v35;
      *(_OWORD *)&v26[40] = v36;
      *(_OWORD *)&v26[56] = v37;
      *(void *)&v26[184] = v45;
      *(void *)&v26[192] = a3;
      unsigned char v26[200] = a4 & 1;
      v32[10] = *(_OWORD *)&v26[160];
      v33[0] = *(_OWORD *)&v26[176];
      v32[6] = *(_OWORD *)&v26[96];
      v32[7] = *(_OWORD *)&v26[112];
      _OWORD v32[8] = *(_OWORD *)&v26[128];
      v32[9] = *(_OWORD *)&v26[144];
      v32[2] = *(_OWORD *)&v26[32];
      void v32[3] = *(_OWORD *)&v26[48];
      uint64_t v32[4] = *(_OWORD *)&v26[64];
      v32[5] = *(_OWORD *)&v26[80];
      v32[0] = *(_OWORD *)v26;
      v32[1] = *(_OWORD *)&v26[16];
      *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)&v26[185];
      sub_1000A2E70(a2);
      id v25 = a3;
      sub_1000A2EB0(a1, v32, (uint64_t)aBlock);
      sub_1000A30E0((uint64_t)v26);
      uint64_t v20 = aBlock[0];
      swift_unknownObjectRetain();
      sub_1000A3084((uint64_t)aBlock);
      swift_release();
      swift_unknownObjectRelease();
    }
    return v20;
  }
  return result;
}

uint64_t sub_1000A2E70(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  id v4 = *(id *)a1;
  id v5 = v2;
  id v6 = v3;
  return a1;
}

uint64_t sub_1000A2EB0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)uint64_t v26 = *((_OWORD *)a2 + 11);
  *(_OWORD *)&v26[9] = *(_OWORD *)((char *)a2 + 185);
  double v6 = 0.0;
  double v7 = *((double *)a2 + 7);
  if ((a2[25] & 1) == 0)
  {
    double v8 = *((double *)a2 + 11);
    if (v8 >= v7) {
      double v8 = *((double *)a2 + 7);
    }
    double v6 = floor(v8) / 1.41421356;
  }
  double v9 = *((double *)a2 + 8);
  [a2[24] displayScale:*(_OWORD *)a2, *((_OWORD *)a2 + 1), *((_OWORD *)a2 + 2), *((_OWORD *)a2 + 3), *((_OWORD *)a2 + 4), *((_OWORD *)a2 + 5), *((_OWORD *)a2 + 6), *((_OWORD *)a2 + 7), *((_OWORD *)a2 + 8), *((_OWORD *)a2 + 9), *((_OWORD *)a2 + 10), *(void *)v26, *(void *)&v26[8], *(void *)&v26[16], *(void *)&v26[24]];
  id v11 = [objc_allocWithZone((Class)DOCThumbnailDescriptor) initWithSize:*a2 minimumSize:1 scale:1 style:[a1 isFolder] isFolded:v7 isInteractive:v9 isFolder:v6];
  id v12 = [self sharedGenerator];
  id v13 = [v12 thumbnailForNode:a1 descriptor:v11];

  *(_OWORD *)(a3 + 152) = v24;
  *(_OWORD *)(a3 + 168) = v25;
  *(_OWORD *)(a3 + 184) = *(_OWORD *)v27;
  *(_OWORD *)(a3 + 193) = *(_OWORD *)&v27[9];
  *(_OWORD *)(a3 + 88) = v20;
  *(_OWORD *)(a3 + 104) = v21;
  *(_OWORD *)(a3 + 120) = v22;
  *(_OWORD *)(a3 + 136) = v23;
  *(_OWORD *)(a3 + 24) = v16;
  *(_OWORD *)(a3 + 40) = v17;
  *(_OWORD *)(a3 + 56) = v18;
  *(_OWORD *)(a3 + 72) = v19;
  *(_OWORD *)(a3 + 8) = v15;
  uint64_t result = sub_1000A3128((uint64_t)a2);
  *(void *)a3 = v13;
  return result;
}

uint64_t sub_1000A3084(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = *(void **)(a1 + 40);

  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1000A30E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 24);
  id v4 = *(void **)(a1 + 32);

  return a1;
}

uint64_t sub_1000A3128(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = *(void **)(a1 + 192);
  id v5 = *(id *)(a1 + 8);
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  return a1;
}

uint64_t sub_1000A3170()
{
  id v1 = [*(id *)(v0 + 40) forceDisplayFilenameExtensions];
  if (v1) {
    return 1;
  }
  __chkstk_darwin(v1);
  sub_1000CBE70(&qword_100715598);
  uint64_t v3 = dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
  if (v6)
  {
    id v2 = [v6 BOOLValue];
  }
  else
  {
    __chkstk_darwin(v3);
    dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();
    return v5;
  }
  return (uint64_t)v2;
}

uint64_t sub_1000A3378()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x308))();
}

uint64_t sub_1000A33B8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x340))();
}

uint64_t sub_1000A33F4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x310))();
}

uint64_t sub_1000A3430()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x320))();
}

uint64_t sub_1000A346C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2F8))();
}

uint64_t sub_1000A34A8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x338))();
}

void sub_1000A34E4(void *a1)
{
  [a1 _setHostsLayoutEngine:1];
  id v2 = (objc_class *)type metadata accessor for DOCItemCollectionCellSpringLoadedInteractionBehavior();
  id v3 = objc_allocWithZone(v2);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v11.receiver = v3;
  v11.super_class = v2;
  id v4 = [super init];
  uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x290))();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = objc_allocWithZone((Class)UISpringLoadedInteraction);
  v10[4] = sub_1002D3C98;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _OWORD v10[2] = sub_1002D38BC;
  v10[3] = &unk_10069F150;
  id v8 = _Block_copy(v10);
  swift_retain();
  id v9 = [v7 initWithInteractionBehavior:v4 interactionEffect:v5 activationHandler:v8];
  _Block_release(v8);
  swift_release();
  swift_release();
  [v9 _setPossibleStateDuration:DOCSpringLoadingPhaseDuration];
  [v1 addInteraction:v9];

  swift_unknownObjectRelease();
}

uint64_t type metadata accessor for DOCItemCollectionCellSpringLoadedInteractionBehavior()
{
  return self;
}

id sub_1000A36F8()
{
  uint64_t v0 = (objc_class *)type metadata accessor for DOCItemCollectionGridCellSpringLoadedInteractionEffect();
  id v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC5Files54DOCItemCollectionGridCellSpringLoadedInteractionEffect_blinkDuration] = 0x3FB999999999999ALL;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

uint64_t type metadata accessor for DOCItemCollectionGridCellSpringLoadedInteractionEffect()
{
  return self;
}

Swift::Void __swiftcall DOCItemCollectionCell.didUpdateItemAccessStatusBadge()()
{
  id v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (v2)
  {
    id v10 = (id)v2;
    if ((sub_1000A39BC() & 1) != 0
      || *((unsigned char *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemAccessStatusBadgeLoaded) == 1)
    {
      sub_1002D0AB4();
      id v3 = sub_1002D048C();
      [v3 setHidden:(sub_1000A39BC() & 1) == 0];

      id v4 = sub_1002D048C();
      id v5 = sub_100570784();
      [v4 setImage:v5];

      uint64_t v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintX);
      if (v6)
      {
        id v7 = v6;
        [v7 setActive:sub_1000A39BC() & 1];
      }
      id v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemAccessStatusBadgeConstraintY);
      if (v8)
      {
        id v9 = v8;
        [v9 setActive:sub_1000A39BC() & 1];
      }
      (*(void (**)(void))((swift_isaMask & *v1) + 0x280))();
    }
  }
}

uint64_t sub_1000A39BC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemAccessStatusBadge);
  if (v2 != 2) {
    return v2 & 1;
  }
  id v3 = (id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (!*v3) {
    goto LABEL_6;
  }
  id v4 = [*v3 fpfs_fpItem];
  if (!v4) {
    goto LABEL_6;
  }
  id v5 = v4;
  id v6 = [v4 itemID];
  unsigned __int8 v7 = [v6 isPlaceholder];

  if (v7)
  {

LABEL_6:
    uint64_t result = 0;
    *(unsigned char *)(v0 + v1) = 0;
    return result;
  }
  if ([v5 isWritable])
  {
    unsigned int v9 = [v5 isReadable];

    uint64_t result = v9 ^ 1;
    *(unsigned char *)(v0 + v1) = v9 ^ 1;
  }
  else
  {

    uint64_t result = 1;
    *(unsigned char *)(v0 + v1) = 1;
  }
  return result;
}

Swift::Void __swiftcall DOCItemCollectionCell.didUpdateItemStatusBadge()()
{
  uint64_t v1 = v0;
  int v2 = (unsigned __int8 *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (!v2) {
    return;
  }
  uint64_t v3 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge;
  int v4 = v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__shouldShowItemStatusBadge];
  uint64_t v27 = v2;
  if (v4 == 2)
  {
    id v5 = (void *)sub_1000A3D9C();
    if (v5)
    {

      v27[v3] = 1;
LABEL_10:
      sub_1002D0794();
      id v6 = sub_1002D0478();
      int v7 = v27[v3];
      if (v7 == 2)
      {
        id v8 = (void *)sub_1000A3D9C();
        unsigned int v9 = v8;
        int v10 = v8 != 0;
        if (v8) {

        }
        v27[v3] = v9 != 0;
      }
      else
      {
        int v10 = v7 & 1;
      }
      [v6 setHidden:v10 ^ 1u];

      id v11 = sub_1002D0478();
      id v12 = sub_1005705C8();
      [v11 setImage:v12];

      id v13 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintX);
      if (v13)
      {
        int v14 = v27[v3];
        if (v14 == 2)
        {
          id v15 = v13;
          long long v16 = (void *)sub_1000A3D9C();
          long long v17 = v16;
          uint64_t v18 = v16 != 0;
          if (v16) {

          }
          v27[v3] = v17 != 0;
        }
        else
        {
          uint64_t v18 = v14 & 1;
          id v19 = v13;
        }
        [v13 setActive:v18];
      }
      long long v20 = *(void **)((char *)v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_itemStatusBadgeConstraintY);
      if (v20)
      {
        int v21 = v27[v3];
        if (v21 == 2)
        {
          id v22 = v20;
          long long v23 = (void *)sub_1000A3D9C();
          long long v24 = v23;
          uint64_t v25 = v23 != 0;
          if (v23) {

          }
          v27[v3] = v24 != 0;
        }
        else
        {
          uint64_t v25 = v21 & 1;
          id v26 = v20;
        }
        [v20 setActive:v25];
      }
      (*(void (**)(void))((swift_isaMask & *v1) + 0x278))();
      int v2 = v27;
      goto LABEL_30;
    }
    int v2 = v27;
    v27[v3] = 0;
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isItemStatusBadgeLoaded) == 1) {
    goto LABEL_10;
  }
LABEL_30:
}

uint64_t sub_1000A3D9C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  int v2 = *v1;
  if (!v2) {
    return 0;
  }
  swift_unknownObjectRetain();
  if (DOCIsInternalBuild())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707730);
    uint64_t v3 = static NSUserDefaults.docUserDefaults.getter();
    if (v3)
    {
      int v4 = (void *)v3;
      NSString v5 = String._bridgeToObjectiveC()();
      unsigned int v6 = [v4 BOOLForKey:v5];

      if (v6)
      {
        uint64_t v8 = *(void *)"locked";
        int v7 = (char *)0xE600000000000000;
        swift_bridgeObjectRetain();
        id v9 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        v10._uint64_t countAndFlagsBits = *(void *)"locked";
        v10._unint64_t object = (void *)0xE600000000000000;
        Swift::Bool v11 = String.hasPrefix(_:)(v10);
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x72616D6B63656863;
        int v7 = (char *)0xE90000000000006BLL;
        swift_bridgeObjectRetain();
        id v12 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v12) = String.hasPrefix(_:)((Swift::String)xmmword_1006898D8);
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x73746E656D6D6F63;
        int v7 = (char *)0xE800000000000000;
        swift_bridgeObjectRetain();
        id v13 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v13) = String.hasPrefix(_:)((Swift::String)xmmword_1006898E8);
        swift_bridgeObjectRelease();
        if (v13) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x6C6F662D706F7264;
        int v7 = (char *)0xEB00000000726564;
        swift_bridgeObjectRetain();
        id v14 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v14) = String.hasPrefix(_:)((Swift::String)xmmword_1006898F8);
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = *(void *)"heart";
        int v7 = (char *)0xE500000000000000;
        swift_bridgeObjectRetain();
        id v15 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        v16._uint64_t countAndFlagsBits = *(void *)"heart";
        v16._unint64_t object = (void *)0xE500000000000000;
        LOBYTE(v15) = String.hasPrefix(_:)(v16);
        swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x65697665722D6E69;
        int v7 = (char *)0xE900000000000077;
        swift_bridgeObjectRetain();
        id v17 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v17) = String.hasPrefix(_:)((Swift::String)xmmword_100689918);
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0xD000000000000016;
        int v7 = "RecentsAppPopover";
        swift_bridgeObjectRetain();
        id v18 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        v19._uint64_t countAndFlagsBits = 0xD000000000000016;
        v19._unint64_t object = "RecentsAppPopover";
        LOBYTE(v18) = String.hasPrefix(_:)(v19);
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x622D64656B636F6CLL;
        int v7 = (char *)0xEE00726573752D79;
        swift_bridgeObjectRetain();
        id v20 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v20) = String.hasPrefix(_:)((Swift::String)xmmword_100689938);
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x2D65746176697270;
        int v7 = (char *)0xEE007265646C6F66;
        swift_bridgeObjectRetain();
        id v21 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v21) = String.hasPrefix(_:)((Swift::String)xmmword_100689948);
        swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = *(void *)"syncing";
        int v7 = (char *)0xE700000000000000;
        swift_bridgeObjectRetain();
        id v22 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        v23._uint64_t countAndFlagsBits = *(void *)"syncing";
        v23._unint64_t object = (void *)0xE700000000000000;
        LOBYTE(v22) = String.hasPrefix(_:)(v23);
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = 0x676E69646E657274;
        int v7 = (char *)0xE800000000000000;
        swift_bridgeObjectRetain();
        id v24 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        LOBYTE(v24) = String.hasPrefix(_:)((Swift::String)xmmword_100689968);
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = *(void *)"warning";
        int v7 = (char *)0xE700000000000000;
        swift_bridgeObjectRetain();
        id v30 = [v2 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.lowercased()();
        swift_bridgeObjectRelease();
        v31._uint64_t countAndFlagsBits = *(void *)"warning";
        v31._unint64_t object = (void *)0xE700000000000000;
        LOBYTE(v30) = String.hasPrefix(_:)(v31);
        swift_bridgeObjectRelease();
        if (v30)
        {
LABEL_16:
          swift_arrayDestroy();
          unint64_t v56 = 0xD000000000000020;
          unint64_t v57 = 0x80000001006026A0;
          v25._uint64_t countAndFlagsBits = v8;
          v25._unint64_t object = v7;
          String.append(_:)(v25);
          swift_bridgeObjectRelease();
          id v26 = (objc_class *)type metadata accessor for DOCFakeFPItemDecoration();
          uint64_t v27 = (char *)objc_allocWithZone(v26);
          char v28 = &v27[OBJC_IVAR____TtC5FilesP33_0D3D84D98814A1E39FA4FAA1E54BDD7A23DOCFakeFPItemDecoration_ut];
          *(void *)char v28 = 0xD000000000000020;
          *((void *)v28 + 1) = 0x80000001006026A0;
          v55.receiver = v27;
          v55.super_class = v26;
          [super init];
LABEL_50:
          swift_unknownObjectRelease();
          return (uint64_t)v29;
        }
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
      }
    }
  }
  id v32 = [v2 itemDecorations];
  sub_10009E6C4(0, &qword_10071CE20);
  unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_21;
    }
LABEL_43:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_51;
    }
    goto LABEL_44;
  }
  uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v34) {
    goto LABEL_43;
  }
LABEL_21:
  if (v34 < 1)
  {
    __break(1u);
    goto LABEL_56;
  }
  double v54 = v2;
  for (uint64_t i = 0; i != v34; ++i)
  {
    if ((v33 & 0xC000000000000001) != 0) {
      id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v36 = *(id *)(v33 + 8 * i + 32);
    }
    long long v37 = v36;
    id v38 = [v36 type];
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;
    if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v44 & 1) == 0) {
        goto LABEL_23;
      }
    }
    id v45 = [v37 decorationIdentifier];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v47;

    if (v46 == 0x64656E6E6950 && v48 == 0xE600000000000000)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v49)
      {
LABEL_23:

        continue;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v51 = v56;
  if ((v56 & 0x8000000000000000) == 0)
  {
LABEL_44:
    if ((v51 & 0x4000000000000000) != 0) {
      goto LABEL_51;
    }
    if (*(void *)(v51 + 16)) {
      goto LABEL_46;
    }
LABEL_52:
    swift_release();
    swift_unknownObjectRelease();
    return 0;
  }
LABEL_51:
  swift_bridgeObjectRetain();
  uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_release();
  if (!v53) {
    goto LABEL_52;
  }
LABEL_46:
  if ((v51 & 0xC000000000000001) != 0)
  {
LABEL_56:
    id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_49:
    id v29 = v52;
    swift_release();
    goto LABEL_50;
  }
  if (*(void *)(v51 + 16))
  {
    id v52 = *(id *)(v51 + 32);
    goto LABEL_49;
  }
  __break(1u);
  return result;
}

id sub_1000A4858()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___renameGestureRecognizer;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___renameGestureRecognizer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell____lazy_storage___renameGestureRecognizer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for DOCButtonGestureRecognizer()) initWithTarget:v0 action:"renameGesture:"];
    [v4 setDelegate:v0];
    NSString v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1000A48F0(void *a1)
{
  id v3 = (id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  id v4 = (char *)*v3;
  if (*v3)
  {
    *(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate + 8] = 0;
    swift_unknownObjectWeakAssign();
    uint64_t v5 = qword_100705348;
    id v6 = v4;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_1007377D0;
    uint64_t v8 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    *(void *)&v6[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = qword_1007377D0;
    if (!*(void *)&v6[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
      && !sub_1000CBC64())
    {
      *(void *)&v6[v8] = 0;
      sub_100090F98(v7, (uint64_t)v6);
    }

    if (*v3)
    {
      id v10 = *v3;
      sub_1000D6480();

      id v4 = (char *)*v3;
    }
    else
    {
      id v4 = 0;
    }
  }
  *id v3 = a1;
  id v11 = a1;

  sub_1000A4A38();
}

void sub_1000A4A38()
{
  uint64_t v1 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  int v2 = (char *)*v1;
  if (*v1)
  {
    *(void *)&v2[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_delegate + 8] = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign();
    uint64_t v3 = qword_100705348;
    id v4 = v2;
    uint64_t v5 = v0;
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_1007377D0;
    uint64_t v7 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    *(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications] = qword_1007377D0;
    if (!*(void *)&v4[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount]
      && !sub_1000CBC64())
    {
      *(void *)&v4[v7] = 0;
      sub_100090F98(v6, (uint64_t)v4);
    }

    id v9 = *v1;
    if (*v1)
    {
      id v10 = *(void **)&v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress];
      if (v10)
      {
        v9[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress] = 1;
        id v11 = v9;
        id v12 = v10;
        id v13 = (void *)static DOCLog.UI.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1005A0030;
        *(void *)(v14 + 56) = sub_10009E6C4(0, &qword_10070EB70);
        *(void *)(v14 + 64) = sub_1001141E0();
        *(void *)(v14 + 32) = v12;
        id v15 = v12;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        NSString v16 = String._bridgeToObjectiveC()();
        [v15 addObserver:v11 forKeyPath:v16 options:1 context:&unk_10071CC00];

        NSString v17 = String._bridgeToObjectiveC()();
        [v15 addObserver:v11 forKeyPath:v17 options:1 context:&unk_10071CC00];
      }
    }
  }
}

uint64_t sub_1000A4D20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCItemCollectionConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DOCItemCollectionConfiguration()
{
  uint64_t result = qword_1007148D8;
  if (!qword_1007148D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void destroy for DOCItemCollectionConfiguration(id *a1, int *a2)
{
  id v4 = (char *)a1 + a2[8];
  uint64_t v5 = type metadata accessor for DOCItemSortMode();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v7 = *(id *)((char *)a1 + a2[13]);
}

uint64_t sub_1000A4ED0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000A4EF0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000A4EF0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708DB0);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1000A5074(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_1007179D0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1000A54AC(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000A5174(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_1000A54B0(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    void v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000A52A4(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_1000A5334(a1, v2);
}

unint64_t sub_1000A5334(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

_OWORD *sub_1000A54B0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1000A54C0(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, unsigned char *a5, uint64_t *a6)
{
  uint64_t v12 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - v16;
  if ((a2 & 1) != 0
    || (char v18 = (void *)(a1
                       + *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0) + 20)),
        !*v18))
  {
    sub_1000A5858(a1, (uint64_t)v17, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    a3(a1);
    sub_1000A5858(a1, (uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    char v25 = sub_1000A5E00((uint64_t)v15, (uint64_t)v17);
    sub_1000A5770((uint64_t)v15, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    uint64_t result = sub_1000A5770((uint64_t)v17, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    if ((v25 & 1) == 0) {
      *a5 = 1;
    }
    if (a2)
    {
      uint64_t v26 = a1 + *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0) + 20);
      uint64_t v27 = *a6;
      *(_OWORD *)a6 = *(_OWORD *)v26;
      uint64_t result = sub_10008937C(v27);
      *(void *)uint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
    }
  }
  else
  {
    long long v19 = (char *)v18[1];
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a3;
    *(void *)(v20 + 24) = a4;
    swift_bridgeObjectRetain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v19 = sub_100190720(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v22 = *((void *)v19 + 2);
    unint64_t v21 = *((void *)v19 + 3);
    if (v22 >= v21 >> 1) {
      long long v19 = sub_100190720((char *)(v21 > 1), v22 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v22 + 1;
    Swift::String v23 = &v19[16 * v22];
    *((void *)v23 + 4) = sub_100363E10;
    *((void *)v23 + 5) = v20;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000A5710(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A5770(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(uint64_t a1)
{
  return sub_10009E984(a1, qword_10071A0D8);
}

uint64_t sub_1000A57F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A5858(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeWithCopy for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v16 + 24);
  id v18 = v9;
  swift_bridgeObjectRetain();
  id v19 = v12;
  id v20 = v13;
  if (v17)
  {
    *(void *)(v15 + 24) = v17;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(v15, v16, v17);
  }
  else
  {
    long long v21 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v21;
  }
  return a1;
}

uint64_t destroy for DOCBrowserHistoryItem(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  uint64_t result = a1 + a2[9];
  if (*(void *)(result + 24)) {
    return sub_10009B1B8(result);
  }
  return result;
}

uint64_t sub_1000A5A74(uint64_t a1)
{
  long long v2 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2))
  {
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);

    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[9];
    if (*(void *)(v4 + 24)) {
      sub_10009B1B8(v4);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F3A00);
}

uint64_t type metadata accessor for DOCBrowserHistoryItem(uint64_t a1)
{
  return sub_10009E984(a1, qword_100719E20);
}

char *sub_1000A5BB8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v7;
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = v6[5];
    uint64_t v11 = *(void **)&a2[v10];
    *(void *)&a1[v10] = v11;
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v12 = v6[7];
    uint64_t v13 = *(void **)&a2[v12];
    *(void *)&a1[v12] = v13;
    uint64_t v14 = v6[8];
    uint64_t v15 = *(void **)&a2[v14];
    *(void *)&a1[v14] = v15;
    uint64_t v16 = v6[9];
    uint64_t v17 = &a1[v16];
    id v18 = &a2[v16];
    uint64_t v19 = *(void *)&a2[v16 + 24];
    id v20 = v11;
    swift_bridgeObjectRetain();
    id v21 = v13;
    id v22 = v15;
    if (v19)
    {
      *((void *)v17 + 3) = v19;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      long long v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(a1, 0, 1, v6);
  }
  uint64_t v24 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F3AC0);
}

uint64_t type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(uint64_t a1)
{
  return sub_10009E984(a1, qword_10071A048);
}

uint64_t sub_1000A5E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_10071A188);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_10070E838);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v29 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v31 = a1;
  sub_1000CBC00(a1, (uint64_t)&v29 - v18, &qword_10070E838);
  uint64_t v32 = a2;
  sub_1000CBC00(a2, (uint64_t)v17, &qword_10070E838);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1000CBC00((uint64_t)v19, (uint64_t)v10, &qword_10070E838);
  sub_1000CBC00((uint64_t)v17, v20, &qword_10070E838);
  id v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v17, &qword_10070E838);
    sub_1000CBBA4((uint64_t)v19, &qword_10070E838);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1000CBBA4((uint64_t)v10, &qword_10070E838);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1000CBC00((uint64_t)v10, (uint64_t)v14, &qword_10070E838);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v17, &qword_10070E838);
    sub_1000CBBA4((uint64_t)v19, &qword_10070E838);
    sub_1000A5770((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
LABEL_6:
    sub_1000CBBA4((uint64_t)v10, &qword_10071A188);
LABEL_10:
    char v27 = 0;
    return v27 & 1;
  }
  uint64_t v22 = v30;
  sub_1000BC744(v20, v30, type metadata accessor for DOCBrowserHistoryItem);
  char v23 = static UUID.== infix(_:_:)();
  sub_1000A5770(v22, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000CBBA4((uint64_t)v17, &qword_10070E838);
  sub_1000CBBA4((uint64_t)v19, &qword_10070E838);
  sub_1000A5770((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000CBBA4((uint64_t)v10, &qword_10070E838);
  if ((v23 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v24 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v26 = v31;
  uint64_t v25 = v32;
  if ((sub_1000A61BC(*(void *)(v31 + *(int *)(v24 + 20)), *(void *)(v32 + *(int *)(v24 + 20))) & 1) == 0) {
    goto LABEL_10;
  }
  char v27 = sub_1000A61BC(*(void *)(v26 + *(int *)(v24 + 24)), *(void *)(v25 + *(int *)(v24 + 24)));
  return v27 & 1;
}

uint64_t sub_1000A61BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1002903D0(a1 + v12, (uint64_t)v10);
        sub_1002903D0(a2 + v12, (uint64_t)v7);
        char v15 = static UUID.== infix(_:_:)();
        sub_100290434((uint64_t)v7);
        sub_100290434((uint64_t)v10);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1000A631C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100717980);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37) {
      break;
    }
    id v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v37) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_10008E1D0(v24, (uint64_t)&v39);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      swift_unknownObjectRetain();
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v27;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  id v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v21 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000A6630(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708680, &qword_100708678);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708678);
          unint64_t v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A6864(uint64_t result)
{
  v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = result;
  uint64_t v2 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  int v3 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
  if (v3 != 2)
  {
    uint64_t v4 = v1;
    sub_1000A6AA0();
    char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
    uint64_t result = swift_release();
    if ((valid & 1) == 0)
    {
      uint64_t result = [v1 doc_hasAppearedOrIsAppearing];
      if (result)
      {
        type metadata accessor for DOCBrowserContainedViewController();
        unint64_t v6 = v1;
        sub_1000CBE70(&qword_100711800);
        if (swift_dynamicCast())
        {
          uint64_t v7 = v3 & 1;
          uint64_t v8 = *((void *)&v11 + 1);
          uint64_t v9 = v12;
          sub_1000A6B78(&v10, *((uint64_t *)&v11 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(v7, v8, v9);
          uint64_t result = sub_10009B1B8((uint64_t)&v10);
        }
        else
        {
          uint64_t v12 = 0;
          long long v10 = 0u;
          long long v11 = 0u;
          uint64_t result = sub_100240A64((uint64_t)&v10);
        }
        v4[v2] = 2;
      }
    }
  }
  return result;
}

void sub_1000A6988()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
  int v2 = v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
  if (v2 != 2)
  {
    int v3 = v0;
    sub_1000A6AA0();
    char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
    swift_release();
    if ((valid & 1) == 0)
    {
      if (objc_msgSend(v0, "doc_hasAppearedOrIsAppearing"))
      {
        type metadata accessor for DOCBrowserContainedViewController();
        uint64_t v5 = v0;
        sub_1000CBE70(&qword_100711800);
        if (swift_dynamicCast())
        {
          uint64_t v6 = v2 & 1;
          uint64_t v7 = *((void *)&v10 + 1);
          uint64_t v8 = v11;
          sub_1000A6B78(&v9, *((uint64_t *)&v10 + 1));
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v6, v7, v8);
          sub_10009B1B8((uint64_t)&v9);
        }
        else
        {
          uint64_t v11 = 0;
          long long v9 = 0u;
          long long v10 = 0u;
          sub_100240A64((uint64_t)&v9);
        }
        v3[v1] = 2;
      }
    }
  }
}

uint64_t sub_1000A6AA0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController____lazy_storage___overlayUpdateDisabledAssertions);
  }
  else
  {
    uint64_t v3 = v0;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for DOCAssertionCollection();
    swift_allocObject();
    uint64_t v2 = DOCAssertionCollection.init(debugName:_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1000A6B78(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1000A6BBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a2;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8);
  unint64_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  char v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  id v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v46 = (char *)&v46 - v15;
  unint64_t v56 = v4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v17 = (void *)Strong;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 0;
    unint64_t v19 = (void (**)(uint64_t))(v18 + 16);
    *(void *)(v18 + 24) = 0;
    int64_t v20 = (void *)swift_allocObject();
    void v20[2] = a3;
    v20[3] = a4;
    v20[4] = a1;
    v20[5] = v18;
    swift_beginAccess();
    uint64_t v21 = *(void *)(v18 + 16);
    *(void *)(v18 + 16) = sub_100068034;
    *(void *)(v18 + 24) = v20;
    swift_retain();
    unint64_t v22 = a1;
    swift_retain();
    sub_1000A7258(v21);
    unsigned __int8 v23 = [v17 presentationContextShowsProvidersAsBrowserRoot];
    unint64_t v57 = v17;
    if (v23)
    {
      BOOL v24 = 0;
      long long v25 = (void *)v55;
    }
    else
    {
      unint64_t v26 = sub_10008A504();
      if (v26 >> 62) {
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      long long v25 = (void *)v55;
      swift_bridgeObjectRelease();
      BOOL v24 = v27 == 0;
    }
    id v28 = [v25 sourceIdentifier];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;
    if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32) {
      int v33 = 1;
    }
    else {
      int v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 | v33))
    {
      uint64_t v34 = *v19;
      if (*v19)
      {
        uint64_t v35 = swift_retain();
        v34(v35);
        sub_1000A7258((uint64_t)v34);
      }
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      int64_t v37 = (uint64_t (**)(unint64_t))&v22[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
      uint64_t v38 = *(void *)&v22[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting];
      *int64_t v37 = sub_1000D6000;
      v37[1] = (uint64_t (*)(unint64_t))v18;
      swift_retain_n();
      sub_1000A7258(v38);
      sub_1000AD604();
      swift_release();
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v55 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      [*(id *)&v56[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_configuration] thumbnailFetchingTimeOut];
      long long v39 = v46;
      + infix(_:_:)();
      uint64_t v40 = v48;
      unint64_t v56 = *(char **)(v47 + 8);
      ((void (*)(char *, uint64_t))v56)(v14, v48);
      aBlock[4] = sub_100067FC0;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006AD9E8;
      uint64_t v41 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      uint64_t v42 = v49;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100073F9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      long long v43 = v51;
      uint64_t v44 = v54;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v45 = (void *)v55;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v41);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v44);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v52);
      ((void (*)(char *, uint64_t))v56)(v39, v40);
      return swift_release();
    }
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A7258(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1000A745C(void *a1, char a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection);
    uint64_t v7 = *(void **)(v6 + 24);
    if (v7)
    {
      id v8 = *(id *)(v6 + 24);
      goto LABEL_6;
    }
    uint64_t v9 = *(void **)(v6 + 16);
    if (v9)
    {
      id v8 = v9;
      uint64_t v7 = 0;
LABEL_6:
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      id v10 = a1;
      id v11 = v7;
      id v12 = v8;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13) {
        return;
      }
    }
  }
  uint64_t v14 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  uint64_t v15 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection;
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection);
  long long v17 = *(void **)(v16 + 24);
  if (*(void *)(*(void *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer) + 96))
  {
    *(void *)(v16 + 24) = a1;
    id v18 = a1;

    swift_retain();
    sub_1004880B0(0xD00000000000003BLL, 0x80000001005E2AD0);
    swift_release();
    uint64_t v19 = *(void *)(v3 + v14);
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = a1;
    *(unsigned char *)(v21 + 32) = a2 & 1;
    uint64_t v22 = *(void *)(v19 + 104);
    *(void *)(v19 + 104) = sub_10028E4A0;
    *(void *)(v19 + 112) = v21;
    id v23 = v18;
    sub_1000A7258(v22);
  }
  else
  {
    *(void *)(v16 + 24) = 0;

    uint64_t v24 = *(void *)(v3 + v15);
    long long v25 = *(void **)(v24 + 16);
    *(void *)(v24 + 16) = a1;
    id v26 = a1;

    sub_1000B8744(a2 & 1, 0);
    swift_retain();
    sub_1000C6424();
    swift_release();
  }
}