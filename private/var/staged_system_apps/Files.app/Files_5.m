uint64_t sub_1003302EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a4;
  v35 = a6;
  v36 = a2;
  v9 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  v33 = *(void *)(v9 - 8);
  v34 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DOCItemSortMode();
  v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[1] = a1;
  v32[0] = DOCItemSortMode.rawValue.getter();
  v17 = v16;
  v18 = *(void (**)(uint64_t, uint64_t))(a5 + 176);
  swift_unknownObjectRetain();
  v37 = a5;
  v18(v38, a5);
  v19 = a3;
  swift_unknownObjectRelease();
  v20 = DOCItemSortMode.rawValue.getter();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v23 = v32[0] == v20 && v17 == v22;
  v24 = 1;
  if (!v23) {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  DOCItemSortMode.displayableMode.getter();
  v25 = DOCItemSortMode.DisplayableMode.localizedName.getter();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
  v28 = static VerticalAlignment.center.getter();
  v29 = v35;
  *v35 = v28;
  v29[1] = 0;
  *((unsigned char *)v29 + 16) = 1;
  v30 = sub_1000CBE70(&qword_1007116A8);
  sub_100330578(v25, v27, v24 & 1, v19, v38, v37, (uint64_t)v29 + *(int *)(v30 + 44));
  return swift_bridgeObjectRelease();
}

uint64_t sub_100330578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v49 = a5;
  uint64_t v51 = a4;
  LODWORD(v55) = a3;
  uint64_t v53 = sub_1000CBE70(&qword_1007116B0);
  __chkstk_darwin(v53);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Image.Scale();
  uint64_t v54 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v50 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CBE70(&qword_1007116B8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v52 = (uint64_t *)((char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1000CBE70(&qword_1007116C0);
  __chkstk_darwin(v18 - 8);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v44 - v22;
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  sub_10009D28C();
  swift_bridgeObjectRetain();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v25 = v24;
  uint64_t v57 = v26;
  int v56 = v27;
  uint64_t v29 = v28;
  if (v55)
  {
    v46 = (uint64_t *)v12;
    uint64_t v47 = v24;
    uint64_t v48 = v13;
    uint64_t v45 = v15;
    v30 = *(void (**)(uint64_t, uint64_t))(a6 + 200);
    swift_unknownObjectRetain();
    uint64_t v55 = v16;
    v30(v49, a6);
    swift_unknownObjectRelease();
    uint64_t v31 = Image.init(systemName:)();
    uint64_t v32 = v54;
    v33 = v50;
    uint64_t v34 = v48;
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v50, enum case for Image.Scale.small(_:), v48);
    uint64_t KeyPath = swift_getKeyPath();
    v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v46 + *(int *)(v53 + 28), v33, v34);
    uint64_t v37 = (uint64_t)v36;
    uint64_t *v36 = KeyPath;
    uint64_t v15 = v45;
    v38 = v52;
    sub_1000CBC00(v37, (uint64_t)v52 + *(int *)(v45 + 36), &qword_1007116B0);
    uint64_t *v38 = v31;
    swift_retain();
    sub_1000CBBA4(v37, &qword_1007116B0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v48);
    uint64_t v25 = v47;
    uint64_t v16 = v55;
    swift_release();
    sub_1000CBE0C((uint64_t)v38, (uint64_t)v23, &qword_1007116B8);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v39 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v23, v39, 1, v15);
  char v40 = v56 & 1;
  sub_1000CBC00((uint64_t)v23, (uint64_t)v20, &qword_1007116C0);
  uint64_t v41 = v57;
  *(void *)a7 = v25;
  *(void *)(a7 + 8) = v41;
  *(unsigned char *)(a7 + 16) = v40;
  *(void *)(a7 + 24) = v29;
  uint64_t v42 = sub_1000CBE70(&qword_1007116C8);
  sub_1000CBC00((uint64_t)v20, a7 + *(int *)(v42 + 48), &qword_1007116C0);
  sub_10033310C(v25, v41, v40);
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v23, &qword_1007116C0);
  sub_1000CBBA4((uint64_t)v20, &qword_1007116C0);
  sub_10033311C(v25, v41, v40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100330A14@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  v6 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  swift_unknownObjectRetain();
  v6(a1, a2);
  swift_unknownObjectRelease();
  sub_10009D28C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v9 & 1;
  *(void *)(a3 + 24) = v10;
  return result;
}

uint64_t sub_100330AB8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v28 = a3;
  uint64_t v4 = type metadata accessor for TitleOnlyLabelStyle();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v7 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DOCItemSortMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(a2 + 176);
  swift_unknownObjectRetain();
  v14(v25, a2);
  swift_unknownObjectRelease();
  DOCItemSortMode.displayableMode.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = DOCItemSortMode.DisplayableMode.localizedName.getter();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  uint64_t v29 = v15;
  uint64_t v30 = v17;
  sub_10009D28C();
  uint64_t v29 = Text.init<A>(_:)();
  uint64_t v30 = v18;
  char v31 = v19 & 1;
  uint64_t v32 = v20;
  TitleOnlyLabelStyle.init()();
  sub_10033315C(&qword_1007115D8, (void (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle);
  uint64_t v21 = v27;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v21);
  sub_10033311C(v29, v30, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100330DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = type metadata accessor for DOCItemGroupingBehavior();
  double v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v11 + 16))(v10, a1, v8);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 152))(v10, v5, v6);
}

uint64_t sub_100330EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(a4 + 136);
  swift_unknownObjectRetain();
  v10(a3, a4);
  swift_unknownObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(double *)(v11 + 48) = a5;
  swift_unknownObjectRetain();
  sub_1000CBE70(&qword_100711668);
  type metadata accessor for DOCItemGroupingBehavior();
  sub_1000CBE70(&qword_100711610);
  sub_100073DF0(&qword_100711670, &qword_100711668);
  sub_100332EE8(&qword_100711608, &qword_100711610, (void (*)(void))sub_100332F98);
  sub_10033315C(&qword_100711678, (void (*)(uint64_t))&type metadata accessor for DOCItemGroupingBehavior);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100331054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v47 = a5;
  uint64_t v6 = sub_1000CBE70(&qword_100711680);
  __chkstk_darwin(v6 - 8);
  uint64_t v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100711640);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_100711688);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000CBE70(&qword_100711630);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000CBE70(&qword_100711620);
  __chkstk_darwin(v43);
  uint64_t v41 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1;
  uint64_t v50 = DOCItemGroupingBehavior.localizedName.getter();
  uint64_t v51 = v19;
  sub_10009D28C();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v48 = v21;
  uint64_t v49 = v20;
  uint64_t v38 = v22;
  int v24 = v23 & 1;
  uint64_t v25 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v13, a1, v25);
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
  v28(v13, 0, 1, v25);
  sub_1000CBC00((uint64_t)v13, (uint64_t)v10, &qword_100711688);
  sub_1000CBC00((uint64_t)v10, (uint64_t)&v17[*(int *)(v15 + 44)], &qword_100711640);
  uint64_t v30 = v48;
  uint64_t v29 = v49;
  *(void *)uint64_t v17 = v49;
  *((void *)v17 + 1) = v30;
  int v40 = v24;
  v17[16] = v24;
  *((void *)v17 + 3) = v38;
  sub_10033310C(v29, v30, v24);
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v10, &qword_100711640);
  sub_1000CBBA4((uint64_t)v13, &qword_100711688);
  uint64_t v31 = (uint64_t)v42;
  uint64_t v32 = v39;
  v27(v42, v39, v25);
  v28((char *)v31, 0, 1, v25);
  uint64_t v33 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
  uint64_t v34 = (uint64_t)v41;
  sub_1000CBC00(v31, (uint64_t)&v41[*(int *)(v43 + 36)], &qword_100711680);
  sub_1000CBC00((uint64_t)v17, v34, &qword_100711630);
  sub_1000CBBA4(v31, &qword_100711680);
  sub_1000CBBA4((uint64_t)v17, &qword_100711630);
  sub_10033311C(v49, v48, v40);
  swift_bridgeObjectRelease();
  uint64_t v35 = v44;
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 56);
  swift_unknownObjectRetain();
  v36(v32, v46, v35);
  swift_unknownObjectRelease();
  sub_100332F98();
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  return sub_1000CBBA4(v34, &qword_100711620);
}

uint64_t sub_1003314A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(a4 + 224);
  swift_unknownObjectRetain();
  v10(a3, a4);
  swift_unknownObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(double *)(v11 + 48) = a5;
  swift_unknownObjectRetain();
  sub_1000CBE70(&qword_1007116D0);
  sub_1000CBE70(&qword_100711560);
  sub_100073DF0(&qword_1007116D8, &qword_1007116D0);
  sub_100332EE8(&qword_100711558, &qword_100711560, (void (*)(void))sub_100332B00);
  sub_1003331FC();
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100331618(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  sub_100453F5C(*a1);
  sub_10009D28C();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 88);
  swift_unknownObjectRetain();
  v13(v7, a4, a5);
  swift_unknownObjectRelease();
  sub_1000CBE70(&qword_100711570);
  sub_100332B00();
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10033311C(v8, v10, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100331740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a3;
  uint64_t v39 = a5;
  uint64_t v9 = type metadata accessor for Material();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  __chkstk_darwin(v9);
  uint64_t v35 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_1007113D0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000CBE70(&qword_1007113D8);
  uint64_t v15 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000CBE70(&qword_1007113E0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000CBE70(&qword_1007113E8);
  __chkstk_darwin(v36);
  char v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v33;
  uint64_t v41 = a4;
  uint64_t v42 = v32;
  uint64_t v43 = a2;
  double v44 = a6;
  sub_1000CBE70(&qword_1007113F0);
  sub_1003323A4(&qword_1007113F8, &qword_1007113F0, (void (*)(void))sub_100332164);
  List<>.init(content:)();
  sub_100073DF0(&qword_1007114A8, &qword_1007113D0);
  View.scrollContentBackground(_:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  int v24 = v35;
  static Material.thick.getter();
  LOBYTE(v14) = static Edge.Set.all.getter();
  uint64_t v25 = &v21[*(int *)(v19 + 44)];
  uint64_t v26 = v37;
  uint64_t v27 = v24;
  uint64_t v28 = v24;
  uint64_t v29 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v25, v27, v38);
  v25[*(int *)(sub_1000CBE70(&qword_1007114B0) + 36)] = (char)v14;
  uint64_t v30 = v34;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v17, v34);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v30);
  static Alignment.center.getter();
  sub_100331F54(0.0, 1, a6, 0, 0.0, 1, 0.0, 1, (uint64_t)v23, 0.0, 1, 0.0, 1);
  sub_1000CBBA4((uint64_t)v21, &qword_1007113E0);
  sub_1003325B0();
  View.listSizesToFit(maxHeight:)();
  return sub_1000CBBA4((uint64_t)v23, &qword_1007113E8);
}

uint64_t sub_100331BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(a4 + 256);
  swift_unknownObjectRetain();
  v10(a3, a4);
  swift_unknownObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(double *)(v11 + 48) = a5;
  swift_unknownObjectRetain();
  sub_1000CBE70(&qword_1007114D0);
  sub_1000CBE70(&qword_100711408);
  sub_100073DF0(&qword_1007114D8, &qword_1007114D0);
  sub_100332164();
  sub_100332844();
  return ForEach<>.init(_:content:)();
}

id sub_100331D24(unsigned __int8 *a1)
{
  if (*a1 <= 1u) {
    goto LABEL_5;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    v2 = result;
    v10._object = (void *)0x80000001005EA1A0;
    v3._countAndFlagsBits = 0x6465636E61766441;
    v3._object = (void *)0xE800000000000000;
    v4._countAndFlagsBits = 0x617A696C61636F4CLL;
    v4._object = (void *)0xEB00000000656C62;
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    v10._countAndFlagsBits = 0xD000000000000033;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v10);

    sub_10009D28C();
    Text.init<A>(_:)();
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v6 = result;
      v7._countAndFlagsBits = 0xD000000000000077;
      v11._object = (void *)0x80000001005EA260;
      v7._object = (void *)0x80000001005EA1E0;
      v8._countAndFlagsBits = 0x617A696C61636F4CLL;
      v8._object = (void *)0xEB00000000656C62;
      v9._countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      v11._countAndFlagsBits = 0xD000000000000033;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v11);

      Text.init<A>(_:)();
LABEL_5:
      sub_1000CBE70(&qword_100711418);
      sub_1000CBE70(&qword_100711428);
      sub_1003321E4();
      sub_100332250();
      return (id)Section<>.init(header:footer:content:)();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

__n128 sub_100331F54@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    char v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1000CBC00(v13, a9, &qword_1007113E0);
  int v24 = (_OWORD *)(a9 + *(int *)(sub_1000CBE70(&qword_1007113E8) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *int v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_10033211C()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100332138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100331740(*(void *)v2, *(void *)(v2 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), a2, *(double *)(v2 + 16));
}

uint64_t sub_10033214C()
{
  return sub_100332E38(sub_100331BD0);
}

unint64_t sub_100332164()
{
  unint64_t result = qword_100711400;
  if (!qword_100711400)
  {
    sub_100074618(&qword_100711408);
    sub_1003321E4();
    sub_100332250();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711400);
  }
  return result;
}

unint64_t sub_1003321E4()
{
  unint64_t result = qword_100711410;
  if (!qword_100711410)
  {
    sub_100074618(&qword_100711418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711410);
  }
  return result;
}

unint64_t sub_100332250()
{
  unint64_t result = qword_100711420;
  if (!qword_100711420)
  {
    sub_100074618(&qword_100711428);
    sub_1003322CC();
    sub_1003324E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711420);
  }
  return result;
}

unint64_t sub_1003322CC()
{
  unint64_t result = qword_100711430;
  if (!qword_100711430)
  {
    sub_100074618(&qword_100711438);
    sub_100073DF0(&qword_100711440, &qword_100711448);
    sub_1003323A4(&qword_100711450, &qword_100711458, (void (*)(void))sub_100332410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711430);
  }
  return result;
}

uint64_t sub_1003323A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100332410()
{
  unint64_t result = qword_100711460;
  if (!qword_100711460)
  {
    sub_100074618(&qword_100711468);
    sub_100073DF0(&qword_100711470, &qword_100711478);
    sub_10033315C(&qword_100711480, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711460);
  }
  return result;
}

unint64_t sub_1003324E0()
{
  unint64_t result = qword_100711488;
  if (!qword_100711488)
  {
    sub_100074618(&qword_100711490);
    sub_100073DF0(&qword_100711498, &qword_1007114A0);
    sub_10033315C(&qword_100711480, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711488);
  }
  return result;
}

unint64_t sub_1003325B0()
{
  unint64_t result = qword_1007114B8;
  if (!qword_1007114B8)
  {
    sub_100074618(&qword_1007113E8);
    sub_10033262C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007114B8);
  }
  return result;
}

unint64_t sub_10033262C()
{
  unint64_t result = qword_1007114C0;
  if (!qword_1007114C0)
  {
    sub_100074618(&qword_1007113E0);
    sub_100074618(&qword_1007113D0);
    sub_100073DF0(&qword_1007114A8, &qword_1007113D0);
    swift_getOpaqueTypeConformance2();
    sub_100073DF0(&qword_1007114C8, &qword_1007114B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007114C0);
  }
  return result;
}

uint64_t sub_10033272C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  double v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_1003327F4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10033282C(uint64_t a1)
{
  return sub_1003331E4(a1, (uint64_t (*)(uint64_t, void, void, void, void, double))sub_100331D24);
}

unint64_t sub_100332844()
{
  unint64_t result = qword_1007114E0;
  if (!qword_1007114E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007114E0);
  }
  return result;
}

uint64_t sub_100332898@<X0>(uint64_t a1@<X8>)
{
  return sub_10032E518(*(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1003328AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 112))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1003328F8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 120))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_10033293C()
{
  return 16;
}

__n128 sub_100332948(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100332954@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a2 + a1 - 8) + 232))(*(void *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1003329A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a4 + a3 - 8) + 240))(*a1, *(void *)(a4 + a3 - 16));
}

uint64_t sub_1003329E4()
{
  return 16;
}

__n128 sub_1003329F0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1003329FC()
{
  return sub_100332E38(sub_1003314A0);
}

unint64_t sub_100332A14()
{
  unint64_t result = qword_100711548;
  if (!qword_100711548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711548);
  }
  return result;
}

unint64_t sub_100332A68()
{
  unint64_t result = qword_100711550;
  if (!qword_100711550)
  {
    sub_100074618(&qword_100711540);
    sub_100332EE8(&qword_100711558, &qword_100711560, (void (*)(void))sub_100332B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711550);
  }
  return result;
}

unint64_t sub_100332B00()
{
  unint64_t result = qword_100711568;
  if (!qword_100711568)
  {
    sub_100074618(&qword_100711570);
    sub_100333058(&qword_100711578, &qword_100711580, &qword_100711588, &qword_100711590);
    sub_100073DF0(&qword_100711598, &qword_1007115A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711568);
  }
  return result;
}

uint64_t sub_100332BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 176))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_100332C04()
{
  return 16;
}

__n128 sub_100332C10(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100332C1C()
{
  return sub_100332E38(sub_100330138);
}

uint64_t sub_100332C34@<X0>(uint64_t a1@<X8>)
{
  return sub_100330A14(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100332C44()
{
  return sub_100332E38((uint64_t (*)(void, void, void, void, double))sub_100330AB8);
}

unint64_t sub_100332C5C()
{
  unint64_t result = qword_1007115C0;
  if (!qword_1007115C0)
  {
    sub_100074618(&qword_1007115A8);
    sub_100073DF0(&qword_1007115C8, &qword_1007115D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007115C0);
  }
  return result;
}

unint64_t sub_100332CF4()
{
  unint64_t result = qword_1007115E8;
  if (!qword_1007115E8)
  {
    sub_100074618(&qword_100711528);
    sub_100073DF0(&qword_1007115E0, &qword_100711520);
    sub_10033315C(&qword_100711480, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007115E8);
  }
  return result;
}

uint64_t sub_100332DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 + a2 - 8) + 144))(*(void *)(a3 + a2 - 16));
}

uint64_t sub_100332E08()
{
  return 16;
}

__n128 sub_100332E14(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100332E20()
{
  return sub_100332E38(sub_100330EA0);
}

uint64_t sub_100332E38(uint64_t (*a1)(void, void, void, void, double))
{
  return a1(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 48));
}

unint64_t sub_100332E50()
{
  unint64_t result = qword_100711600;
  if (!qword_100711600)
  {
    sub_100074618(&qword_1007115F0);
    sub_100332EE8(&qword_100711608, &qword_100711610, (void (*)(void))sub_100332F98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711600);
  }
  return result;
}

uint64_t sub_100332EE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    a3();
    sub_10033315C(&qword_100711480, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100332F98()
{
  unint64_t result = qword_100711618;
  if (!qword_100711618)
  {
    sub_100074618(&qword_100711620);
    sub_100333058(&qword_100711628, &qword_100711630, &qword_100711638, &qword_100711640);
    sub_100073DF0(&qword_100711648, &qword_100711650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711618);
  }
  return result;
}

uint64_t sub_100333058(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    sub_100073DF0(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003330F4(uint64_t a1)
{
  return sub_100333144(a1, (uint64_t (*)(uint64_t, void, void, void, void, double))sub_100331054);
}

uint64_t sub_10033310C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10033311C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10033312C(uint64_t a1)
{
  return sub_100333144(a1, (uint64_t (*)(uint64_t, void, void, void, void, double))sub_1003302EC);
}

uint64_t sub_100333144(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, double))
{
  return a2(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), *(double *)(v2 + 48));
}

uint64_t sub_10033315C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003331A4()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1003331CC(uint64_t a1)
{
  return sub_1003331E4(a1, (uint64_t (*)(uint64_t, void, void, void, void, double))sub_100331618);
}

uint64_t sub_1003331E4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, double))
{
  return a2(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), *(double *)(v2 + 48));
}

unint64_t sub_1003331FC()
{
  unint64_t result = qword_1007116E0;
  if (!qword_1007116E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007116E0);
  }
  return result;
}

uint64_t sub_100333250()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1003332B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10000A884;
  v8[3] = &unk_1006A2F50;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  [v3 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v7];
  _Block_release(v7);
}

uint64_t DOCBrowserContainerController.containedItemCollectionViewController.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!v2) {
    return 0;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v3 = swift_dynamicCastClass();
  if (v3) {
    id v4 = v2;
  }
  return v3;
}

id sub_10033372C()
{
  return sub_100335058(type metadata accessor for DOCNullTransitionable);
}

unint64_t sub_100333758(unint64_t a1)
{
  unint64_t result = 0x676E6964616F6CLL;
  switch(a1)
  {
    case 0uLL:
      return result;
    case 1uLL:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 2uLL:
      unint64_t result = 0xD000000000000010;
      break;
    case 3uLL:
      unint64_t result = 0x7974706D65;
      break;
    case 4uLL:
      unint64_t result = 0x697265766F636572;
      break;
    default:
      swift_errorRetain();
      id v4 = (void *)_convertErrorToNSError(_:)();
      id v5 = [v4 domain];
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      [v4 code];
      uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
      Swift::String v9 = v8;
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = v7;
      v10._object = v9;
      String.append(_:)(v10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a1);
      unint64_t result = v6;
      break;
  }
  return result;
}

Swift::Int sub_1003338F8(unint64_t a1)
{
  Hasher.init(_seed:)();
  switch(a1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      break;
    default:
      swift_errorRetain();
      uint64_t v2 = (void *)_convertErrorToNSError(_:)();
      id v3 = [v2 domain];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      [v2 code];
      uint64_t v4 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v6 = v5;
      swift_bridgeObjectRetain();
      v7._countAndFlagsBits = v4;
      v7._object = v6;
      String.append(_:)(v7);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000686BC(a1);
      break;
  }
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_100333AC0()
{
  return sub_1003338F8(*v0);
}

uint64_t sub_100333AC8()
{
  sub_100333758(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100333B1C()
{
  unint64_t v1 = *v0;
  Hasher.init(_seed:)();
  sub_100333758(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100333B7C(unint64_t *a1, unint64_t *a2)
{
  return sub_10006AAD0(*a1, *a2);
}

unint64_t sub_100333B88@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100336BE0(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

void *DOCBrowserContainerController.contentViewController.getter()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DOCBrowserContainerController.contentViewController.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  char v4 = *v3;
  *id v3 = a1;
}

uint64_t (*DOCBrowserContainerController.contentViewController.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_100333D80(char a1)
{
  uint64_t v2 = v1;
  uint64_t v17 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_allowsPickingMultipleItems) = a1;
  unint64_t v3 = (unint64_t)sub_10007679C();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      if (v5 < 1)
      {
        __break(1u);
        JUMPOUT(0x100333F94);
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          Swift::String v7 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          Swift::String v7 = (unsigned __int8 *)*(id *)(v4 + 8 * i + 32);
        }
        Swift::String v8 = v7;
        v7[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] = *(unsigned char *)(v2 + v17);
        uint64_t v9 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        int v10 = v7[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation];
        if (v10 != 2)
        {
          sub_1000A6AA0();
          char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if (valid & 1) == 0 && (objc_msgSend(v8, "doc_hasAppearedOrIsAppearing"))
          {
            type metadata accessor for DOCBrowserContainedViewController();
            id v12 = v8;
            sub_1000CBE70(&qword_100711800);
            if (swift_dynamicCast())
            {
              uint64_t v13 = v10 & 1;
              uint64_t v14 = *((void *)&v19 + 1);
              uint64_t v15 = v20;
              sub_1000A6B78(&v18, *((uint64_t *)&v19 + 1));
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 8))(v13, v14, v15);
              sub_10009B1B8((uint64_t)&v18);
            }
            else
            {
              uint64_t v20 = 0;
              long long v18 = 0u;
              long long v19 = 0u;
              sub_100240A64((uint64_t)&v18);
            }
            *((unsigned char *)v8 + v9) = 2;
          }
        }
      }
      return swift_bridgeObjectRelease();
    }
  }

  return swift_bridgeObjectRelease();
}

void *DOCBrowserContainerController.preferredFocusEnvironments.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*v1)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1005A04F0;
    *(void *)(v3 + 32) = v2;
    Swift::String v7 = (void *)v3;
    specialized Array._endMutation()();
    unint64_t v4 = v7;
  }
  else
  {
    unint64_t v4 = _swiftEmptyArrayStorage;
  }
  id v5 = v2;
  return v4;
}

uint64_t DOCBrowserContainerController.description.getter()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  id v1 = [super description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  uint64_t v15 = v2;
  uint64_t v16 = v4;
  id v5 = [v0 navigationItem];
  id v6 = [v5 title];

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v9 = (void *)0xEA00000000002964;
    uint64_t v7 = 0x656C7469746E7528;
  }
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 34;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8736;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return v15;
}

id sub_100334360()
{
  return sub_100335058(type metadata accessor for DOCBrowserContainerController.DOCBrowserContainerControllerView);
}

Swift::Void __swiftcall DOCBrowserContainerController.loadView()()
{
  type metadata accessor for DOCBrowserContainerController.DOCBrowserContainerControllerView();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v0 setView:v1];
}

Swift::Void __swiftcall DOCBrowserContainerController.viewDidLoad()()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super viewDidLoad];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1) & 1) == 0)
  {
    sub_10002D100();
    if (*(void *)&v0[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state] == 5) {
      sub_1000686CC(0, 0, 0);
    }
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  BOOL v5 = _;
  BOOL v6 = animated;
  [super setEditing:v5 animated:v6];
  uint64_t v7 = (id *)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  if (*v7) {
    [*v7 setEditing:v5 animated:v6];
  }
}

void sub_100334518(void *a1)
{
  uint64_t v2 = v1;
  [a1 doc_removeFromParentWithRemoveSubviewBlock:0];
  type metadata accessor for DOCBrowserContainedViewController();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    BOOL v5 = (void *)v4;
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    objc_super v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 32);
    id v9 = a1;
    Swift::String v10 = (void *)v8(ObjectType, v6);

    if (v10) {
      [v5 setAppearance:0];
    }
    (*(void (**)(void))((swift_isaMask & *v5) + 0x110))(0);
    (*(void (**)(void, void))((swift_isaMask & *v5) + 0xE0))(0, 0);
    *(void *)((char *)v5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_viewReusing + 8) = 0;
    swift_unknownObjectWeakAssign();
    Swift::String v11 = *(void **)((char *)v5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
    *(void *)((char *)v5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem) = 0;

    uint64_t v12 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
    *((unsigned char *)v5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
    id v13 = [v5 viewIfLoaded];
    id v14 = [v13 window];

    if (v14) {
      sub_1000A6988();
    }
    *(void *)((char *)v5 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate + 8) = 0;
    swift_unknownObjectWeakAssign();
    *(void *)((char *)v5
              + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *((unsigned char *)v5 + v12) = 0;
    id v15 = [v5 viewIfLoaded];
    id v16 = [v15 window];

    if (v16) {
      sub_1000A6988();
    }
    *(void *)((char *)v5
              + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *((unsigned char *)v5 + v12) = 0;
    id v17 = [v5 viewIfLoaded];
    id v18 = [v17 window];

    if (v18) {
      sub_1000A6988();
    }
  }
  long long v19 = (void **)(v2 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  uint64_t v20 = *v19;
  if (*v19)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    id v21 = a1;
    id v22 = v20;
    char v23 = static NSObject.== infix(_:_:)();

    if (v23)
    {
      int v24 = *v19;
      *long long v19 = 0;
    }
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v26 = (void *)Strong;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    id v27 = a1;
    char v28 = static NSObject.== infix(_:_:)();

    if (v28) {
      sub_1000695FC(0);
    }
  }
}

Swift::Void __swiftcall DOCBrowserContainerController.willMove(toParent:)(UIViewController_optional toParent)
{
  uint64_t v2 = v1;
  Class isa = toParent.value.super.super.isa;
  uint64_t v4 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v4 - 8);
  BOOL v5 = (objc_class *)type metadata accessor for DOCBrowserContainerController();
  v6.receiver = v2;
  v6.super_class = v5;
  [super willMoveToParentViewController:isa];
  type metadata accessor for UITraitHorizontalSizeClass();
  UIViewController.traitOverrides.getter();
  UITraitOverrides.remove(_:)();
  UIViewController.traitOverrides.setter();
}

Swift::Void __swiftcall DOCBrowserContainerController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super traitCollectionDidChange:isa];
  sub_100076F34();
}

uint64_t sub_1003349C8()
{
  id v1 = [v0 childViewControllers];
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      ++v5;
      id v8 = v6;
      sub_100334AF8(&v8, v0);
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_100334AF8(id *a1, void *a2)
{
  id v3 = *a1;
  unsigned int v4 = [*a1 _appearState];
  id result = [a2 _appearState];
  if (v4 != result)
  {
    unsigned int v6 = [v3 _appearState];
    id result = [a2 _appearState];
    switch(v6)
    {
      case 0u:
        if (result == 2)
        {
          [v3 beginAppearanceTransition:1 animated:0];
          return [v3 endAppearanceTransition];
        }
        if (result == 1) {
          goto LABEL_13;
        }
        return result;
      case 1u:
        switch(result)
        {
          case 0:
            [v3 endAppearanceTransition];
            [v3 beginAppearanceTransition:0 animated:0];
            return [v3 endAppearanceTransition];
          case 3:
            [v3 endAppearanceTransition];
            return [v3 beginAppearanceTransition:0 animated:0];
          case 2:
            return [v3 endAppearanceTransition];
        }
        return result;
      case 2u:
        if (result == 3) {
          return [v3 beginAppearanceTransition:0 animated:0];
        }
        if (!result)
        {
          [v3 beginAppearanceTransition:0 animated:0];
          return [v3 endAppearanceTransition];
        }
        return result;
      case 3u:
        switch(result)
        {
          case 0:
            return [v3 endAppearanceTransition];
          case 2:
            [v3 endAppearanceTransition];
            [v3 beginAppearanceTransition:1 animated:0];
            return [v3 endAppearanceTransition];
          case 1:
            [v3 endAppearanceTransition];
LABEL_13:
            id result = [v3 beginAppearanceTransition:1 animated:0];
            break;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

id sub_100334CE0(unsigned __int8 *a1)
{
  id result = [a1 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
  if ((a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] & 1) == 0)
  {
    id v3 = [a1 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v5 = (uint64_t)result;
      if (!result) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_11;
      }
    }
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_23;
    }
    uint64_t v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v8 = v7;
      ++v6;
      [v7 beginAppearanceTransition:1 animated:0];
      [v8 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
    }
    while (v5 != v6);
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_100035508();
    uint64_t v9 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
    a1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled] = 1;
    unint64_t v10 = (unint64_t)sub_10007679C();
    unint64_t v11 = v10;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v12 = (uint64_t)result;
      if (result)
      {
LABEL_13:
        if (v12 >= 1)
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if ((v11 & 0xC000000000000001) != 0) {
              id v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v14 = *(id *)(v11 + 8 * i + 32);
            }
            id v15 = v14;
            (*(void (**)(void))((swift_isaMask & *v14) + 0x208))(a1[v9]);
          }
          return (id)swift_bridgeObjectRelease_n();
        }
LABEL_23:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_13;
      }
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_100334F5C()
{
  swift_unknownObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  sub_1000686AC(*(void *)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_state));

  sub_1000A7258(*(void *)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_stateReporting));
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_actionReporting);
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_overlayDelegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem);
}

id DOCBrowserContainerController.__deallocating_deinit()
{
  return sub_100335058(type metadata accessor for DOCBrowserContainerController);
}

id sub_100335058(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

void DOCBrowserContainerController.effectiveAppearanceDidChange(_:)(void *a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCBrowserContainerController();
  [super effectiveAppearanceDidChange:a1];
  id v3 = [v1 viewIfLoaded];
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = [a1 backgroundColor];
    [v4 setBackgroundColor:v5];
  }
}

id sub_100335154()
{
  id v1 = v0;
  id v2 = [v0 navigationItem];
  id v3 = [v2 searchController];

  if (!v3)
  {
LABEL_6:
    id v6 = [v1 childViewControllers];
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (v8)
      {
LABEL_8:
        uint64_t v9 = 4;
        while (1)
        {
          if ((v7 & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v7 + 8 * v9);
          }
          unint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
          {
            __break(1u);
            goto LABEL_22;
          }
          uint64_t v13 = swift_dynamicCastObjCProtocolConditional();
          id result = [v11 view];
          if (!result)
          {
            __break(1u);
LABEL_27:
            __break(1u);
            return result;
          }
          id v15 = result;
          [result alpha];
          double v17 = v16;

          id result = [v11 view];
          if (!result) {
            goto LABEL_27;
          }
          id v18 = result;
          unsigned __int8 v19 = [result isHidden];

          if (v13)
          {
            if (v17 == 1.0 && (v19 & 1) == 0) {
              break;
            }
          }

          ++v9;
          if (v12 == v8) {
            goto LABEL_23;
          }
        }
        swift_bridgeObjectRelease_n();
        id v5 = (id)swift_dynamicCastObjCProtocolConditional();
        if (v5) {
          return v5;
        }
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8) {
        goto LABEL_8;
      }
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    unint64_t v11 = 0;
LABEL_24:
    _StringGuts.grow(_:)(90);
    id v20 = [v1 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._object = (void *)0x80000001005EA740;
    v25._countAndFlagsBits = 0xD000000000000058;
    String.append(_:)(v25);
    sub_100161A24(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    id v5 = [objc_allocWithZone((Class)type metadata accessor for DOCNullTransitionable()) init];

    return v5;
  }
  if (![v3 isActive]) {
    goto LABEL_5;
  }
  id v4 = [v3 searchResultsController];

  if (!v4) {
    goto LABEL_6;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  id v5 = (id)swift_dynamicCastClass();
  id v3 = v4;
  if (!v5)
  {
LABEL_5:

    goto LABEL_6;
  }
  return v5;
}

void DOCBrowserContainerController.reveal(items:selectEvenIfVisible:completionBlock:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (void *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *id v10 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    id v12 = sub_100335154();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[4] = a3;
    aBlock[5] = a4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000A884;
    aBlock[3] = &unk_1006A2AD8;
    id v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v12 revealWithItems:isa selectEvenIfVisible:a2 & 1 completionBlock:v14];
    _Block_release(v14);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_100335E44()
{
  id v1 = v0;
  id v2 = [v0 navigationItem];
  id v3 = [v2 searchController];

  if (v3)
  {
    if (![v3 isActive])
    {
LABEL_5:

      goto LABEL_6;
    }
    id v4 = [v3 searchResultsController];

    if (v4)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      id result = (id)swift_dynamicCastClass();
      id v3 = v4;
      if (result) {
        return result;
      }
      goto LABEL_5;
    }
  }
LABEL_6:
  _StringGuts.grow(_:)(70);
  id v6 = [v1 description];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._object = (void *)0x80000001005EA570;
  v11._countAndFlagsBits = 0xD000000000000044;
  String.append(_:)(v11);
  sub_100161A24(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone((Class)type metadata accessor for DOCNullTransitionable());

  return [v12 init];
}

void sub_10033681C(void *a1)
{
  id v2 = v1;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem];
  uint64_t v36 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem;
  *(void *)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController__containerNavigationItem] = a1;
  id v4 = a1;

  unint64_t v5 = (unint64_t)sub_10007679C();
  unint64_t v6 = v5;
  if (!(v5 >> 62))
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    sub_100076F34();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_29;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v35 = v7;
    uint64_t v9 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        Swift::String v10 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        Swift::String v10 = *(id *)(v6 + 8 * v8 + 32);
      }
      Swift::String v11 = v10;
      id v12 = *(void **)&v2[v36];
      if (v12) {
        id v13 = *(id *)&v2[v36];
      }
      else {
        id v13 = [v2 navigationItem];
      }
      id v14 = *(void **)&v11[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
      *(void *)&v11[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem] = v13;
      id v15 = v13;
      id v16 = v12;

      uint64_t v17 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
      v11[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      id v18 = v9;
      id v19 = [v11 v9[431]];
      id v20 = [v19 window];

      if (v20)
      {
        int v21 = v11[v17];
        if (v21 != 2)
        {
          sub_1000A6AA0();
          char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if ((valid & 1) == 0)
          {
            if (objc_msgSend(v11, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              char v23 = v11;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v24 = v21 & 1;
                uint64_t v25 = *((void *)&v38 + 1);
                uint64_t v26 = v39;
                sub_1000A6B78(&v37, *((uint64_t *)&v38 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 8))(v24, v25, v26);
                sub_10009B1B8((uint64_t)&v37);
              }
              else
              {
                uint64_t v39 = 0;
                long long v37 = 0u;
                long long v38 = 0u;
                sub_100240A64((uint64_t)&v37);
              }
              v11[v17] = 2;
            }
          }
        }
      }

      v11[v17] = 0;
      uint64_t v9 = v18;
      id v27 = [v11 v18[431]];
      id v28 = [v27 window];

      if (v28)
      {
        int v29 = v11[v17];
        if (v29 != 2)
        {
          sub_1000A6AA0();
          char v30 = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
          swift_release();
          if ((v30 & 1) == 0)
          {
            if (objc_msgSend(v11, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              long long v31 = v11;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v32 = v29 & 1;
                uint64_t v33 = *((void *)&v38 + 1);
                uint64_t v34 = v39;
                sub_1000A6B78(&v37, *((uint64_t *)&v38 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 8))(v32, v33, v34);
                sub_10009B1B8((uint64_t)&v37);
              }
              else
              {
                uint64_t v39 = 0;
                long long v37 = 0u;
                long long v38 = 0u;
                sub_100240A64((uint64_t)&v37);
              }
              v11[v17] = 2;
            }
          }
        }
      }

      ++v8;
    }
    while (v35 != v8);
    goto LABEL_29;
  }
  __break(1u);
}

unint64_t sub_100336BE0(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCNullTransitionable()
{
  return self;
}

unint64_t *assignWithCopy for DOCBrowserContainerState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

unint64_t *assignWithTake for DOCBrowserContainerState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

void *sub_100336D38(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *id result = v2;
  return result;
}

unint64_t sub_100336D5C()
{
  unint64_t result = qword_1007117F8;
  if (!qword_1007117F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007117F8);
  }
  return result;
}

uint64_t sub_100336DB0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100336DE8(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (!a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100336E04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100336E3C()
{
  swift_release();

  if (*(void *)(v0 + 48) >= 5uLL) {
    swift_errorRelease();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100336E94()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100336ED4()
{
  if (*(void *)(v0 + 24) >= 5uLL) {
    swift_errorRelease();
  }

  return _swift_deallocObject(v0, 40, 7);
}

ValueMetadata *type metadata accessor for DOCPickerOperation()
{
  return &type metadata for DOCPickerOperation;
}

unint64_t sub_100336F38()
{
  unint64_t result = qword_100711840;
  if (!qword_100711840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100711840);
  }
  return result;
}

unint64_t sub_10033700C()
{
  unint64_t result = qword_100711858[0];
  if (!qword_100711858[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100711858);
  }
  return result;
}

unint64_t sub_100337064()
{
  unint64_t result = qword_10070C070;
  if (!qword_10070C070)
  {
    type metadata accessor for DOCFileEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070C070);
  }
  return result;
}

id sub_1003370BC()
{
  id result = [self defaultManager];
  qword_100711850 = (uint64_t)result;
  return result;
}

uint64_t sub_1003370F8(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for DOCFileEntity();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_100337238, 0, 0);
}

uint64_t sub_100337238()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  v0[2] = &off_10068AB80;
  uint64_t v3 = swift_task_alloc();
  v0[13] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[14] = v4;
  uint64_t v5 = sub_1000CBE70(&qword_1007118A0);
  unint64_t v6 = sub_100338ECC();
  *uint64_t v4 = v0;
  v4[1] = sub_100337334;
  uint64_t v7 = v0[9];
  return Sequence.asyncMap<A>(_:)(&unk_100711898, v3, v5, v7, v6);
}

uint64_t sub_100337334(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100337478, 0, 0);
}

uint64_t sub_100337478()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = v0[6];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    uint64_t v7 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = v0[11];
      uint64_t v8 = v0[12];
      uint64_t v10 = v0[5];
      sub_100338F28(v5, v8);
      sub_100338F90(v8, v9);
      int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v10);
      uint64_t v12 = v0[11];
      if (v11 == 1)
      {
        sub_100338FF8(v12);
      }
      else
      {
        uint64_t v14 = v0[7];
        uint64_t v13 = v0[8];
        sub_100142DFC(v12, v13);
        sub_100142DFC(v13, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = (void *)sub_100190220(0, v7[2] + 1, 1, (unint64_t)v7);
        }
        unint64_t v16 = v7[2];
        unint64_t v15 = v7[3];
        if (v16 >= v15 >> 1) {
          uint64_t v7 = (void *)sub_100190220(v15 > 1, v16 + 1, 1, (unint64_t)v7);
        }
        uint64_t v17 = v0[7];
        v7[2] = v16 + 1;
        sub_100142DFC(v17, (uint64_t)v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v16);
      }
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = (uint64_t (*)(void *))v0[1];
  return v18(v7);
}

uint64_t sub_10033766C(uint64_t a1, uint64_t *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *a2;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_100711878 + dword_100711878);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100337718;
  return v6(v3);
}

uint64_t sub_100337718(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100337818, 0, 0);
}

uint64_t sub_100337818()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v0[2];
  if (v1)
  {
    id v3 = v1;
    sub_100162CCC(v3, v2);
    uint64_t v4 = type metadata accessor for DOCFileEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
  }
  else
  {
    uint64_t v5 = type metadata accessor for DOCFileEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  }
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_100337918(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100711880);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  if (qword_1007050D0 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_100711850;
  URL._bridgeToObjectiveC()((NSURL *)&unk_100711000);
  uint64_t v7 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_100338D4C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  aBlock[3] = &unk_1006A3158;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  [v5 fetchItemForURL:v7 completionHandler:v10];
  _Block_release(v10);
}

uint64_t sub_100337B08(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = a1;
    sub_1000CBE70(&qword_100711880);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    if (!a2)
    {
      sub_10026DBEC();
      static NSError.noSuchFileError.getter();
    }
    swift_errorRetain();
    sub_1000CBE70(&qword_100711880);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_100337BAC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002B5270;
  return sub_1003370F8(v3, v4);
}

uint64_t sub_100337C48(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_100711878 + dword_100711878);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100337CF4;
  return v6(v3);
}

uint64_t sub_100337CF4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100337DF4, 0, 0);
}

uint64_t sub_100337DF4()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v0[2];
  if (v1)
  {
    id v3 = v1;
    sub_100162CCC(v3, v2);
    uint64_t v4 = type metadata accessor for DOCFileEntity();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
  }
  else
  {
    uint64_t v5 = type metadata accessor for DOCFileEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  }
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100337EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_10014A160;
  return sub_100307C3C(a2, a3);
}

void *initializeBufferWithCopyOfBuffer for LocationOptionsProvider(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for LocationOptionsProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for LocationOptionsProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for LocationOptionsProvider()
{
  return &type metadata for LocationOptionsProvider;
}

uint64_t sub_100338070(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v3 = type metadata accessor for Logger();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v1[14] = v4;
  v1[15] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v1[16] = v5;
  type metadata accessor for DOCNamedLocationResolver();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[17] = v6;
  void *v6 = v1;
  v6[1] = sub_1003381E4;
  return sub_1003FF270(v5, a1);
}

uint64_t sub_1003381E4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003385C0;
  }
  else {
    uint64_t v2 = sub_1003382F8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003382F8()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = swift_task_alloc();
  v0[19] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[20] = v3;
  uint64_t v4 = sub_1000CBE70(&qword_10070B670);
  *uint64_t v3 = v0;
  v3[1] = sub_100338404;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 9, 0, 0, 0x286D657449746567, 0xED0000293A726F66, sub_100338CB0, v2, v4);
}

uint64_t sub_100338404()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10033892C;
  }
  else {
    uint64_t v2 = sub_100338534;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100338534()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  uint64_t v1 = v0[9];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1003385C0()
{
  id v19 = v0;
  static Logger.AppIntents.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    unint64_t v5 = 0xE900000000000073;
    uint64_t v6 = 0x746E656D75636F44;
    switch(v3)
    {
      case 0:
        goto LABEL_10;
      case 1:
        unint64_t v5 = 0xE700000000000000;
        uint64_t v6 = 0x706F746B736544;
        goto LABEL_10;
      case 2:
        uint64_t v6 = 0x64616F6C6E776F44;
        goto LABEL_10;
      case 3:
        unint64_t v5 = 0xEB00000000657669;
        uint64_t v6 = 0x724464756F6C4369;
LABEL_10:
        uint64_t v12 = v0[12];
        uint64_t v16 = v0[11];
        uint64_t v17 = v0[13];
        v0[6] = sub_10009B0E4(v6, v5, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v4 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v13 = Error.localizedDescription.getter();
        v0[8] = sub_10009B0E4(v13, v14, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to resolve %s with error: %s", (uint8_t *)v4, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v16);
        goto LABEL_11;
      default:
        uint64_t v10 = v0[10];
        swift_errorRelease();
        v0[5] = v10;
        return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    }
  }
  uint64_t v8 = v0[12];
  uint64_t v7 = v0[13];
  uint64_t v9 = v0[11];
  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15(0);
}

uint64_t sub_10033892C()
{
  id v19 = v0;
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  static Logger.AppIntents.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    unint64_t v5 = 0xE900000000000073;
    uint64_t v6 = 0x746E656D75636F44;
    switch(v3)
    {
      case 0:
        goto LABEL_10;
      case 1:
        unint64_t v5 = 0xE700000000000000;
        uint64_t v6 = 0x706F746B736544;
        goto LABEL_10;
      case 2:
        uint64_t v6 = 0x64616F6C6E776F44;
        goto LABEL_10;
      case 3:
        unint64_t v5 = 0xEB00000000657669;
        uint64_t v6 = 0x724464756F6C4369;
LABEL_10:
        uint64_t v12 = v0[12];
        uint64_t v16 = v0[11];
        uint64_t v17 = v0[13];
        v0[6] = sub_10009B0E4(v6, v5, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v4 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v13 = Error.localizedDescription.getter();
        v0[8] = sub_10009B0E4(v13, v14, &v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to resolve %s with error: %s", (uint8_t *)v4, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v16);
        goto LABEL_11;
      default:
        uint64_t v10 = v0[10];
        swift_errorRelease();
        v0[5] = v10;
        return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    }
  }
  uint64_t v8 = v0[12];
  uint64_t v7 = v0[13];
  uint64_t v9 = v0[11];
  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15(0);
}

void sub_100338CB0(uint64_t a1)
{
}

uint64_t sub_100338CB8()
{
  uint64_t v1 = sub_1000CBE70(&qword_100711880);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100338D4C(void *a1, uint64_t a2)
{
  sub_1000CBE70(&qword_100711880);

  return sub_100337B08(a1, a2);
}

uint64_t sub_100338DD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000CB70;
  v5[2] = a1;
  uint64_t v6 = *a2;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_100711878 + dword_100711878);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[3] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100337718;
  return v9(v6);
}

unint64_t sub_100338ECC()
{
  unint64_t result = qword_1007118A8;
  if (!qword_1007118A8)
  {
    sub_100074618(&qword_1007118A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007118A8);
  }
  return result;
}

uint64_t sub_100338F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100338F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100338FF8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

objc_class *sub_10033905C(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (![a1 isActive]) {
    goto LABEL_6;
  }
  uint64_t v7 = *(char **)&a1[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  id v8 = [v7 viewIfLoaded];
  if (!v8) {
    goto LABEL_6;
  }
  uint64_t v9 = v8;
  unsigned __int8 v10 = [v8 isHidden];

  if (v10) {
    goto LABEL_6;
  }
  int v11 = &v7[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  unint64_t v12 = *((void *)v11 + 1);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v39 > 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v13 = v2;
    if ((sub_10017B0C0() & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0) {
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v13 = *(char **)&a1[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
LABEL_8:
  unint64_t v14 = (uint64_t *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v13;
  Class v17 = sub_100085DFC(v15, 0);
  uint64_t v18 = (uint64_t)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor];
  swift_beginAccess();
  sub_1000CBC00(v18, (uint64_t)v6, (uint64_t *)&unk_1007086D0);
  id v19 = (void *)sub_1000B9278((uint64_t)v6);
  uint64_t v20 = v19;
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  if (!v17)
  {
    id v23 = v19;
    if (!v20) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  id v21 = v19;
  id v22 = v17;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v20)
  {
LABEL_14:
    id v24 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_17:
  UIMenuElementSize v25 = v42;

  uint64_t v26 = sub_100492CD4(v15);
  if (v26)
  {
    id v27 = (void *)v26;
    if (qword_100705330 != -1) {
      swift_once();
    }
    id v28 = [v27 imageWithConfiguration:qword_1007377C0];

    if (!((unint64_t)v25 >> 62)) {
      goto LABEL_21;
    }
  }
  else
  {
    id v28 = 0;
    if (!((unint64_t)v25 >> 62))
    {
LABEL_21:
      id v29 = v28;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      UIMenuElementSize v30 = v25;
      goto LABEL_22;
    }
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100708610);
  id v38 = v28;
  swift_bridgeObjectRetain();
  UIMenuElementSize v30 = _bridgeCocoaArray<A>(_:)();
  swift_bridgeObjectRelease();
LABEL_22:
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v43.value.super.Class isa = (Class)v28;
  v43.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v43, 0, 0xFFFFFFFFFFFFFFFFLL, v30, v40).super.super.isa;
  uint64_t v33 = self;
  uint64_t v34 = isa;
  sub_100492DC4(v15);
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v36 = [v33 searchMenuButtonShowing:v35];

  if (!v36)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [(objc_class *)v34 setAccessibilityIdentifier:v36];

  sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007086D0);
  return v34;
}

uint64_t sub_100339534()
{
  id v1 = [v0 splitViewController];
  if (!v1) {
    return 1;
  }
  uint64_t v2 = v1;
  id v3 = [v1 doc_splitViewState];
  unsigned __int8 v4 = [v3 isSidebarShownInline];

  if ((v4 & 1) != 0 || (id v5 = [v2 preferredSplitBehavior], v5 == (id)1))
  {
    uint64_t v6 = 1;
  }
  else if (v5)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = (uint64_t)[v2 _canTileSidebarColumn:0];
  }

  return v6;
}

void sub_1003395FC()
{
  id v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (![v2 isPickerUI]
    || v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1)
  {
    int v3 = v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState];
    unsigned int v4 = v3 - 2;
    int v5 = v3 & 1;
    if (v4 < 3 || v5 == 0)
    {
      uint64_t v7 = &v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v8 = *((void *)v7 + 1);
        uint64_t ObjectType = swift_getObjectType();
        v19[3] = type metadata accessor for DOCItemCollectionViewController(0);
        v19[0] = v1;
        id v10 = v1;
        int v11 = sub_10033AA24();
        (*(void (**)(void *, void *, uint64_t, void, uint64_t, uint64_t))(v8 + 8))(v19, v11, 2, 0, ObjectType, v8);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_10009B1B8((uint64_t)v19);
      }
      if (*((unsigned char *)v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode) == 1
        && (objc_msgSend(v1, "doc_isAppearing") & 1) == 0)
      {
        id v12 = [v1 navigationController];
        if (v12)
        {
          uint64_t v13 = v12;
          unint64_t v14 = (unint64_t)sub_10003B6F8(0);
          if (v14 >> 62) {
            uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
          }
          else {
            uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          [v13 setToolbarHidden:v15 == 0 animated:0 v19[0]];
        }
        uint64_t v16 = self;
        id v17 = [v2 sceneIdentifier];
        id v18 = [v16 globalTabbedBrowserControllerForIdentifier:v17];

        [v18 updateTabBarVisibility];
      }
    }
  }
}

void sub_100339840()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
  if (v2)
  {
    id v8 = v2;
    if (objc_msgSend(v8, "doc_hasAppearedOrIsAppearing"))
    {
      id v3 = sub_10033C90C();
      id v4 = [v3 _doc_ipi_view];

      if (v4 && (id v5 = [v4 window], v4, v5))
      {

        uint64_t v6 = v5;
      }
      else
      {
        [v8 dismissViewControllerAnimated:0 completion:0];
        uint64_t v7 = *(void **)(v0 + v1);
        *(void *)(v0 + v1) = 0;

        uint64_t v6 = v7;
      }
    }
    else
    {
      uint64_t v6 = v8;
    }
  }
}

uint64_t sub_10033994C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v104 = a1;
  uint64_t v3 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  v105 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v100 = (char *)&v89 - v7;
  uint64_t v112 = type metadata accessor for DOCItemSortMode();
  uint64_t v8 = *(void *)(v112 - 8);
  uint64_t v9 = __chkstk_darwin(v112);
  v102 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v97 = (char *)&v89 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v109 = (char *)&v89 - v14;
  __chkstk_darwin(v13);
  v110 = (char *)&v89 - v15;
  uint64_t v16 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v98 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v99 = (uint64_t)&v89 - v19;
  uint64_t v106 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v20 = *(void *)(v106 - 8);
  uint64_t v21 = __chkstk_darwin(v106);
  v93 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  v103 = (char *)&v89 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v94 = (char *)&v89 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v95 = (char *)&v89 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  Swift::String v31 = (char *)&v89 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v89 - v32;
  int64_t v34 = *(void *)(*(void *)(*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
                              + OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes)
                  + 16);
  NSString v35 = _swiftEmptyArrayStorage;
  uint64_t v111 = v20;
  v101 = v1;
  if (v34)
  {
    v91 = (char *)&v89 - v32;
    uint64_t v92 = v4;
    uint64_t v96 = v3;
    v117 = _swiftEmptyArrayStorage;
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_1000B9F4C(0, v34, 0);
    uint64_t v37 = v106;
    uint64_t v90 = v8;
    id v38 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    unint64_t v39 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v89 = v36;
    unint64_t v40 = v36 + v39;
    uint64_t v41 = *(void *)(v8 + 72);
    unint64_t v42 = (void (**)(char *, uint64_t))(v8 + 8);
    v107 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    uint64_t v108 = v41;
    do
    {
      UIImage_optional v43 = v110;
      uint64_t v44 = v112;
      v38(v110, v40, v112);
      v38(v109, (unint64_t)v43, v44);
      DOCItemSortDescriptor.init(type:isReversed:)();
      (*v42)(v43, v44);
      NSString v35 = v117;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B9F4C(0, v35[2] + 1, 1);
        uint64_t v37 = v106;
        NSString v35 = v117;
      }
      unint64_t v46 = v35[2];
      unint64_t v45 = v35[3];
      if (v46 >= v45 >> 1)
      {
        sub_1000B9F4C(v45 > 1, v46 + 1, 1);
        uint64_t v37 = v106;
        NSString v35 = v117;
      }
      v35[2] = v46 + 1;
      uint64_t v20 = v111;
      (*(void (**)(unint64_t, char *, uint64_t))(v111 + 32))((unint64_t)v35+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v46, v31, v37);
      v117 = v35;
      v40 += v108;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v2 = v101;
    uint64_t v3 = v96;
    uint64_t v4 = v92;
    uint64_t v33 = v91;
    uint64_t v8 = v90;
  }
  uint64_t v47 = (uint64_t)v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
  swift_beginAccess();
  uint64_t v48 = v99;
  sub_1000CBC00(v47, v99, (uint64_t *)&unk_1007086D0);
  uint64_t v49 = v20 + 48;
  uint64_t v50 = v106;
  v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v107(v48, 1, v106) == 1)
  {
    sub_1000CBBA4(v48, (uint64_t *)&unk_1007086D0);
    uint64_t v51 = v35[2];
    if (v51) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
  uint64_t v96 = v20 + 48;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v33, v48, v50);
  v61 = v97;
  DOCItemSortDescriptor.sortType.getter();
  DOCItemSortMode.displayableMode.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v61, v112);
  sub_1000BAC0C(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v115 == v113 && v116 == v114)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v100, v3);
  }
  else
  {
    char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v100, v3);
    if ((v62 & 1) == 0)
    {
      uint64_t v20 = v111;
      uint64_t v50 = v106;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v33, v106);
      uint64_t v49 = v96;
      uint64_t v51 = v35[2];
      if (v51)
      {
LABEL_11:
        uint64_t v96 = v49;
        v109 = *(char **)(v20 + 16);
        v110 = (char *)(v20 + 16);
        v52 = (char *)v35
            + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
        uint64_t v53 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v54 = (void (**)(char *, uint64_t))(v4 + 8);
        uint64_t v55 = (void (**)(char *, uint64_t))(v20 + 8);
        uint64_t v108 = *(void *)(v20 + 72);
        swift_bridgeObjectRetain();
        int v56 = v103;
        while (1)
        {
          ((void (*)(char *, char *, uint64_t))v109)(v56, v52, v50);
          uint64_t v57 = v102;
          DOCItemSortDescriptor.sortType.getter();
          DOCItemSortMode.displayableMode.getter();
          (*v53)(v57, v112);
          sub_1000BAC0C(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          if (v115 == v113 && v116 == v114) {
            break;
          }
          char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*v54)(v105, v3);
          if (v58) {
            goto LABEL_25;
          }
          int v56 = v103;
          uint64_t v50 = v106;
          (*v55)(v103, v106);
          v52 += v108;
          if (!--v51)
          {
            swift_bridgeObjectRelease();
            uint64_t v59 = 1;
            uint64_t v20 = v111;
            uint64_t v2 = v101;
            uint64_t v60 = (uint64_t)v98;
            goto LABEL_28;
          }
        }
        swift_bridgeObjectRelease_n();
        (*v54)(v105, v3);
LABEL_25:
        swift_bridgeObjectRelease();
        uint64_t v20 = v111;
        uint64_t v60 = (uint64_t)v98;
        uint64_t v50 = v106;
        (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v98, v103, v106);
        uint64_t v59 = 0;
        uint64_t v2 = v101;
        goto LABEL_28;
      }
LABEL_27:
      uint64_t v59 = 1;
      uint64_t v60 = (uint64_t)v98;
LABEL_28:
      v77 = v107;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v60, v59, 1, v50);
      swift_bridgeObjectRelease();
      if (v77(v60, 1, v50) == 1) {
        return sub_1000CBBA4(v60, (uint64_t *)&unk_1007086D0);
      }
      v78 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v94, v60, v50);
      uint64_t v79 = v50;
      v80 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v81 = swift_allocObject();
      *(_OWORD *)(v81 + 16) = xmmword_10059B760;
      *(void *)(v81 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
      *(void *)(v81 + 64) = sub_1000BAC0C(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
      *(void *)(v81 + 32) = v2;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v93, v78, v79);
      v82 = v2;
      uint64_t v83 = String.init<A>(describing:)();
      uint64_t v85 = v84;
      *(void *)(v81 + 96) = &type metadata for String;
      *(void *)(v81 + 104) = sub_100073F48();
      *(void *)(v81 + 72) = v83;
      *(void *)(v81 + 80) = v85;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      v86 = &v82[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v87 = *((void *)v86 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, uint64_t, uint64_t))(v87 + 8))(v78, ObjectType, v87);
        swift_unknownObjectRelease();
      }
      _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
      return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v78, v106);
    }
  }
  swift_bridgeObjectRelease();
  v63 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_10059B760;
  *(void *)(v64 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
  *(void *)(v64 + 64) = sub_1000BAC0C(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
  *(void *)(v64 + 32) = v2;
  v65 = v2;
  uint64_t v66 = DOCItemSortMode.DisplayableMode.rawValue.getter();
  uint64_t v68 = v67;
  *(void *)(v64 + 96) = &type metadata for String;
  *(void *)(v64 + 104) = sub_100073F48();
  *(void *)(v64 + 72) = v66;
  *(void *)(v64 + 80) = v68;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  DOCItemSortDescriptor.sortType.getter();
  v69 = v33;
  DOCItemSortDescriptor.isReversed.getter();
  v70 = v95;
  DOCItemSortDescriptor.init(type:isReversed:)();
  v71 = &v65[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v72 = *((void *)v71 + 1);
    uint64_t v73 = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 8))(v70, v73, v72);
    swift_unknownObjectRelease();
  }
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
  v74 = *(void (**)(char *, uint64_t))(v111 + 8);
  uint64_t v75 = v106;
  v74(v70, v106);
  return ((uint64_t (*)(char *, uint64_t))v74)(v69, v75);
}

id sub_10033A770(uint64_t a1)
{
  return sub_1003417EC(a1, type metadata accessor for DOCActionToolBarItem);
}

void sub_10033A798(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_10033A87C(a2, a3, a1);
  if (v8)
  {
    uint64_t v9 = &v4[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v10 = *((void *)v9 + 1);
      uint64_t ObjectType = swift_getObjectType();
      v14[3] = type metadata accessor for DOCItemCollectionViewController(0);
      v14[0] = v4;
      uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t))(v10 + 8);
      uint64_t v13 = v4;
      v12(v14, a2, a3, a4 & 1, ObjectType, v10);
      swift_unknownObjectRelease();
      sub_10009B1B8((uint64_t)v14);
    }
  }
}

void sub_10033A87C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v4)
  {
    uint64_t v6 = v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if ((*(unsigned char *)(v6 + 16) & 1) != 0
      || (id v7 = *(id *)v6,
          unsigned __int8 v8 = objc_msgSend(v7, "doc_displaysSearchResults"),
          v7,
          (v8 & 1) == 0))
    {
      uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
      if (v9)
      {
        id v10 = [v9 searchController];
        if (v10)
        {
          uint64_t v11 = v10;
          type metadata accessor for DOCSearchController();
          uint64_t v12 = swift_dynamicCastClass();
          if (v12)
          {
            id v13 = *(id *)(v12 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);

            sub_1000A6B78(a3, a3[3]);
            _bridgeAnythingToObjectiveC<A>(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_10033AA24()
{
  uint64_t v1 = v0;
  id v2 = sub_10009E55C();
  if (!sub_1000951EC(1))
  {
    id v14 = [self standardUserDefaults];
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 BOOLForKey:v15];

    return _swiftEmptyArrayStorage;
  }

  if (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1)
  {
    id v3 = sub_10033AFA4();
    unint64_t v4 = (unint64_t)sub_10003B6F8(0);
    if (v4 >> 62) {
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v6 = v1;
    unint64_t v7 = swift_bridgeObjectRetain();
    unint64_t v8 = (unint64_t)sub_1003430C0(v7, (uint64_t)v6);
    swift_bridgeObjectRelease();

    if (v8 >> 62) {
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    [v3 setEnabled:v5 < v9];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1005A00D0;
    *(void *)(v10 + 32) = v3;
    uint64_t v11 = self;
    id v12 = v3;
    *(void *)(v10 + 40) = [v11 flexibleSpaceItem];
    *(void *)(v10 + 48) = sub_10033B0C0();
    specialized Array._endMutation()();
    uint64_t v13 = v10;

    return (void *)v13;
  }
  id v16 = [*(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
  uint64_t v17 = sub_10003B6F8(0);
  uint64_t v18 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  unint64_t result = (void *)swift_beginAccess();
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (v20)
  {
    unint64_t v21 = *((void *)v18 + 1);
    uint64_t v22 = v20 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v22 + 16))
    {
      uint64_t v23 = *(void **)(*(void *)v22 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v23 = *(void **)(v22 + 8);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v24 = sub_1003E5508((unint64_t)v17, v21, v23, (uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    id v25 = sub_10009E55C();
    uint64_t v26 = v1;
    uint64_t v27 = sub_100344494((uint64_t)v24, v26, v25);
    swift_bridgeObjectRelease();

    unint64_t v39 = (unint64_t)v27;
    sub_1000CBE70(&qword_10070CE50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A0030;
    uint64_t v29 = (void *)DOCDocumentSourceIdentifierTrashedItems;
    *(void *)(inited + 32) = DOCDocumentSourceIdentifierTrashedItems;
    id v30 = v29;
    char v31 = sub_100082AC0(v16, inited);
    swift_setDeallocating();
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    swift_arrayDestroy();
    if ((v31 & 1) == 0)
    {
      uint64_t v32 = (void *)sub_1003446E4(v25);
      uint64_t v33 = sub_10003B6F8(0);
      unint64_t v34 = (unint64_t)sub_10033B1DC(v33);
      swift_bridgeObjectRelease();
      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      [v32 setEnabled:v35 > 0];
      id v36 = [self flexibleSpaceItem];
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v37 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v38 = *(void **)&v26[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton];
      *(void *)&v26[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton] = v37;

      id v16 = v25;
      id v25 = v38;
    }

    return (void *)v39;
  }
  __break(1u);
  return result;
}

id sub_10033AFA4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
  swift_beginAccess();
  id v2 = *(void **)(v1 + 40);
  swift_retain();
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = sub_10033DFA8(v0);
    *(void *)(v1 + 40) = v4;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = v4;
    specialized Array._endMutation()();
    id v3 = v4;
    uint64_t v6 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    id v2 = 0;
    *(void *)(v1 + 32) = v6;
  }
  swift_endAccess();
  id v7 = v2;
  swift_release();
  return v3;
}

id sub_10033B0C0()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
  swift_beginAccess();
  id v2 = *(void **)(v1 + 56);
  swift_retain();
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = sub_10033E1B8(v0);
    *(void *)(v1 + 56) = v4;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = v4;
    specialized Array._endMutation()();
    id v3 = v4;
    uint64_t v6 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    id v2 = 0;
    *(void *)(v1 + 48) = v6;
  }
  swift_endAccess();
  id v7 = v2;
  swift_release();
  return v3;
}

void *sub_10033B1DC(void *result)
{
  if (!result) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (v2)
  {
    unint64_t v3 = (unint64_t)result;
    uint64_t v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v4 + 16)) {
      uint64_t v5 = *(void **)(*(void *)v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    }
    else {
      uint64_t v5 = *(void **)(v4 + 8);
    }
    swift_unknownObjectRetain();
    uint64_t v6 = sub_1003D66D4(v3, UIDocumentBrowserActionAvailabilityToolbar, v5, *(void **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration), 0);
    swift_unknownObjectRelease();
    return (void *)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10033B2B8(void *a1)
{
  uint64_t v3 = type metadata accessor for DOCActionToolBarItem();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4 && (uint64_t v5 = v4, (v6 = *(void **)(v4 + OBJC_IVAR____TtC5Files20DOCActionToolBarItem_docAction)) != 0))
  {
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC5Files20DOCActionToolBarItem_onSelectedItems) != 1)
    {
      uint64_t v11 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
      swift_beginAccess();
      uint64_t v10 = (void *)*((void *)v11 + 1);
      id v12 = a1;
      id v13 = v6;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    id v7 = a1;
    id v16 = v6;
    unint64_t v8 = (unint64_t)sub_10003B6F8(0);
    if (v8 >> 62) {
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v9 >= 1)
    {
      uint64_t v10 = sub_10003B6F8(0);
LABEL_12:
      v17[3] = v3;
      v17[0] = v5;
      id v14 = a1;
      id v15 = DOCItemCollectionViewController.actionContext(from:)();
      sub_1000CBBA4((uint64_t)v17, (uint64_t *)&unk_100705D60);
      sub_1003EC438(v6, (uint64_t)v10, (uint64_t)v15);

      swift_bridgeObjectRelease();
      if ([v6 performActionExitsEditMode]) {
        [v1 setEditing:0 animated:1];
      }

      return;
    }
  }
  else
  {
    [v1 setEditing:0 animated:1];
  }
}

void sub_10033B52C(id *a1@<X0>, void *a2@<X8>)
{
  id v2 = *a1;
  id v3 = [*a1 image];
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  id v4 = [v2 localizedTitle];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = (void *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = v2;
  id v44 = v3;
  id v8 = v2;
  uint64_t v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v10 = [v8 identifier:0, 0, 0, sub_1003451D0, v7];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v11 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v13 != v14)
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_5;
    }
    id v16 = [v8 identifier];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        goto LABEL_6;
      }
    }
    unint64_t v22 = (unint64_t)sub_10003B6F8(1);
    unint64_t v23 = v22;
    if (v22 >> 62)
    {
LABEL_58:
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      if (v24)
      {
LABEL_14:
        uint64_t v25 = 0;
        unint64_t v26 = v23 & 0xC000000000000001;
        while (1)
        {
          if (v26)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void **)(v23 + 8 * v25 + 32);
            swift_unknownObjectRetain();
          }
          unsigned __int8 v28 = [v27 isItemPinned];
          swift_unknownObjectRelease();
          if (v28) {
            break;
          }
          uint64_t v29 = v25 + 1;
          if (__OFADD__(v25, 1))
          {
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          ++v25;
          if (v29 == v24)
          {
            uint64_t v25 = v24;
            break;
          }
        }
        if (v24 >= v25)
        {
          if (v25 == v24) {
            goto LABEL_25;
          }
          uint64_t v41 = v9;
          uint64_t v30 = 1;
          uint64_t v31 = v24;
        }
        else
        {
          uint64_t v41 = v9;
          uint64_t v30 = -1;
          uint64_t v31 = v25;
          uint64_t v25 = v24;
        }
        uint64_t v32 = 0;
        uint64_t v9 = (void *)(v23 & 0xFFFFFFFFFFFFFF8);
        uint64_t v42 = v31;
        uint64_t v43 = v30;
        do
        {
          BOOL v33 = __OFADD__(v32, v30);
          v32 += v30;
          if (v33) {
            goto LABEL_54;
          }
          if (v25 == v24) {
            goto LABEL_55;
          }
          if (__OFADD__(v25, 1)) {
            goto LABEL_56;
          }
          unint64_t v34 = v24;
          if (v25 + 1 != v24)
          {
            uint64_t v35 = v25 + 5;
            while (1)
            {
              unint64_t v34 = v35 - 4;
              if (v26)
              {
                swift_bridgeObjectRetain();
                id v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                swift_bridgeObjectRelease();
              }
              else
              {
                if ((v34 & 0x8000000000000000) != 0) {
                  goto LABEL_52;
                }
                if (v34 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_53;
                }
                id v36 = *(void **)(v23 + 8 * v35);
                swift_unknownObjectRetain();
              }
              unsigned __int8 v37 = [v36 isItemPinned];
              swift_unknownObjectRelease();
              if (v37) {
                goto LABEL_28;
              }
              uint64_t v38 = v35 - 3;
              if (__OFADD__(v34, 1)) {
                break;
              }
              ++v35;
              if (v38 == v24)
              {
                unint64_t v34 = v24;
LABEL_28:
                uint64_t v31 = v42;
                uint64_t v30 = v43;
                goto LABEL_29;
              }
            }
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
LABEL_29:
          uint64_t v25 = v34;
        }
        while (v34 != v31);
        swift_bridgeObjectRelease();
        if (v32 <= 0)
        {

          uint64_t v9 = v41;
          goto LABEL_7;
        }
        unint64_t v39 = (unint64_t)sub_10003B6F8(1);
        uint64_t v9 = v41;
        if (v39 >> 62) {
          uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        }
        else {
          uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v32 < v40) {
          [v41 setState:2];
        }
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24) {
        goto LABEL_14;
      }
    }
LABEL_25:

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_bridgeObjectRelease_n();
LABEL_5:
  [v9 setState:1];
LABEL_6:

LABEL_7:
  *a2 = v9;
}

void sub_10033BA64(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    swift_beginAccess();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      id v8 = (void *)v7;
      sub_10003B6F8(1);
      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v10 = (void *)swift_allocObject();
      v10[2] = v9;
      v10[3] = a4;
      v10[4] = v8;
      swift_retain();
      id v11 = a4;
      id v12 = v8;
      sub_1000CBE70((uint64_t *)&unk_100706730);
      Array<A>.fpfs_fetchAllFPItems(completion:)();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

void sub_10033BBAC(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    if (a1)
    {
      uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager);
      id v10 = v9;
      swift_bridgeObjectRetain();
      if (a1 >> 62)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        uint64_t v11 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        uint64_t v11 = a1;
      }
      v14[3] = sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      v14[0] = a4;
      id v12 = a4;
      id v13 = DOCItemCollectionViewController.actionContext(from:)();
      sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_100705D60);
      sub_1003EC438(a3, v11, (uint64_t)v13);

      swift_bridgeObjectRelease();
      if ([a3 performActionExitsEditMode]) {
        [v8 setEditing:0 animated:1];
      }
    }
  }
}

void sub_10033BD20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v7 = sub_100085DFC(0, 1);
  uint64_t v8 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = (void *)sub_1000B9278((uint64_t)v6);
  sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007086D0);
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A04F0;
  id v11 = (id)_DocumentManagerBundle();
  if (v11)
  {
    id v12 = v11;
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    v32._object = (void *)0x80000001005EAC80;
    v13._countAndFlagsBits = 0x74704F2077656956;
    v13._object = (void *)0xEC000000736E6F69;
    v14._countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._object = (void *)0xEB00000000656C62;
    v15._countAndFlagsBits = 0x74704F2077656956;
    v15._object = (void *)0xEC000000736E6F69;
    v32._countAndFlagsBits = 0xD000000000000025;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v32);

    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v10 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    UIMenuElementSize v29 = v10;
    specialized Array._endMutation()();
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v30.value.super.Class isa = 0;
    v30.is_nil = 0;
    v17.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v30, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v29, v26).super.super.isa;
    UIMenuElementSize v29 = (UIMenuElementSize)_swiftEmptyArrayStorage;
    if (v7)
    {
      uint64_t v18 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v9)
    {
      id v19 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t v20 = v17.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    UIMenuElementSize v21 = v29;

    if ((unint64_t)v21 >> 62)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      swift_bridgeObjectRetain();
      UIMenuElementSize v22 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      UIMenuElementSize v22 = v21;
    }
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v31.value.super.Class isa = 0;
    v31.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v31, 0, 0xFFFFFFFFFFFFFFFFLL, v22, (Swift::OpaquePointer)v27.super.super.isa).super.super.isa;
    [a1 setMenu:isa];
    sub_100083E58();
    uint64_t v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
    swift_beginAccess();
    sub_1003434D8(*v25, a1);
  }
  else
  {
    __break(1u);
  }
}

void sub_10033C1E4(void (*a1)(unint64_t))
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (v10 = Strong, id v11 = [Strong menu], v10, v11))
  {
    id v12 = [v11 children];
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v17 >= 1) {
        goto LABEL_5;
      }
    }
    else if (*(uint64_t *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_5:
      a1(v13);

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    static Logger.UI.getter();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "ERROR: attempt represent in overflow as inline menu elements, but no menu elements present", v20, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    a1((unint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    static Logger.UI.getter();
    Swift::String v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v14, v15))
    {
      Swift::String v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "ERROR: attempt represent in overflow as inline menu elements, but no menu present", v16, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    a1((unint64_t)_swiftEmptyArrayStorage);
  }
}

void *sub_10033C518(unint64_t a1)
{
  unint64_t v1 = a1;
  uint64_t v2 = sub_100073FE4(a1);
  if (v2)
  {
    sub_1000741D0((unint64_t)v2);
    swift_bridgeObjectRelease();
    id v3 = objc_allocWithZone((Class)NSArray);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v5 = [v3 initWithArray:isa copyItems:1];

    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    static Array._conditionallyBridgeFromObjectiveC(_:result:)();

    return _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return (void *)v1;
}

id sub_10033C608(char a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage);
  swift_beginAccess();
  if (!*(void *)(v3 + 152))
  {
    id v7 = objc_allocWithZone((Class)UIActivityIndicatorView);
    swift_retain();
    id v8 = [v7 initWithActivityIndicatorStyle:100];
    id v9 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v8];

    *(void *)(v3 + 152) = v9;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1005A04F0;
    *(void *)(v10 + 32) = v9;
    specialized Array._endMutation()();
    id v5 = v9;
    uint64_t v11 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    id v12 = *(void **)(v3 + 144);
    *(void *)(v3 + 144) = v11;
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();

    uint64_t v4 = 0;
    if ((a1 & 1) == 0) {
      return v5;
    }
    goto LABEL_7;
  }
  id v15 = *(id *)(v3 + 152);
  swift_endAccess();
  uint64_t v4 = v15;
  id v5 = v15;
  if (a1)
  {
LABEL_7:
    id v13 = v4;
    id result = [v5 customView];
    if (!result)
    {
      __break(1u);
      return result;
    }
    Swift::String v14 = result;
    self;
    [(id)swift_dynamicCastObjCClassUnconditional() startAnimating];

    return v5;
  }

  return v15;
}

objc_class *sub_10033C7F0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage);
  swift_beginAccess();
  uint64_t v2 = *(objc_class **)(v1 + 88);
  swift_retain();
  if (v2)
  {
    uint64_t v3 = v2;
  }
  else
  {
    Class v4 = sub_10033E3CC();
    *(void *)(v1 + 88) = v4;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = v4;
    specialized Array._endMutation()();
    uint64_t v3 = v4;
    uint64_t v6 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    uint64_t v2 = 0;
    *(void *)(v1 + 80) = v6;
  }
  swift_endAccess();
  id v7 = v2;
  swift_release();
  return v3;
}

id sub_10033C90C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 120);
  if (v2)
  {
    swift_retain();
    id v3 = v2;
  }
  else
  {
    id v4 = objc_allocWithZone((Class)UIBarButtonItem);
    swift_retain();
    id v5 = [v4 initWithImage:0 style:0 target:0 action:0];
    uint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
    swift_beginAccess();
    sub_1003434D8(*v6, v5);
    *(void *)(v1 + 120) = v5;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A04F0;
    *(void *)(v7 + 32) = v5;
    specialized Array._endMutation()();
    id v3 = v5;
    uint64_t v8 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    uint64_t v2 = 0;
    *(void *)(v1 + 112) = v8;
  }
  swift_endAccess();
  id v9 = v2;
  swift_release();
  return v3;
}

id sub_10033CA80()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage);
  swift_beginAccess();
  uint64_t v2 = *(void **)(v1 + 168);
  if (v2)
  {
    swift_retain();
    id v3 = v2;
  }
  else
  {
    id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
    swift_retain();
    id v5 = [v4 initWithActivityIndicatorStyle:100];
    id v6 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v5];

    *(void *)(v1 + 168) = v6;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A04F0;
    *(void *)(v7 + 32) = v6;
    specialized Array._endMutation()();
    id v3 = v6;
    uint64_t v8 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    uint64_t v2 = 0;
    *(void *)(v1 + 160) = v8;
  }
  swift_endAccess();
  id v9 = v2;
  swift_release();
  return v3;
}

void sub_10033CBDC(unint64_t a1, uint64_t a2)
{
  uint64_t v60 = a2;
  id v3 = (void *)type metadata accessor for DispatchWorkItemFlags();
  id v4 = (void (**)(void, void))*(v3 - 1);
  __chkstk_darwin(v3);
  id v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v59 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v56 = v11;
    uint64_t v57 = v10;
    Swift::String v16 = self;
    char v58 = (char *)OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration;
    id v17 = [*(id *)(v15 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) sceneIdentifier];
    id v18 = [v16 globalTabbedBrowserControllerForIdentifier:v17];

    if (!v18
      || (unint64_t Available = (unint64_t)[v18 effectiveFullBrowser],
          v18,
          !Available))
    {

      return;
    }
    uint64_t v50 = v8;
    uint64_t v51 = v6;
    uint64_t v52 = v7;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a1;
    aBlock[0] = _swiftEmptyArrayStorage;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    uint64_t v54 = v20;
    id v53 = (id)Available;
    if (v21)
    {
      uint64_t v49 = (uint64_t)v4;
      uint64_t v55 = (uint64_t)v3;
      if (v21 < 1)
      {
        __break(1u);
        goto LABEL_32;
      }
      for (uint64_t i = 0; i != v21; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v23 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t v24 = v23;
        id v25 = [v23 fileProviderItem];

        if (v25)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v26 = aBlock[0];
      uint64_t v20 = v54;
      id v3 = (void *)v55;
      id v4 = (void (**)(void, void))v49;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v26 = (unint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v27 = swift_allocObject();
    swift_bridgeObjectRelease();
    *(void *)(v27 + 16) = v26;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v55 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      uint64_t v55 = v26;
    }
    swift_bridgeObjectRelease();
    uint64_t v49 = type metadata accessor for DOCRelatedNodeMatcher();
    uint64_t v28 = *(void **)(v15 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    UIMenuElementSize v29 = *(void **)&v58[v15];
    sub_1000CBC00(v60, (uint64_t)v64, (uint64_t *)&unk_100705D60);
    sub_1000CBC00((uint64_t)v64, (uint64_t)v63, (uint64_t *)&unk_100705D60);
    UIImage_optional v30 = (void *)swift_allocObject();
    v30[2] = v20;
    v30[3] = v27;
    id v31 = v53;
    v30[4] = v53;
    sub_1000516C4((uint64_t)v64, (uint64_t)(v30 + 5));
    swift_retain_n();
    swift_retain_n();
    Swift::String v32 = (char *)v31;
    id v33 = v29;
    if ([v33 supportsRelatedFilesInPicker])
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      char v58 = v32;
      unint64_t v34 = v28;
      uint64_t v35 = v59;
      id v36 = *(void (**)(char *, void, uint64_t))(v59 + 104);
      id v53 = v33;
      uint64_t v37 = v56;
      v36(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v56);
      uint64_t v48 = static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
      uint64_t v38 = (void *)swift_allocObject();
      uint64_t v39 = v55;
      v38[2] = v34;
      v38[3] = v39;
      uint64_t v55 = v39;
      v38[4] = v49;
      v38[5] = sub_1003452C8;
      v38[6] = v30;
      aBlock[4] = sub_1001810BC;
      aBlock[5] = v38;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006A34D0;
      uint64_t v40 = _Block_copy(aBlock);
      id v41 = v34;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v60 = v27;
      uint64_t v42 = v57;
      static DispatchQoS.unspecified.getter();
      v61 = _swiftEmptyArrayStorage;
      sub_1000BAC0C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_1000B921C();
      uint64_t v43 = v51;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v44 = (void *)v48;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v40);

      ((void (**)(char *, void *))v4)[1](v43, v3);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v42, v52);
      swift_release();
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      id v3 = v58;

LABEL_27:
      swift_release();

      sub_1000CBBA4((uint64_t)v63, (uint64_t *)&unk_100705D60);
      swift_release();
      swift_release();
      return;
    }
    id v4 = (void (**)(void, void))v33;
    id v3 = v32;
    id v6 = (char *)v27;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
    if (!(Available >> 62))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      uint64_t v45 = Available;
LABEL_26:
      sub_1000CBC00((uint64_t)v63, (uint64_t)aBlock, (uint64_t *)&unk_100705D60);
      unint64_t v46 = (void *)swift_allocObject();
      v46[2] = v20;
      v46[3] = v6;
      v46[4] = Available;
      v46[5] = v3;
      sub_1000516C4((uint64_t)aBlock, (uint64_t)(v46 + 6));
      swift_retain();
      swift_retain();
      uint64_t v47 = v3;
      sub_1003E9354(v45, (uint64_t (*)(void *))sub_1003452DC, (uint64_t)v46);
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v45 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
}

uint64_t sub_10033D518(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
  swift_bridgeObjectRetain();
  if (Available >> 62)
  {
    uint64_t v10 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    uint64_t v10 = Available;
  }
  sub_1000CBC00(a5, (uint64_t)v14, (uint64_t *)&unk_100705D60);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = Available;
  v11[5] = a4;
  sub_1000516C4((uint64_t)v14, (uint64_t)(v11 + 6));
  swift_retain();
  swift_retain();
  id v12 = a4;
  sub_1003E9354(v10, (uint64_t (*)(void *))sub_1003452DC, (uint64_t)v11);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10033D658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  swift_beginAccess();
  unint64_t v9 = swift_bridgeObjectRetain();
  sub_100169C34(v9);
  swift_endAccess();
  swift_beginAccess();
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_100169738(v10);
  swift_endAccess();
  swift_beginAccess();
  sub_1000CBC00(a6, (uint64_t)v20, (uint64_t *)&unk_100705D60);
  uint64_t v11 = swift_allocObject();
  sub_1000516C4((uint64_t)v20, v11 + 16);
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = a2;
  id v12 = objc_allocWithZone((Class)FPDownloadOperation);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  swift_bridgeObjectRetain();
  id v13 = a5;
  swift_retain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v15 = [v12 initWithItems:isa];

  [v15 setQualityOfService:25];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100345378;
  *(void *)(v16 + 24) = v11;
  aBlock[4] = sub_1003453BC;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004E5E6C;
  aBlock[3] = &unk_1006A3548;
  id v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v15 setDownloadCompletionBlock:v17];
  _Block_release(v17);
  id v18 = [self defaultManager];
  [v18 scheduleAction:v15];
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_10033D8E8(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a3;
    os_log_type_t v19 = sub_100345444;
    uint64_t v20 = v6;
    aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    id v17 = sub_1000666D8;
    id v18 = &unk_1006A35E8;
    uint64_t v7 = _Block_copy(&aBlock);
    id v8 = a1;
  }
  else
  {
    unint64_t v10 = self;
    swift_beginAccess();
    sub_10009E6C4(0, (unint64_t *)&unk_100714270);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v10 documentsURLsForItemBookmarks:isa];

    type metadata accessor for URL();
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = v13;
    os_log_type_t v19 = sub_100181160;
    uint64_t v20 = v14;
    aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    id v17 = sub_1000666D8;
    id v18 = &unk_1006A3598;
    uint64_t v7 = _Block_copy(&aBlock);
  }
  id v9 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
  sub_10033DB08(a2);
}

void sub_10033DB08(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)v5, (uint64_t *)&unk_100705D60);
  if (v6)
  {
    type metadata accessor for DOCActionContext();
    if (swift_dynamicCast())
    {
      uint64_t v1 = *(void **)&v4[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v2 = swift_dynamicCastClass();
      if (v2)
      {
        *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus) = 2;
        id v3 = v1;
        sub_1001B75E0();
      }
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_100705D60);
  }
}

void sub_10033DBEC(uint64_t a1)
{
  if (a1)
  {
    id v1 = (id)_convertErrorToNSError(_:)();
    DOCPresentAlertForError();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10033DC40()
{
  uint64_t v1 = sub_10023FE04(0xD000000000000014, (void *)0x80000001005EAC10);
  uint64_t v2 = [v0 isEditing] ^ 1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(unsigned char *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = v1;
  id v4 = v0;
  swift_retain();
  sub_10008762C();
  if (v5)
  {
    uint64_t v6 = v5;
    swift_retain();
    sub_100518D94((uint64_t (*)(id))sub_100344D14, v3, 1);

    swift_release();
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong didToggleEditStateWithEditing:v2 in:v4];
      swift_unknownObjectRelease();
    }
    [v4 setEditing:v2 animated:1];
    dispatch thunk of DOCAssertion.invalidate()();
  }
  swift_release();

  return swift_release();
}

uint64_t sub_10033DD90(void *a1, char a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong didToggleEditStateWithEditing:a2 & 1 in:a1];
    swift_unknownObjectRelease();
  }
  [a1 setEditing:a2 & 1 animated:1];
  return dispatch thunk of DOCAssertion.invalidate()();
}

void sub_10033DE14()
{
  uint64_t v1 = *(void **)(v0 + 24);

  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 56);

  id v4 = *(void **)(v0 + 72);
  uint64_t v5 = *(void **)(v0 + 88);

  uint64_t v6 = *(void **)(v0 + 104);
  uint64_t v7 = *(void **)(v0 + 120);

  id v8 = *(void **)(v0 + 136);
  id v9 = *(void **)(v0 + 152);

  unint64_t v10 = *(void **)(v0 + 168);
  id v11 = *(id *)(v0 + 184);
}

uint64_t sub_10033DED0()
{
  uint64_t v1 = *(void **)(v0 + 24);

  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 56);

  id v4 = *(void **)(v0 + 72);
  uint64_t v5 = *(void **)(v0 + 88);

  uint64_t v6 = *(void **)(v0 + 104);
  uint64_t v7 = *(void **)(v0 + 120);

  id v8 = *(void **)(v0 + 136);
  id v9 = *(void **)(v0 + 152);

  unint64_t v10 = *(void **)(v0 + 168);
  id v11 = *(void **)(v0 + 184);

  return v0;
}

uint64_t sub_10033DF74()
{
  sub_10033DED0();

  return swift_deallocClassInstance();
}

id sub_10033DFA8(void *a1)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v3 = result;
    v18._object = (void *)0x80000001005EAE60;
    v4._countAndFlagsBits = 0x41207463656C6553;
    v4._object = (void *)0xEA00000000006C6CLL;
    v5._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5._object = (void *)0xEB00000000656C62;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0xD000000000000032;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v18);

    uint64_t v7 = type metadata accessor for DOCItemCollectionViewController(0);
    v17[3] = v7;
    v17[0] = a1;
    id v8 = a1;
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v7)
    {
      unint64_t v10 = sub_1000A6B78(v17, v7);
      uint64_t v11 = *(void *)(v7 - 8);
      __chkstk_darwin(v10);
      uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v13);
      uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v7);
      sub_10009B1B8((uint64_t)v17);
    }
    else
    {
      uint64_t v14 = 0;
    }
    id v15 = objc_allocWithZone((Class)UIBarButtonItem);
    id v16 = [v15 initWithTitle:v9 style:0 target:v14 action:@"selectAllItems" v17[0]];

    swift_unknownObjectRelease();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10033E1B8(void *a1)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v3 = result;
    v18._object = (void *)0x80000001005EAEA0;
    v4._countAndFlagsBits = 0x7463656C65736544;
    v4._object = (void *)0xEC0000006C6C4120;
    v5._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5._object = (void *)0xEB00000000656C62;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v18._countAndFlagsBits = 0xD000000000000034;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v18);

    uint64_t v7 = type metadata accessor for DOCItemCollectionViewController(0);
    v17[3] = v7;
    v17[0] = a1;
    id v8 = a1;
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v7)
    {
      unint64_t v10 = sub_1000A6B78(v17, v7);
      uint64_t v11 = *(void *)(v7 - 8);
      __chkstk_darwin(v10);
      uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v13);
      uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v7);
      sub_10009B1B8((uint64_t)v17);
    }
    else
    {
      uint64_t v14 = 0;
    }
    id v15 = objc_allocWithZone((Class)UIBarButtonItem);
    id v16 = [v15 initWithTitle:v9 style:0 target:v14 action:@"deselectAllItems" v17[0]];

    swift_unknownObjectRelease();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Class sub_10033E3CC()
{
  Class result = (Class)(id)_DocumentManagerBundle();
  if (result)
  {
    Class v1 = result;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    swift__string._object = (void *)0x80000001005EAC30;
    v2._countAndFlagsBits = 0x5B207463656C6553;
    v2._object = (void *)0xED00005D756E656DLL;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0x7463656C6553;
    v4._object = (void *)0xE600000000000000;
    swift__string._countAndFlagsBits = 0xD000000000000027;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, swift__string);

    swift_allocObject();
    swift_unknownObjectWeakInit();
    v14.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v14.value.super.Class isa = 0;
    v15.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v14, v15, v17).super.super.isa;
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    UIMenuElementSize v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1005A04F0;
    uint64_t v7 = self;
    UIMenuElementSize v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = (UIMenuElementSize)sub_100345180;
    aBlock[5] = v8;
    aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (UIMenuElementSize)sub_100514064;
    aBlock[3] = (UIMenuElementSize)&unk_1006A3390;
    NSString v9 = _Block_copy(aBlock);
    swift_release();
    id v10 = [v7 elementWithUncachedProvider:v9];
    _Block_release(v9);
    *(void *)(v6 + 32) = v10;
    aBlock[0] = v6;
    specialized Array._endMutation()();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v16.value.super.Class isa = 0;
    v16.is_nil = 0;
    Class v12 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v16, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], 0).super.super.isa;
    [(objc_class *)isa setMenuRepresentation:v12];

    return isa;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10033E6C8(void (*a1)(void *))
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v3 = Strong;
    if ([Strong isEditing])
    {
LABEL_3:
      a1(_swiftEmptyArrayStorage);

      return;
    }
    Swift::String v4 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    if ([v4 isPickerUI])
    {
      if (![v4 forPickingDocuments]) {
        goto LABEL_3;
      }
      id v5 = sub_100082AD8();
      if (!v5) {
        goto LABEL_3;
      }
    }
    id v6 = (id)_DocumentManagerBundle();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      v22._countAndFlagsBits = 0xD000000000000027;
      v22._object = (void *)0x80000001005EAC30;
      v9._countAndFlagsBits = 0x5B207463656C6553;
      v9._object = (void *)0xED00005D756E656DLL;
      v10._countAndFlagsBits = 0x617A696C61636F4CLL;
      v10._object = (void *)0xEB00000000656C62;
      v11._countAndFlagsBits = 0x7463656C6553;
      v11._object = (void *)0xE600000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v7, v11, v22);

      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v20 = v12;
      uint64_t v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [self systemImageNamed:v14];

      [v13 setImage:v15];
      v21[3] = v8;
      v21[0] = v13;
      id v16 = v13;
      sub_10008517C((uint64_t)v21);
      sub_10009B1B8((uint64_t)v21);
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1005A04F0;
      *(void *)(v17 + 32) = v16;
      v21[0] = v17;
      specialized Array._endMutation()();
      Swift::String v18 = (void *)v21[0];
      id v19 = v16;
      a1(v18);

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    a1(_swiftEmptyArrayStorage);
  }
}

id sub_10033EA20()
{
  return sub_1003417EC(0, type metadata accessor for DOCLegacyOverflowBarButtonItem);
}

void sub_10033EA3C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v3 = (void *)Strong;
    sub_10033EA98(a1);
  }
}

void sub_10033EA98(void *a1)
{
  id v2 = [a1 identifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;

  uint64_t v6 = HIBYTE(v5) & 0xF;
  uint64_t v7 = v3 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(v5) & 0xF;
  }
  else {
    uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    if ((v5 & 0x1000000000000000) != 0)
    {
      uint64_t v10 = (uint64_t)sub_1003425F0(v3, v5, 10);
      LOBYTE(v3) = v28;
LABEL_44:
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0 && (unint64_t)v10 < 3)
      {
        uint64_t v21 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_10059B760;
        *(void *)(v22 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v23 = sub_1000BAC0C(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
        *(void *)(v22 + 32) = v1;
        *(void *)(v22 + 96) = &type metadata for Int;
        *(void *)(v22 + 104) = &protocol witness table for Int;
        *(void *)(v22 + 64) = v23;
        *(void *)(v22 + 72) = v10;
        id v24 = v1;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        sub_100340C54(v10);
      }
      return;
    }
    if ((v5 & 0x2000000000000000) == 0)
    {
      if ((v3 & 0x1000000000000000) != 0) {
        Swift::String v9 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        Swift::String v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v10 = (uint64_t)sub_100342958(v9, v7, 10);
      LOBYTE(v3) = v11 & 1;
      goto LABEL_44;
    }
    v29[0] = v3;
    v29[1] = v5 & 0xFFFFFFFFFFFFFFLL;
    if (v3 == 43)
    {
      if (!v6) {
        goto LABEL_60;
      }
      if (v6 == 1 || (BYTE1(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v10 = (BYTE1(v3) - 48);
      if (v6 != 2)
      {
        if ((BYTE2(v3) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v10 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
        uint64_t v12 = v6 - 3;
        if (v12)
        {
          uint64_t v13 = (unsigned __int8 *)v29 + 3;
          while (1)
          {
            unsigned int v14 = *v13 - 48;
            if (v14 > 9) {
              goto LABEL_31;
            }
            uint64_t v15 = 10 * v10;
            if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
              goto LABEL_31;
            }
            uint64_t v10 = v15 + v14;
            if (__OFADD__(v15, v14)) {
              goto LABEL_31;
            }
            LOBYTE(v3) = 0;
            ++v13;
            if (!--v12) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (v3 == 45)
      {
        if (v6)
        {
          if (v6 != 1 && (BYTE1(v3) - 48) <= 9u)
          {
            if (v6 == 2)
            {
              LOBYTE(v3) = 0;
              uint64_t v10 = -(uint64_t)(BYTE1(v3) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(v3) - 48) <= 9u)
            {
              uint64_t v10 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
              uint64_t v20 = v6 - 3;
              if (!v20) {
                goto LABEL_43;
              }
              id v25 = (unsigned __int8 *)v29 + 3;
              while (1)
              {
                unsigned int v26 = *v25 - 48;
                if (v26 > 9) {
                  break;
                }
                uint64_t v27 = 10 * v10;
                if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
                  break;
                }
                uint64_t v10 = v27 - v26;
                if (__OFSUB__(v27, v26)) {
                  break;
                }
                LOBYTE(v3) = 0;
                ++v25;
                if (!--v20) {
                  goto LABEL_44;
                }
              }
            }
          }
LABEL_31:
          uint64_t v10 = 0;
          LOBYTE(v3) = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_60:
        __break(1u);
        return;
      }
      if (!v6 || (v3 - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v10 = (v3 - 48);
      if (v6 != 1)
      {
        if ((BYTE1(v3) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v10 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
        uint64_t v16 = v6 - 2;
        if (v16)
        {
          uint64_t v17 = (unsigned __int8 *)v29 + 2;
          while (1)
          {
            unsigned int v18 = *v17 - 48;
            if (v18 > 9) {
              goto LABEL_31;
            }
            uint64_t v19 = 10 * v10;
            if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
              goto LABEL_31;
            }
            uint64_t v10 = v19 + v18;
            if (__OFADD__(v19, v18)) {
              goto LABEL_31;
            }
            LOBYTE(v3) = 0;
            ++v17;
            if (!--v16) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }

  swift_bridgeObjectRelease();
}

void sub_10033EE8C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10033EEE8(a1);
  }
}

uint64_t sub_10033EEE8(void *a1)
{
  uint64_t v3 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCItemSortMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  DOCItemSortMode.init(rawValue:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10070ADC0);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v15 = (void *)static DOCLog.UI.getter();
  v21[1] = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10059B760;
  *(void *)(v16 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
  *(void *)(v16 + 64) = sub_1000BAC0C(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
  *(void *)(v16 + 32) = v1;
  v1;
  uint64_t v17 = DOCItemSortMode.rawValue.getter();
  uint64_t v18 = v3;
  uint64_t v20 = v19;
  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = sub_100073F48();
  *(void *)(v16 + 72) = v17;
  *(void *)(v16 + 80) = v20;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  DOCItemSortMode.displayableMode.getter();
  sub_10033994C(v5);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_10033F234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = (void *)Strong;
    DOCItemCollectionViewController.groupOption(changeTo:)(a3);
  }
}

void DOCItemCollectionViewController.groupOption(changeTo:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v22 - v7;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v25 = a1;
  v12(v8, a1, v2);
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v30 = v24;
    uint64_t v23 = v15;
    *(_DWORD *)uint64_t v15 = 136315138;
    v22[1] = v15 + 4;
    v12(v5, (uint64_t)v8, v2);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v29 = sub_10009B0E4(v16, v17, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Change collection grouping behavior to: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }

  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
  uint64_t v18 = v28 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v21 = [*(id *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
    (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v19 + 24))(v25, v21, ObjectType, v19);

    swift_unknownObjectRelease();
  }
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
}

Class sub_10033F614(int a1, NSString *a2)
{
  v100 = a2;
  int v97 = a1;
  uint64_t v104 = (void (**)(unint64_t, uint64_t))type metadata accessor for Logger();
  uint64_t v3 = (uint64_t)*(v104 - 1);
  __chkstk_darwin(v104);
  unint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v99 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  v93 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v88 - v10;
  uint64_t v92 = v11;
  __chkstk_darwin(v9);
  id v13 = (char *)&v88 - v12;
  uint64_t v106 = type metadata accessor for DOCItemSortMode();
  uint64_t v102 = *(void *)(v106 - 8);
  uint64_t v14 = __chkstk_darwin(v106);
  unint64_t v107 = (unint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v88 - v16;
  uint64_t v18 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v91 = (uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v88 - v22;
  Class result = (Class)__chkstk_darwin(v21);
  uint64_t v26 = (char *)&v88 - v25;
  v101 = v2;
  uint64_t v27 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v27) {
    goto LABEL_42;
  }
  uint64_t v28 = v27 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  char v29 = *(unsigned char *)(v28 + 16);
  v105 = (char *)&v88 - v25;
  if ((v29 & 1) == 0)
  {
    id v30 = *(id *)v28;
    unsigned __int8 v31 = [v30 doc_displaysSearchResults];

    uint64_t v26 = v105;
    if (v31)
    {
      static Logger.UI.getter();
      Swift::String v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v32, v33))
      {
        unint64_t v34 = (uint8_t *)swift_slowAlloc();
        v113[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v34 = 136315138;
        unint64_t v110 = sub_10009B0E4(0xD000000000000027, 0x80000001005EB0A0, v113);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s grouping by section not supported. Not adding Use Groups menu item", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, void))(v3 + 8))(v5, v104);
      return 0;
    }
  }
  uint64_t v98 = v6;
  uint64_t v36 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
  uint64_t v37 = v101;
  id v38 = *(id *)&v101[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  unint64_t v39 = sub_10007FCA0();

  Class isa = *(Class *)(v39 + 16);
  swift_bridgeObjectRelease();
  if (!isa) {
    return isa;
  }
  id v40 = *(id *)&v37[v36];
  unint64_t v41 = sub_10007FCA0();

  uint64_t v42 = v37;
  uint64_t v43 = v102;
  id v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
  uint64_t v45 = v106;
  uint64_t v95 = v102 + 56;
  v94 = v44;
  v44(v26, 1, 1, v106);
  unint64_t v46 = &v42[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior];
  swift_beginAccess();
  uint64_t v48 = v98;
  uint64_t v47 = v99;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
  uint64_t v90 = v99 + 16;
  uint64_t v89 = v49;
  v49(v13, v46, v98);
  if ((*(unsigned int (**)(char *, uint64_t))(v47 + 88))(v13, v48) == enum case for DOCItemGroupingBehavior.grouped(_:))
  {
    (*(void (**)(char *, uint64_t))(v47 + 96))(v13, v48);
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v50(v17, v13, v45);
    sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_10070ADC0);
    v50(v26, v17, v45);
    uint64_t v51 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v48);
    sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_10070ADC0);
    uint64_t v51 = 1;
  }
  v52.value = v100;
  v94(v26, v51, 1, v45);
  uint64_t v53 = *(void *)(v41 + 16);
  if (!v53)
  {
LABEL_21:
    sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_10070ADC0);
    v94(v26, 1, 1, v106);
    goto LABEL_24;
  }
  unint64_t v54 = v41 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
  uint64_t v55 = *(void *)(v102 + 72);
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
  v103 = (void (**)(unint64_t, char *, uint64_t))(v102 + 32);
  uint64_t v104 = (void (**)(unint64_t, uint64_t))(v102 + 8);
  unint64_t v88 = v41;
  swift_bridgeObjectRetain();
  uint64_t v57 = v106;
  while (1)
  {
    sub_1000CBC00((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_10070ADC0);
    if ((*v56)(v23, 1, v57) == 1)
    {
      sub_1000CBBA4((uint64_t)v23, (uint64_t *)&unk_10070ADC0);
      goto LABEL_14;
    }
    (*v103)(v107, v23, v57);
    sub_1000BAC0C((unint64_t *)&unk_10071D2C0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v110 == v108 && v111 == v109) {
      break;
    }
    char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = v106;
    (*v104)(v107, v106);
    uint64_t v26 = v105;
    if (v58) {
      goto LABEL_23;
    }
LABEL_14:
    v54 += v55;
    if (!--v53)
    {
      unint64_t v41 = v88;
      swift_bridgeObjectRelease();
      v52.value = v100;
      uint64_t v48 = v98;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease_n();
  (*v104)(v107, v106);
  uint64_t v26 = v105;
LABEL_23:
  unint64_t v41 = v88;
  swift_bridgeObjectRelease();
  v52.value = v100;
  uint64_t v48 = v98;
LABEL_24:
  uint64_t v59 = v101;
  unint64_t v60 = (unint64_t)sub_1000BA1D0(v41, (uint64_t)v26, (uint64_t)v59, (uint64_t)v112, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_100340354);
  swift_bridgeObjectRelease();

  unint64_t v110 = v60;
  uint64_t v61 = v102;
  if ((v97 & 1) == 0) {
    goto LABEL_32;
  }
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v84) {
      goto LABEL_32;
    }
LABEL_27:
    uint64_t v62 = v99;
    v63 = v96;
    (*(void (**)(char *, void, uint64_t))(v99 + 104))(v96, enum case for DOCItemGroupingBehavior.none(_:), v48);
    uint64_t v64 = v91;
    sub_1000CBC00((uint64_t)v26, v91, (uint64_t *)&unk_10070ADC0);
    uint64_t v65 = v48;
    unint64_t v107 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v64, 1, v106) == 1;
    sub_1000CBBA4(v64, (uint64_t *)&unk_10070ADC0);
    DOCItemGroupingBehavior.localizedName.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    uint64_t v66 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v67 = v93;
    v89(v93, v63, v65);
    unint64_t v68 = (*(unsigned __int8 *)(v62 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v66;
    (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v69 + v68, v67, v65);
    v70 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v71 = self;
    id v72 = v70;
    DOCItemGroupingBehavior.accessibilityIdentifierComponent.getter();
    NSString v73 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v74 = [v71 groupByMenuItemForGrouping:v73];

    if (!v74)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v74 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v72 setAccessibilityIdentifier:v74];

    if (!(v110 >> 62))
    {
      id v75 = v72;
      uint64_t v26 = v105;
      uint64_t v76 = v98;
      v52.value = v100;
LABEL_31:
      sub_100514F68(0, 0, (uint64_t)v72);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v96, v76);
      goto LABEL_32;
    }
    id v85 = v72;
    swift_bridgeObjectRetain();
    uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
    Class result = (Class)swift_bridgeObjectRelease();
    uint64_t v26 = v105;
    uint64_t v76 = v98;
    v52.value = v100;
    if ((v86 & 0x8000000000000000) == 0) {
      goto LABEL_31;
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    return result;
  }
  if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_27;
  }
LABEL_32:
  Class result = (Class)(id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_43;
  }
  Class v77 = result;
  v115._countAndFlagsBits = 0xD00000000000003CLL;
  v115._object = (void *)0x80000001005EB060;
  v78._countAndFlagsBits = 0x79422070756F7247;
  v78._object = (void *)0xE90000000000003ALL;
  v79._countAndFlagsBits = 0x617A696C61636F4CLL;
  v79._object = (void *)0xEB00000000656C62;
  v80._countAndFlagsBits = 0x79422070756F7247;
  v80._object = (void *)0xE90000000000003ALL;
  Swift::String v81 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v78, v79, (NSBundle)v77, v80, v115);

  UIMenuElementSize v82 = v110;
  if (v110 >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    swift_bridgeObjectRetain();
    UIMenuElementSize v83 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    UIMenuElementSize v83 = v82;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v114.value.super.Class isa = 0;
  v114.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v81, (Swift::String_optional)0, v114, v52, 0xFFFFFFFFFFFFFFFFLL, v83, v87).super.super.isa;
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v26, (uint64_t *)&unk_10070ADC0);
  return isa;
}

uint64_t sub_100340354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v64 = a4;
  uint64_t v6 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v60 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v8;
  __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v53 - v9;
  uint64_t v10 = type metadata accessor for DOCItemSortMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_100711B90);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v53 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v53 - v23;
  sub_1000CBC00(a2, (uint64_t)&v53 - v23, (uint64_t *)&unk_10070ADC0);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v56 = v11 + 16;
  uint64_t v57 = a1;
  uint64_t v26 = a1;
  uint64_t v27 = v11;
  uint64_t v55 = v25;
  v25(v22, v26, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
  uint64_t v28 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1000CBC00((uint64_t)v24, (uint64_t)v16, (uint64_t *)&unk_10070ADC0);
  sub_1000CBC00((uint64_t)v22, v28, (uint64_t *)&unk_10070ADC0);
  char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v29((uint64_t)v16, 1, v10) == 1)
  {
    sub_1000CBBA4((uint64_t)v22, (uint64_t *)&unk_10070ADC0);
    sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070ADC0);
    int v30 = v29(v28, 1, v10);
    uint64_t v31 = v63;
    if (v30 == 1)
    {
      sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070ADC0);
      uint64_t v54 = 1;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1000CBC00((uint64_t)v16, v54, (uint64_t *)&unk_10070ADC0);
  if (v29(v28, 1, v10) == 1)
  {
    sub_1000CBBA4((uint64_t)v22, (uint64_t *)&unk_10070ADC0);
    sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070ADC0);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v54, v10);
    uint64_t v31 = v63;
LABEL_6:
    sub_1000CBBA4((uint64_t)v16, &qword_100711B90);
    uint64_t v54 = 0;
    goto LABEL_8;
  }
  Swift::String v32 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v53, v28, v10);
  sub_1000BAC0C(&qword_10070ADD0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
  uint64_t v33 = v54;
  uint64_t v34 = v27;
  char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v34 + 8);
  v36(v32, v10);
  sub_1000CBBA4((uint64_t)v22, (uint64_t *)&unk_10070ADC0);
  sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10070ADC0);
  v36((char *)v33, v10);
  sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070ADC0);
  uint64_t v54 = v35 & 1;
  uint64_t v31 = v63;
LABEL_8:
  uint64_t v37 = v61;
  uint64_t v38 = v62;
  v55(v61, v57, v10);
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, enum case for DOCItemGroupingBehavior.grouped(_:), v31);
  uint64_t v63 = DOCItemGroupingBehavior.localizedName.getter();
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v40 = v60;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v60, v37, v31);
  uint64_t v41 = v31;
  unint64_t v42 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v39;
  unint64_t v44 = v43 + v42;
  uint64_t v45 = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v44, v40, v41);
  unint64_t v46 = v37;
  uint64_t v47 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v48 = self;
  id v49 = v47;
  DOCItemGroupingBehavior.accessibilityIdentifierComponent.getter();
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v51 = [v48 groupByMenuItemForGrouping:v50];

  if (!v51)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v49 setAccessibilityIdentifier:v51];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v46, v45);
  *uint64_t v64 = v49;
  return result;
}

void sub_100340A24(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = (void *)Strong;
    a3();
  }
}

void sub_100340A80()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v5 = (void *)Strong;
    static Logger.UI.getter();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "received request to create new folder", v8, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1001CC114(0, 1);
  }
}

void sub_100340C00()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10033DC40();
  }
}

uint64_t sub_100340C54(uint64_t a1)
{
  uint64_t v3 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10059B760;
  *(void *)(v4 + 56) = type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v5 = sub_1000BAC0C(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 96) = &type metadata for Int;
  *(void *)(v4 + 104) = &protocol witness table for Int;
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = a1;
  uint64_t v6 = v1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  os_log_type_t v7 = &v6[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = *((void *)v7 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v11 = [*(id *)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
    (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v9 + 16))(a1, v11, ObjectType, v9);

    uint64_t Strong = swift_unknownObjectRelease();
  }
  return _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0(Strong);
}

id sub_100340DE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001DE1E4();
  id v5 = objc_allocWithZone((Class)type metadata accessor for DOCViewOptionsViewController());
  id v6 = sub_1001103B4(v4);
  [v6 setModalPresentationStyle:7];
  id v7 = [v6 popoverPresentationController];
  [v7 setSourceItem:a1];

  id v8 = [v6 popoverPresentationController];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 setPermittedArrowDirections:1];
  }
  id v10 = [v6 popoverPresentationController];
  if (v10)
  {
    id v11 = v10;
    [v10 setDelegate:v2];
  }
  id v12 = [v6 popoverPresentationController];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 adaptiveSheetPresentationController];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1005A04F0;
    *(void *)(v15 + 32) = [self mediumDetent];
    specialized Array._endMutation()();
    sub_10009E6C4(0, &qword_10070F0F0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v14 setDetents:isa];

    [v14 setSelectedDetentIdentifier:UISheetPresentationControllerDetentIdentifierMedium];
  }
  return v6;
}

void sub_100340FE0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
    if (v2)
    {
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = v1;
      *(void *)(v3 + 24) = v2;
      aBlock[4] = sub_1003450B4;
      aBlock[5] = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006A3318;
      uint64_t v4 = _Block_copy(aBlock);
      id v5 = v2;
      id v6 = v1;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v4);

      uint64_t v1 = v5;
    }
  }
}

void sub_100341100(void *a1, uint64_t a2)
{
  v5[4] = sub_1003411BC;
  v5[5] = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1000666D8;
  v5[3] = &unk_1006A3340;
  uint64_t v4 = _Block_copy(v5);
  [a1 presentViewController:a2 animated:1 completion:v4];
  _Block_release(v4);
}

uint64_t sub_1003411BC()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "ViewOptionsViewController presented", v6, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

Swift::Void __swiftcall DOCItemCollectionViewController.toggleShowAllFilenameExtensions()()
{
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  [*(id *)(qword_100737550 + 40) setForceDisplayFilenameExtensions:[*(id *)(qword_100737550 + 40) forceDisplayFilenameExtensions] ^ 1];
  sub_10007D85C();

  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
}

void sub_100341380(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100341388()
{
  uint64_t v0 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DOCItemSortMode.displayableMode.getter();
  sub_10033994C((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100341464(uint64_t a1, char a2)
{
  return sub_100344D64(a2 & 1);
}

Swift::Void __swiftcall DOCItemCollectionViewController.prepareForPopoverPresentation(_:)(UIPopoverPresentationController a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    id v6 = [Strong popoverPresentationController];

    if (v6)
    {
      sub_10009E6C4(0, &qword_1007118B0);
      id v7 = a1.super.super.isa;
      id v8 = v6;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9) {
        [(objc_class *)v7 setSourceItem:*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton)];
      }
    }
  }
  id v10 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
  if (v10)
  {
    id v11 = [v10 popoverPresentationController];
    if (v11)
    {
      id v12 = v11;
      sub_10009E6C4(0, &qword_1007118B0);
      uint64_t v13 = a1.super.super.isa;
      id v14 = v12;
      LOBYTE(v12) = static NSObject.== infix(_:_:)();

      if (v12)
      {
        id v15 = sub_10033C90C();
        id v16 = [v15 _doc_ipi_view];

        if (v16)
        {
          id v17 = [v16 window];

          if (v17)
          {

            id v18 = sub_10033C90C();
            [(objc_class *)v13 setBarButtonItem:v18];
          }
        }
      }
    }
  }
}

id sub_1003417D4(uint64_t a1)
{
  return sub_1003417EC(a1, type metadata accessor for UIDocumentBrowserActionBarButton);
}

id sub_1003417EC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

char *sub_100341834(void *a1, char a2, void *a3)
{
  v9[3] = type metadata accessor for DOCItemCollectionViewController(0);
  v9[0] = a3;
  id v6 = a3;
  id v7 = sub_100343980(a1, v9, (uint64_t)"actionBarButtonTriggeredWithActionBarButton:");
  sub_10009B1B8((uint64_t)v9);
  [v7 setEnabled:a2 & 1, v9[0]];
  return v7;
}

void sub_1003418BC(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC5Files32UIDocumentBrowserActionBarButton_docAction];
  if (v2)
  {
    v7[3] = type metadata accessor for UIDocumentBrowserActionBarButton();
    v7[0] = a1;
    id v4 = v2;
    uint64_t v5 = a1;
    id v6 = DOCItemCollectionViewController.actionContext(from:)();
    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_100705D60);
    [v1 performActionWithAction:v4 actionContext:v6, v7[0]];
  }
}

id sub_1003419B8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v49 = (void *)a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for DispatchQoS();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  unint64_t v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTimeInterval();
  uint64_t v40 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = __chkstk_darwin(v14);
  uint64_t v41 = (char *)&v38 - v16;
  id v17 = [a1 identifier:v15];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
  {
    id result = (id)swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    int v24 = 0;
    if ((v23 & 1) == 0) {
      goto LABEL_7;
    }
  }
  if (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] != 2) {
    return result;
  }
  int v24 = 1;
LABEL_7:
  sub_10003B6F8(0);
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  id result = (id)swift_bridgeObjectRelease();
  if (!All) {
    return result;
  }
  uint64_t v39 = v5;
  unint64_t v26 = All >> 62;
  if (!v24
    || ![*(id *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forPickingFolders])
  {
    goto LABEL_12;
  }
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v37) {
      goto LABEL_20;
    }
LABEL_12:
    swift_bridgeObjectRetain();
    if (v26)
    {
      uint64_t v27 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      uint64_t v27 = All;
    }
    uint64_t v28 = v39;
    swift_bridgeObjectRelease();
    sub_1003EC438(a1, v27, (uint64_t)v49);
    swift_bridgeObjectRelease();
    if (!v24) {
      return [v3 setEditing:0 animated:1];
    }
    goto LABEL_15;
  }
  if (*(void *)((All & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  sub_1002A0380();
  uint64_t v28 = v39;
LABEL_15:
  v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus] = 0;
  sub_1001B75E0();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v49 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *id v10 = 500;
  uint64_t v29 = v40;
  (*(void (**)(void *, void, uint64_t))(v40 + 104))(v10, enum case for DispatchTimeInterval.milliseconds(_:), v8);
  int v30 = v41;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v10, v8);
  uint64_t v31 = v43;
  uint64_t v42 = *(void *)(v42 + 8);
  ((void (*)(char *, uint64_t))v42)(v13, v43);
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100344C9C;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006A3200;
  uint64_t v33 = _Block_copy(aBlock);
  swift_release();
  uint64_t v34 = v44;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000BAC0C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  char v35 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v36 = v49;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v28);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v47);
  ((void (*)(char *, uint64_t))v42)(v30, v31);
  return [v3 setEditing:0 animated:1];
}

void sub_10034204C()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned __int8 *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v1 = Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus];

    if (!v1)
    {
      swift_beginAccess();
      uint64_t v2 = swift_unknownObjectWeakLoadStrong();
      if (v2)
      {
        uint64_t v3 = (void *)v2;
        *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus) = 1;
        sub_1001B75E0();
      }
      swift_beginAccess();
      id v4 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v4)
      {
        uint64_t v5 = v4;
        *((unsigned char *)v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 1;
        id v6 = [v4 viewIfLoaded];
        id v7 = [v6 window];

        if (v7) {
          sub_1000A6988();
        }
      }
    }
  }
}

void sub_1003421E0(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  if (!a2)
  {
    a3(0);
    return;
  }
  id v4 = (void *)_convertErrorToNSError(_:)();
  uint64_t v5 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v6 = swift_allocObject();
  v16[1] = (id)2;
  *(_OWORD *)(v6 + 16) = xmmword_1005A0030;
  *(void *)(v6 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v6 + 64) = sub_10018DCDC();
  *(void *)(v6 + 32) = v4;
  id v18 = v4;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v7 = [v18 domain];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
LABEL_9:
      id v17 = v18;
      a3(v18);

      double v15 = v17;
      goto LABEL_10;
    }
  }
  if (objc_msgSend(v18, "code", 1) != (id)3072) {
    goto LABEL_9;
  }
  uint64_t v13 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = *(_OWORD *)v16;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_100073F48();
  *(void *)(v14 + 32) = 0xD00000000000001BLL;
  *(void *)(v14 + 40) = 0x80000001005EB040;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  double v15 = v18;
LABEL_10:
}

uint64_t sub_100342474(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1003424F0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1003426D8(a1, a2, a3);
}

uint64_t sub_100342508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100342BD4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_1003426D8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1003425F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100342BD4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_100342958(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1003426D8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_100342958(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100342BD4()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_100342C54(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100342C54(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100342DAC(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10009B630(v9, 0),
          unint64_t v12 = sub_100342EAC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100342DAC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100342474(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100342474(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_100342EAC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    id result = v12;
    if (v17 == v15) {
      id result = sub_100342474(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      id result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        id result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          id result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    id result = sub_100342474(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_1003430C0(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v5 = type metadata accessor for UTType();
  unint64_t v6 = *(char ***)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_29:
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
LABEL_3:
      uint64_t v22 = v8;
      uint64_t v23 = v5;
      unint64_t v10 = 0;
      uint64_t v8 = (char *)(a1 & 0xC000000000000001);
      char v20 = (void (**)(char *, uint64_t))(v6 + 1);
      uint64_t v21 = v3;
      unint64_t v3 = &selRef_cellForItemAtIndexPath_;
      unint64_t v6 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
      while (1)
      {
        if (v8)
        {
          uint64_t v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v5 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
LABEL_26:
            __break(1u);
            return v25;
          }
        }
        else
        {
          if (v10 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_29;
          }
          uint64_t v11 = *(void **)(a1 + 8 * v10 + 32);
          swift_unknownObjectRetain();
          uint64_t v5 = v10 + 1;
          if (__OFADD__(v10, 1)) {
            goto LABEL_26;
          }
        }
        if ([v11 v3[465]]
          && ([v11 v6[506]] & 1) != 0
          && ([v11 isCopying] & 1) == 0
          && ([v11 isFullyFormed] & 1) != 0)
        {
          unint64_t v12 = *(void **)(v24 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
          if ((([v12 forMovingDocuments] & 1) != 0
             || [v12 forSavingDocuments]
             || ([v12 forPickingFoldersOnly] & 1) != 0)
            && ([v11 isFolder] & 1) == 0)
          {
            swift_unknownObjectRelease();
            unint64_t v6 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
          }
          else
          {
            if ([v11 isFolder]) {
              goto LABEL_17;
            }
            id v13 = [v11 contentType];
            static UTType._unconditionallyBridgeFromObjectiveC(_:)();

            id v14 = [v12 documentContentTypes];
            uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            v16._rawValue = (void *)v15;
            unint64_t v17 = v22;
            HIDWORD(v19) = UTType.doc_conformsToAny(inContentTypes:)(v16);
            swift_bridgeObjectRelease();
            (*v20)(v17, v23);
            if ((v19 & 0x100000000) != 0)
            {
LABEL_17:
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
              swift_unknownObjectRelease();
            }
            unint64_t v3 = &selRef_cellForItemAtIndexPath_;
            unint64_t v6 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v10;
        if (v5 == v9) {
          return v25;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1003433FC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = a1 + 40;
    do
    {
      uint64_t v7 = *(void **)(v6 - 8);
      v6 += 16;
      id v8 = v7;
      a2();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1003434D8(uint64_t a1, void *a2)
{
  if (qword_100705330 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1007377C0;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self systemImageNamed:v5];

  if (!v6
    || (id v7 = [v6 imageWithConfiguration:v4],
        v6,
        [v7 size],
        double v9 = v8,
        v7,
        v9 <= -1.0))
  {
    double v9 = -1.0;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10];

  if (!v11
    || (id v12 = [v11 imageWithConfiguration:v4],
        v11,
        [v12 size],
        double v14 = v13,
        v12,
        v14 <= v9))
  {
    double v14 = v9;
  }
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self systemImageNamed:v15];

  if (!v16
    || (id v17 = [v16 imageWithConfiguration:v4],
        v16,
        [v17 size],
        double v19 = v18,
        v17,
        v19 <= v14))
  {
    double v19 = v14;
  }
  char v20 = (void *)sub_100492CD4(a1);
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = [v20 imageWithConfiguration:v4];
  }
  else
  {
    id v22 = 0;
  }
  [a2 setImage:v22];
  if (v19 > 0.0 && v22)
  {
    id v23 = v22;
    [v23 size];
    [a2 setImageInsets:0.0, (v19 - v24) * -0.5, 0.0, (v19 - v24) * -0.5];
  }
  uint64_t v25 = self;
  sub_100492DC4(a1);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v25 itemCollectionMenuButtonShowing:v26];

  if (!v27)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [a2 setAccessibilityIdentifier:v27];
}

char *sub_100343980(void *a1, void *a2, uint64_t a3)
{
  id v6 = [a1 identifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_11:
    type metadata accessor for UIDocumentBrowserActionBarButton();
    id v21 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    sub_1000A6B78(a2, a2[3]);
    double v19 = (char *)[v21 initWithBarButtonSystemItem:16 target:_bridgeAnythingToObjectiveC<A>(_:)() action:a3];
LABEL_12:
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  id v13 = [a1 image];
  if (!v13)
  {
    id v25 = [a1 localizedTitle];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v26 = [a1 style];
    sub_10009B208((uint64_t)a2, (uint64_t)v34);
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v28 = v35;
    if (v35)
    {
      unsigned int v29 = sub_1000A6B78(v34, v35);
      uint64_t v30 = *(void *)(v28 - 8);
      __chkstk_darwin(v29);
      unsigned __int8 v32 = (char *)v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v30 + 16))(v32);
      uint64_t v33 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
      sub_10009B1B8((uint64_t)v34);
    }
    else
    {
      uint64_t v33 = 0;
    }
    type metadata accessor for UIDocumentBrowserActionBarButton();
    double v19 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithTitle:v27 style:v26 target:v33 action:a3];

    goto LABEL_12;
  }
  double v14 = v13;
  type metadata accessor for UIDocumentBrowserActionBarButton();
  id v15 = v14;
  id v16 = [a1 style];
  id v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1000A6B78(a2, a2[3]);
  id v18 = [v17 initWithImage:v15 style:v16 target:_bridgeAnythingToObjectiveC<A>(_:)() action:a3];
  swift_unknownObjectRelease();

  double v19 = (char *)v18;
  NSString v20 = [a1 localizedTitle];
  if (!v20)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v19 setTitle:v20];

LABEL_13:
  id v22 = *(void **)&v19[OBJC_IVAR____TtC5Files32UIDocumentBrowserActionBarButton_docAction];
  *(void *)&v19[OBJC_IVAR____TtC5Files32UIDocumentBrowserActionBarButton_docAction] = a1;
  id v23 = a1;

  return v19;
}

unsigned char *sub_100343D44(void *a1, __int16 a2, void *a3, void *a4)
{
  if (a1)
  {
    id v8 = a1;
    id v9 = [v8 identifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v10 && v13 == v12)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v10 && v16 == v12)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v10 && v19 == v12)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v47 & 1) == 0)
              {
                if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v10 && v48 == v12)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v49 & 1) == 0) {
                    goto LABEL_20;
                  }
                }
                if ([a4 horizontalSizeClass] != (id)2)
                {
                  if (DOCScreenSizeSEPhone()) {
                    [a4 verticalSizeClass];
                  }
                  type metadata accessor for DOCActionToolBarItem();
                  unint64_t v46 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithBarButtonSystemItem:16 target:a3 action:"barButtonTappedWithSender:"];
                  goto LABEL_37;
                }
LABEL_20:
                id v22 = [v8 localizedTitle];
                static String._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v23 = type metadata accessor for DOCItemCollectionViewController(0);
                v50[3] = v23;
                v50[0] = a3;
                id v24 = a3;
                NSString v25 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                if (v23)
                {
                  id v26 = sub_1000A6B78(v50, v23);
                  uint64_t v27 = *(void *)(v23 - 8);
                  __chkstk_darwin(v26);
                  unsigned int v29 = (char *)v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
                  (*(void (**)(char *))(v27 + 16))(v29);
                  uint64_t v30 = _bridgeAnythingToObjectiveC<A>(_:)();
                  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v23);
                  sub_10009B1B8((uint64_t)v50);
                }
                else
                {
                  uint64_t v30 = 0;
                }
                type metadata accessor for DOCActionToolBarItem();
                id v41 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
                uint64_t v36 = [v41 initWithTitle:v25 style:0 target:v30 action:@"barButtonTappedWithSender:" v50[0]];

                swift_unknownObjectRelease();
                goto LABEL_28;
              }
            }
            swift_bridgeObjectRelease();
            if ([a4 horizontalSizeClass] != (id)2)
            {
              if (DOCScreenSizeSEPhone()) {
                [a4 verticalSizeClass];
              }
              type metadata accessor for DOCActionToolBarItem();
              unint64_t v46 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithBarButtonSystemItem:9 target:a3 action:"barButtonTappedWithSender:"];
LABEL_37:
              uint64_t v36 = v46;
LABEL_28:
              uint64_t v42 = *(void **)&v36[OBJC_IVAR____TtC5Files20DOCActionToolBarItem_docAction];
              *(void *)&v36[OBJC_IVAR____TtC5Files20DOCActionToolBarItem_docAction] = a1;
              id v43 = v8;

              v36[OBJC_IVAR____TtC5Files20DOCActionToolBarItem_onSelectedItems] = HIBYTE(a2) & 1;
              [v36 setEnabled:a2 & 1];
              unint64_t v44 = v36;
              NSString v45 = [v43 localizedTitle];
              if (!v45)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)();
                NSString v45 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
              }
              [v44 setTitle:v45];

              return v44;
            }
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
        if ([a4 horizontalSizeClass] != (id)2)
        {
          if (DOCScreenSizeSEPhone()) {
            [a4 verticalSizeClass];
          }
          type metadata accessor for DOCActionToolBarItem();
          unint64_t v46 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithBarButtonSystemItem:10 target:a3 action:"barButtonTappedWithSender:"];
          goto LABEL_37;
        }
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    if ([a4 horizontalSizeClass] != (id)2)
    {
      if (DOCScreenSizeSEPhone() && [a4 verticalSizeClass] == (id)1)
      {
        id v31 = [self configurationWithScale:1];
        NSString v32 = String._bridgeToObjectiveC()();
        id v33 = [self systemImageNamed:v32 withConfiguration:v31];

        type metadata accessor for DOCActionToolBarItem();
        id v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        id v35 = a3;
        uint64_t v36 = [v34 initWithImage:v33 style:0 target:v35 action:"barButtonTappedWithSender:"];
      }
      else
      {
        NSString v37 = String._bridgeToObjectiveC()();
        id v38 = [self systemImageNamed:v37];

        type metadata accessor for DOCActionToolBarItem();
        id v39 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        id v40 = a3;
        uint64_t v36 = [v39 initWithImage:v38 style:0 target:v40 action:"barButtonTappedWithSender:"];
      }
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  id v20 = [self flexibleSpaceItem];

  return v20;
}

void *sub_100344494(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    id v8 = (__int16 *)(a1 + 40);
    do
    {
      id v9 = (void *)*((void *)v8 - 1);
      __int16 v10 = *v8;
      v8 += 8;
      id v11 = v9;
      sub_100343D44(v9, v10, a2, a3);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v4;
    }
    while (v4);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100344574(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    id result = _swiftEmptyArrayStorage;
    if (!v3) {
      break;
    }
    __int16 v10 = _swiftEmptyArrayStorage;
    id result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      uint64_t v7 = v6;
      id v8 = v6;
      sub_10033B52C(&v8, &v9);

      if (v1) {
        return (void *)swift_release();
      }
      ++v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v3 == v5) {
        return v10;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003446E4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_moreActionsBarButton];
  if (v4) {
    goto LABEL_4;
  }
  id v5 = (id)_DocumentManagerBundle();
  if (!v5)
  {
    __break(1u);
    goto LABEL_29;
  }
  id v6 = v5;
  v36._countAndFlagsBits = 0xD000000000000046;
  v36._object = (void *)0x80000001005EAF80;
  v7._object = (void *)0x80000001005EAF60;
  v7._countAndFlagsBits = 0xD000000000000011;
  v8._countAndFlagsBits = 0x617A696C61636F4CLL;
  v8._object = (void *)0xEB00000000656C62;
  v9._countAndFlagsBits = 0xA680E265726F4DLL;
  v9._object = (void *)0xA700000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v36);

  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:v10 style:0 target:0 action:0];

  uint64_t v12 = *(void **)&v1[v3];
  *(void *)&v1[v3] = v11;

  uint64_t v4 = *(void **)&v1[v3];
  if (!v4)
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_4:
  id v13 = v4;
  double v14 = sub_10003B6F8(0);
  unint64_t v15 = (unint64_t)sub_10033B1DC(v14);
  swift_bridgeObjectRelease();
  unint64_t v16 = (unint64_t)sub_10003B6F8(0);
  if (v16 >> 62) {
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v17 >= 1)
  {
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v24 > 0) {
        goto LABEL_9;
      }
    }
    else if (*(uint64_t *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
    {
LABEL_9:
      id v18 = v13;
      uint64_t v19 = v1;
      UIMenuElementSize v20 = (UIMenuElementSize)sub_100344574(v15);
      swift_bridgeObjectRelease();

      if ((unint64_t)v20 >> 62)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100708610);
        swift_bridgeObjectRetain();
        UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10009E6C4(0, (unint64_t *)&qword_100708610);
        UIMenuElementSize preferredElementSize = v20;
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
      v22._countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v35.value.super.Class isa = 0;
      v35.is_nil = 0;
      Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v35, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v34).super.super.isa;
      swift_bridgeObjectRelease();
      [v18 setMenu:isa];

      sub_100083E58();
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  if ([a1 horizontalSizeClass] == (id)2)
  {
    [v13 setImage:0];
  }
  else
  {
    if (DOCScreenSizeSEPhone() && [a1 verticalSizeClass] == (id)1)
    {
      uint64_t v25 = qword_100705278;
      id v26 = v13;
      if (v25 != -1) {
        swift_once();
      }
      id v27 = [(id)qword_100737698 ellipsisMenuItemSmallImageName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [self systemImageNamed:v28];
    }
    else
    {
      uint64_t v30 = qword_100705278;
      id v26 = v13;
      if (v30 != -1) {
        swift_once();
      }
      id v31 = [(id)qword_100737698 ellipsisMenuItemImageName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [self systemImageNamed:v28];
    }
    id v32 = v29;

    [v26 setImage:v32];
  }
  return (uint64_t)v13;
}

uint64_t type metadata accessor for DOCActionToolBarItem()
{
  return self;
}

uint64_t type metadata accessor for UIDocumentBrowserActionBarButton()
{
  return self;
}

uint64_t sub_100344C64()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100344C9C()
{
}

void sub_100344CA4(uint64_t a1)
{
  sub_100340A24(a1, v1, (void (*)(void))sub_10033DC40);
}

uint64_t sub_100344CD4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100344D14()
{
  return sub_10033DD90(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_100344D24(void (*a1)(unint64_t))
{
}

void sub_100344D2C()
{
}

void sub_100344D34(uint64_t a1)
{
  sub_100340A24(a1, v1, (void (*)(void))sub_100344E40);
}

uint64_t sub_100344D64(char a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_overlayDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v7 = [*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
    (*(void (**)(void, id, uint64_t, uint64_t))(v5 + 32))(a1 & 1, v7, ObjectType, v5);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100344E40()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    Swift::String v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "View Options UIAction tapped", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  Swift::String v9 = *(void **)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (!v9 || (id v10 = [v9 overflowPresentationSource]) == 0) {
    id v10 = sub_10033C90C();
  }
  id v11 = sub_100340DE0((uint64_t)v10);
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController);
  *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_viewOptionsViewController) = v11;

  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_10008762C();
  if (v14)
  {
    unint64_t v15 = v14;
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1003450AC;
    *(void *)(v16 + 24) = v13;
    swift_retain();
    sub_100518D94((uint64_t (*)(id))sub_100045B40, v16, 1);

    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100340FE0();
    swift_unknownObjectRelease();
    swift_release();
  }
  return swift_release();
}

void sub_1003450AC()
{
}

void sub_1003450B4()
{
  sub_100341100(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003450BC(void *a1)
{
}

void sub_1003450C4(void *a1)
{
}

uint64_t sub_1003450CC()
{
  uint64_t v1 = type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100345170()
{
}

char *sub_100345178(void *a1, char a2)
{
  return sub_100341834(a1, a2, *(void **)(v2 + 16));
}

void sub_100345180(void (*a1)(void *))
{
}

uint64_t sub_100345188()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003451D0(uint64_t a1)
{
  sub_10033BA64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1003451DC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100345224(unint64_t a1)
{
  sub_10033BBAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

void sub_100345230(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_100345238()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100345270()
{
  swift_release();
  swift_release();

  if (*(void *)(v0 + 64)) {
    sub_10009B1B8(v0 + 40);
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003452C8(uint64_t a1)
{
  return sub_10033D518(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), v1 + 40);
}

uint64_t sub_1003452E0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100345328()
{
  if (*(void *)(v0 + 40)) {
    sub_10009B1B8(v0 + 16);
  }

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100345378(void *a1)
{
  sub_10033D8E8(a1, v1 + 16, *(void **)(v1 + 48));
}

uint64_t sub_100345384()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003453BC(uint64_t a1, uint64_t a2)
{
  sub_1003421E0(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_1003453C4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100345404()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100345444()
{
  sub_10033DBEC(*(void *)(v0 + 16));
}

uint64_t sub_100345450()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 72)) {
    sub_10009B1B8(v0 + 48);
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1003454B0(uint64_t a1)
{
  sub_10033D658(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), v1 + 48);
}

uint64_t sub_1003454CC()
{
  uint64_t v1 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100345598(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DOCItemGroupingBehavior() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_10033F234(a1, v4, v5);
}

uint64_t sub_10034565C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  os_log_type_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 72;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 72;
  Swift::String v22 = __dst;
  id v21 = a4;
  if (v9 < v11)
  {
    if (v8 >= -71)
    {
      if (a4 != __dst || &__dst[9 * v9] <= a4) {
        memmove(a4, __dst, 72 * v9);
      }
      uint64_t v12 = &v4[9 * v9];
      UIMenuElementSize v20 = v12;
      if ((unint64_t)v6 < a3 && v8 >= 72)
      {
        do
        {
          if (*v6 >= *v4)
          {
            if (v7 != v4) {
              memmove(v7, v4, 0x48uLL);
            }
            v4 += 9;
            id v21 = v4;
            uint64_t v13 = v6;
          }
          else
          {
            uint64_t v13 = v6 + 9;
            if (v7 < v6 || v7 >= v13 || v7 != v6) {
              memmove(v7, v6, 0x48uLL);
            }
          }
          v7 += 9;
          if (v4 >= v12) {
            break;
          }
          uint64_t v6 = v13;
        }
        while ((unint64_t)v13 < a3);
        Swift::String v22 = v7;
      }
      goto LABEL_38;
    }
LABEL_39:
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100345918);
  }
  if (v10 < -71) {
    goto LABEL_39;
  }
  if (a4 != __src || &__src[9 * v11] <= a4) {
    memmove(a4, __src, 72 * v11);
  }
  double v14 = &v4[9 * v11];
  UIMenuElementSize v20 = v14;
  Swift::String v22 = v6;
  if (v7 < v6 && v10 >= 72)
  {
    unint64_t v15 = (double *)(a3 - 72);
    uint64_t v16 = v6;
    do
    {
      uint64_t v17 = v15 + 9;
      double v18 = *(v16 - 9);
      v16 -= 9;
      if (*(v14 - 9) >= v18)
      {
        UIMenuElementSize v20 = v14 - 9;
        if (v17 < v14 || v15 >= v14 || v17 != v14) {
          memmove(v15, v14 - 9, 0x48uLL);
        }
        uint64_t v16 = v6;
        v14 -= 9;
        if (v6 <= v7) {
          break;
        }
      }
      else
      {
        if (v17 != v6 || v15 >= v6) {
          memmove(v15, v16, 0x48uLL);
        }
        Swift::String v22 = v16;
        if (v16 <= v7) {
          break;
        }
      }
      v15 -= 9;
      uint64_t v6 = v16;
    }
    while (v14 > v4);
  }
LABEL_38:
  sub_10051FDBC((void **)&v22, (const void **)&v21, &v20);
  return 1;
}

__n128 initializeWithCopy for DOCItemCollectionLayoutTraits.GridItemBadgeTraits(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridItemBadgeTraits(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridItemBadgeTraits(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

uint64_t sub_1003459AC(unint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  if (a1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v5 = a2;
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      int64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      char v10 = sub_10035B69C(v7);

      if (v10)
      {
        ++v6;
        if (v9 != v4) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    id v11 = a2;
    swift_bridgeObjectRetain();
  }
  char v10 = 1;
LABEL_14:
  swift_bridgeObjectRelease();

  swift_release();
  return v10 & 1;
}

Swift::Bool __swiftcall DOCCopyOperation.handlePresendNotifications_asDSCopy()()
{
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems];
  unint64_t v2 = v1 >> 62;
  if (v1 >> 62)
  {
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_3;
    }
    return 0;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_3:
  char v3 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem];
  if ((sub_10035B69C(v3) & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = v0;
  char v5 = sub_1003459AC(v1, v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = self;
  v66[0] = 0;
  id v7 = v3;
  id v8 = [v6 providerDomainForItem:v7 cachePolicy:3 error:v66];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = v66[0];

    id v11 = v9;
    char v12 = FPProviderDomain.shouldUseDSEnumeration.getter();

    if (v12) {
      return 1;
    }
  }
  else
  {
    id v13 = v66[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  id v14 = [v4 stitcher];
  if (!v14) {
    return 1;
  }
  unint64_t v15 = v14;
  [v14 start];
  uint64_t v16 = sub_100494EAC((uint64_t)_swiftEmptyArrayStorage);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v60 = v4;
    if (!v17)
    {
LABEL_55:
      swift_bridgeObjectRelease();
      *(void *)&v60[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsItemIDToPlaceholderID] = v16;
      swift_bridgeObjectRelease();
      [v15 flush];

      return 1;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v60 = v4;
    if (!v17) {
      goto LABEL_55;
    }
  }
  id v64 = v7;
  unint64_t v65 = v1 & 0xC000000000000001;
  uint64_t v18 = 4;
  unint64_t v61 = v1;
  uint64_t v62 = v15;
  uint64_t v63 = v17;
  while (1)
  {
    uint64_t v0 = (char *)(v18 - 4);
    if (v65) {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v21 = *(id *)(v1 + 8 * v18);
    }
    Swift::String v22 = v21;
    unint64_t v2 = v18 - 3;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
      goto LABEL_58;
    }
    id v23 = [v21 itemID];
    id v24 = [v7 itemIdentifier];
    id v25 = [v7 providerDomainID];
    id v26 = [v15 createPlaceholderWithCopyOfExistingItem:v22 lastUsageUpdatePolicy:1 underParent:v24 inProviderDomainID:v25];

    unint64_t v27 = v16 & 0xC000000000000001;
    if (v26) {
      break;
    }
    if (!v27)
    {
      swift_bridgeObjectRetain();
      unint64_t v53 = sub_10017C1F0((uint64_t)v23);
      char v55 = v54;
      swift_bridgeObjectRelease();
      uint64_t v20 = v63;
      if (v55)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v66[0] = (id)v16;
        id v7 = v64;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100359E5C((uint64_t *)&unk_100717950);
          uint64_t v16 = (uint64_t)v66[0];
        }

        uint64_t v57 = *(void **)(*(void *)(v16 + 56) + 8 * v53);
        sub_100354AE4(v53, v16);

        swift_bridgeObjectRelease();
        unint64_t v15 = v62;
      }
      else
      {

        id v7 = v64;
        unint64_t v15 = v62;
      }
      goto LABEL_19;
    }
    if (v16 < 0) {
      uint64_t v39 = v16;
    }
    else {
      uint64_t v39 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    id v40 = v23;
    swift_bridgeObjectRetain();
    uint64_t v41 = __CocoaDictionary.lookup(_:)();

    if (!v41)
    {

      swift_bridgeObjectRelease();
      id v7 = v64;
      goto LABEL_18;
    }
    swift_unknownObjectRelease();
    uint64_t v42 = __CocoaDictionary.count.getter();
    Swift::Int v43 = sub_100349CA4(v39, v42, (uint64_t *)&unk_100717950, (unint64_t *)&unk_100706B70);
    swift_retain();
    unint64_t v44 = sub_10017C1F0((uint64_t)v40);
    char v46 = v45;
    swift_release();
    if ((v46 & 1) == 0) {
      goto LABEL_63;
    }

    char v47 = *(void **)(*(void *)(v43 + 56) + 8 * v44);
    sub_100354AE4(v44, v43);

    swift_bridgeObjectRelease();
    uint64_t v16 = v43;
LABEL_17:
    id v7 = v64;
    unint64_t v15 = v62;
LABEL_18:
    uint64_t v20 = v63;
LABEL_19:
    ++v18;
    if (v2 == v20) {
      goto LABEL_55;
    }
  }
  if (v27)
  {
    if (v16 < 0) {
      uint64_t v28 = v16;
    }
    else {
      uint64_t v28 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v29 = __CocoaDictionary.count.getter();
    if (__OFADD__(v29, 1)) {
      goto LABEL_61;
    }
    uint64_t v16 = sub_100349CA4(v28, v29 + 1, (uint64_t *)&unk_100717950, (unint64_t *)&unk_100706B70);
  }
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  v66[0] = (id)v16;
  unint64_t v32 = sub_10017C1F0((uint64_t)v23);
  uint64_t v33 = *(void *)(v16 + 16);
  BOOL v34 = (v31 & 1) == 0;
  uint64_t v35 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
  }
  char v36 = v31;
  if (*(void *)(v16 + 24) >= v35)
  {
    if (v30)
    {
      uint64_t v16 = (uint64_t)v66[0];
      if ((v31 & 1) == 0)
      {
LABEL_45:
        *(void *)(v16 + 8 * (v32 >> 6) + 64) |= 1 << v32;
        uint64_t v48 = 8 * v32;
        *(void *)(*(void *)(v16 + 48) + v48) = v23;
        *(void *)(*(void *)(v16 + 56) + v48) = v26;
        uint64_t v49 = *(void *)(v16 + 16);
        BOOL v50 = __OFADD__(v49, 1);
        uint64_t v51 = v49 + 1;
        if (v50) {
          goto LABEL_62;
        }
        *(void *)(v16 + 16) = v51;
        id v52 = v23;
        goto LABEL_16;
      }
    }
    else
    {
      sub_100359E5C((uint64_t *)&unk_100717950);
      uint64_t v16 = (uint64_t)v66[0];
      if ((v36 & 1) == 0) {
        goto LABEL_45;
      }
    }
LABEL_15:
    uint64_t v19 = *(void *)(v16 + 56);

    *(void *)(v19 + 8 * v32) = v26;
LABEL_16:

    swift_bridgeObjectRelease();
    unint64_t v1 = v61;
    goto LABEL_17;
  }
  sub_10035109C(v35, v30, (uint64_t *)&unk_100717950);
  unint64_t v37 = sub_10017C1F0((uint64_t)v23);
  if ((v36 & 1) == (v38 & 1))
  {
    unint64_t v32 = v37;
    uint64_t v16 = (uint64_t)v66[0];
    if ((v36 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_15;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
  Swift::Bool result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Bool __swiftcall DOCCopyOperation.handleActionMain_asDSCopy()()
{
  sub_1003462A8((uint64_t)&v4);
  uint64_t v1 = v5;
  if (v5)
  {
    sub_1001146DC(&v4, (uint64_t)v6);
    unint64_t v2 = sub_1000A6B78(v6, v6[3]);
    sub_1002F73C4(*v2, v0);
    sub_10009B1B8((uint64_t)v6);
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v4, (uint64_t *)&unk_10070F660);
  }
  return v1 != 0;
}

Swift::Bool __swiftcall DOCCopyOperation.shouldUseDSCopyEngine()()
{
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_6;
    }
  }
  else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    char v2 = 0;
    return v2 & 1;
  }
  if ((sub_10035B69C(*(void **)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem]) & 1) == 0) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  char v2 = sub_1003459AC(v1, v0);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1003462A8(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC5Files16DOCCopyOperation_sourceItems];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((sub_10035B69C(*(void **)&v1[OBJC_IVAR____TtC5Files16DOCCopyOperation_destinationFolderItem]) & 1) == 0) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  char v4 = sub_1003459AC(v3, v1);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    goto LABEL_8;
  }
  id v5 = sub_1000E3028();
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = type metadata accessor for DOCDSCopyEngineXPCConnection();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = &off_1006A3708;
    *(void *)a1 = v8;
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t DOCCopyOperation.transferResults.getter()
{
  sub_1003462A8((uint64_t)v7);
  uint64_t v1 = v8;
  sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_10070F660);
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsTransferResults];
    swift_bridgeObjectRetain();
  }
  else
  {
    v6.receiver = v0;
    v6.super_class = (Class)type metadata accessor for DOCCopyOperation();
    [super transferResults];
    if (v3)
    {
      char v4 = v3;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_100346564(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v56 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  v43[2] = v1;
  sub_10035C0C8(a1);
  uint64_t v9 = swift_allocObject();
  unint64_t v10 = sub_1004952CC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v51 = v9;
  *(void *)(v9 + 16) = v10;
  v43[1] = v9 + 16;
  dispatch_group_t v50 = dispatch_group_create();
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v57 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v55 = v7 + 16;
  uint64_t v54 = v7 + 48;
  char v46 = (void (**)(void))(v7 + 32);
  char v45 = v59;
  unint64_t v44 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v49 = v5;
  int64_t v48 = v15;
  uint64_t v47 = a1;
  if (v14) {
    goto LABEL_31;
  }
LABEL_7:
  int64_t v32 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (v32 < v15)
    {
      unint64_t v33 = *(void *)(v57 + 8 * v32);
      ++v18;
      if (v33) {
        goto LABEL_24;
      }
      int64_t v18 = v32 + 1;
      if (v32 + 1 < v15)
      {
        unint64_t v33 = *(void *)(v57 + 8 * v18);
        if (v33) {
          goto LABEL_24;
        }
        int64_t v18 = v32 + 2;
        if (v32 + 2 < v15)
        {
          unint64_t v33 = *(void *)(v57 + 8 * v18);
          if (v33) {
            goto LABEL_24;
          }
          int64_t v18 = v32 + 3;
          if (v32 + 3 < v15)
          {
            unint64_t v33 = *(void *)(v57 + 8 * v18);
            if (v33) {
              goto LABEL_24;
            }
            int64_t v18 = v32 + 4;
            if (v32 + 4 < v15)
            {
              unint64_t v33 = *(void *)(v57 + 8 * v18);
              if (!v33)
              {
                int64_t v34 = v32 + 5;
                if (v34 < v15)
                {
                  unint64_t v33 = *(void *)(v57 + 8 * v34);
                  if (v33)
                  {
                    int64_t v18 = v34;
                    goto LABEL_24;
                  }
                  while (1)
                  {
                    int64_t v18 = v34 + 1;
                    if (__OFADD__(v34, 1)) {
                      goto LABEL_36;
                    }
                    if (v18 >= v15) {
                      goto LABEL_32;
                    }
                    unint64_t v33 = *(void *)(v57 + 8 * v18);
                    ++v34;
                    if (v33) {
                      goto LABEL_24;
                    }
                  }
                }
                goto LABEL_32;
              }
LABEL_24:
              unint64_t v14 = (v33 - 1) & v33;
              for (unint64_t i = __clz(__rbit64(v33)) + (v18 << 6); ; unint64_t i = v38 | (v18 << 6))
              {
                sub_10008E1D0(*(void *)(a1 + 48) + 40 * i, (uint64_t)v64);
                uint64_t v63 = v65;
                v62[0] = v64[0];
                v62[1] = v64[1];
                if (*(void *)(a1 + 16) && (unint64_t v36 = sub_10008E070((uint64_t)v62), (v37 & 1) != 0))
                {
                  (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, *(void *)(a1 + 56) + *(void *)(v7 + 72) * v36, v6);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
                  {
                    (*v46)();
                    dispatch_group_t v19 = v50;
                    dispatch_group_enter(v50);
                    id v53 = [self defaultManager];
                    URL._bridgeToObjectiveC()(&v66);
                    id v52 = v20;
                    sub_10008E1D0((uint64_t)v62, (uint64_t)v60);
                    uint64_t v21 = swift_allocObject();
                    uint64_t v22 = v51;
                    *(void *)(v21 + 16) = v19;
                    *(void *)(v21 + 24) = v22;
                    long long v23 = v60[1];
                    *(_OWORD *)(v21 + 32) = v60[0];
                    *(_OWORD *)(v21 + 48) = v23;
                    *(void *)(v21 + 64) = v61;
                    v59[2] = sub_10035C9EC;
                    v59[3] = v21;
                    aBlock[0] = _NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    v59[0] = sub_10000CAE4;
                    v59[1] = &unk_1006A3830;
                    id v24 = v16;
                    uint64_t v25 = v6;
                    uint64_t v26 = v7;
                    unint64_t v27 = _Block_copy(aBlock);
                    uint64_t v28 = v19;
                    id v5 = v49;
                    int64_t v15 = v48;
                    swift_retain();
                    swift_release();
                    id v29 = v53;
                    char v30 = v52;
                    [v53 fetchItemForURL:v52 completionHandler:v27];
                    char v31 = v27;
                    uint64_t v7 = v26;
                    uint64_t v6 = v25;
                    uint64_t v16 = v24;
                    a1 = v47;
                    _Block_release(v31);

                    (*v44)(v56, v6);
                    uint64_t result = sub_10008E17C((uint64_t)v62);
                    if (!v14) {
                      goto LABEL_7;
                    }
                    goto LABEL_31;
                  }
                }
                else
                {
                  (*v16)(v5, 1, 1, v6);
                }
                sub_10008E17C((uint64_t)v62);
                uint64_t result = sub_1000CBBA4((uint64_t)v5, &qword_1007076B0);
                if (!v14) {
                  goto LABEL_7;
                }
LABEL_31:
                unint64_t v38 = __clz(__rbit64(v14));
                v14 &= v14 - 1;
              }
            }
          }
        }
      }
    }
LABEL_32:
    swift_release();
    dispatch_group_t v39 = v50;
    OS_dispatch_group.wait()();
    swift_beginAccess();
    uint64_t v40 = v51;
    uint64_t v41 = swift_bridgeObjectRetain();
    sub_100346CC4(v41);
    swift_bridgeObjectRelease();

    uint64_t v42 = *(void *)(v40 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v42;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_100346BD4(void *a1, uint64_t a2, dispatch_group_t group, uint64_t a4, uint64_t a5)
{
  if (!a1 || a2)
  {
    dispatch_group_leave(group);
  }
  else
  {
    sub_10008E1D0(a5, (uint64_t)v11);
    swift_beginAccess();
    id v8 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *(void *)(a4 + 16);
    *(void *)(a4 + 16) = 0x8000000000000000;
    sub_1003E127C((uint64_t)v8, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    *(void *)(a4 + 16) = v10;
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)v11);
    swift_endAccess();

    dispatch_group_leave(group);
  }
}

void sub_100346CC4(uint64_t a1)
{
  uint64_t v77 = a1;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v67 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v64 = (char *)&v59 - v8;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v81 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v80 = (char *)&v59 - v13;
  uint64_t v14 = sub_1000CBE70(&qword_100711D58);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  dispatch_group_t v19 = (void **)((char *)&v59 - v18);
  id v73 = v1;
  uint64_t v20 = &v1[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceItemToURL];
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  if (*(void *)v20)
  {
    v70 = v4;
    uint64_t v22 = *(void *)(v21 + 64);
    uint64_t v72 = v21 + 64;
    uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
    uint64_t v24 = -1;
    if (v23 < 64) {
      uint64_t v24 = ~(-1 << v23);
    }
    unint64_t v25 = v24 & v22;
    unint64_t v26 = (unint64_t)(v23 + 63) >> 6;
    unint64_t v27 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v75 = v10;
    Swift::String v78 = (void (**)(char *, uint64_t))(v10 + 8);
    Swift::String v79 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    unint64_t v68 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v65 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v63 = (void (**)(char *, uint64_t))(v5 + 8);
    unint64_t v60 = v26 - 1;
    uint64_t v28 = swift_bridgeObjectRetain();
    int64_t v29 = 0;
    int64_t v74 = v26;
    unint64_t v62 = v26 - 5;
    uint64_t v76 = v28;
    uint64_t v61 = v28 + 104;
    uint64_t v30 = v77;
    while (!v25)
    {
      int64_t v32 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
        return;
      }
      if (v32 >= v74)
      {
        unint64_t v41 = v29;
      }
      else
      {
        unint64_t v40 = *(void *)(v72 + 8 * v32);
        if (v40) {
          goto LABEL_13;
        }
        unint64_t v41 = v29 + 1;
        if (v29 + 2 < v74)
        {
          unint64_t v40 = *(void *)(v72 + 8 * (v29 + 2));
          if (v40)
          {
            int64_t v32 = v29 + 2;
            goto LABEL_13;
          }
          unint64_t v41 = v29 + 2;
          if (v29 + 3 < v74)
          {
            unint64_t v40 = *(void *)(v72 + 8 * (v29 + 3));
            if (v40)
            {
              int64_t v32 = v29 + 3;
LABEL_13:
              unint64_t v25 = (v40 - 1) & v40;
              unint64_t v33 = __clz(__rbit64(v40)) + (v32 << 6);
LABEL_9:
              uint64_t v34 = v75;
              uint64_t v35 = *(void *)(v76 + 56);
              unint64_t v36 = *(void **)(*(void *)(v76 + 48) + 8 * v33);
              *(void *)uint64_t v16 = v36;
              uint64_t v37 = v35 + *(void *)(v34 + 72) * v33;
              uint64_t v38 = sub_1000CBE70(&qword_100711D60);
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(&v16[*(int *)(v38 + 48)], v37, v9);
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v16, 0, 1, v38);
              id v39 = v36;
              uint64_t v30 = v77;
              goto LABEL_16;
            }
            int64_t v32 = v29 + 4;
            unint64_t v41 = v29 + 3;
            if (v29 + 4 < v74)
            {
              unint64_t v40 = *(void *)(v72 + 8 * v32);
              if (v40) {
                goto LABEL_13;
              }
              while (v62 != v29)
              {
                unint64_t v40 = *(void *)(v61 + 8 * v29++);
                if (v40)
                {
                  int64_t v32 = v29 + 4;
                  goto LABEL_13;
                }
              }
              unint64_t v41 = v60;
            }
          }
        }
      }
      uint64_t v42 = sub_1000CBE70(&qword_100711D60);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v16, 1, 1, v42);
      unint64_t v25 = 0;
      int64_t v32 = v41;
LABEL_16:
      sub_1000CBE0C((uint64_t)v16, (uint64_t)v19, &qword_100711D58);
      uint64_t v43 = sub_1000CBE70(&qword_100711D60);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v19, 1, v43) == 1)
      {
        swift_release();
        return;
      }
      unint64_t v44 = *v19;
      char v45 = v80;
      (*v79)(v80, (char *)v19 + *(int *)(v43 + 48), v9);
      (*v27)(v81, v45, v9);
      sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      AnyHashable.init<A>(_:)();
      (*v78)(v45, v9);
      if (!*(void *)(v30 + 16) || (unint64_t v46 = sub_10008E070((uint64_t)v82), (v47 & 1) == 0))
      {
        sub_10008E17C((uint64_t)v82);

        goto LABEL_6;
      }
      id v48 = *(id *)(*(void *)(v30 + 56) + 8 * v46);
      sub_10008E17C((uint64_t)v82);
      id v49 = [v73 lastUsageUpdatePolicy];
      if (v49 == (id)2)
      {
        FPItem.bumpLastOpenDate(delay:)(0.0);
LABEL_25:

        goto LABEL_6;
      }
      if (v49 != (id)1) {
        goto LABEL_25;
      }
      id v50 = [v44 lastUsedDate];
      if (!v50)
      {
        uint64_t v53 = (uint64_t)v70;
        (*v69)(v70, 1, 1, v71);
LABEL_30:

        sub_1000CBBA4(v53, (uint64_t *)&unk_10070B980);
        goto LABEL_31;
      }
      uint64_t v51 = v50;
      id v52 = v67;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v53 = (uint64_t)v70;
      uint64_t v54 = v52;
      uint64_t v55 = v71;
      NSURL v66 = *v68;
      v66(v70, v54, v71);
      (*v69)((char *)v53, 0, 1, v55);
      if ((*v65)(v53, 1, v55) == 1) {
        goto LABEL_30;
      }
      uint64_t v56 = v64;
      uint64_t v57 = v53;
      uint64_t v58 = v71;
      v66(v64, (char *)v57, v71);
      FPItem.setLastOpenDate(_:delay:)();

      (*v63)(v56, v58);
LABEL_31:
      uint64_t v30 = v77;
LABEL_6:
      int64_t v29 = v32;
    }
    unint64_t v31 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    int64_t v32 = v29;
    unint64_t v33 = v31 | (v29 << 6);
    goto LABEL_9;
  }
}

uint64_t sub_1003474C0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1002F3388();
  if (*v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    sub_1004F23CC((uint64_t)v10, a1);
  }
  ((void (*)(unsigned char *, void))v11)(v21, 0);
  uint64_t v14 = sub_1002F33E4();
  if (*v13)
  {
    uint64_t v15 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    id v16 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v15;
    *uint64_t v15 = 0x8000000000000000;
    sub_1003E13E0((uint64_t)v16, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v15 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return ((uint64_t (*)(unsigned char *, void))v14)(v21, 0);
}

Swift::Int sub_100347704(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v29 = a3;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_projectBox();
  sub_1002827DC(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v20 = (void *)(a5 + 16);
    sub_1000CBBA4((uint64_t)v14, &qword_1007076B0);
    uint64_t v21 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A0230;
    *(void *)(v22 + 56) = &type metadata for String;
    unint64_t v23 = sub_100073F48();
    *(void *)(v22 + 64) = v23;
    *(void *)(v22 + 32) = 0xD000000000000018;
    *(void *)(v22 + 40) = 0x80000001005E7850;
    *(void *)(v22 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v22 + 104) = sub_10035C084((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v22 + 72) = a4;
    if (a2)
    {
      id v24 = a4;
      uint64_t v25 = _convertErrorToNSError(_:)();
      uint64_t v31 = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v32 = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long v30 = v25;
      sub_1001146DC(&v30, v22 + 112);
    }
    else
    {
      *(void *)(v22 + 136) = &type metadata for String;
      *(void *)(v22 + 144) = v23;
      strcpy((char *)(v22 + 112), "Unknown error");
      *(_WORD *)(v22 + 126) = -4864;
      id v27 = a4;
    }
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    void *v20 = a2;
    swift_errorRetain();
    swift_errorRelease();
  }
  else
  {
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v26(v18, v14, v15);
    v26(v11, v18, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    swift_beginAccess();
    sub_10014B834((uint64_t)v11, v19);
  }
  return OS_dispatch_semaphore.signal()();
}

void sub_100347AE0(void *a1, uint64_t a2, void *a3, NSObject *a4, uint64_t a5, void *a6)
{
  uint64_t v44 = a5;
  char v45 = a6;
  char v47 = a3;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v42 - v17;
  double v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v42 - v21;
  unint64_t v46 = a1;
  id v23 = [a1 fileURL:v20];
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_9;
  }
  id v24 = v23;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = v18;
  unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v26(v11, v25, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_9:
    sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    dispatch_group_enter(a4);
    id v32 = [self defaultManager];
    unint64_t v33 = (void *)swift_allocObject();
    uint64_t v35 = v45;
    uint64_t v34 = v46;
    v33[2] = a4;
    v33[3] = v34;
    v33[4] = v44;
    v33[5] = v35;
    unint64_t v36 = v47;
    v33[6] = a2;
    v33[7] = v36;
    aBlock[4] = sub_10035CA58;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1001B6B50;
    aBlock[3] = &unk_1006A3880;
    uint64_t v37 = _Block_copy(aBlock);
    uint64_t v38 = a4;
    id v39 = v34;
    swift_retain();
    id v40 = v35;
    swift_retain();
    id v41 = v36;
    swift_release();
    [v32 fetchURLForItem:v39 completionHandler:v37];
    _Block_release(v37);

    return;
  }
  id v27 = (unint64_t *)(a2 + 16);
  v26(v22, v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v22, v12);
  swift_beginAccess();
  unint64_t v28 = *v27;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *id v27 = v28;
  uint64_t v43 = (void (*)(unint64_t, char *, uint64_t))v26;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v28 = sub_10018F80C(0, *(void *)(v28 + 16) + 1, 1, v28);
    *id v27 = v28;
  }
  unint64_t v31 = *(void *)(v28 + 16);
  unint64_t v30 = *(void *)(v28 + 24);
  if (v31 >= v30 >> 1)
  {
    unint64_t v28 = sub_10018F80C(v30 > 1, v31 + 1, 1, v28);
    *id v27 = v28;
  }
  *(void *)(v28 + 16) = v31 + 1;
  v43(v28+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v31, v15, v12);
  swift_endAccess();
  sub_1003474C0(v46, (uint64_t)v22);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
}

uint64_t sub_100347F44(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v54 = a7;
  uint64_t v55 = a8;
  uint64_t v52 = a6;
  uint64_t v53 = a2;
  dispatch_group_t v61 = a3;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v56 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  double v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v23 = (char *)&v48 - v22;
  sub_1002827DC(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    id v24 = (uint64_t *)(a5 + 16);
    sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
    dispatch_group_leave(v61);
    uint64_t v25 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1005A0230;
    *(void *)(v26 + 56) = &type metadata for String;
    unint64_t v27 = sub_100073F48();
    *(void *)(v26 + 64) = v27;
    *(void *)(v26 + 32) = 0xD000000000000018;
    *(void *)(v26 + 40) = 0x80000001005E7850;
    *(void *)(v26 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v26 + 104) = sub_10035C084((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v26 + 72) = a4;
    uint64_t v28 = v53;
    if (v53)
    {
      id v29 = a4;
      uint64_t v30 = _convertErrorToNSError(_:)();
      id v64 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v65 = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v30;
      sub_1001146DC(&aBlock, v26 + 112);
    }
    else
    {
      *(void *)(v26 + 136) = &type metadata for String;
      *(void *)(v26 + 144) = v27;
      strcpy((char *)(v26 + 112), "Unknown error");
      *(_WORD *)(v26 + 126) = -4864;
      id v46 = a4;
    }
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v47 = *v24;
    if (!*v24)
    {
      swift_errorRetain();
      uint64_t v47 = v28;
    }
    swift_beginAccess();
    *id v24 = v47;
    swift_errorRetain();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v53 = v11;
    unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v51 = v23;
    v31(v23, v16, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
    unint64_t v32 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v33 = (v19 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v49 = v18;
    uint64_t v35 = swift_allocObject();
    uint64_t v50 = v17;
    *(void *)(v35 + 16) = v54;
    v31((char *)(v35 + v32), v20, v17);
    unint64_t v36 = v55;
    *(void *)(v35 + v33) = v55;
    *(void *)(v35 + v34) = a4;
    dispatch_group_t v37 = v61;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v61;
    uint64_t v65 = (uint64_t)sub_10035CB78;
    uint64_t v66 = v35;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v63 = sub_1000666D8;
    id v64 = &unk_1006A38D0;
    uint64_t v38 = _Block_copy(&aBlock);
    swift_retain();
    id v39 = v36;
    id v40 = a4;
    id v41 = v37;
    uint64_t v42 = v56;
    static DispatchQoS.unspecified.getter();
    uint64_t v67 = _swiftEmptyArrayStorage;
    sub_1000717F0((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    uint64_t v43 = v58;
    uint64_t v44 = v53;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v59);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v50);
    return swift_release();
  }
}

void sub_100348610(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5)
{
  dispatch_group_t v18 = a5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (unint64_t *)(a1 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a2, v8, v10);
  swift_beginAccess();
  unint64_t v14 = *(void *)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v14 = sub_10018F80C(0, *(void *)(v14 + 16) + 1, 1, v14);
    *uint64_t v13 = v14;
  }
  unint64_t v17 = *(void *)(v14 + 16);
  unint64_t v16 = *(void *)(v14 + 24);
  if (v17 >= v16 >> 1)
  {
    unint64_t v14 = sub_10018F80C(v16 > 1, v17 + 1, 1, v14);
    *uint64_t v13 = v14;
  }
  *(void *)(v14 + 16) = v17 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v17, v12, v8);
  swift_endAccess();
  sub_1003474C0(a4, a2);
  dispatch_group_leave(v18);
}

void sub_1003487D4(int a1, int a2, unsigned __int8 *a3)
{
  if ([a3 shouldBounceOnCollision])
  {
    id v5 = [objc_allocWithZone((Class)DSConflictStrategy) init];
    [v5 setType:0];
  }
  else
  {
    id v5 = sub_10035BBF0();
  }
  uint64_t v6 = a3[OBJC_IVAR____TtC5Files16DOCCopyOperation_isDuplication];
  uint64_t v7 = *(void **)(v3 + 16);
  type metadata accessor for URL();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  URL._bridgeToObjectiveC()(v9);
  uint64_t v11 = v10;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a3;
  aBlock[4] = sub_10035C034;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  void aBlock[2] = sub_100349610;
  aBlock[3] = &unk_1006A3740;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v5;
  uint64_t v15 = a3;
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v16 = [v7 copyItemsAtURLs:isa toURL:v11 options:v6 conflictStrategy:v14 receiveTargets:v13 error:aBlock];
  _Block_release(v13);

  id v17 = aBlock[0];
  if ((v16 & 1) == 0)
  {
    dispatch_group_t v18 = v17;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

uint64_t sub_1003489DC(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  unint64_t v11 = sub_1004952E0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v89 = v10;
  *(void *)(v10 + 16) = v11;
  uint64_t v12 = sub_1004E926C(a1);
  uint64_t v13 = sub_100346564(v12);
  swift_bridgeObjectRelease();
  *(void *)&a2[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsTransferResults] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_76;
  }
  if (!*(void *)(v13 + 16))
  {
    id v14 = [self shared];
    [v14 removeAllActionsWithTarget:a2];
  }
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v76 = v13 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v79 = OBJC_IVAR____TtC5Files16DOCCopyOperation_dsItemIDToPlaceholderID;
  id v85 = &a2[OBJC_IVAR____TtC5Files16DOCCopyOperation_dsSourceURLToItem];
  swift_beginAccess();
  int64_t v88 = 0;
  uint64_t v19 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v86 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v84 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  UIMenuElementSize v83 = (void (**)(char *, uint64_t))(v7 + 8);
  int64_t v78 = (unint64_t)(v16 + 63) >> 6;
  int64_t v74 = v78 - 1;
  uint64_t v75 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v77 = a2;
  uint64_t v20 = v87;
  UIMenuElementSize v82 = v6;
  Swift::String v81 = v9;
  uint64_t v80 = v13;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v88 << 6);
LABEL_8:
  sub_10008E1D0(*(void *)(v13 + 48) + 40 * v22, (uint64_t)&v91);
  *((void *)&v93 + 1) = *(void *)(*(void *)(v13 + 56) + 8 * v22);
  id v23 = *((id *)&v93 + 1);
  while (1)
  {
    sub_1000CBE0C((uint64_t)&v91, (uint64_t)&v94, (uint64_t *)&unk_100711D30);
    if (!*((void *)&v95 + 1)) {
      goto LABEL_75;
    }
    long long v91 = v94;
    long long v92 = v95;
    unint64_t v27 = v97;
    *(void *)&long long v93 = v96;
    int v28 = swift_dynamicCast();
    id v29 = *v19;
    if (!v28)
    {
      v29(v6, 1, 1, v20);
LABEL_72:
      swift_release();

      sub_1000CBBA4((uint64_t)v6, &qword_1007076B0);
      goto LABEL_76;
    }
    v29(v6, 0, 1, v20);
    if ((*v86)(v6, 1, v20) == 1) {
      goto LABEL_72;
    }
    (*v84)(v9, v6, v20);
    uint64_t v30 = *(void *)v85;
    if (!*(void *)v85 || !*(void *)(v30 + 16))
    {

LABEL_74:
      (*v83)(v9, v87);
LABEL_75:
      swift_release();
LABEL_76:
      sub_10034934C(a2, v89);
      return swift_release();
    }
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_10017BB10((uint64_t)v9);
    if ((v32 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    id v33 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
    swift_bridgeObjectRelease();
    unint64_t v34 = self;
    id v35 = [v34 locatorForItem:v33];
    if (v35)
    {
      unint64_t v36 = v35;
      id v37 = [v34 locatorForItem:v27];
      if (v37)
      {
        uint64_t v38 = v37;
        Swift::Int v39 = *(void *)(v89 + 16);
        if ((v39 & 0xC000000000000001) != 0)
        {
          if (v39 < 0) {
            uint64_t v40 = *(void *)(v89 + 16);
          }
          else {
            uint64_t v40 = v39 & 0xFFFFFFFFFFFFFF8;
          }
          id v41 = v36;
          id v42 = v38;
          uint64_t v43 = __CocoaDictionary.count.getter();
          if (__OFADD__(v43, 1)) {
            goto LABEL_79;
          }
          Swift::Int v39 = sub_100349CA4(v40, v43 + 1, (uint64_t *)&unk_100711D40, &qword_100708718);
        }
        else
        {
          id v44 = v36;
          id v45 = v38;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v91 = v39;
        *(void *)(v89 + 16) = 0x8000000000000000;
        unint64_t v48 = sub_10017C474((uint64_t)v36);
        uint64_t v49 = *(void *)(v39 + 16);
        BOOL v50 = (v47 & 1) == 0;
        uint64_t v51 = v49 + v50;
        if (__OFADD__(v49, v50)) {
          goto LABEL_78;
        }
        char v52 = v47;
        if (*(void *)(v39 + 24) >= v51)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_100359E5C((uint64_t *)&unk_100711D40);
          }
        }
        else
        {
          sub_10035109C(v51, isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_100711D40);
          unint64_t v53 = sub_10017C474((uint64_t)v36);
          if ((v52 & 1) != (v54 & 1)) {
            goto LABEL_82;
          }
          unint64_t v48 = v53;
        }
        uint64_t v55 = (void *)v91;
        if (v52)
        {
          uint64_t v56 = *(void *)(v91 + 56);

          *(void *)(v56 + 8 * v48) = v38;
        }
        else
        {
          *(void *)(v91 + 8 * (v48 >> 6) + 64) |= 1 << v48;
          *(void *)(v55[6] + 8 * v48) = v36;
          *(void *)(v55[7] + 8 * v48) = v38;
          uint64_t v57 = v55[2];
          BOOL v58 = __OFADD__(v57, 1);
          uint64_t v59 = v57 + 1;
          if (v58) {
            goto LABEL_80;
          }
          v55[2] = v59;
          id v60 = v36;
        }
        *(void *)(v89 + 16) = v55;

        swift_bridgeObjectRelease();
        a2 = v77;
      }
      else
      {
      }
    }
    uint64_t v61 = *(void *)&a2[v79];
    if (!v61) {
      goto LABEL_65;
    }
    swift_bridgeObjectRetain();
    id v62 = [v33 itemID];
    uint64_t v63 = v62;
    if ((v61 & 0xC000000000000001) != 0)
    {
      id v64 = v62;
      uint64_t v65 = __CocoaDictionary.lookup(_:)();

      if (!v65) {
        goto LABEL_64;
      }
      uint64_t v90 = v65;
      sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v66 = (id)v91;
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v61 + 16) || (unint64_t v67 = sub_10017C1F0((uint64_t)v62), (v68 & 1) == 0))
      {
LABEL_64:
        swift_bridgeObjectRelease();

LABEL_65:
LABEL_66:
        uint64_t v9 = v81;
        uint64_t v20 = v87;
        (*v83)(v81, v87);
        goto LABEL_67;
      }
      id v66 = *(id *)(*(void *)(v61 + 56) + 8 * v67);
    }
    swift_bridgeObjectRelease();

    if (!v66) {
      goto LABEL_65;
    }
    id v69 = [a2 stitcher];
    if (v69)
    {
      v70 = v69;
      [v69 replacePlaceholderWithID:v66 withItem:v27];

      goto LABEL_66;
    }
    uint64_t v71 = v81;
    uint64_t v20 = v87;
    (*v83)(v81, v87);

    uint64_t v9 = v71;
LABEL_67:
    uint64_t v6 = v82;
    uint64_t v13 = v80;
    if (v18) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v24 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      break;
    }
    if (v24 < v78)
    {
      unint64_t v25 = *(void *)(v76 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v88 + 2;
      ++v88;
      if (v24 + 1 < v78)
      {
        unint64_t v25 = *(void *)(v76 + 8 * v26);
        if (v25) {
          goto LABEL_15;
        }
        int64_t v88 = v24 + 1;
        if (v24 + 2 < v78)
        {
          unint64_t v25 = *(void *)(v76 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_12;
          }
          int64_t v26 = v24 + 3;
          int64_t v88 = v24 + 2;
          if (v24 + 3 < v78)
          {
            unint64_t v25 = *(void *)(v76 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_81;
                }
                if (v24 >= v78)
                {
                  int64_t v88 = v74;
                  goto LABEL_26;
                }
                unint64_t v25 = *(void *)(v76 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_12;
                }
              }
            }
LABEL_15:
            int64_t v24 = v26;
LABEL_12:
            unint64_t v18 = (v25 - 1) & v25;
            unint64_t v22 = __clz(__rbit64(v25)) + (v24 << 6);
            int64_t v88 = v24;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    unint64_t v18 = 0;
    long long v92 = 0u;
    long long v93 = 0u;
    long long v91 = 0u;
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  sub_10009E6C4(0, &qword_100708718);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_10034934C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 callbackQueue];
  if (result)
  {
    id v14 = result;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = a2;
    aBlock[4] = sub_10035C07C;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006A37B8;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = a1;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v18[1] = _swiftEmptyArrayStorage;
    sub_1000717F0((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100349610(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  type metadata accessor for URL();
  sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1003496C4(void *a1)
{
  swift_beginAccess();
  sub_10009E6C4(0, &qword_100708718);
  sub_10035C084(&qword_100711D50, &qword_100708718);
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_100496294((uint64_t)_swiftEmptyArrayStorage);
  sub_1000CBE70((uint64_t *)&unk_1007076D0);
  Class v3 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 completedWithResultsByRoot:isa errorsByRoot:v3 error:0];
}

Swift::Int sub_1003497EC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000CBE70((uint64_t *)&unk_100711DC0);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
      do
      {
        swift_dynamicCast();
        sub_10009E6C4(0, &qword_100708700);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10035109C(v12 + 1, 1, (uint64_t *)&unk_100711DC0);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

Swift::Int sub_100349A48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000CBE70((uint64_t *)&unk_100711DE0);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
      do
      {
        swift_dynamicCast();
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10035109C(v12 + 1, 1, (uint64_t *)&unk_100711DE0);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

Swift::Int sub_100349CA4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_1000CBE70(a3);
    uint64_t v6 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v22 = v6;
    __CocoaDictionary.makeIterator()();
    uint64_t v7 = __CocoaDictionary.Iterator.next()();
    if (v7)
    {
      uint64_t v8 = v7;
      sub_10009E6C4(0, a4);
      do
      {
        swift_dynamicCast();
        swift_dynamicCast();
        uint64_t v6 = v22;
        unint64_t v16 = *(void *)(v22 + 16);
        if (*(void *)(v22 + 24) <= v16)
        {
          sub_10035109C(v16 + 1, 1, a3);
          uint64_t v6 = v22;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
        uint64_t v10 = v6 + 64;
        uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v6 + 64 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v6 + 64 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v17 = 0;
          unint64_t v18 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v19 = v13 == v18;
            if (v13 == v18) {
              unint64_t v13 = 0;
            }
            v17 |= v19;
            uint64_t v20 = *(void *)(v10 + 8 * v13);
          }
          while (v20 == -1);
          unint64_t v14 = __clz(__rbit64(~v20)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        uint64_t v15 = 8 * v14;
        *(void *)(*(void *)(v6 + 48) + v15) = v21;
        *(void *)(*(void *)(v6 + 56) + v15) = v8;
        ++*(void *)(v6 + 16);
        uint64_t v8 = __CocoaDictionary.Iterator.next()();
      }
      while (v8);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v6;
}

uint64_t sub_100349EDC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711C78);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  id v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  id v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  char v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  char v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  uint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    int64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    uint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10035CC88(v32 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10035CC20(v34 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    }
    sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_10035CC88(v54, *(void *)(v13 + 56) + v33 * v22, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  int64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_10034A3F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711E08);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v34) {
          goto LABEL_33;
        }
        unint64_t v22 = v35[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v22 = v35[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v36)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v22 = v35[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 48) + 40 * v20;
      uint64_t v30 = *(void *)v28;
      uint64_t v29 = *(void *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      long long v37 = *(_OWORD *)(v28 + 24);
      uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v7 + 48) + 40 * v17;
      *(void *)uint64_t v18 = v30;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v31;
      *(_OWORD *)(v18 + 24) = v37;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034A744(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RestorableSettings(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70(&qword_100717870);
  uint64_t v29 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v9 + 16))
  {
    uint64_t v28 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v11 = (void *)(v9 + 64);
    uint64_t v12 = -1;
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    unint64_t v13 = v12 & *(void *)(v9 + 64);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v16 << 6);
      }
      else
      {
        int64_t v20 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v14) {
          goto LABEL_23;
        }
        unint64_t v21 = v11[v20];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_23;
          }
          unint64_t v21 = v11[v16];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v28;
                goto LABEL_30;
              }
              uint64_t v27 = 1 << *(unsigned char *)(v9 + 32);
              if (v27 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v11 = -1 << v27;
              }
              uint64_t v3 = v28;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v21 = v11[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_32;
                }
                if (v16 >= v14) {
                  goto LABEL_23;
                }
                unint64_t v21 = v11[v16];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v16 = v22;
          }
        }
LABEL_20:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      uint64_t v23 = *(void *)(v9 + 48) + 16 * v19;
      char v24 = *(void **)v23;
      char v25 = *(unsigned char *)(v23 + 8);
      uint64_t v26 = *(void *)(v9 + 56) + *(void *)(v6 + 72) * v19;
      if (a2)
      {
        sub_10035CC88(v26, (uint64_t)v8, type metadata accessor for RestorableSettings);
      }
      else
      {
        sub_10035CC20(v26, (uint64_t)v8, type metadata accessor for RestorableSettings);
        id v17 = v24;
      }
      uint64_t result = sub_10035560C(v24, v25, (uint64_t)v8, v29);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v29;
  return result;
}

uint64_t sub_10034AA04(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
  uint64_t v49 = *(void *)(updated - 8);
  __chkstk_darwin(updated - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1000CBE70(&qword_100711CF0);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  id v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  id v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  char v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  char v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  unint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    uint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    unint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10035CC88(v32 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10035CC20(v34 + v33 * v24, v54, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    }
    sub_1000717F0((unint64_t *)&unk_1007086A0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      unint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_10035CC88(v54, *(void *)(v13 + 56) + v33 * v22, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_10034AF1C(uint64_t a1, char a2)
{
  return sub_1003526F8(a1, a2, &qword_100717910);
}

uint64_t sub_10034AF28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711DB0);
  char v6 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      unint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1000F7ECC(v37, *((unint64_t *)&v37 + 1));
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      int64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      void *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_10034B238(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711DB8);
  char v41 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_54;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_55;
  }
  if (v17 >= v39)
  {
    swift_release();
    uint64_t v3 = v38;
    unint64_t v18 = (void *)(v5 + 64);
    if (v41)
    {
LABEL_50:
      uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
      if (v36 >= 64) {
        bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v36;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v40 + 8 * v17);
    ++v12;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v12 = v17 + 1;
    if (v17 + 1 >= v39) {
      goto LABEL_47;
    }
    unint64_t v19 = *(void *)(v40 + 8 * v12);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_22:
      long long v21 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      uint64_t v22 = *(void *)(v5 + 56) + 40 * v16;
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      long long v42 = v21;
      long long v43 = *(_OWORD *)(v22 + 24);
      uint64_t v26 = *((void *)&v21 + 1);
      if ((v41 & 1) == 0)
      {
        sub_1000F7ECC(v21, *((unint64_t *)&v21 + 1));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      Hasher.init(_seed:)();
      switch(v26)
      {
        case 0:
          Swift::UInt v27 = 0;
          goto LABEL_37;
        case 1:
          Swift::UInt v27 = 1;
          goto LABEL_37;
        case 2:
          Swift::UInt v27 = 2;
          goto LABEL_37;
        case 3:
          Swift::UInt v27 = 3;
          goto LABEL_37;
        case 4:
          Swift::UInt v27 = 4;
          goto LABEL_37;
        case 5:
          Swift::UInt v27 = 5;
          goto LABEL_37;
        case 6:
          Swift::UInt v27 = 6;
          goto LABEL_37;
        case 7:
          Swift::UInt v27 = 7;
          goto LABEL_37;
        case 8:
          Swift::UInt v27 = 8;
          goto LABEL_37;
        case 9:
          Swift::UInt v27 = 9;
          goto LABEL_37;
        case 10:
          Swift::UInt v27 = 11;
LABEL_37:
          Hasher._combine(_:)(v27);
          break;
        default:
          Hasher._combine(_:)(0xAuLL);
          String.hash(into:)();
          break;
      }
      Swift::Int v28 = Hasher._finalize()();
      uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v30 = v28 & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      while (++v31 != v33 || (v32 & 1) == 0)
      {
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v31);
        if (v35 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(_OWORD *)(*(void *)(v7 + 48) + 16 * v13) = v42;
          uint64_t v14 = *(void *)(v7 + 56) + 40 * v13;
          *(void *)uint64_t v14 = v24;
          *(void *)(v14 + 8) = v23;
          *(void *)(v14 + 16) = v25;
          *(_OWORD *)(v14 + 24) = v43;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      JUMPOUT(0x10034B658);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v39)
    {
      unint64_t v19 = *(void *)(v40 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v12 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_56;
          }
          if (v12 >= v39) {
            goto LABEL_47;
          }
          unint64_t v19 = *(void *)(v40 + 8 * v12);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v20;
      goto LABEL_21;
    }
LABEL_47:
    swift_release();
    uint64_t v3 = v38;
    if (v41) {
      goto LABEL_50;
    }
  }
LABEL_54:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034B684(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1000CBE70(&qword_100711DA0);
  int v35 = a2;
  uint64_t v36 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v8 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v10 = *(void *)(v8 + 64);
    unint64_t v33 = (void *)(v8 + 64);
    uint64_t v11 = -1;
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    unint64_t v12 = v11 & v10;
    unint64_t v31 = v2;
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v5;
    uint64_t v14 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = v13;
    unint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v13 + 32);
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v18 << 6);
      }
      else
      {
        int64_t v21 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        uint64_t v22 = v33;
        if (v21 >= v32) {
          goto LABEL_23;
        }
        unint64_t v23 = v33[v21];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v21 + 1;
          if (v21 + 1 >= v32) {
            goto LABEL_23;
          }
          unint64_t v23 = v33[v18];
          if (!v23)
          {
            int64_t v24 = v21 + 2;
            if (v24 >= v32)
            {
LABEL_23:
              swift_release();
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_30;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v8 + 32);
              if (v30 >= 64) {
                bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v22 = -1 << v30;
              }
              uint64_t v3 = v31;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v23 = v33[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_32;
                }
                if (v18 >= v32) {
                  goto LABEL_23;
                }
                unint64_t v23 = v33[v18];
                ++v24;
                if (v23) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_20:
        unint64_t v12 = (v23 - 1) & v23;
        unint64_t v20 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v8 + 48) + 24 * v20;
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *(void *)(v25 + 8);
      char v28 = *(unsigned char *)(v25 + 16);
      unint64_t v29 = *(void *)(v8 + 56) + *(void *)(v15 + 72) * v20;
      if (v35)
      {
        (*v16)(v7, v29, v34);
      }
      else
      {
        (*v14)(v7, v29, v34);
        sub_1002F81FC(v26, v27, v28);
      }
      uint64_t result = sub_100355770(v26, v27, v28, (uint64_t)v7, v36);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *uint64_t v3 = v36;
  return result;
}

void sub_10034B978(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1000CBE70(&qword_100711DA8);
  char v30 = a2;
  unint64_t v31 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = (void *)(v4 + 64);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    for (int64_t i = 0; ; int64_t i = v32)
    {
      if (v7)
      {
        unint64_t v9 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        int64_t v32 = i;
        unint64_t v10 = v9 | (i << 6);
      }
      else
      {
        int64_t v11 = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v11 >= v28) {
          goto LABEL_22;
        }
        unint64_t v12 = v29[v11];
        int64_t v13 = i + 1;
        if (!v12)
        {
          int64_t v13 = i + 2;
          if (i + 2 >= v28) {
            goto LABEL_22;
          }
          unint64_t v12 = v29[v13];
          if (!v12)
          {
            uint64_t v14 = i + 3;
            if (i + 3 >= v28)
            {
LABEL_22:
              swift_release();
              if (v30)
              {
                uint64_t v26 = 1 << *(unsigned char *)(v4 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v29 = -1 << v26;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v12 = v29[v14];
            if (!v12)
            {
              while (1)
              {
                int64_t v13 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v28) {
                  goto LABEL_22;
                }
                unint64_t v12 = v29[v13];
                ++v14;
                if (v12) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = i + 3;
          }
        }
LABEL_19:
        unint64_t v7 = (v12 - 1) & v12;
        int64_t v32 = v13;
        unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
      }
      uint64_t v15 = v4;
      uint64_t v16 = *(void *)(v4 + 48) + 24 * v10;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      char v19 = *(unsigned char *)(v16 + 16);
      unint64_t v20 = (uint64_t *)(*(void *)(v4 + 56) + 40 * v10);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      uint64_t v23 = v20[2];
      uint64_t v24 = v20[3];
      uint64_t v25 = v20[4];
      if ((v30 & 1) == 0)
      {
        sub_1002F81FC(v17, v18, v19);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      v33[0] = v21;
      v33[1] = v22;
      v33[2] = v23;
      v33[3] = v24;
      v33[4] = v25;
      sub_100355918(v17, v18, v19, (uint64_t)v33, v31);
      uint64_t v4 = v15;
    }
  }
  swift_release();
  *uint64_t v27 = v31;
}

uint64_t sub_10034BBE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D90);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v8 = 0;
    int v35 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v34) {
          goto LABEL_36;
        }
        unint64_t v18 = v35[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v34) {
            goto LABEL_36;
          }
          unint64_t v18 = v35[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v34)
            {
LABEL_36:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_43;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int v35 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_45;
                }
                if (v8 >= v34) {
                  goto LABEL_36;
                }
                unint64_t v18 = v35[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 24 * v16;
      int v21 = *(unsigned __int8 *)(v20 + 16);
      Swift::UInt64 v23 = *(void *)v20;
      Swift::UInt64 v22 = *(void *)(v20 + 8);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      Hasher.init(_seed:)();
      if (v21)
      {
        if (v21 == 1)
        {
          Hasher._combine(_:)(1uLL);
          Hasher._combine(_:)(v23);
          Hasher._combine(_:)(v22);
        }
        else
        {
          Hasher._combine(_:)(2uLL);
        }
      }
      else
      {
        Hasher._combine(_:)(0);
        Hasher._combine(_:)(v23);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 24 * v13;
      *(void *)uint64_t v14 = v23;
      *(void *)(v14 + 8) = v22;
      *(unsigned char *)(v14 + 16) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_43:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034BF14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D98);
  char v39 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    long long v37 = (void *)(v5 + 64);
    uint64_t v38 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v18 >= v36) {
          goto LABEL_38;
        }
        unint64_t v19 = v37[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v36) {
            goto LABEL_38;
          }
          unint64_t v19 = v37[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_38:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_45;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v37 = -1 << v35;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_47;
                }
                if (v8 >= v36) {
                  goto LABEL_38;
                }
                unint64_t v19 = v37[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48) + 24 * v17;
      Swift::UInt64 v23 = *(void *)v21;
      Swift::UInt64 v22 = *(void *)(v21 + 8);
      int v24 = *(unsigned __int8 *)(v21 + 16);
      uint64_t v25 = *(void *)(v5 + 56) + 40 * v17;
      uint64_t v26 = *(void *)v25;
      uint64_t v27 = *(void *)(v25 + 8);
      uint64_t v40 = *(void *)(v25 + 16);
      long long v41 = *(_OWORD *)(v25 + 24);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      Hasher.init(_seed:)();
      if (v24)
      {
        if (v24 == 1)
        {
          Hasher._combine(_:)(1uLL);
          Hasher._combine(_:)(v23);
          Hasher._combine(_:)(v22);
        }
        else
        {
          Hasher._combine(_:)(2uLL);
        }
      }
      else
      {
        Hasher._combine(_:)(0);
        Hasher._combine(_:)(v23);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v12 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v13 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 24 * v13;
      *(void *)uint64_t v14 = v23;
      *(void *)(v14 + 8) = v22;
      *(unsigned char *)(v14 + 16) = v24;
      uint64_t v15 = *(void *)(v7 + 56) + 40 * v13;
      *(void *)uint64_t v15 = v26;
      *(void *)(v15 + 8) = v27;
      *(void *)(v15 + 16) = v40;
      *(_OWORD *)(v15 + 24) = v41;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v38;
    }
  }
  uint64_t result = swift_release();
LABEL_45:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034C2A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D80);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v32 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        if (v17 >= v31) {
          goto LABEL_41;
        }
        unint64_t v18 = v32[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v31) {
            goto LABEL_41;
          }
          unint64_t v18 = v32[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v31)
            {
LABEL_41:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
                if (v30 >= 64) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v32 = -1 << v30;
                }
                *(void *)(v5 + 16) = 0;
              }
              goto LABEL_46;
            }
            unint64_t v18 = v32[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_48;
                }
                if (v13 >= v31) {
                  goto LABEL_41;
                }
                unint64_t v18 = v32[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      unint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        sub_1002F81E8(v33, v21);
        swift_unknownObjectRetain();
      }
      Hasher.init(_seed:)();
      if (!v21) {
        break;
      }
      if (v21 == 1)
      {
        Swift::UInt v22 = 2;
        goto LABEL_30;
      }
      if (v21 == 2)
      {
        Swift::UInt v22 = 3;
LABEL_30:
        Hasher._combine(_:)(v22);
        goto LABEL_32;
      }
      Hasher._combine(_:)(1uLL);
      String.hash(into:)();
LABEL_32:
      uint64_t result = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v33;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
    Swift::UInt v22 = 0;
    goto LABEL_30;
  }
LABEL_46:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034C5E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D88);
  char v40 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_48;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      return result;
    }
    if (v18 >= v38) {
      break;
    }
    int64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v39 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v38) {
        goto LABEL_41;
      }
      unint64_t v20 = *(void *)(v39 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v38)
        {
LABEL_41:
          swift_release();
          uint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_48;
          }
          goto LABEL_44;
        }
        unint64_t v20 = *(void *)(v39 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_50;
            }
            if (v13 >= v38) {
              goto LABEL_41;
            }
            unint64_t v20 = *(void *)(v39 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    long long v22 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v23 = *(void *)(v5 + 56) + 40 * v17;
    uint64_t v25 = *(void *)v23;
    uint64_t v24 = *(void *)(v23 + 8);
    uint64_t v26 = *(void *)(v23 + 16);
    long long v41 = v22;
    long long v42 = *(_OWORD *)(v23 + 24);
    uint64_t v27 = *((void *)&v22 + 1);
    if ((v40 & 1) == 0)
    {
      sub_1002F81E8(v22, *((unint64_t *)&v22 + 1));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)();
    switch(v27)
    {
      case 0:
        Swift::UInt v28 = 0;
        goto LABEL_30;
      case 1:
        Swift::UInt v28 = 2;
        goto LABEL_30;
      case 2:
        Swift::UInt v28 = 3;
LABEL_30:
        Hasher._combine(_:)(v28);
        goto LABEL_32;
    }
    Hasher._combine(_:)(1uLL);
    String.hash(into:)();
LABEL_32:
    uint64_t result = Hasher._finalize()();
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_49;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v41;
    uint64_t v15 = *(void *)(v7 + 56) + 40 * v14;
    *(void *)uint64_t v15 = v25;
    *(void *)(v15 + 8) = v24;
    *(void *)(v15 + 16) = v26;
    *(_OWORD *)(v15 + 24) = v42;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  int64_t v19 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_48;
  }
LABEL_44:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v19, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v19 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_48:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034C97C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711CB8);
  char v39 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    char v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((v39 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v14 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034CCAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711E28);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    id v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_retain();
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v14 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034CFCC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711C88);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      Swift::UInt v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v28);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_10034D2A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711E00);
  char v56 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = (void *)v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v47 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v46 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v54 = v6 + 64;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    uint64_t v55 = v5;
    while (1)
    {
      if (v10)
      {
        unint64_t v38 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v39 = v38 | (v12 << 6);
      }
      else
      {
        int64_t v40 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v40 >= v46) {
          goto LABEL_24;
        }
        unint64_t v41 = v47[v40];
        ++v12;
        if (!v41)
        {
          int64_t v12 = v40 + 1;
          if (v40 + 1 >= v46) {
            goto LABEL_24;
          }
          unint64_t v41 = v47[v12];
          if (!v41)
          {
            int64_t v42 = v40 + 2;
            if (v42 >= v46)
            {
LABEL_24:
              swift_release();
              if (v56)
              {
                uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
                if (v45 >= 64) {
                  bzero(v47, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v47 = -1 << v45;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v41 = v47[v42];
            if (!v41)
            {
              while (1)
              {
                int64_t v12 = v42 + 1;
                if (__OFADD__(v42, 1)) {
                  goto LABEL_32;
                }
                if (v12 >= v46) {
                  goto LABEL_24;
                }
                unint64_t v41 = v47[v12];
                ++v42;
                if (v41) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v42;
          }
        }
LABEL_21:
        unint64_t v10 = (v41 - 1) & v41;
        unint64_t v39 = __clz(__rbit64(v41)) + (v12 << 6);
      }
      int64_t v57 = v12;
      if (v56)
      {
        uint64_t v43 = *(void *)(v5 + 56);
        uint64_t v44 = *(void *)(v5 + 48) + 160 * v39;
        long long v58 = *(_OWORD *)v44;
        char v23 = *(void **)(v44 + 16);
        unsigned int v22 = *(unsigned __int8 *)(v44 + 24);
        long long v29 = *(_OWORD *)(v44 + 32);
        long long v28 = *(_OWORD *)(v44 + 48);
        uint64_t v27 = *(void *)(v44 + 64);
        long long v30 = *(_OWORD *)(v44 + 72);
        long long v31 = *(_OWORD *)(v44 + 88);
        uint64_t v26 = *(void *)(v44 + 104);
        long long v33 = *(_OWORD *)(v44 + 120);
        long long v32 = *(_OWORD *)(v44 + 136);
        uint64_t v24 = *(void *)(v44 + 152);
        char v25 = *(unsigned char *)(v44 + 112);
        uint64_t v21 = *(void *)(v43 + 8 * v39);
      }
      else
      {
        uint64_t v13 = (_OWORD *)(*(void *)(v5 + 48) + 160 * v39);
        long long v14 = v13[2];
        long long v15 = v13[3];
        long long v16 = v13[5];
        *(_OWORD *)&v62[64] = v13[4];
        *(_OWORD *)&v62[80] = v16;
        *(_OWORD *)&v62[48] = v15;
        long long v17 = v13[6];
        long long v18 = v13[7];
        long long v19 = v13[9];
        *(_OWORD *)&v62[128] = v13[8];
        *(_OWORD *)&v62[144] = v19;
        *(_OWORD *)&v62[96] = v17;
        *(_OWORD *)&v62[112] = v18;
        long long v20 = v13[1];
        *(_OWORD *)id v62 = *v13;
        *(_OWORD *)&v62[16] = v20;
        *(_OWORD *)&v62[32] = v14;
        uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v39);
        unsigned int v22 = BYTE8(v20);
        char v23 = (void *)v20;
        long long v58 = *(_OWORD *)v62;
        uint64_t v24 = *((void *)&v19 + 1);
        long long v52 = *(_OWORD *)&v62[120];
        long long v53 = *(_OWORD *)&v62[136];
        char v25 = v18;
        long long v50 = *(_OWORD *)&v62[88];
        long long v51 = *(_OWORD *)&v62[72];
        uint64_t v26 = *(void *)&v62[104];
        uint64_t v27 = *(void *)&v62[64];
        long long v48 = v14;
        long long v49 = *(_OWORD *)&v62[48];
        sub_10017FF50((uint64_t)v62);
        long long v29 = v48;
        long long v28 = v49;
        long long v31 = v50;
        long long v30 = v51;
        long long v33 = v52;
        long long v32 = v53;
      }
      v59[0] = v29;
      v59[1] = v28;
      *(void *)id v60 = v27;
      *(_OWORD *)&v60[8] = v30;
      *(_OWORD *)&v60[24] = v31;
      *(void *)&v60[40] = v26;
      v61[0] = v25;
      *(_OWORD *)&v61[8] = v33;
      *(_OWORD *)&v61[24] = v32;
      *(void *)&v61[40] = v24;
      long long v67 = *(_OWORD *)&v60[32];
      long long v68 = *(_OWORD *)v61;
      long long v63 = v29;
      long long v64 = v28;
      long long v65 = *(_OWORD *)v60;
      long long v66 = *(_OWORD *)&v60[16];
      long long v69 = *(_OWORD *)&v61[16];
      long long v70 = *(_OWORD *)&v61[32];
      *(_OWORD *)&v62[39] = *(_OWORD *)v60;
      *(_OWORD *)&v62[55] = *(_OWORD *)&v60[16];
      *(_OWORD *)&v62[7] = v29;
      *(_OWORD *)&v62[23] = v28;
      *(_OWORD *)&v62[103] = *(_OWORD *)&v61[16];
      *(_OWORD *)&v62[119] = *(_OWORD *)&v61[32];
      *(_OWORD *)&v62[71] = *(_OWORD *)&v60[32];
      *(_OWORD *)&v62[87] = *(_OWORD *)v61;
      Hasher.init(_seed:)();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v34 = (id)v58;
      String.hash(into:)();

      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v35 = *((id *)&v58 + 1);
      String.hash(into:)();

      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v36 = v23;
      String.hash(into:)();

      swift_bridgeObjectRelease();
      Hasher._combine(_:)(v22 - 1);
      sub_1000104D0((uint64_t)v59);
      sub_1003641E0();
      sub_10000A628((uint64_t)v59);
      Hasher._finalize()();
      unint64_t result = _HashTable.nextHole(atOrAfter:)();
      *(void *)(v54 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v37 = v7[6] + 160 * result;
      *(_OWORD *)uint64_t v37 = v58;
      *(void *)(v37 + 16) = v36;
      *(unsigned char *)(v37 + 24) = v22;
      *(_OWORD *)(v37 + 105) = *(_OWORD *)&v62[80];
      *(_OWORD *)(v37 + 121) = *(_OWORD *)&v62[96];
      *(_OWORD *)(v37 + 137) = *(_OWORD *)&v62[112];
      *(void *)(v37 + 152) = *(void *)&v62[127];
      *(_OWORD *)(v37 + 41) = *(_OWORD *)&v62[16];
      *(_OWORD *)(v37 + 57) = *(_OWORD *)&v62[32];
      *(_OWORD *)(v37 + 73) = *(_OWORD *)&v62[48];
      *(_OWORD *)(v37 + 89) = *(_OWORD *)&v62[64];
      *(_OWORD *)(v37 + 25) = *(_OWORD *)v62;
      *(void *)(v7[7] + 8 * result) = v21;
      ++v7[2];
      uint64_t v5 = v55;
      int64_t v12 = v57;
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034D7AC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100717A00);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unsigned int v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1000A54B0((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_10008E1D0(v25, (uint64_t)&v38);
      sub_10009B208(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1000A54B0(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unsigned int v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unsigned int v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034DAC4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70(&qword_100711D08);
  int v47 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  long long v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  unint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  long long v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    int64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      unint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      unint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    unint64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    void *v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_10034DF04(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711CE0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034E1D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D00);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    BOOL v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *int64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  BOOL v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034E500(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711E70);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    BOOL v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    char v30 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((a2 & 1) == 0) {
      id v31 = v29;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(unsigned char *)(*(void *)(v7 + 56) + v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034E7C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711E20);
  char v6 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35) {
          goto LABEL_33;
        }
        unint64_t v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v24 = v36[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v24 = v36[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      id v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v37 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_100168CBC(v37, *((unint64_t *)&v37 + 1));
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
      void *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v37;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_10034EAD8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_1007179C0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      unint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_1000A54B0(v24, v35);
      }
      else
      {
        sub_10009B208((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_1000A54B0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034EDD8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711DD0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_unknownObjectRetain();
    }
    sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_10034F1FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100717880);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_bridgeObjectRetain();
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      String.hash(into:)();
      Swift::Int v14 = Hasher._finalize()();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034F51C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711E80);
  char v39 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v37 = v2;
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v37;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 32 * v21;
    long long v40 = *(_OWORD *)v31;
    id v32 = *(void **)(v31 + 16);
    char v33 = *(unsigned char *)(v31 + 24);
    if ((v39 & 1) == 0)
    {
      id v34 = v30;
      id v35 = v32;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v18;
    *(_OWORD *)uint64_t v19 = v40;
    *(void *)(v19 + 16) = v32;
    *(unsigned char *)(v19 + 24) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034F818(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711E78);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void *)(v5 + 48) + 32 * v20;
      id v29 = *(id *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      char v32 = *(unsigned char *)(v28 + 24);
      uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      if ((v38 & 1) == 0)
      {
        sub_10010ED28(*(id *)v28, *(void *)(v28 + 8), *(void *)(v28 + 16), *(unsigned char *)(v28 + 24));
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      sub_100249E60((unint64_t)v29, v30, v31, v32);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v7 + 48) + 32 * v17;
      *(void *)uint64_t v18 = v29;
      *(void *)(v18 + 8) = v30;
      *(void *)(v18 + 16) = v31;
      *(unsigned char *)(v18 + 24) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034FB60(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v44 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711E60);
  int v45 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    int64_t v41 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v43 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v42 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v16 << 6);
      }
      else
      {
        int64_t v22 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v42) {
          goto LABEL_34;
        }
        unint64_t v23 = v43[v22];
        ++v16;
        if (!v23)
        {
          int64_t v16 = v22 + 1;
          if (v22 + 1 >= v42) {
            goto LABEL_34;
          }
          unint64_t v23 = v43[v16];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v42)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v41;
              if (v45)
              {
                uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
                if (v40 >= 64) {
                  bzero(v43, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v43 = -1 << v40;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v43[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v16 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v42) {
                  goto LABEL_34;
                }
                unint64_t v23 = v43[v16];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v24;
          }
        }
LABEL_21:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v16 << 6);
      }
      uint64_t v25 = *(void *)(v7 + 56);
      uint64_t v26 = v7;
      uint64_t v27 = *(void *)(v7 + 48) + 40 * v21;
      uint64_t v29 = *(void *)v27;
      uint64_t v28 = *(void *)(v27 + 8);
      uint64_t v30 = *(void *)(v27 + 16);
      uint64_t v31 = *(void *)(v44 + 72);
      uint64_t v32 = v25 + v31 * v21;
      long long v47 = *(_OWORD *)(v27 + 24);
      if (v45)
      {
        sub_10035CC88(v32, v46, type metadata accessor for ScrollPositionInfo.ItemOffset);
      }
      else
      {
        sub_10035CC20(v32, v46, type metadata accessor for ScrollPositionInfo.ItemOffset);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
        long long v18 = v47;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        long long v18 = v47;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v14 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v17 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v19 = *(void *)(v9 + 48) + 40 * v17;
      *(void *)uint64_t v19 = v29;
      *(void *)(v19 + 8) = v28;
      *(void *)(v19 + 16) = v30;
      *(_OWORD *)(v19 + 24) = v18;
      uint64_t result = sub_10035CC88(v46, *(void *)(v9 + 56) + v31 * v17, type metadata accessor for ScrollPositionInfo.ItemOffset);
      ++*(void *)(v9 + 16);
      uint64_t v7 = v26;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_10034FF88(uint64_t a1, char a2)
{
  return sub_1003523D8(a1, a2, (uint64_t *)&unk_100711DF0);
}

uint64_t sub_10034FF94(uint64_t a1, char a2)
{
  return sub_10035109C(a1, a2, (uint64_t *)&unk_100711DC0);
}

uint64_t sub_10034FFA0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100717960);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *long long v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1003502B0(uint64_t a1, char a2)
{
  return sub_10035109C(a1, a2, (uint64_t *)&unk_100711DE0);
}

uint64_t sub_1003502BC(uint64_t a1, char a2)
{
  return sub_1003526F8(a1, a2, &qword_100717920);
}

uint64_t sub_1003502C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711E30);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    if ((v38 & 1) == 0)
    {
      id v34 = v30;
      swift_bridgeObjectRetain();
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    unint64_t v19 = (void *)(*(void *)(v7 + 56) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1003505B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711D68);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37) {
      break;
    }
    unint64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v37) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      id v27 = *(id *)(*(void *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_10008E1D0(v24, (uint64_t)&v39);
      id v27 = *(id *)(*(void *)(v5 + 56) + 8 * v19);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v27;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v21 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1003508C4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70(&qword_100711E50);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  long long v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    long long v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  long long v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100350CE8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1000CBE70(&qword_100711E58);
  int v42 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    long long v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    int64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v39) {
          goto LABEL_34;
        }
        unint64_t v23 = v40[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v23 = v40[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v42)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v40 = -1 << v37;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v23 = v40[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v14 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      long long v25 = *(void **)(*(void *)(v8 + 48) + 8 * v21);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      unint64_t v28 = *(void *)(v8 + 56) + v27 * v21;
      if (v42)
      {
        (*v15)(v7, v28, v43);
      }
      else
      {
        (*v41)(v7, v28, v43);
        id v29 = v25;
      }
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v10 + 40));
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v10 + 48) + 8 * v19) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v27 * v19, v7, v43);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v26;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_10035109C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000CBE70(a3);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    int64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    unint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    char v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  int64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_10035136C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711D20);
  int v42 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    int64_t v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    long long v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      char v28 = *(unsigned char *)(*(void *)(v9 + 56) + v21);
      sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(unsigned char *)(*(void *)(v11 + 56) + v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_100351790(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711E40);
  char v39 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    char v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((v39 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v14 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100351AC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70(&qword_100711CF8);
  char v54 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v52 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v50 = v2;
  int64_t v51 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      if (v54) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v51) {
      break;
    }
    char v26 = v52;
    unint64_t v27 = v52[v25];
    ++v13;
    if (!v27)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v51) {
        goto LABEL_33;
      }
      unint64_t v27 = v52[v13];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v51)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v50;
          if ((v54 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v27 = v52[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v13 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v51) {
              goto LABEL_33;
            }
            unint64_t v27 = v52[v13];
            ++v28;
            if (v27) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v28;
      }
    }
LABEL_22:
    unint64_t v10 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v13 << 6);
    if (v54)
    {
LABEL_10:
      id v18 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
      uint64_t v19 = *(void *)(v5 + 56) + 224 * v17;
      long long v68 = *(_OWORD *)v19;
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v19 + 24);
      uint64_t v22 = *(void *)(v19 + 32);
      uint64_t v23 = *(void *)(v19 + 56);
      long long v55 = *(_OWORD *)(v19 + 40);
      long long v56 = *(_OWORD *)(v19 + 64);
      long long v57 = *(_OWORD *)(v19 + 80);
      char v24 = *(unsigned char *)(v19 + 96);
      char v58 = *(unsigned char *)(v19 + 97);
      long long v61 = *(_OWORD *)(v19 + 136);
      long long v62 = *(_OWORD *)(v19 + 120);
      long long v60 = *(_OWORD *)(v19 + 152);
      uint64_t v59 = *(void *)(v19 + 168);
      long long v64 = *(_OWORD *)(v19 + 104);
      long long v65 = *(_OWORD *)(v19 + 176);
      long long v63 = *(_OWORD *)(v19 + 192);
      uint64_t v66 = *(void *)(v19 + 208);
      char v67 = *(unsigned char *)(v19 + 216);
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    uint64_t v30 = (long long *)(*(void *)(v5 + 56) + 224 * v17);
    long long v31 = v30[1];
    long long v69 = *v30;
    long long v70 = v31;
    long long v32 = v30[5];
    long long v34 = v30[2];
    long long v33 = v30[3];
    long long v72 = v30[4];
    long long v73 = v32;
    *(_OWORD *)uint64_t v71 = v34;
    *(_OWORD *)&v71[16] = v33;
    long long v35 = v30[9];
    long long v37 = v30[6];
    long long v36 = v30[7];
    *(_OWORD *)&v74[32] = v30[8];
    *(_OWORD *)&v74[48] = v35;
    *(_OWORD *)int64_t v74 = v37;
    *(_OWORD *)&v74[16] = v36;
    long long v39 = v30[11];
    long long v38 = v30[12];
    long long v41 = v30[10];
    *(_OWORD *)&v76[9] = *(long long *)((char *)v30 + 201);
    unsigned long long v40 = *(_OWORD *)&v76[9];
    long long v75 = v39;
    *(_OWORD *)uint64_t v76 = v38;
    *(_OWORD *)&v74[64] = v41;
    long long v68 = v69;
    char v67 = HIBYTE(v40);
    uint64_t v66 = v40 >> 56;
    long long v64 = *(_OWORD *)&v74[8];
    long long v65 = v39;
    long long v62 = *(_OWORD *)&v74[24];
    long long v63 = v38;
    long long v60 = *(_OWORD *)&v74[56];
    long long v61 = *(_OWORD *)&v74[40];
    uint64_t v59 = *((void *)&v41 + 1);
    char v58 = v74[1];
    char v24 = v74[0];
    long long v56 = v72;
    long long v57 = v73;
    uint64_t v23 = *(void *)&v71[24];
    long long v55 = *(_OWORD *)&v71[8];
    uint64_t v21 = *((void *)&v70 + 1);
    uint64_t v22 = *(void *)v71;
    uint64_t v20 = v70;
    id v18 = v29;
    sub_10035BB8C(&v69);
LABEL_24:
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v42 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v43 = result & ~v42;
    unint64_t v44 = v43 >> 6;
    if (((-1 << v43) & ~*(void *)(v11 + 8 * (v43 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v43) & ~*(void *)(v11 + 8 * (v43 >> 6)))) | v43 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v45 = 0;
      unint64_t v46 = (unint64_t)(63 - v42) >> 6;
      do
      {
        if (++v44 == v46 && (v45 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v47 = v44 == v46;
        if (v44 == v46) {
          unint64_t v44 = 0;
        }
        v45 |= v47;
        uint64_t v48 = *(void *)(v11 + 8 * v44);
      }
      while (v48 == -1);
      unint64_t v14 = __clz(__rbit64(~v48)) + (v44 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v18;
    uint64_t v15 = *(void *)(v7 + 56) + 224 * v14;
    *(_OWORD *)uint64_t v15 = v68;
    *(void *)(v15 + 16) = v20;
    *(void *)(v15 + 24) = v21;
    *(void *)(v15 + 32) = v22;
    *(_OWORD *)(v15 + 40) = v55;
    *(void *)(v15 + 56) = v23;
    *(_OWORD *)(v15 + 64) = v56;
    *(_OWORD *)(v15 + 80) = v57;
    *(unsigned char *)(v15 + 96) = v24;
    *(unsigned char *)(v15 + 97) = v58;
    *(_OWORD *)(v15 + 104) = v64;
    *(_OWORD *)(v15 + 120) = v62;
    *(_OWORD *)(v15 + 136) = v61;
    *(_OWORD *)(v15 + 152) = v60;
    *(void *)(v15 + 168) = v59;
    *(_OWORD *)(v15 + 176) = v65;
    *(_OWORD *)(v15 + 192) = v63;
    *(void *)(v15 + 208) = v66;
    *(unsigned char *)(v15 + 216) = v67;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v50;
  char v26 = v52;
  if ((v54 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v49 = 1 << *(unsigned char *)(v5 + 32);
  if (v49 >= 64) {
    bzero(v26, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v49;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100351F80(uint64_t a1, char a2)
{
  return sub_1003526F8(a1, a2, &qword_100711CE8);
}

uint64_t sub_100351F8C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711CC0);
  int v49 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    char v45 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    BOOL v47 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v46 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v48 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v50 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v51 = v5;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v22 = v21 | (v18 << 6);
      }
      else
      {
        int64_t v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v46) {
          goto LABEL_34;
        }
        unint64_t v24 = v47[v23];
        ++v18;
        if (!v24)
        {
          int64_t v18 = v23 + 1;
          if (v23 + 1 >= v46) {
            goto LABEL_34;
          }
          unint64_t v24 = v47[v18];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v46)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v45;
              if (v49)
              {
                uint64_t v43 = 1 << *(unsigned char *)(v9 + 32);
                if (v43 >= 64) {
                  bzero(v47, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v47 = -1 << v43;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v47[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v18 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v46) {
                  goto LABEL_34;
                }
                unint64_t v24 = v47[v18];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v25;
          }
        }
LABEL_21:
        unint64_t v15 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      uint64_t v26 = v9;
      uint64_t v27 = *(void *)(v9 + 48);
      uint64_t v28 = v6;
      uint64_t v29 = *(void *)(v6 + 72);
      uint64_t v30 = v27 + v29 * v22;
      if (v49) {
        (*v50)(v8, v30, v51);
      }
      else {
        (*v48)(v8, v30, v51);
      }
      long long v31 = (uint64_t *)(*(void *)(v26 + 56) + 32 * v22);
      uint64_t v33 = v31[2];
      uint64_t v32 = v31[3];
      uint64_t v35 = *v31;
      uint64_t v34 = v31[1];
      sub_1000717F0((unint64_t *)&unk_1007086A0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v36 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v37 = result & ~v36;
      unint64_t v38 = v37 >> 6;
      if (((-1 << v37) & ~*(void *)(v16 + 8 * (v37 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v37) & ~*(void *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v39 = 0;
        unint64_t v40 = (unint64_t)(63 - v36) >> 6;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v41 = v38 == v40;
          if (v38 == v40) {
            unint64_t v38 = 0;
          }
          v39 |= v41;
          uint64_t v42 = *(void *)(v16 + 8 * v38);
        }
        while (v42 == -1);
        unint64_t v19 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v50)(*(void *)(v11 + 48) + v29 * v19, v8, v51);
      uint64_t v20 = (void *)(*(void *)(v11 + 56) + 32 * v19);
      void *v20 = v35;
      v20[1] = v34;
      v20[2] = v33;
      v20[3] = v32;
      ++*(void *)(v11 + 16);
      uint64_t v6 = v28;
      uint64_t v9 = v26;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1003523CC(uint64_t a1, char a2)
{
  return sub_1003523D8(a1, a2, &qword_100711E10);
}

uint64_t sub_1003523D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000CBE70(a3);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1003526EC(uint64_t a1, char a2)
{
  return sub_1003526F8(a1, a2, &qword_100711E18);
}

uint64_t sub_1003526F8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000CBE70(a3);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v39 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v37 = v3;
  int64_t v38 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    int64_t v22 = (void *)(v6 + 64);
    unint64_t v23 = *(void *)(v39 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v39 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v39 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v39 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v6 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v42 = *(void *)(v25 + 32);
      long long v40 = v26;
      long long v41 = v27;
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v20);
    }
    else
    {
      sub_10008E1D0(v25, (uint64_t)&v40);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v20);
      swift_retain();
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v29 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v8 + 48) + 40 * v15;
    long long v17 = v40;
    long long v18 = v41;
    *(void *)(v16 + 32) = v42;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v15) = v28;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  int64_t v22 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100352A08(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70(&qword_100711CB0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  long long v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1000717F0((unint64_t *)&unk_100708650, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100352E2C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711CA0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  long long v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1000717F0((unint64_t *)&unk_100708650, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100353250(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711C90);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (a2)
    {
      sub_1001146DC(v23, (uint64_t)v34);
    }
    else
    {
      sub_1000D4774((uint64_t)v23, (uint64_t)v34);
      id v24 = v22;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = sub_1001146DC(v34, *(void *)(v7 + 56) + 40 * v15);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100353530(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000CBE70((uint64_t *)&unk_100711C60);
  char v49 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v48 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v46 = v2;
  int64_t v47 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v24 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v25 = v24 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v47) {
      break;
    }
    unint64_t v27 = (void *)(v5 + 64);
    unint64_t v28 = *(void *)(v48 + 8 * v26);
    ++v13;
    if (!v28)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v28 = *(void *)(v48 + 8 * v13);
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v46;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = *(void *)(v48 + 8 * v29);
        if (!v28)
        {
          while (1)
          {
            int64_t v13 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v47) {
              goto LABEL_34;
            }
            unint64_t v28 = *(void *)(v48 + 8 * v13);
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v29;
      }
    }
LABEL_21:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v13 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v5 + 48) + 56 * v25;
    if (v49)
    {
      long long v31 = *(_OWORD *)v30;
      long long v32 = *(_OWORD *)(v30 + 16);
      long long v33 = *(_OWORD *)(v30 + 32);
      uint64_t v57 = *(void *)(v30 + 48);
      long long v55 = v32;
      long long v56 = v33;
      long long v54 = v31;
      uint64_t v34 = *(void *)(v5 + 56) + 56 * v25;
      long long v36 = *(_OWORD *)(v34 + 16);
      long long v35 = *(_OWORD *)(v34 + 32);
      long long v37 = *(_OWORD *)v34;
      uint64_t v53 = *(void *)(v34 + 48);
      long long v51 = v36;
      long long v52 = v35;
      long long v50 = v37;
    }
    else
    {
      sub_1000CE280(v30, (uint64_t)&v54);
      sub_1000CE280(*(void *)(v5 + 56) + 56 * v25, (uint64_t)&v50);
    }
    Hasher.init(_seed:)();
    sub_1000A6B78((void *)&v54 + 1, v56);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v38 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v11 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v14 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 56 * v14;
    uint64_t v16 = *(void *)(v7 + 48) + v15;
    long long v17 = v54;
    long long v18 = v55;
    long long v19 = v56;
    *(void *)(v16 + 48) = v57;
    *(_OWORD *)(v16 + 16) = v18;
    *(_OWORD *)(v16 + 32) = v19;
    *(_OWORD *)uint64_t v16 = v17;
    uint64_t v20 = *(void *)(v7 + 56) + v15;
    long long v21 = v50;
    long long v22 = v51;
    long long v23 = v52;
    *(void *)(v20 + 48) = v53;
    *(_OWORD *)(v20 + 16) = v22;
    *(_OWORD *)(v20 + 32) = v23;
    *(_OWORD *)uint64_t v20 = v21;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v46;
  unint64_t v27 = (void *)(v5 + 64);
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
  if (v45 >= 64) {
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v45;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_1003538DC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      long long v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_1000717F0((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario() - 8)
                            + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *int64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100353C24(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v36 = v7;
      while (1)
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(void *)(v2 + 48) + 16 * v6;
        uint64_t v12 = *(void **)v11;
        char v13 = *(unsigned char *)(v11 + 8);
        Hasher.init(_seed:)();
        if (v13)
        {
          Hasher._combine(_:)(1uLL);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v2;
          unint64_t v15 = v9;
          id v16 = v12;
          String.hash(into:)();

          unint64_t v9 = v15;
          uint64_t v2 = v14;
          uint64_t v7 = v36;
          swift_bridgeObjectRelease();
        }
        else
        {
          Hasher._combine(_:)(0);
          id v17 = v12;
          NSObject.hash(into:)();
        }
        Swift::Int v18 = Hasher._finalize()();

        unint64_t v19 = v18 & v7;
        if (v3 >= (uint64_t)v9) {
          break;
        }
        if (v19 < v9) {
          goto LABEL_14;
        }
LABEL_15:
        uint64_t v20 = *(void *)(v2 + 48);
        long long v21 = (_OWORD *)(v20 + 16 * v3);
        long long v22 = (_OWORD *)(v20 + v10);
        if (16 * v3 != v10 || v21 >= v22 + 1) {
          *long long v21 = *v22;
        }
        uint64_t v23 = *(void *)(v2 + 56);
        uint64_t v24 = *(void *)(*(void *)(type metadata accessor for RestorableSettings(0) - 8) + 72);
        int64_t v25 = v24 * v3;
        unint64_t v26 = v23 + v24 * v3;
        int64_t v27 = v24 * v6;
        unint64_t v28 = v23 + v24 * v6 + v24;
        if (v25 < v27 || v26 >= v28)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v25 == v27) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_24;
        }
      }
      if (v19 < v9) {
        goto LABEL_6;
      }
LABEL_14:
      if (v3 < (uint64_t)v19) {
        goto LABEL_6;
      }
      goto LABEL_15;
    }
LABEL_24:
    uint64_t v30 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(v2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v35;
    ++*(_DWORD *)(v2 + 36);
  }
}

unint64_t sub_100353EB4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      long long v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_1000717F0((unint64_t *)&unk_1007086A0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo()
                                        - 8)
                            + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *int64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100354200(unint64_t result, uint64_t a2)
{
  int64_t v2 = result;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(void *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    uint64_t v6 = ~v4;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      unint64_t v7 = (result + 1) & v6;
      uint64_t v8 = a2;
      while (1)
      {
        uint64_t v9 = 24 * v5;
        uint64_t v10 = *(void *)(v8 + 48) + 24 * v5;
        uint64_t v12 = *(void *)v10;
        uint64_t v11 = *(void *)(v10 + 8);
        int v13 = *(unsigned __int8 *)(v10 + 16);
        Hasher.init(_seed:)();
        if (!v13) {
          break;
        }
        if (v13 == 1)
        {
          Swift::UInt v14 = 5;
LABEL_10:
          Hasher._combine(_:)(v14);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          goto LABEL_17;
        }
        switch(v12)
        {
          case 1:
            Swift::UInt v15 = 1;
            break;
          case 2:
            Swift::UInt v15 = 2;
            break;
          case 3:
            Swift::UInt v15 = 3;
            break;
          default:
            Swift::UInt v15 = 0;
            break;
        }
        Hasher._combine(_:)(v15);
LABEL_17:
        Swift::Int v16 = Hasher._finalize()();
        unint64_t result = sub_100325510(v12, v11, v13);
        unint64_t v17 = v16 & v6;
        if (v2 >= (uint64_t)v7)
        {
          uint64_t v8 = a2;
          if (v17 < v7) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v8 = a2;
          if (v17 >= v7) {
            goto LABEL_22;
          }
        }
        if (v2 >= (uint64_t)v17)
        {
LABEL_22:
          uint64_t v18 = *(void *)(v8 + 48);
          unint64_t v19 = v18 + 24 * v2;
          unint64_t v20 = (long long *)(v18 + v9);
          if (24 * v2 < v9 || v19 >= (unint64_t)v20 + 24 || v2 != v5)
          {
            long long v21 = *v20;
            *(void *)(v19 + 16) = *((void *)v20 + 2);
            *(_OWORD *)unint64_t v19 = v21;
          }
          uint64_t v22 = *(void *)(v8 + 56);
          uint64_t v23 = *(void *)(*(void *)(type metadata accessor for Date() - 8) + 72);
          int64_t v24 = v23 * v2;
          unint64_t result = v22 + v23 * v2;
          int64_t v25 = v23 * v5;
          unint64_t v26 = v22 + v23 * v5 + v23;
          if (v24 < v25 || result >= v26)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
            int64_t v2 = v5;
            uint64_t v8 = a2;
          }
          else
          {
            int64_t v2 = v5;
            uint64_t v8 = a2;
            if (v24 != v25)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              int64_t v2 = v5;
            }
          }
        }
LABEL_5:
        unint64_t v5 = (v5 + 1) & v6;
        if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_34;
        }
      }
      Swift::UInt v14 = 4;
      goto LABEL_10;
    }
    uint64_t v8 = a2;
LABEL_34:
    BOOL v28 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << v2) - 1;
  }
  else
  {
    BOOL v28 = (uint64_t *)(v3 + 8 * (result >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << result) - 1;
    uint64_t v8 = a2;
  }
  *BOOL v28 = v29 & v30;
  uint64_t v31 = *(void *)(v8 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
    JUMPOUT(0x1003544E0);
  }
  *(void *)(v8 + 16) = v33;
  ++*(_DWORD *)(v8 + 36);
  return result;
}

unint64_t sub_1003544F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int v13 = (_OWORD *)(v12 + 16 * v3);
          Swift::UInt v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          Swift::Int v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *Swift::Int v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1003546C8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = v11 + 40 * v3;
        int v13 = (long long *)(v11 + 40 * v6);
        if (v3 != v6 || v12 >= (unint64_t)v13 + 40)
        {
          long long v14 = *v13;
          long long v15 = v13[1];
          *(void *)(v12 + 32) = *((void *)v13 + 4);
          *(_OWORD *)unint64_t v12 = v14;
          *(_OWORD *)(v12 + 16) = v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(type metadata accessor for ScrollPositionInfo.ItemOffset(0) - 8) + 72);
        int64_t v18 = v17 * v3;
        unint64_t result = v16 + v17 * v3;
        int64_t v19 = v17 * v6;
        unint64_t v20 = v16 + v17 * v6 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *BOOL v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100354914(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v10 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t result = Hasher._finalize()();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int v13 = (void *)(v12 + 8 * v3);
          long long v14 = (void *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          uint64_t v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100354AE4(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            int64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (void *)(v19 + 8 * v3);
            uint64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              void *v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *BOOL v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100354C98(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 < v9 || v3 < v13) {
            goto LABEL_6;
          }
        }
        else if (v13 < v9 && v3 < v13)
        {
          goto LABEL_6;
        }
        uint64_t v16 = *(void *)(a2 + 48);
        uint64_t v17 = (void *)(v16 + 8 * v3);
        int64_t v18 = (void *)(v16 + 8 * v6);
        if (v3 != v6 || v17 >= v18 + 1) {
          *uint64_t v17 = *v18;
        }
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(*(void *)(type metadata accessor for URL() - 8) + 72);
        int64_t v21 = v20 * v3;
        unint64_t v22 = v19 + v20 * v3;
        int64_t v23 = v20 * v6;
        unint64_t v24 = v19 + v20 * v6 + v20;
        if (v21 < v23 || v22 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v21 == v23) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v26 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v26 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *BOOL v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100354E84(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            int64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (char *)(v19 + 224 * v3);
            int64_t v21 = (char *)(v19 + 224 * v6);
            if (224 * v3 < (uint64_t)(224 * v6) || v20 >= v21 + 224 || (BOOL v22 = v3 == v6, v3 = v6, !v22))
            {
              memmove(v20, v21, 0xE0uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  uint64_t *v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100355050(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10008E1D0(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v27);
        Swift::Int v9 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
        unint64_t result = sub_10008E17C((uint64_t)v27);
        Swift::Int v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(a2 + 48);
            unint64_t v14 = v13 + 40 * v3;
            uint64_t v15 = (long long *)(v13 + 40 * v6);
            if (v3 != v6 || v14 >= (unint64_t)v15 + 40)
            {
              long long v16 = *v15;
              long long v17 = v15[1];
              *(void *)(v14 + 32) = *((void *)v15 + 4);
              *(_OWORD *)unint64_t v14 = v16;
              *(_OWORD *)(v14 + 16) = v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v10 >= v8 || v3 >= v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *int64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10035521C(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v12 = *(void *)(a2 + 40);
        id v13 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v14 = NSObject._rawHashValue(seed:)(v12);

        Swift::Int v15 = v14 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v15 >= v9 && v3 >= v15)
          {
LABEL_16:
            uint64_t v18 = *(void *)(a2 + 48);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || v19 >= v20 + 1) {
              *uint64_t v19 = *v20;
            }
            uint64_t v21 = *(void *)(a2 + 56);
            unint64_t v22 = v21 + 40 * v3;
            uint64_t v23 = (long long *)(v21 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v22 >= (unint64_t)v23 + 40))
            {
              long long v10 = *v23;
              long long v11 = v23[1];
              *(void *)(v22 + 32) = *((void *)v23 + 4);
              *(_OWORD *)unint64_t v22 = v10;
              *(_OWORD *)(v22 + 16) = v11;
              int64_t v3 = v6;
            }
          }
        }
        else if (v15 >= v9 || v3 >= v15)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1003553E4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1000CE280(*(void *)(a2 + 48) + 56 * v6, (uint64_t)v29);
        Hasher.init(_seed:)();
        sub_1000A6B78(v30, v30[3]);
        dispatch thunk of Hashable.hash(into:)();
        Swift::Int v12 = Hasher._finalize()();
        unint64_t result = sub_1000CE1FC((uint64_t)v29);
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          unint64_t v15 = v14 + 56 * v3;
          long long v16 = (long long *)(v14 + 56 * v6);
          if (v3 != v6 || v15 >= (unint64_t)v16 + 56)
          {
            long long v17 = *v16;
            long long v18 = v16[1];
            long long v19 = v16[2];
            *(void *)(v15 + 48) = *((void *)v16 + 6);
            *(_OWORD *)(v15 + 16) = v18;
            *(_OWORD *)(v15 + 32) = v19;
            *(_OWORD *)unint64_t v15 = v17;
          }
          uint64_t v20 = *(void *)(a2 + 56);
          unint64_t v21 = v20 + 56 * v3;
          unint64_t v22 = (long long *)(v20 + 56 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v21 >= (unint64_t)v22 + 56))
          {
            long long v9 = *v22;
            long long v10 = v22[1];
            long long v11 = v22[2];
            *(void *)(v21 + 48) = *((void *)v22 + 6);
            *(_OWORD *)(v21 + 16) = v10;
            *(_OWORD *)(v21 + 32) = v11;
            *(_OWORD *)unint64_t v21 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  uint64_t *v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10035560C(void *a1, char a2, uint64_t a3, void *a4)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(1uLL);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v8 = a1;
    String.hash(into:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
    id v9 = a1;
    NSObject.hash(into:)();
  }
  Hasher._finalize()();
  unint64_t v10 = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a4 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v10;
  uint64_t v11 = a4[6] + 16 * v10;
  *(void *)uint64_t v11 = a1;
  *(unsigned char *)(v11 + 8) = a2 & 1;
  uint64_t v12 = a4[7];
  uint64_t v13 = type metadata accessor for RestorableSettings(0);
  uint64_t result = sub_10035CC88(a3, v12 + *(void *)(*(void *)(v13 - 8) + 72) * v10, type metadata accessor for RestorableSettings);
  ++a4[2];
  return result;
}

uint64_t sub_100355770(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  Hasher.init(_seed:)();
  if (!a3)
  {
    Swift::UInt v10 = 4;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    Swift::UInt v10 = 5;
LABEL_5:
    Hasher._combine(_:)(v10);
    String.hash(into:)();
    goto LABEL_12;
  }
  switch(a1)
  {
    case 1:
      Swift::UInt v11 = 1;
      break;
    case 2:
      Swift::UInt v11 = 2;
      break;
    case 3:
      Swift::UInt v11 = 3;
      break;
    default:
      Swift::UInt v11 = 0;
      break;
  }
  Hasher._combine(_:)(v11);
LABEL_12:
  Hasher._finalize()();
  unint64_t v12 = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a5 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  uint64_t v13 = a5[6] + 24 * v12;
  *(void *)uint64_t v13 = a1;
  *(void *)(v13 + 8) = a2;
  *(unsigned char *)(v13 + 16) = a3;
  uint64_t v14 = a5[7];
  uint64_t v15 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * v12, a4, v15);
  ++a5[2];
  return result;
}

__n128 sub_100355918(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  Hasher.init(_seed:)();
  if (!a3)
  {
    Swift::UInt v10 = 4;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    Swift::UInt v10 = 5;
LABEL_5:
    Hasher._combine(_:)(v10);
    String.hash(into:)();
    goto LABEL_12;
  }
  switch(a1)
  {
    case 1:
      Swift::UInt v11 = 1;
      break;
    case 2:
      Swift::UInt v11 = 2;
      break;
    case 3:
      Swift::UInt v11 = 3;
      break;
    default:
      Swift::UInt v11 = 0;
      break;
  }
  Hasher._combine(_:)(v11);
LABEL_12:
  Hasher._finalize()();
  unint64_t v12 = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a5 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  uint64_t v13 = a5[6] + 24 * v12;
  *(void *)uint64_t v13 = a1;
  *(void *)(v13 + 8) = a2;
  *(unsigned char *)(v13 + 16) = a3;
  uint64_t v14 = a5[7] + 40 * v12;
  *(void *)(v14 + 32) = *(void *)(a4 + 32);
  __n128 result = *(__n128 *)(a4 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)a4;
  *(__n128 *)(v14 + 16) = result;
  ++a5[2];
  return result;
}

void *sub_100355A8C()
{
  return sub_100355F90((uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t *)&unk_100711C78, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
}

void *sub_100355AD4()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711E08);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v23 = *(_OWORD *)(v17 + 24);
    *(void *)uint64_t v22 = *(void *)v17;
    *(void *)(v22 + 8) = v18;
    *(void *)(v22 + 16) = v19;
    *(_OWORD *)(v22 + 24) = v23;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __n128 result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100355CC4()
{
  uint64_t v1 = type metadata accessor for RestorableSettings(0);
  uint64_t v27 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100717870);
  int64_t v24 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *int64_t v24 = v6;
    return result;
  }
  id result = (id)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  uint64_t v25 = v4 + 64;
  int64_t v26 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = *(void *)(v4 + 48) + 16 * v14;
    uint64_t v17 = *(void **)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    unint64_t v19 = *(void *)(v27 + 72) * v14;
    sub_10035CC20(*(void *)(v4 + 56) + v19, (uint64_t)v3, type metadata accessor for RestorableSettings);
    uint64_t v20 = *(void *)(v6 + 48) + v15;
    *(void *)uint64_t v20 = v17;
    *(unsigned char *)(v20 + 8) = v18;
    sub_10035CC88((uint64_t)v3, *(void *)(v6 + 56) + v19, type metadata accessor for RestorableSettings);
    id result = v17;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100355F48()
{
  return sub_100355F90((uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_100711CF0, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
}

void *sub_100355F90(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void))
{
  int v46 = a4;
  uint64_t v7 = a1(0);
  uint64_t v45 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v44 = (char *)&v37 - v8;
  uint64_t v43 = a2(0);
  uint64_t v9 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unint64_t v42 = (char *)&v37 - v10;
  sub_1000CBE70(a3);
  long long v37 = v4;
  uint64_t v11 = *v4;
  uint64_t v12 = static _DictionaryStorage.copy(original:)();
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v48 = v12;
  if (!v13)
  {
    id result = (void *)swift_release();
    uint64_t v36 = v48;
    uint64_t v35 = v37;
LABEL_25:
    *uint64_t v35 = v36;
    return result;
  }
  uint64_t v14 = v12;
  id result = (void *)(v12 + 64);
  unint64_t v16 = (unint64_t)((1 << *(unsigned char *)(v14 + 32)) + 63) >> 6;
  if (v14 != v11 || (unint64_t)result >= v11 + 64 + 8 * v16)
  {
    id result = memmove(result, (const void *)(v11 + 64), 8 * v16);
    uint64_t v14 = v48;
  }
  uint64_t v38 = v11 + 64;
  int64_t v17 = 0;
  *(void *)(v14 + 16) = *(void *)(v11 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v47 = v11;
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v11 + 64);
  uint64_t v41 = v9 + 16;
  int64_t v39 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v40 = v9 + 32;
  unint64_t v22 = v42;
  uint64_t v21 = v43;
  uint64_t v23 = (uint64_t)v44;
  for (i = v48; ; id result = (void *)sub_10035CC88(v23, *(void *)(i + 56) + v31, v30))
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v17 << 6);
      uint64_t v27 = v47;
      goto LABEL_9;
    }
    int64_t v32 = v17 + 1;
    uint64_t v27 = v47;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v32 >= v39) {
      goto LABEL_23;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v32);
    ++v17;
    if (!v33)
    {
      int64_t v17 = v32 + 1;
      if (v32 + 1 >= v39) {
        goto LABEL_23;
      }
      unint64_t v33 = *(void *)(v38 + 8 * v17);
      if (!v33) {
        break;
      }
    }
LABEL_22:
    unint64_t v20 = (v33 - 1) & v33;
    unint64_t v26 = __clz(__rbit64(v33)) + (v17 << 6);
LABEL_9:
    unint64_t v28 = *(void *)(v9 + 72) * v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v22, *(void *)(v27 + 48) + v28, v21);
    uint64_t v29 = *(void *)(v27 + 56);
    BOOL v30 = v46;
    unint64_t v31 = *(void *)(v45 + 72) * v26;
    sub_10035CC20(v29 + v31, v23, v46);
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(void *)(i + 48) + v28, v22, v21);
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v39)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v35 = v37;
    uint64_t v36 = v48;
    goto LABEL_25;
  }
  unint64_t v33 = *(void *)(v38 + 8 * v34);
  if (v33)
  {
    int64_t v17 = v34;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v17 >= v39) {
      goto LABEL_23;
    }
    unint64_t v33 = *(void *)(v38 + 8 * v17);
    ++v34;
    if (v33) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100356300()
{
  return sub_10035AE30(&qword_100717910);
}

void *sub_10035630C()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711DB0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    unint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    void *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1000F7ECC(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003564D4()
{
  return sub_100356F58(&qword_100711DB8, (void (*)(void, void))sub_1000F7ECC);
}

uint64_t sub_1003564F4()
{
  uint64_t v39 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100711DA0);
  unint64_t v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v41 = v4;
  if (!v5)
  {
    uint64_t result = swift_release();
    uint64_t v31 = v41;
    BOOL v30 = v33;
LABEL_25:
    *BOOL v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  unint64_t v7 = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v34 = v3 + 64;
  if (v6 != v3 || v7 >= &v8[8 * v9])
  {
    memmove(v7, v8, 8 * v9);
    uint64_t v6 = v41;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v40 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v37 = v1 + 16;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v1 + 32;
  unint64_t v14 = v38;
  uint64_t v15 = v39;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v10 << 6);
      uint64_t result = v40;
      goto LABEL_9;
    }
    int64_t v27 = v10 + 1;
    uint64_t result = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v35) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v34 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v17 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    uint64_t v19 = 24 * v17;
    uint64_t v20 = *(void *)(result + 48) + 24 * v17;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    unint64_t v23 = *(void *)(v1 + 72) * v17;
    unsigned __int8 v24 = *(unsigned char *)(v20 + 16);
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(result + 56) + v23, v15);
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 48) + v19;
    *(void *)uint64_t v26 = v21;
    *(void *)(v26 + 8) = v22;
    *(unsigned char *)(v26 + 16) = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v25 + 56) + v23, v14, v15);
    sub_1002F81FC(v21, v22, v24);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_23:
    uint64_t result = swift_release();
    BOOL v30 = v33;
    uint64_t v31 = v41;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v34 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1003567D8()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711DA8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = 40 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v4 + 48) + v16;
    long long v26 = *(_OWORD *)(v21 + 24);
    unsigned __int8 v27 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v25 = *(void *)v17;
    *(void *)(v25 + 8) = v19;
    *(unsigned char *)(v25 + 16) = v27;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(void *)(v28 + 16) = v24;
    *(_OWORD *)(v28 + 24) = v26;
    sub_1002F81FC(v18, v19, v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003569DC()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D90);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    char v18 = *(unsigned char *)(v17 + 16);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v17;
    *(unsigned char *)(v21 + 16) = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100356B84()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D98);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    char v18 = *(unsigned char *)(v17 + 16);
    uint64_t v19 = 40 * v15;
    uint64_t v20 = *(void *)(v2 + 56) + v19;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    long long v25 = *(_OWORD *)(v20 + 24);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v17;
    *(unsigned char *)(v24 + 16) = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v19;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v21;
    *(void *)(v26 + 16) = v23;
    *(_OWORD *)(v26 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100356D80()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D80);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_1002F81E8(v19, *((unint64_t *)&v19 + 1));
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100356F38()
{
  return sub_100356F58(&qword_100711D88, (void (*)(void, void))sub_1002F81E8);
}

void *sub_100356F58(uint64_t *a1, void (*a2)(void, void))
{
  uint64_t v4 = v2;
  sub_1000CBE70(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v16) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v9 + 8 * v28);
    ++v12;
    if (!v29)
    {
      int64_t v12 = v28 + 1;
      if (v28 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v9 + 8 * v12);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v29 - 1) & v29;
    unint64_t v18 = __clz(__rbit64(v29)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 16 * v18;
    uint64_t v20 = 40 * v18;
    uint64_t v21 = *(void *)(v5 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    long long v25 = *(_OWORD *)(*(void *)(v5 + 48) + v19);
    long long v26 = *(_OWORD *)(v21 + 24);
    *(_OWORD *)(*(void *)(v7 + 48) + v19) = v25;
    uint64_t v27 = *(void *)(v7 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + 8) = v23;
    *(void *)(v27 + 16) = v24;
    *(_OWORD *)(v27 + 24) = v26;
    a2(v25, *((void *)&v25 + 1));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v16) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v9 + 8 * v30);
  if (v29)
  {
    int64_t v12 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v9 + 8 * v12);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100357158()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100717980);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_10008E1D0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100357334()
{
  return sub_100359E5C(&qword_100711CB8);
}

void *sub_100357340()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711E28);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003574EC()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711C88);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100357690()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711E00);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (_OWORD *)(*(void *)(v2 + 48) + 160 * v15);
    long long v17 = v16[2];
    long long v18 = v16[3];
    long long v19 = v16[5];
    v29[4] = v16[4];
    v29[5] = v19;
    void v29[3] = v18;
    long long v20 = v16[6];
    long long v21 = v16[7];
    long long v22 = v16[9];
    unsigned char v29[8] = v16[8];
    v29[9] = v22;
    v29[6] = v20;
    v29[7] = v21;
    long long v23 = v16[1];
    v29[0] = *v16;
    v29[1] = v23;
    v29[2] = v17;
    uint64_t v24 = 8 * v15;
    uint64_t v25 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    memmove((void *)(*(void *)(v4 + 48) + 160 * v15), v16, 0xA0uLL);
    *(void *)(*(void *)(v4 + 56) + v24) = v25;
    uint64_t result = (void *)sub_10017FF50((uint64_t)v29);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100357890()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100717A00);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_10008E1D0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_10009B208(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_1000A54B0(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100357A78()
{
  uint64_t v38 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100711D08);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v40;
    unint64_t v29 = v32;
LABEL_25:
    *unint64_t v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    unint64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    uint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *uint64_t v25 = v23;
    v25[1] = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    unint64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100357D50()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711CE0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100357EF4()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D00);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003580B0()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711E70);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    char v17 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = v16;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v17;
    id result = v16;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100358254()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100717990);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    sub_10008E1D0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v27);
    uint64_t v16 = *(void *)(v2 + 56) + 24 * v15;
    char v17 = *(void **)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v4 + 48) + 40 * v15;
    long long v21 = v27[0];
    long long v22 = v27[1];
    *(void *)(v20 + 32) = v28;
    *(_OWORD *)uint64_t v20 = v21;
    *(_OWORD *)(v20 + 16) = v22;
    uint64_t v23 = (void *)(*(void *)(v4 + 56) + 24 * v15);
    void *v23 = v17;
    v23[1] = v18;
    _OWORD v23[2] = v19;
    id result = sub_10008F4B4(v17, v18, v19);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100358444()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711E20);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    void *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)sub_100168CBC(v24, *((unint64_t *)&v24 + 1));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10035860C()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_1007179C0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10009B208(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_1000A54B0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1003587F4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_100711DD0);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100358A8C()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_100717880);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100358C38()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_100711E80);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    int64_t v20 = *(void **)(v19 + 16);
    char v21 = *(unsigned char *)(v19 + 24);
    long long v22 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v23 = v22;
    *(void *)(v23 + 16) = v20;
    *(unsigned char *)(v23 + 24) = v21;
    id v24 = v17;
    id result = v20;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100358DFC()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711E78);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v24 = *(unsigned char *)(v17 + 24);
    *(void *)uint64_t v23 = *(void *)v17;
    *(void *)(v23 + 8) = v19;
    *(void *)(v23 + 16) = v20;
    *(unsigned char *)(v23 + 24) = v24;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    sub_10010ED28(v18, v19, v20, v24);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100358FC4()
{
  uint64_t v1 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v34 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_100711E60);
  uint64_t v31 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v35 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v31;
LABEL_25:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v35;
  }
  uint64_t v32 = v4 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  int64_t v33 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v10;
    if (!v26)
    {
      int64_t v10 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v10);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    unint64_t v21 = *(void *)(v34 + 72) * v15;
    uint64_t v22 = *(void *)(v4 + 56) + v21;
    long long v36 = *(_OWORD *)(v17 + 24);
    sub_10035CC20(v22, (uint64_t)v3, type metadata accessor for ScrollPositionInfo.ItemOffset);
    uint64_t v23 = v35;
    uint64_t v24 = *(void *)(v35 + 48) + v16;
    *(void *)uint64_t v24 = v18;
    *(void *)(v24 + 8) = v19;
    *(void *)(v24 + 16) = v20;
    *(_OWORD *)(v24 + 24) = v36;
    sub_10035CC88((uint64_t)v3, *(void *)(v23 + 56) + v21, type metadata accessor for ScrollPositionInfo.ItemOffset);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v10 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v10 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v10);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1003592A0()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_1007179A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100359450()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711C70);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void **)(v19 + 16);
    long long v28 = *(_OWORD *)v19;
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
    id v23 = v20;
    id v24 = (id)v28;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100359630()
{
  return sub_10035AC74((uint64_t *)&unk_100711DF0);
}

id sub_10035963C()
{
  return sub_100359E5C((uint64_t *)&unk_100711DC0);
}

id sub_100359648()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_100717960);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003597FC()
{
  return sub_100359E5C((uint64_t *)&unk_100711DE0);
}

void *sub_100359808()
{
  return sub_10035AE30(&qword_100717920);
}

void *sub_100359814()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_100711E30);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v20;
    v22[1] = v21;
    id v23 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003599CC()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D68);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_10008E1D0(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100359BA8()
{
  return sub_10035B044((uint64_t (*)(void))&type metadata accessor for URL, &qword_100711E50);
}

id sub_100359BC8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100711E58);
  id v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100359E5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000CBE70(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    int64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100359FFC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_100711D20);
  unint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v22 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    char v17 = *(unsigned char *)(*(void *)(v5 + 56) + v15);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10035A28C()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D18);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v58 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v58 >= v13) {
      goto LABEL_26;
    }
    unint64_t v59 = *(void *)(v6 + 8 * v58);
    ++v9;
    if (!v59)
    {
      int64_t v9 = v58 + 1;
      if (v58 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v59 = *(void *)(v6 + 8 * v9);
      if (!v59) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v59 - 1) & v59;
    unint64_t v15 = __clz(__rbit64(v59)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 168 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 168 * v15;
    long long v18 = *(_OWORD *)(v17 + 48);
    long long v19 = *(_OWORD *)(v17 + 64);
    long long v20 = *(_OWORD *)(v17 + 96);
    long long v66 = *(_OWORD *)(v17 + 80);
    long long v67 = v20;
    long long v64 = v18;
    long long v65 = v19;
    long long v21 = *(_OWORD *)(v17 + 112);
    long long v22 = *(_OWORD *)(v17 + 128);
    long long v23 = *(_OWORD *)(v17 + 144);
    uint64_t v71 = *(void *)(v17 + 160);
    long long v69 = v22;
    long long v70 = v23;
    long long v68 = v21;
    long long v24 = *(_OWORD *)(v17 + 32);
    long long v25 = *(_OWORD *)v17;
    long long v62 = *(_OWORD *)(v17 + 16);
    long long v63 = v24;
    long long v61 = v25;
    uint64_t v26 = 224 * v15;
    uint64_t v27 = (long long *)(*(void *)(v2 + 56) + v26);
    long long v28 = v27[2];
    long long v29 = v27[3];
    long long v30 = v27[5];
    long long v76 = v27[4];
    long long v77 = v30;
    long long v75 = v29;
    long long v31 = v27[6];
    long long v32 = v27[7];
    long long v33 = v27[9];
    long long v80 = v27[8];
    long long v81 = v33;
    long long v78 = v31;
    long long v79 = v32;
    long long v34 = v27[10];
    long long v35 = v27[11];
    long long v36 = v27[13];
    long long v84 = v27[12];
    long long v85 = v36;
    long long v82 = v34;
    long long v83 = v35;
    long long v37 = v27[1];
    long long v72 = *v27;
    long long v73 = v37;
    long long v74 = v28;
    uint64_t v38 = *(void *)(v4 + 48) + v16;
    uint64_t v39 = v71;
    long long v40 = v68;
    long long v41 = v70;
    *(_OWORD *)(v38 + 128) = v69;
    *(_OWORD *)(v38 + 144) = v41;
    *(_OWORD *)(v38 + 112) = v40;
    long long v42 = v64;
    long long v43 = v65;
    long long v44 = v67;
    *(_OWORD *)(v38 + 80) = v66;
    *(_OWORD *)(v38 + 96) = v44;
    *(_OWORD *)(v38 + 48) = v42;
    *(_OWORD *)(v38 + 64) = v43;
    long long v46 = v62;
    long long v45 = v63;
    *(_OWORD *)uint64_t v38 = v61;
    *(_OWORD *)(v38 + 16) = v46;
    *(_OWORD *)(v38 + 32) = v45;
    *(void *)(v38 + 160) = v39;
    uint64_t v47 = (_OWORD *)(*(void *)(v4 + 56) + v26);
    long long v48 = v73;
    *uint64_t v47 = v72;
    v47[1] = v48;
    long long v49 = v74;
    long long v50 = v75;
    long long v51 = v77;
    v47[4] = v76;
    v47[5] = v51;
    v47[2] = v49;
    v47[3] = v50;
    long long v52 = v78;
    long long v53 = v79;
    long long v54 = v81;
    v47[8] = v80;
    v47[9] = v54;
    v47[6] = v52;
    v47[7] = v53;
    long long v55 = v82;
    long long v56 = v83;
    long long v57 = v85;
    v47[12] = v84;
    v47[13] = v57;
    v47[10] = v55;
    v47[11] = v56;
    sub_1000CAA28((uint64_t)&v61);
    id result = (void *)sub_1000CAA28((uint64_t)&v72);
  }
  int64_t v60 = v58 + 2;
  if (v60 >= v13) {
    goto LABEL_26;
  }
  unint64_t v59 = *(void *)(v6 + 8 * v60);
  if (v59)
  {
    int64_t v9 = v60;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v60 + 1;
    if (__OFADD__(v60, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v59 = *(void *)(v6 + 8 * v9);
    ++v60;
    if (v59) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10035A540()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711D10);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *(void *)(v17 + 24);
    long long v21 = *(void **)(v17 + 32);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v28 = *(_OWORD *)(v17 + 8);
    *(void *)uint64_t v22 = *(void *)v17;
    *(_OWORD *)(v22 + 8) = v28;
    *(void *)(v22 + 24) = v20;
    *(void *)(v22 + 32) = v21;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    id v23 = (id)v28;
    id v24 = *((id *)&v28 + 1);
    id result = v21;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10035A724()
{
  return sub_100359E5C((uint64_t *)&unk_100711E40);
}

void *sub_10035A730()
{
  uint64_t v1 = v0;
  sub_1000CBE70(&qword_100711CF8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v42 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v42 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v42);
    ++v9;
    if (!v43)
    {
      int64_t v9 = v42 + 1;
      if (v42 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v43 = *(void *)(v6 + 8 * v9);
      if (!v43) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v43 - 1) & v43;
    unint64_t v15 = __clz(__rbit64(v43)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 224 * v15;
    uint64_t v19 = (long long *)(*(void *)(v2 + 56) + v18);
    long long v20 = v19[2];
    long long v21 = v19[3];
    long long v22 = v19[5];
    long long v49 = v19[4];
    long long v50 = v22;
    long long v48 = v21;
    long long v23 = v19[9];
    long long v25 = v19[6];
    long long v24 = v19[7];
    long long v53 = v19[8];
    long long v54 = v23;
    long long v51 = v25;
    long long v52 = v24;
    long long v27 = v19[11];
    long long v26 = v19[12];
    long long v28 = v19[10];
    *(_OWORD *)((char *)v57 + 9) = *(long long *)((char *)v19 + 201);
    long long v56 = v27;
    v57[0] = v26;
    long long v55 = v28;
    long long v29 = v19[1];
    long long v45 = *v19;
    long long v46 = v29;
    long long v47 = v20;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    long long v30 = (_OWORD *)(*(void *)(v4 + 56) + v18);
    long long v31 = v46;
    *long long v30 = v45;
    v30[1] = v31;
    long long v32 = v47;
    long long v33 = v48;
    long long v34 = v50;
    v30[4] = v49;
    void v30[5] = v34;
    v30[2] = v32;
    v30[3] = v33;
    long long v35 = v51;
    long long v36 = v52;
    long long v37 = v54;
    v30[8] = v53;
    v30[9] = v37;
    v30[6] = v35;
    v30[7] = v36;
    long long v38 = v55;
    long long v39 = v56;
    long long v40 = v57[0];
    *(_OWORD *)((char *)v30 + 201) = *(_OWORD *)((char *)v57 + 9);
    v30[11] = v39;
    v30[12] = v40;
    v30[10] = v38;
    id v41 = v17;
    id result = sub_10035BB8C(&v45);
  }
  int64_t v44 = v42 + 2;
  if (v44 >= v13) {
    goto LABEL_26;
  }
  unint64_t v43 = *(void *)(v6 + 8 * v44);
  if (v43)
  {
    int64_t v9 = v44;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v43 = *(void *)(v6 + 8 * v9);
    ++v44;
    if (v43) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10035A97C()
{
  return sub_10035AE30(&qword_100711CE8);
}

id sub_10035A988()
{
  return sub_10035B044((uint64_t (*)(void))&type metadata accessor for UTType, (uint64_t *)&unk_100711CD0);
}

void *sub_10035A9A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_100711CC0);
  uint64_t v6 = *v0;
  uint64_t v7 = static _DictionaryStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  long long v28 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v29 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v30 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v31 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v30) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v30) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v29 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v16 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 32 * v16;
    uint64_t v19 = *(void *)(v6 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 24);
    unint64_t v22 = *(void *)(v8 + 48) + v17;
    long long v23 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
    long long v32 = *(_OWORD *)(v19 + 8);
    id result = (void *)v23(v22, v5, v2);
    uint64_t v24 = *(void *)(v8 + 56) + v18;
    *(void *)uint64_t v24 = v20;
    *(_OWORD *)(v24 + 8) = v32;
    *(void *)(v24 + 24) = v21;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v30)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v30) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_10035AC68()
{
  return sub_10035AC74(&qword_100711E10);
}

void *sub_10035AC74(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000CBE70(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10035AE24()
{
  return sub_10035AE30(&qword_100711E18);
}

void *sub_10035AE30(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000CBE70(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    sub_10008E1D0(*(void *)(v3 + 48) + 40 * v16, (uint64_t)v24);
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    uint64_t v18 = *(void *)(v5 + 48) + 40 * v16;
    long long v19 = v24[0];
    long long v20 = v24[1];
    *(void *)(v18 + 32) = v25;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10035B004()
{
  return sub_10035B044((uint64_t (*)(void))&type metadata accessor for DOCItemSortMode.DisplayableMode, &qword_100711CB0);
}

id sub_10035B024()
{
  return sub_10035B044((uint64_t (*)(void))&type metadata accessor for DOCItemSortMode.DisplayableMode, (uint64_t *)&unk_100711CA0);
}

id sub_10035B044(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - v6;
  sub_1000CBE70(a2);
  int64_t v27 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = static _DictionaryStorage.copy(original:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *int64_t v27 = v10;
    return result;
  }
  id result = (id)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v28 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  uint64_t v31 = v5 + 16;
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v30 = v5 + 32;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v20, v4);
    uint64_t v21 = 8 * v19;
    unint64_t v22 = *(void **)(*(void *)(v8 + 56) + v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v10 + 48) + v20, v7, v4);
    *(void *)(*(void *)(v10 + 56) + v21) = v22;
    id result = v22;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v29) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10035B2DC()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_100711C90);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_1000D4774(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1001146DC(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10035B4A8()
{
  uint64_t v1 = v0;
  sub_1000CBE70((uint64_t *)&unk_100711C60);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 56 * v15;
    sub_1000CE280(*(void *)(v2 + 48) + 56 * v15, (uint64_t)v30);
    id result = (void *)sub_1000CE280(*(void *)(v2 + 56) + v16, (uint64_t)v28);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    uint64_t v18 = v31;
    long long v19 = v30[2];
    long long v20 = v30[1];
    *(_OWORD *)uint64_t v17 = v30[0];
    *(_OWORD *)(v17 + 16) = v20;
    *(_OWORD *)(v17 + 32) = v19;
    *(void *)(v17 + 48) = v18;
    uint64_t v21 = *(void *)(v4 + 56) + v16;
    long long v22 = v28[0];
    long long v23 = v28[1];
    long long v24 = v28[2];
    *(void *)(v21 + 48) = v29;
    *(_OWORD *)(v21 + 16) = v23;
    *(_OWORD *)(v21 + 32) = v24;
    *(_OWORD *)uint64_t v21 = v22;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10035B69C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 providerID];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11) {
    goto LABEL_14;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_15:
    char v18 = 1;
    return v18 & 1;
  }
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v14) {
    goto LABEL_14;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_11;
  }
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v17)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_15;
  }
  uint64_t v21 = self;
  id v41 = 0;
  id v22 = a1;
  id v23 = [v21 providerDomainForItem:v22 cachePolicy:3 error:&v41];
  if (v23)
  {
    long long v24 = v23;
    id v25 = v41;

    char v18 = FPProviderDomain.shouldUseDSCopyEngine.getter();
  }
  else
  {
    id v26 = v41;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.DocumentManager.getter();
    id v27 = v22;
    swift_errorRetain();
    id v28 = v27;
    swift_errorRetain();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      long long v38 = (void *)swift_slowAlloc();
      long long v39 = (void *)swift_slowAlloc();
      id v41 = v39;
      *(_DWORD *)uint64_t v31 = 136315394;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      os_log_t v37 = v29;
      uint64_t v32 = DOCNode.nodeDescription.getter();
      uint64_t v40 = sub_10009B0E4(v32, v33, (uint64_t *)&v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2112;
      swift_errorRetain();
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v40 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v38 = v34;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v35 = v37;
      _os_log_impl((void *)&_mh_execute_header, v37, v30, "Could not fetch provider domain for %s: %@", (uint8_t *)v31, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t type metadata accessor for DOCDSCopyEngineXPCConnection()
{
  return self;
}

void *sub_10035BB8C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  uint64_t v3 = (void *)a1[5];
  double v4 = (void *)a1[6];
  uint64_t v5 = (void *)a1[26];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  return a1;
}

id sub_10035BBF0()
{
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v1 = result;
  v2._countAndFlagsBits = 0xD000000000000015;
  v3._countAndFlagsBits = 0xD00000000000001BLL;
  v27._countAndFlagsBits = 0xD000000000000031;
  v27._object = (void *)0x80000001005EB220;
  v3._object = (void *)0x80000001005EB1E0;
  v2._object = (void *)0x80000001005EB200;
  v4._countAndFlagsBits = 0x617A696C61636F4CLL;
  v4._object = (void *)0xEB00000000656C62;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v1, v2, v27);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  v6._countAndFlagsBits = 0xD00000000000001DLL;
  v28._countAndFlagsBits = 0xD000000000000033;
  v28._object = (void *)0x80000001005EB300;
  v6._object = (void *)0x80000001005EB260;
  v7._object = (void *)0x80000001005EB280;
  v8._countAndFlagsBits = 0x617A696C61636F4CLL;
  v8._object = (void *)0xEB00000000656C62;
  v7._countAndFlagsBits = 0x1000000000000070;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v8, (NSBundle)v5, v7, v28);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v9 = result;
  v10._countAndFlagsBits = 0xD000000000000028;
  v29._object = (void *)0x80000001005EB370;
  v10._object = (void *)0x80000001005EB340;
  v11._countAndFlagsBits = 0x617A696C61636F4CLL;
  v11._object = (void *)0xEB00000000656C62;
  v12._countAndFlagsBits = 0x746F42207065654BLL;
  v12._object = (void *)0xE900000000000068;
  v29._countAndFlagsBits = 0xD000000000000038;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v29);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  char v13 = result;
  v14._countAndFlagsBits = 0xD000000000000023;
  v30._object = (void *)0x80000001005EB370;
  v14._object = (void *)0x80000001005EB3B0;
  v15._countAndFlagsBits = 0x617A696C61636F4CLL;
  v15._object = (void *)0xEB00000000656C62;
  v16._countAndFlagsBits = 1886352467;
  v16._object = (void *)0xE400000000000000;
  v30._countAndFlagsBits = 0xD000000000000038;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v30);

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v17 = result;
    v18._countAndFlagsBits = 0xD000000000000026;
    v31._object = (void *)0x80000001005EB370;
    v18._object = (void *)0x80000001005EB3E0;
    v19._countAndFlagsBits = 0x617A696C61636F4CLL;
    v19._object = (void *)0xEB00000000656C62;
    v20._countAndFlagsBits = 0x6563616C706552;
    v20._object = (void *)0xE700000000000000;
    v31._countAndFlagsBits = 0xD000000000000038;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v31);

    id v21 = [objc_allocWithZone((Class)DSConflictStrategy) init];
    [v21 setType:2];
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setLocalizedAlertTitle:v22];

    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setLocalizedAlertMessageFormat:v23];

    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setLocalizedTitle:v24 forResolution:2];

    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setLocalizedTitle:v25 forResolution:0];

    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setLocalizedTitle:v26 forResolution:1];

    return v21;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10035BFFC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035C034(uint64_t a1)
{
  return sub_1003489DC(a1, *(char **)(v1 + 16));
}

uint64_t sub_10035C03C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10035C07C()
{
  sub_1003496C4(*(void **)(v0 + 16));
}

uint64_t sub_10035C084(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10009E6C4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10035C0C8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v64 - v10;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_100711D70);
  __chkstk_darwin(v12 - 8);
  Swift::String v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v64 - v16;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v72 = a1 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  unint64_t v22 = (unint64_t)(v19 + 63) >> 6;
  long long v83 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  long long v75 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v76 = v6 + 16;
  uint64_t v77 = v6;
  long long v80 = (void (**)(char *, uint64_t))(v6 + 8);
  long long v81 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  unint64_t v64 = v22 - 1;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  uint64_t v71 = 0;
  int64_t v74 = v22;
  unint64_t v66 = v22 - 5;
  uint64_t v78 = a1;
  uint64_t v65 = a1 + 104;
  long long v68 = xmmword_1005A0500;
  unint64_t v67 = 0x80000001005EB1C0;
  long long v82 = v8;
  long long v79 = v11;
  long long v73 = v4;
  while (1)
  {
    if (v21)
    {
      unint64_t v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v84 = v23;
      unint64_t v25 = v24 | (v23 << 6);
LABEL_8:
      uint64_t v26 = v78;
      sub_10008E1D0(*(void *)(v78 + 48) + 40 * v25, (uint64_t)v14);
      uint64_t v27 = v77;
      unint64_t v28 = *(void *)(v26 + 56) + *(void *)(v77 + 72) * v25;
      uint64_t v29 = sub_1000CBE70(&qword_100719910);
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(&v14[*(int *)(v29 + 48)], v28, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 0, 1, v29);
      Swift::String v8 = v82;
      Swift::String v11 = v79;
      goto LABEL_15;
    }
    int64_t v30 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      __break(1u);
    }
    if (v30 >= v74)
    {
      unint64_t v84 = v23;
    }
    else
    {
      unint64_t v31 = *(void *)(v72 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      if ((uint64_t)(v23 + 2) >= v74)
      {
        unint64_t v84 = v23 + 1;
      }
      else
      {
        unint64_t v31 = *(void *)(v72 + 8 * (v23 + 2));
        if (v31)
        {
          int64_t v30 = v23 + 2;
LABEL_12:
          unint64_t v21 = (v31 - 1) & v31;
          unint64_t v25 = __clz(__rbit64(v31)) + (v30 << 6);
          unint64_t v84 = v30;
          goto LABEL_8;
        }
        if ((uint64_t)(v23 + 3) >= v74)
        {
          unint64_t v84 = v23 + 2;
        }
        else
        {
          unint64_t v31 = *(void *)(v72 + 8 * (v23 + 3));
          if (v31)
          {
            int64_t v30 = v23 + 3;
            goto LABEL_12;
          }
          int64_t v30 = v23 + 4;
          if ((uint64_t)(v23 + 4) >= v74)
          {
            unint64_t v84 = v23 + 3;
          }
          else
          {
            unint64_t v31 = *(void *)(v72 + 8 * v30);
            if (v31) {
              goto LABEL_12;
            }
            while (v66 != v23)
            {
              unint64_t v31 = *(void *)(v65 + 8 * v23++);
              if (v31)
              {
                int64_t v30 = v23 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v84 = v64;
          }
        }
      }
    }
    uint64_t v32 = sub_1000CBE70(&qword_100719910);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v14, 1, 1, v32);
    unint64_t v21 = 0;
LABEL_15:
    sub_1000CBE0C((uint64_t)v14, (uint64_t)v17, (uint64_t *)&unk_100711D70);
    uint64_t v33 = sub_1000CBE70(&qword_100719910);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v17, 1, v33) == 1) {
      return swift_release();
    }
    uint64_t v34 = &v17[*(int *)(v33 + 48)];
    os_log_t v35 = *v83;
    (*v83)(v11, v34, v5);
    long long v36 = *((_OWORD *)v17 + 1);
    v85[0] = *(_OWORD *)v17;
    v85[1] = v36;
    uint64_t v86 = *((void *)v17 + 4);
    int v37 = swift_dynamicCast();
    long long v38 = *v81;
    if (!v37)
    {
      v38(v4, 1, 1, v5);
      goto LABEL_5;
    }
    v38(v4, 0, 1, v5);
    if ((*v75)(v4, 1, v5) == 1)
    {
LABEL_5:
      (*v80)(v11, v5);
      sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
      unint64_t v23 = v84;
    }
    else
    {
      v35(v8, v4, v5);
      long long v39 = self;
      URL._bridgeToObjectiveC()(v40);
      int64_t v42 = v41;
      unint64_t v43 = v11;
      URL._bridgeToObjectiveC()(v44);
      long long v46 = v45;
      *(void *)&v85[0] = 0;
      unsigned int v47 = [v39 associateThumbnailsForDocumentAtURL:v42 withDocumentAtURL:v45 error:v85];

      if (v47)
      {
        long long v48 = *v80;
        id v49 = *(id *)&v85[0];
        v48(v8, v5);
        v48(v43, v5);
        Swift::String v4 = v73;
        Swift::String v11 = v43;
      }
      else
      {
        id v50 = *(id *)&v85[0];
        uint64_t v69 = _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v71 = static DOCLog.UI.getter();
        int v70 = static os_log_type_t.error.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = v68;
        *(void *)(v51 + 56) = &type metadata for String;
        *(void *)(v51 + 64) = sub_100073F48();
        *(void *)(v51 + 32) = 0xD000000000000018;
        long long v52 = (NSURL *)v67;
        *(void *)(v51 + 40) = v67;
        URL._bridgeToObjectiveC()(v52);
        uint64_t v54 = v53;
        uint64_t v55 = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
        *(void *)(v51 + 96) = v55;
        uint64_t v56 = sub_10035C084((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
        *(void *)(v51 + 104) = v56;
        *(void *)(v51 + 72) = v54;
        URL._bridgeToObjectiveC()(v57);
        *(void *)(v51 + 136) = v55;
        *(void *)(v51 + 144) = v56;
        *(void *)(v51 + 112) = v58;
        uint64_t v59 = _convertErrorToNSError(_:)();
        *(void *)(v51 + 176) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
        *(void *)(v51 + 184) = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
        *(void *)(v51 + 152) = v59;
        int64_t v60 = (void *)v71;
        os_log(_:dso:log:type:_:)();
        Swift::String v8 = v82;
        swift_errorRelease();

        swift_bridgeObjectRelease();
        long long v61 = *v80;
        (*v80)(v8, v5);
        long long v62 = v79;
        v61(v79, v5);
        uint64_t v71 = 0;
        Swift::String v4 = v73;
        Swift::String v11 = v62;
      }
      unint64_t v23 = v84;
    }
  }
}

uint64_t sub_10035C96C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035C9A4()
{
  swift_release();
  sub_10009B1B8(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10035C9EC(void *a1, uint64_t a2)
{
  sub_100346BD4(a1, a2, *(dispatch_group_t *)(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

uint64_t sub_10035C9F8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10035CA58(uint64_t a1, uint64_t a2)
{
  return sub_100347F44(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_10035CA68()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v8 + 8, v5);
}

void sub_10035CB78()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + v3);
  unint64_t v7 = *(void **)(v0 + v4);
  unint64_t v8 = *(NSObject **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100348610(v5, v0 + v2, v6, v7, v8);
}

uint64_t sub_10035CC20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10035CC88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10035CD18(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self sharedStore];
  id v12 = [v2 configuration];
  id v13 = [v11 interfaceStateForConfiguration:v12];

  if (v13)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Swift::String v14 = (void *)DOCNode.sourceIdentifier.getter();
    id v26 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v14 node:a1];

    if ([v26 canBeRestored])
    {
      uint64_t v15 = (char *)[v2 hierarchyController];
      id v24 = *(id *)&v15[OBJC_IVAR____TtC5Files22DOCHierarchyController_lastVisitedLocationSavingQueue];

      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v17 = (void *)swift_allocObject();
      id v18 = v26;
      v17[2] = v16;
      v17[3] = v18;
      void v17[4] = v13;
      aBlock[4] = sub_1003625FC;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006A3CD0;
      uint64_t v19 = _Block_copy(aBlock);
      swift_retain();
      id v26 = v26;
      id v23 = v13;
      static DispatchQoS.unspecified.getter();
      uint64_t v27 = _swiftEmptyArrayStorage;
      sub_1000801D8((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v20 = v24;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
      swift_release();
      swift_release();
    }
    else
    {

      id v21 = v26;
    }
  }
}

void sub_10035D174(uint64_t a1, char a2)
{
  id v4 = sub_10033CA80();
  id v5 = [v4 customView];

  if (v5)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClassUnconditional();
    unint64_t v7 = &selRef_startAnimating;
    if ((a2 & 1) == 0) {
      unint64_t v7 = &selRef_stopAnimating;
    }
    [v6 *v7];
    uint64_t v8 = (BOOL *)(a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled);
    swift_beginAccess();
    *uint64_t v8 = (a2 & 1) == 0;
    if (a2)
    {
      id v9 = [self sharedManager];
      [v9 unregisterKeyboardFocusable:a1];
    }
    _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
  }
  else
  {
    __break(1u);
  }
}

void sub_10035D298(void *a1)
{
  id v3 = [v1 configuration];
  unsigned int v4 = [v3 forSavingDocuments];

  if (v4)
  {
    id v5 = (char *)[v1 pickerFilenameView];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [a1 displayName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = *(void *)(*(void *)&v6[OBJC_IVAR____TtC5Files21DOCPickerFilenameView_pickerContext]
                     + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
      if (v8 && *(void *)(v8 + 16) == 1)
      {
        id v9 = sub_1000FE93C();
        id v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v9 setText:v10];
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_10035D470(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v1;
  id v160 = a1;
  uint64_t v167 = type metadata accessor for DOCOperationItem();
  id v3 = *(void **)(v167 - 8);
  __chkstk_darwin(v167);
  id v5 = (void **)((char *)v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t)v142 - v7;
  uint64_t v9 = type metadata accessor for CharacterSet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v149 = (char *)v142 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = (void *)type metadata accessor for URL();
  uint64_t v12 = *(v164 - 1);
  __chkstk_darwin(v164);
  unint64_t v168 = (unint64_t)v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v165 = (char *)v142 - v15;
  uint64_t v16 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v16 - 8);
  v148 = (char *)v142 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  id v21 = (char *)v142 - v20;
  id v22 = [v1 pickerContext:v19];

  if (v22)
  {
    id v23 = DOCFullDocumentManagerViewController.sidebarViewController.getter();
    if (!v23)
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    id v24 = v23;
    sub_100285C38();
  }
  v163 = v21;
  uint64_t v25 = (char *)[(id)isUniquelyReferenced_nonNull_native pickerContext];
  uint64_t v162 = isUniquelyReferenced_nonNull_native;
  if (!v25)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = &_swiftEmptyDictionarySingleton;
    uint64_t v65 = (void *)swift_allocObject();
    id v32 = v160;
    v65[2] = isUniquelyReferenced_nonNull_native;
    v65[3] = v32;
    v65[4] = 0;
    v65[5] = v29;
    v154 = v65;
    v166 = sub_10036260C;
LABEL_25:
    id v66 = v32;
    id v67 = (id)isUniquelyReferenced_nonNull_native;
    swift_retain();
    long long v68 = (char *)[v67 pickerContext];
    if (v68)
    {
      id v41 = v68;
      uint64_t v152 = v29;
      unint64_t v39 = *(void *)&v68[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove];
      if (v39)
      {
        swift_bridgeObjectRetain();
        uint64_t v69 = (void **)[v67 pickerOperationFor:v66];
        LODWORD(v165) = 1;
        switch((unint64_t)v69)
        {
          case 0uLL:
            swift_bridgeObjectRelease();
            int v70 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.error.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v71 = swift_allocObject();
            *(_OWORD *)(v71 + 16) = xmmword_1005A0030;
            *(void *)(v71 + 56) = &type metadata for String;
            *(void *)(v71 + 64) = sub_100073F48();
            *(void *)(v71 + 32) = 0xD000000000000013;
            *(void *)(v71 + 40) = 0x80000001005EB6A0;
            os_log(_:dso:log:type:_:)();
            swift_release();

            goto LABEL_30;
          case 1uLL:
            goto LABEL_37;
          case 2uLL:
            LODWORD(v165) = 0;
LABEL_37:
            if (v39 >> 62) {
              goto LABEL_82;
            }
            uint64_t v84 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v84) {
              goto LABEL_39;
            }
            goto LABEL_83;
          case 3uLL:
            goto LABEL_97;
          default:
            long long aBlock = v69;
            _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
            __break(1u);
            goto LABEL_97;
        }
      }

      uint64_t v29 = v152;
    }
    long long v75 = (SEL *)&unk_1006E3000;
    id v76 = [v67 configuration];
    uint64_t v77 = &selRef_setManageButtonTitle_;
    unsigned __int8 v78 = [v76 forPickingFolders];

    if ((v78 & 1) == 0) {
      goto LABEL_97;
    }
    BOOL v79 = 0;
    uint64_t v80 = 0;
    uint64_t v81 = 0;
    uint64_t v153 = 0;
    long long v82 = (void **)_swiftEmptyArrayStorage;
    int v83 = 1;
    goto LABEL_86;
  }
  id v26 = v25;
  uint64_t v145 = v10;
  uint64_t v146 = v9;
  uint64_t v147 = v12;
  uint64_t v27 = (void *)isUniquelyReferenced_nonNull_native;
  uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave];
  swift_bridgeObjectRetain();

  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = &_swiftEmptyDictionarySingleton;
  int64_t v30 = (void *)(v29 + 16);
  unint64_t v31 = (void *)swift_allocObject();
  id v32 = v160;
  v31[2] = v27;
  v31[3] = v32;
  v31[4] = v28;
  v31[5] = v29;
  v154 = v31;
  if (!v28)
  {
    v166 = sub_100362024;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v27;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain_n();
  id v33 = v32;
  uint64_t v34 = (uint64_t)v27;
  id v35 = v27;
  swift_retain();
  id v36 = [v35 configuration];
  unsigned int v37 = [v36 forSavingDocuments];

  if (!v37)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v72 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1005A0030;
    *(void *)(v73 + 56) = &type metadata for String;
    *(void *)(v73 + 64) = sub_100073F48();
    *(void *)(v73 + 32) = 0xD000000000000013;
    *(void *)(v73 + 40) = 0x80000001005EB6A0;
    os_log(_:dso:log:type:_:)();
    swift_release();

LABEL_30:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v152 = v29;
  long long v38 = *(char **)(v28 + 16);
  uint64_t v153 = v28;
  v143 = v38;
  if (!v38)
  {
    uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t, void *))(v147 + 56);
    swift_bridgeObjectRetain();
    id v3 = v164;
    v89(v163, 1, 1, v164);
    goto LABEL_49;
  }
  id v144 = v35;
  v166 = *(void (**)(unint64_t))(v147 + 16);
  unint64_t v39 = v28 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
  uint64_t v161 = *(void *)(v147 + 72);
  uint64_t v40 = v147 + 56;
  v158 = (unsigned int (**)(char *, uint64_t, void *))(v147 + 48);
  v156 = (void (**)(char *, char *, void *))(v147 + 32);
  uint64_t v167 = v147 + 16;
  v155 = (void (**)(unint64_t, void *))(v147 + 8);
  swift_bridgeObjectRetain();
  v159 = (void (**)(char *, uint64_t, uint64_t, void *))v40;
  v142[1] = v40 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  long long v151 = xmmword_10059B760;
  unint64_t v150 = 0x80000001005EB6A0;
  id v41 = v38;
  uint64_t v42 = v34;
  id v3 = v164;
  unint64_t v43 = v165;
  id v5 = (void **)&type metadata for String;
  do
  {
    long long v45 = v163;
    ((void (*)(char *, unint64_t, void *))v166)(v163, v39, v3);
    v157 = *v159;
    v157(v45, 0, 1, v3);
    if ((*v158)(v45, 1, v3) == 1)
    {
      uint64_t v34 = v42;
      id v35 = v144;
      uint64_t v89 = v157;
      goto LABEL_49;
    }
    (*v156)(v43, v45, v3);
    uint64_t v8 = URL.startAccessingSecurityScopedResource()();
    if ((v8 & 1) == 0)
    {
      long long v46 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = v151;
      *(void *)(v47 + 56) = &type metadata for String;
      unint64_t v48 = sub_100073F48();
      *(void *)(v47 + 64) = v48;
      *(void *)(v47 + 32) = 0xD000000000000013;
      *(void *)(v47 + 40) = v150;
      uint64_t v49 = URL.absoluteString.getter();
      *(void *)(v47 + 96) = &type metadata for String;
      *(void *)(v47 + 104) = v48;
      *(void *)(v47 + 72) = v49;
      *(void *)(v47 + 80) = v50;
      id v3 = v164;
      os_log(_:dso:log:type:_:)();

      unint64_t v43 = v165;
      swift_bridgeObjectRelease();
    }
    uint64_t v51 = v168;
    ((void (*)(unint64_t, char *, void *))v166)(v168, v43, v3);
    swift_beginAccess();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v169 = (void *)*v30;
    long long v52 = v169;
    *int64_t v30 = 0x8000000000000000;
    unint64_t v54 = sub_10017BB10(v51);
    uint64_t v55 = v52[2];
    BOOL v56 = (v53 & 1) == 0;
    uint64_t v57 = v55 + v56;
    if (__OFADD__(v55, v56))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      swift_bridgeObjectRetain();
      uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v84)
      {
LABEL_39:
        v164 = v41;
        long long aBlock = (void **)_swiftEmptyArrayStorage;
        sub_100190F0C(0, v84 & ~(v84 >> 63), 0);
        if (v84 < 0)
        {
          __break(1u);
LABEL_90:
          __break(1u);
          goto LABEL_91;
        }
        uint64_t v85 = v84;
        long long v82 = aBlock;
        unint64_t v168 = v39;
        if ((v39 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v84; ++i)
          {
            *(void *)uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_storeEnumTagMultiPayload();
            long long aBlock = v82;
            unint64_t v88 = (unint64_t)v82[2];
            unint64_t v87 = (unint64_t)v82[3];
            if (v88 >= v87 >> 1)
            {
              sub_100190F0C(v87 > 1, v88 + 1, 1);
              long long v82 = aBlock;
            }
            v82[2] = (void *)(v88 + 1);
            sub_10010C430(v8, (uint64_t)v82+ ((*((unsigned __int8 *)v3 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v3 + 80))+ v3[9] * v88);
          }
        }
        else
        {
          unint64_t v107 = (void **)(v39 + 32);
          uint64_t v108 = v85;
          do
          {
            uint64_t v109 = v85;
            unint64_t v110 = *v107;
            *id v5 = *v107;
            swift_storeEnumTagMultiPayload();
            long long aBlock = v82;
            unint64_t v112 = (unint64_t)v82[2];
            unint64_t v111 = (unint64_t)v82[3];
            id v113 = v110;
            if (v112 >= v111 >> 1)
            {
              sub_100190F0C(v111 > 1, v112 + 1, 1);
              long long v82 = aBlock;
            }
            v82[2] = (void *)(v112 + 1);
            sub_10010C430((uint64_t)v5, (uint64_t)v82+ ((*((unsigned __int8 *)v3 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v3 + 80))+ v3[9] * v112);
            ++v107;
            --v108;
            uint64_t v85 = v109;
          }
          while (v108);
        }

        swift_bridgeObjectRelease();
        uint64_t isUniquelyReferenced_nonNull_native = v162;
      }
      else
      {
LABEL_83:

        swift_bridgeObjectRelease();
        long long v82 = (void **)_swiftEmptyArrayStorage;
        uint64_t v85 = v84;
      }
      uint64_t v80 = 0;
      uint64_t v153 = 0;
      BOOL v79 = v85 > 1;
      int v83 = 1;
      uint64_t v29 = v152;
      uint64_t v77 = &selRef_setManageButtonTitle_;
      long long v75 = (SEL *)&unk_1006E3000;
      goto LABEL_85;
    }
    char v58 = v53;
    if (v52[3] >= v57)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100359FFC();
      }
    }
    else
    {
      sub_10035136C(v57, isUniquelyReferenced_nonNull_native);
      unint64_t v59 = sub_10017BB10(v168);
      if ((v58 & 1) != (v60 & 1)) {
        goto LABEL_93;
      }
      unint64_t v54 = v59;
    }
    uint64_t v42 = v162;
    long long v61 = v169;
    if (v58)
    {
      *(unsigned char *)(v169[7] + v54) = v8 & 1;
      id v3 = v164;
    }
    else
    {
      v169[(v54 >> 6) + 8] |= 1 << v54;
      id v3 = v164;
      ((void (*)(unint64_t, unint64_t, void *))v166)(v61[6] + v54 * v161, v168, v164);
      *(unsigned char *)(v61[7] + v54) = v8 & 1;
      uint64_t v62 = v61[2];
      BOOL v63 = __OFADD__(v62, 1);
      uint64_t v64 = v62 + 1;
      if (v63) {
        goto LABEL_81;
      }
      v61[2] = v64;
    }
    *int64_t v30 = v61;
    swift_bridgeObjectRelease();
    int64_t v44 = (void (*)(char *, void *))*v155;
    (*v155)(v168, v3);
    swift_endAccess();
    unint64_t v43 = v165;
    v44(v165, v3);
    v39 += v161;
    --v41;
  }
  while (v41);
  uint64_t v34 = v42;
  id v35 = v144;
  uint64_t v89 = v157;
  v157(v163, 1, 1, v3);
LABEL_49:
  swift_bridgeObjectRelease();
  uint64_t v90 = (char *)[v35 pickerFilenameView];
  long long v91 = v90;
  if (!v90)
  {
    id v94 = 0;
    uint64_t v29 = v152;
    long long v75 = (SEL *)&unk_1006E3000;
    uint64_t isUniquelyReferenced_nonNull_native = v34;
    goto LABEL_58;
  }
  uint64_t v92 = *(void *)(*(void *)&v90[OBJC_IVAR____TtC5Files21DOCPickerFilenameView_pickerContext]
                  + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  uint64_t isUniquelyReferenced_nonNull_native = v34;
  if (!v92 || *(void *)(v92 + 16) != 1)
  {

    long long v91 = 0;
    id v94 = 0;
LABEL_56:
    uint64_t v29 = v152;
    long long v75 = (SEL *)&unk_1006E3000;
    goto LABEL_58;
  }
  id v93 = sub_1000FE93C();
  id v94 = [v93 text];

  if (!v94)
  {

    long long v91 = 0;
    goto LABEL_56;
  }
  id v95 = v35;
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = v97;

  v99._countAndFlagsBits = 46;
  v99._object = (void *)0xE100000000000000;
  if (String.hasPrefix(_:)(v99))
  {
    sub_1002EEF3C();
    swift_allocError();
    unsigned char *v100 = 2;
    goto LABEL_71;
  }
  UIImage_optional v114 = v149;
  CharacterSet.init(charactersIn:)();
  long long aBlock = (void **)v96;
  uint64_t v171 = v98;
  sub_10009D28C();
  StringProtocol.rangeOfCharacter(from:options:range:)();
  if ((v115 & 1) == 0)
  {
    sub_1002EEF3C();
    swift_allocError();
    *uint64_t v116 = 3;
    (*(void (**)(char *, uint64_t))(v145 + 8))(v114, v146);
LABEL_71:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.localizedDescription.getter();
    NSString v117 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v118 = [self alertControllerWithTitle:0 message:v117 preferredStyle:1];

    id v119 = (id)_DocumentManagerBundle();
    if (v119)
    {
      v120 = v119;
      v177._object = (void *)0xE200000000000000;
      v121._countAndFlagsBits = 19279;
      v121._object = (void *)0xE200000000000000;
      v122._countAndFlagsBits = 0x617A696C61636F4CLL;
      v122._object = (void *)0xEB00000000656C62;
      v123._countAndFlagsBits = 0;
      v123._object = (void *)0xE000000000000000;
      v177._countAndFlagsBits = 19279;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v121, v122, (NSBundle)v120, v123, v177);

      NSString v124 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v125 = [self actionWithTitle:v124 style:0 handler:0];

      [v118 addAction:v125];
      [v35 presentViewController:v118 animated:1 completion:0];

      swift_release();
      swift_errorRelease();
      return swift_release();
    }
LABEL_92:
    __break(1u);
LABEL_93:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
LABEL_97:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x10035EA70);
  }
  (*(void (**)(char *, uint64_t))(v145 + 8))(v114, v146);
  NSString v126 = String._bridgeToObjectiveC()();
  if (!v143)
  {
    uint64_t v127 = (uint64_t)v148;
    v89(v148, 1, 1, v3);
    goto LABEL_78;
  }
  uint64_t v127 = (uint64_t)v148;
  if (!*(void *)(v153 + 16)) {
    goto LABEL_90;
  }
  uint64_t v128 = v147;
  (*(void (**)(char *, unint64_t, void *))(v147 + 16))(v148, v153 + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80)), v3);
  v89((char *)v127, 0, 1, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v128 + 48))(v127, 1, v3) != 1)
  {
    URL.pathExtension.getter();
    (*(void (**)(uint64_t, void *))(v128 + 8))(v127, v3);
    NSString v129 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_79;
  }
LABEL_78:
  sub_1001939F8(v127);
  NSString v129 = 0;
LABEL_79:
  uint64_t v29 = v152;
  long long v75 = (SEL *)&unk_1006E3000;
  id v130 = [v126 fp_filenameFromDisplayNameWithExtension:v129];

  long long v91 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v94 = v131;
  swift_bridgeObjectRelease();

  id v35 = v95;
LABEL_58:
  id v101 = [v35 v75[192]];
  char v102 = [v101 isContentManaged];

  id v103 = [v35 v75[192]];
  id v104 = [v103 interactionMode];

  if (v104 == (id)2)
  {
    LODWORD(v165) = 1;
  }
  else
  {
    if (v104 != (id)3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    LODWORD(v165) = 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v105 = v153;
  long long v82 = (void **)sub_1003621C0(v153, (uint64_t)v91, (uint64_t)v94, v102);
  uint64_t v80 = 2;
  swift_bridgeObjectRelease_n();
  unint64_t v106 = *(void *)(v105 + 16);
  swift_bridgeObjectRelease();
  int v83 = 0;
  BOOL v79 = v106 > 1;
  v166 = sub_100362024;
  uint64_t v77 = &selRef_setManageButtonTitle_;
LABEL_85:
  uint64_t v81 = v165;
LABEL_86:
  id v132 = [(id)isUniquelyReferenced_nonNull_native v75[192]];
  unsigned int v133 = [v132 v77[22]];

  if (!v133)
  {
    swift_bridgeObjectRelease();
    id v138 = [self defaultManager];
    uint64_t v139 = (uint64_t)v154;
    swift_retain();
    sub_100535854(v81, (uint64_t)v82, v160, v79, v80, v83, (void *)isUniquelyReferenced_nonNull_native, v166, v139);

    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v140 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v174 = sub_100362068;
    uint64_t v175 = v140;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v171 = 1107296256;
    v172 = sub_1000666D8;
    v173 = &unk_1006A39B0;
    v141 = _Block_copy(&aBlock);
    swift_release();
    DOCRunInMainThread();
    swift_release();
    _Block_release(v141);
    return swift_release();
  }
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v134 = swift_allocObject();
  *(_OWORD *)(v134 + 16) = xmmword_1005A04F0;
  id v135 = v160;
  *(void *)(v134 + 32) = v160;
  long long aBlock = (void **)v134;
  specialized Array._endMutation()();
  unint64_t v136 = (unint64_t)aBlock;
  id v137 = v135;
  sub_10035EA80(v136, (void *)isUniquelyReferenced_nonNull_native, (uint64_t)v137, v153, v29);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10035EA80(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v102 = a5;
  uint64_t v101 = a4;
  uint64_t v105 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  id v103 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for Date();
  uint64_t v96 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  char v115 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UTType();
  __chkstk_darwin(v10 - 8);
  NSString v117 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for DOCSmartFolderInputFile();
  unint64_t v107 = *(void (***)(char *, uint64_t))(v116 - 8);
  __chkstk_darwin(v116);
  NSString v124 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  unint64_t v112 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  id v113 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  __chkstk_darwin(v14 - 8);
  unint64_t v111 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v16 - 8);
  unint64_t v110 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v122 = (void *)type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v108 = (void **)*(v122 - 1);
  __chkstk_darwin(v122);
  uint64_t v109 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  unint64_t v106 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v20);
  uint64_t v98 = type metadata accessor for DispatchQoS();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  id v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v26 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v123 = (void *)a3;
  uint64_t v27 = a2;
  sub_10035CD18(a3);
  if (!a1)
  {
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = a2;
    id v130 = sub_100362498;
    v131 = (void *)v34;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v127 = 1107296256;
    uint64_t v128 = sub_1000666D8;
    NSString v129 = &unk_1006A3A78;
    id v35 = _Block_copy(&aBlock);
    id v36 = a2;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v35);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v130 = sub_1003624A0;
    v131 = (void *)v37;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v127 = 1107296256;
    long long v38 = &unk_1006A3AA0;
LABEL_26:
    uint64_t v128 = sub_1000666D8;
    NSString v129 = v38;
    long long v91 = _Block_copy(&aBlock);
    swift_release();
    DOCRunInMainThread();
    _Block_release(v91);
    return;
  }
  unint64_t v28 = a1;
  uint64_t v121 = swift_allocObject();
  *(void *)(v121 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  dispatch_group_t v120 = dispatch_group_create();
  uint64_t v29 = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v24 + 104))(v26, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v23);
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  sub_1000801D8((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v95 = v22;
  uint64_t v94 = v29;
  id v119 = (id)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  ((void (*)(char *, void, void *))v108[13])(v109, enum case for DOCAnalyticsActionEvent.Action.movedTo(_:), v122);
  Swift::String v122 = v27;
  id v30 = [v27 configuration];
  swift_bridgeObjectRetain();
  DOCAnalyticsActionEvent.FileProvider.init(items:)();
  id v31 = [self mainBundle];
  id v32 = [v31 bundleIdentifier];

  unint64_t v33 = v28;
  if (v32)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v92 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  DOCNode.sourceIdentifier.getter();
  DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
  (*(void (**)(char *, void, uint64_t))(v112 + 104))(v113, enum case for DOCAnalyticsActionEvent.ViewMode.unknown(_:), v114);
  DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
  type metadata accessor for DOCAnalyticsManager();
  unint64_t v39 = (void *)static DOCAnalyticsManager.shared.getter();
  DOCAnalyticsManager.sendActionEvent(_:)();

  unint64_t v93 = v28 >> 62;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v40 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v41 = v107;
  if (!v40)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    if (v93)
    {
      swift_bridgeObjectRetain();
      uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v65 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    id v66 = v122;
    id v67 = v95;
    if (v65 > 0)
    {
      id v68 = [v122 pickerFilenameView];
      if (v68)
      {
        uint64_t v69 = v68;
        swift_beginAccess();
        swift_bridgeObjectRetain();

        int v70 = (char *)[v66 pickerContext];
        if (v70)
        {
          uint64_t v71 = *(void *)&v70[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave];

          if (v71)
          {
            sub_10009E6C4(0, &qword_10070E2D0);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v73 = (id)FPTagsFromDOCTags();

            sub_10009E6C4(0, &qword_10070AE60);
            uint64_t v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            swift_bridgeObjectRetain();
            sub_100362070(v33, v74);
            swift_bridgeObjectRelease_n();
            id v75 = [self shared];
            id v76 = objc_allocWithZone((Class)DOCSetTagsOperation);
            Class v77 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            sub_1000CBE70(&qword_100708DA8);
            Class v78 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v79 = [v76 initWithItems:v77 tagsLists:v78 isUndoable:0 shouldClearUndoStack:0 undoManager:v75];

            id v80 = [self defaultManager];
            [v80 scheduleAction:v79];

LABEL_25:
            uint64_t v81 = (void *)static OS_dispatch_queue.main.getter();
            long long v82 = (void *)swift_allocObject();
            uint64_t v83 = v102;
            v82[2] = v101;
            v82[3] = v83;
            uint64_t v84 = v121;
            v82[4] = v66;
            v82[5] = v84;
            id v130 = sub_10036254C;
            v131 = v82;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v127 = 1107296256;
            uint64_t v128 = sub_1000666D8;
            NSString v129 = &unk_1006A3B68;
            uint64_t v85 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            id v86 = v66;
            swift_retain();
            static DispatchQoS.unspecified.getter();
            id v125 = _swiftEmptyArrayStorage;
            sub_1000801D8((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_1000CBE70((uint64_t *)&unk_100705390);
            sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
            unint64_t v87 = v103;
            uint64_t v88 = v105;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            dispatch_group_t v89 = v120;
            OS_dispatch_group.notify(qos:flags:queue:execute:)();
            _Block_release(v85);

            (*(void (**)(char *, uint64_t))(v104 + 8))(v87, v88);
            (*(void (**)(char *, uint64_t))(v97 + 8))(v67, v98);
            (*(void (**)(char *, uint64_t))(v99 + 8))(v106, v100);
            swift_release();
            swift_release();
            uint64_t v90 = swift_allocObject();
            swift_unknownObjectWeakInit();
            id v130 = sub_1003624A0;
            v131 = (void *)v90;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v127 = 1107296256;
            long long v38 = &unk_1006A3B90;
            goto LABEL_26;
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v114 = type metadata accessor for DOCSmartFolderManager();
  id v113 = (char *)self;
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    unint64_t v110 = (char *)(v33 & 0xC000000000000001);
    uint64_t v109 = (char *)(v96 + 8);
    uint64_t v108 = &v128;
    unint64_t v107 = v41 + 1;
    unint64_t v112 = v33;
    unint64_t v111 = (char *)v40;
    do
    {
      if (v110) {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v43 = *(id *)(v33 + 8 * (void)v42 + 32);
      }
      int64_t v44 = v43;
      ++v42;
      id v45 = [v43 displayName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v46 = [v44 contentType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v47 = v115;
      Date.init()();
      DOCSmartFolderInputFile.init(filename:filetype:dateSaved:)();
      unint64_t v48 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      uint64_t v49 = v123;
      dispatch thunk of DOCSmartFolderManager.register(savedFile:in:)();

      id v50 = [v122 configuration];
      id v51 = [v50 hostIdentifier];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v52 = v49;
      Date.init()();
      id v53 = objc_allocWithZone((Class)DOCHotFolderEvent);
      NSString v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class v55 = Date._bridgeToObjectiveC()().super.isa;
      id v56 = [v53 initWithAppBundleIdentifier:v54 folderItem:v52 type:1 lastUsedDate:v55 frecency:1.0];

      (*(void (**)(char *, uint64_t))v109)(v47, v118);
      uint64_t v57 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      DOCSmartFolderManager.register(event:)();

      dispatch_group_t v58 = v120;
      dispatch_group_enter(v120);
      id v59 = [v113 defaultManager];
      char v60 = (void *)swift_allocObject();
      id v61 = v119;
      _OWORD v60[2] = v58;
      v60[3] = v61;
      v60[4] = v121;
      id v130 = sub_1003624F0;
      v131 = v60;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v127 = 1107296256;
      uint64_t v128 = sub_1001B6B50;
      NSString v129 = &unk_1006A3B18;
      uint64_t v62 = _Block_copy(&aBlock);
      BOOL v63 = v58;
      id v64 = v61;
      swift_retain();
      swift_release();
      [v59 fetchURLForItem:v44 completionHandler:v62];
      _Block_release(v62);

      (*v107)(v124, v116);
      unint64_t v33 = v112;
    }
    while (v111 != v42);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_10035FD70(void *a1)
{
  id v2 = [a1 delegate];
  if (v2)
  {
    id v3 = v2;
    if ([v2 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"])
    {
      type metadata accessor for URL();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v3 documentBrowser:a1 didPickDocumentsAtURLs:isa];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_10035FE5C(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, void *a5)
{
  id v29 = a5;
  uint64_t v32 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v22 = (char *)&v28 - v21;
  sub_1002827DC(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1001939F8((uint64_t)v15);
    dispatch_group_leave(a3);
  }
  else
  {
    unint64_t v28 = a3;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
    sub_10009E6C4(0, &qword_100708ED0);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v16);
    id v23 = sub_10043AF68((uint64_t)v19, 0);
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v28;
    _OWORD v24[2] = v29;
    v24[3] = v23;
    v24[4] = v25;
    aBlock[4] = sub_1003625A4;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006A3C30;
    id v26 = _Block_copy(aBlock);
    swift_retain();
    id v29 = v23;
    uint64_t v27 = v25;
    static DispatchQoS.unspecified.getter();
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_1000801D8((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    swift_release();
  }
}

void sub_1003603F0(uint64_t a1, void *a2, NSObject *a3)
{
  swift_beginAccess();
  id v6 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  dispatch_group_leave(a3);
}

void sub_100360498(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v34 = a3;
    uint64_t v35 = a4;
    v33[2] = a1;
    if (v15)
    {
      uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v16 = v9 + 16;
      long long v38 = (uint64_t *)(a2 + 16);
      unint64_t v39 = v17;
      uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
      uint64_t v19 = *(void *)(v16 + 56);
      unint64_t v20 = v16 + 40;
      uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
      id v36 = (void (**)(char *, char *, uint64_t))(v16 + 16);
      uint64_t v37 = v19;
      uint64_t v40 = v16;
      id v22 = (void (**)(char *, uint64_t))(v16 - 8);
      swift_bridgeObjectRetain();
      v33[1] = v20 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v39(v14, v18, v8);
        id v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v20;
        (*(void (**)(char *, void, uint64_t, uint64_t))v20)(v14, 0, 1, v8);
        if ((*v21)(v14, 1, v8) == 1) {
          break;
        }
        (*v36)(v11, v14, v8);
        uint64_t v24 = v38;
        swift_beginAccess();
        uint64_t v25 = *v24;
        if (*(void *)(v25 + 16) && (unint64_t v26 = sub_10017BB10((uint64_t)v11), (v27 & 1) != 0))
        {
          char v28 = *(unsigned char *)(*(void *)(v25 + 56) + v26);
          swift_endAccess();
          if (v28) {
            URL.stopAccessingSecurityScopedResource()();
          }
        }
        else
        {
          swift_endAccess();
        }
        (*v22)(v11, v8);
        v18 += v37;
        if (!--v15)
        {
          v23(v14, 1, 1, v8);
          break;
        }
      }
    }
    else
    {
      id v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
      v29(v14, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    a3 = v34;
    a4 = v35;
  }
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  *(void *)(v30 + 24) = a4;
  aBlock[4] = sub_100362598;
  aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006A3BE0;
  uint64_t v31 = _Block_copy(aBlock);
  id v32 = a3;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v31);
}

void sub_1003607EC(void *a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v24 - 8);
  double v5 = __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 delegate];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = (SEL *)&unk_1006E3000;
    if ([v8 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"])
    {
      swift_beginAccess();
      unint64_t v11 = *(void *)(a2 + 16);
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        if (v12) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v12)
        {
LABEL_5:
          id v22 = v9;
          id v23 = a1;
          uint64_t v25 = _swiftEmptyArrayStorage;
          sub_100190C40(0, v12 & ~(v12 >> 63), 0);
          if (v12 < 0)
          {
            __break(1u);
            return;
          }
          uint64_t v13 = 0;
          uint64_t v14 = v25;
          do
          {
            if ((v11 & 0xC000000000000001) != 0) {
              id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v15 = *(id *)(v11 + 8 * v13 + 32);
            }
            uint64_t v16 = v15;
            id v17 = [v15 url];
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v25 = v14;
            unint64_t v19 = v14[2];
            unint64_t v18 = v14[3];
            if (v19 >= v18 >> 1)
            {
              sub_100190C40(v18 > 1, v19 + 1, 1);
              uint64_t v14 = v25;
            }
            ++v13;
            v14[2] = v19 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v19, v7, v24);
          }
          while (v12 != v13);
          swift_bridgeObjectRelease();
          uint64_t v9 = v22;
          a1 = v23;
          uint64_t v10 = (SEL *)&unk_1006E3000;
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v9 v10[287]:a1:isa];
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
  }
}

void sub_100360AD4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = (char *)[Strong effectiveBrowserViewController];
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = (void **)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      double v5 = *v4;
      if (*v4)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v6 = swift_dynamicCastClass();
        if (v6)
        {
          uint64_t v7 = v6;
          id v8 = v5;

          uint64_t v9 = swift_allocObject();
          *(void *)(v9 + 16) = v7;
          *(unsigned char *)(v9 + 24) = 1;
          v11[4] = sub_10021DE1C;
          v11[5] = v9;
          v11[0] = _NSConcreteStackBlock;
          v11[1] = 1107296256;
          v11[2] = sub_1000666D8;
          v11[3] = &unk_1006A3A28;
          uint64_t v10 = _Block_copy(v11);
          id v3 = v8;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v10);
        }
      }

      uint64_t v1 = v3;
    }
  }
}

uint64_t sub_100360CBC(void *a1)
{
  id v2 = v1;
  uint64_t v4 = (char *)[v1 pickerFilenameView];
  if (v4)
  {
    double v5 = v4;
    uint64_t v6 = *(void *)(*(void *)&v4[OBJC_IVAR____TtC5Files21DOCPickerFilenameView_pickerContext]
                   + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
    if (v6
      && *(void *)(v6 + 16) == 1
      && (v7 = sub_1000FE93C(), id v8 = [v7 text], v7, v8))
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v9 = String.count.getter();
      swift_bridgeObjectRelease();
      if (!v9) {
        return 0;
      }
    }
    else
    {
    }
  }
  uint64_t v10 = (char *)[v2 pickerContext];
  if (v10)
  {
    unint64_t v11 = v10;
    uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave];
    swift_bridgeObjectRetain();

    if (v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = (char *)[v2 pickerContext];
      if (v13)
      {
        uint64_t v14 = v13;
        id v15 = &v13[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave];
        swift_beginAccess();
        uint64_t v16 = *(void *)v15;
        swift_bridgeObjectRetain();

        id v17 = [self defaultManager];
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v19 = [v17 eligibleActionsForDroppingUTIs:isa underItem:a1];

        type metadata accessor for FPAction(0);
        sub_1000801D8((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
        uint64_t v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        id v21 = [self defaultPermission];
        id v22 = [v2 configuration];
        unsigned int v89 = [v21 canAppWithConfiguration:v22 handleNode:a1];

        id v23 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1005A0500;
        *(void *)(v24 + 56) = &type metadata for String;
        unint64_t v25 = sub_100073F48();
        *(void *)(v24 + 64) = v25;
        *(void *)(v24 + 32) = 0xD000000000000015;
        *(void *)(v24 + 40) = 0x80000001005EB540;
        id v26 = [a1 displayName];
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;

        *(void *)(v24 + 96) = &type metadata for String;
        *(void *)(v24 + 104) = v25;
        *(void *)(v24 + 72) = v27;
        *(void *)(v24 + 80) = v29;
        *(void *)(v24 + 136) = sub_1000CBE70(&qword_10070AEB0);
        *(void *)(v24 + 144) = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
        *(void *)(v24 + 112) = v16;
        *(void *)(v24 + 176) = sub_1000CBE70(&qword_100711E90);
        *(void *)(v24 + 184) = sub_100073DF0(&qword_100711E98, &qword_100711E90);
        *(void *)(v24 + 152) = v20;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        id v30 = [v2 configuration];
        id v31 = [v30 interactionMode];

        switch((unint64_t)v31)
        {
          case 0uLL:
          case 1uLL:
            goto LABEL_57;
          case 2uLL:
            id v32 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.debug.getter();
            uint64_t v33 = swift_allocObject();
            *(_OWORD *)(v33 + 16) = xmmword_1005A0030;
            *(void *)(v33 + 56) = &type metadata for String;
            *(void *)(v33 + 64) = v25;
            *(void *)(v33 + 32) = 0xD000000000000015;
            *(void *)(v33 + 40) = 0x80000001005EB540;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            id v34 = FPActionCopy;
            int v35 = sub_1005350BC(v34, v20);

            swift_bridgeObjectRelease();
            return v35 & v89;
          case 3uLL:
            uint64_t v47 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.debug.getter();
            uint64_t v48 = swift_allocObject();
            *(_OWORD *)(v48 + 16) = xmmword_1005A0030;
            *(void *)(v48 + 56) = &type metadata for String;
            *(void *)(v48 + 64) = v25;
            *(void *)(v48 + 32) = 0xD000000000000015;
            *(void *)(v48 + 40) = 0x80000001005EB540;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            id v49 = FPActionReparent;
            int v50 = sub_1005350BC(v49, v20);

            swift_bridgeObjectRelease();
            if ((v50 & v89) != 0) {
              return 2;
            }
            else {
              return 0;
            }
          default:
            id v87 = [v2 configuration];
            [v87 interactionMode];

            type metadata accessor for DOCDocumentInteractionMode(0);
            doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
            __break(1u);
LABEL_57:
            _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
            JUMPOUT(0x1003619CCLL);
        }
      }
    }
  }
  uint64_t v37 = (char *)[v2 pickerContext];
  if (!v37) {
    goto LABEL_39;
  }
  long long v38 = v37;
  unint64_t v39 = *(void *)&v37[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove];
  swift_bridgeObjectRetain();

  if (!v39) {
    goto LABEL_39;
  }
  if (!(v39 >> 62))
  {
    uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v40) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_38:
    swift_bridgeObjectRelease_n();
LABEL_39:
    id v73 = [v2 configuration];
    unsigned int v74 = [v73 forPickingFolders];

    if (!v74) {
      return 0;
    }
    uint64_t result = (uint64_t)[v2 effectiveBrowserViewController];
    if (!result) {
      return result;
    }
    id v75 = (void *)result;
    id v76 = (void **)(result + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess();
    Class v77 = *v76;
    if (!v77
      || (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v78 = swift_dynamicCastClass()) == 0))
    {

      return 0;
    }
    uint64_t v79 = v78;
    id v80 = v77;

    uint64_t v81 = (char *)objc_retain(*(id *)(v79
                                    + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

    long long v82 = *(void **)&v81[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    id v83 = v82;

    if (!v82) {
      return 0;
    }
    unsigned int v84 = [v83 supportsPickingFolders];

    if (!v84) {
      return 0;
    }
    id v85 = [v2 configuration];
    id v86 = [v85 interactionMode];

    if (v86 == (id)1) {
      return 3;
    }
    else {
      return 0;
    }
  }
LABEL_17:
  if ((v39 & 0xC000000000000001) != 0)
  {
    id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    if (v39 >> 62) {
      goto LABEL_55;
    }
    uint64_t v41 = v39 & 0xFFFFFFFFFFFFFF8;
  }
  else
  {
    uint64_t v41 = v39 & 0xFFFFFFFFFFFFFF8;
    if (!*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    id v88 = *(id *)(v39 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = *(void *)(v41 + 16);
  while (v42)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v42 & 0x8000000000000000) == 0)
    {
      uint64_t v43 = 0;
      do
      {
        if ((v39 & 0xC000000000000001) != 0) {
          id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v44 = *(id *)(v39 + 8 * v43 + 32);
        }
        id v45 = v44;
        ++v43;
        id v46 = [v44 parentItemID];

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v42 != v43);
      break;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  id v51 = [a1 itemID];
  char v52 = sub_100109418((uint64_t)v51, (unint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();

  if (v52)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  id v53 = [self defaultManager];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class v54 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v55 = [v53 eligibleActionsForDroppingItems:v54 underItem:a1];

  type metadata accessor for FPAction(0);
  sub_1000801D8((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
  uint64_t v56 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v57 = self;
  id v58 = [v57 defaultPermission];
  id v59 = [v2 configuration];
  id v60 = [v58 userActionForConfiguration:v59];

  id v61 = [v57 defaultPermission];
  unsigned int v62 = [v61 canItem:v88 performAction:v60 item:a1];

  uint64_t v63 = static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1005A0230;
  *(void *)(v64 + 56) = &type metadata for String;
  unint64_t v65 = sub_100073F48();
  *(void *)(v64 + 64) = v65;
  *(void *)(v64 + 32) = 0xD000000000000015;
  *(void *)(v64 + 40) = 0x80000001005EB540;
  id v66 = [a1 displayName];
  uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v69 = v68;

  *(void *)(v64 + 96) = &type metadata for String;
  *(void *)(v64 + 104) = v65;
  *(void *)(v64 + 72) = v67;
  *(void *)(v64 + 80) = v69;
  *(void *)(v64 + 136) = sub_1000CBE70(&qword_100711E90);
  *(void *)(v64 + 144) = sub_100073DF0(&qword_100711E98, &qword_100711E90);
  *(void *)(v64 + 112) = v56;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v70 = FPActionReparent;
  LOBYTE(v63) = sub_1005350BC(v70, v56);

  if ((v63 & 1) != 0 && v62)
  {

    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    id v71 = FPActionCopy;
    int v72 = sub_1005350BC(v71, v56);

    swift_bridgeObjectRelease();
    return v72 & v62;
  }
}

uint64_t sub_100361A2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = (void *)result;
    unint64_t v11 = self;
    id v28 = 0;
    id v12 = [v11 archivedDataWithRootObject:a2 requiringSecureCoding:1 error:&v28];
    id v13 = v28;
    if (v12)
    {
      uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      Class isa = Data._bridgeToObjectiveC()().super.isa;
      [a3 setLastUsedOpenSaveLocation:isa];

      id v18 = [self sharedStore];
      id v19 = [v10 configuration];
      [v18 updateInterfaceState:a3 forConfiguration:v19];

      return sub_100021020(v14, v16);
    }
    else
    {
      uint64_t v20 = v13;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      static Logger.DocumentManager.getter();
      swift_errorRetain();
      swift_errorRetain();
      id v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        os_log_t v27 = v21;
        id v23 = (uint8_t *)swift_slowAlloc();
        id v26 = (void *)swift_slowAlloc();
        *(_DWORD *)id v23 = 138412290;
        swift_errorRetain();
        uint64_t v24 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v28 = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v26 = v24;
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v25 = v27;
        _os_log_impl((void *)&_mh_execute_header, v27, v22, "Failed to store the last used save location: %@", v23, 0xCu);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return result;
}

void sub_100361DBC()
{
  uint64_t v1 = (char *)[v0 effectiveBrowserViewController];
  if (v1)
  {
    id v2 = v1;
    id v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v4 = *v3;
    if (v4)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      if (swift_dynamicCastClass())
      {
        id v5 = v4;

        _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
        id v2 = v5;
      }
    }
  }
}

void sub_100361E6C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = (char *)[Strong effectiveBrowserViewController];
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = (void **)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      id v5 = *v4;
      if (*v4)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v6 = swift_dynamicCastClass();
        if (v6)
        {
          uint64_t v7 = v6;
          id v8 = v5;

          uint64_t v9 = swift_allocObject();
          *(void *)(v9 + 16) = v7;
          *(unsigned char *)(v9 + 24) = 0;
          v11[4] = sub_100362608;
          v11[5] = v9;
          v11[0] = _NSConcreteStackBlock;
          v11[1] = 1107296256;
          v11[2] = sub_1000666D8;
          v11[3] = &unk_1006A3C80;
          uint64_t v10 = _Block_copy(v11);
          id v3 = v8;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v10);
        }
      }

      uint64_t v1 = v3;
    }
  }
}

uint64_t sub_100361FE8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100362024(unint64_t a1)
{
  sub_10035EA80(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100362030()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100362068()
{
}

void *sub_100362070(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1001911E8(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v8 = v7;
      swift_bridgeObjectRetain();

      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001911E8(v9 > 1, v10 + 1, 1);
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = a2;
      if (v4 == v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1003621C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v29 = a2;
  uint64_t v28 = type metadata accessor for DOCOperationItem();
  uint64_t v8 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  id v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v23[1] = v4;
    id v30 = _swiftEmptyArrayStorage;
    sub_100190F0C(0, v11, 0);
    id v12 = v30;
    uint64_t v27 = type metadata accessor for URL();
    uint64_t v13 = *(void *)(v27 - 8);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v25 = v13 + 16;
    id v26 = v14;
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v24 = *(void *)(v13 + 72);
    char v16 = a4 & 1;
    do
    {
      uint64_t v17 = sub_1000CBE70(&qword_100711EA0);
      id v18 = &v10[*(int *)(v17 + 48)];
      uint64_t v19 = *(int *)(v17 + 64);
      v26(v10, v15, v27);
      *(void *)id v18 = v29;
      *((void *)v18 + 1) = a3;
      v10[v19] = v16;
      swift_storeEnumTagMultiPayload();
      id v30 = v12;
      unint64_t v21 = v12[2];
      unint64_t v20 = v12[3];
      swift_bridgeObjectRetain();
      if (v21 >= v20 >> 1)
      {
        sub_100190F0C(v20 > 1, v21 + 1, 1);
        id v12 = v30;
      }
      v12[2] = v21 + 1;
      sub_10010C430((uint64_t)v10, (uint64_t)v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v21);
      v15 += v24;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1003623D8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100362428()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100362460()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100362498()
{
  sub_10035FD70(*(void **)(v0 + 16));
}

void sub_1003624A0()
{
}

uint64_t sub_1003624A8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003624F0(uint64_t a1, uint64_t a2)
{
  sub_10035FE5C(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1003624FC()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10036254C()
{
  sub_100360498(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100362558()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100362598()
{
  sub_1003607EC(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003625A4()
{
  sub_1003603F0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(NSObject **)(v0 + 32));
}

uint64_t sub_1003625B4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003625FC()
{
  return sub_100361A2C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100362660(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  static Published.subscript.setter();
  uint64_t v7 = v1 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 8))(v1, v6, ObjectType, v8);
  swift_unknownObjectRelease();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
}

uint64_t sub_100362850(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCItemSortMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  static Published.subscript.setter();
  uint64_t v7 = v1 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t ObjectType = swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 16))(v1, v6, ObjectType, v8);
  swift_unknownObjectRelease();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
}

uint64_t sub_100362A40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 24))(v0, v5, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100362B54()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_forwardingDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100362C08()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100362C7C()
{
  return sub_100362CA4();
}

uint64_t sub_100362C90()
{
  return sub_100362CA4();
}

uint64_t sub_100362CA4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100362D14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100362D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100362E60()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100362ED4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100362F50()
{
  return type metadata accessor for DOCViewOptionsViewModel();
}

void *sub_100362F58()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100362F64()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100362F94()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100362FC4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100362FF4()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100363024()
{
  uint64_t v0 = self;
  DOCItemGroupingBehavior.accessibilityIdentifierComponent.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 groupByMenuItemForGrouping:v1];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t sub_1003630B4(uint64_t a1, uint64_t a2)
{
  return sub_100363198(a1, a2, (SEL *)&selRef_groupByMenuButton);
}

uint64_t sub_1003630C0(uint64_t a1, uint64_t a2)
{
  return sub_100363198(a1, a2, (SEL *)&selRef_sortByMenuButton);
}

uint64_t sub_1003630CC()
{
  uint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 sizeSettingMenuItemForSize:v1];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t sub_100363180(uint64_t a1, uint64_t a2)
{
  return sub_100363198(a1, a2, (SEL *)&selRef_sizeSettingMenuButton);
}

uint64_t sub_10036318C(uint64_t a1, uint64_t a2)
{
  return sub_100363198(a1, a2, (SEL *)&selRef_showFilenameExtensions);
}

uint64_t sub_100363198(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_1003631FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10036320C()
{
  return sub_100363248();
}

uint64_t sub_100363224()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100363234()
{
  return sub_100363248();
}

uint64_t sub_100363248()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1003632C0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files23DOCViewOptionsViewModel_selectedSortOrderAscending);
}

uint64_t sub_1003632D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003632E0()
{
  return sub_100362A40();
}

uint64_t sub_1003632E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003632F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100363348(uint64_t a1)
{
  unint64_t result = sub_100110CB4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100363370@<X0>(unsigned char *a1@<X8>)
{
  return sub_100362ED4(a1);
}

uint64_t sub_100363398()
{
  return sub_100362A40();
}

uint64_t sub_1003633C0()
{
  return sub_100362D14();
}

uint64_t sub_1003633E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100362D8C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DOCItemSortMode, (uint64_t (*)(char *))sub_100362850);
}

uint64_t sub_100363428()
{
  return sub_100362D14();
}

uint64_t sub_100363450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100362D8C(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DOCItemGroupingBehavior, (uint64_t (*)(char *))sub_100362660);
}

uint64_t sub_100363490@<X0>(unsigned char *a1@<X8>)
{
  return sub_100362ED4(a1);
}

uint64_t sub_1003634B8()
{
  return sub_100362B54();
}

uint64_t initializeBufferWithCopyOfBuffer for DOCSearchController.LayoutConfiguration(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCProgressUIConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = v4 - 2;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSearchController.LayoutConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressUIConfiguration()
{
  return &type metadata for DOCProgressUIConfiguration;
}

unsigned char *_s12PopoverStyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003636CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12PopoverStyleOMa()
{
  return &_s12PopoverStyleON;
}

unint64_t sub_100363708()
{
  unint64_t result = qword_100712030;
  if (!qword_100712030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712030);
  }
  return result;
}

uint64_t static DOCDocumentSource.== infix(_:_:)(void *a1, void *a2)
{
  id v3 = [a1 identifier];
  id v4 = [a2 identifier];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8) {
    char v10 = 1;
  }
  else {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10 & 1;
}

uint64_t sub_10036382C(void **a1, void **a2)
{
  return _sSo17DOCDocumentSourceC5FilesE1loiySbAB_ABtFZ_0(*a1, *a2);
}

uint64_t _sSo17DOCDocumentSourceC5FilesE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  id v3 = [a1 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::String v4 = String.lowercased()();
  swift_bridgeObjectRelease();
  id v5 = [a2 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::String v6 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v4._countAndFlagsBits == v6._countAndFlagsBits && v4._object == v6._object) {
    char v8 = 0;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_100363948()
{
  unint64_t result = qword_100712038;
  if (!qword_100712038)
  {
    sub_1003639A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712038);
  }
  return result;
}

unint64_t sub_1003639A0()
{
  unint64_t result = qword_100707CD0;
  if (!qword_100707CD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_100707CD0);
  }
  return result;
}

uint64_t type metadata accessor for DOCKeyboardNotifications()
{
  return self;
}

void **sub_100363A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005A00D0;
  Swift::String v6 = self;
  id v7 = [v6 defaultCenter];
  char v8 = self;
  id v9 = [v8 mainQueue];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  id v31 = sub_100363E38;
  uint64_t v32 = v10;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_10047D590;
  id v30 = &unk_1006A3F58;
  int64_t v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v12 = [v7 addObserverForName:UIKeyboardWillShowNotification object:0 queue:v9 usingBlock:v11];
  _Block_release(v11);

  *(void *)(v24 + 32) = v12;
  id v13 = [v6 defaultCenter];
  id v14 = [v8 mainQueue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  id v31 = sub_100363E10;
  uint64_t v32 = v15;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_10047D590;
  id v30 = &unk_1006A3FA8;
  char v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v17 = [v13 addObserverForName:UIKeyboardDidChangeFrameNotification object:0 queue:v14 usingBlock:v16];
  _Block_release(v16);

  *(void *)(v24 + 40) = v17;
  id v18 = [v6 defaultCenter];
  id v19 = [v8 mainQueue];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  id v31 = sub_100363E38;
  uint64_t v32 = v20;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_10047D590;
  id v30 = &unk_1006A3FF8;
  unint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v22 = [v18 addObserverForName:UIKeyboardWillHideNotification object:0 queue:v19 usingBlock:v21];
  _Block_release(v21);

  *(void *)(v24 + 48) = v22;
  long long aBlock = (void **)v24;
  specialized Array._endMutation()();
  return aBlock;
}

uint64_t sub_100363DD8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100363E10()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100363E54(double *a1, double *a2)
{
  if ((*(unsigned __int8 *)a1 ^ *(unsigned __int8 *)a2)) {
    return 0;
  }
  if (a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  sub_100365984();
  return static NSObject.== infix(_:_:)() & 1;
}

uint64_t sub_100363EC4(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  char v13 = *(unsigned char *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  void v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  char v15 = *((unsigned char *)a2 + 112);
  v14[5] = v9;
  v14[6] = v10;
  void v14[4] = v8;
  return sub_100365838((uint64_t)v12, (uint64_t)v14) & 1;
}

BOOL sub_100363F48(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  v13[10] = *(_OWORD *)(a1 + 160);
  uint64_t v14 = *(void *)(a1 + 176);
  long long v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  v15[10] = *(_OWORD *)(a2 + 160);
  uint64_t v16 = *(void *)(a2 + 176);
  long long v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return sub_1003659C4((uint64_t)v13, (uint64_t)v15);
}

BOOL sub_100363FEC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1003657AC((uint64_t)v7, (uint64_t)v9);
}

Swift::Int sub_100364048(double a1, double a2, double a3, double a4)
{
  Hasher.init(_seed:)();
  sub_1000CEFD0(a1, a2);
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)&a3;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  if ((*(void *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = *(void *)&a4;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  return Hasher._finalize()();
}

Swift::Int sub_1003640D8()
{
  return sub_100364048(*v0, v0[1], v0[2], v0[3]);
}

void sub_1003640E4()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  sub_1000CEFD0(*(double *)v0, *(double *)(v0 + 8));
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

Swift::Int sub_100364134()
{
  double v1 = *v0;
  double v2 = v0[1];
  Swift::UInt64 v3 = *((void *)v0 + 2);
  Swift::UInt64 v4 = *((void *)v0 + 3);
  Hasher.init(_seed:)();
  sub_1000CEFD0(v1, v2);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v3;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  return Hasher._finalize()();
}

uint64_t sub_1003641B0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2) {
    return (*(unsigned __int8 *)(a2 + 8) ^ *(unsigned __int8 *)(a1 + 8) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003641E0()
{
  double v1 = v0;
  id v2 = *v0;
  NSObject.hash(into:)();

  id v3 = v1[1];
  NSObject.hash(into:)();

  Hasher._combine(_:)((Swift::UInt)v1[2]);
  Hasher._combine(_:)((Swift::UInt)v1[3]);
  Hasher._combine(_:)((Swift::UInt)v1[4]);
  Swift::UInt64 v4 = (Swift::UInt64)v1[7];
  Swift::UInt64 v5 = (Swift::UInt64)v1[8];
  sub_1000CEFD0(*((double *)v1 + 5), *((double *)v1 + 6));
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v5;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  Hasher._combine(_:)(v7);
  id v11 = v1[9];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = v11;
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_1000CF6B4(&v11);
  Hasher._combine(_:)((_BYTE)v1[10] & 1);
  if (((unint64_t)v1[11] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = (Swift::UInt64)v1[11];
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  return UIEdgeInsets.hash(into:)();
}

BOOL sub_100364300(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  long long v8 = a2[3];
  v14[2] = a2[2];
  void v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  long long v9 = a2[4];
  long long v10 = a2[5];
  long long v11 = a2[7];
  v14[6] = a2[6];
  _OWORD v14[7] = v11;
  void v14[4] = v9;
  v14[5] = v10;
  return sub_1003655AC((uint64_t)v13, (uint64_t)v14);
}

Swift::Int sub_100364374()
{
  return Hasher._finalize()();
}

Swift::Int sub_1003643B8()
{
  return Hasher._finalize()();
}

void DOCItemCollectionRowStyle.hash(into:)(int a1, Swift::UInt a2)
{
}

uint64_t sub_10036441C()
{
  return sub_10004AA2C(&qword_100705948, type metadata accessor for DOCItemCollectionRowStyle);
}

void destroy for DOCItemCollectionLayoutTraits.GridSpecContext(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 64);
  if (v2)
  {

    long long v3 = *(void **)(a1 + 80);
  }
}

uint64_t initializeWithCopy for DOCItemCollectionLayoutTraits.GridSpecContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v6 = (_OWORD *)(a2 + 64);
  long long v5 = *(void **)(a2 + 64);
  id v7 = v4;
  if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    long long v9 = *(void **)(a2 + 80);
    *(void *)(a1 + 64) = v5;
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v9;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
    long long v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    long long v11 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v11;
    long long v12 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v12;
    long long v13 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v13;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    id v14 = v5;
    id v15 = v9;
  }
  else
  {
    long long v16 = v6[11];
    *(_OWORD *)(a1 + 224) = v6[10];
    *(_OWORD *)(a1 + 240) = v16;
    long long v17 = v6[13];
    *(_OWORD *)(a1 + 256) = v6[12];
    *(_OWORD *)(a1 + 272) = v17;
    long long v18 = v6[7];
    *(_OWORD *)(a1 + 160) = v6[6];
    *(_OWORD *)(a1 + 176) = v18;
    long long v19 = v6[9];
    *(_OWORD *)(a1 + 192) = v6[8];
    *(_OWORD *)(a1 + 208) = v19;
    long long v20 = v6[3];
    *(_OWORD *)(a1 + 96) = v6[2];
    *(_OWORD *)(a1 + 112) = v20;
    long long v21 = v6[5];
    *(_OWORD *)(a1 + 128) = v6[4];
    *(_OWORD *)(a1 + 144) = v21;
    long long v22 = v6[1];
    *(_OWORD *)(a1 + 64) = *v6;
    *(_OWORD *)(a1 + 80) = v22;
  }
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionLayoutTraits.GridSpecContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = (_OWORD *)(a1 + 64);
  uint64_t v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v10 = (_OWORD *)(a2 + 64);
  long long v9 = *(void **)(a2 + 64);
  if (v8)
  {
    if (v9)
    {
      *(void *)(a1 + 64) = v9;
      id v11 = v9;

      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      long long v12 = *(void **)(a2 + 80);
      long long v13 = *(void **)(a1 + 80);
      *(void *)(a1 + 80) = v12;
      id v14 = v12;

      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
      *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
    }
    else
    {
      sub_10036489C(a1 + 64);
      long long v23 = *(_OWORD *)(a2 + 80);
      *id v7 = *v10;
      *(_OWORD *)(a1 + 80) = v23;
      long long v24 = *(_OWORD *)(a2 + 144);
      long long v26 = *(_OWORD *)(a2 + 96);
      long long v25 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v24;
      *(_OWORD *)(a1 + 96) = v26;
      *(_OWORD *)(a1 + 112) = v25;
      long long v27 = *(_OWORD *)(a2 + 208);
      long long v29 = *(_OWORD *)(a2 + 160);
      long long v28 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 160) = v29;
      *(_OWORD *)(a1 + 176) = v28;
      long long v30 = *(_OWORD *)(a2 + 272);
      long long v32 = *(_OWORD *)(a2 + 224);
      long long v31 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 272) = v30;
      *(_OWORD *)(a1 + 224) = v32;
      *(_OWORD *)(a1 + 240) = v31;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    id v15 = *(void **)(a2 + 80);
    *(void *)(a1 + 80) = v15;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
    *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
    long long v16 = *(_OWORD *)(a2 + 112);
    long long v17 = *(_OWORD *)(a2 + 128);
    long long v18 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 128) = v17;
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    long long v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    long long v20 = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = v20;
    id v21 = v9;
    id v22 = v15;
  }
  else
  {
    long long v33 = *(_OWORD *)(a2 + 80);
    *id v7 = *v10;
    *(_OWORD *)(a1 + 80) = v33;
    long long v34 = *(_OWORD *)(a2 + 96);
    long long v35 = *(_OWORD *)(a2 + 112);
    long long v36 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v36;
    *(_OWORD *)(a1 + 96) = v34;
    *(_OWORD *)(a1 + 112) = v35;
    long long v37 = *(_OWORD *)(a2 + 160);
    long long v38 = *(_OWORD *)(a2 + 176);
    long long v39 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v39;
    *(_OWORD *)(a1 + 160) = v37;
    *(_OWORD *)(a1 + 176) = v38;
    long long v40 = *(_OWORD *)(a2 + 224);
    long long v41 = *(_OWORD *)(a2 + 240);
    long long v42 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v42;
    *(_OWORD *)(a1 + 224) = v40;
    *(_OWORD *)(a1 + 240) = v41;
  }
  return a1;
}

uint64_t sub_10036489C(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for DOCItemCollectionLayoutTraits.GridSpecContext(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for DOCItemCollectionLayoutTraits.GridSpecContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 64);
  id v6 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  if (!v6) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_10036489C(a1 + 64);
LABEL_5:
    long long v14 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v14;
    long long v15 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v15;
    long long v16 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v16;
    long long v17 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v17;
    long long v18 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v18;
    long long v19 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v19;
    long long v20 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v20;
    return a1;
  }
  *(void *)(a1 + 64) = v5;

  uint64_t v7 = *(void *)(a2 + 80);
  uint64_t v8 = *(void **)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  long long v12 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v12;
  long long v13 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridSpecContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridSpecContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionLayoutTraits.GridSpecContext()
{
  return &type metadata for DOCItemCollectionLayoutTraits.GridSpecContext;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.ListTraits(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for DOCItemCollectionLayoutTraits.ListTraits()
{
  return &type metadata for DOCItemCollectionLayoutTraits.ListTraits;
}

ValueMetadata *type metadata accessor for DOCItemCollectionLayoutTraits.GridItemBadgeTraits()
{
  return &type metadata for DOCItemCollectionLayoutTraits.GridItemBadgeTraits;
}

void destroy for DOCItemCollectionLayoutTraits.GridTraits(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for DOCItemCollectionLayoutTraits.GridTraits(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned int v3 = *(void **)(a2 + 16);
  BOOL v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  id v6 = *(void **)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  id v7 = v3;
  id v8 = v4;
  id v9 = v6;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionLayoutTraits.GridTraits(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  BOOL v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v10 = *(void **)(a2 + 56);
  long long v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v10;
  id v12 = v10;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionLayoutTraits.GridTraits(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionLayoutTraits.GridTraits(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridTraits(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridTraits(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionLayoutTraits.GridTraits()
{
  return &type metadata for DOCItemCollectionLayoutTraits.GridTraits;
}

ValueMetadata *type metadata accessor for DOCItemCollectionLayoutTraits.ItemStatusBadgeTraits()
{
  return &type metadata for DOCItemCollectionLayoutTraits.ItemStatusBadgeTraits;
}

void destroy for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  long long v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v10 = *(void **)(a2 + 72);
  long long v11 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v10;
  id v12 = v10;

  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionLayoutTraits.ListItemTraits(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void destroy for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  long long v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  long long v8 = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v9;
  long long v12 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v12;
  id v13 = v3;
  id v14 = v5;
  id v15 = v6;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v7 = *(void **)(a2 + 16);
  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  long long v10 = *(void **)(a2 + 24);
  long long v11 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v10;
  id v12 = v10;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionLayoutTraits.GridItemTraits(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_100365500()
{
  unint64_t result = qword_1007121C8;
  if (!qword_1007121C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007121C8);
  }
  return result;
}

unint64_t sub_100365558()
{
  unint64_t result = qword_1007121D0;
  if (!qword_1007121D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007121D0);
  }
  return result;
}

BOOL sub_1003655AC(uint64_t a1, uint64_t a2)
{
  sub_100365984();
  if ((static NSObject.== infix(_:_:)() & 1) == 0
    || (static NSObject.== infix(_:_:)() & 1) == 0
    || *(void *)(a1 + 16) != *(void *)(a2 + 16)
    || *(void *)(a1 + 24) != *(void *)(a2 + 24)
    || *(void *)(a1 + 32) != *(void *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40))
  {
    return 0;
  }
  BOOL result = 0;
  if (*(double *)(a1 + 48) == *(double *)(a2 + 48)
    && *(double *)(a1 + 56) == *(double *)(a2 + 56)
    && *(double *)(a1 + 64) == *(double *)(a2 + 64))
  {
    long long v5 = *(void **)(a1 + 72);
    id v11 = *(id *)(a2 + 72);
    id v12 = v5;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
      sub_1000CED00(&v12);
      sub_1000CED00(&v11);
      swift_bridgeObjectRelease_n();
      sub_1000CF6B4(&v11);
      sub_1000CF6B4(&v12);
    }
    else
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1000CED00(&v12);
      sub_1000CED00(&v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000CF6B4(&v11);
      sub_1000CF6B4(&v12);
      BOOL result = 0;
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    return ((*(unsigned __int8 *)(a1 + 80) ^ *(unsigned __int8 *)(a2 + 80)) & 1) == 0
        && *(double *)(a1 + 88) == *(double *)(a2 + 88)
        && *(double *)(a1 + 96) == *(double *)(a2 + 96)
        && *(double *)(a1 + 104) == *(double *)(a2 + 104)
        && *(double *)(a1 + 112) == *(double *)(a2 + 112)
        && *(double *)(a1 + 120) == *(double *)(a2 + 120);
  }
  return result;
}

BOOL sub_1003657AC(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 16) == *(double *)(a2 + 16)
    && *(double *)(a1 + 24) == *(double *)(a2 + 24)
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && (*(double *)(a1 + 40) == *(double *)(a2 + 40) ? (BOOL v2 = *(double *)(a1 + 48) == *(double *)(a2 + 48)) : (BOOL v2 = 0),
        v2 ? (BOOL v3 = *(double *)(a1 + 56) == *(double *)(a2 + 56)) : (BOOL v3 = 0),
        v3))
  {
    return *(void *)(a1 + 64) == *(void *)(a2 + 64);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100365838(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    goto LABEL_16;
  }
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    goto LABEL_16;
  }
  sub_100365984();
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_16;
  }
  char v4 = static NSObject.== infix(_:_:)();
  char v5 = 0;
  if ((v4 & 1) != 0
    && ((*(unsigned char *)(a1 + 32) & 1) == 0) != (*(unsigned char *)(a2 + 32) & 1)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40)
    && *(double *)(a1 + 48) == *(double *)(a2 + 48))
  {
    if ((static NSObject.== infix(_:_:)() & 1) == 0 || *(void *)(a1 + 64) != *(void *)(a2 + 64)) {
      goto LABEL_16;
    }
    char v5 = 0;
    if (*(double *)(a1 + 72) == *(double *)(a2 + 72)
      && *(double *)(a1 + 80) == *(double *)(a2 + 80)
      && *(double *)(a1 + 88) == *(double *)(a2 + 88)
      && *(double *)(a1 + 96) == *(double *)(a2 + 96))
    {
      if (*(void *)(a1 + 104) == *(void *)(a2 + 104))
      {
        char v5 = ((*(unsigned char *)(a1 + 112) & 1) == 0) ^ *(unsigned char *)(a2 + 112);
        return v5 & 1;
      }
LABEL_16:
      char v5 = 0;
    }
  }
  return v5 & 1;
}

unint64_t sub_100365984()
{
  unint64_t result = qword_100706710;
  if (!qword_100706710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100706710);
  }
  return result;
}

BOOL sub_1003659C4(uint64_t a1, uint64_t a2)
{
  sub_100365984();
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
    return 0;
  }
  if (*(double *)(a1 + 40) != *(double *)(a2 + 40)) {
    return 0;
  }
  if (*(double *)(a1 + 48) != *(double *)(a2 + 48)) {
    return 0;
  }
  if (*(double *)(a1 + 56) != *(double *)(a2 + 56)) {
    return 0;
  }
  if (*(double *)(a1 + 64) != *(double *)(a2 + 64)) {
    return 0;
  }
  if ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72))) {
    return 0;
  }
  if ((*(unsigned __int8 *)(a1 + 73) ^ *(unsigned __int8 *)(a2 + 73))) {
    return 0;
  }
  long long v4 = *(_OWORD *)(a1 + 128);
  v11[2] = *(_OWORD *)(a1 + 112);
  v11[3] = v4;
  uint64_t v12 = *(void *)(a1 + 144);
  long long v5 = *(_OWORD *)(a1 + 96);
  v11[0] = *(_OWORD *)(a1 + 80);
  v11[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 128);
  v9[2] = *(_OWORD *)(a2 + 112);
  v9[3] = v6;
  uint64_t v10 = *(void *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 96);
  v9[0] = *(_OWORD *)(a2 + 80);
  v9[1] = v7;
  if (!sub_1003657AC((uint64_t)v11, (uint64_t)v9)) {
    return 0;
  }
  return *(double *)(a1 + 152) == *(double *)(a2 + 152)
      && *(double *)(a1 + 160) == *(double *)(a2 + 160)
      && *(double *)(a1 + 168) == *(double *)(a2 + 168)
      && *(double *)(a1 + 176) == *(double *)(a2 + 176);
}

void destroy for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits(uint64_t a1)
{
}

uint64_t initializeWithCopy for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  BOOL v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  BOOL v3 = *(void **)(a2 + 24);
  id v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  BOOL v3 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits()
{
  return &type metadata for DOCItemCollectionLayoutTraits.GridTraits.GroupedLayoutTraits;
}

void *sub_100365C2C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v7 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * i);
          swift_unknownObjectRetain();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        uint64_t v13 = v8;
        a1(&v12, &v13);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return (void *)swift_bridgeObjectRelease();
        }
        swift_unknownObjectRelease();
        if (v12)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return (void *)v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100365DE0()
{
  type metadata accessor for DOCItemActionLogger();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100365E1C();
  qword_100737400 = v0;
  return result;
}

uint64_t sub_100365E1C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.utility.getter();
  v9[1] = _swiftEmptyArrayStorage;
  sub_1000BAC54((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t v6 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v7 = v9[0];
  *(void *)(v9[0] + 16) = v6;
  return v7;
}

uint64_t sub_100366074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v4 + 16);
  long long v16 = (void *)swift_allocObject();
  v16[2] = a4;
  id v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  aBlock[4] = sub_1003730E8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006A4550;
  long long v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  id v21 = _swiftEmptyArrayStorage;
  sub_1000BAC54((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  return swift_release();
}

uint64_t sub_100366338(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v47 - 8);
  uint64_t v9 = __chkstk_darwin(v47);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  long long v16 = (char *)&v43 - v15;
  if (!(a1 >> 62))
  {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v17 < 0x3E8) {
      goto LABEL_3;
    }
    uint64_t v44 = a3;
    uint64_t v45 = a4;
    uint64_t v46 = a2;
    uint64_t v48 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
LABEL_14:
    uint64_t v24 = 0;
    long long v25 = (void (**)(char *, uint64_t))(v8 + 8);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        long long v26 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        long long v26 = *(void **)(a1 + 8 * v24 + 32);
        swift_unknownObjectRetain();
      }
      ++v24;
      id v27 = [v26 contentType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000EDF0C((uint64_t)v14, v11);
      (*v25)(v14, v47);
      swift_unknownObjectRelease();
    }
    while (v17 != v24);
    swift_bridgeObjectRelease();
    long long v28 = v48;
    a2 = v46;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v17 > 999)
  {
    uint64_t v48 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    if (!v42)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      long long v28 = &_swiftEmptySetSingleton;
LABEL_20:
      sub_1002F57D4((uint64_t)v28);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    uint64_t v17 = v42;
    if (v42 < 1)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v44 = a3;
    uint64_t v45 = a4;
    uint64_t v46 = a2;
    goto LABEL_14;
  }
LABEL_3:
  if (!v17) {
    goto LABEL_21;
  }
  uint64_t v48 = _swiftEmptyArrayStorage;
  sub_100190D68(0, v17 & ~(v17 >> 63), 0);
  if (v17 < 0) {
    goto LABEL_32;
  }
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a2;
  uint64_t v18 = 0;
  long long v19 = v48;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v20 = *(void **)(a1 + 8 * v18 + 32);
      swift_unknownObjectRetain();
    }
    id v21 = [v20 contentType];
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();
    swift_unknownObjectRelease();

    uint64_t v48 = v19;
    unint64_t v23 = v19[2];
    unint64_t v22 = v19[3];
    if (v23 >= v22 >> 1)
    {
      sub_100190D68(v22 > 1, v23 + 1, 1);
      long long v19 = v48;
    }
    ++v18;
    void v19[2] = v23 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v23, v16, v47);
  }
  while (v17 != v18);
  a2 = v46;
LABEL_21:
  long long v29 = (void *)sub_10015983C(a1);
  long long v30 = self;
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v30 systemActionWithType:a2 identifier:0 displayString:v31 inputTypes:0];

  if (v29)
  {
    id v33 = [v29 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v35 = 0;
  }
  id v36 = v32;
  v37.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (v35)
  {
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v38 = 0;
  }
  id v39 = [objc_allocWithZone((Class)WFContextualActionEvent) initWithAction:v36 contentTypes:v37.super.isa containerName:v38 surface:1];

  id v40 = [self standardClient];
  [v40 logRunOfContextualAction:v39];

  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for DOCItemActionLogger()
{
  return self;
}

id sub_10036685C()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v39 - v5;
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v39 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - v10;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v13 = result;
    v41._countAndFlagsBits = 0xD000000000000026;
    v41._object = (void *)0x80000001005ECAF0;
    v14._countAndFlagsBits = 0x70756B72614DLL;
    v14._object = (void *)0xE600000000000000;
    v15._countAndFlagsBits = 0x617A696C61636F4CLL;
    v15._object = (void *)0xEB00000000656C62;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    Swift::String v17 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v41);

    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [self systemImageNamed:v18];
    id v39 = v19;

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v22 = sub_100366BDC(v20, v21, v17._countAndFlagsBits, (uint64_t)v17._object, 0x70756B72614DLL, 0xE600000000000000, (uint64_t)v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CBE70(&qword_100707EF0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1005A0500;
    static UTType.png.getter();
    uint64_t v24 = UTType.identifier.getter();
    uint64_t v26 = v25;
    id v27 = *(void (**)(char *, uint64_t))(v1 + 8);
    v27(v11, v0);
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v26;
    static UTType.jpeg.getter();
    uint64_t v28 = UTType.identifier.getter();
    uint64_t v30 = v29;
    v27(v9, v0);
    *(void *)(v23 + 48) = v28;
    *(void *)(v23 + 56) = v30;
    static UTType.tiff.getter();
    uint64_t v31 = UTType.identifier.getter();
    uint64_t v33 = v32;
    v27(v6, v0);
    *(void *)(v23 + 64) = v31;
    *(void *)(v23 + 72) = v33;
    uint64_t v34 = v40;
    static UTType.pdf.getter();
    uint64_t v35 = UTType.identifier.getter();
    uint64_t v37 = v36;
    v27(v34, v0);
    *(void *)(v23 + 80) = v35;
    *(void *)(v23 + 88) = v37;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 setSupportedContentTypes:isa];

    [v22 setMenuSortOrder:20];
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100366BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  Swift::String v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a5;
  v15[5] = a6;
  v15[6] = v7;
  v15[7] = a3;
  v15[8] = a4;
  id v16 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  uint64_t v29 = sub_100376D44;
  uint64_t v30 = v15;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  id v27 = sub_100156760;
  uint64_t v28 = &unk_1006A4DE8;
  id v19 = _Block_copy(&v25);
  id v20 = [v16 initWithIdentifier:v17 localizedTitle:v18 unresolvedHandler:v19];

  _Block_release(v19);
  swift_release();
  [v20 setImage:a7];
  [v20 setPerformActionExitsEditMode:1];
  [v20 setSupportsMultipleItems:0];
  if (UIDocumentBrowserActionAvailabilityToolbar < 2uLL)
  {
    uint64_t v21 = 1;
    if (UIDocumentBrowserActionAvailabilityPreviewPanel < 2uLL) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v21 = UIDocumentBrowserActionAvailabilityToolbar | 1;
  if ((UIDocumentBrowserActionAvailabilityPreviewPanel & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) != 0) {
LABEL_5:
  }
    v21 |= UIDocumentBrowserActionAvailabilityPreviewPanel;
LABEL_6:
  [v20 setAvailability:v21];
  uint64_t v29 = sub_100367AA0;
  uint64_t v30 = 0;
  uint64_t v25 = _NSConcreteStackBlock;
  uint64_t v26 = 1107296256;
  id v27 = sub_100053508;
  uint64_t v28 = &unk_1006A4E10;
  id v22 = _Block_copy(&v25);
  id v23 = [self predicateWithBlock:v22];
  _Block_release(v22);
  swift_release();
  [v20 setFilteringPredicate:v23];

  return v20;
}

id sub_100366E98()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v12._countAndFlagsBits = 0xD00000000000002ALL;
    v12._object = (void *)0x80000001005EC9B0;
    v2._countAndFlagsBits = 1835627092;
    v2._object = (void *)0xE400000000000000;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    Swift::String v5 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v12);

    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [self systemImageNamed:v6];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = sub_100366BDC(v8, v9, v5._countAndFlagsBits, (uint64_t)v5._object, 1835627092, 0xE400000000000000, (uint64_t)v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100375078();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v10 setSupportedContentTypes:isa];

    [v10 setMenuSortOrder:23];
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036702C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  id v71 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v74 = (uint64_t)&v65 - v19;
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v70 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  id v75 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v69 = (char *)&v65 - v23;
  uint64_t v24 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009B208(a2, (uint64_t)v77);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    unint64_t v72 = a5;
    id v27 = v76;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (!All)
    {

      return;
    }
    unint64_t v29 = All;
    uint64_t v68 = a8;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v73 = v29;
    if (v30 == a3 && v31 == a4)
    {
      uint64_t v32 = 3;
    }
    else
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v33)
      {
        uint64_t v32 = 3;
        unint64_t v29 = v73;
        goto LABEL_10;
      }
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v73;
      if (v52 != a3 || v53 != a4)
      {
        char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0) {
          goto LABEL_13;
        }
        uint64_t v32 = 4;
LABEL_10:
        if (qword_1007050D8 != -1) {
          swift_once();
        }
        sub_100366074(v32, v72, a6, a1);
LABEL_13:
        id v66 = v27;
        uint64_t v67 = v26;
        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
          if (v34) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v34 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v34)
          {
LABEL_15:
            if (v34 < 1)
            {
              __break(1u);
              return;
            }
            uint64_t v35 = 0;
            unint64_t v72 = v29 & 0xC000000000000001;
            uint64_t v36 = (uint64_t)v71;
            uint64_t v37 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56);
            NSString v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
            id v39 = (void (**)(char *, uint64_t, uint64_t))(v70 + 32);
            id v40 = (char *)_swiftEmptyArrayStorage;
            do
            {
              if (v72) {
                id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v41 = *(id *)(v29 + 8 * v35 + 32);
              }
              uint64_t v42 = v41;
              id v43 = [v41 fileURL];
              if (v43)
              {
                uint64_t v44 = v43;
                static URL._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v45 = 0;
              }
              else
              {
                uint64_t v45 = 1;
              }
              (*v37)(v36, v45, 1, v20);
              uint64_t v46 = v74;
              sub_10032D1DC(v36, v74);

              uint64_t v47 = v46;
              if ((*v38)(v46, 1, v20) == 1)
              {
                sub_1000CBBA4(v46, &qword_1007076B0);
              }
              else
              {
                uint64_t v48 = *v39;
                id v49 = v69;
                (*v39)(v69, v47, v20);
                v48(v75, (uint64_t)v49, v20);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  id v40 = (char *)sub_10018F80C(0, *((void *)v40 + 2) + 1, 1, (unint64_t)v40);
                }
                unint64_t v51 = *((void *)v40 + 2);
                unint64_t v50 = *((void *)v40 + 3);
                if (v51 >= v50 >> 1) {
                  id v40 = (char *)sub_10018F80C(v50 > 1, v51 + 1, 1, (unint64_t)v40);
                }
                *((void *)v40 + 2) = v51 + 1;
                v48(&v40[((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v51], (uint64_t)v75, v20);
                uint64_t v36 = (uint64_t)v71;
              }
              unint64_t v29 = v73;
              ++v35;
            }
            while (v34 != v35);
            goto LABEL_38;
          }
        }
        id v40 = (char *)_swiftEmptyArrayStorage;
LABEL_38:
        swift_bridgeObjectRelease();
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = v29;
        uint64_t v56 = v66;
        *(void *)(v55 + 24) = v66;
        sub_1000CBE70(&qword_100712340);
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v56;
        uint64_t v58 = swift_allocObject();
        *(void *)(v58 + 16) = sub_100376D94;
        *(void *)(v58 + 24) = v55;
        sub_1000CBE70(&qword_100712348);
        uint64_t v59 = swift_allocObject();
        *(void *)(v59 + 16) = sub_1000879B8;
        *(void *)(v59 + 24) = v58;
        uint64_t v60 = type metadata accessor for TaskPriority();
        uint64_t v61 = (uint64_t)v67;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v67, 1, 1, v60);
        unsigned int v62 = (void *)swift_allocObject();
        _OWORD v62[2] = 0;
        v62[3] = 0;
        v62[4] = v40;
        v62[5] = v57;
        uint64_t v63 = v68;
        v62[6] = v59;
        v62[7] = v63;
        v62[8] = a9;
        id v64 = v56;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10003D154(v61, (uint64_t)&unk_100712358, (uint64_t)v62);

        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return;
      }
      uint64_t v32 = 4;
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
}

void sub_100367700(uint64_t a1, void *a2)
{
  id v4 = [self defaultPermission];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  _OWORD v9[4] = sub_100377284;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_1000666D8;
  v9[3] = &unk_1006A4F28;
  id v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  id v8 = a2;
  swift_release();
  [v4 adoptPersonaFromItems:isa andPerformBlock:v7];
  _Block_release(v7);
}

uint64_t sub_100367844(unint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
  Swift::String v5 = (char *)DOCPreviewController.init()();
  [v5 setAppearanceActions:4];
  DOCPreviewController.set(_:defaultIndex:)(a1, 0, 0, 0, 1);
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9)
  {
    *(void *)&v5[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = v8;
    swift_unknownObjectWeakAssign();
  }
  type metadata accessor for DOCBrowserContainedViewController();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    if (*(void *)(v10 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager)) {
      Swift::String v12 = &protocol witness table for DOCDocumentManager;
    }
    else {
      Swift::String v12 = 0;
    }
    uint64_t v13 = &v5[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
    swift_beginAccess();
    *((void *)v13 + 1) = v12;
    swift_unknownObjectWeakAssign();
    Swift::String v14 = *(void **)(v11 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
    Swift::String v15 = (void **)&v5[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
    swift_beginAccess();
    uint64_t v16 = *v15;
    *Swift::String v15 = v14;
    id v17 = v6;
    id v18 = v14;

    swift_beginAccess();
    swift_unknownObjectWeakAssign();
  }
  uint64_t v19 = qword_100704FD8;
  id v20 = v6;
  if (v19 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  _s5Files16DOCPreviewRouterC7present10contentsOf24contextIfPresentingInApp10didPresentyAA27DOCQLItemsPreviewControllerC_AC0jK7ContextVyycSgtF_0(v5, 1, v20, 0, 0);

  return swift_release();
}

uint64_t sub_100367AA0(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v10, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v11 + 1)) {
    goto LABEL_21;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v9 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v9 + 56) + 32 * v1, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1))
  {
LABEL_21:
    sub_1000CBBA4((uint64_t)&v10, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return 0;
  }
  *(void *)&long long v10 = _swiftEmptyArrayStorage;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_11;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_27;
  }
LABEL_11:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void **)(v9 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if (([v6 isTrashed] & 1) != 0
        || ([v6 isAnyParentTrashed] & 1) != 0)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v7 = v10;
    if ((v10 & 0x8000000000000000) != 0) {
      goto LABEL_31;
    }
LABEL_28:
    if ((v7 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = *(void *)(v7 + 16);
LABEL_30:
      swift_release();
      return v8 == 1;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_100367D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  void v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return _swift_task_switch(sub_100367D48, 0, 0);
}

uint64_t sub_100367D48()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[7] = v2;
  *(void *)(v2 + 16) = v1;
  Swift::String v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *Swift::String v3 = v0;
  v3[1] = sub_100367E3C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 10, &type metadata for Bool, &type metadata for Bool, 0, 0, &unk_100712368, v2, &type metadata for Bool);
}

uint64_t sub_100367E3C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100367F54, 0, 0);
}

uint64_t sub_100367F54()
{
  *(unsigned char *)(v0 + 81) = *(unsigned char *)(v0 + 80);
  type metadata accessor for MainActor();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100367FF0, v2, v1);
}

uint64_t sub_100367FF0()
{
  char v1 = *(unsigned char *)(v0 + 81);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  swift_release();
  sub_100368D94(v5, v4, v1, v3, v2);
  return _swift_task_switch(sub_100368090, 0, 0);
}

uint64_t sub_100368090()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003680A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  sub_1000CBE70(&qword_100707AC0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[14] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[15] = v5;
  v3[16] = *(void *)(v5 + 64);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  sub_1000CBE70(&qword_1007076B0);
  v3[19] = swift_task_alloc();
  return _swift_task_switch(sub_1003681F0, 0, 0);
}

uint64_t sub_1003681F0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v3 += 16;
    uint64_t v4 = v5;
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64));
    id v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    uint64_t v37 = *(void *)(v3 + 56);
    unint64_t v38 = (*(unsigned __int8 *)(v3 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 64);
    uint64_t v36 = (void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v35 = (void (**)(uint64_t, uint64_t))(v3 - 8);
    swift_bridgeObjectRetain();
    id v40 = (void *)(v3 + 40);
    uint64_t v34 = v5;
    while (1)
    {
      uint64_t v10 = *(void *)(v0 + 152);
      uint64_t v11 = *(void *)(v0 + 112);
      v4(v10, v6, v11);
      Swift::String v12 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v40;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v40)(v10, 0, 1, v11);
      if ((*v39)(v10, 1, v11) == 1) {
        goto LABEL_14;
      }
      char v33 = v12;
      uint64_t v44 = v6;
      uint64_t v41 = v2;
      unint64_t v13 = *(void *)(v0 + 144);
      uint64_t v14 = *(void *)(v0 + 136);
      uint64_t v16 = *(void *)(v0 + 104);
      uint64_t v15 = *(void *)(v0 + 112);
      uint64_t v43 = *(void *)(v0 + 96);
      uint64_t v42 = *v36;
      (*v36)(v13, *(void *)(v0 + 152), v15);
      static TaskPriority.userInitiated.getter();
      uint64_t v17 = type metadata accessor for TaskPriority();
      uint64_t v18 = *(void *)(v17 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
      v4(v14, v13, v15);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = 0;
      id v20 = (void *)(v19 + 16);
      *(void *)(v19 + 24) = 0;
      v42(v19 + v38, v14, v15);
      sub_1000CBC00(v16, v43, &qword_100707AC0);
      int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v43, 1, v17);
      uint64_t v22 = *(void *)(v0 + 96);
      if (v21 == 1)
      {
        sub_1000CBBA4(*(void *)(v0 + 96), &qword_100707AC0);
        if (!*v20) {
          goto LABEL_9;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
        if (!*v20)
        {
LABEL_9:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_10;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_10:
      uint64_t v26 = **(void **)(v0 + 80);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_100712380;
      *(void *)(v27 + 24) = v19;
      uint64_t v28 = v25 | v23;
      if (v25 | v23)
      {
        uint64_t v28 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v23;
        *(void *)(v0 + 40) = v25;
      }
      uint64_t v4 = v34;
      uint64_t v7 = *(void *)(v0 + 144);
      uint64_t v9 = *(void *)(v0 + 104);
      uint64_t v8 = *(void *)(v0 + 112);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v28;
      *(void *)(v0 + 64) = v26;
      swift_task_create();
      swift_release();
      sub_1000CBBA4(v9, &qword_100707AC0);
      (*v35)(v7, v8);
      uint64_t v6 = v44 + v37;
      uint64_t v2 = v41 - 1;
      if (v41 == 1)
      {
        v33(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 112));
        goto LABEL_14;
      }
    }
  }
  unint64_t v29 = *(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 120) + 56);
  swift_bridgeObjectRetain();
  v29(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 112));
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v30;
  uint64_t v31 = sub_1000CBE70(&qword_100712370);
  *uint64_t v30 = v0;
  v30[1] = sub_10036868C;
  return TaskGroup.next(isolation:)(v0 + 168, 0, 0, v31);
}

uint64_t sub_10036868C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100368788, 0, 0);
}

uint64_t sub_100368788()
{
  int v1 = *(unsigned __int8 *)(v0 + 168);
  if (v1 == 2)
  {
    TaskGroup.cancelAll()();
    char v2 = 0;
LABEL_8:
    **(unsigned char **)(v0 + 72) = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  if (v1)
  {
    char v2 = 1;
    goto LABEL_8;
  }
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  uint64_t v4 = sub_1000CBE70(&qword_100712370);
  *uint64_t v3 = v0;
  v3[1] = sub_10036868C;
  return TaskGroup.next(isolation:)(v0 + 168, 0, 0, v4);
}

uint64_t sub_1003688E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  uint64_t v5 = type metadata accessor for URL();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_1003689A4, 0, 0);
}

uint64_t sub_1003689A4()
{
  if (static Task<>.isCancelled.getter())
  {
    **(unsigned char **)(v0 + 40) = 0;
    swift_task_dealloc();
    int v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v3, *(void *)(v0 + 48), v5);
    type metadata accessor for DOCAssetMetadataFetcher();
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 80) = inited;
    id v7 = objc_allocWithZone((Class)AVURLAsset);
    URL._bridgeToObjectiveC()(v8);
    uint64_t v10 = v9;
    id v11 = [v7 initWithURL:v9 options:0];

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    *(void *)(inited + 16) = v11;
    sub_1000CBE70(&qword_100712398);
    uint64_t v12 = static AVPartialAsyncProperty<A>.hasProtectedContent.getter();
    *(void *)(v0 + 88) = v12;
    unint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v13;
    *unint64_t v13 = v0;
    v13[1] = sub_100368B68;
    return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 104, v12);
  }
}

uint64_t sub_100368B68()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_release();
    int v1 = sub_100368D24;
  }
  else
  {
    swift_release();
    int v1 = sub_100368CB0;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100368CB0()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(unsigned char *)(v0 + 104);
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100368D24()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = 0;
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100368D94(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void **)(a1 + 16);
  if ((a3 & 1) == 0)
  {
    uint64_t v31 = *(void (**)(uint64_t))(a2 + 16);
    id v32 = v5;
    uint64_t v33 = swift_retain();
    v31(v33);

    swift_release();
    return;
  }
  uint64_t v8 = v5;
  id v9 = (id)_DocumentManagerBundle();
  if (v9)
  {
    uint64_t v10 = v9;
    v34._countAndFlagsBits = 0xD00000000000004ALL;
    v34._object = (void *)0x80000001005ECA00;
    v11._countAndFlagsBits = 0x7420656C62616E55;
    v11._object = (void *)0xEC0000004025206FLL;
    v12._countAndFlagsBits = 0x617A696C61636F4CLL;
    v12._object = (void *)0xEB00000000656C62;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v34);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1005A0030;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_100073F48();
    *(void *)(v14 + 32) = a4;
    *(void *)(v14 + 40) = a5;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    id v15 = (id)_DocumentManagerBundle();
    if (v15)
    {
      uint64_t v16 = v15;
      v35._countAndFlagsBits = 0xD000000000000056;
      v35._object = (void *)0x80000001005ECA90;
      v17._object = (void *)0x80000001005ECA50;
      v17._countAndFlagsBits = 0xD000000000000034;
      v18._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v35);

      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [self alertControllerWithTitle:v20 message:v21 preferredStyle:1];

      id v23 = (id)_DocumentManagerBundle();
      if (v23)
      {
        uint64_t v24 = v23;
        v36._object = (void *)0xE200000000000000;
        v25._countAndFlagsBits = 19279;
        v25._object = (void *)0xE200000000000000;
        v26._countAndFlagsBits = 0x617A696C61636F4CLL;
        v26._object = (void *)0xEB00000000656C62;
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        v36._countAndFlagsBits = 19279;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v36);

        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v29 = [self actionWithTitle:v28 style:0 handler:0];

        [v22 addAction:v29];
        id v30 = *(id *)&v8[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
        [v30 presentViewController:v22 animated:1 completion:0];

        return;
      }
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_9:
  __break(1u);
}

void sub_1003690FC(unint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_10009B208(a2, (uint64_t)v12);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    if (qword_1007050D8 != -1) {
      swift_once();
    }
    sub_100366074(6, 0x73736572706D6F43, 0xE800000000000000, a1);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = v11;
    int v8 = a3 & 1;
    *(unsigned char *)(v7 + 32) = v8;
    if (a4)
    {
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      id v9 = v11;
      sub_100369290(a4, a1, v9, v8);
      swift_unknownObjectRelease_n();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      id v10 = v11;
      sub_10015CDC0(a1, (unint64_t)sub_100373848, v7);

      swift_release_n();
    }
  }
}

void sub_100369290(uint64_t a1, uint64_t a2, char *a3, int a4)
{
  uint64_t v7 = type metadata accessor for DOCOperationItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::String v11 = (void **)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  Swift::String v13 = (uint64_t *)((char *)&v33 - v12);
  if (a1)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v14 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    if (v14)
    {
      id v36 = v14;
      sub_1000CBE70((uint64_t *)&unk_100706730);
      unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
      if (All)
      {
        int v34 = a4;
        Swift::String v35 = a3;
        unint64_t v37 = All;
        if (All >> 62)
        {
          uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
          if (v16) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v16 = *(void *)((All & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v16)
          {
LABEL_6:
            unint64_t v38 = _swiftEmptyArrayStorage;
            sub_100190F0C(0, v16 & ~(v16 >> 63), 0);
            if (v16 < 0)
            {
              __break(1u);
              return;
            }
            uint64_t v33 = a1;
            Swift::String v17 = v38;
            if ((v37 & 0xC000000000000001) != 0)
            {
              for (uint64_t i = 0; i != v16; ++i)
              {
                *Swift::String v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                swift_storeEnumTagMultiPayload();
                unint64_t v38 = v17;
                unint64_t v20 = v17[2];
                unint64_t v19 = v17[3];
                if (v20 >= v19 >> 1)
                {
                  sub_100190F0C(v19 > 1, v20 + 1, 1);
                  Swift::String v17 = v38;
                }
                v17[2] = v20 + 1;
                sub_10010C430((uint64_t)v13, (uint64_t)v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v20);
              }
            }
            else
            {
              id v22 = (void **)(v37 + 32);
              do
              {
                id v23 = *v22;
                *Swift::String v11 = *v22;
                swift_storeEnumTagMultiPayload();
                unint64_t v38 = v17;
                unint64_t v24 = v17[2];
                unint64_t v25 = v17[3];
                id v26 = v23;
                if (v24 >= v25 >> 1)
                {
                  sub_100190F0C(v25 > 1, v24 + 1, 1);
                  Swift::String v17 = v38;
                }
                v17[2] = v24 + 1;
                sub_10010C430((uint64_t)v11, (uint64_t)v17+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v24);
                ++v22;
                --v16;
              }
              while (v16);
            }
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        swift_bridgeObjectRelease();
        Swift::String v17 = _swiftEmptyArrayStorage;
LABEL_26:
        id v27 = [self defaultManager];
        NSString v28 = v35;
        id v29 = *(void **)&v35[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v36;
        *(void *)(v30 + 24) = v28;
        *(unsigned char *)(v30 + 32) = v34 & 1;
        id v31 = v36;
        id v32 = v28;
        sub_100535854(6, (uint64_t)v17, v36, 0, 0, 1, v29, sub_10037666C, v30);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
        return;
      }
      swift_unknownObjectRelease();
      id v21 = v36;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_1003696B0(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  if (!a1) {
    return;
  }
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_20;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v8 + 16))
    {
      __break(1u);
      return;
    }
    id v10 = *(id *)(a1 + 32);
  }
  id v22 = v10;
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v11 = *(void *)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting);
    if (v11)
    {
      uint64_t v12 = self;
      Swift::String v13 = *(void **)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_configuration);
      id v14 = a2;
      swift_unknownObjectRetain();
      id v15 = [v13 sceneIdentifier];
      id v16 = [v12 globalTabbedBrowserControllerForIdentifier:v15];

      if (v16)
      {
        Swift::String v17 = (void *)swift_allocObject();
        v17[2] = v16;
        v17[3] = v14;
        void v17[4] = v11;
        v17[5] = v22;
        v17[6] = 0;
        v17[7] = 0;
        aBlock[4] = sub_100376814;
        aBlock[5] = v17;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_1006A4708;
        Swift::String v18 = _Block_copy(aBlock);
        id v19 = v14;
        swift_unknownObjectRetain();
        id v20 = v16;
        id v21 = v22;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v18);

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      return;
    }
  }
  else
  {
    sub_100376678((uint64_t)v22, a3, 0, 0);
  }
}

void sub_100369978(unint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_10009B208(a2, (uint64_t)v12);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = v11;
    int v8 = a3 & 1;
    *(unsigned char *)(v7 + 32) = v8;
    if (a4)
    {
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v9 = v11;
      sub_100369AB4(a4, a1, v9, v8);
      swift_unknownObjectRelease_n();
      swift_release();
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      id v10 = v11;
      sub_10015DCF4(a1, (unint64_t)sub_100376A0C, v7);

      swift_release_n();
    }
  }
}

void sub_100369AB4(uint64_t a1, uint64_t a2, char *a3, int a4)
{
  uint64_t v8 = type metadata accessor for DOCOperationItem();
  uint64_t v49 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (void **)((char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)v42 - v13;
  id v15 = (void *)__chkstk_darwin(v12);
  Swift::String v17 = (void *)((char *)v42 - v16);
  if (a1)
  {
    id v48 = v15;
    swift_getObjectType();
    swift_unknownObjectRetain();
    Swift::String v18 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    if (v18)
    {
      id v50 = v18;
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
      if (All)
      {
        unint64_t v20 = All;
        if (qword_1007050D8 != -1) {
          swift_once();
        }
        sub_100366074(7, 0x6572706D6F636E55, 0xEA00000000007373, a2);
        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        v42[1] = a1;
        int v44 = a4;
        if (v21)
        {
          unint64_t v51 = _swiftEmptyArrayStorage;
          sub_100190F0C(0, v21 & ~(v21 >> 63), 0);
          if (v21 < 0)
          {
            __break(1u);
            return;
          }
          uint64_t v47 = a3;
          id v22 = v51;
          if ((v20 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v21; ++i)
            {
              *Swift::String v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              swift_storeEnumTagMultiPayload();
              unint64_t v51 = v22;
              unint64_t v25 = v22[2];
              unint64_t v24 = v22[3];
              if (v25 >= v24 >> 1)
              {
                sub_100190F0C(v24 > 1, v25 + 1, 1);
                id v22 = v51;
              }
              long long v22[2] = v25 + 1;
              sub_10010C430((uint64_t)v17, (uint64_t)v22+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v25);
            }
          }
          else
          {
            NSString v28 = (void **)(v20 + 32);
            do
            {
              id v29 = *v28;
              *uint64_t v11 = *v28;
              swift_storeEnumTagMultiPayload();
              unint64_t v51 = v22;
              unint64_t v31 = v22[2];
              unint64_t v30 = v22[3];
              id v32 = v29;
              if (v31 >= v30 >> 1)
              {
                sub_100190F0C(v30 > 1, v31 + 1, 1);
                id v22 = v51;
              }
              long long v22[2] = v31 + 1;
              sub_10010C430((uint64_t)v11, (uint64_t)v22+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v31);
              ++v28;
              --v21;
            }
            while (v21);
          }
          swift_bridgeObjectRelease();
          a3 = v47;
          uint64_t v27 = v22[2];
          if (v27) {
            goto LABEL_29;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          id v22 = _swiftEmptyArrayStorage;
          uint64_t v27 = _swiftEmptyArrayStorage[2];
          if (v27)
          {
LABEL_29:
            id v48 = self;
            uint64_t v33 = *(char **)&a3[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
            uint64_t v34 = *(unsigned __int8 *)(v49 + 80);
            uint64_t v35 = (v34 + 32) & ~v34;
            uint64_t v36 = (uint64_t)v22 + v35;
            uint64_t v49 = *(void *)(v49 + 72);
            uint64_t v46 = v49 + v35;
            uint64_t v47 = v33;
            uint64_t v45 = v34 | 7;
            v44 &= 1u;
            long long v43 = xmmword_1005A0030;
            do
            {
              sub_100376A18(v36, (uint64_t)v14);
              id v37 = [v48 defaultManager];
              sub_1000CBE70(&qword_10070AE10);
              uint64_t v38 = swift_allocObject();
              *(_OWORD *)(v38 + 16) = v43;
              sub_100376A18((uint64_t)v14, v38 + v35);
              uint64_t v39 = swift_allocObject();
              *(void *)(v39 + 16) = v50;
              *(void *)(v39 + 24) = a3;
              *(unsigned char *)(v39 + 32) = v44;
              id v40 = v50;
              uint64_t v41 = a3;
              sub_100535854(7, v38, v50, 0, 0, 1, v47, sub_100376A7C, v39);

              swift_bridgeObjectRelease();
              swift_release();
              sub_100376A88((uint64_t)v14);
              v36 += v49;
              --v27;
            }
            while (v27);

            goto LABEL_32;
          }
        }

LABEL_32:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      swift_unknownObjectRelease();
      id v26 = v50;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_10036A028(unint64_t a1, void *a2, uint64_t a3, char a4)
{
  if (!a1) {
    return;
  }
  uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_20;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v8 + 16))
    {
      __break(1u);
      return;
    }
    id v10 = *(id *)(a1 + 32);
  }
  id v22 = v10;
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v11 = *(void *)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting);
    if (v11)
    {
      uint64_t v12 = self;
      uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_configuration);
      id v14 = a2;
      swift_unknownObjectRetain();
      id v15 = [v13 sceneIdentifier];
      id v16 = [v12 globalTabbedBrowserControllerForIdentifier:v15];

      if (v16)
      {
        Swift::String v17 = (void *)swift_allocObject();
        v17[2] = v16;
        v17[3] = v14;
        void v17[4] = v11;
        v17[5] = v22;
        v17[6] = 0;
        v17[7] = 0;
        aBlock[4] = sub_100376814;
        aBlock[5] = v17;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_1006A48E8;
        Swift::String v18 = _Block_copy(aBlock);
        id v19 = v14;
        swift_unknownObjectRetain();
        id v20 = v16;
        id v21 = v22;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v18);

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      return;
    }
  }
  else
  {
    sub_100376678((uint64_t)v22, a3, 0, 0);
  }
}

void sub_10036A2F0(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (All)
  {
    unint64_t v4 = All;
    v16[0] = _swiftEmptyArrayStorage;
    if (All >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((All & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          if (objc_msgSend(v7, "isItemPinned", v16[0]))
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone((Class)FPEvictOperation);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    id v11 = [v9 initWithItems:isa];

    sub_10009B208(a2, (uint64_t)v17);
    uint64_t v12 = swift_allocObject();
    sub_1000A54B0(v17, (_OWORD *)(v12 + 16));
    *(void *)(v12 + 48) = v4;
    v16[4] = sub_100376B28;
    v16[5] = v12;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1001950CC;
    id v16[3] = &unk_1006A4988;
    uint64_t v13 = _Block_copy(v16);
    id v14 = v11;
    swift_release();
    [v14 setActionCompletionBlock:v13];
    _Block_release(v13);

    id v15 = [self defaultManager];
    [v15 scheduleAction:v14];
  }
}

void sub_10036A5BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1
    || (*(void *)&long long aBlock = a1,
        swift_errorRetain(),
        sub_1000CBE70((uint64_t *)&unk_1007076D0),
        sub_10009E6C4(0, (unint64_t *)&qword_100707ED0),
        (swift_dynamicCast() & 1) == 0))
  {
    static Logger.UI.getter();
    Swift::String v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Remove Download completed successfully", v20, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return;
  }
  id v11 = v91;
  sub_10009B208(a2, (uint64_t)&aBlock);
  type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast() & 1) == 0)
  {

    return;
  }
  uint64_t v12 = v91;
  id v13 = [v11 domain];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
  }
  if ([v11 code] == (id)16)
  {
    id v22 = [v11 userInfo];
    uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v23 + 16) && (uint64_t v26 = sub_100042F50(v24, v25), (v27 & 1) != 0))
    {
      sub_10009B208(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v93 = 0u;
    }
    id v3 = (id)0xD00000000000001ALL;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v93 + 1))
    {
      if (swift_dynamicCast()) {
        goto LABEL_37;
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
    }
    id v64 = (id)_DocumentManagerBundle();
    if (v64)
    {
      uint64_t v65 = v64;
      v66._countAndFlagsBits = 0xD000000000000019;
      v67._countAndFlagsBits = 0xD000000000000027;
      v98._countAndFlagsBits = 0xD00000000000005FLL;
      v98._object = (void *)0x80000001005EC020;
      v67._object = (void *)0x80000001005EBFD0;
      v66._object = (void *)0x80000001005EC000;
      v68._countAndFlagsBits = 0x617A696C61636F4CLL;
      v68._object = (void *)0xEB00000000656C62;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v67, v68, (NSBundle)v65, v66, v98);

LABEL_37:
      id v69 = [v11 userInfo];
      uint64_t v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v70 + 16) && (uint64_t v73 = sub_100042F50(v71, v72), (v74 & 1) != 0))
      {
        sub_10009B208(*(void *)(v70 + 56) + 32 * v73, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v93 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v93 + 1))
      {
        if (swift_dynamicCast())
        {
          while (1)
          {
            while (1)
            {
              NSString v43 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              NSString v44 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v45 = [self alertControllerWithTitle:v43 message:v44 preferredStyle:1];

              id v46 = (id)_DocumentManagerBundle();
              if (!v46) {
                goto LABEL_66;
              }
              uint64_t v47 = v46;
              v97._object = (void *)0xE200000000000000;
              v48._countAndFlagsBits = 19279;
              v48._object = (void *)0xE200000000000000;
              v49._countAndFlagsBits = 0x617A696C61636F4CLL;
              v49._object = (void *)0xEB00000000656C62;
              v50._countAndFlagsBits = 0;
              v50._object = (void *)0xE000000000000000;
              v97._countAndFlagsBits = 19279;
              DOCLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v97);

              NSString v51 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v52 = [self actionWithTitle:v51 style:0 handler:0];

              [v45 addAction:v52];
              id v53 = v45;
              id v54 = [v53 actions];
              sub_10009E6C4(0, &qword_10071B880);
              a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (a3 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (!v55)
                {
LABEL_54:
                  swift_bridgeObjectRelease();
                  __break(1u);
LABEL_55:
                  __break(1u);
LABEL_56:
                  id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_29:
                  uint64_t v58 = v57;
                  swift_bridgeObjectRelease();
                  [v53 setPreferredAction:v58];

                  uint64_t v59 = (void *)swift_allocObject();
                  _OWORD v59[2] = v11;
                  v59[3] = v12;
                  void v59[4] = v53;
                  uint64_t v94 = sub_100376B38;
                  id v95 = v59;
                  *(void *)&long long aBlock = _NSConcreteStackBlock;
                  *((void *)&aBlock + 1) = 1107296256;
                  *(void *)&long long v93 = sub_1000666D8;
                  *((void *)&v93 + 1) = &unk_1006A49D8;
                  uint64_t v60 = _Block_copy(&aBlock);
                  id v61 = v53;
                  id v62 = v11;
                  id v63 = v12;
                  swift_release();
                  DOCRunInMainThread();

                  _Block_release(v60);
                  return;
                }
              }
              else
              {
                uint64_t v55 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (!v55) {
                  goto LABEL_54;
                }
              }
              unint64_t v56 = v55 - 1;
              if (__OFSUB__(v55, 1)) {
                goto LABEL_55;
              }
              if ((a3 & 0xC000000000000001) != 0) {
                goto LABEL_56;
              }
              if ((v56 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v56 < *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v57 = *(id *)(a3 + 8 * v56 + 32);
                goto LABEL_29;
              }
              __break(1u);
LABEL_59:
              swift_bridgeObjectRetain();
              uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v86 == 1) {
                break;
              }
LABEL_62:
              id v87 = (objc_class *)(id)_DocumentManagerBundle();
              if (!v87) {
                goto LABEL_71;
              }
              uint64_t v34 = v87;
              unint64_t v41 = (unint64_t)v3 + 29;
              unint64_t v37 = (unint64_t)v3 + 45;
              unint64_t v35 = (unint64_t)v3 + 92;
              unint64_t v88 = 0x80000001005EC110;
              unint64_t v36 = 0x80000001005EC080;
              unint64_t v42 = 0x80000001005EC0D0;
              uint64_t v38 = 0x617A696C61636F4CLL;
              unint64_t v39 = 0xEB00000000656C62;
              v40.super.Class isa = v34;
LABEL_20:
              DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v37, *(Swift::String *)&v38, v40, *(Swift::String *)&v41, *(Swift::String *)&v35);
            }
            swift_bridgeObjectRetain();
            if (!_CocoaArrayWrapper.endIndex.getter())
            {
              swift_bridgeObjectRelease();
              goto LABEL_62;
            }
LABEL_48:
            uint64_t v90 = v12;
            if ((a3 & 0xC000000000000001) != 0)
            {
              id v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_66:
                __break(1u);
LABEL_67:
                __break(1u);
                goto LABEL_68;
              }
              id v75 = *(id *)(a3 + 32);
            }
            id v76 = v75;
            swift_bridgeObjectRelease();
            id v77 = (id)_DocumentManagerBundle();
            if (!v77) {
              goto LABEL_70;
            }
            uint64_t v78 = v77;
            v79._countAndFlagsBits = 0x100000000000003FLL;
            v99._countAndFlagsBits = (uint64_t)v3 + 81;
            v99._object = (void *)0x80000001005EC200;
            v79._object = (void *)0x80000001005EC190;
            v80._object = (void *)0x80000001005EC1D0;
            v81._countAndFlagsBits = 0x617A696C61636F4CLL;
            v81._object = (void *)0xEB00000000656C62;
            v80._countAndFlagsBits = 0x100000000000002FLL;
            DOCLocalizedString(_:tableName:bundle:value:comment:)(v79, v81, (NSBundle)v78, v80, v99);

            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v82 = swift_allocObject();
            *(_OWORD *)(v82 + 16) = xmmword_1005A0030;
            id v3 = [v76 displayName];
            uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v85 = v84;

            *(void *)(v82 + 56) = &type metadata for String;
            *(void *)(v82 + 64) = sub_100073F48();
            *(void *)(v82 + 32) = v83;
            *(void *)(v82 + 40) = v85;
            String.init(format:_:)();
            swift_bridgeObjectRelease();

            uint64_t v12 = v90;
          }
        }
      }
      else
      {
        sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
      }
      if (a3 >> 62) {
        goto LABEL_59;
      }
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
        goto LABEL_62;
      }
      swift_bridgeObjectRetain();
      goto LABEL_48;
    }
    goto LABEL_69;
  }
LABEL_17:
  id v28 = (id)_DocumentManagerBundle();
  if (!v28) {
    goto LABEL_67;
  }
  id v29 = v28;
  v30._countAndFlagsBits = 0xD000000000000013;
  v96._countAndFlagsBits = 0xD000000000000038;
  v96._object = (void *)0x80000001005EBF30;
  v30._object = (void *)0x80000001005EBF10;
  v31._countAndFlagsBits = 0x617A696C61636F4CLL;
  v31._object = (void *)0xEB00000000656C62;
  v32._countAndFlagsBits = 0x726F727245;
  v32._object = (void *)0xE500000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v96);

  uint64_t v33 = (objc_class *)(id)_DocumentManagerBundle();
  if (v33)
  {
    uint64_t v34 = v33;
    unint64_t v35 = 0xD000000000000031;
    unint64_t v88 = 0x80000001005EBF90;
    unint64_t v36 = 0x80000001005EBF70;
    unint64_t v37 = 0xD00000000000001ALL;
    uint64_t v38 = 0x617A696C61636F4CLL;
    unint64_t v39 = 0xEB00000000656C62;
    v40.super.Class isa = v34;
    unint64_t v41 = 0xD00000000000001ALL;
    unint64_t v42 = 0x80000001005EBF70;
    goto LABEL_20;
  }
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

uint64_t sub_10036B0F4(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_23;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_23:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_27;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_26;
        }
LABEL_19:
        if (![v6 isDownloaded] || (objc_msgSend(v6, "isTrashed") & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v8 = [v6 isAnyParentTrashed];
          swift_unknownObjectRelease();
          if ((v8 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_28;
        }
      }
      uint64_t v6 = *(void **)(v10 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_19;
      }
LABEL_26:
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_28:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_10036B31C(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  if (Array<A>.fpfs_syncFetchAllFPItems()())
  {
    id v5 = objc_allocWithZone((Class)FPDownloadOperation);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithItems:isa];

    [v7 setRecursively:a3 & 1];
    sub_10009B208(a2, (uint64_t)v12);
    uint64_t v8 = swift_allocObject();
    sub_1000A54B0(v12, (_OWORD *)(v8 + 16));
    _OWORD v11[4] = sub_100376BB4;
    v11[5] = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1004E5E6C;
    v11[3] = &unk_1006A4AA0;
    uint64_t v9 = _Block_copy(v11);
    swift_release();
    [v7 setDownloadCompletionBlock:v9];
    _Block_release(v9);
    id v10 = [self defaultManager];
    [v10 scheduleAction:v7];
  }
}

void sub_10036B4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = (void *)_convertErrorToNSError(_:)();
    sub_10009B208(a3, (uint64_t)aBlock);
    type metadata accessor for DOCActionContext();
    if (swift_dynamicCast())
    {
      id v5 = (void *)aBlock[6];
      id v6 = (id)_DocumentManagerBundle();
      if (!v6)
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      id v7 = v6;
      v39._countAndFlagsBits = 0xD000000000000031;
      v39._object = (void *)0x80000001005EC330;
      v8._object = (void *)0x80000001005EBF10;
      v8._countAndFlagsBits = 0xD000000000000013;
      v9._countAndFlagsBits = 0x617A696C61636F4CLL;
      v9._object = (void *)0xEB00000000656C62;
      v10._countAndFlagsBits = 0x726F727245;
      v10._object = (void *)0xE500000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v39);

      id v11 = (id)_DocumentManagerBundle();
      if (!v11)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      long long v12 = v11;
      v40._countAndFlagsBits = 0xD00000000000002ALL;
      v40._object = (void *)0x80000001005EC390;
      v13._object = (void *)0x80000001005EC370;
      v13._countAndFlagsBits = 0xD000000000000013;
      v14._countAndFlagsBits = 0x617A696C61636F4CLL;
      v14._object = (void *)0xEB00000000656C62;
      v15._countAndFlagsBits = 0xD000000000000013;
      v15._object = (void *)0x80000001005EC370;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v40);

      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v18 = [self alertControllerWithTitle:v16 message:v17 preferredStyle:1];

      id v19 = (id)_DocumentManagerBundle();
      if (!v19)
      {
LABEL_24:
        __break(1u);
        return;
      }
      id v20 = v19;
      v41._object = (void *)0xE200000000000000;
      v21._countAndFlagsBits = 19279;
      v21._object = (void *)0xE200000000000000;
      v22._countAndFlagsBits = 0x617A696C61636F4CLL;
      v22._object = (void *)0xEB00000000656C62;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v41._countAndFlagsBits = 19279;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v41);

      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v25 = [self actionWithTitle:v24 style:0 handler:0];

      [v18 addAction:v25];
      id v26 = v18;
      id v27 = [v26 actions];
      sub_10009E6C4(0, &qword_10071B880);
      unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v29)
        {
LABEL_8:
          unint64_t v30 = v29 - 1;
          if (!__OFSUB__(v29, 1))
          {
            if ((v28 & 0xC000000000000001) == 0)
            {
              if ((v30 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v30 < *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v31 = *(id *)(v28 + 8 * v30 + 32);
LABEL_13:
                Swift::String v32 = v31;
                swift_bridgeObjectRelease();
                [v26 setPreferredAction:v32];

                uint64_t v33 = (void *)swift_allocObject();
                v33[2] = v4;
                void v33[3] = v5;
                v33[4] = v26;
                aBlock[4] = sub_100376BC0;
                aBlock[5] = v33;
                aBlock[0] = _NSConcreteStackBlock;
                aBlock[1] = 1107296256;
                void aBlock[2] = sub_1000666D8;
                aBlock[3] = &unk_1006A4AF0;
                uint64_t v34 = _Block_copy(aBlock);
                id v35 = v26;
                id v36 = v4;
                id v37 = v5;
                swift_release();
                DOCRunInMainThread();
                _Block_release(v34);

                return;
              }
              __break(1u);
              goto LABEL_22;
            }
LABEL_19:
            id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_13;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v29) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_18;
    }
  }
}

uint64_t sub_10036B980(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_24;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_24:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_30;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v3)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        id v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = i - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_29;
        }
LABEL_17:
        if ((([v6 isFolder] & 1) != 0
           || ([v6 isAppContainer] & 1) != 0
           || [v6 isDownloaded])
          && ![v6 isFolder])
        {
          swift_bridgeObjectRelease_n();
          swift_unknownObjectRelease();
          return 0;
        }
        unsigned __int8 v8 = [v6 isDownloading];
        swift_unknownObjectRelease();
        if (v8)
        {
          swift_bridgeObjectRelease_n();
          return 0;
        }
        if (v7 == v3)
        {
          swift_bridgeObjectRelease_n();
          return 1;
        }
      }
      id v6 = *(void **)(v10 + 8 * i);
      swift_unknownObjectRetain();
      uint64_t v7 = i - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_17;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_10036BBEC(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (All)
  {
    unint64_t v4 = All;
    v16[0] = _swiftEmptyArrayStorage;
    if (All >> 62)
    {
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((All & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          unsigned __int8 v8 = v7;
          if (objc_msgSend(v7, "isItemPinned", v16[0]))
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone((Class)FPPinOperation);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    id v11 = [v9 initWithItems:isa];

    sub_10009B208(a2, (uint64_t)v17);
    uint64_t v12 = swift_allocObject();
    sub_1000A54B0(v17, (_OWORD *)(v12 + 16));
    v16[4] = sub_100376C04;
    v16[5] = v12;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_1001950CC;
    id v16[3] = &unk_1006A4BB8;
    Swift::String v13 = _Block_copy(v16);
    id v14 = v11;
    swift_release();
    [v14 setActionCompletionBlock:v13];
    _Block_release(v13);

    id v15 = [self defaultManager];
    [v15 scheduleAction:v14];
  }
}

void sub_10036BEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    aBlock[0] = a1;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    if (swift_dynamicCast())
    {
      unsigned __int8 v8 = v46;
      sub_10009B208(a2, (uint64_t)aBlock);
      type metadata accessor for DOCActionContext();
      if ((swift_dynamicCast() & 1) == 0)
      {

        return;
      }
      id v9 = v46;
      id v10 = (id)_DocumentManagerBundle();
      if (!v10) {
        goto LABEL_26;
      }
      id v11 = v10;
      v12._countAndFlagsBits = 0xD000000000000013;
      v47._countAndFlagsBits = 0xD000000000000038;
      v47._object = (void *)0x80000001005EC400;
      v12._object = (void *)0x80000001005EBF10;
      v13._countAndFlagsBits = 0x617A696C61636F4CLL;
      v13._object = (void *)0xEB00000000656C62;
      v14._countAndFlagsBits = 0x726F727245;
      v14._object = (void *)0xE500000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v47);

      id v15 = (id)_DocumentManagerBundle();
      if (!v15)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      NSString v16 = v15;
      v48._countAndFlagsBits = 0xD000000000000031;
      v48._object = (void *)0x80000001005EC460;
      v17._object = (void *)0x80000001005EC440;
      v17._countAndFlagsBits = 0xD00000000000001ALL;
      v18._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 0xD00000000000001ALL;
      v19._object = (void *)0x80000001005EC440;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v48);

      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [self alertControllerWithTitle:v20 message:v21 preferredStyle:1];

      id v23 = (id)_DocumentManagerBundle();
      if (!v23)
      {
LABEL_28:
        __break(1u);
        return;
      }
      NSString v24 = v23;
      v49._object = (void *)0xE200000000000000;
      v25._countAndFlagsBits = 19279;
      v25._object = (void *)0xE200000000000000;
      v26._countAndFlagsBits = 0x617A696C61636F4CLL;
      v26._object = (void *)0xEB00000000656C62;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v49._countAndFlagsBits = 19279;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v49);

      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [self actionWithTitle:v28 style:0 handler:0];

      [v22 addAction:v29];
      id v30 = v22;
      id v31 = [v30 actions];
      sub_10009E6C4(0, &qword_10071B880);
      unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v33) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v33 = *(char **)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v33)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          [v30 setPreferredAction:v33];

          id v36 = (void *)swift_allocObject();
          v36[2] = v8;
          v36[3] = v9;
          v36[4] = v30;
          aBlock[4] = sub_100376C10;
          aBlock[5] = v36;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          void aBlock[2] = sub_1000666D8;
          aBlock[3] = &unk_1006A4C08;
          id v37 = _Block_copy(aBlock);
          id v38 = v30;
          id v39 = v8;
          id v40 = v9;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v37);

          return;
        }
      }
      uint64_t v34 = v33 - 1;
      if (__OFSUB__(v33, 1))
      {
        __break(1u);
      }
      else if ((v32 & 0xC000000000000001) == 0)
      {
        if (((unint64_t)v34 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v34 < *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v35 = (char *)*(id *)(v32 + 8 * (void)v34 + 32);
LABEL_14:
          uint64_t v33 = v35;
          goto LABEL_15;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      id v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_14;
    }
  }
  static Logger.UI.getter();
  Swift::String v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    NSString v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Keep Downloaded completed successfully", v43, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

BOOL sub_10036C494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000CBC00(a1, (uint64_t)&v30, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v31 + 1)) {
    goto LABEL_30;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v29 + 16) && (uint64_t v4 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v5 & 1) != 0))
  {
    sub_10009B208(*(void *)(v29 + 56) + 32 * v4, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1))
  {
LABEL_30:
    sub_1000CBBA4((uint64_t)&v30, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v29 >> 62) {
    goto LABEL_62;
  }
  uint64_t v6 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v7 = v29 & 0xC000000000000001;
    uint64_t v8 = 4;
    do
    {
      uint64_t v9 = v8 - 4;
      if (v7)
      {
        id v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v9, 1)) {
          goto LABEL_57;
        }
      }
      else
      {
        id v10 = *(void **)(v29 + 8 * v8);
        swift_unknownObjectRetain();
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v9, 1))
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
      }
      if (objc_msgSend(v10, "isTrashed", v26))
      {
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();
        return 0;
      }
      unsigned int v12 = [v10 isAnyParentTrashed];
      swift_unknownObjectRelease();
      if (v12)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
      ++v8;
    }
    while (v11 != v6);
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
    while (1)
    {
      if (v7)
      {
        swift_bridgeObjectRetain();
        Swift::String v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        Swift::String v14 = *(void **)(v29 + 8 * v13 + 32);
        swift_unknownObjectRetain();
      }
      unsigned __int8 v15 = [v14 isItemPinned];
      swift_unknownObjectRelease();
      if (v15) {
        break;
      }
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_61;
      }
      ++v13;
      if (v16 == v6)
      {
        uint64_t v13 = v6;
        break;
      }
    }
    uint64_t v26 = a3;
    if (v6 >= v13)
    {
      if (v13 == v6) {
        goto LABEL_64;
      }
      uint64_t v17 = 1;
      uint64_t v18 = v6;
    }
    else
    {
      uint64_t v17 = -1;
      uint64_t v18 = v13;
      uint64_t v13 = v6;
    }
    a3 = 0;
    uint64_t v27 = v18;
    uint64_t v28 = v17;
    while (1)
    {
      BOOL v20 = __OFADD__(a3, v17);
      a3 += v17;
      if (v20) {
        break;
      }
      if (v13 == v6) {
        goto LABEL_59;
      }
      if (__OFADD__(v13, 1)) {
        goto LABEL_60;
      }
      unint64_t v21 = v6;
      if (v13 + 1 != v6)
      {
        uint64_t v22 = v13 + 5;
        while (1)
        {
          unint64_t v21 = v22 - 4;
          if (v7)
          {
            swift_bridgeObjectRetain();
            id v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((v21 & 0x8000000000000000) != 0) {
              goto LABEL_55;
            }
            if (v21 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_56;
            }
            id v23 = *(void **)(v29 + 8 * v22);
            swift_unknownObjectRetain();
          }
          unsigned __int8 v24 = [v23 isItemPinned:v26];
          swift_unknownObjectRelease();
          if (v24) {
            goto LABEL_38;
          }
          uint64_t v25 = v22 - 3;
          if (__OFADD__(v21, 1)) {
            break;
          }
          ++v22;
          if (v25 == v6)
          {
            unint64_t v21 = v6;
LABEL_38:
            uint64_t v18 = v27;
            uint64_t v17 = v28;
            goto LABEL_39;
          }
        }
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
LABEL_39:
      uint64_t v13 = v21;
      if (v21 == v18) {
        goto LABEL_65;
      }
    }
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = a3;
  swift_bridgeObjectRelease();
LABEL_64:
  a3 = 0;
LABEL_65:
  swift_bridgeObjectRelease();
  return a3 < v26;
}

void sub_10036C858(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  if (Array<A>.fpfs_syncFetchAllFPItems()())
  {
    id v3 = objc_allocWithZone((Class)FPUnpinOperation);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v5 = [v3 initWithItems:isa];

    sub_10009B208(a2, (uint64_t)v11);
    uint64_t v6 = swift_allocObject();
    sub_1000A54B0(v11, (_OWORD *)(v6 + 16));
    v10[4] = sub_100376C3C;
    v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1001950CC;
    v10[3] = &unk_1006A4CA8;
    unint64_t v7 = _Block_copy(v10);
    id v8 = v5;
    swift_release();
    [v8 setActionCompletionBlock:v7];
    _Block_release(v7);

    id v9 = [self defaultManager];
    [v9 scheduleAction:v8];
  }
}

void sub_10036CA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    aBlock[0] = a1;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    if (swift_dynamicCast())
    {
      id v8 = v46;
      sub_10009B208(a2, (uint64_t)aBlock);
      type metadata accessor for DOCActionContext();
      if ((swift_dynamicCast() & 1) == 0)
      {

        return;
      }
      id v9 = v46;
      id v10 = (id)_DocumentManagerBundle();
      if (!v10) {
        goto LABEL_26;
      }
      uint64_t v11 = v10;
      v12._countAndFlagsBits = 0xD000000000000013;
      v47._countAndFlagsBits = 0xD000000000000040;
      v47._object = (void *)0x80000001005EC830;
      v12._object = (void *)0x80000001005EBF10;
      v13._countAndFlagsBits = 0x617A696C61636F4CLL;
      v13._object = (void *)0xEB00000000656C62;
      v14._countAndFlagsBits = 0x726F727245;
      v14._object = (void *)0xE500000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v47);

      id v15 = (id)_DocumentManagerBundle();
      if (!v15)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v16 = v15;
      v48._countAndFlagsBits = 0xD000000000000039;
      v48._object = (void *)0x80000001005EC8B0;
      v17._object = (void *)0x80000001005EC880;
      v17._countAndFlagsBits = 0xD000000000000022;
      v18._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 0xD000000000000022;
      v19._object = (void *)0x80000001005EC880;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v48);

      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [self alertControllerWithTitle:v20 message:v21 preferredStyle:1];

      id v23 = (id)_DocumentManagerBundle();
      if (!v23)
      {
LABEL_28:
        __break(1u);
        return;
      }
      unsigned __int8 v24 = v23;
      v49._object = (void *)0xE200000000000000;
      v25._countAndFlagsBits = 19279;
      v25._object = (void *)0xE200000000000000;
      v26._countAndFlagsBits = 0x617A696C61636F4CLL;
      v26._object = (void *)0xEB00000000656C62;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v49._countAndFlagsBits = 19279;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v49);

      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [self actionWithTitle:v28 style:0 handler:0];

      [v22 addAction:v29];
      id v30 = v22;
      id v31 = [v30 actions];
      sub_10009E6C4(0, &qword_10071B880);
      unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v33) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v33 = *(char **)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v33)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          [v30 setPreferredAction:v33];

          id v36 = (void *)swift_allocObject();
          v36[2] = v8;
          v36[3] = v9;
          v36[4] = v30;
          aBlock[4] = sub_100376C90;
          aBlock[5] = v36;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          void aBlock[2] = sub_1000666D8;
          aBlock[3] = &unk_1006A4CF8;
          id v37 = _Block_copy(aBlock);
          id v38 = v30;
          id v39 = v8;
          id v40 = v9;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v37);

          return;
        }
      }
      uint64_t v34 = v33 - 1;
      if (__OFSUB__(v33, 1))
      {
        __break(1u);
      }
      else if ((v32 & 0xC000000000000001) == 0)
      {
        if (((unint64_t)v34 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v34 < *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v35 = (char *)*(id *)(v32 + 8 * (void)v34 + 32);
LABEL_14:
          uint64_t v33 = v35;
          goto LABEL_15;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      id v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_14;
    }
  }
  static Logger.UI.getter();
  Swift::String v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    NSString v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Stop Keeping Downloaded completed successfully", v43, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_10036D000(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
  *(void *)(v7 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v7 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
  *(void *)(v7 + 32) = a1;
  id v8 = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v9 = *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);

  return [v9 presentViewController:a3 animated:1 completion:0];
}

uint64_t sub_10036D130(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_20;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_20:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v10 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    while (1)
    {
      uint64_t v5 = v4 - 4;
      if ((v10 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_23;
      }
LABEL_17:
      unsigned __int8 v8 = [v6 isItemPinned];
      swift_unknownObjectRelease();
      if ((v8 & 1) == 0)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
      ++v4;
      if (v7 == v3) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void **)(v10 + 8 * v4);
    swift_unknownObjectRetain();
    uint64_t v7 = v4 - 3;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_17;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  return 1;
}

void sub_10036D320(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_10009B208(a2, (uint64_t)aBlock);
    type metadata accessor for DOCActionContext();
    if (swift_dynamicCast())
    {
      uint64_t v6 = (void *)aBlock[6];
      id v7 = [self defaultManager];
      id v8 = [v5 itemID];
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v6;
      aBlock[4] = sub_100376CF4;
      aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10016A350;
      aBlock[3] = &unk_1006A4D98;
      unint64_t v10 = _Block_copy(aBlock);
      id v11 = v6;
      swift_release();
      [v7 fetchParentsForItemID:v8 recursively:1 completionHandler:v10];
      _Block_release(v10);
    }
    else
    {
    }
  }
}

void sub_10036D56C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    return;
  }
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5) {
      return;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return;
    }
  }
  uint64_t v6 = 0;
  unint64_t v7 = a1 & 0xC000000000000001;
  while (1)
  {
    id v8 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v6 + 32);
    uint64_t v9 = v8;
    if ([v8 isItemPinned]) {
      break;
    }

LABEL_12:
    uint64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    ++v6;
    if (v11 == v5) {
      return;
    }
  }
  unsigned __int8 v10 = [v9 isPinnedSubitem];

  if (v10) {
    goto LABEL_12;
  }
  if (v7)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    if (!__OFADD__(v6, 1))
    {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_20;
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
    if (__OFADD__(v6, 1)) {
      goto LABEL_27;
    }
    Swift::String v14 = *(void **)(a1 + 8 * v6 + 32);
    id v15 = *(void **)(a1 + 32 + 8 * (v6 + 1));
    id v12 = v14;
    id v13 = v15;
LABEL_20:
    id v16 = v13;
    sub_100376678((uint64_t)v12, a3, 0, 0);
  }
}

uint64_t sub_10036D718(uint64_t a1, uint64_t a2)
{
  return sub_10036D880(a1, a2, (SEL *)&selRef_doc_isCollaborationInvitation);
}

void sub_10036D724(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_10009B208(a2, (uint64_t)v7);
    type metadata accessor for DOCActionContext();
    if (swift_dynamicCast())
    {
      sub_100376678((uint64_t)v5, (uint64_t)v6, 0, 0);
    }
    else
    {
    }
  }
}

uint64_t sub_10036D880(uint64_t a1, uint64_t a2, SEL *a3)
{
  sub_1000CBC00(a1, (uint64_t)&v14, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v15 + 1)) {
    goto LABEL_23;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v13 + 16) && (uint64_t v4 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v5 & 1) != 0))
  {
    sub_10009B208(*(void *)(v13 + 56) + 32 * v4, (uint64_t)&v14);
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_23:
    sub_1000CBBA4((uint64_t)&v14, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v13 >> 62) {
      goto LABEL_27;
    }
    uint64_t v6 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v6)
    {
      uint64_t v7 = 4;
      while (1)
      {
        uint64_t v8 = v7 - 4;
        if ((v13 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v8, 1)) {
          goto LABEL_26;
        }
LABEL_19:
        if (([v9 isTrashed] & 1) != 0
          || ([v9 isAnyParentTrashed] & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v11 = [v9 *a3];
          swift_unknownObjectRelease();
          if ((v11 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v7;
        if (v10 == v6) {
          goto LABEL_28;
        }
      }
      uint64_t v9 = *(void **)(v13 + 8 * v7);
      swift_unknownObjectRetain();
      uint64_t v10 = v7 - 3;
      if (!__OFADD__(v8, 1)) {
        goto LABEL_19;
      }
LABEL_26:
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_28:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_10036DAA8(unint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)aBlock);
  type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v3 = (void *)aBlock[6];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_11:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  char v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v5)
  {
    id v6 = [self defaultPermission];
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v3;
    aBlock[4] = sub_1003772CC;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006A4FC8;
    uint64_t v8 = _Block_copy(aBlock);
    id v9 = v5;
    id v10 = v3;
    swift_release();
    [v6 adoptPersonaFromItem:v9 andPerformBlock:v8];
    _Block_release(v8);
  }
  else
  {
  }
}

void sub_10036DCC0(void *a1, void *a2)
{
  FPItem.bumpLastOpenDate(delay:)(0.0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  v8[4] = sub_1003772D4;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000666D8;
  v8[3] = &unk_1006A5018;
  char v5 = _Block_copy(v8);
  id v6 = a2;
  id v7 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
}

uint64_t sub_10036DD9C(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_26;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_26:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_30;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        id v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_29;
        }
LABEL_17:
        if (([v6 isTrashed] & 1) != 0
          || ([v6 isAnyParentTrashed] & 1) != 0
          || ([v6 isFolder] & 1) != 0
          || ([v6 isAppContainer] & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v8 = [v6 doc_isCollaborationInvitation];
          swift_unknownObjectRelease();
          if ((v8 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_31;
        }
      }
      id v6 = *(void **)(v10 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_17;
      }
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_10036DFEC(unint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  sub_1000CBC00(a2, (uint64_t)v25, (uint64_t *)&unk_100705D60);
  if (!v25[3])
  {
    sub_1000CBBA4((uint64_t)v25, (uint64_t *)&unk_100705D60);
    return;
  }
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v24;
    *(void *)(v9 + 24) = a3;
    *(void *)(v9 + 32) = a1;
    int v10 = a4 & 1;
    *(unsigned char *)(v9 + 40) = v10;
    if (a5)
    {
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      id v11 = a3;
      id v12 = v24;
      sub_10036E308(a5, v12, v11, a1, v10);
      swift_unknownObjectRelease_n();
      swift_release();

      return;
    }
    v25[0] = _swiftEmptyArrayStorage;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v22 = a3;
      id v23 = v24;
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13)
      {
LABEL_8:
        if (v13 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v13; ++i)
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v17 = *(id *)(a1 + 8 * i + 32);
          }
          Swift::String v18 = v17;
          id v19 = [v17 fileProviderItem];

          if (v19)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        NSString v20 = (void *)v25[0];
        if (!(v25[0] >> 62)) {
          goto LABEL_19;
        }
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      id v14 = a3;
      id v15 = v24;
      if (v13) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    NSString v20 = _swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_19:
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      unint64_t v21 = (unint64_t)v20;
LABEL_20:
      swift_bridgeObjectRelease();
      swift_retain();
      sub_10015EC28(v21, (void (*)(void))sub_100377398, v9);
      swift_bridgeObjectRelease();

      swift_release_n();
      return;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t v21 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
}

void sub_10036E308(uint64_t a1, void *a2, void *a3, unint64_t a4, int a5)
{
  int v70 = a5;
  uint64_t v9 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v9 - 8);
  char v74 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v76 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v16 = (char *)&v64 - v15;
  uint64_t v17 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  NSString v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v64 - v21;
  if (!a1 || (swift_getObjectType(), (id v23 = (void *)DOCNode.fpfs_syncFetchFPItem()()) == 0))
  {
    id v45 = (void *)swift_allocObject();
    v45[2] = a2;
    v45[3] = 0;
    v45[4] = a3;
    aBlock[4] = sub_1003773AC;
    aBlock[5] = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006A5130;
    id v46 = _Block_copy(aBlock);
    Swift::String v47 = a2;
    Swift::String v48 = v46;
    id v49 = v47;
    id v50 = a3;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v48);
    return;
  }
  id v67 = v23;
  uint64_t v24 = swift_allocObject();
  id v25 = [objc_allocWithZone((Class)type metadata accessor for DOCShortcutsActionRunner()) init];
  uint64_t v69 = v24;
  *(void *)(v24 + 16) = v25;
  id v68 = [objc_allocWithZone((Class)WFContextualActionContext) initWithSurface:1];
  aBlock[0] = _swiftEmptyArrayStorage;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v26 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  Swift::String v66 = a2;
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (v26 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v65 = a3;
  uint64_t v27 = 0;
  Swift::String v81 = (void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  unint64_t v82 = a4 & 0xC000000000000001;
  Swift::String v79 = v20;
  Swift::String v80 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  id v75 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  id v77 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v78 = v26;
  uint64_t v72 = v11;
  unint64_t v73 = a4;
  uint64_t v71 = v16;
  do
  {
    if (v82) {
      id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v28 = *(id *)(a4 + 8 * v27 + 32);
    }
    id v29 = v28;
    id v30 = [v28 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*v81)(v22, 0, 1, v11);
    sub_1000CBC00((uint64_t)v22, (uint64_t)v20, &qword_1007076B0);
    if ((*v80)(v20, 1, v11) == 1)
    {
      sub_1000CBBA4((uint64_t)v20, &qword_1007076B0);
      sub_1000CBBA4((uint64_t)v22, &qword_1007076B0);
LABEL_9:

      NSString v20 = v79;
      goto LABEL_10;
    }
    (*v75)(v16, v20, v11);
    char v31 = URL.isFileURL.getter();
    uint64_t v26 = v78;
    char v32 = v31;
    uint64_t v33 = *v77;
    (*v77)(v16, v11);
    sub_1000CBBA4((uint64_t)v22, &qword_1007076B0);
    if ((v32 & 1) == 0) {
      goto LABEL_9;
    }
    id v34 = [v29 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v35 = [v29 contentType];
    id v36 = v74;
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v37 = type metadata accessor for UTType();
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v37);
    URL._bridgeToObjectiveC()(v39);
    Swift::String v41 = v40;
    Class isa = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) != 1)
    {
      NSString v43 = v74;
      Class isa = UTType._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v37);
    }
    id v44 = [objc_allocWithZone((Class)WFContextualActionFile) initWithFileURL:v41 type:isa];

    uint64_t v11 = v72;
    v33(v76, v72);

    a4 = v73;
    id v16 = v71;
    uint64_t v26 = v78;
    NSString v20 = v79;
    if (v44)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v26 = v78;
    }
LABEL_10:
    ++v27;
  }
  while (v26 != v27);
  swift_bridgeObjectRelease();
  a3 = v65;
LABEL_25:
  sub_10009E6C4(0, (unint64_t *)&unk_100712330);
  Class v51 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v52 = v68;
  [v68 setFiles:v51];

  uint64_t v53 = v69;
  id v54 = *(char **)(v69 + 16);
  if (v54)
  {
    uint64_t v55 = swift_allocObject();
    unint64_t v56 = v66;
    *(void *)(v55 + 16) = v66;
    *(void *)(v55 + 24) = a3;
    id v57 = v67;
    *(void *)(v55 + 32) = a4;
    *(void *)(v55 + 40) = v57;
    *(unsigned char *)(v55 + 48) = v70 & 1;
    *(void *)(v55 + 56) = v53;
    uint64_t v58 = (void (**)(unint64_t, uint64_t))&v54[OBJC_IVAR____TtC5FilesP33_AE816C615539461ED264CC7968FD4AFF24DOCShortcutsActionRunner_completionHandler];
    *uint64_t v58 = sub_100377410;
    v58[1] = (void (*)(unint64_t, uint64_t))v55;
    id v59 = v56;
    id v60 = a3;
    swift_bridgeObjectRetain();
    id v61 = v54;
    id v62 = v57;
    swift_retain();
    swift_retain();
    swift_release();
    id v63 = [objc_allocWithZone((Class)WFContextualActionRunnerClient) initWithContextualAction:v60 actionContext:v52];
    [v63 setDelegate:v61];
    [v63 start];
    swift_release();

    swift_release();
  }
  else
  {
    swift_release();
  }
}

void sub_10036EB0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);
  id v6 = [v5 viewIfLoaded];
  if (v6
    && (v7 = v6, id v8 = [v6 window], v7, v8)
    && (id v9 = [v8 windowScene], v8, v9))
  {
    id v10 = [v9 activationState];

    BOOL v11 = v10 != (id)2;
    if (!a2)
    {
LABEL_5:
      long long v45 = 0u;
      long long v46 = 0u;
      goto LABEL_13;
    }
  }
  else
  {
    BOOL v11 = 1;
    if (!a2) {
      goto LABEL_5;
    }
  }
  uint64_t v12 = (void *)_convertErrorToNSError(_:)();
  id v13 = [v12 userInfo];

  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v14 + 16) && (uint64_t v17 = sub_100042F50(v15, v16), (v18 & 1) != 0))
  {
    sub_10009B208(*(void *)(v14 + 56) + 32 * v17, (uint64_t)&v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v46 + 1))
    {
      if (swift_dynamicCast()) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_13:
  sub_1000CBBA4((uint64_t)&v45, (uint64_t *)&unk_100705D60);
LABEL_14:
  id v19 = (id)_DocumentManagerBundle();
  if (!v19)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  NSString v20 = v19;
  v47._object = (void *)0x80000001005ECDD0;
  v21._object = (void *)0x80000001005ECDB0;
  v21._countAndFlagsBits = 0x100000000000001DLL;
  v22._countAndFlagsBits = 0x617A696C61636F4CLL;
  v22._object = (void *)0xEB00000000656C62;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v47._countAndFlagsBits = 0xD000000000000065;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v47);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005A0030;
  id v25 = [a3 displayString];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = sub_100073F48();
  *(void *)(v24 + 32) = v26;
  *(void *)(v24 + 40) = v28;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
LABEL_16:
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = [self alertControllerWithTitle:0 message:v29 preferredStyle:1];

  id v31 = (id)_DocumentManagerBundle();
  if (v31)
  {
    char v32 = v31;
    v48._object = (void *)0xE200000000000000;
    v33._countAndFlagsBits = 19279;
    v33._object = (void *)0xE200000000000000;
    v34._countAndFlagsBits = 0x617A696C61636F4CLL;
    v34._object = (void *)0xEB00000000656C62;
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v48._countAndFlagsBits = 19279;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v48);

    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [self actionWithTitle:v36 style:0 handler:0];

    [v30 addAction:v37];
    id v38 = v30;
    id v39 = [v38 actions];
    sub_10009E6C4(0, &qword_10071B880);
    unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v41)
      {
LABEL_19:
        unint64_t v42 = v41 - 1;
        if (!__OFSUB__(v41, 1))
        {
          if ((v40 & 0xC000000000000001) == 0)
          {
            if ((v42 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v42 < *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v43 = *(id *)(v40 + 8 * v42 + 32);
LABEL_24:
              id v44 = v43;
              swift_bridgeObjectRelease();
              [v38 setPreferredAction:v44];

              [v5 presentViewController:v38 animated:v11 completion:0];
              return;
            }
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_24;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v41) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_10036F044(void *a1, void *a2)
{
  id v4 = [a1 stringByDeletingPathExtension];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  id v8 = [a1 pathExtension];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::String v9 = String.lowercased()();
  swift_bridgeObjectRelease();
  id v10 = [a2 stringByDeletingPathExtension];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  id v14 = [a2 pathExtension];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::String v15 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v5 == v11 && v7 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      char v17 = 0;
      goto LABEL_10;
    }
  }
  if (v9._countAndFlagsBits == v15._countAndFlagsBits && v9._object == v15._object) {
    char v17 = 1;
  }
  else {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17 & 1;
}

void sub_10036F208(void *a1, unint64_t a2, void *a3, void *a4)
{
  Swift::String v33 = a3;
  Swift::String v34 = a4;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 fileURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = URL.lastPathComponent.getter();
  uint64_t v16 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  swift_bridgeObjectRetain();
  char v18 = sub_1003763F4(a2, v14, v16);
  swift_bridgeObjectRelease_n();
  if (v18)
  {
    id v19 = [v18 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v19) = URL.startAccessingSecurityScopedResource()();
    v17(v12, v9);
    id v20 = [a1 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v20) = URL.startAccessingSecurityScopedResource()();
    uint64_t v21 = ((uint64_t (*)(char *, uint64_t))v17)(v12, v9);
    __chkstk_darwin(v21);
    *(&v32 - 2) = (uint64_t)a1;
    sub_100377448(v18, (uint64_t)sub_10037742C, &v32 - 4);
    sub_10036F75C(a1, v19 & 1, v18, v20 & 1);
  }
  else
  {
    uint64_t v22 = v32;
    static Logger.UI.getter();
    Swift::String v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Shortcuts: Couldn't find the original file to overwrite", v25, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
    uint64_t v26 = (void *)swift_allocObject();
    uint64_t v28 = v33;
    uint64_t v27 = v34;
    _OWORD v26[2] = v33;
    v26[3] = 0;
    v26[4] = v27;
    aBlock[4] = sub_100377CCC;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006A5220;
    NSString v29 = _Block_copy(aBlock);
    id v30 = v28;
    id v31 = v27;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v29);
  }
}

id sub_10036F75C(void *a1, char a2, void *a3, char a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a1 dispose];
  if (a2)
  {
    id v13 = [a3 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (a4)
  {
    id v14 = [a1 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

id sub_10036F8BC(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self defaultManager];
  id v8 = [a2 fileURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v9);
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  URL._bridgeToObjectiveC()(v12);
  id v14 = v13;
  id v18 = 0;
  unsigned __int8 v15 = [v7 copyItemAtURL:v11 toURL:v13 error:&v18];

  id result = v18;
  if ((v15 & 1) == 0)
  {
    char v17 = result;
    _convertNSErrorToError(_:)();

    return (id)swift_willThrow();
  }
  return result;
}

void sub_10036FA7C(void *a1, void *a2, void *a3, void *a4, int a5)
{
  int v32 = a5;
  id v31 = a4;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_1007087F0);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  unint64_t v14 = v13 + v12;
  id v15 = [a1 fileURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  id v16 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
  id v17 = a2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithURLs:isa destinationFolder:v17];

  [v19 setLastUsageUpdatePolicy:2];
  [v19 setShouldBounceOnCollision:1];
  id v20 = [a1 fileURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v20) = URL.startAccessingSecurityScopedResource()();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(unsigned char *)(v21 + 24) = v20 & 1;
  uint64_t v22 = v31;
  *(void *)(v21 + 32) = a3;
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = v19;
  *(void *)(v21 + 56) = v17;
  *(unsigned char *)(v21 + 64) = v32;
  aBlock[4] = sub_100377A64;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1001950CC;
  aBlock[3] = &unk_1006A5338;
  Swift::String v23 = _Block_copy(aBlock);
  id v24 = v19;
  id v25 = v17;
  id v26 = v24;
  id v27 = a1;
  id v28 = a3;
  id v29 = v22;
  swift_release();
  [v26 setActionCompletionBlock:v23];
  _Block_release(v23);

  id v30 = [self defaultManager];
  [v30 scheduleAction:v26];
}

id sub_10036FDC0(uint64_t a1, void *a2, int a3, char *a4, void *a5, void *a6, void *a7, char a8)
{
  int v56 = a3;
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v55 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v20 = (char *)&v53 - v19;
  if (a1)
  {
    swift_errorRetain();
    uint64_t v21 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A0030;
    uint64_t v23 = _convertErrorToNSError(_:)();
    uint64_t v53 = v16;
    id v54 = a2;
    *(void *)(v22 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v22 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v22 + 32) = v23;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v24 = (void *)swift_allocObject();
    _OWORD v24[2] = a4;
    v24[3] = 0;
    v24[4] = a5;
    id v61 = sub_100377CCC;
    id v62 = v24;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v58 = 1107296256;
    id v59 = sub_1000666D8;
    id v60 = &unk_1006A53D8;
    id v25 = _Block_copy(&aBlock);
    id v26 = a4;
    id v27 = a5;
    uint64_t v16 = v53;
    swift_release();
    DOCRunInMainThread();
    id v28 = v25;
    a2 = v54;
    _Block_release(v28);
    swift_errorRelease();
    goto LABEL_14;
  }
  id v29 = [a6 transferResults];
  if (v29)
  {
    id v30 = v29;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    int v32 = a2;
    id v33 = [a2 fileURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v55, v20, v15);
    sub_1000BAC54((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    AnyHashable.init<A>(_:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    if (!*(void *)(v31 + 16) || (unint64_t v34 = sub_10008E070((uint64_t)&aBlock), (v35 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)&aBlock);
LABEL_11:
      a2 = v32;
      goto LABEL_14;
    }
    id v36 = *(id *)(*(void *)(v31 + 56) + 8 * v34);
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)&aBlock);
    a2 = v32;
    if (a8)
    {
      uint64_t v37 = *(void *)&a4[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
      if (v37)
      {
        uint64_t v38 = v16;
        uint64_t v39 = v15;
        unint64_t v40 = self;
        uint64_t v41 = *(void **)&a4[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
        id v42 = a7;
        swift_unknownObjectRetain();
        id v43 = [v41 sceneIdentifier];
        id v44 = [v40 globalTabbedBrowserControllerForIdentifier:v43];

        if (v44)
        {
          long long v45 = (void *)swift_allocObject();
          v45[2] = v44;
          v45[3] = v42;
          v45[4] = v37;
          v45[5] = v36;
          v45[6] = 0;
          v45[7] = 0;
          id v61 = (void (*)())sub_100376814;
          id v62 = v45;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v58 = 1107296256;
          id v59 = sub_1000666D8;
          id v60 = &unk_1006A5388;
          long long v46 = _Block_copy(&aBlock);
          id v47 = v36;
          id v48 = v42;
          swift_unknownObjectRetain();
          id v49 = v44;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v46);

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        uint64_t v15 = v39;
        uint64_t v16 = v38;
        goto LABEL_11;
      }
    }
    else
    {
      sub_100376678((uint64_t)v36, (uint64_t)a4, 0, 0);
    }
  }
LABEL_14:
  id result = [a2 dispose];
  if (v56)
  {
    id v51 = [a2 fileURL];
    id v52 = v55;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v52, v15);
  }
  return result;
}

void sub_1003703A8(unint64_t a1, uint64_t a2, void *a3, void *a4, unint64_t a5, void *a6, char a7, uint64_t a8)
{
  unint64_t v46 = a5;
  id v47 = a6;
  uint64_t v41 = a3;
  uint64_t v45 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v17 = v41;
      if (v16) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v17 = v41;
      if (v16)
      {
LABEL_4:
        if (v16 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v40 = a8;
        uint64_t v18 = 0;
        unint64_t v19 = a1 & 0xC000000000000001;
        unint64_t v43 = a1 & 0xC000000000000001;
        id v44 = (void (**)(char *, uint64_t))(v13 + 8);
        id v20 = &selRef_prepareForReuse;
        int v42 = a7 & 1;
        do
        {
          if (v19) {
            id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v21 = *(id *)(a1 + 8 * v18 + 32);
          }
          uint64_t v22 = v21;
          id v23 = [a4 v20[315]];
          if (v23 == (id)1)
          {
            sub_10036FA7C(v22, v47, v17, a4, v42);
          }
          else if (v23)
          {
            uint64_t v24 = v16;
            unint64_t v25 = a1;
            id v26 = a4;
            id v27 = v20;
            static Logger.UI.getter();
            id v28 = Logger.logObject.getter();
            os_log_type_t v29 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v28, v29))
            {
              id v30 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v30 = 0;
              _os_log_impl((void *)&_mh_execute_header, v28, v29, "Error: unsupported shortcuts result file operation type", v30, 2u);
              uint64_t v17 = v41;
              swift_slowDealloc();
            }

            (*v44)(v15, v45);
            id v20 = v27;
            a4 = v26;
            a1 = v25;
            uint64_t v16 = v24;
            unint64_t v19 = v43;
          }
          else
          {
            sub_10036F208(v22, v46, v17, a4);
          }

          ++v18;
        }
        while (v16 != v18);
        swift_bridgeObjectRelease();
        a8 = v40;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
LABEL_24:
    swift_beginAccess();
    uint64_t v38 = *(void **)(a8 + 16);
    *(void *)(a8 + 16) = 0;

    return;
  }
  if (!a2
    || (aBlock[0] = a2,
        swift_errorRetain(),
        sub_1000CBE70((uint64_t *)&unk_1007076D0),
        sub_10009E6C4(0, (unint64_t *)&qword_100707ED0),
        (swift_dynamicCast() & 1) == 0)
    || (uint64_t v31 = v48, v32 = NSError.isUserCancelledError.getter(), v31, (v32 & 1) == 0))
  {
    id v33 = (void *)swift_allocObject();
    unint64_t v34 = v41;
    v33[2] = v41;
    void v33[3] = a2;
    v33[4] = a4;
    aBlock[4] = sub_100377CCC;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006A51D0;
    char v35 = _Block_copy(aBlock);
    swift_errorRetain();
    id v36 = v34;
    id v37 = a4;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v35);
  }
}

uint64_t sub_100370784(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1)
  {
    swift_getObjectType();
    uint64_t v3 = DOCNode.fpfs_syncFetchFPItem()();
  }
  else
  {
    uint64_t v3 = 0;
  }
  a2(v3);

  return swift_unknownObjectRelease();
}

id sub_1003707F0(void *a1)
{
  id v1 = [a1 iconSymbolName];
  if (!v1) {
    goto LABEL_5;
  }
  char v2 = v1;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [self systemImageNamed:v3];

  if (!v4)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007123B0);
    id v4 = (id)static UIImage.doc_executablesFrameworkImage(named:)();
    swift_bridgeObjectRelease();
    if (v4) {
      return v4;
    }
LABEL_5:
    NSString v5 = String._bridgeToObjectiveC()();
    id v4 = [self systemImageNamed:v5];

    return v4;
  }
  swift_bridgeObjectRelease();
  return v4;
}

BOOL sub_10037091C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)&v63, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v64 + 1)) {
    goto LABEL_23;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unint64_t v9 = v62;
  if (*(void *)(v62 + 16) && (uint64_t v10 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v11 & 1) != 0))
  {
    sub_10009B208(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v63);
  }
  else
  {
    long long v63 = 0u;
    long long v64 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v64 + 1))
  {
LABEL_23:
    sub_1000CBBA4((uint64_t)&v63, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v59 = a3;
  unint64_t v12 = v62;
  uint64_t v13 = v62 >> 62;
  if (!(v62 >> 62))
  {
    uint64_t v14 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
      uint64_t v61 = 0;
      uint64_t v57 = v5;
      uint64_t v58 = v8;
      uint64_t v56 = v6;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_53;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 <= 0)
  {
LABEL_53:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v61 = v13;
  uint64_t v57 = v5;
  uint64_t v58 = v8;
  uint64_t v56 = v6;
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    goto LABEL_35;
  }
LABEL_12:
  uint64_t v13 = v12 & 0xC000000000000001;
  uint64_t v5 = 4;
  do
  {
    uint64_t v6 = v5 - 4;
    if (v13)
    {
      uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v16 = v5 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v15 = *(void **)(v12 + 8 * v5);
      swift_unknownObjectRetain();
      uint64_t v16 = v5 - 3;
      if (__OFADD__(v6, 1))
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    if ([v15 isTrashed])
    {
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
      return 0;
    }
    unsigned __int8 v17 = [v15 isAnyParentTrashed];
    swift_unknownObjectRelease();
    if (v17)
    {
LABEL_52:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    ++v5;
  }
  while (v16 != v14);
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    uint64_t v18 = *(void **)(v12 + 32);
    swift_unknownObjectRetain();
  }
  uint64_t v21 = v61;
  uint64_t v22 = (char *)[v18 providerDomainID];
  swift_unknownObjectRelease();
  if (!v21)
  {
    uint64_t v61 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v23 = v22;
    swift_bridgeObjectRetain();
    goto LABEL_36;
  }
LABEL_35:
  unint64_t v25 = v22;
  swift_bridgeObjectRetain();
  uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
LABEL_36:
  if (v61)
  {
    unint64_t v60 = v12 & 0xC000000000000001;
    uint64_t v26 = 4;
    while (1)
    {
      uint64_t v28 = v26 - 4;
      if (v60)
      {
        id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v30 = v26 - 3;
        if (__OFADD__(v28, 1)) {
          goto LABEL_62;
        }
      }
      else
      {
        id v29 = *(id *)(v12 + 8 * v26);
        swift_unknownObjectRetain();
        uint64_t v30 = v26 - 3;
        if (__OFADD__(v28, 1))
        {
LABEL_62:
          __break(1u);
LABEL_63:
          swift_bridgeObjectRetain();
          uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_60;
        }
      }
      id v31 = [v29 providerDomainID];
      if (!v22)
      {
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();

        return 0;
      }
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;
      uint64_t v8 = v22;
      if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
      {
        id v27 = v22;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v38 = v22;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v37 & 1) == 0)
        {

          goto LABEL_52;
        }
      }
      ++v26;
      if (v30 == v61)
      {

        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
    }
  }
  swift_bridgeObjectRelease();

LABEL_57:
  id v29 = [objc_allocWithZone((Class)WFContextualActionContext) initWithSurface:1];
  uint64_t v8 = v58;
  uint64_t v39 = URL.init(fileURLWithPath:isDirectory:)();
  __chkstk_darwin(v39);
  *(&v56 - 2) = (uint64_t)v8;
  sub_100365C2C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_100377334, (uint64_t)(&v56 - 4), v12);
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&unk_100712330);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v29 setFiles:isa];

  id v41 = [self standardClient];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1005A04F0;
  unint64_t v43 = v59;
  *(void *)(v42 + 32) = v59;
  *(void *)&long long v63 = v42;
  specialized Array._endMutation()();
  sub_10009E6C4(0, &qword_100714280);
  id v44 = v43;
  Class v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)&long long v63 = 0;
  id v46 = [v41 filteredContextualActions:v45 forContext:v29 byType:0 error:&v63];

  id v47 = (void *)v63;
  if (!v46)
  {
    id v52 = (id)v63;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v53 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1005A0030;
    uint64_t v55 = _convertErrorToNSError(_:)();
    *(void *)(v54 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v54 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v54 + 32) = v55;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
    return 0;
  }
  unint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v49 = v47;

  if (v48 >> 62) {
    goto LABEL_63;
  }
  uint64_t v50 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_60:
  uint64_t v51 = v57;

  swift_bridgeObjectRelease();
  BOOL v19 = v50 != 0;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v51);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1003711A0@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v5 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v5 - 8);
  uint64_t v57 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v58 = (char *)&v54 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v55 = (uint64_t)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  id v20 = (char *)&v54 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  id v23 = (char *)&v54 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v54 - v25;
  __chkstk_darwin(v24);
  uint64_t v61 = (char *)&v54 - v27;
  id v60 = *a1;
  id v28 = [v60 nodeURL];
  uint64_t v54 = a3;
  if (v28)
  {
    id v29 = v28;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v30(v26, 0, 1, v7);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v30(v26, 1, 1, v7);
  }
  sub_1000CBC00((uint64_t)v26, (uint64_t)v23, &qword_1007076B0);
  id v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v31(v23, 1, v7) == 1)
  {
    sub_1000CBBA4((uint64_t)v23, &qword_1007076B0);
    sub_1000CBBA4((uint64_t)v26, &qword_1007076B0);
LABEL_9:
    uint64_t v37 = (uint64_t)v61;
    v30(v61, 1, 1, v7);
    uint64_t v38 = v57;
    uint64_t v39 = v58;
    uint64_t v34 = v56;
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v23, v7);
  char v32 = URL.isFileURL.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  sub_1000CBBA4((uint64_t)v26, &qword_1007076B0);
  if ((v32 & 1) == 0) {
    goto LABEL_9;
  }
  id v33 = [v60 nodeURL];
  uint64_t v34 = v56;
  if (v33)
  {
    uint64_t v35 = v33;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v36 = 1;
  }
  uint64_t v38 = v57;
  uint64_t v37 = (uint64_t)v61;
  v30(v20, v36, 1, v7);
  sub_10032D1DC((uint64_t)v20, v37);
  uint64_t v39 = v58;
LABEL_12:
  uint64_t v40 = v55;
  sub_1000CBC00(v37, v55, &qword_1007076B0);
  id v41 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v59, v34, v7);
  if (v31((char *)v40, 1, v7) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v39, v41, v7);
    sub_1000CBBA4(v40, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v41, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v39, v40, v7);
  }
  uint64_t v42 = v54;
  id v43 = [v60 contentType:v54];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  id v44 = v38;
  uint64_t v45 = type metadata accessor for UTType();
  uint64_t v46 = *(void *)(v45 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v38, 0, 1, v45);
  URL._bridgeToObjectiveC()(v47);
  id v49 = v48;
  int v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v38, 1, v45);
  Class isa = 0;
  if (v50 != 1)
  {
    Class isa = UTType._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
  }
  id v52 = [objc_allocWithZone((Class)WFContextualActionFile) initWithFileURL:v49 type:isa];

  (*(void (**)(char *, uint64_t))(v8 + 8))(v39, v7);
  uint64_t result = sub_1000CBBA4((uint64_t)v61, &qword_1007076B0);
  *uint64_t v42 = v52;
  return result;
}

void sub_1003717A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10009B208(a2, (uint64_t)v9);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    id v4 = *(void **)&v8[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
    if (v4 && a3)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v5 = DOCNode.fpfs_syncFetchFPItem()();
      if (v5)
      {
        uint64_t v6 = (void *)v5;
        sub_1000CBE70((uint64_t *)&unk_100706730);
        if (Array<A>.fpfs_syncFetchAllFPItems()())
        {
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v4 createNewFolderIn:v6 moving:isa];

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_100371908(uint64_t a1, uint64_t a2)
{
  return sub_10036D880(a1, a2, (SEL *)&selRef_isAppContainer);
}

void sub_100371914(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v3 = DOCNode.documentAttributes.getter();
  if (v3)
  {
    id v4 = (id)v3;
    SYDocumentAttributes.performReturnToDocumentRequest()();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

void sub_100371A50(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v3 = *(void **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v4 = DOCNode.documentAttributes.getter();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v5;
    _OWORD v9[4] = sub_100373150;
    v9[5] = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    void v9[2] = sub_1001B6B50;
    v9[3] = &unk_1006A45F0;
    uint64_t v7 = _Block_copy(v9);
    swift_unknownObjectRetain();
    id v8 = v5;
    swift_release();
    [v3 fetchURL:v7];
    _Block_release(v7);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100371C24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v8, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t result = sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
    if (a2)
    {
      swift_errorRetain();
      uint64_t v14 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10059B760;
      id v16 = [a3 description];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      *(void *)(v15 + 56) = &type metadata for String;
      *(void *)(v15 + 64) = sub_100073F48();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v19;
      uint64_t v20 = _convertErrorToNSError(_:)();
      *(void *)(v15 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v15 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v15 + 72) = v20;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    SYDocumentAttributes.performReplyToSenderRequest(with:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t sub_100371ED8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    return swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = *(void **)(a1 + 32);
    swift_unknownObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    _OWORD v7[4] = sub_10037312C;
    v7[5] = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1001B6B50;
    v7[3] = &unk_1006A45A0;
    uint64_t v6 = _Block_copy(v7);
    swift_unknownObjectRetain();
    swift_release();
    [v4 fetchURL:v6];
    _Block_release(v6);
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100372064(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  id v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000CBC00(a1, (uint64_t)v8, &qword_1007076B0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t result = sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
    if (a2)
    {
      swift_errorRetain();
      uint64_t v14 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10059B760;
      id v16 = [a3 description];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      *(void *)(v15 + 56) = &type metadata for String;
      *(void *)(v15 + 64) = sub_100073F48();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v19;
      uint64_t v20 = _convertErrorToNSError(_:)();
      *(void *)(v15 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v15 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v15 + 72) = v20;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v21 = self;
    URL._bridgeToObjectiveC()(v22);
    uint64_t v24 = v23;
    id v35 = 0;
    unsigned int v25 = [v21 removeDocumentAttributesForFileAtURL:v23 error:&v35];

    if (v25)
    {
      uint64_t v26 = *(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8);
      id v27 = v35;
      return v26(v12, v9);
    }
    else
    {
      id v28 = v35;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      id v29 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_10059B760;
      URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
      uint64_t v32 = v31;
      *(void *)(v30 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
      *(void *)(v30 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
      *(void *)(v30 + 32) = v32;
      uint64_t v33 = _convertErrorToNSError(_:)();
      *(void *)(v30 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v30 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v30 + 72) = v33;
      os_log(_:dso:log:type:_:)();
      swift_errorRelease();

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return result;
}

uint64_t sub_1003724C4(NSString *a1, NSURL *a2, void *a3, void (*a4)(char *), void *a5, uint64_t *a6)
{
  uint64_t v33 = a4;
  uint64_t v34 = a6;
  v32._clients = a3;
  v32._reserved = a5;
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  v32.super.Class isa = (Class)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v32 - v19;
  v32._urlString = a1;
  URL._bridgeToObjectiveC()(&v32);
  uint64_t v22 = v21;
  id v35 = 0;
  v32._baseURL = a2;
  id v23 = [(NSURL *)a2 URLForDirectory:99 inDomain:1 appropriateForURL:v21 create:1 error:&v35];

  id v24 = v35;
  if (v23)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v25 = v24;

    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    clients = v32._clients;
    sub_1000CBBA4((uint64_t)v32._clients, &qword_1007076B0);
    (*(void (**)(void *, char *, uint64_t))(v15 + 16))(clients, v20, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(clients, 0, 1, v14);
    v33(v18);
    Class isa = v32.super.isa;
    NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)();
    sub_1000CBBA4((uint64_t)isa, &qword_1007076B0);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v15 + 8);
    v30(v18, v14);
    return ((uint64_t (*)(char *, uint64_t))v30)(v20, v14);
  }
  else
  {
    id v27 = v35;
    uint64_t v28 = _convertNSErrorToError(_:)();

    swift_willThrow();
    *uint64_t v34 = v28;
    return swift_errorRelease();
  }
}

void sub_1003728C4(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *, void))
{
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  double v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 effectiveFullBrowser];
  uint64_t v15 = (char *)[v14 effectiveBrowserViewController];

  if (v15)
  {
    uint64_t v16 = (void **)&v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v17 = *v16;
    if (v17 && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v18 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v19 = v18;
      id v20 = v17;

      uint64_t v21 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
      if ((*(unsigned char *)(v19 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
      {
        *(unsigned char *)(v19 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
        sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
        *(unsigned char *)(v19 + v21) = 0;
      }
    }
    else
    {
      id v20 = v15;
    }
  }
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v22 = (void *)DOCNode.sourceIdentifier.getter();
  id v23 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v22 node:a2];

  [a3 didSelectItem:a4 atParentLocation:v23 wasAlreadySelected:0 onlyRevealIfColumn:1];
  if (a5)
  {
    uint64_t v24 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
    swift_retain();
    a5(v13, 0);
    sub_1000A7258((uint64_t)a5);

    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
  }
  else
  {
  }
}

uint64_t sub_100372B2C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  double v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - v18;
  if (!a2)
  {
    uint64_t v30 = a4;
    uint64_t v31 = a3;
    sub_1000CBC00(a1, (uint64_t)v11, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      return sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    }
    else
    {
      id v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v20(v19, v11, v12);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v19, v12);
      unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v22 = swift_allocObject();
      id v23 = v31;
      *(void *)(v22 + 16) = v31;
      v20((char *)(v22 + v21), v16, v12);
      uint64_t v24 = (uint64_t *)(v22 + ((v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v25 = v30;
      uint64_t v26 = v32;
      *uint64_t v24 = v30;
      v24[1] = v26;
      aBlock[4] = sub_100376950;
      aBlock[5] = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006A47A8;
      id v27 = _Block_copy(aBlock);
      id v28 = v23;
      sub_1000C0640(v25);
      swift_release();
      DOCRunInMainThread();
      _Block_release(v27);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    }
  }
  return result;
}

void sub_100372E04(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, NSURL *a4@<X8>)
{
  URL._bridgeToObjectiveC()(a4);
  uint64_t v8 = v7;
  if (a2)
  {
    v10[4] = a2;
    v10[5] = a3;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1001B6B50;
    v10[3] = &unk_1006A47D0;
    uint64_t v9 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v9 = 0;
  }
  [a1 revealDocumentAtURL:v8 importIfNeeded:0 openDocument:0 revealContents:0 updateLastUsedDate:0 completion:v9];
  _Block_release(v9);
}

id sub_100373038()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCShortcutsActionRunner();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCShortcutsActionRunner()
{
  return self;
}

uint64_t sub_1003730A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003730E8()
{
  return sub_100366338(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003730F4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10037312C(uint64_t a1, uint64_t a2)
{
  return sub_100372064(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100373134()
{
  return sub_100377230((void (*)(void))&_swift_unknownObjectRelease, 32);
}

uint64_t sub_100373150(uint64_t a1, uint64_t a2)
{
  return sub_100371C24(a1, a2, *(void **)(v2 + 16));
}

id sub_100373158()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v1 = result;
    v20._countAndFlagsBits = 0xD000000000000058;
    v20._object = (void *)0x80000001005ECE60;
    v2._object = (void *)0x80000001005ECE40;
    v2._countAndFlagsBits = 0xD000000000000018;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0xD000000000000018;
    v4._object = (void *)0x80000001005ECE40;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_10036D724;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    uint64_t v16 = sub_100156760;
    uint64_t v17 = &unk_1006A5478;
    uint64_t v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setAvailability:1];
    [v9 setSupportsMultipleItems:0];
    [v9 setRequiresFullyFormedItems:0];
    uint64_t v18 = sub_10036D718;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    uint64_t v16 = sub_100053508;
    uint64_t v17 = &unk_1006A54A0;
    uint64_t v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10037345C(uint64_t a1, char a2)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v5 = result;
    v26._countAndFlagsBits = 0xD000000000000045;
    v26._object = (void *)0x80000001005EBDA0;
    v6._object = (void *)0x80000001005EBD80;
    v6._countAndFlagsBits = 0xD00000000000001BLL;
    v7._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0x73736572706D6F43;
    v8._object = (void *)0xE800000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v26);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = a2 & 1;
    *(void *)(v9 + 24) = a1;
    id v10 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_unknownObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_100373820;
    uint64_t v25 = v9;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_100156760;
    id v23 = &unk_1006A4640;
    id v13 = _Block_copy(&aBlock);
    id v14 = [v10 initWithIdentifier:v11 localizedTitle:v12 unresolvedHandler:v13];

    _Block_release(v13);
    swift_release();
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [self systemImageNamed:v15];

    [v14 setImage:v16];
    if (UIDocumentBrowserActionAvailabilityToolbar >= 2uLL)
    {
      uint64_t v17 = UIDocumentBrowserActionAvailabilityToolbar | 1;
      if ((UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0)
      {
LABEL_7:
        [v14 setAvailability:v17];
        [v14 setMenuSortOrder:4];
        [v14 setSupportsMultipleItems:1];
        uint64_t v24 = (void (*)(unint64_t, uint64_t))sub_10014D7F8;
        uint64_t v25 = 0;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v21 = 1107296256;
        uint64_t v22 = sub_100053508;
        id v23 = &unk_1006A4668;
        uint64_t v18 = _Block_copy(&aBlock);
        id v19 = [self predicateWithBlock:v18];
        _Block_release(v18);
        swift_release();
        [v14 setFilteringPredicate:v19];

        return v14;
      }
    }
    else
    {
      uint64_t v17 = 1;
      if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet < 2uLL) {
        goto LABEL_7;
      }
    }
    v17 |= UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003737E8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100373820(unint64_t a1, uint64_t a2)
{
  sub_1003690FC(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10037382C()
{
  return sub_100377230((void (*)(void))&_swift_bridgeObjectRelease, 33);
}

void sub_100373848(uint64_t a1)
{
  sub_100369290(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

id sub_100373854(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v9 = result;
    v35._countAndFlagsBits = 0xD000000000000047;
    v35._object = (void *)0x80000001005EBE40;
    v10._object = (void *)0x80000001005EBE20;
    v10._countAndFlagsBits = 0xD00000000000001DLL;
    v11._countAndFlagsBits = 0x617A696C61636F4CLL;
    v11._object = (void *)0xEB00000000656C62;
    v12._countAndFlagsBits = 0x6572706D6F636E55;
    v12._object = (void *)0xEA00000000007373;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v35);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = swift_allocObject();
    *(unsigned char *)(v13 + 16) = a2 & 1;
    *(void *)(v13 + 24) = a1;
    id v14 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_unknownObjectRetain();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1003769E4;
    uint64_t v34 = v13;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    uint64_t v31 = sub_100156760;
    uint64_t v32 = &unk_1006A4820;
    uint64_t v17 = _Block_copy(&aBlock);
    id v18 = [v14 initWithIdentifier:v15 localizedTitle:v16 unresolvedHandler:v17];

    _Block_release(v17);
    swift_release();
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [self systemImageNamed:v19];

    [v18 setImage:v20];
    if (UIDocumentBrowserActionAvailabilityToolbar > 1uLL)
    {
      uint64_t v21 = UIDocumentBrowserActionAvailabilityToolbar | 1;
      if ((UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0)
      {
LABEL_7:
        [v18 setAvailability:v21];
        [v18 setMenuSortOrder:5];
        [v18 setSupportsMultipleItems:1];
        sub_1000CBE70(&qword_100707EF0);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1005A0030;
        static UTType.archive.getter();
        uint64_t v23 = UTType.identifier.getter();
        uint64_t v25 = v24;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        *(void *)(v22 + 32) = v23;
        *(void *)(v22 + 40) = v25;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v18 setSupportedContentTypes:isa];

        uint64_t v33 = (void (*)(unint64_t, uint64_t))sub_10014D7F8;
        uint64_t v34 = 0;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v30 = 1107296256;
        uint64_t v31 = sub_100053508;
        uint64_t v32 = &unk_1006A4848;
        id v27 = _Block_copy(&aBlock);
        id v28 = [self predicateWithBlock:v27];
        _Block_release(v27);
        swift_release();
        [v18 setFilteringPredicate:v28];

        return v18;
      }
    }
    else
    {
      uint64_t v21 = 1;
      if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet < 2uLL) {
        goto LABEL_7;
      }
    }
    v21 |= UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_100373CF8()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v20._countAndFlagsBits = 0xD000000000000044;
    v20._object = (void *)0x80000001005EBEC0;
    v2._object = (void *)0x80000001005EBE90;
    v2._countAndFlagsBits = 0xD000000000000022;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0x442065766F6D6552;
    v4._object = (void *)0xEF64616F6C6E776FLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = sub_10036A2F0;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    NSString v16 = sub_100156760;
    uint64_t v17 = &unk_1006A4910;
    Swift::String v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    [v9 setAvailability:UIDocumentBrowserActionAvailabilityToolbar | 1];
    [v9 setMenuSortOrder:0];
    [v9 setSupportsMultipleItems:1];
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    id v18 = sub_10036B0F4;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    NSString v16 = sub_100053508;
    uint64_t v17 = &unk_1006A4938;
    Swift::String v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100374028(char a1)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v3 = result;
    v4._countAndFlagsBits = 0xD00000000000001FLL;
    v23._countAndFlagsBits = 0xD000000000000047;
    v23._object = (void *)0x80000001005EC2C0;
    v4._object = (void *)0x80000001005EC2A0;
    v5._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5._object = (void *)0xEB00000000656C62;
    v6._countAndFlagsBits = 0x64616F6C6E776F44;
    v6._object = (void *)0xEC000000776F4E20;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v23);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = swift_allocObject();
    *(unsigned char *)(v7 + 16) = a1 & 1;
    id v8 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_100376B74;
    uint64_t v22 = v7;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100156760;
    Swift::String v20 = &unk_1006A4A28;
    id v11 = _Block_copy(&aBlock);
    id v12 = [v8 initWithIdentifier:v9 localizedTitle:v10 unresolvedHandler:v11];

    _Block_release(v11);
    swift_release();
    [v12 setAvailability:UIDocumentBrowserActionAvailabilityToolbar | 1];
    [v12 setMenuSortOrder:1];
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [self systemImageNamed:v13];

    [v12 setImage:v14];
    [v12 setSupportsMultipleItems:1];
    uint64_t v21 = sub_10036B980;
    uint64_t v22 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100053508;
    Swift::String v20 = &unk_1006A4A50;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = [self predicateWithBlock:v15];
    _Block_release(v15);
    swift_release();
    [v12 setFilteringPredicate:v16];

    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10037436C(char a1, uint64_t a2)
{
  id result = (id)_DocumentManagerBundle();
  Swift::String v5 = result;
  if (a1)
  {
    if (a2 != 1)
    {
      if (result)
      {
        unint64_t v6 = 0xD00000000000003CLL;
        unint64_t v7 = 0xD0000000000000D2;
        unint64_t v13 = 0x80000001005EC640;
        id v8 = "DON'T Keep Downloaded [UIMenuController, more than one item]";
        goto LABEL_12;
      }
      goto LABEL_16;
    }
    if (result)
    {
      unint64_t v6 = 0xD000000000000032;
      unint64_t v7 = 0xD0000000000000C8;
      unint64_t v13 = 0x80000001005EC760;
      id v8 = "DON'T Keep Downloaded [UIMenuController, one item]";
LABEL_12:
      unint64_t v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_13;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 == 1)
  {
    if (result)
    {
      unint64_t v7 = 0xD000000000000051;
      unint64_t v13 = 0x80000001005EC5A0;
      unint64_t v9 = 0x80000001005EC570;
      unint64_t v6 = 0xD00000000000002CLL;
LABEL_13:
      v10._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v10._object = (void *)0xEB00000000656C62;
      v11._uint64_t countAndFlagsBits = 0x776F44207065654BLL;
      v11._object = (void *)0xEF646564616F6C6ELL;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v10, (NSBundle)v5, v11, *(Swift::String *)&v7)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    goto LABEL_15;
  }
  if (result)
  {
    unint64_t v6 = 0xD000000000000036;
    unint64_t v7 = 0xD00000000000005BLL;
    unint64_t v13 = 0x80000001005EC510;
    id v8 = "Keep Downloaded [UIMenuController, more than one item]";
    goto LABEL_12;
  }
LABEL_17:
  __break(1u);
  return result;
}

id sub_100374508(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10037436C(0, a1);
  id v2 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10036BBEC;
  uint64_t v18 = 0;
  unint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100156760;
  id v16 = &unk_1006A4B18;
  Swift::String v5 = _Block_copy(&v13);
  id v6 = [v2 initWithIdentifier:v3 localizedTitle:v4 unresolvedHandler:v5];

  _Block_release(v5);
  swift_release();
  [v6 setAvailability:UIDocumentBrowserActionAvailabilityToolbar | 1];
  [v6 setMenuSortOrder:1];
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self systemImageNamed:v7];

  [v6 setImage:v8];
  [v6 setSupportsMultipleItems:1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v17 = sub_100376BFC;
  uint64_t v18 = v9;
  unint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100053508;
  id v16 = &unk_1006A4B68;
  Swift::String v10 = _Block_copy(&v13);
  id v11 = [self predicateWithBlock:v10];
  _Block_release(v10);
  swift_release();
  [v6 setFilteringPredicate:v11];

  return v6;
}

id sub_1003747C4(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10037436C(1, a1);
  id v2 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = sub_10036C858;
  uint64_t v17 = 0;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_100156760;
  uint64_t v15 = &unk_1006A4C30;
  Swift::String v5 = _Block_copy(&v12);
  id v6 = [v2 initWithIdentifier:v3 localizedTitle:v4 unresolvedHandler:v5];

  _Block_release(v5);
  swift_release();
  [v6 setAvailability:UIDocumentBrowserActionAvailabilityToolbar | 1];
  [v6 setMenuSortOrder:1];
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self systemImageNamed:v7];

  [v6 setImage:v8];
  [v6 setSupportsMultipleItems:1];
  id v16 = sub_10036D130;
  uint64_t v17 = 0;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_100053508;
  uint64_t v15 = &unk_1006A4C58;
  uint64_t v9 = _Block_copy(&v12);
  id v10 = [self predicateWithBlock:v9];
  _Block_release(v9);
  swift_release();
  [v6 setFilteringPredicate:v10];

  return v6;
}

id sub_100374A68()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v20._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
    v20._object = (void *)0x80000001005EC940;
    v2._object = (void *)0x80000001005EC920;
    v2._uint64_t countAndFlagsBits = 0xD000000000000016;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0xD000000000000016;
    v4._object = (void *)0x80000001005EC920;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_10036D320;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100156760;
    uint64_t v17 = &unk_1006A4D20;
    id v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setAvailability:1];
    [v9 setMenuSortOrder:1];
    [v9 setSupportsMultipleItems:0];
    uint64_t v18 = sub_10036D718;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100053508;
    uint64_t v17 = &unk_1006A4D48;
    id v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100374D6C()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v20._uint64_t countAndFlagsBits = 0xD000000000000046;
    v20._object = (void *)0x80000001005ECB60;
    v2._object = (void *)0x80000001005ECB40;
    v2._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0x6F4C206B63697551;
    v4._object = (void *)0xEA00000000006B6FLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_10036DAA8;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100156760;
    uint64_t v17 = &unk_1006A4F50;
    id v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setAvailability:1];
    [v9 setMenuSortOrder:7];
    [v9 setSupportsMultipleItems:0];
    uint64_t v18 = sub_10036DD9C;
    uint64_t v19 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100053508;
    uint64_t v17 = &unk_1006A4F78;
    id v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_100375078()
{
  uint64_t v0 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)&v58 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  long long v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v66 = (char *)&v58 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v58 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v58 - v13;
  __chkstk_darwin(v12);
  uint64_t v65 = (char *)&v58 - v15;
  id v16 = [self movieTypes];
  type metadata accessor for AVFileType(0);
  uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = *(void *)(v17 + 16);
  id v59 = v11;
  if (v18)
  {
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    uint64_t v21 = _swiftEmptyArrayStorage;
    unint64_t v62 = (uint64_t (**)(char *, char *, uint64_t))v17;
    long long v63 = v14;
    uint64_t v61 = v18;
    do
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      UTType.init(_:)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
      {
        sub_1000CBBA4((uint64_t)v2, &qword_100708110);
      }
      else
      {
        uint64_t v22 = *v19;
        Swift::String v23 = v65;
        (*v19)(v65, v2, v3);
        v22(v14, v23, v3);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = (void *)sub_1000B6388(0, v21[2] + 1, 1, (unint64_t)v21);
        }
        unint64_t v25 = v21[2];
        unint64_t v24 = v21[3];
        if (v25 >= v24 >> 1) {
          uint64_t v21 = (void *)sub_1000B6388(v24 > 1, v25 + 1, 1, (unint64_t)v21);
        }
        _DWORD v21[2] = v25 + 1;
        unint64_t v26 = (unint64_t)v21
            + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
            + *(void *)(v4 + 72) * v25;
        uint64_t v14 = v63;
        v22((char *)v26, v63, v3);
        uint64_t v18 = v61;
      }
      ++v20;
    }
    while (v18 != v20);
    id result = (char *)swift_bridgeObjectRelease_n();
    id v11 = v59;
  }
  else
  {
    id result = (char *)swift_bridgeObjectRelease();
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  id v67 = (char *)_swiftEmptyArrayStorage;
  long long v63 = (char *)v21[2];
  if (v63)
  {
    id v28 = 0;
    uint64_t v29 = v4 + 8;
    uint64_t v61 = v4 + 16;
    unint64_t v62 = (uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t v65 = (char *)v3;
    id v60 = v21;
    while ((unint64_t)v28 < v21[2])
    {
      unint64_t v30 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v31 = *(void *)(v4 + 72);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v11, (char *)v21 + v30 + v31 * (void)v28, v3);
      uint64_t v32 = v4;
      uint64_t v33 = v29;
      uint64_t v34 = v66;
      static UTType.movie.getter();
      char v35 = UTType.conforms(to:)();
      uint64_t v36 = v32;
      uint64_t v37 = *(void (**)(char *, uint64_t))(v32 + 8);
      uint64_t v38 = v34;
      uint64_t v29 = v33;
      v37(v38, v3);
      if (v35)
      {
        uint64_t v39 = v11;
        uint64_t v40 = *v62;
        (*v62)(v64, v39, v3);
        id v41 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190D68(0, *((void *)v41 + 2) + 1, 1);
          id v41 = v67;
        }
        unint64_t v43 = *((void *)v41 + 2);
        unint64_t v42 = *((void *)v41 + 3);
        if (v43 >= v42 >> 1)
        {
          sub_100190D68(v42 > 1, v43 + 1, 1);
          id v41 = v67;
        }
        *((void *)v41 + 2) = v43 + 1;
        id result = (char *)v40(&v41[v30 + v43 * v31], v64, (uint64_t)v65);
        id v67 = v41;
        id v11 = v59;
        uint64_t v29 = v33;
      }
      else
      {
        id result = (char *)((uint64_t (*)(char *, uint64_t))v37)(v11, v3);
      }
      ++v28;
      uint64_t v4 = v36;
      uint64_t v3 = (uint64_t)v65;
      uint64_t v21 = v60;
      if (v63 == v28) {
        goto LABEL_24;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
    id v44 = v67;
    int64_t v45 = *((void *)v67 + 2);
    if (v45)
    {
      id v67 = (char *)_swiftEmptyArrayStorage;
      sub_100059E2C(0, v45, 0);
      id v47 = *(char **)(v4 + 16);
      uint64_t v46 = v4 + 16;
      uint64_t v48 = *(unsigned __int8 *)(v46 + 64);
      long long v63 = v44;
      id v49 = &v44[(v48 + 32) & ~v48];
      long long v64 = *(char **)(v46 + 56);
      uint64_t v65 = v47;
      do
      {
        int v50 = v66;
        ((void (*)(char *, char *, uint64_t))v65)(v66, v49, v3);
        uint64_t v51 = UTType.identifier.getter();
        uint64_t v53 = v52;
        (*(void (**)(char *, uint64_t))(v46 - 8))(v50, v3);
        uint64_t v54 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100059E2C(0, *((void *)v54 + 2) + 1, 1);
          uint64_t v54 = v67;
        }
        unint64_t v56 = *((void *)v54 + 2);
        unint64_t v55 = *((void *)v54 + 3);
        if (v56 >= v55 >> 1)
        {
          sub_100059E2C(v55 > 1, v56 + 1, 1);
          uint64_t v54 = v67;
        }
        *((void *)v54 + 2) = v56 + 1;
        uint64_t v57 = &v54[16 * v56];
        *((void *)v57 + 4) = v51;
        *((void *)v57 + 5) = v53;
        id v49 = &v64[(void)v49];
        --v45;
      }
      while (v45);
      swift_release();
    }
    else
    {
      swift_release();
      return (char *)_swiftEmptyArrayStorage;
    }
    return v54;
  }
  return result;
}

uint64_t sub_100375698(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70(&qword_1007123A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A8670;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v5;
  if (UIDocumentBrowserActionAvailabilityToolbar > 1uLL)
  {
    uint64_t v6 = UIDocumentBrowserActionAvailabilityToolbar | 1;
    if ((UIDocumentBrowserActionAvailabilityPreviewPanel & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = 1;
  if (UIDocumentBrowserActionAvailabilityPreviewPanel >= 2uLL) {
LABEL_5:
  }
    v6 |= UIDocumentBrowserActionAvailabilityPreviewPanel;
LABEL_6:
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = UIDocumentBrowserActionAvailabilityToolbar | 1;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v8;
  if (UIDocumentBrowserActionAvailabilityToolbar > 1uLL)
  {
    uint64_t v9 = UIDocumentBrowserActionAvailabilityToolbar | 1;
    if ((UIDocumentBrowserActionAvailabilityPreviewPanel & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = 1;
  if (UIDocumentBrowserActionAvailabilityPreviewPanel >= 2uLL) {
LABEL_10:
  }
    v9 |= UIDocumentBrowserActionAvailabilityPreviewPanel;
LABEL_11:
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 112) = v10;
  if (UIDocumentBrowserActionAvailabilityToolbar > 1uLL)
  {
    uint64_t v11 = UIDocumentBrowserActionAvailabilityToolbar | 1;
    if ((UIDocumentBrowserActionAvailabilityPreviewPanel & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  uint64_t v11 = 1;
  if (UIDocumentBrowserActionAvailabilityPreviewPanel >= 2uLL) {
LABEL_15:
  }
    v11 |= UIDocumentBrowserActionAvailabilityPreviewPanel;
LABEL_16:
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v12;
  if (UIDocumentBrowserActionAvailabilityToolbar > 1uLL)
  {
    uint64_t v13 = UIDocumentBrowserActionAvailabilityToolbar | 1;
    if ((UIDocumentBrowserActionAvailabilityPreviewPanel & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  uint64_t v13 = 1;
  if (UIDocumentBrowserActionAvailabilityPreviewPanel >= 2uLL) {
LABEL_20:
  }
    v13 |= UIDocumentBrowserActionAvailabilityPreviewPanel;
LABEL_21:
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 160) = v14;
  if (UIDocumentBrowserActionAvailabilityToolbar < 2uLL)
  {
    uint64_t v15 = 1;
    if (UIDocumentBrowserActionAvailabilityPreviewPanel < 2uLL) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  uint64_t v15 = UIDocumentBrowserActionAvailabilityToolbar | 1;
  if ((UIDocumentBrowserActionAvailabilityPreviewPanel & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) != 0) {
LABEL_25:
  }
    v15 |= UIDocumentBrowserActionAvailabilityPreviewPanel;
LABEL_26:
  *(void *)(inited + 168) = v15;
  unint64_t v16 = sub_100495300(inited);
  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  if (v17 && (uint64_t v18 = sub_100042F50(a1, a2), (v19 & 1) != 0))
  {
    uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 8 * v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v21 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 initWithSuiteName:v22];

    if (v23
      && (NSString v24 = String._bridgeToObjectiveC()(),
          unsigned int v25 = [v23 BOOLForKey:v24],
          v23,
          v24,
          v25))
    {
      unint64_t v26 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.info.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1005A0030;
      *(void *)(v27 + 56) = &type metadata for String;
      *(void *)(v27 + 64) = sub_100073F48();
      *(void *)(v27 + 32) = a1;
      *(void *)(v27 + 40) = a2;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      id v28 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1005A0030;
      *(void *)(v29 + 56) = &type metadata for String;
      *(void *)(v29 + 64) = sub_100073F48();
      *(void *)(v29 + 32) = a1;
      *(void *)(v29 + 40) = a2;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v20;
}

uint64_t sub_100375AB4(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70(&qword_1007123A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A8670;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = 21;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = 22;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v7;
  *(void *)(inited + 96) = 24;
  *(void *)(inited + 104) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 112) = v8;
  *(void *)(inited + 120) = 27;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v9;
  *(void *)(inited + 144) = 25;
  *(void *)(inited + 152) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 160) = v10;
  *(void *)(inited + 168) = 26;
  unint64_t v11 = sub_100495414(inited);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100042F50(a1, a2);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v15 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100073F48();
    *(void *)(v16 + 32) = a1;
    *(void *)(v16 + 40) = a2;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14;
}

id sub_100375CB0(void *a1, uint64_t a2, char a3)
{
  id v6 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v7 = [a1 displayString];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(unsigned char *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a2;
  id v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  swift_unknownObjectRetain();
  id v10 = a1;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_10037731C;
  uint64_t v39 = v8;
  uint64_t v34 = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1004408BC;
  uint64_t v37 = &unk_1006A5068;
  char v13 = _Block_copy(&v34);
  id v14 = [v9 initWithIdentifier:v11 localizedTitle:v12 resolvedHandler:v13];

  _Block_release(v13);
  swift_release();
  id v15 = sub_1003707F0(v10);
  [v14 setImage:v15];

  [v14 setSupportsMultipleItems:1];
  [v14 setRequiresResolvedItems:1];
  id v16 = [v10 identifier];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  uint64_t v20 = sub_100375698(v17, v19);
  swift_bridgeObjectRelease();
  [v14 setAvailability:v20];
  id v21 = [v10 identifier];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  uint64_t v25 = sub_100375AB4(v22, v24);
  LOBYTE(v22) = v26;
  swift_bridgeObjectRelease();
  if (v22) {
    uint64_t v27 = 30;
  }
  else {
    uint64_t v27 = v25;
  }
  [v14 setMenuSortOrder:v27];
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v10;
  uint64_t v38 = sub_10037732C;
  uint64_t v39 = v28;
  uint64_t v34 = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100053508;
  uint64_t v37 = &unk_1006A50B8;
  uint64_t v29 = _Block_copy(&v34);
  unint64_t v30 = self;
  id v31 = v10;
  id v32 = [v30 predicateWithBlock:v29];
  _Block_release(v29);
  swift_release();
  [v14 setFilteringPredicate:v32];

  return v14;
}

id sub_100376038(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2)
  {
    if (sub_1000301E0(FPActionReparent, a2))
    {
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v2 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      unint64_t v2 = 0;
    }
  }
  v4._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v5._uint64_t countAndFlagsBits = 0xD000000000000034;
  v4._object = (void *)0x80000001005E3A30;
  v5._object = (void *)0x80000001005E3A60;
  DOCLocalizedDictionaryString(_:comment:)(v4, v5);
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A0030;
  *(void *)(v6 + 56) = &type metadata for Int;
  *(void *)(v6 + 64) = &protocol witness table for Int;
  *(void *)(v6 + 32) = v2;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  id v8 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  swift_unknownObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_100377B3C;
  uint64_t v23 = v7;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_100156760;
  id v21 = &unk_1006A5428;
  NSString v11 = _Block_copy(&v18);
  id v12 = [v8 initWithIdentifier:v9 localizedTitle:v10 unresolvedHandler:v11];

  _Block_release(v11);
  swift_release();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self systemImageNamed:v13];

  [v12 setImage:v14];
  [v12 setAvailability:UIDocumentBrowserActionAvailabilityToolbar | 1];
  [v12 setMenuSortOrder:10];
  [v12 setSupportsMultipleItems:1];
  uint64_t v22 = sub_100371908;
  uint64_t v23 = 0;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  uint64_t v20 = sub_100053508;
  id v21 = &unk_1006A5450;
  id v15 = _Block_copy(&v18);
  id v16 = [self predicateWithBlock:v15];
  _Block_release(v15);
  swift_release();
  [v12 setFilteringPredicate:v16];

  return v12;
}

void (**sub_1003763F4(unint64_t a1, uint64_t a2, uint64_t a3))(char *, uint64_t)
{
  NSString v4 = v3;
  uint64_t v23 = a3;
  uint64_t v22 = a2;
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v21 - 8);
  __chkstk_darwin(v21);
  id v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v20 = a1 & 0xC000000000000001;
    v18[1] = v4;
    uint64_t v19 = v6 + 1;
    uint64_t v10 = 4;
    while (1)
    {
      NSString v11 = v20
          ? (void (**)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (void (**)(char *, uint64_t))*(id *)(a1 + 8 * v10);
      uint64_t v6 = v11;
      uint64_t v12 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      uint64_t v13 = v9;
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [v6 fileURL];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      URL.lastPathComponent.getter();
      (*v19)(v8, v21);
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      char v16 = sub_10036F044(v14, v4);

      if (v16)
      {
        swift_bridgeObjectRelease();
        return v6;
      }

      ++v10;
      uint64_t v9 = v13;
      if (v12 == v13) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10037662C()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_10037666C(unint64_t a1)
{
  sub_1003696B0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

void sub_100376678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = self;
  id v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC5Files16DOCActionContext_configuration), "sceneIdentifier"));
  id v10 = [v8 globalTabbedBrowserControllerForIdentifier:v9];

  if (v10)
  {
    id v11 = [self defaultManager];
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = v10;
    v12[3] = a3;
    v12[4] = a4;
    v15[4] = sub_100376860;
    v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1001B6B50;
    v15[3] = &unk_1006A4758;
    uint64_t v13 = _Block_copy(v15);
    id v14 = v10;
    sub_1000C0640(a3);
    swift_release();
    [v11 fetchURLForItem:a1 completionHandler:v13];
    _Block_release(v13);
  }
}

uint64_t sub_100376818()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100376860(uint64_t a1, uint64_t a2)
{
  return sub_100372B2C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_10037686C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

void sub_100376950()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = (NSURL *)(v0
               + ((*(void *)(v1 + 64)
                 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t isa = (uint64_t)v3->super.isa;
  uint64_t urlString = (uint64_t)v3->_urlString;

  sub_100372E04(v2, isa, urlString, v3);
}

void sub_1003769E4(unint64_t a1, uint64_t a2)
{
  sub_100369978(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1003769F0()
{
  return sub_100377230((void (*)(void))&_swift_bridgeObjectRelease, 33);
}

void sub_100376A0C(uint64_t a1)
{
  sub_100369AB4(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_100376A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCOperationItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100376A7C(unint64_t a1)
{
  sub_10036A028(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100376A88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCOperationItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100376AE8()
{
  sub_10009B1B8(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100376B28(uint64_t a1)
{
  sub_10036A5BC(a1, v1 + 16, *(void *)(v1 + 48));
}

id sub_100376B38()
{
  return sub_10036D000(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100376B64()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_100376B74(uint64_t a1, uint64_t a2)
{
  sub_10036B31C(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_100376B7C()
{
  sub_10009B1B8(v0 + 16);

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100376BB4(uint64_t a1, uint64_t a2)
{
  sub_10036B4E0(a1, a2, v2 + 16);
}

id sub_100376BC0()
{
  return sub_10036D000(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100376BEC()
{
  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_100376BFC(uint64_t a1, uint64_t a2)
{
  return sub_10036C494(a1, a2, *(void *)(v2 + 16));
}

void sub_100376C04(uint64_t a1)
{
  sub_10036BEA0(a1, v1 + 16);
}

id sub_100376C10()
{
  return sub_10036D000(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100376C3C(uint64_t a1)
{
  sub_10036CA0C(a1, v1 + 16);
}

uint64_t sub_100376C48()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_100376C90()
{
  return sub_10036D000(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100376CBC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100376CF4(unint64_t a1, uint64_t a2)
{
  sub_10036D56C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100376CFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100376D44(uint64_t a1, uint64_t a2)
{
  sub_10036702C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_100376D78()
{
  return sub_100377230((void (*)(void))&_swift_bridgeObjectRelease, 32);
}

void sub_100376D94()
{
  sub_100367700(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100376D9C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100376DD4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100376E2C()
{
  long long v6 = *(_OWORD *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1000D1744;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v6;
  return _swift_task_switch(sub_100367D48, 0, 0);
}

uint64_t sub_100376EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000CB70;
  return sub_1003680A4(a1, a2, v6);
}

uint64_t sub_100376FA4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100377070(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_1000D1744;
  return sub_1003688E4(a1, v5, v6, v7);
}

uint64_t sub_10037715C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000CB70;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100712388 + dword_100712388);
  return v6(a1, v4);
}

uint64_t sub_100377214()
{
  return sub_100377230((void (*)(void))&_swift_bridgeObjectRelease, 32);
}

uint64_t sub_100377230(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100377284()
{
  return sub_100367844(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10037728C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003772CC()
{
  sub_10036DCC0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003772D4()
{
  return sub_1001558F8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003772DC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10037731C(unint64_t a1, uint64_t a2)
{
  sub_10036DFEC(a1, a2, *(void **)(v2 + 16), *(unsigned char *)(v2 + 24), *(void *)(v2 + 32));
}

BOOL sub_10037732C(uint64_t a1, uint64_t a2)
{
  return sub_10037091C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100377334@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_1003711A0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100377350()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

void sub_100377398(uint64_t a1)
{
  sub_10036E308(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

void sub_1003773AC()
{
  sub_10036EB0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003773B8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100377410(unint64_t a1, uint64_t a2)
{
  sub_1003703A8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(unsigned char *)(v2 + 48), *(void *)(v2 + 56));
}

id sub_10037742C(uint64_t a1)
{
  return sub_10036F8BC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100377448(void *a1, uint64_t a2, void *a3)
{
  id v47 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  id v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v16 = (char *)&v41 - v15;
  id v17 = [self defaultManager];
  id v18 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  uint64_t v49 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v16, 1, 1, v5);
  id v19 = [a1 fileURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v20);
  uint64_t v22 = v21;
  uint64_t v45 = v6;
  uint64_t v46 = v5;
  unint64_t v42 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v43 = v6 + 8;
  v42(v10, v5);
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v17;
  v23[3] = v16;
  id v24 = v47;
  v23[4] = a2;
  v23[5] = v24;
  v23[6] = &v49;
  uint64_t v25 = (void *)swift_allocObject();
  _OWORD v25[2] = sub_1003779E4;
  v25[3] = v23;
  aBlock[4] = sub_100377A04;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  void aBlock[2] = sub_100529C50;
  aBlock[3] = &unk_1006A52E8;
  char v26 = _Block_copy(aBlock);
  id v27 = v17;
  swift_retain();
  swift_release();
  id v47 = v18;
  aBlock[0] = 0;
  [v18 coordinateWritingItemAtURL:v22 options:0 error:aBlock byAccessor:v26];
  _Block_release(v26);

  id v28 = aBlock[0];
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v22) {
    __break(1u);
  }
  sub_1000CBC00((uint64_t)v16, (uint64_t)v14, &qword_1007076B0);
  uint64_t v29 = v45;
  uint64_t v30 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v14, 1, v46) == 1)
  {
    sub_1000CBBA4((uint64_t)v14, &qword_1007076B0);
    if (v28)
    {
LABEL_4:
      id v31 = v28;
      swift_willThrow();

      sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
      goto LABEL_12;
    }
  }
  else
  {
    id v32 = v44;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v44, v14, v30);
    uint64_t v33 = v32;
    URL._bridgeToObjectiveC()(v34);
    uint64_t v36 = v35;
    aBlock[0] = 0;
    unsigned int v37 = [v27 removeItemAtURL:v35 error:aBlock];

    if (!v37)
    {
      id v39 = aBlock[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      v42(v33, v30);
      sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);

      goto LABEL_12;
    }
    id v38 = aBlock[0];
    v42(v33, v30);
    if (v28) {
      goto LABEL_4;
    }
  }
  if (v49)
  {
    swift_errorRetain();
    swift_willThrow();
  }

  sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
LABEL_12:
  swift_errorRelease();
  return swift_release();
}

uint64_t sub_1003779AC()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003779E4(NSString *a1)
{
  return sub_1003724C4(a1, *(NSURL **)(v1 + 16), *(void **)(v1 + 24), *(void (**)(char *))(v1 + 32), *(void **)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_1003779F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100377A04(uint64_t a1)
{
  return sub_100529C28(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100377A0C()
{
  return _swift_deallocObject(v0, 65, 7);
}

id sub_100377A64(uint64_t a1)
{
  return sub_10036FDC0(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(unsigned char *)(v1 + 64));
}

uint64_t sub_100377A80()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100377AE0()
{
  sub_1003728C4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void (**)(char *, void))(v0 + 48));
}

uint64_t sub_100377AF4()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100377B3C(uint64_t a1, uint64_t a2)
{
  sub_1003717A8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100377CD8(uint64_t a1)
{
  uint64_t v21 = sub_1000CBE70(&qword_1007125A8);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_1007125B0);
  __chkstk_darwin(v4);
  sub_100380748();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0xEB0000000020796DLL;
  v5._uint64_t countAndFlagsBits = 0x2079616C70736944;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_100337064();
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._uint64_t countAndFlagsBits = 0x656C696620;
  v6._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19[0] = *(void *)(v23 + 8);
  uint64_t v22 = v7;
  v23 += 8;
  uint64_t v8 = v21;
  ((void (*)(char *, uint64_t))v19[0])(v3, v21);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x6F4C206B63697551;
  v9._object = (void *)0xEB00000000206B6FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = (void (*)(char *, uint64_t))v19[0];
  ((void (*)(char *, uint64_t))v19[0])(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001005ED7D0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_1000CBE70(&qword_1007125B8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0230;
  uint64_t v16 = v20;
  *(void *)(v15 + 32) = v22;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1003780F8(uint64_t a1)
{
  return sub_1003786A4(a1, (uint64_t)&unk_1005A8A58, (void (*)(uint64_t))sub_100380748);
}

uint64_t sub_10037812C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100378260(uint64_t a1)
{
  uint64_t v21 = sub_1000CBE70(&qword_100712590);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712598);
  __chkstk_darwin(v4);
  sub_1001AE94C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x80000001005ED770;
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_100337064();
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19[0] = *(void *)(v23 + 8);
  uint64_t v22 = v7;
  v23 += 8;
  uint64_t v8 = v21;
  ((void (*)(char *, uint64_t))v19[0])(v3, v21);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x6D20657461636F4CLL;
  v9._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x656C696620;
  v10._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = (void (*)(char *, uint64_t))v19[0];
  ((void (*)(char *, uint64_t))v19[0])(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._uint64_t countAndFlagsBits = 0x206C6165766552;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_1000CBE70(&qword_1007125A0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0230;
  uint64_t v16 = v20;
  *(void *)(v15 + 32) = v22;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100378670(uint64_t a1)
{
  return sub_1003786A4(a1, (uint64_t)&unk_1005A8A30, (void (*)(uint64_t))sub_1001AE94C);
}

uint64_t sub_1003786A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v8 = swift_release();
  a3(v8);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000CBE70(&qword_100712460);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100378814()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100378950(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v61 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v1 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v3 = (char *)v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712578);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1000CBE70(&qword_100712580);
  uint64_t v62 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10030BF30();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v6 + 8);
  v58(v8, v5);
  uint64_t v60 = v6 + 8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0xD000000000000017;
  v9._object = (void *)0x80000001005ED600;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  unsigned int v55 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v10 = *(void (**)(void))(v1 + 104);
  uint64_t v56 = v1 + 104;
  uint64_t v57 = (void (*)(char *, void, uint64_t))v10;
  uint64_t v11 = v3;
  uint64_t v52 = v3;
  Swift::String v12 = v3;
  uint64_t v13 = v61;
  v10(v12);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v53 = v1 + 8;
  uint64_t v54 = v14;
  v14(v11, v13);
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v62;
  v58(v8, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._uint64_t countAndFlagsBits = 0xD000000000000016;
  v17._object = (void *)0x80000001005ED620;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  v46[1] = sub_1003817D4(&qword_100712570, (uint64_t *)&unk_10070BD50, (void (*)(void))sub_1003812C0);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._uint64_t countAndFlagsBits = 544106784;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  unint64_t v47 = sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v20 = v16;
  uint64_t v21 = v58;
  v58(v8, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._uint64_t countAndFlagsBits = 0x6120657461657243;
  v22._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._uint64_t countAndFlagsBits = 0x207265646C6F6620;
  v23._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v62;
  v21(v8, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._uint64_t countAndFlagsBits = 0x2077656E20646441;
  v26._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._uint64_t countAndFlagsBits = 0x6F74636572696420;
  v27._object = (void *)0xEA00000000007972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21(v8, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._uint64_t countAndFlagsBits = 0xD000000000000028;
  v28._object = (void *)0x80000001005ED640;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v29 = v52;
  uint64_t v30 = v61;
  v57(v52, v55, v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v54(v29, v30);
  v31._object = (void *)0x80000001005ED670;
  v31._uint64_t countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._uint64_t countAndFlagsBits = 63;
  v32._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  v46[0] = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v33 = v58;
  v58(v8, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._uint64_t countAndFlagsBits = 0xD000000000000018;
  v34._object = (void *)0x80000001005ED690;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._uint64_t countAndFlagsBits = 544106784;
  v35._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  uint64_t v36 = v52;
  uint64_t v37 = v61;
  v57(v52, v55, v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v54(v36, v37);
  v38._uint64_t countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v8, v62);
  sub_1000CBE70(&qword_100712588);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1005A1DF0;
  uint64_t v41 = v50;
  *(void *)(v40 + 32) = v51;
  *(void *)(v40 + 40) = v41;
  uint64_t v42 = v48;
  *(void *)(v40 + 48) = v49;
  *(void *)(v40 + 56) = v42;
  uint64_t v43 = v46[0];
  *(void *)(v40 + 64) = v47;
  *(void *)(v40 + 72) = v43;
  *(void *)(v40 + 80) = v39;
  uint64_t v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1003792EC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1003817D4(&qword_100712570, (uint64_t *)&unk_10070BD50, (void (*)(void))sub_1003812C0);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10030BF30();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_1000CBE70(&qword_100712460);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10059B760;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10037950C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10037963C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100379704(uint64_t a1)
{
  uint64_t v26 = sub_1000CBE70(&qword_100712558);
  uint64_t v29 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712560);
  __chkstk_darwin(v4);
  sub_10026DB38();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._uint64_t countAndFlagsBits = 0x746163696C707544;
  v5._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v6 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  uint64_t v27 = a1;
  uint64_t v28 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v29 + 8);
  v29 += 8;
  uint64_t v9 = v26;
  v8(v3, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._uint64_t countAndFlagsBits = 0xD000000000000016;
  v10._object = (void *)0x80000001005ED560;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v22 = v8;
  v8(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001005ED580;
  v12._uint64_t countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v14 = v26;
  v8(v3, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0xD000000000000014;
  v15._object = (void *)0x80000001005ED5A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0x73656C696620;
  v16._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v22(v3, v14);
  sub_1000CBE70(&qword_100712568);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1005A0500;
  uint64_t v19 = v24;
  *(void *)(v18 + 32) = v25;
  *(void *)(v18 + 40) = v19;
  *(void *)(v18 + 48) = v23;
  *(void *)(v18 + 56) = v17;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100379C34(uint64_t a1)
{
  return sub_100379C68(a1, (uint64_t)&unk_1005A89B8, (void (*)(uint64_t))sub_10026DB38);
}

uint64_t sub_100379C68(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v8 = swift_release();
  a3(v8);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000CBE70(&qword_100712460);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100379E10()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100379F58(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v48 = sub_1000CBE70(&qword_100712540);
  uint64_t v51 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v42 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100712548);
  __chkstk_darwin(v6);
  unint64_t v7 = sub_100116A50();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0x2065766F4DLL;
  v8._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v47 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._uint64_t countAndFlagsBits = 0x73617274206F7420;
  v9._object = (void *)0xED0000206E692068;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  unsigned int v50 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v10 = *(void (**)(void))(v3 + 104);
  uint64_t v45 = v3 + 104;
  uint64_t v46 = (void (*)(char *, void, uint64_t))v10;
  uint64_t v40 = v2;
  v10(v5);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v44 = v3 + 8;
  v11(v5, v2);
  Swift::String v12 = v11;
  uint64_t v43 = v11;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  uint64_t v14 = v42;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v15 = *(void (**)(char *, uint64_t))(v51 + 8);
  v51 += 8;
  uint64_t v49 = v15;
  Swift::String v16 = v14;
  uint64_t v17 = v48;
  v15(v16, v48);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v18._uint64_t countAndFlagsBits = 0x206873617254;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._uint64_t countAndFlagsBits = 544106784;
  v19._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v20 = v40;
  v46(v5, v50, v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v12(v5, v20);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  Swift::String v22 = v42;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v49(v22, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._uint64_t countAndFlagsBits = 0x206574656C6544;
  v23._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._uint64_t countAndFlagsBits = 544106784;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  uint64_t v25 = v40;
  uint64_t v26 = v46;
  v46(v5, v50, v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v43(v5, v25);
  v27._uint64_t countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v36 = v7;
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v49(v22, v48);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._object = (void *)0x80000001005ED4C0;
  v28._uint64_t countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v26(v5, v50, v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v43(v5, v25);
  v29._uint64_t countAndFlagsBits = 8250;
  v29._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v30._uint64_t countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v49(v22, v48);
  sub_1000CBE70(&qword_100712550);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1005A0500;
  uint64_t v33 = v38;
  *(void *)(v32 + 32) = v39;
  *(void *)(v32 + 40) = v33;
  *(void *)(v32 + 48) = v37;
  *(void *)(v32 + 56) = v31;
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_10037A694(uint64_t a1)
{
  return sub_100379C68(a1, (uint64_t)&unk_1005A8990, (void (*)(uint64_t))sub_100116A50);
}

uint64_t sub_10037A6C8()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10037A804(uint64_t a1)
{
  v15[1] = a1;
  uint64_t v17 = sub_1000CBE70(&qword_100712528);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712530);
  __chkstk_darwin(v4);
  sub_100381030();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._uint64_t countAndFlagsBits = 543450177;
  v5._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._uint64_t countAndFlagsBits = 0x6F766166206F7420;
  v6._object = (void *)0xED00007365746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v17;
  v7(v3, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x20656B614DLL;
  v9._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x726F766166206120;
  v10._object = (void *)0xEB00000000657469;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v8);
  sub_1000CBE70(&qword_100712538);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10059B760;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10037AB78()
{
  return sub_10037ABA4();
}

uint64_t sub_10037ABA4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100381688();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100381030();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_1000CBE70(&qword_100712460);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10059B760;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10037ADB4()
{
  return sub_100380594();
}

uint64_t sub_10037ADCC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10037AEA0(uint64_t a1)
{
  v15[1] = a1;
  uint64_t v17 = sub_1000CBE70(&qword_100712528);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712530);
  __chkstk_darwin(v4);
  sub_100381030();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._uint64_t countAndFlagsBits = 0x2065766F6D6552;
  v5._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._uint64_t countAndFlagsBits = 0x6166206D6F726620;
  v6._object = (void *)0xEF73657469726F76;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v17;
  v7(v3, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x20656B6154;
  v9._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._object = (void *)0x80000001005ED3B0;
  v10._uint64_t countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v8);
  sub_1000CBE70(&qword_100712538);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10059B760;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10037B218()
{
  return sub_10037ABA4();
}

uint64_t sub_10037B244()
{
  return sub_100380594();
}

uint64_t sub_10037B260()
{
  uint64_t v0 = sub_1000CBE70(&qword_100712528);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v27 = v0;
  uint64_t v28 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712530);
  __chkstk_darwin(v4);
  sub_100381030();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v25 = sub_100381688();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._uint64_t countAndFlagsBits = 32;
  v6._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  uint64_t v24 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v27;
  Swift::String v22 = *(void (**)(char *, uint64_t))(v28 + 8);
  v28 += 8;
  v22(v3, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 544499027;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 544432416;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v12 = v22;
  v22(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._uint64_t countAndFlagsBits = 0x7420746E61772049;
  v13._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._uint64_t countAndFlagsBits = 544828704;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v12(v3, v27);
  sub_1000CBE70(&qword_100712538);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1005A0230;
  uint64_t v18 = v23;
  *(void *)(v17 + 32) = v26;
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = v16;
  uint64_t v19 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10037B788()
{
  return sub_10037ABA4();
}

uint64_t sub_10037B7B4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10059B760;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10037B854(uint64_t a1)
{
  v22[1] = a1;
  uint64_t v1 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  __chkstk_darwin(v1);
  unint64_t v25 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000CBE70(&qword_100712508);
  uint64_t v3 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  Swift::String v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100712510);
  __chkstk_darwin(v6);
  sub_100142DA0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0x739980E274616857;
  v7._object = (void *)0xAC000000206E6920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._uint64_t countAndFlagsBits = 63;
  v8._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v3 + 8;
  Swift::String v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  long long v22[2] = v9;
  uint64_t v11 = v23;
  v10(v5, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._object = (void *)0x80000001005ED360;
  v12._uint64_t countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0x207265646C6F6620;
  v13._object = (void *)0xED0000206D6F7266;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  Swift::String v15 = v25;
  uint64_t v14 = v26;
  uint64_t v16 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v5, v11);
  sub_1000CBE70(&qword_100712518);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10059B760;
  *(void *)(v19 + 32) = v24;
  *(void *)(v19 + 40) = v18;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10037BC7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileEntity();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v9 - v6;
  sub_1001173A0(a1, (uint64_t)&v9 - v6);
  sub_1001173A0((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter();
  return sub_100117404((uint64_t)v7);
}

uint64_t sub_10037BD3C(uint64_t a1)
{
  return sub_1003786A4(a1, (uint64_t)&unk_1005A8918, (void (*)(uint64_t))sub_100142DA0);
}

uint64_t sub_10037BD70()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0500;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10037BE50(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_1007124F0);
  uint64_t v24 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_1007124F8);
  __chkstk_darwin(v8);
  sub_100381084();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 544499015;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v22 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x206D6F726620;
  v10._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v12 = v25;
  Swift::String v13 = *(void (**)(char *, uint64_t))(v24 + 8);
  v13(v3, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._uint64_t countAndFlagsBits = 0x207463656C6553;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v12);
  sub_1000CBE70(&qword_100712500);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10059B760;
  *(void *)(v17 + 32) = v21;
  *(void *)(v17 + 40) = v16;
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_10037C26C(uint64_t a1)
{
  return sub_100379C68(a1, (uint64_t)&unk_1005A88F0, (void (*)(uint64_t))sub_100381084);
}

uint64_t sub_10037C2A0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10037C370(uint64_t a1)
{
  uint64_t v38 = sub_1000CBE70(&qword_1007124D8);
  uint64_t v2 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70(&qword_1007124E0);
  __chkstk_darwin(v5);
  unint64_t v6 = sub_1001ADC98();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0x2065766F4DLL;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v31 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  uint64_t v36 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._uint64_t countAndFlagsBits = 544175136;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v33 = sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v28 = v4;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v11 = v38;
  v10(v4, v38);
  Swift::String v30 = v10;
  uint64_t v37 = v2 + 8;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._uint64_t countAndFlagsBits = 0x2065766F4DLL;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  Swift::String v14 = v28;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v29 = v6;
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v14, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x6C69662065766F4DLL;
  v15._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0x796D206F746E6920;
  v16._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._uint64_t countAndFlagsBits = 0x7265646C6F6620;
  v17._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v30;
  v30(v14, v38);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._uint64_t countAndFlagsBits = 0x2065766F4DLL;
  v19._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._uint64_t countAndFlagsBits = 544175136;
  v20._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._object = (void *)0x80000001005ED2E0;
  v21._uint64_t countAndFlagsBits = 0xD000000000000022;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v18(v14, v38);
  sub_1000CBE70(&qword_1007124E8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1005A0500;
  uint64_t v24 = v34;
  *(void *)(v23 + 32) = v35;
  *(void *)(v23 + 40) = v24;
  *(void *)(v23 + 48) = v32;
  *(void *)(v23 + 56) = v22;
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_10037C9D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileEntity();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v9 - v6;
  sub_1001173A0(a1, (uint64_t)&v9 - v6);
  sub_1001173A0((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter();
  return sub_100117404((uint64_t)v7);
}

uint64_t sub_10037CA90(uint64_t a1)
{
  return sub_10037D1E8(a1, (uint64_t)sub_10037CAD0, (uint64_t)sub_10037CC0C, (uint64_t)sub_10037CC10);
}

uint64_t sub_10037CAD0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10037CC10()
{
  return sub_100380594();
}

uint64_t sub_10037CC24()
{
  uint64_t v24 = sub_1000CBE70(&qword_1007124D8);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v1 = (char *)&v19 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007124E0);
  __chkstk_darwin(v2);
  sub_1001ADC98();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._uint64_t countAndFlagsBits = 0x2065766F4DLL;
  v3._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  uint64_t v21 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 544175136;
  v4._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  unint64_t v25 = sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v5._uint64_t countAndFlagsBits = 0xD000000000000020;
  v5._object = (void *)0x80000001005ED260;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  v26 += 8;
  uint64_t v6 = v24;
  v20(v1, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0x2065766F4DLL;
  v7._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._uint64_t countAndFlagsBits = 544175136;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._object = (void *)0x80000001005ED290;
  v9._uint64_t countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = v20;
  v20(v1, v6);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._uint64_t countAndFlagsBits = 0x6C69662065766F4DLL;
  v11._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._uint64_t countAndFlagsBits = 0x796D206F746E6920;
  v12._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 0xD000000000000021;
  v13._object = (void *)0x80000001005ED2B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v1, v24);
  sub_1000CBE70(&qword_1007124E8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0230;
  uint64_t v16 = v22;
  *(void *)(v15 + 32) = v23;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_10037D1A8(uint64_t a1)
{
  return sub_10037D1E8(a1, (uint64_t)sub_100381890, (uint64_t)sub_10037CC0C, (uint64_t)sub_10037D4A0);
}

uint64_t sub_10037D1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1001ADC98();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  swift_getKeyPath();
  sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v9(v7, v4);
  swift_getKeyPath();
  sub_1003817D4(&qword_100712488, &qword_100707C50, (void (*)(void))sub_10038131C);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v9(v7, v4);
  sub_1000CBE70(&qword_100712460);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005A0230;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v10;
  *(void *)(v12 + 48) = v11;
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10037D4A0()
{
  return sub_100380594();
}

uint64_t sub_10037D4B0(uint64_t a1)
{
  uint64_t v70 = a1;
  uint64_t v69 = sub_1000CBE70(&qword_1007124B8);
  uint64_t v72 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v71 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_1007124C0);
  __chkstk_darwin(v6);
  sub_1003810D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0x73736572706D6F43;
  v7._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  Swift::String v66 = (void (*)(void))sub_100337064;
  uint64_t v67 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._uint64_t countAndFlagsBits = 544106784;
  v8._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v2);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v10 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v68 = *(void (**)(char *, uint64_t))(v72 + 8);
  v72 += 8;
  uint64_t v11 = v69;
  v68(v10, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._uint64_t countAndFlagsBits = 0x2065766968637241;
  v12._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 544175136;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  Swift::String v66 = (void (*)(void))sub_1003817D4(&qword_1007124B0, (uint64_t *)&unk_100707AE0, v66);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v10;
  uint64_t v16 = v68;
  v68(v15, v11);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._uint64_t countAndFlagsBits = 544237914;
  v17._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._object = (void *)0x80000001005ED130;
  v18._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  Swift::String v20 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v20, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._uint64_t countAndFlagsBits = 0x73736572706D6F43;
  v21._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._object = (void *)0x80000001005ED150;
  v22._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  uint64_t v24 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  unint64_t v25 = v68;
  uint64_t v26 = v69;
  v68(v24, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v27._object = (void *)0x80000001005ED170;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  unint64_t v29 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v29, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._uint64_t countAndFlagsBits = 0x2065766968637241;
  v30._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._uint64_t countAndFlagsBits = 544432416;
  v31._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  swift_getKeyPath();
  unint64_t v65 = sub_10038144C();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  unint64_t v33 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v34 = v69;
  v68(v33, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._uint64_t countAndFlagsBits = 0x73736572706D6F43;
  v35._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v36._uint64_t countAndFlagsBits = 544432416;
  v36._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v37._uint64_t countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  uint64_t v38 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v39 = v68;
  v68(v38, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v40._uint64_t countAndFlagsBits = 0x2065766968637241;
  v40._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v41._uint64_t countAndFlagsBits = 544432416;
  v41._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v42._uint64_t countAndFlagsBits = 0x206F746E6920;
  v42._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v43._uint64_t countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v44 = v69;
  v39(v38, v69);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v45._uint64_t countAndFlagsBits = 0x73736572706D6F43;
  v45._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v46._uint64_t countAndFlagsBits = 544432416;
  v46._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v47._uint64_t countAndFlagsBits = 0xD000000000000011;
  v47._object = (void *)0x80000001005ED190;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v48._uint64_t countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v68(v38, v44);
  sub_1000CBE70(&qword_1007124D0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1005A1D40;
  uint64_t v51 = v63;
  *(void *)(v50 + 32) = v64;
  *(void *)(v50 + 40) = v51;
  uint64_t v52 = v61;
  *(void *)(v50 + 48) = v62;
  *(void *)(v50 + 56) = v52;
  uint64_t v53 = v59;
  *(void *)(v50 + 64) = v60;
  *(void *)(v50 + 72) = v53;
  uint64_t v54 = v57;
  *(void *)(v50 + 80) = v58;
  *(void *)(v50 + 88) = v54;
  *(void *)(v50 + 96) = v49;
  uint64_t v55 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t sub_10037E29C(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v9 - v6;
  sub_100338F28(a1, (uint64_t)&v9 - v6);
  sub_100338F28((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter();
  return sub_100338FF8((uint64_t)v7);
}

uint64_t sub_10037E360()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1003810D8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1003817D4(&qword_1007124B0, (uint64_t *)&unk_100707AE0, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_1000CBE70(&qword_100712460);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10059B760;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10037E5B4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10037E680()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10037E738(uint64_t a1)
{
  v25[1] = a1;
  uint64_t v29 = sub_1000CBE70(&qword_100712498);
  uint64_t v31 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v2 = (char *)v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_1007124A0);
  __chkstk_darwin(v7);
  sub_10038112C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0x20656D616E6552;
  v8._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v30 = sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._uint64_t countAndFlagsBits = 544106784;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v31 += 8;
  uint64_t v11 = v29;
  v26(v2, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._uint64_t countAndFlagsBits = 0x20656D616E6552;
  v12._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._uint64_t countAndFlagsBits = 544175136;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  sub_1003812C0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v11;
  uint64_t v16 = v26;
  v26(v2, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._object = (void *)0x80000001005ED080;
  v17._uint64_t countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._uint64_t countAndFlagsBits = 544175136;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v2, v29);
  sub_1000CBE70(&qword_1007124A8);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1005A0230;
  uint64_t v22 = v27;
  *(void *)(v21 + 32) = v28;
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = v20;
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10037ECD0(uint64_t a1)
{
  return sub_10037ED10(a1, (uint64_t)sub_10037EF90, (uint64_t)sub_10037F0E4, (uint64_t)sub_10037CC10);
}

uint64_t sub_10037ED10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10038112C();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  swift_getKeyPath();
  sub_1003812C0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v10 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v9(v7, v4);
  swift_getKeyPath();
  sub_1003817D4(&qword_100712488, &qword_100707C50, (void (*)(void))sub_10038131C);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v9(v7, v4);
  sub_1000CBE70(&qword_100712460);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005A0230;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v10;
  *(void *)(v12 + 48) = v11;
  uint64_t v13 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10037EF90()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10037F0E8(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v34 = sub_1000CBE70(&qword_100712498);
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_1007124A0);
  __chkstk_darwin(v7);
  sub_10038112C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0x20656D616E6552;
  v8._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  unint64_t v36 = sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._uint64_t countAndFlagsBits = 544106784;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v37 + 8);
  v37 += 8;
  uint64_t v12 = v34;
  v11(v2, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._uint64_t countAndFlagsBits = 0x20656D616E6552;
  v13._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._uint64_t countAndFlagsBits = 544175136;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  unint64_t v35 = sub_1003812C0();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v15._object = (void *)0x80000001005ED040;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  unint64_t v30 = v11;
  uint64_t v31 = v16;
  v11(v2, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._uint64_t countAndFlagsBits = 0x20656D616E6552;
  v17._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._uint64_t countAndFlagsBits = 544175136;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v19._object = (void *)0x80000001005ED060;
  v19._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v21 = v34;
  v11(v2, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._uint64_t countAndFlagsBits = 0xD000000000000017;
  v22._object = (void *)0x80000001005ED080;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._uint64_t countAndFlagsBits = 544175136;
  v23._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._object = (void *)0x80000001005ED0A0;
  v24._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v30(v2, v21);
  sub_1000CBE70(&qword_1007124A8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1005A0500;
  uint64_t v27 = v31;
  *(void *)(v26 + 32) = v32;
  *(void *)(v26 + 40) = v27;
  *(void *)(v26 + 48) = v20;
  *(void *)(v26 + 56) = v25;
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_10037F7DC(uint64_t a1)
{
  return sub_10037ED10(a1, (uint64_t)sub_100381894, (uint64_t)sub_10037F0E4, (uint64_t)sub_10037D4A0);
}

uint64_t sub_10037F81C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A1DF0;
  *(void *)(v7 + 32) = v0;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v2;
  *(void *)(v7 + 56) = v3;
  *(void *)(v7 + 64) = v4;
  *(void *)(v7 + 72) = v5;
  *(void *)(v7 + 80) = v6;
  uint64_t v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10037F988(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100712468);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  uint64_t v42 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100712470);
  __chkstk_darwin(v8);
  sub_10031DB94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x2065766153;
  v9._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  uint64_t v40 = sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 544175136;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v35 = sub_100337064();
  uint64_t v33 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v41;
  Swift::String v14 = *(void (**)(char *, uint64_t))(v42 + 8);
  uint64_t v38 = v12;
  uint64_t v39 = v14;
  v42 += 8;
  v14(v7, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x2065766153;
  v15._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 544106784;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v18 = v36;
  uint64_t v17 = v37;
  Swift::String v19 = v34;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v34, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v21 = v39;
  v39(v7, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._uint64_t countAndFlagsBits = 0x6C69662065766153;
  v22._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v23._uint64_t countAndFlagsBits = 0x796D206F746E6920;
  v23._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._uint64_t countAndFlagsBits = 0x7265646C6F6620;
  v24._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v21(v7, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v25._uint64_t countAndFlagsBits = 543450177;
  v25._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v26._uint64_t countAndFlagsBits = 0x20656874206F7420;
  v26._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._uint64_t countAndFlagsBits = 0x6F74636572696420;
  v27._object = (void *)0xEA00000000007972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v39(v7, v41);
  sub_1000CBE70(&qword_100712478);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1005A0500;
  uint64_t v30 = v37;
  *(void *)(v29 + 32) = v38;
  *(void *)(v29 + 40) = v30;
  *(void *)(v29 + 48) = v36;
  *(void *)(v29 + 56) = v28;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1003800A4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1003817D4((unint64_t *)&qword_100707B30, (uint64_t *)&unk_10070C060, (void (*)(void))sub_100337064);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_10031DB94();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_100337064();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_1000CBE70(&qword_100712460);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10059B760;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1003802C4()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A8670;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100380400()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005A1E30;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100380578()
{
  return sub_100380594();
}

uint64_t sub_100380594()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A0030;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100380600()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100380748();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v4 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000CBE70(&qword_100712428);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for FileAssistantIntents()
{
  return &type metadata for FileAssistantIntents;
}

unint64_t sub_100380748()
{
  unint64_t result = qword_100712420;
  if (!qword_100712420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712420);
  }
  return result;
}

uint64_t sub_10038079C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100525B18();
  sub_100380748();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v45 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  uint64_t v46 = sub_10040F190();
  sub_1001AE94C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v44 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_10030CDF4();
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  sub_10030BF30();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v43 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_10026D55C();
  sub_10026DB38();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v42 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_100117080();
  sub_100116A50();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v41 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1003F7580();
  uint64_t v47 = v7;
  sub_100381030();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v40 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1003F7580();
  uint64_t v47 = v8;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v39 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1003F7580();
  uint64_t v47 = v9;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v38 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1001424C4();
  sub_100142DA0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v37 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_100405580();
  sub_100381084();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v36 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1001ADF10();
  uint64_t v47 = v10;
  uint64_t v48 = v11;
  sub_1001ADC98();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v12 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1001ADF10();
  uint64_t v47 = v13;
  uint64_t v48 = v14;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v15 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1003A3A84();
  uint64_t v47 = v16;
  uint64_t v48 = v17;
  sub_1003810D8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v18 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1004684CC();
  uint64_t v47 = v19;
  uint64_t v48 = v20;
  sub_10038112C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v21 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_1004684CC();
  uint64_t v47 = v22;
  uint64_t v48 = v23;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v24 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v46 = sub_10031D1CC();
  uint64_t v47 = v25;
  sub_10031DB94();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v26 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  sub_1000CBE70(&qword_100712458);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1005A86D0;
  uint64_t v28 = v44;
  *(void *)(v27 + 32) = v45;
  *(void *)(v27 + 40) = v28;
  uint64_t v29 = v42;
  *(void *)(v27 + 48) = v43;
  *(void *)(v27 + 56) = v29;
  uint64_t v30 = v40;
  *(void *)(v27 + 64) = v41;
  *(void *)(v27 + 72) = v30;
  uint64_t v31 = v38;
  *(void *)(v27 + 80) = v39;
  *(void *)(v27 + 88) = v31;
  uint64_t v32 = v36;
  *(void *)(v27 + 96) = v37;
  *(void *)(v27 + 104) = v32;
  *(void *)(v27 + 112) = v12;
  *(void *)(v27 + 120) = v15;
  *(void *)(v27 + 128) = v18;
  *(void *)(v27 + 136) = v21;
  *(void *)(v27 + 144) = v24;
  *(void *)(v27 + 152) = v26;
  uint64_t v33 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v33;
}

unint64_t sub_100381030()
{
  unint64_t result = qword_100712438;
  if (!qword_100712438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712438);
  }
  return result;
}

unint64_t sub_100381084()
{
  unint64_t result = qword_100712440;
  if (!qword_100712440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712440);
  }
  return result;
}

unint64_t sub_1003810D8()
{
  unint64_t result = qword_100712448;
  if (!qword_100712448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712448);
  }
  return result;
}

unint64_t sub_10038112C()
{
  unint64_t result = qword_100712450;
  if (!qword_100712450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712450);
  }
  return result;
}

uint64_t sub_100381180@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1003811BC()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1003811F8()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100381220()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100381248@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100381284()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1003812C0()
{
  unint64_t result = qword_100712480;
  if (!qword_100712480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712480);
  }
  return result;
}

unint64_t sub_10038131C()
{
  unint64_t result = qword_100712490;
  if (!qword_100712490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712490);
  }
  return result;
}

uint64_t sub_100381370@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1003813B0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1003813D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100381414()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_10038144C()
{
  unint64_t result = qword_1007124C8;
  if (!qword_1007124C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007124C8);
  }
  return result;
}

uint64_t sub_1003814A4()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1003814E0()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100381504(uint64_t a1)
{
  return sub_10037C9D0(a1);
}

uint64_t sub_100381520@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100381560()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_100381598@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1003815D8()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1003815FC(uint64_t a1)
{
  return sub_10037BC7C(a1);
}

uint64_t sub_100381614@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100381650()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_100381688()
{
  unint64_t result = qword_100712520;
  if (!qword_100712520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712520);
  }
  return result;
}

uint64_t sub_1003816DC@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100381718()
{
  return IntentParameter.wrappedValue.setter();
}

double sub_10038175C@<D0>(_OWORD *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100381798()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1003817D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100381840(uint64_t a1)
{
  return sub_10037C9D0(a1);
}

uint64_t sub_100381858(uint64_t a1)
{
  return sub_10037BC7C(a1);
}

uint64_t sub_100381870(uint64_t a1)
{
  return sub_10037BC7C(a1);
}

BOOL sub_1003818AC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[11];
  v17[10] = a1[10];
  v17[11] = v2;
  long long v3 = a1[13];
  v17[12] = a1[12];
  v17[13] = v3;
  long long v4 = a1[7];
  v17[6] = a1[6];
  v17[7] = v4;
  long long v5 = a1[9];
  v17[8] = a1[8];
  v17[9] = v5;
  long long v6 = a1[3];
  _OWORD v17[2] = a1[2];
  v17[3] = v6;
  long long v7 = a1[5];
  void v17[4] = a1[4];
  v17[5] = v7;
  long long v8 = a1[1];
  v17[0] = *a1;
  v17[1] = v8;
  long long v9 = a2[11];
  v18[10] = a2[10];
  v18[11] = v9;
  long long v10 = a2[13];
  v18[12] = a2[12];
  v18[13] = v10;
  long long v11 = a2[7];
  v18[6] = a2[6];
  v18[7] = v11;
  long long v12 = a2[9];
  v18[8] = a2[8];
  v18[9] = v12;
  long long v13 = a2[3];
  void v18[2] = a2[2];
  v18[3] = v13;
  long long v14 = a2[5];
  v18[4] = a2[4];
  v18[5] = v14;
  long long v15 = a2[1];
  v18[0] = *a2;
  v18[1] = v15;
  return sub_100384754((uint64_t)v17, (uint64_t)v18);
}

BOOL sub_100381950(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

Swift::Int sub_100381980()
{
  Hasher.init(_seed:)();
  sub_1000CF54C();
  Swift::UInt64 v1 = v0[15];
  if ((v0[14] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[14];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  UIEdgeInsets.hash(into:)();
  if ((v0[20] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v0[20];
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_100381A3C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  _OWORD v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  uint64_t v14 = *(void *)(a1 + 160);
  long long v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  v15[8] = *(_OWORD *)(a2 + 128);
  v15[9] = v7;
  uint64_t v16 = *(void *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  void v15[6] = *(_OWORD *)(a2 + 96);
  v15[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  void v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v11;
  return sub_1003843F8((uint64_t)v13, (uint64_t)v15);
}

Swift::Int sub_100381AD0()
{
  return sub_100381980();
}

void sub_100381B2C()
{
  double v1 = v0[14];
  double v2 = v0[15];
  Swift::UInt64 v3 = *((void *)v0 + 20);
  sub_1000CF54C();
  sub_1000CEFD0(v1, v2);
  UIEdgeInsets.hash(into:)();
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v3;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

Swift::Int sub_100381BE4()
{
  double v1 = v0[14];
  double v2 = v0[15];
  Swift::UInt64 v3 = *((void *)v0 + 20);
  Hasher.init(_seed:)();
  sub_1000CF54C();
  sub_1000CEFD0(v1, v2);
  UIEdgeInsets.hash(into:)();
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v3;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void *sub_100381CB0@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, void *a6@<X8>)
{
  int v234 = a5;
  int v267 = a4;
  uint64_t v264 = a3;
  v235 = a6;
  uint64_t v8 = _s11EnvironmentVMa();
  __chkstk_darwin(v8 - 8);
  v263 = (double *)((char *)&v233 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  memcpy(v342, a1, sizeof(v342));
  long long v10 = a1[1];
  long long v349 = *a1;
  long long v350 = v10;
  long long v11 = a1[3];
  long long v351 = a1[2];
  long long v352 = v11;
  long long v12 = a1[5];
  long long v353 = a1[4];
  long long v354 = v12;
  long long v355 = a1[6];
  uint64_t v13 = *((void *)&v349 + 1);
  uint64_t v276 = *((void *)&v350 + 1);
  uint64_t v14 = (void *)v350;
  uint64_t v15 = v351;
  int v278 = BYTE8(v351);
  int v16 = BYTE9(v351);
  int v275 = BYTE10(v351);
  double v17 = *((double *)&v352 + 1);
  double v18 = *(double *)&v352;
  double v19 = *((double *)&v353 + 1);
  double v20 = *(double *)&v353;
  uint64_t v282 = *((void *)&v12 + 1);
  double v21 = *(double *)&v12;
  double v23 = *((double *)&v355 + 1);
  uint64_t v22 = v355;
  id v24 = (id)v349;
  id v25 = v14;
  id v26 = v24;
  id v27 = v25;
  id v28 = v26;
  id v29 = v27;
  id v30 = v28;
  id v31 = v29;
  id v32 = v30;
  id v33 = v31;
  id v34 = v32;
  uint64_t v35 = v13;
  id v36 = v34;
  id v37 = v33;
  v233 = a1;
  sub_1000CAF68((uint64_t)a1);
  sub_1000CAA28((uint64_t)&v349);
  swift_beginAccess();
  uint64_t v38 = 0;
  v236 = v326;
  v237 = v325;
  v246 = &v356[43];
  v247 = &v356[168];
  v242 = v347;
  v243 = v346;
  v244 = &v342[288];
  v245 = &v342[240];
  v248 = &v342[379];
  v249 = &v342[112];
  uint64_t v256 = a2;
  double v252 = (double)a2 + 0.2;
  double v240 = v17 + v17;
  double v241 = v252 + -1.0;
  double v239 = v20 + v20;
  v238 = (char *)&type metadata for () + 8;
  id v265 = v36;
  id v261 = v37;
  int v273 = v16;
  double v284 = v17;
  double v274 = v20;
  uint64_t v279 = v22;
  uint64_t v271 = v35;
  uint64_t v277 = v15;
  while (1)
  {
    if (*(uint64_t *)&v342[232] >= v256 && *(double *)&v342[280] >= *(double *)&v342[320])
    {
LABEL_93:

      if (v38 >= 1 && (v267 & 1) != 0)
      {
        memcpy(v356, v342, sizeof(v356));
        uint64_t v231 = sub_1000CAF68((uint64_t)v356);
        if (qword_1007050E8 != -1) {
          goto LABEL_104;
        }
        goto LABEL_96;
      }
LABEL_98:
      if (v234) {
        goto LABEL_100;
      }
      goto LABEL_99;
    }
    double v280 = v18;
    uint64_t v262 = v38;
    double v268 = v21;
    double v269 = v19;
    double v285 = fmax(v21 + -2.0, 4.0);
    double v40 = fmax(v19 + -2.0, 4.0);
    double v41 = fmax(v23 + -2.0, 4.0);
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    double v283 = v40;
    double v281 = v41;
    double v253 = v23;
    if (v42 != v45) {
      goto LABEL_10;
    }
    if (v44 == v46)
    {
      id v47 = v36;
      id v48 = v37;
      id v49 = v47;
      id v50 = v48;

      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_10:
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v52 = v36;
      id v53 = v37;
      id v54 = v52;
      id v55 = v53;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0)
      {

        uint64_t v61 = v276;
        uint64_t v60 = v277;
        goto LABEL_20;
      }
    }
    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v57;
    if (v56 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v58 == v59)
    {

      swift_bridgeObjectRelease_n();
      uint64_t v61 = v276;
      uint64_t v60 = v277;
    }
    else
    {
      char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v61 = v276;
      uint64_t v60 = v277;
      if ((v62 & 1) == 0) {
        goto LABEL_20;
      }
    }
    if (v40 == v269 && v285 == v268 && v41 == v23)
    {
      uint64_t v260 = 0;
      double v63 = v280;
      goto LABEL_43;
    }
LABEL_20:
    uint64_t v64 = v263;
    sub_1000C9970(v264, (uint64_t)v263);
    uint64_t v65 = v22;
    double v66 = *v64;
    double v258 = v64[1];
    double v67 = v40;
    uint64_t v270 = *((void *)v64 + 2);
    uint64_t v68 = *((void *)v64 + 4);
    uint64_t v266 = *((void *)v64 + 3);
    *(void *)&long long v250 = v68;
    uint64_t v69 = *((void *)v64 + 5);
    uint64_t v70 = *((void *)v64 + 8);
    id v71 = v36;
    id v72 = v37;
    id v73 = v71;
    id v74 = v72;
    uint64_t v75 = (uint64_t)v64;
    char v76 = v273;
    sub_1000C9914(v75);
    v377[0] = v73;
    uint64_t v77 = v271;
    v377[1] = v271;
    v377[2] = v74;
    v377[3] = v61;
    v377[4] = v60;
    char v78 = v278;
    char v378 = v278;
    char v379 = v76;
    char v79 = v275;
    char v380 = v275;
    double v80 = v280;
    double v381 = v280;
    double v382 = v284;
    double v383 = v20;
    double v384 = v67;
    double v385 = v285;
    uint64_t v81 = v282;
    uint64_t v386 = v282;
    uint64_t v82 = v65;
    uint64_t v387 = v65;
    double v83 = v41;
    double v388 = v41;
    double v259 = v66;
    double v389 = v66;
    double v84 = v258;
    uint64_t v85 = v70;
    uint64_t v86 = v69;
    uint64_t v87 = v266;
    uint64_t v88 = v250;
    double v390 = v258;
    uint64_t v391 = v270;
    uint64_t v392 = v266;
    uint64_t v393 = v250;
    uint64_t v394 = v86;
    uint64_t v257 = v85;
    uint64_t v395 = v85;
    sub_1000CB0B0(v357);
    if ((v267 & 1) == 0)
    {
      *(void *)v356 = v73;
      *(void *)&v356[8] = v77;
      *(void *)&v356[16] = v74;
      *(void *)&v356[24] = v61;
      *(void *)&v356[32] = v60;
      v356[40] = v78;
      v356[41] = v76;
      v356[42] = v79;
      *(double *)&v356[48] = v80;
      *(double *)&v356[56] = v284;
      *(double *)&v356[64] = v274;
      *(double *)&v356[72] = v283;
      *(double *)&v356[80] = v285;
      *(void *)&v356[88] = v81;
      uint64_t v95 = v82;
      *(void *)&v356[96] = v82;
      double v94 = v83;
      double v92 = v80;
      uint64_t v93 = v95;
      *(double *)&v356[104] = v94;
      *(double *)&v356[112] = v259;
      *(double *)&v356[120] = v84;
      *(void *)&v356[128] = v270;
      goto LABEL_26;
    }
    uint64_t v90 = v270;
    double v91 = v259;
    if (qword_1007050E8 != -1) {
      uint64_t v89 = swift_once();
    }
    double v63 = v280;
    if (byte_1007125C8)
    {
      *(void *)v356 = v73;
      *(void *)&v356[8] = v77;
      *(void *)&v356[16] = v74;
      *(void *)&v356[24] = v61;
      *(void *)&v356[32] = v60;
      v356[40] = v78;
      v356[41] = v76;
      char v79 = v275;
      v356[42] = v275;
      *(double *)&v356[48] = v280;
      double v92 = v280;
      *(double *)&v356[56] = v284;
      *(double *)&v356[64] = v274;
      *(double *)&v356[72] = v283;
      *(double *)&v356[80] = v285;
      *(void *)&v356[88] = v282;
      uint64_t v93 = v279;
      *(void *)&v356[96] = v279;
      *(double *)&v356[104] = v281;
      *(double *)&v356[112] = v91;
      *(double *)&v356[120] = v84;
      *(void *)&v356[128] = v90;
      double v94 = v281;
      uint64_t v87 = v266;
LABEL_26:
      *(void *)&v356[136] = v87;
      *(void *)&v356[144] = v88;
      *(void *)&v356[152] = v86;
      *(void *)&v356[160] = v257;
      Swift::String v96 = v247;
      char v97 = v76;
      sub_1000CBE0C((uint64_t)v357, (uint64_t)v247, &qword_1007121D8);
      sub_1000CAA90((uint64_t)v356);
      uint64_t v260 = (uint64_t)v74;

      id v255 = v73;
      sub_1000CBE0C((uint64_t)v357, (uint64_t)&v328, &qword_1007121D8);
      char v98 = v278;
      goto LABEL_27;
    }
    __chkstk_darwin(v89);
    *(&v233 - 2) = (long long *)v377;
    sub_1000CBE70(&qword_1007121D8);
    uint64_t v60 = v277;
    dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
    uint64_t v77 = v271;
    uint64_t v61 = v276;
    sub_1000CBE0C((uint64_t)&v300, (uint64_t)&v302, &qword_1007121D8);
    *(void *)v356 = v73;
    *(void *)&v356[8] = v77;
    *(void *)&v356[16] = v74;
    *(void *)&v356[24] = v61;
    *(void *)&v356[32] = v60;
    v356[40] = v78;
    v356[41] = v76;
    v356[42] = v275;
    *(double *)&v356[48] = v63;
    *(double *)&v356[56] = v284;
    *(double *)&v356[64] = v274;
    uint64_t v100 = v282;
    *(double *)&v356[72] = v283;
    *(double *)&v356[80] = v285;
    *(void *)&v356[88] = v282;
    *(void *)&v356[96] = v279;
    *(double *)&v356[104] = v281;
    *(double *)&v356[112] = v91;
    double v119 = v84;
    *(double *)&v356[120] = v84;
    uint64_t v120 = v90;
    *(void *)&v356[128] = v90;
    *(void *)&v356[136] = v266;
    uint64_t v107 = v88;
    *(void *)&v356[144] = v88;
    uint64_t v109 = v86;
    *(void *)&v356[152] = v86;
    uint64_t v110 = v257;
    *(void *)&v356[160] = v257;
    Swift::String v96 = v247;
    sub_1000CBE0C((uint64_t)&v302, (uint64_t)v247, &qword_1007121D8);
    sub_1000CAA90((uint64_t)v356);

    sub_1000CBE0C((uint64_t)&v302, (uint64_t)&v316, &qword_1007121D8);
    if (sub_1000CBEB4((uint64_t *)&v316) == 1)
    {
      sub_1000CBE0C((uint64_t)&v302, (uint64_t)&v328, &qword_1007121D8);
      char v79 = v275;
      double v121 = v119;
      double v92 = v63;
      double v84 = v121;
      uint64_t v93 = v279;
      uint64_t v86 = v109;
      double v94 = v281;
      uint64_t v260 = (uint64_t)v74;
      char v98 = v78;
      id v255 = v73;
      char v97 = v273;
      uint64_t v87 = v266;
LABEL_27:
      *(void *)v356 = v255;
      *(void *)&v356[8] = v77;
      *(void *)&v356[16] = v260;
      *(void *)&v356[24] = v61;
      *(void *)&v356[32] = v60;
      v356[40] = v98;
      v356[41] = v97;
      v356[42] = v79;
      Swift::String v99 = v246;
      _DWORD *v246 = v298;
      *((unsigned char *)v99 + 4) = v299;
      *(double *)&v356[48] = v92;
      *(double *)&v356[56] = v284;
      *(double *)&v356[64] = v274;
      uint64_t v100 = v282;
      *(double *)&v356[72] = v283;
      *(double *)&v356[80] = v285;
      *(void *)&v356[88] = v282;
      *(void *)&v356[96] = v93;
      *(double *)&v356[104] = v94;
      double v101 = v259;
      *(double *)&v356[112] = v259;
      *(double *)&v356[120] = v84;
      uint64_t v102 = v270;
      *(void *)&v356[128] = v270;
      *(void *)&v356[136] = v87;
      *(void *)&v356[144] = v88;
      *(void *)&v356[152] = v86;
      uint64_t v103 = v257;
      *(void *)&v356[160] = v257;
      sub_1000CBE0C((uint64_t)&v328, (uint64_t)v96, &qword_1007121D8);
      sub_1000CAA90((uint64_t)v356);
      sub_1000CABE8((uint64_t)v377, (uint64_t)v343);
      long long v320 = v343[4];
      long long v321 = v343[5];
      long long v322 = v343[6];
      uint64_t v104 = v345;
      uint64_t v323 = v344;
      long long v316 = v343[0];
      long long v317 = v343[1];
      long long v318 = v343[2];
      long long v319 = v343[3];
      long long v105 = v243[1];
      long long v302 = *v243;
      long long v303 = v105;
      long long v254 = v346[2];
      long long v300 = *(_OWORD *)v242;
      *((void *)&v106 + 1) = *((void *)&v300 + 1);
      uint64_t v301 = v242[2];
      *(void *)&long long v106 = v347[3];
      long long v272 = v106;
      *(void *)&long long v105 = v347[4];
      uint64_t v251 = v347[5];
      uint64_t v107 = v88;
      uint64_t v108 = v102;
      uint64_t v109 = v86;
      uint64_t v110 = v103;
      long long v250 = v105;
      if (v267)
      {
        id v73 = v255;
        id v111 = v255;
        id v112 = (id)v260;
        sub_1000CAA28((uint64_t)v343);
        id v113 = v111;
        id v114 = v112;
        uint64_t v115 = sub_1000CAA28((uint64_t)v343);
        id v36 = v265;
        if (qword_1007050E8 != -1) {
          uint64_t v115 = swift_once();
        }
        char v116 = v273;
        double v63 = v280;
        double v117 = v101;
        if (byte_1007125C8)
        {
          sub_1000CAE50((uint64_t)v356);
          sub_1000CAA5C((void **)v343);
        }
        else
        {
          __chkstk_darwin(v115);
          *(&v233 - 2) = (long long *)v377;
          *(&v233 - 1) = v343;
          id v122 = v113;
          id v123 = v114;
          sub_1000CAA28((uint64_t)v343);
          char v116 = v273;
          id v36 = v265;
          dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();

          sub_1000CAA5C((void **)v343);
          sub_1000CAE50((uint64_t)v356);
          sub_1000CAA5C((void **)v343);
        }
        long long v294 = v320;
        long long v295 = v321;
        long long v296 = v322;
        uint64_t v297 = v323;
        long long v290 = v316;
        long long v291 = v317;
        long long v292 = v318;
        long long v293 = v319;
        long long v288 = v302;
        long long v289 = v303;
        long long v286 = v300;
        uint64_t v287 = v301;
        *(void *)&long long v124 = v272;
        *((void *)&v124 + 1) = v250;
        long long v272 = v124;
        uint64_t v77 = v271;
        uint64_t v61 = v276;
        uint64_t v60 = v277;
        id v74 = (id)v260;
        double v119 = v258;
      }
      else
      {
        sub_1000CAA28((uint64_t)v343);
        sub_1000CAE50((uint64_t)v356);
        long long v294 = v320;
        long long v295 = v321;
        long long v296 = v322;
        uint64_t v297 = v323;
        long long v290 = v316;
        long long v291 = v317;
        long long v292 = v318;
        long long v293 = v319;
        long long v288 = v302;
        long long v289 = v303;
        long long v286 = v300;
        uint64_t v287 = v301;
        *(void *)&long long v118 = v272;
        *((void *)&v118 + 1) = v250;
        long long v272 = v118;
        id v36 = v265;
        char v116 = v273;
        id v73 = v255;
        double v63 = v280;
        id v74 = (id)v260;
        double v117 = v101;
        double v119 = v258;
        uint64_t v61 = v276;
        uint64_t v60 = v277;
        uint64_t v77 = v271;
      }
      goto LABEL_38;
    }
    sub_1000CA2A0((uint64_t)&v302);
    long long v294 = v320;
    long long v295 = v321;
    long long v296 = v322;
    uint64_t v104 = v324;
    uint64_t v297 = v323;
    long long v290 = v316;
    long long v291 = v317;
    long long v292 = v318;
    long long v293 = v319;
    long long v125 = v237[1];
    long long v288 = *v237;
    long long v289 = v125;
    long long v254 = v325[2];
    uint64_t v287 = *((void *)v236 + 2);
    long long v286 = *(_OWORD *)v236;
    long long v272 = *(_OWORD *)&v326[24];
    uint64_t v251 = v327;
    id v36 = v265;
    char v116 = v273;
    uint64_t v108 = v120;
    double v117 = v259;
LABEL_38:
    memcpy(v356, v342, sizeof(v356));
    *(void *)v342 = v73;
    *(void *)&v342[8] = v77;
    *(void *)&v342[16] = v74;
    *(void *)&v342[24] = v61;
    *(void *)&v342[32] = v60;
    char v126 = v278;
    v342[40] = v278;
    v342[41] = v116;
    char v127 = v275;
    v342[42] = v275;
    *(double *)&v342[48] = v63;
    double v129 = v283;
    double v128 = v284;
    *(double *)&v342[56] = v284;
    double v130 = v274;
    *(double *)&v342[64] = v274;
    *(double *)&v342[72] = v283;
    double v131 = v285;
    *(double *)&v342[80] = v285;
    *(void *)&v342[88] = v100;
    uint64_t v132 = v279;
    *(void *)&v342[96] = v279;
    double v133 = v281;
    *(double *)&v342[104] = v281;
    long long v134 = v295;
    id v135 = v249;
    *((_OWORD *)v249 + 4) = v294;
    *((_OWORD *)v135 + 5) = v134;
    *((_OWORD *)v135 + 6) = v296;
    *((void *)v135 + 14) = v297;
    long long v136 = v291;
    *(_OWORD *)id v135 = v290;
    *((_OWORD *)v135 + 1) = v136;
    long long v137 = v293;
    *((_OWORD *)v135 + 2) = v292;
    *((_OWORD *)v135 + 3) = v137;
    *(void *)&v342[232] = v104;
    long long v138 = v289;
    uint64_t v140 = v244;
    uint64_t v139 = v245;
    _OWORD *v245 = v288;
    v139[1] = v138;
    *(_OWORD *)&v342[272] = v254;
    *((void *)v140 + 2) = v287;
    *(_OWORD *)uint64_t v140 = v286;
    *(_OWORD *)&v342[312] = v272;
    *(void *)&v342[328] = v251;
    *(void *)&v342[336] = v73;
    *(void *)&v342[344] = v77;
    *(void *)&v342[352] = v74;
    *(void *)&v342[360] = v61;
    *(void *)&v342[368] = v60;
    v342[376] = v126;
    v342[377] = v116;
    v342[378] = v127;
    LODWORD(v139) = v298;
    v141 = v248;
    v248[4] = v299;
    _DWORD *v141 = v139;
    *(double *)&v342[384] = v63;
    *(double *)&v342[392] = v128;
    *(double *)&v342[400] = v130;
    *(double *)&v342[408] = v129;
    *(double *)&v342[416] = v131;
    *(void *)&v342[424] = v100;
    *(void *)&v342[432] = v132;
    *(double *)&v342[440] = v133;
    *(double *)&v342[448] = v117;
    *(double *)&v342[456] = v119;
    *(void *)&v342[464] = v108;
    *(void *)&v342[472] = v266;
    *(void *)&v342[480] = v107;
    *(void *)&v342[488] = v109;
    *(void *)&v342[496] = v110;
    sub_1000CA11C((uint64_t)v356);
    if (v104 >= v256)
    {
      id v37 = v261;
      if (*((double *)&v254 + 1) >= *((double *)&v272 + 1))
      {

        double v145 = v63;
        uint64_t v167 = 1;
        double v20 = v274;
        uint64_t v22 = v279;
        double v158 = v283;
        double v41 = v281;
        goto LABEL_91;
      }
      uint64_t v260 = 1;
    }
    else
    {
      uint64_t v260 = 1;
      id v37 = v261;
    }
    double v20 = v274;
    double v41 = v281;
LABEL_43:
    uint64_t v142 = (uint64_t)v263;
    sub_1000C9970(v264, (uint64_t)v263);
    id v143 = v36;
    id v144 = v37;
    sub_1000C9914(v142);
    double v145 = v63;
    if (DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)())
    {
      UIFloorToScale();
      double v147 = v146;
      if (qword_100704FB8 != -1) {
        swift_once();
      }
      if (v147 - v240 - v239 >= *(double *)&qword_1007371F8) {
        double v148 = *(double *)&qword_1007371F8;
      }
      else {
        double v148 = v147 - v240 - v239;
      }
      if (qword_100704F78 != -1) {
        swift_once();
      }
      if (*(double *)&qword_1007371B8 > v148) {
        double v148 = *(double *)&qword_1007371B8;
      }
      *(double *)&uint64_t v149 = COERCE_DOUBLE(sub_1000C9DD8(v148, 1.0));
      if (v150)
      {
        UIRoundToScale();
        double v145 = v151;
      }
      else
      {
        double v145 = *(double *)&v149;
      }
    }
    uint64_t v152 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v154 = v153;
    if (v152 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v154 == v155)
    {
      id v156 = v143;
      id v157 = v144;

      swift_bridgeObjectRelease_n();
      uint64_t v22 = v279;
      double v158 = v283;
    }
    else
    {
      char v159 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v160 = v143;
      id v161 = v144;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v279;
      double v158 = v283;
      if ((v159 & 1) == 0)
      {

        goto LABEL_71;
      }
    }
    id v37 = v261;
    uint64_t v162 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v164 = v163;
    if (v162 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v164 == v165)
    {

      swift_bridgeObjectRelease_n();
      id v36 = v265;
      if (v145 != v63) {
        goto LABEL_71;
      }
    }
    else
    {
      char v166 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v36 = v265;
      if ((v166 & 1) == 0 || v145 != v63) {
        goto LABEL_71;
      }
    }
    if (v158 == v269 && v285 == v268 && v41 == v253)
    {

      uint64_t v167 = v260;
      goto LABEL_91;
    }
LABEL_71:
    uint64_t v168 = (uint64_t)v263;
    sub_1000C9970(v264, (uint64_t)v263);
    double v280 = *(double *)v168;
    uint64_t v169 = *(void *)(v168 + 8);
    uint64_t v170 = *(void *)(v168 + 16);
    uint64_t v171 = *(void *)(v168 + 32);
    double v269 = *(double *)(v168 + 24);
    uint64_t v270 = v169;
    uint64_t v172 = *(void *)(v168 + 40);
    double v268 = *(double *)(v168 + 64);
    id v173 = v143;
    id v174 = v144;
    double v175 = COERCE_DOUBLE(v173);
    id v176 = v174;
    sub_1000C9914(v168);
    *(double *)v358 = v175;
    uint64_t v177 = v271;
    v358[1] = v271;
    v358[2] = v176;
    uint64_t v178 = v276;
    uint64_t v179 = v277;
    v358[3] = v276;
    v358[4] = v277;
    char v180 = v278;
    char v359 = v278;
    char v181 = v273;
    char v360 = v273;
    char v182 = v275;
    char v361 = v275;
    double v362 = v145;
    double v363 = v284;
    double v364 = v20;
    double v365 = v158;
    double v366 = v285;
    double v183 = v41;
    double v184 = v284;
    uint64_t v185 = v22;
    uint64_t v186 = v270;
    uint64_t v187 = v282;
    uint64_t v367 = v282;
    uint64_t v368 = v185;
    double v369 = v183;
    double v370 = v280;
    uint64_t v371 = v270;
    *(void *)&long long v272 = v170;
    uint64_t v372 = v170;
    double v188 = v269;
    double v373 = v269;
    uint64_t v374 = v171;
    uint64_t v266 = v172;
    uint64_t v375 = v172;
    double v189 = v268;
    double v376 = v268;
    sub_1000CB0B0(v357);
    double v259 = v175;
    if ((v267 & 1) == 0)
    {
      *(double *)v356 = v175;
      *(void *)&v356[8] = v177;
      *(void *)&v356[16] = v176;
      *(void *)&v356[24] = v178;
      *(void *)&v356[32] = v179;
      v356[40] = v180;
      v356[41] = v181;
      v356[42] = v182;
      *(double *)&v356[48] = v145;
      *(double *)&v356[56] = v184;
      *(double *)&v356[64] = v20;
      *(double *)&v356[72] = v283;
      *(double *)&v356[80] = v285;
      *(void *)&v356[88] = v187;
      *(void *)&v356[96] = v279;
      *(double *)&v356[104] = v281;
      *(double *)&v356[112] = v280;
      *(void *)&v356[120] = v186;
      *(void *)&v356[128] = v272;
      *(double *)&v356[136] = v188;
      *(void *)&v356[144] = v171;
      *(void *)&v356[152] = v266;
      goto LABEL_77;
    }
    double v191 = v280;
    if (qword_1007050E8 != -1) {
      uint64_t v190 = swift_once();
    }
    double v158 = v283;
    if (byte_1007125C8)
    {
      *(double *)v356 = v175;
      *(void *)&v356[8] = v177;
      *(void *)&v356[16] = v176;
      *(void *)&v356[24] = v178;
      *(void *)&v356[32] = v179;
      char v180 = v278;
      v356[40] = v278;
      v356[41] = v273;
      char v182 = v275;
      v356[42] = v275;
      *(double *)&v356[48] = v145;
      double v184 = v284;
      *(double *)&v356[56] = v284;
      *(double *)&v356[64] = v20;
      *(double *)&v356[72] = v283;
      *(double *)&v356[80] = v285;
      uint64_t v187 = v282;
      *(void *)&v356[88] = v282;
      *(void *)&v356[96] = v279;
      *(double *)&v356[104] = v281;
      *(double *)&v356[112] = v191;
      double v188 = v269;
      uint64_t v186 = v270;
      *(void *)&v356[120] = v270;
      *(void *)&v356[128] = v272;
      *(double *)&v356[136] = v269;
      *(void *)&v356[144] = v171;
      *(void *)&v356[152] = v266;
      double v189 = v268;
LABEL_77:
      *(double *)&v356[160] = v189;
      v192 = v247;
      double v193 = v175;
      sub_1000CBE0C((uint64_t)v357, (uint64_t)v247, &qword_1007121D8);
      sub_1000CAA90((uint64_t)v356);

      sub_1000CBE0C((uint64_t)v357, (uint64_t)&v316, &qword_1007121D8);
      goto LABEL_78;
    }
    __chkstk_darwin(v190);
    *(&v233 - 2) = (long long *)v358;
    v209 = v176;
    double v193 = v175;
    sub_1000CBE70(&qword_1007121D8);
    dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
    uint64_t v177 = v271;
    sub_1000CBE0C((uint64_t)&v328, (uint64_t)&v300, &qword_1007121D8);
    *(double *)v356 = v175;
    *(void *)&v356[8] = v177;
    *(void *)&v356[16] = v176;
    *(void *)&v356[24] = v276;
    *(void *)&v356[32] = v277;
    v356[40] = v278;
    char v210 = v273;
    v356[41] = v273;
    char v182 = v275;
    v356[42] = v275;
    *(double *)&v356[48] = v145;
    *(double *)&v356[56] = v284;
    *(double *)&v356[64] = v20;
    *(double *)&v356[72] = v158;
    *(double *)&v356[80] = v285;
    double v41 = v281;
    *(void *)&v356[88] = v282;
    uint64_t v22 = v279;
    *(void *)&v356[96] = v279;
    *(double *)&v356[104] = v281;
    *(double *)&v356[112] = v191;
    *(void *)&v356[120] = v270;
    *(void *)&v356[128] = v272;
    *(double *)&v356[136] = v269;
    uint64_t v208 = v171;
    *(void *)&v356[144] = v171;
    uint64_t v197 = v266;
    *(void *)&v356[152] = v266;
    *(double *)&v356[160] = v268;
    v192 = v247;
    sub_1000CBE0C((uint64_t)&v300, (uint64_t)v247, &qword_1007121D8);
    sub_1000CAA90((uint64_t)v356);

    sub_1000CBE0C((uint64_t)&v300, (uint64_t)&v302, &qword_1007121D8);
    if (sub_1000CBEB4((uint64_t *)&v302) == 1)
    {
      sub_1000CBE0C((uint64_t)&v300, (uint64_t)&v316, &qword_1007121D8);
      char v180 = v278;
      double v184 = v284;
      uint64_t v187 = v282;
      double v188 = v269;
      uint64_t v186 = v270;
      uint64_t v171 = v208;
      double v189 = v268;
      id v176 = v209;
      uint64_t v178 = v276;
      uint64_t v179 = v277;
LABEL_78:
      *(double *)v356 = v193;
      *(void *)&v356[8] = v177;
      *(void *)&v356[16] = v176;
      *(void *)&v356[24] = v178;
      *(void *)&v356[32] = v179;
      v356[40] = v180;
      char v194 = v273;
      v356[41] = v273;
      v356[42] = v182;
      v195 = v246;
      _DWORD *v246 = v300;
      *((unsigned char *)v195 + 4) = BYTE4(v300);
      uint64_t v257 = v171;
      double v258 = v145;
      *(double *)&v356[48] = v145;
      *(double *)&v356[56] = v184;
      *(double *)&v356[64] = v20;
      *(double *)&v356[72] = v283;
      *(double *)&v356[80] = v285;
      *(void *)&v356[88] = v187;
      double v196 = v280;
      *(void *)&v356[96] = v279;
      double v41 = v281;
      *(double *)&v356[104] = v281;
      *(double *)&v356[112] = v280;
      *(void *)&v356[120] = v186;
      *(void *)&v356[128] = v272;
      *(double *)&v356[136] = v188;
      *(void *)&v356[144] = v171;
      uint64_t v197 = v266;
      *(void *)&v356[152] = v266;
      *(double *)&v356[160] = v189;
      sub_1000CBE0C((uint64_t)&v316, (uint64_t)v192, &qword_1007121D8);
      sub_1000CAA90((uint64_t)v356);
      sub_1000CABE8((uint64_t)v358, (uint64_t)v348);
      long long v312 = v348[10];
      long long v313 = v348[11];
      long long v314 = v348[12];
      long long v315 = v348[13];
      long long v308 = v348[6];
      long long v309 = v348[7];
      long long v310 = v348[8];
      long long v311 = v348[9];
      long long v304 = v348[2];
      long long v305 = v348[3];
      long long v306 = v348[4];
      long long v307 = v348[5];
      long long v302 = v348[0];
      long long v303 = v348[1];
      id v198 = *(id *)&v193;
      id v199 = v176;
      sub_1000CAA28((uint64_t)v348);
      char v200 = v194;
      double v201 = v196;
      if (v267)
      {
        id v202 = v198;
        id v203 = v199;
        uint64_t v204 = sub_1000CAA28((uint64_t)v348);
        id v37 = v261;
        if (qword_1007050E8 != -1) {
          uint64_t v204 = swift_once();
        }
        id v36 = v265;
        double v158 = v283;
        double v20 = v274;
        double v205 = v196;
        if (byte_1007125C8)
        {
          sub_1000CAE50((uint64_t)v356);
          sub_1000CAA5C((void **)v348);
        }
        else
        {
          __chkstk_darwin(v204);
          *(&v233 - 2) = (long long *)v358;
          *(&v233 - 1) = v348;
          id v211 = v202;
          id v212 = v203;
          sub_1000CAA28((uint64_t)v348);
          id v37 = v261;
          dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();

          sub_1000CAA5C((void **)v348);
          sub_1000CAE50((uint64_t)v356);
          sub_1000CAA5C((void **)v348);

          char v200 = v273;
          id v36 = v265;
        }
        long long v338 = v312;
        long long v339 = v313;
        long long v340 = v314;
        long long v341 = v315;
        long long v334 = v308;
        long long v335 = v309;
        long long v336 = v310;
        long long v337 = v311;
        long long v330 = v304;
        long long v331 = v305;
        long long v332 = v306;
        long long v333 = v307;
        long long v328 = v302;
        long long v329 = v303;
        uint64_t v206 = v271;
        uint64_t v207 = v276;
        char v182 = v275;
        uint64_t v208 = v257;
        double v145 = v258;
        uint64_t v22 = v279;
        uint64_t v197 = v266;
      }
      else
      {
        sub_1000CAE50((uint64_t)v356);

        long long v338 = v312;
        long long v339 = v313;
        long long v340 = v314;
        long long v341 = v315;
        long long v334 = v308;
        long long v335 = v309;
        long long v336 = v310;
        long long v337 = v311;
        long long v330 = v304;
        long long v331 = v305;
        long long v332 = v306;
        long long v333 = v307;
        long long v328 = v302;
        long long v329 = v303;
        uint64_t v206 = v271;
        char v182 = v275;
        id v36 = v265;
        double v158 = v283;
        id v37 = v261;
        uint64_t v22 = v279;
        double v20 = v274;
        uint64_t v207 = v276;
        double v205 = v201;
        uint64_t v208 = v257;
        double v145 = v258;
      }
      goto LABEL_90;
    }
    id v213 = *(id *)&v175;
    id v214 = v209;
    sub_1000CA2A0((uint64_t)&v300);

    uint64_t v206 = v271;
    long long v338 = v312;
    long long v339 = v313;
    long long v340 = v314;
    long long v341 = v315;
    long long v334 = v308;
    long long v335 = v309;
    long long v336 = v310;
    long long v337 = v311;
    long long v330 = v304;
    long long v331 = v305;
    long long v332 = v306;
    long long v333 = v307;
    long long v328 = v302;
    long long v329 = v303;
    id v36 = v265;
    id v37 = v261;
    char v200 = v210;
    id v176 = v209;
    uint64_t v207 = v276;
    double v205 = v280;
LABEL_90:
    v215 = (char *)(v260 + 1);
    memcpy(v356, v342, sizeof(v356));
    double v216 = v259;
    *(double *)v342 = v259;
    *(void *)&v342[8] = v206;
    *(void *)&v342[16] = v176;
    *(void *)&v342[24] = v207;
    uint64_t v217 = v277;
    *(void *)&v342[32] = v277;
    char v218 = v278;
    v342[40] = v278;
    v342[41] = v200;
    v342[42] = v182;
    *(double *)&v342[48] = v145;
    double v220 = v284;
    double v219 = v285;
    *(double *)&v342[56] = v284;
    *(double *)&v342[64] = v20;
    *(double *)&v342[72] = v158;
    *(double *)&v342[80] = v285;
    uint64_t v221 = v282;
    *(void *)&v342[88] = v282;
    *(void *)&v342[96] = v22;
    *(double *)&v342[104] = v41;
    long long v222 = v339;
    v223 = v249;
    *((_OWORD *)v249 + 10) = v338;
    v223[11] = v222;
    long long v224 = v341;
    v223[12] = v340;
    v223[13] = v224;
    long long v225 = v335;
    v223[6] = v334;
    v223[7] = v225;
    long long v226 = v337;
    v223[8] = v336;
    v223[9] = v226;
    long long v227 = v331;
    v223[2] = v330;
    v223[3] = v227;
    long long v228 = v333;
    v223[4] = v332;
    v223[5] = v228;
    long long v229 = v329;
    _OWORD *v223 = v328;
    v223[1] = v229;
    *(double *)&v342[336] = v216;
    *(void *)&v342[344] = v206;
    *(void *)&v342[352] = v176;
    *(void *)&v342[360] = v207;
    *(void *)&v342[368] = v217;
    v342[376] = v218;
    v342[377] = v200;
    v342[378] = v182;
    v230 = v248;
    *(_DWORD *)v248 = v300;
    v230[4] = BYTE4(v300);
    *(double *)&v342[384] = v145;
    *(double *)&v342[392] = v220;
    *(double *)&v342[400] = v20;
    *(double *)&v342[408] = v158;
    *(double *)&v342[416] = v219;
    *(void *)&v342[424] = v221;
    *(void *)&v342[432] = v22;
    *(double *)&v342[440] = v41;
    *(double *)&v342[448] = v205;
    *(void *)&v342[456] = v270;
    *(void *)&v342[464] = v272;
    *(double *)&v342[472] = v269;
    *(void *)&v342[480] = v208;
    *(void *)&v342[488] = v197;
    *(double *)&v342[496] = v268;
    sub_1000CA11C((uint64_t)v356);
    uint64_t v167 = (uint64_t)v215;
LABEL_91:
    uint64_t v38 = v262 + v167;
    if (__OFADD__(v262, v167)) {
      break;
    }
    double v18 = v145;
    double v19 = v158;
    double v21 = v285;
    double v23 = v41;
    if (!v167) {
      goto LABEL_93;
    }
  }
  __break(1u);
LABEL_104:
  uint64_t v231 = swift_once();
LABEL_96:
  if (byte_1007125C8 == 1)
  {
    sub_1000CA11C((uint64_t)v356);
    goto LABEL_98;
  }
  *(void *)&long long v338 = *(void *)&v356[496];
  long long v336 = *(_OWORD *)&v356[464];
  long long v337 = *(_OWORD *)&v356[480];
  long long v332 = *(_OWORD *)&v356[400];
  long long v333 = *(_OWORD *)&v356[416];
  long long v335 = *(_OWORD *)&v356[448];
  long long v334 = *(_OWORD *)&v356[432];
  long long v328 = *(_OWORD *)&v356[336];
  long long v329 = *(_OWORD *)&v356[352];
  long long v331 = *(_OWORD *)&v356[384];
  long long v330 = *(_OWORD *)&v356[368];
  v357[10] = *(_OWORD *)&v356[272];
  v357[11] = *(_OWORD *)&v356[288];
  v357[12] = *(_OWORD *)&v356[304];
  v357[13] = *(_OWORD *)&v356[320];
  v357[6] = *(_OWORD *)&v356[208];
  v357[7] = *(_OWORD *)&v356[224];
  v357[8] = *(_OWORD *)&v356[240];
  v357[9] = *(_OWORD *)&v356[256];
  v357[2] = *(_OWORD *)&v356[144];
  v357[3] = *(_OWORD *)&v356[160];
  v357[4] = *(_OWORD *)&v356[176];
  v357[5] = *(_OWORD *)&v356[192];
  v357[0] = *(_OWORD *)&v356[112];
  v357[1] = *(_OWORD *)&v356[128];
  __chkstk_darwin(v231);
  *(&v233 - 2) = &v328;
  *(&v233 - 1) = v357;
  sub_1000CAA28((uint64_t)&v356[336]);
  sub_1000CAA28((uint64_t)&v356[112]);
  dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();
  sub_1000CAA5C((void **)&v356[336]);
  sub_1000CAA5C((void **)&v356[112]);
  sub_1000CA11C((uint64_t)v356);
  if ((v234 & 1) == 0)
  {
LABEL_99:
    memcpy(v356, v342, sizeof(v356));
    sub_1000CAF68((uint64_t)v356);
    sub_100384D20();
    sub_1000CA11C((uint64_t)v356);
  }
LABEL_100:

  return memcpy(v235, v342, 0x1F8uLL);
}

unint64_t sub_100383B54()
{
  return 0xD00000000000003BLL;
}

Swift::Int sub_100383B70()
{
  return Hasher._finalize()();
}

id *sub_100383BC4()
{
  return sub_1000CF444();
}

Swift::Int sub_100383C00()
{
  return Hasher._finalize()();
}

uint64_t sub_100383C50(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1003844F8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_100383C9C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void destroy for DOCGridLayout.LayoutCalculator.HeightDeterminingFactors(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for DOCGridLayout.LayoutCalculator.HeightDeterminingFactors(void *a1, void *a2)
{
  long long v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  long long v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  id v7 = v3;
  id v8 = v5;
  id v9 = v6;
  return a1;
}

void *assignWithCopy for DOCGridLayout.LayoutCalculator.HeightDeterminingFactors(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a2[1];
  long long v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  id v7 = (void *)a2[2];
  id v8 = (void *)a1[2];
  a1[2] = v7;
  id v9 = v7;

  a1[3] = a2[3];
  long long v10 = (void *)a2[4];
  long long v11 = (void *)a1[4];
  a1[4] = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for DOCGridLayout.LayoutCalculator.HeightDeterminingFactors(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;

  return a1;
}

uint64_t initializeWithCopy for DOCGridLayout.LayoutCalculator.CalculationVariables(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  id v9 = v3;
  id v10 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCGridLayout.LayoutCalculator.CalculationVariables(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v7 = *(void **)(a2 + 16);
  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

__n128 initializeWithTake for DOCGridLayout.LayoutCalculator.CalculationVariables(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for DOCGridLayout.LayoutCalculator.CalculationVariables(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  long long v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCGridLayout.LayoutCalculator.CalculationVariables(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCGridLayout.LayoutCalculator.CalculationVariables(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithCopy for DOCGridLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v7 = *(void **)(a2 + 16);
  long long v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  return a1;
}

__n128 initializeWithTake for DOCGridLayout(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for DOCGridLayout(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  long long v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v10;
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  return a1;
}

void *assignWithCopy for _DOCBrowserHistoryDataSourceBase.RefreshContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for _DOCBrowserHistoryDataSourceBase.RefreshContext(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

BOOL sub_1003843F8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 80);
  void v14[4] = *(_OWORD *)(a1 + 64);
  v14[5] = v4;
  v14[6] = *(_OWORD *)(a1 + 96);
  long long v5 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v14[2] = *(_OWORD *)(a1 + 32);
  void v14[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 32);
  long long v9 = *(_OWORD *)(a2 + 48);
  long long v10 = *(_OWORD *)(a2 + 96);
  v13[5] = *(_OWORD *)(a2 + 80);
  v13[6] = v10;
  long long v11 = *(_OWORD *)(a2 + 64);
  v13[3] = v9;
  v13[4] = v11;
  v13[2] = v8;
  if (!sub_1004282A8((uint64_t)v14, (uint64_t)v13)
    || *(double *)(a1 + 112) != *(double *)(a2 + 112)
    || *(double *)(a1 + 120) != *(double *)(a2 + 120))
  {
    return 0;
  }
  BOOL result = 0;
  if (*(double *)(a1 + 128) == *(double *)(a2 + 128)
    && *(double *)(a1 + 136) == *(double *)(a2 + 136)
    && *(double *)(a1 + 144) == *(double *)(a2 + 144)
    && *(double *)(a1 + 152) == *(double *)(a2 + 152))
  {
    return *(double *)(a1 + 160) == *(double *)(a2 + 160);
  }
  return result;
}

uint64_t sub_1003844F8(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    goto LABEL_17;
  }
  long long v4 = *(void **)(a1 + 8);
  id v28 = *(id *)(a2 + 8);
  id v29 = v4;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    sub_1000CED00(&v29);
    sub_1000CED00(&v28);
    swift_bridgeObjectRelease_n();
    sub_1000CF6B4(&v28);
    sub_1000CF6B4(&v29);
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1000CED00(&v29);
    sub_1000CED00(&v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CF6B4(&v28);
    sub_1000CF6B4(&v29);
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  id v12 = *(void **)(a1 + 16);
  id v26 = *(id *)(a2 + 16);
  id v27 = v12;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
    sub_1000CED00(&v27);
    sub_1000CED00(&v26);
    swift_bridgeObjectRelease_n();
    sub_1000CF6B4(&v26);
    sub_1000CF6B4(&v27);
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1000CED00(&v27);
    sub_1000CED00(&v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CF6B4(&v26);
    sub_1000CF6B4(&v27);
    char v11 = 0;
    if ((v17 & 1) == 0) {
      return v11 & 1;
    }
  }
  if (*(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
LABEL_17:
    char v11 = 0;
    return v11 & 1;
  }
  double v18 = *(void **)(a1 + 32);
  id v24 = *(id *)(a2 + 32);
  id v25 = v18;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
    char v11 = 1;
  }
  else {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_1000CED00(&v25);
  sub_1000CED00(&v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CF6B4(&v24);
  sub_1000CF6B4(&v25);
  return v11 & 1;
}

BOOL sub_100384754(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 80);
  void v14[4] = *(_OWORD *)(a1 + 64);
  v14[5] = v4;
  v14[6] = *(_OWORD *)(a1 + 96);
  long long v5 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v14[2] = *(_OWORD *)(a1 + 32);
  void v14[3] = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 32);
  long long v9 = *(_OWORD *)(a2 + 48);
  long long v10 = *(_OWORD *)(a2 + 96);
  v13[5] = *(_OWORD *)(a2 + 80);
  v13[6] = v10;
  long long v11 = *(_OWORD *)(a2 + 64);
  v13[3] = v9;
  v13[4] = v11;
  v13[2] = v8;
  if (!sub_1004282A8((uint64_t)v14, (uint64_t)v13)
    || *(double *)(a1 + 112) != *(double *)(a2 + 112)
    || *(void *)(a1 + 120) != *(void *)(a2 + 120)
    || *(double *)(a1 + 128) != *(double *)(a2 + 128))
  {
    return 0;
  }
  BOOL result = 0;
  if (*(double *)(a1 + 136) == *(double *)(a2 + 136)
    && *(double *)(a1 + 144) == *(double *)(a2 + 144)
    && *(double *)(a1 + 152) == *(double *)(a2 + 152))
  {
    return *(double *)(a1 + 160) == *(double *)(a2 + 160)
        && *(double *)(a1 + 168) == *(double *)(a2 + 168)
        && *(double *)(a1 + 176) == *(double *)(a2 + 176)
        && *(double *)(a1 + 184) == *(double *)(a2 + 184)
        && *(double *)(a1 + 192) == *(double *)(a2 + 192)
        && *(double *)(a1 + 200) == *(double *)(a2 + 200)
        && *(double *)(a1 + 208) == *(double *)(a2 + 208)
        && *(double *)(a1 + 216) == *(double *)(a2 + 216);
  }
  return result;
}

uint64_t sub_1003848C8(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  uint64_t v22 = 0xD000000000000016;
  unint64_t v23 = 0x80000001005EDB00;
  v8._uint64_t countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  uint64_t v10 = v22;
  unint64_t v9 = v23;
  if (DOCIsRunningUnitTests()())
  {
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = objc_allocWithZone((Class)NSException);
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithName:v11 reason:v13 userInfo:0];

    [v14 raise];
  }
  id v15 = [self standardUserDefaults];
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 BOOLForKey:v16];

  static Logger.UI.getter();
  swift_bridgeObjectRetain();
  char v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v21[0] = v4;
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    v21[1] = sub_10009B0E4(v10, v9, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, void))(v5 + 8))(v7, v21[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100384C14()
{
  _StringGuts.grow(_:)(121);
  v0._uint64_t countAndFlagsBits = 0xD000000000000055;
  v0._object = (void *)0x80000001005EDB60;
  String.append(_:)(v0);
  _s11EnvironmentVMa();
  _print_unlocked<A, B>(_:_:)();
  v1._object = (void *)0x80000001005EDBC0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  sub_1003848C8(0, (void *)0xE000000000000000);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100384D20()
{
  sub_1000C7644();
  _StringGuts.grow(_:)(536);
  v0._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v0._object = (void *)0x80000001005ED8F0;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x202020202020200ALL;
  v2._object = (void *)0xEF3D6E696D202D20;
  String.append(_:)(v2);
  sub_1000C7644();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x20646C756F772820;
  v4._object = (void *)0xEB00000000206562;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0xD000000000000087;
  v6._object = (void *)0x80000001005ED940;
  String.append(_:)(v6);
  _s11EnvironmentVMa();
  _print_unlocked<A, B>(_:_:)();
  v7._object = (void *)0x80000001005ED9D0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000062;
  String.append(_:)(v7);
  _print_unlocked<A, B>(_:_:)();
  v8._uint64_t countAndFlagsBits = 0xD000000000000015;
  v8._object = (void *)0x80000001005EDA40;
  String.append(_:)(v8);
  _print_unlocked<A, B>(_:_:)();
  v9._object = (void *)0x80000001005EDA60;
  v9._uint64_t countAndFlagsBits = 0xD000000000000062;
  String.append(_:)(v9);
  _print_unlocked<A, B>(_:_:)();
  v10._uint64_t countAndFlagsBits = 0xD000000000000015;
  v10._object = (void *)0x80000001005EDA40;
  String.append(_:)(v10);
  _print_unlocked<A, B>(_:_:)();
  v11._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v11._object = (void *)0x80000001005EDAD0;
  String.append(_:)(v11);
  sub_1003848C8(0, (void *)0xE000000000000000);
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for DOCPeekedTrailingGridLayout()
{
  return &type metadata for DOCPeekedTrailingGridLayout;
}

uint64_t sub_100385170(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == enum case for DOCContentLayoutSizeCategory.regular(_:))
  {
    double v10 = 375.0;
    return v10 < a2;
  }
  if (v9 == enum case for DOCContentLayoutSizeCategory.large(_:))
  {
    double v10 = 450.0;
    return v10 < a2;
  }
  if (v9 == enum case for DOCContentLayoutSizeCategory.extraLarge(_:))
  {
    double v10 = 550.0;
    return v10 < a2;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

id sub_100385324()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode;
  if ((v0[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] & 1) == 0)
  {
    id v2 = [v0 popoverPresentationController];
    if (v2)
    {
      Swift::String v3 = v2;
      id v4 = [self defaultCenter];
      NSString v5 = String._bridgeToObjectiveC()();
      [v4 postNotificationName:v5 object:v3 userInfo:0];
    }
  }
  id result = [v0 view];
  if (result)
  {
    uint64_t v7 = result;
    int v8 = v0[v1];
    int v9 = self;
    double v10 = &selRef_clearColor;
    if (!v8) {
      double v10 = &selRef_systemBackgroundColor;
    }
    id v11 = [v9 *v10];
    [v7 setBackgroundColor:v11];

    uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController];
    uint64_t v13 = v0[v1];
    return [v12 setIsInfoInPopoverMode:v13];
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100385528()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v32.receiver = v0;
  v32.super_class = ObjectType;
  [super viewDidLoad];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v4 = result;
  NSString v5 = [self itemInfoNavigationRoot];
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v4 setAccessibilityIdentifier:v5];

  double v6 = *(void **)&v1[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController];
  [v1 addChildViewController:v6];
  id result = [v1 view];
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v7 = result;
  id result = [v6 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int v8 = result;
  [v7 addSubview:result];

  id result = [v6 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int v9 = result;
  id result = [v1 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  double v10 = result;
  [result bounds];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  [v9 setFrame:v12, v14, v16, v18];
  [v6 didMoveToParentViewController:v1];
  id result = [v6 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  [result setAutoresizingMask:18];

  id v20 = [*(id *)&v1[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] navigationItem];
  sub_100051D8C();
  id v21 = sub_1005147BC(2, (uint64_t)v1, (uint64_t)"doneButtonTapped:");
  [v20 setRightBarButtonItem:v21];

  [v1 preferredContentSize];
  if (v23 == 0.0 && v22 == 0.0)
  {
    [v6 preferredContentSize];
    id v24 = [v1 traitCollection];
    sub_100386144();
    double v26 = v25;
    double v28 = v27;

    id v29 = [v1 traitCollection];
    id v30 = [v29 userInterfaceIdiom];

    if (v30 == (id)6
      || (v31.receiver = v1, v31.super_class = ObjectType, objc_msgSendSuper2(&v31, "modalPresentationStyle") != (id)2))
    {
      [v1 setPreferredContentSize:v26, v28];
    }
  }
  return sub_100385324();
}

id sub_1003858E4(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v12.receiver = v1;
  v12.super_class = ObjectType;
  [super preferredContentSizeDidChangeForChildContentContainer:a1];
  [a1 preferredContentSize];
  double v5 = v4;
  double v7 = v6;
  id v8 = [v1 traitCollection];
  id v9 = [v8 userInterfaceIdiom];

  if (v9 == (id)6) {
    return [v1 setPreferredContentSize:v5, v7];
  }
  v11.receiver = v1;
  v11.super_class = ObjectType;
  id result = [super modalPresentationStyle];
  if (result != (id)2) {
    return [v1 setPreferredContentSize:v5, v7];
  }
  return result;
}

void sub_100385A2C(uint64_t a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  id v3 = [v1 traitCollection];
  id v4 = [v3 _presentationSemanticContext];

  int v5 = v4 == (id)3;
  int v6 = v1[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode];
  v1[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = v5;
  if (v5 != v6) {
    sub_100385324();
  }
}

void sub_100385C50(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  [super setModalPresentationStyle:a1];
  id v4 = [v1 traitCollection];
  id v5 = [v4 userInterfaceIdiom];

  if (v5 != (id)6)
  {
    v6.receiver = v1;
    v6.super_class = ObjectType;
    if (objc_msgSendSuper2(&v6, "modalPresentationStyle") == (id)2) {
      [v1 setPreferredContentSize:CGSizeMake(0.0, 0.0)];
    }
  }
}

void sub_100385D40()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController);
}

uint64_t type metadata accessor for DOCServiceInfoViewController()
{
  return self;
}

id sub_100385FD8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v5[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = a1;
  id v10 = objc_allocWithZone((Class)DOCItemInfoViewController);
  swift_unknownObjectRetain();
  id v11 = a1;
  objc_super v12 = v5;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v10 initWithNodes:isa configuration:v11 actionReporting:a2];

  swift_unknownObjectRelease();
  *(void *)&v12[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v14;
  id v15 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v14];
  *(void *)&v12[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v15;
  [v15 _setBuiltinTransitionStyle:1];
  if (a4)
  {
    id v16 = v14;
    [v16 displayTagView];
  }
  v18.receiver = v12;
  v18.super_class = ObjectType;
  return [super init];
}

uint64_t sub_100386144()
{
  uint64_t v0 = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  objc_super v6 = &v30[-v5];
  objc_super v7 = self;
  id v8 = [v7 mainScreen];
  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v32.origin.x = v10;
  v32.origin.y = v12;
  v32.size.width = v14;
  v32.size.height = v16;
  double Width = CGRectGetWidth(v32);
  id v18 = [v7 mainScreen];
  [v18 bounds];
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v33.origin.x = v20;
  v33.origin.y = v22;
  v33.size.width = v24;
  v33.size.height = v26;
  double Height = CGRectGetHeight(v33);
  if (Height >= Width) {
    double Height = Width;
  }
  double v31 = Height * 0.666666667;
  UITraitCollection.doc_preferredValidatedLayoutSizeCategory(_:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v6, v0);
  int v28 = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 88))(v3, v0);
  if (v28 == enum case for DOCContentLayoutSizeCategory.regular(_:)
    || v28 == enum case for DOCContentLayoutSizeCategory.large(_:)
    || v28 == enum case for DOCContentLayoutSizeCategory.extraLarge(_:))
  {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

id sub_100386430(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  id result = [super modalPresentationStyle];
  if (a1 == (void *)-1) {
    id v4 = result;
  }
  else {
    id v4 = a1;
  }
  int v5 = v4 == (id)7;
  int v6 = v1[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode];
  v1[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = v5;
  if (v6 != v5) {
    return sub_100385324();
  }
  return result;
}

void sub_1003864A0(void *a1)
{
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  if (swift_dynamicCastObjCClass())
  {
    sub_1000CBE70(&qword_10070A2E0);
    uint64_t v6 = qword_100704E60;
    id v7 = a1;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10009D098(v2, (uint64_t)qword_100707D90);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    double v9 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_getKeyPath();
    v10[0] = 0;
    v10[1] = 0;
    dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  }
}

uint64_t sub_100386648()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100386680()
{
  return sub_100271F30();
}

uint64_t sub_1003866A4(uint64_t a1)
{
  return sub_100385170(a1, *(double *)(v1 + 16));
}

void _sSo29DOCSplitBrowserViewControllerC5FilesE9didSelect_2atySo19DOCConcreteLocationC_AGSgtF_0(void *a1)
{
  if (qword_100704F60 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)sub_1000D370C((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess();
  off_10070A180 = v3;
  swift_bridgeObjectRelease();
  if ([a1 isFPV2])
  {
    id v4 = [v1 fullDocumentManagerViewController];
    id v5 = [v4 hierarchyController];

    sub_1000BCD84(a1, a1, (int)[v1 isCollapsed], 1, 0, 0, 0);
  }
  else
  {
    id v5 = [v1 sourceObserver];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = v1;
    aBlock[4] = sub_10038829C;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000704F8;
    aBlock[3] = &unk_1006A5888;
    id v7 = _Block_copy(aBlock);
    uint64_t v8 = a1;
    id v9 = v1;
    swift_release();
    [v5 retrieveAllSourcesCompletionBlock:v7];
    _Block_release(v7);
  }
}

void DOCSplitBrowserViewController.didSelect(_:at:wasAlreadySelected:onlyRevealIfColumnMode:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  id v9 = [v4 fullDocumentManagerViewController];
  [v9 didSelectItem:a1 atParentLocation:a2 wasAlreadySelected:a3 & 1 onlyRevealIfColumn:a4 & 1];
}

void sub_100386E24(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6 = a3;
  id v7 = a1;
  id v8 = [v7 fullDocumentManagerViewController];
  [v8 *a4:v6];
}

void sub_100387074(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = __chkstk_darwin(v10);
  double v13 = (char *)v37 - v12;
  id v48 = [v3 fullDocumentManagerViewController:v11];
  id v14 = [v3 fullDocumentManagerViewController];
  id v15 = [v14 delegate];

  if (v15)
  {
    uint64_t v47 = a1;
    id v49 = &OBJC_PROTOCOL___UIDocumentBrowserViewControllerPrivateDelegate;
    CGFloat v16 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v16)
    {
      swift_unknownObjectRetain();
      if (a2)
      {
        if ([v16 respondsToSelector:"documentBrowser:didPickImportedURLs:"])
        {
          if ([v16 respondsToSelector:"documentBrowser:didPickImportedURLs:"])
          {
            sub_1000CBE70((uint64_t *)&unk_1007087F0);
            unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
            uint64_t v18 = swift_allocObject();
            *(_OWORD *)(v18 + 16) = xmmword_1005A0030;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v18 + v17, v47, v6);
            swift_unknownObjectRetain();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v16 documentBrowser:v48 didPickImportedURLs:isa];
            swift_bridgeObjectRelease();

            swift_unknownObjectRelease_n();
            swift_unknownObjectRelease();

            return;
          }
          goto LABEL_18;
        }
LABEL_11:
        if ([v15 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"])
        {
          uint64_t v46 = (char *)[v48 documentManager];
          double v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
          uint64_t v40 = v7 + 16;
          double v41 = v21;
          v21(v13, v47, v6);
          uint64_t v45 = v16;
          uint64_t v22 = *(unsigned __int8 *)(v7 + 80);
          uint64_t v23 = (v22 + 16) & ~v22;
          v37[1] = v22 | 7;
          uint64_t v38 = v8 + 7;
          unint64_t v44 = (v8 + 7 + v23) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v43 = (char *)((v44 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v24 = (unint64_t)(v43 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v25 = swift_allocObject();
          uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
          v39(v25 + v23, v13, v6);
          *(void *)(v25 + v44) = v3;
          *(void *)&v43[v25] = v15;
          *(void *)(v25 + v24) = v48;
          uint64_t v26 = type metadata accessor for DOCHierarchyController(0);
          uint64_t v43 = *(char **)&v46[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
          unint64_t v44 = v26;
          uint64_t v42 = *(void **)&v46[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
          v41(v9, v47, v6);
          uint64_t v27 = (v22 + 32) & ~v22;
          unint64_t v28 = (v38 + v27) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = sub_100387BF8;
          *(void *)(v29 + 24) = v25;
          v39(v29 + v27, v9, v6);
          id v30 = v46;
          *(void *)(v29 + v28) = v46;
          *(void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = 1;
          swift_unknownObjectRetain();
          id v31 = v3;
          id v32 = v48;
          swift_retain();
          id v33 = v30;
          sub_100230898(v43, v42, 0, (uint64_t)sub_1003881B0, v29);
          swift_release();

          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        goto LABEL_17;
      }
    }
    else if (a2)
    {
      goto LABEL_11;
    }
    if ([v15 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"])
    {
      sub_1000CBE70((uint64_t *)&unk_1007087F0);
      unint64_t v34 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1005A0030;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v35 + v34, v47, v6);
      swift_unknownObjectRetain();
      Class v36 = Array._bridgeToObjectiveC()().super.isa;
      [v15 documentBrowser:v48 didPickDocumentsAtURLs:v36];

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();

LABEL_17:
      swift_unknownObjectRelease();
      return;
    }
LABEL_18:

    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  id v20 = v48;
}

void sub_100387610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  CGFloat v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unint64_t v17 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10059B760;
    URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
    uint64_t v20 = v19;
    *(void *)(v18 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v18 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v18 + 32) = v20;
    uint64_t v21 = _convertErrorToNSError(_:)();
    *(void *)(v18 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v18 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v18 + 72) = v21;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v22 = (id)_DocumentManagerBundle();
    if (v22)
    {
      uint64_t v23 = v22;
      v39._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v39._object = (void *)0x80000001005EDDD0;
      v24._object = (void *)0x80000001005EDDB0;
      v24._uint64_t countAndFlagsBits = 0xD000000000000015;
      v25._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v25._object = (void *)0xEB00000000656C62;
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v39);

      uint64_t v27 = (void *)_convertErrorToNSError(_:)();
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      DOCPresentAlertForErrorWithForceHandler();

      unint64_t v28 = v37;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1002827DC(a1, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1001939F8((uint64_t)v12);
      uint64_t v29 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1005A0030;
      URL._bridgeToObjectiveC()((NSURL *)&unk_1005A0000);
      uint64_t v32 = v31;
      *(void *)(v30 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
      *(void *)(v30 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
      *(void *)(v30 + 32) = v32;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      if (a5
        && ([a5 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"] & 1) != 0)
      {
        sub_1000CBE70((uint64_t *)&unk_1007087F0);
        unint64_t v33 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_1005A0030;
        (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v34 + v33, v16, v13);
        swift_unknownObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        [a5 documentBrowser:a6 didPickDocumentsAtURLs:isa];
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
}

uint64_t sub_100387B2C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v7 + 8, v5);
}

void sub_100387BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v7);
  uint64_t v10 = *(void **)(v2 + v8);
  uint64_t v11 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100387610(a1, a2, v2 + v6, v9, v10, v11);
}

void sub_100387CBC(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a2)
  {
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
    uint64_t v5 = _convertErrorToNSError(_:)();
    *(void *)(v4 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v4 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v4 + 32) = v5;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    id v21 = (id)static OS_os_log.default.getter();
  }
  else
  {
    id v8 = a3;
    uint64_t v9 = sub_1003882A4(a1, v8);

    if (v9)
    {
      self;
      uint64_t v10 = swift_dynamicCastObjCClass();
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v11;
        *(void *)(v12 + 24) = a4;
        aBlock[4] = sub_100388470;
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_1006A58D8;
        uint64_t v13 = _Block_copy(aBlock);
        id v14 = v9;
        id v15 = a4;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v13);

        return;
      }
    }
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    id v17 = [v8 sourceIdentifier];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100073F48();
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v20;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    id v21 = (id)static OS_os_log.default.getter();
  }
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

void sub_100387FA0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = [a2 configuration];
  uint64_t v5 = (objc_class *)type metadata accessor for DOCPickerViewController();
  unint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController] = 0;
  *(void *)&v6[OBJC_IVAR____TtC5Files23DOCPickerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC5Files23DOCPickerViewController_source] = v3;
  *(void *)&v6[OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration] = v4;
  v8.receiver = v6;
  v8.super_class = v5;
  unint64_t v7 = (char *)[super initWithNibName:0 bundle:0];
  *(void *)&v7[OBJC_IVAR____TtC5Files23DOCPickerViewController_delegate + 8] = &off_1006A57F0;
  swift_unknownObjectWeakAssign();
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationFormSheet);
  [a2 presentViewController:v7 animated:1 completion:0];
}

uint64_t sub_1003880C0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_1003881B0(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1004CA96C(a1, v6, v7, v1 + v4, v8, v9);
}

uint64_t sub_10038825C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10038829C(unint64_t a1, uint64_t a2)
{
  sub_100387CBC(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

void *sub_1003882A4(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      unint64_t v18 = v2;
      unint64_t v19 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v5 = v4 - 4;
        if (v19)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(v2 + 8 * v4);
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v8 = v6;
        id v9 = [v6 identifier];
        id v10 = [a2 sourceIdentifier];
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;
        if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
        {

          swift_bridgeObjectRelease_n();
LABEL_17:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_17;
        }

        ++v4;
        unint64_t v2 = v18;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100388470()
{
  sub_100387FA0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t UIUserInterfaceIdiom.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 + 1;
  unint64_t result = 0x656E6F6870;
  switch(v1)
  {
    case 0:
      unint64_t result = 0x6669636570736E75;
      break;
    case 1:
      return result;
    case 2:
      unint64_t result = 6578544;
      break;
    case 3:
      unint64_t result = 30324;
      break;
    case 4:
      unint64_t result = 0x79616C70726163;
      break;
    case 6:
      unint64_t result = 6513005;
      break;
    case 7:
      unint64_t result = 0x6E6F69736976;
      break;
    default:
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      v4._uint64_t countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      String.append(_:)(v4);
      unint64_t result = 0xD000000000000015;
      break;
  }
  return result;
}

unint64_t sub_1003885FC()
{
  return UIUserInterfaceIdiom.description.getter(*v0);
}

void *sub_100388604(uint64_t a1, uint64_t *a2, int *a3)
{
  Swift::String v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *Swift::String v4 = *a2;
    Swift::String v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    long long v8 = *(_OWORD *)(a2 + 7);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v9 = a3[10];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(_OWORD *)(a1 + 56) = v8;
    uint64_t v12 = type metadata accessor for DOCContentLayoutSizeCategory();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[11];
    uint64_t v14 = a3[12];
    id v15 = (char *)v4 + v13;
    uint64_t v16 = (uint64_t)a2 + v13;
    *(void *)id v15 = *(void *)v16;
    v15[8] = *(unsigned char *)(v16 + 8);
    *(void *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
  }
  return v4;
}

uint64_t sub_100388724(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 40);
  uint64_t v3 = type metadata accessor for DOCContentLayoutSizeCategory();
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_10038878C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = a3[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = type metadata accessor for DOCContentLayoutSizeCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_10038885C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = a3[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for DOCContentLayoutSizeCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100388958(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = a3[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = type metadata accessor for DOCContentLayoutSizeCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_100388A28(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = a3[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 64) = v7;
  uint64_t v11 = type metadata accessor for DOCContentLayoutSizeCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_100388B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100388B14);
}

uint64_t sub_100388B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44) + 8);
    if (v12 >= 2) {
      return v12 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100388BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100388BEC);
}

uint64_t sub_100388BEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 40);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 44) + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_100388CB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    uint64_t v10 = swift_allocError();
    *uint64_t v11 = a3;
    id v12 = a3;
    return _swift_continuation_throwingResumeWithError(v9, v10);
  }
  else
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v5);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100388E0C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1000CBE70(&qword_100707AC0);
  v3[5] = swift_task_alloc();
  return _swift_task_switch(sub_100388EA4, 0, 0);
}

uint64_t sub_100388EA4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSuiteName:v2];

  if (v3)
  {
    [v3 setBool:0 forKey:DOCUserDefaultsKeyIsSharingFolderWithAdultFamilyMember];
  }
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  static TaskPriority.background.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = 0;
  v9[3] = 0;
  _OWORD v9[4] = v8;
  v9[5] = v6;
  void v9[6] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10038A420(v4, (uint64_t)&unk_100712908, (uint64_t)v9);
  swift_release();
  sub_1000CBBA4(v4, &qword_100707AC0);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100389074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[35] = a5;
  v6[36] = a6;
  v6[34] = a4;
  uint64_t v7 = type metadata accessor for Logger();
  v6[37] = v7;
  v6[38] = *(void *)(v7 - 8);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = sub_1000CBE70(&qword_100712910);
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v6[45] = v8;
  v6[46] = *(void *)(v8 - 8);
  v6[47] = swift_task_alloc();
  v6[48] = swift_task_alloc();
  return _swift_task_switch(sub_100389204, 0, 0);
}

uint64_t sub_100389204()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[49] = Strong;
  if (!Strong) {
    goto LABEL_17;
  }
  unint64_t v2 = v0[35];
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[50] = v3;
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  v0[50] = v10;
  if (!v10)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_release();
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
LABEL_4:
  unint64_t v4 = 0;
  while (1)
  {
    uint64_t v5 = v0[35];
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v4 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_21;
      }
      uint64_t v6 = *(void **)(v5 + 8 * v4 + 32);
      swift_unknownObjectRetain();
    }
    v0[51] = v6;
    v0[52] = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    if ([v6 isFolder]
      && ([v6 isSharedByCurrentUser] & 1) != 0)
    {
      break;
    }
    swift_unknownObjectRelease();
    unint64_t v4 = v0[52];
    if (v4 == v0[50]) {
      goto LABEL_16;
    }
  }
  uint64_t v7 = v0[47];
  v0[10] = v0;
  v0[15] = v7;
  v0[11] = sub_1003894A8;
  uint64_t v8 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100388CB0;
  v0[21] = &unk_1006A59D0;
  v0[22] = v8;
  [v6 fetchURL:v0 + 18];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_1003894A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 424) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    unint64_t v2 = sub_10038A118;
  }
  else
  {
    unint64_t v2 = sub_1003895C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003895C0()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  uint64_t v5 = v0[43];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v0[54] = v6;
  v0[55] = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = self;
  URL._bridgeToObjectiveC()(v8);
  uint64_t v10 = v9;
  v0[56] = v9;
  v0[2] = v0;
  v0[7] = v5;
  v0[3] = sub_100389714;
  uint64_t v11 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_10038A2E8;
  v0[26] = &unk_1006A59E8;
  v0[27] = v11;
  [v7 existingShareForFileOrFolderURL:v10 completionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100389714()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 456) = v2;
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_10038A1F0;
  }
  else
  {
    *(_DWORD *)(v1 + 512) = *(_DWORD *)(*(void *)(v1 + 328) + 48);
    uint64_t v3 = sub_100389838;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100389838()
{
  uint64_t v1 = *(int *)(v0 + 512);
  uint64_t v47 = *(void **)(v0 + 448);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 336);
  v2(v7, v5, v3);
  uint64_t v9 = *(void **)(v5 + v1);
  *(void *)(v0 + 464) = v9;
  uint64_t v10 = *(int *)(v8 + 48);
  v2(v6, v7, v3);
  *(void *)(v6 + v10) = v9;
  unint64_t v11 = v9;

  uint64_t v12 = *(int *)(v8 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v6, v3);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v7 + v12) = v11;
  *(void *)(v0 + 472) = v13;
  *(void *)(v0 + 480) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v7, v3);
  id v14 = [(id)v11 participants];
  sub_10038A85C();
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 488) = v15;

  if (v15 >> 62) {
    goto LABEL_42;
  }
  uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17)
  {
    while (1)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
LABEL_45:
        unint64_t v18 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return _swift_continuation_await(v16);
        }
        unint64_t v18 = (objc_class *)*(id *)(v15 + 32);
      }
      unint64_t v19 = v18;
      sub_10038A89C(v18, *(void *)(v0 + 288));
      if (v20) {
        break;
      }

      if (v17 != 1)
      {
        uint64_t v26 = 5;
        while (1)
        {
          unint64_t v27 = v26 - 4;
          if ((v15 & 0xC000000000000001) != 0)
          {
            unint64_t v28 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v27 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_45;
            }
            unint64_t v28 = (objc_class *)*(id *)(v15 + 8 * v26);
          }
          unint64_t v19 = v28;
          BOOL v29 = __OFADD__(v27, 1);
          uint64_t v30 = v26 - 3;
          if (v29) {
            break;
          }
          sub_10038A89C(v28, *(void *)(v0 + 288));
          if (v31) {
            goto LABEL_7;
          }

          ++v26;
          if (v30 == v17) {
            goto LABEL_21;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v16 = swift_bridgeObjectRelease();
        if (v17) {
          continue;
        }
      }
      goto LABEL_21;
    }
LABEL_7:
    *(void *)(v0 + 496) = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v21 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 initWithSuiteName:v22];

    if (v23)
    {
      [v23 setBool:1 forKey:DOCUserDefaultsKeyIsSharingFolderWithAdultFamilyMember];
    }
    type metadata accessor for MainActor();
    *(void *)(v0 + 504) = static MainActor.shared.getter();
    uint64_t v25 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100389E50, v25, v24);
  }
  else
  {
LABEL_21:
    uint64_t v32 = v13;
    swift_bridgeObjectRelease();
    static Logger.DocumentManager.getter();
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled((os_log_t)v15, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, v33, "Files Family Tip No shared folder with family member found", v34, 2u);
      swift_slowDealloc();
    }
    uint64_t v35 = *(void *)(v0 + 384);
    uint64_t v37 = *(void *)(v0 + 352);
    uint64_t v36 = *(void *)(v0 + 360);
    uint64_t v38 = *(void *)(v0 + 320);
    uint64_t v39 = *(void *)(v0 + 296);
    uint64_t v40 = *(void *)(v0 + 304);
    swift_unknownObjectRelease();

    double v41 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    uint64_t v13 = (void (*)(uint64_t, uint64_t))(v40 + 8);
    v41(v38, v39);
    sub_1000CBBA4(v37, &qword_100712910);
    v32(v35, v36);
    unint64_t v11 = *(void *)(v0 + 416);
    if (v11 == *(void *)(v0 + 400))
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
      return v42();
    }
    else
    {
      while (1)
      {
        uint64_t v43 = *(void *)(v0 + 280);
        if ((v43 & 0xC000000000000001) != 0)
        {
          unint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v11 >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_41;
          }
          unint64_t v15 = *(void *)(v43 + 8 * v11 + 32);
          swift_unknownObjectRetain();
        }
        *(void *)(v0 + 408) = v15;
        *(void *)(v0 + 416) = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          goto LABEL_40;
        }
        if ([(id)v15 isFolder]
          && ([(id)v15 isSharedByCurrentUser] & 1) != 0)
        {
          break;
        }
        swift_unknownObjectRelease();
        unint64_t v11 = *(void *)(v0 + 416);
        if (v11 == *(void *)(v0 + 400)) {
          goto LABEL_24;
        }
      }
      uint64_t v44 = *(void *)(v0 + 376);
      *(void *)(v0 + 80) = v0;
      *(void *)(v0 + 120) = v44;
      *(void *)(v0 + 88) = sub_1003894A8;
      uint64_t v45 = swift_continuation_init();
      *(void *)(v0 + 144) = _NSConcreteStackBlock;
      *(void *)(v0 + 152) = 0x40000000;
      *(void *)(v0 + 160) = sub_100388CB0;
      *(void *)(v0 + 168) = &unk_1006A59D0;
      *(void *)(v0 + 176) = v45;
      [(id)v15 fetchURL:v0 + 144];
      uint64_t v16 = v0 + 80;
      return _swift_continuation_await(v16);
    }
  }
}

uint64_t sub_100389E50()
{
  swift_release();
  if (qword_100705218 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000CBE70(&qword_10070AB30);
  sub_10009D098(v1, (uint64_t)qword_100716CB8);
  *(unsigned char *)(v0 + 516) = 1;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100389F68, 0, 0);
}

uint64_t sub_100389F68()
{
  static Logger.DocumentManager.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Files Family Tip Found shared folder with family member", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void **)(v0 + 464);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  uint64_t v12 = *(void *)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 296);

  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  sub_1000CBBA4(v6, &qword_100712910);
  v13(v12, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10038A118()
{
  swift_willThrow();
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10038A1F0()
{
  uint64_t v1 = (void *)v0[56];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[46];
  swift_willThrow();
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10038A2E8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_100712910);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    uint64_t v11 = swift_allocError();
    void *v12 = a4;
    id v13 = a4;
    return _swift_continuation_throwingResumeWithError(v10, v11);
  }
  else
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)&v9[*(int *)(v7 + 48)] = a3;
    uint64_t v14 = *(void *)(*(void *)(v10 + 64) + 40);
    id v15 = a3;
    sub_10038B06C((uint64_t)v9, v14);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10038A420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B5208(a1, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1000CBBA4((uint64_t)v7, &qword_100707AC0);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    void v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_10038A5E8()
{
  swift_willThrow();
  swift_errorRelease();
  static Logger.DocumentManager.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Files Family Tip Failed to fetch family", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

uint64_t sub_10038A70C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038A744()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10038A794(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CB70;
  return sub_100389074(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_10038A85C()
{
  unint64_t result = qword_100712918;
  if (!qword_100712918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100712918);
  }
  return result;
}

void sub_10038A89C(void *a1, unint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 >> 62) {
    goto LABEL_92;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_81:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_3:
  unint64_t v5 = 0;
  unint64_t v6 = v2 & 0xC000000000000001;
  uint64_t v70 = v2 + 32;
  uint64_t v71 = v2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v7 = &selRef_prepareForReuse;
  id v74 = a1;
  uint64_t v75 = v2;
  unint64_t v72 = v2 & 0xC000000000000001;
  uint64_t v73 = v4;
  while (1)
  {
    if (v6)
    {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v5 >= *(void *)(v71 + 16)) {
        goto LABEL_95;
      }
      id v8 = *(id *)(v70 + 8 * v5);
    }
    uint64_t v9 = v8;
    BOOL v10 = __OFADD__(v5, 1);
    unint64_t v11 = v5 + 1;
    if (v10) {
      goto LABEL_91;
    }
    unint64_t v76 = v11;
    id v12 = [v8 appleID];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    id v17 = [a1 v7[334] v70];
    id v18 = [v17 lookupInfo];

    if (v18 && (id v19 = [v18 emailAddress], v18, v19))
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      if (!v16) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
      if (!v16)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    if (v14 == v20 && v16 == v22)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_81;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_80;
    }
LABEL_20:
    id v24 = [v9 contact];
    if (!v24) {
      goto LABEL_86;
    }
    uint64_t v25 = v24;
    id v26 = [a1 v7[334]];
    id v27 = [v26 lookupInfo];

    id v79 = v27;
    if (!v27)
    {

LABEL_86:
      goto LABEL_81;
    }
    id v28 = [v25 emailAddresses];
    sub_1000CBE70(&qword_100712928);
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v77 = v9;
    id v78 = v25;
    if (!v30)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_100059E2C(0, v30 & ~(v30 >> 63), 0);
    if (v30 < 0) {
      break;
    }
    uint64_t v31 = 0;
    do
    {
      if ((v29 & 0xC000000000000001) != 0) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v32 = *(id *)(v29 + 8 * v31 + 32);
      }
      os_log_type_t v33 = v32;
      id v34 = [v32 value];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v36;

      unint64_t v39 = _swiftEmptyArrayStorage[2];
      unint64_t v38 = _swiftEmptyArrayStorage[3];
      if (v39 >= v38 >> 1) {
        sub_100059E2C(v38 > 1, v39 + 1, 1);
      }
      ++v31;
      _swiftEmptyArrayStorage[2] = v39 + 1;
      uint64_t v40 = &_swiftEmptyArrayStorage[2 * v39];
      v40[4] = v35;
      v40[5] = v37;
    }
    while (v30 != v31);
    swift_bridgeObjectRelease();
    uint64_t v9 = v77;
LABEL_35:
    id v41 = [v79 emailAddress];
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v45 = v44;

      uint64_t v46 = _swiftEmptyArrayStorage[2];
      if (!v46) {
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v43 = 0;
      unint64_t v45 = 0xE000000000000000;
      uint64_t v46 = _swiftEmptyArrayStorage[2];
      if (!v46) {
        goto LABEL_51;
      }
    }
    if (_swiftEmptyArrayStorage[4] == v43 && _swiftEmptyArrayStorage[5] == v45
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      goto LABEL_79;
    }
    if (v46 != 1)
    {
      a1 = &_swiftEmptyArrayStorage[7];
      uint64_t v47 = 1;
      while (1)
      {
        uint64_t v48 = v47 + 1;
        if (__OFADD__(v47, 1)) {
          goto LABEL_90;
        }
        BOOL v49 = *(a1 - 1) == v43 && *a1 == v45;
        if (v49 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        a1 += 2;
        ++v47;
        if (v48 == v46) {
          goto LABEL_51;
        }
      }
LABEL_79:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_80:
      goto LABEL_81;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v50 = [v25 phoneNumbers];
    unint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v52) {
        goto LABEL_77;
      }
LABEL_53:
      uint64_t v2 = 4;
      while (2)
      {
        if ((v51 & 0xC000000000000001) != 0) {
          id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v53 = *(id *)(v51 + 8 * v2);
        }
        id v54 = v53;
        a1 = (void *)(v2 - 3);
        if (__OFADD__(v2 - 4, 1))
        {
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          swift_bridgeObjectRetain();
          uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
          if (!v4) {
            goto LABEL_81;
          }
          goto LABEL_3;
        }
        id v55 = [v53 value];
        id v56 = [v55 fullyQualifiedDigits];

        if (v56)
        {
          uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v59 = v58;
        }
        else
        {
          uint64_t v57 = 0;
          uint64_t v59 = 0;
        }
        id v60 = [v79 phoneNumber];
        if (v60)
        {
          uint64_t v61 = v60;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        id v62 = objc_allocWithZone((Class)CNPhoneNumber);
        NSString v63 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v64 = [v62 initWithStringValue:v63];

        id v65 = [v64 fullyQualifiedDigits];
        if (v65)
        {
          uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v68 = v67;

          if (v59)
          {
            if (v68)
            {
              if (v57 == v66 && v59 == v68)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_83:

LABEL_84:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                return;
              }
              char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if (v69) {
                goto LABEL_84;
              }
              goto LABEL_56;
            }
LABEL_74:
          }
          else
          {

            if (!v68) {
              goto LABEL_84;
            }
          }
          swift_bridgeObjectRelease();
LABEL_56:
          ++v2;
          if (a1 == (void *)v52) {
            goto LABEL_77;
          }
          continue;
        }
        break;
      }
      if (!v59) {
        goto LABEL_83;
      }
      goto LABEL_74;
    }
    uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v52) {
      goto LABEL_53;
    }
LABEL_77:

    swift_bridgeObjectRelease();
    a1 = v74;
    uint64_t v2 = v75;
    unint64_t v5 = v76;
    unint64_t v6 = v72;
    uint64_t v7 = &selRef_prepareForReuse;
    if (v76 == v73) {
      goto LABEL_81;
    }
  }
  __break(1u);
LABEL_95:
  __break(1u);
}

uint64_t sub_10038B06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100712910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_10038B0D4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_beginAccess();
  uint64_t v2 = *(char **)(v1 + 24);
  if (v2)
  {
    swift_retain();
    uint64_t v3 = v2;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 16);
    unint64_t v5 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorButtonItem(0));
    swift_retain();
    swift_retain();
    unint64_t v6 = sub_10038B72C(65537, v4, v5);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakAssign();

    *(void *)(v1 + 24) = v6;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A04F0;
    *(void *)(v8 + 32) = v6;
    specialized Array._endMutation()();
    uint64_t v3 = v6;
    uint64_t v9 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    uint64_t v2 = 0;
    *(void *)(v1 + 16) = v9;
  }
  swift_endAccess();
  BOOL v10 = v2;
  swift_release();
  return v3;
}

void sub_10038B230()
{
  id v1 = *(id *)(v0 + 24);
}

uint64_t sub_10038B26C()
{
  id v1 = *(void **)(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_10038B2B0()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100712AD8);
  static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)();
  uint64_t v4 = DOCAssociatedObjectStorageKey.rawPointer.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100712930 = v4;
  return result;
}

uint64_t sub_10038B3AC()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCSharedOverlayContent()
{
  return self;
}

uint64_t type metadata accessor for DOCSharedOverlayContent.BBIStorage()
{
  return self;
}

uint64_t sub_10038B43C()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for DOCDSFileServiceConnection()) init];
  uint64_t v1 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCFileOperationsManager());
  id v2 = v0;
  id v3 = sub_1002FB26C((uint64_t)v2, v1);
  type metadata accessor for DOCFileOperationCollectionSource();
  *(void *)(swift_allocObject() + 48) = v3;
  uint64_t v4 = (char *)v3;
  unint64_t v5 = sub_1002FB41C((uint64_t)variable initialization expression of DOCBrowserContainedViewController.uipDocLandingBackgroundAllowed, 0);
  uint64_t v6 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers;
  uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers];
  swift_beginAccess();
  unint64_t v8 = *(void *)(v7 + 16);
  uint64_t v20 = _swiftEmptyArrayStorage;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = v6;
    if (v9) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    id v12 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_retain();
  uint64_t v19 = v6;
  if (!v9) {
    goto LABEL_14;
  }
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return result;
  }
  id v18 = v2;
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  id v12 = v20;
  id v2 = v18;
LABEL_15:
  *(void *)(v7 + 16) = v12;
  uint64_t v13 = swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v7 + 16);
  __chkstk_darwin(v13);
  _OWORD v17[2] = v5;
  swift_bridgeObjectRetain();
  char v15 = sub_1001B5048((uint64_t (*)(uint64_t *))sub_1001146F4, (uint64_t)v17, v14);
  swift_release();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = *(void *)&v4[v19];
    swift_retain();
    sub_1002FB058((uint64_t)v5, v16);
    swift_release();
    sub_100407238();
    sub_100406674();
  }

  uint64_t result = swift_release();
  qword_100737408 = (uint64_t)v5;
  return result;
}

char *sub_10038B72C(int a1, uint64_t a2, unsigned char *a3)
{
  swift_unknownObjectWeakInit();
  a3[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_isActivePopoverSource] = 0;
  uint64_t v6 = OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_containerView;
  type metadata accessor for DOCProgressCollectionIndicatorButtonItem.ProgressItemContainerView();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v8 = a3;
  *(void *)&a3[v6] = [v7 init];
  *(void *)&v8[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint] = 0;
  uint64_t v9 = (int64x2_t *)&v8[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_metrics];
  *uint64_t v9 = (int64x2_t)xmmword_1005A8DE0;
  v9[1] = vdupq_n_s64(0x4035800000000000uLL);
  BOOL v10 = &v8[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_inFlightVisibilityChange];
  uint64_t v11 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  id v12 = (uint64_t *)&v8[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource];
  uint64_t *v12 = a2;
  v12[1] = (uint64_t)&protocol witness table for DOCFilterableOperationProgressCollectionSource<A>;
  uint64_t v13 = &v8[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration];
  LOBYTE(v10) = a1 & 1;
  *uint64_t v13 = a1 & 1;
  v13[1] = BYTE1(a1) & 1;
  v13[2] = BYTE2(a1) & 1;
  unint64_t v14 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorView());
  swift_retain();
  *(void *)&v8[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView] = sub_1004BD70C((char)v10, a2, v14, 0.3);

  v38.receiver = v8;
  v38.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorButtonItem(0);
  id v15 = [super init];
  [v15 setHidden:1];
  id v16 = v15;
  uint64_t result = (char *)(id)_DocumentManagerBundle();
  if (result)
  {
    id v18 = result;
    v40._uint64_t countAndFlagsBits = 0xD000000000000040;
    v40._object = (void *)0x80000001005EE050;
    v19._object = (void *)0x80000001005EE030;
    v19._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v20._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v20._object = (void *)0xEB00000000656C62;
    v21._uint64_t countAndFlagsBits = 0x73736572676F7250;
    v21._object = (void *)0xE800000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v40);

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v16 setTitle:v22];

    sub_10038BBF4();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    UIMenuElementSize v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1005A04F0;
    id v24 = self;
    UIMenuElementSize v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = (UIMenuElementSize)sub_10038BC6C;
    aBlock[5] = v25;
    aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (UIMenuElementSize)sub_100514064;
    aBlock[3] = (UIMenuElementSize)&unk_1006A5A28;
    id v26 = _Block_copy(aBlock);
    id v27 = (char *)v16;
    swift_release();
    id v28 = [v24 elementWithUncachedProvider:v26];
    _Block_release(v26);
    *(void *)(v23 + 32) = v28;
    aBlock[0] = v23;
    specialized Array._endMutation()();
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v39.value.super.Class isa = 0;
    v39.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v29, (Swift::String_optional)0, v39, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v36).super.super.isa;
    [v27 setMenuRepresentation:isa];

    uint64_t v31 = *(void *)&v27[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v33 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v34 = *(void (**)(char *, void (*)(), uint64_t, uint64_t, uint64_t))(v31 + 16);
    uint64_t v35 = v27;
    swift_unknownObjectRetain();
    swift_retain();
    v34(v35, sub_10038BC74, v33, ObjectType, v31);
    swift_unknownObjectRelease();

    swift_release_n();
    sub_1004ADC84();

    return v35;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10038BBF4()
{
  unint64_t result = qword_100708B50;
  if (!qword_100708B50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100708B50);
  }
  return result;
}

uint64_t sub_10038BC34()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_10038BC6C(void (*a1)(void *))
{
  return sub_1004AD2C8(a1);
}

void sub_10038BC74()
{
}

void *sub_10038BC7C(id object, void *a2)
{
  if (qword_1007050F0 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(object, (const void *)qword_100712930))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1000516C4((uint64_t)v10, (uint64_t)v11);
  if (v12)
  {
    type metadata accessor for DOCSharedOverlayContent();
    if (swift_dynamicCast()) {
      return (void *)v9;
    }
  }
  else
  {
    sub_10006273C((uint64_t)v11);
  }
  type metadata accessor for DOCSharedOverlayContent();
  uint64_t v4 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DOCSharedOverlayContent.BBIStorage();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  v4[4] = v5;
  uint64_t v6 = qword_1007050F8;
  id v7 = a2;
  if (v6 != -1) {
    swift_once();
  }
  v4[2] = qword_100737408;
  swift_unknownObjectWeakAssign();
  swift_retain();

  objc_setAssociatedObject(object, (const void *)qword_100712930, v4, (void *)0x301);
  return v4;
}

uint64_t sub_10038BE2C(uint64_t a1)
{
  uint64_t v12 = a1;
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  unsigned int v10 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v9 = *(void (**)(char *))(v3 + 104);
  v9(v5);
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v7[1] = sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)(v1 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v1 + 32) = [self hashTableWithOptions:517];
  *(unsigned char *)(v1 + 40) = 0;
  ((void (*)(char *, void, uint64_t))v9)(v5, v10, v11);
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)(v1 + 48) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(void *)(v1 + 16) = v12;
  return v1;
}

id *sub_10038C178()
{
  sub_10038CB18();

  sub_1000CBBA4((uint64_t)(v0 + 7), (uint64_t *)&unk_100705D60);
  sub_1000CBBA4((uint64_t)(v0 + 11), (uint64_t *)&unk_100705D60);

  return v0;
}

uint64_t sub_10038C1FC()
{
  sub_10038C178();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCFileProviderSyncStateObserver()
{
  return self;
}

uint64_t sub_10038C254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = [*(id *)(v1 + 16) storageURLs];
  uint64_t v5 = type metadata accessor for URL();
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRelease();
  if (DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)())
  {
    id v6 = [*(id *)(v2 + 16) storageURLs];
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t v9 = v8;
    if (*(void *)(v7 + 16))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(a1, v7 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v5);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v5);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v5);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    return v10(a1, 1, 1, v5);
  }
}

uint64_t sub_10038C424(uint64_t a1)
{
  _StringGuts.grow(_:)(61);
  v2._object = (void *)0x80000001005EE220;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v2);
  id v3 = [*(id *)(a1 + 16) description];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = v5;

  v7._uint64_t countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v8._object = (void *)0x80000001005EE240;
  String.append(_:)(v8);
  return 0;
}

uint64_t sub_10038C504(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [*(id *)(a2 + 32) addObject:result];
    if ((*(unsigned char *)(a2 + 40) & 1) == 0)
    {
      *(unsigned char *)(a2 + 40) = 1;
      sub_10038CAF8();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10038C584(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [*(id *)(a2 + 32) removeObject:result];
    if (*(unsigned char *)(a2 + 40) == 1 && ![*(id *)(a2 + 32) count])
    {
      sub_10038CB18();
      uint64_t result = swift_unknownObjectRelease();
      *(unsigned char *)(a2 + 40) = 0;
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10038C624(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 24);
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  void v14[3] = a1;
  void v14[4] = a2;
  aBlock[4] = sub_10038F130;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006A5B90;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_10038C8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [*(id *)(a1 + 32) allObjects];
  sub_1000CBE70(&qword_100712D48);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      if (v7 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v8 = 0;
        do
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v9 = *(void *)(v6 + 8 * v8 + 32);
            swift_unknownObjectRetain();
          }
          ++v8;
          uint64_t v10 = (void *)swift_allocObject();
          _OWORD v10[2] = a2;
          v10[3] = a3;
          v10[4] = v9;
          v12[4] = sub_1000D4A60;
          v12[5] = v10;
          v12[0] = _NSConcreteStackBlock;
          v12[1] = 1107296256;
          _OWORD v12[2] = sub_1000666D8;
          v12[3] = &unk_1006A5BE0;
          uint64_t v11 = _Block_copy(v12);
          swift_retain();
          swift_unknownObjectRetain();
          swift_release();
          DOCRunInMainThread();
          _Block_release(v11);
          swift_unknownObjectRelease();
        }
        while (v7 != v8);
        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_10038CAF8()
{
  return sub_10038CB38((uint64_t)sub_10038F0AC, (uint64_t)&unk_1006A5B40);
}

uint64_t sub_10038CB18()
{
  return sub_10038CB38((uint64_t)sub_10038F068, (uint64_t)&unk_1006A5B18);
}

uint64_t sub_10038CB38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v2 + 48);
  aBlock[4] = a1;
  uint64_t v18 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000666D8;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v12;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v16[0]);
  return swift_release();
}

void sub_10038CDC0(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  if ([*(id *)(a1 + 16) isMainiCloudDriveDomain]) {
    a2();
  }
  id v6 = *(id *)(a1 + 16);
  if ([v6 isiCloudDriveProvider])
  {
  }
  else
  {
    unsigned __int8 v7 = [v6 isUsingFPFS];

    if ((v7 & 1) == 0) {
      return;
    }
  }
  a3();
}

uint64_t sub_10038CE54(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 isDownloadingOperation])
  {
    uint64_t v5 = (void **)(v1 + 120);
    uint64_t v4 = *(void **)(v1 + 120);
    if (v4)
    {
      sub_10009E6C4(0, &qword_10070EB70);
      id v6 = a1;
      id v7 = v4;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        char v9 = 1;
LABEL_8:
        sub_10038EB6C(a1, v9, 0);
        id v15 = *v5;
        *uint64_t v5 = 0;

        return 1;
      }
    }
  }
  uint64_t result = (uint64_t)[a1 isUploadingOperation];
  if (!result) {
    return result;
  }
  uint64_t v5 = (void **)(v2 + 128);
  uint64_t v11 = *(void **)(v2 + 128);
  if (v11)
  {
    sub_10009E6C4(0, &qword_10070EB70);
    id v12 = a1;
    id v13 = v11;
    char v14 = static NSObject.== infix(_:_:)();

    char v9 = 0;
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_10038CF8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.FileProviderSyncState.getter();
  swift_retain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    objc_super v38 = v4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = v5;
    id v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    _OWORD v35[2] = v17;
    uint64_t v39 = v6;
    *(_DWORD *)id v16 = 136315138;
    aBlock[0] = v17;
    v35[1] = v16 + 4;
    id v18 = [*(id *)(v1 + 16) domainFullDisplayName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v10;
    uint64_t v37 = v9;
    Swift::String v20 = v8;
    uint64_t v21 = v1;
    uint64_t v22 = v19;
    unint64_t v24 = v23;

    uint64_t v4 = v38;
    uint64_t v25 = v22;
    uint64_t v1 = v21;
    char v8 = v20;
    v41[0] = sub_10009B0E4(v25, v24, aBlock);
    uint64_t v6 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Starting observation of %s progress updates.", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v40;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_10038C254((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id v27 = self;
  URL._bridgeToObjectiveC()(v28);
  uint64_t v30 = v29;
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_10038EFE0;
  *(void *)(v32 + 24) = v31;
  aBlock[4] = (uint64_t)sub_1001B3900;
  void aBlock[5] = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1004A5940;
  aBlock[3] = (uint64_t)&unk_1006A5AC8;
  uint64_t v33 = _Block_copy(aBlock);
  swift_release();
  id v34 = [v27 addSubscriberForFileURL:v30 withPublishingHandler:v33];
  _Block_release(v33);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000516C4((uint64_t)aBlock, (uint64_t)v41);
  swift_beginAccess();
  sub_1000D225C((uint64_t)v41, v1 + 88);
  return swift_endAccess();
}

uint64_t (*sub_10038D490(void *a1))()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v3 = DOCSplitBrowserViewController.didCommitPreview(of:);
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (sub_10038D95C(a1))
    {
      if ([a1 isDownloadingOperation])
      {
        sub_10038EB6C(a1, 1, 1);
        uint64_t v5 = *(void **)(v4 + 120);
        *(void *)(v4 + 120) = a1;
      }
      else
      {
        if (![a1 isUploadingOperation])
        {
LABEL_11:
          uint64_t v7 = swift_allocObject();
          *(void *)(v7 + 16) = v4;
          *(void *)(v7 + 24) = a1;
          id v8 = a1;
          return sub_10038F060;
        }
        sub_10038EB6C(a1, 0, 1);
        uint64_t v5 = *(void **)(v4 + 128);
        *(void *)(v4 + 128) = a1;
      }
      id v6 = a1;

      if (*(unsigned char *)(v4 + 40) == 1) {
        sub_10038C624((uint64_t)sub_10038D5F0, 0);
      }
      goto LABEL_11;
    }
    swift_release();
    return (uint64_t (*)())DOCSplitBrowserViewController.didCommitPreview(of:);
  }
  return (uint64_t (*)())v3;
}

id sub_10038D5F0(void *a1)
{
  return [a1 didUpdateSyncProgress];
}

uint64_t sub_10038D5FC(uint64_t a1, void *a2)
{
  uint64_t result = sub_10038CE54(a2);
  if ((result & 1) != 0 && *(unsigned char *)(a1 + 40) == 1) {
    return sub_10038C624((uint64_t)sub_10038F184, 0);
  }
  return result;
}

uint64_t sub_10038D650()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.FileProviderSyncState.getter();
  swift_retain_n();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v2;
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    void v17[2] = v9;
    *(_DWORD *)id v8 = 136315138;
    v21[0] = v9;
    v17[1] = v8 + 4;
    id v10 = [*(id *)(v1 + 16) domainFullDisplayName];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    *(void *)&long long v19 = sub_10009B0E4(v11, v13, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Stopping observation of %s progress updates.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v14 = v1 + 88;
  swift_beginAccess();
  sub_100053674(v14, (uint64_t)&v19);
  if (!*((void *)&v20 + 1)) {
    return sub_1000CBBA4((uint64_t)&v19, (uint64_t *)&unk_100705D60);
  }
  sub_1000A54B0(&v19, v21);
  uint64_t v15 = self;
  sub_1000A6B78(v21, v22);
  [v15 removeSubscriber:_bridgeAnythingToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  long long v19 = 0u;
  long long v20 = 0u;
  swift_beginAccess();
  sub_1000D225C((uint64_t)&v19, v14);
  swift_endAccess();
  return sub_10009B1B8((uint64_t)v21);
}

uint64_t sub_10038D95C(void *a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v22 - v11;
  sub_10038C254((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000CBBA4((uint64_t)v5, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    id v13 = *(id *)(v1 + 16);
    char v14 = FPProviderDomain.shouldUseDSEnumeration.getter();

    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    if (v14)
    {
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      unsigned __int8 v18 = [a1 fp_isGlobalProgressForDomainAt:v16];

      long long v19 = *(void (**)(char *, uint64_t))(v7 + 8);
      v19(v10, v6);
      v19(v12, v6);
      if ((v18 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v10, v6);
      v21(v12, v6);
    }
  }
  return 1;
}

id sub_10038DBA8()
{
  uint64_t v1 = *(void **)(v0 + 144);
  if (v1)
  {
    id v2 = *(id *)(v0 + 144);
  }
  else
  {
    id v3 = [self shared];
    uint64_t v4 = *(void **)(v0 + 144);
    *(void *)(v0 + 144) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_10038DC1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.FileProviderSyncState.getter();
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v24 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    aBlock[0] = v9;
    uint64_t v22 = v8 + 4;
    id v10 = [*(id *)(v1 + 16) domainFullDisplayName:v8 + 4 v23];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    v25[0] = sub_10009B0E4(v11, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting observation of %s quota updates.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v14 = sub_10038DBA8();
  [v14 startObservingUpdates];

  id v15 = [self defaultCenter];
  NSString v16 = [self currentInAppMessageChangedNotification];
  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v17 = [self mainQueue];
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  id v28 = sub_10038EFD8;
  uint64_t v29 = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10047D590;
  uint64_t ObjectType = &unk_1006A5A78;
  long long v19 = _Block_copy(aBlock);
  swift_release();
  id v20 = [v15 addObserverForName:v16 object:0 queue:v17 usingBlock:v19];
  _Block_release(v19);

  uint64_t ObjectType = (void *)swift_getObjectType();
  aBlock[0] = (uint64_t)v20;
  sub_1000516C4((uint64_t)aBlock, (uint64_t)v25);
  swift_beginAccess();
  sub_1000D225C((uint64_t)v25, v1 + 56);
  return swift_endAccess();
}

void sub_10038E018()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = sub_10038DBA8();
    Class isa = Notification._bridgeToObjectiveC()().super.isa;
    id v4 = [v2 fetchMessageFromNotification:isa];

    sub_10038E424(v4);
    id v5 = *(void **)(v1 + 136);
    *(void *)(v1 + 136) = v4;
    id v6 = v4;

    if (*(unsigned char *)(v1 + 40) == 1) {
      sub_10038C624((uint64_t)sub_10038E108, 0);
    }
    swift_release();
  }
}

id sub_10038E108(void *a1)
{
  return [a1 didUpdateSyncInAppMessage];
}

uint64_t sub_10038E114()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.FileProviderSyncState.getter();
  swift_retain_n();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v19 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    v22[0] = v9;
    id v17 = v8 + 4;
    id v10 = [*(id *)(v1 + 16) domainFullDisplayName:v8 + 4 v18];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    *(void *)&long long v20 = sub_10009B0E4(v11, v13, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Stopping observation of %s quota updates.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v14 = sub_10038DBA8();
  [v14 stopObservingUpdates];

  swift_beginAccess();
  sub_100053674(v1 + 56, (uint64_t)&v20);
  if (!v21) {
    return sub_1000CBBA4((uint64_t)&v20, (uint64_t *)&unk_100705D60);
  }
  sub_1000A54B0(&v20, v22);
  id v15 = [self defaultCenter];
  sub_1000A6B78(v22, v23);
  [v15 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

  swift_unknownObjectRelease();
  return sub_10009B1B8((uint64_t)v22);
}

void sub_10038E424(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v63 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v63 - 8);
  uint64_t v5 = __chkstk_darwin(v63);
  os_log_type_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - v8;
  if (a1)
  {
    id v10 = a1;
    id v11 = [v10 contentTypeDescription];
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    id v14 = [v10 title];
    if (v14)
    {
      id v15 = v14;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v16;
    }
    else
    {
      unint64_t v17 = 0xE300000000000000;
      uint64_t v59 = 4271950;
    }
    id v26 = [v10 subTitle];
    if (v26)
    {
      id v27 = v26;
      uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v28;
    }
    else
    {
      unint64_t v29 = 0xE300000000000000;
      uint64_t v58 = 4271950;
    }
    id v30 = [v10 actions];
    sub_10009E6C4(0, &qword_100707440);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      id v62 = v10;
      if (v38) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v62 = v10;
      if (v32)
      {
LABEL_12:
        if ((v31 & 0xC000000000000001) != 0)
        {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v33 = *(id *)(v31 + 32);
        }
        id v34 = v33;
        swift_bridgeObjectRelease();
        id v35 = [v34 title];

        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v37 = v36;

        goto LABEL_19;
      }
    }
    uint64_t v57 = 4271950;
    swift_bridgeObjectRelease();
    unint64_t v37 = 0xE300000000000000;
LABEL_19:
    static Logger.FileProviderSyncState.getter();
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v39 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.info.getter();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      int v54 = v42;
      uint64_t v44 = v43;
      uint64_t v55 = swift_slowAlloc();
      uint64_t v65 = v55;
      *(_DWORD *)uint64_t v44 = 136316162;
      uint64_t v61 = v4;
      id v45 = [*(id *)(v2 + 16) domainFullDisplayName];
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v56 = v9;
      os_log_t v53 = v40;
      unint64_t v47 = v17;
      uint64_t v48 = v46;
      unint64_t v50 = v49;

      uint64_t v64 = sub_10009B0E4(v48, v50, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10009B0E4(v60, v13, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10009B0E4(v59, v47, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10009B0E4(v58, v39, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 42) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10009B0E4(v57, v37, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v51 = v53;
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v54, "Publishing %s quota message: content type = %s, title = %s, subtitle = %s, action = %s.", (uint8_t *)v44, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v63);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v63);
    }
    return;
  }
  static Logger.FileProviderSyncState.getter();
  swift_retain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v61 = v4;
    long long v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)long long v20 = 136315138;
    uint64_t v65 = v21;
    id v62 = v20 + 4;
    id v22 = [*(id *)(v2 + 16) domainFullDisplayName];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v25 = v24;

    uint64_t v64 = sub_10009B0E4(v23, v25, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unpublishing %s quota message", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v63);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v63);
  }
}

uint64_t sub_10038EB6C(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (a3 & 1) == 0;
  if (a3) {
    uint64_t v13 = 0x696873696C627550;
  }
  else {
    uint64_t v13 = 0x73696C6275706E55;
  }
  if (v12) {
    unint64_t v14 = 0xEC000000676E6968;
  }
  else {
    unint64_t v14 = 0xEA0000000000676ELL;
  }
  if (a2) {
    uint64_t v15 = 0x64616F6C6E776F64;
  }
  else {
    uint64_t v15 = 0x6E6964616F6C7075;
  }
  if (a2) {
    unint64_t v16 = 0xEB00000000676E69;
  }
  else {
    unint64_t v16 = 0xE900000000000067;
  }
  id v17 = [a1 localizedDescription];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
  }
  else
  {
    unint64_t v20 = 0xE300000000000000;
    uint64_t v37 = 4271950;
  }
  static Logger.FileProviderSyncState.getter();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  int v36 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v35 = v11;
    uint64_t v31 = v15;
    uint64_t v24 = v23;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v39 = v33;
    *(_DWORD *)uint64_t v24 = 136315906;
    uint64_t v34 = v9;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_10009B0E4(v13, v14, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    id v25 = [*(id *)(v4 + 16) domainFullDisplayName];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v8;
    unint64_t v28 = v27;

    uint64_t v38 = sub_10009B0E4(v26, v28, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_10009B0E4(v31, v16, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_10009B0E4(v37, v20, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v36, "%s %s %s progress: %s", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_10038EFA0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10038EFD8()
{
}

uint64_t (*sub_10038EFE0(void *a1))()
{
  return sub_10038D490(a1);
}

uint64_t sub_10038EFE8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038F020()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038F060()
{
  return sub_10038D5FC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10038F068()
{
  sub_10038CDC0(v0, (void (*)(void))sub_10038E114, (void (*)(void))sub_10038D650);
}

void sub_10038F0AC()
{
  sub_10038CDC0(v0, (void (*)(void))sub_10038DC1C, (void (*)(void))sub_10038CF8C);
}

uint64_t sub_10038F0F0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10038F130()
{
  sub_10038C8E4(v0[2], v0[3], v0[4]);
}

uint64_t sub_10038F13C()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10038F17C()
{
  return sub_10038C424(v0);
}

uint64_t sub_10038F1AC@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v60 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v54 - v19;
  uint64_t v59 = (uint64_t)a2;
  uint64_t v21 = String.count.getter();
  uint64_t v61 = v15;
  uint64_t v62 = a4;
  os_log_type_t v22 = (char *)v10;
  if (v21 < 1)
  {
    a3 = 0xE900000000000068;
    uint64_t v59 = 0x7461507865646E69;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v23 = IndexPath.section.getter();
  id v24 = [v5 numberOfSections];
  if (v23 >= (uint64_t)v24)
  {
    uint64_t v31 = (uint64_t)v24;
    static Logger.UI.getter();
    (*(void (**)(char *, uint64_t, char *))(v63 + 16))(v14, a1, v22);
    id v32 = v5;
    swift_bridgeObjectRetain();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v58 = v22;
      uint64_t v36 = v35;
      id v56 = (void *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v65 = (void *)v57;
      *(_DWORD *)uint64_t v36 = 136315906;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10009B0E4(v59, a3, (uint64_t *)&v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2080;
      sub_100115EC0();
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v64 = sub_10009B0E4(v37, v38, (uint64_t *)&v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v63 + 8))(v14, v58);
      *(_WORD *)(v36 + 22) = 2048;
      uint64_t v64 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v36 + 32) = 2112;
      uint64_t v64 = (uint64_t)v32;
      id v39 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v56 = v32;

      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Encountered invalid %s (%s) - numberOfSections is %ld for %@", (uint8_t *)v36, 0x2Au);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      os_log_type_t v22 = v58;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, char *))(v63 + 8))(v14, v22);
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v20, v61);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v63 + 56))(v62, 1, 1, v22);
  }
  else
  {
    uint64_t v25 = IndexPath.row.getter();
    id v26 = [v5 numberOfItemsInSection:v23];
    unint64_t v27 = (void (**)(char *, uint64_t, char *))(v63 + 16);
    if (v25 >= (uint64_t)v26)
    {
      uint64_t v40 = (uint64_t)v26;
      os_log_type_t v41 = v18;
      static Logger.UI.getter();
      int v42 = v58;
      (*v27)(v58, a1, v22);
      uint64_t v43 = (uint64_t)v41;
      id v44 = v5;
      swift_bridgeObjectRetain();
      id v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.fault.getter();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v57 = v43;
        int v55 = v47;
        uint64_t v49 = v48;
        int v54 = (void *)swift_slowAlloc();
        id v56 = (void *)swift_slowAlloc();
        uint64_t v65 = v56;
        *(_DWORD *)uint64_t v49 = 136316162;
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_10009B0E4(v59, a3, (uint64_t *)&v65);
        uint64_t v59 = (uint64_t)v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v49 + 12) = 2080;
        sub_100115EC0();
        uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v64 = sub_10009B0E4(v50, v51, (uint64_t *)&v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v63 + 8))(v42, v22);
        *(_WORD *)(v49 + 22) = 2048;
        uint64_t v64 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v49 + 32) = 2048;
        uint64_t v64 = v40;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v49 + 42) = 2112;
        uint64_t v64 = (uint64_t)v44;
        id v52 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *int v54 = v44;

        os_log_t v53 = (os_log_t)v59;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v59, (os_log_type_t)v55, "Encountered invalid %s (%s) - numberOfItems(inSection:%ld) is %ld for %@", (uint8_t *)v49, 0x34u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v57, v61);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, char *))(v63 + 8))(v42, v22);

        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v61);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v63 + 56))(v62, 1, 1, v22);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = v62;
      (*(void (**)(uint64_t, uint64_t, char *))(v63 + 16))(v62, a1, v22);
      unint64_t v29 = *(uint64_t (**)(uint64_t, void, uint64_t, char *))(v63 + 56);
      return v29(v28, 0, 1, v22);
    }
  }
}

char *sub_10038F9F8(uint64_t a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem] = 0;
  uint64_t v6 = &v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_items] = a1;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_destinationFolder] = a2;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_undoManager] = a3;
  sub_1002FFBD4();
  swift_bridgeObjectRetain();
  id v7 = a2;
  id v8 = a3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DOCArchiveOperation();
  uint64_t v10 = (char *)objc_msgSendSuper2(&v14, "initWithItems:destinationFolder:", isa, v7);

  uint64_t v11 = *(void **)&v10[OBJC_IVAR____TtC5Files19DOCArchiveOperation_undoManager];
  uint64_t v12 = v10;
  [v11 registerUndoOperationForSender:v12];

  return v12;
}

id sub_10038FB94()
{
  id result = (id)_DocumentManagerBundle();
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v2 = result;
  v3._uint64_t countAndFlagsBits = 0x1000000000000027;
  v20._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v20._object = (void *)0x80000001005EE400;
  v3._object = (void *)0x80000001005EE3B0;
  v4._object = (void *)0x80000001005EE3E0;
  v5._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5._object = (void *)0xEB00000000656C62;
  v4._uint64_t countAndFlagsBits = 0x1000000000000011;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v5, (NSBundle)v2, v4, v20);

  v6._uint64_t countAndFlagsBits = 0xD000000000000042;
  v7._object = (void *)0x80000001005EE440;
  v6._object = (void *)0x80000001005EE470;
  v7._uint64_t countAndFlagsBits = 0xD000000000000028;
  DOCLocalizedDictionaryString(_:comment:)(v7, v6);
  unint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_items);
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v10 = v9;
    if (v9) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  id v11 = *(id *)(v8 + 32);
LABEL_7:
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  id v13 = [v12 displayName];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  swift_bridgeObjectRelease();
  if (v10 == 1)
  {
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_100073F48();
    *(void *)(v17 + 32) = v14;
    *(void *)(v17 + 40) = v16;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    *(void *)(v19 + 56) = &type metadata for Int;
    *(void *)(v19 + 64) = &protocol witness table for Int;
    *(void *)(v19 + 32) = v10;
  }
  uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)v18;
}

char *sub_10038FE88()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_items);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_destinationFolder);
  Swift::String v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_undoManager);
  id v4 = objc_allocWithZone((Class)type metadata accessor for DOCArchiveOperation());
  swift_bridgeObjectRetain();
  Swift::String v5 = sub_10038F9F8(v1, v2, v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  v10[4] = sub_100390370;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _OWORD v10[2] = sub_10000CAE4;
  v10[3] = &unk_1006A5C30;
  Swift::String v7 = _Block_copy(v10);
  unint64_t v8 = v5;
  swift_release();
  [v8 setArchiveCompletionBlock:v7];
  _Block_release(v7);

  return v8;
}

uint64_t sub_100390008()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem];
  if (!v1) {
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A04F0;
  *(void *)(v2 + 32) = v1;
  specialized Array._endMutation()();
  Swift::String v3 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCArchiveOperation_undoManager];
  objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation());
  id v4 = v1;
  id v5 = v3;
  uint64_t v6 = v0;
  return DOCDeleteOperation.init(items:originalOperation:undoManager:)();
}

void sub_100390130(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v3 = (char *)Strong;
    id v4 = *(void (**)(id))(Strong + OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler);
    if (v4)
    {
      swift_retain();
      v4([v1 fractionCompleted]);
      sub_1000A7258((uint64_t)v4);
    }
    if ([v1 isFinished])
    {
      uint64_t v5 = OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation;
      uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation];
      if (v6)
      {
        id v7 = v6;
        dispatch thunk of NSKeyValueObservation.invalidate()();

        unint64_t v8 = *(char **)&v3[v5];
      }
      else
      {
        unint64_t v8 = 0;
      }
      *(void *)&v3[v5] = 0;

      Swift::String v3 = v8;
    }
  }
}

id sub_100390250()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCArchiveOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCArchiveOperation()
{
  return self;
}

uint64_t sub_100390338()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100390370(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  id v4 = *(id *)(v2 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem);
  *(void *)(v2 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem) = a1;
  id v3 = a1;
}

void sub_1003903C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 currentLocationTitle];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_100390428(int a1, void *a2)
{
  int v44 = a1;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v41 - v8;
  __chkstk_darwin(v7);
  id v11 = (char *)&v41 - v10;
  static Logger.Application.getter();
  uint64_t v12 = a2;
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  uint64_t v15 = &off_100712000;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v45 = v3;
    uint64_t v17 = v16;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    id v47 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    id v47 = *(id *)&v12[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v18 = v47;
    sub_1000CBE70(&qword_100712EF0);
    uint64_t v19 = String.init<A>(describing:)();
    id v47 = (id)sub_10009B0E4(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v15 = &off_100712000;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Interaction] %s %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v45;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v11, v3);
  os_log_type_t v22 = (char *)v15[438];
  uint64_t v23 = *(void **)&v22[(void)v12];
  if (v23)
  {
    id v24 = v23;
    static Logger.Application.getter();
    uint64_t v25 = v12;
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v45 = v3;
      uint64_t v29 = v28;
      uint64_t v30 = swift_slowAlloc();
      int v42 = v21;
      aBlock[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v41 = v4;
      id v47 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2080;
      id v47 = *(id *)&v22[(void)v12];
      id v31 = v47;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v32 = String.init<A>(describing:)();
      uint64_t v43 = v24;
      id v47 = (id)sub_10009B0E4(v32, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v24 = v43;
      v42(v9, v45);
    }
    else
    {

      v21(v9, v3);
    }
    id v39 = *(void **)&v22[(void)v12];
    *(void *)&v22[(void)v12] = 0;

    aBlock[4] = (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:);
    void aBlock[5] = 0;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000666D8;
    uint64_t aBlock[3] = (uint64_t)&unk_1006A60E0;
    uint64_t v40 = _Block_copy(aBlock);
    swift_release();
    [v24 dismissViewControllerAnimated:v44 & 1 completion:v40];
    _Block_release(v40);
  }
  else
  {
    os_log_type_t v34 = v43;
    static Logger.Application.getter();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = v21;
      unint64_t v38 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v38 = 136315138;
      id v47 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[Interaction] %s no current preview controller, calling completion immediately", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v37(v34, v3);
    }
    else
    {

      v21(v34, v3);
    }
  }
}

void sub_100390AB8(int a1, void (*a2)(uint64_t), uint64_t a3)
{
  os_log_type_t v46 = a2;
  uint64_t v47 = a3;
  int v45 = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v43 = (void (*)(char *, uint64_t))((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v42 - v8;
  __chkstk_darwin(v7);
  id v11 = (char *)&v42 - v10;
  static Logger.Application.getter();
  uint64_t v12 = v3;
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    int v44 = v9;
    aBlock[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    id v50 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    id v50 = *(id *)&v12[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v17 = v50;
    sub_1000CBE70(&qword_100712EF0);
    uint64_t v18 = String.init<A>(describing:)();
    id v50 = (id)sub_10009B0E4(v18, v19, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v20 = v48;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Interaction] %s %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    uint64_t v9 = v44;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v21 = v20;
  }
  else
  {

    uint64_t v21 = v48;
  }
  os_log_type_t v22 = *(void (**)(char *, uint64_t))(v21 + 8);
  v22(v11, v4);
  uint64_t v23 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
  id v24 = *(void **)&v12[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  if (v24)
  {
    id v25 = v24;
    static Logger.Application.getter();
    id v26 = v12;
    os_log_type_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v43 = v22;
      uint64_t v30 = v29;
      uint64_t v31 = swift_slowAlloc();
      int v44 = v9;
      aBlock[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v42 = v4;
      id v50 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2080;
      id v50 = *(id *)&v12[v23];
      id v32 = v50;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v33 = String.init<A>(describing:)();
      id v50 = (id)sub_10009B0E4(v33, v34, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v43(v44, v42);
    }
    else
    {

      v22(v9, v4);
    }
    uint64_t v40 = *(void **)&v12[v23];
    *(void *)&v12[v23] = 0;

    aBlock[4] = (uint64_t)v46;
    void aBlock[5] = v47;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000666D8;
    uint64_t aBlock[3] = (uint64_t)&unk_1006A5F50;
    uint64_t v41 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v25 dismissViewControllerAnimated:v45 & 1 completion:v41];
    _Block_release(v41);
  }
  else
  {
    uint64_t v35 = v43;
    static Logger.Application.getter();
    os_log_type_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      unint64_t v38 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v38 = 136315138;
      id v50 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "[Interaction] %s no current preview controller, calling completion immediately", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v39 = ((uint64_t (*)(void, uint64_t))v22)(v35, v4);
    v46(v39);
  }
}

uint64_t sub_100391150(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[11] = a1;
  v3[12] = a3;
  uint64_t v5 = type metadata accessor for Logger();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DOCAssociatedObjectStorageKey();
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  v3[19] = v7;
  v3[20] = v8;
  type metadata accessor for MainActor();
  v3[21] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003912D4, v10, v9);
}

uint64_t sub_1003912D4()
{
  uint64_t v41 = v0;
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_10026B408();
    swift_allocError();
    *uint64_t v21 = 2;
    swift_willThrow();
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_16;
  }
  uint64_t v2 = Strong;
  id v3 = [Strong traitCollection];
  if ((DOCUsePadIdiomForTraits() & 1) == 0)
  {

LABEL_14:
    sub_10026B408();
    swift_allocError();
    *os_log_type_t v22 = 2;
    swift_willThrow();

    goto LABEL_15;
  }
  id v4 = [v3 horizontalSizeClass];

  if (v4 != (id)2) {
    goto LABEL_14;
  }
  id v5 = [v2 presentedViewController];
  if (v5)
  {
    uint64_t v6 = v5;
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();

    if (v7) {
      goto LABEL_14;
    }
  }
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v9 = sub_1000CBE70(&qword_10070E840);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  IntentParameter.wrappedValue.getter();
  char v10 = *(unsigned char *)(v0 + 176);
  *(unsigned char *)(v0 + 177) = v10;
  id v11 = [v2 effectiveFullBrowser];
  LOBYTE(v8) = DOCFullDocumentManagerViewController.canPerformHistoryShift(direction:amount:)(v10, v8);

  if (v8)
  {
    id v12 = [v2 effectiveFullBrowser];
    id v13 = [v12 traitCollection];
    unsigned int v14 = [v13 supportHistoryNavigation];

    if (v14)
    {
      sub_1000CBE70((uint64_t *)&unk_1007084D0);
      if (qword_100704E88 != -1) {
        swift_once();
      }
      uint64_t v16 = *(void *)(v0 + 144);
      uint64_t v15 = *(void *)(v0 + 152);
      uint64_t v18 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 136);
      uint64_t v19 = sub_10009D098(v18, (uint64_t)qword_100708498);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v19, v18);
      uint64_t v20 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      swift_getKeyPath();
      *(void *)(swift_task_alloc() + 16) = v12;
      dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();
      swift_release();

      swift_task_dealloc();
      sub_1002C8768(v10, v15);
      swift_release();
    }
  }
  else
  {
    static Logger.UI.getter();
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.info.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v29 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v30 = *(void *)(v0 + 104);
    if (v27)
    {
      uint64_t v31 = swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v39 = v28;
      *(void *)(v0 + 64) = sub_10009B0E4(0xD00000000000001ELL, 0x80000001005EE750, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2080;
      swift_beginAccess();
      int v32 = *(unsigned __int8 *)(v0 + 177);
      uint64_t v33 = 0x64726177726F66;
      if ((v32 & 1) == 0) {
        uint64_t v33 = 0x647261776B636162;
      }
      unint64_t v34 = 0xE700000000000000;
      if ((v32 & 1) == 0) {
        unint64_t v34 = 0xE800000000000000;
      }
      if (v32 == 2) {
        uint64_t v35 = 28526;
      }
      else {
        uint64_t v35 = v33;
      }
      if (v32 == 2) {
        unint64_t v36 = 0xE200000000000000;
      }
      else {
        unint64_t v36 = v34;
      }
      *(void *)(v0 + 72) = sub_10009B0E4(v35, v36, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s Cannot perform navigation shift action with %s direction", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v39, v30);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
  }
  uint64_t v37 = *(void *)(v0 + 152);
  unint64_t v38 = *(uint64_t **)(v0 + 88);
  v38[3] = sub_1000CBE70(&qword_10071B630);
  v38[4] = sub_100117024();
  sub_100052C70(v38);
  static IntentResult.result<>()();

  sub_10039B8B8(v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
LABEL_16:
  return v23();
}

uint64_t sub_1003918C8(uint64_t a1, void *a2, uint64_t a3)
{
  v3[5] = a1;
  v3[6] = a3;
  v3[7] = *a2;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[9] = v5;
  v3[10] = v4;
  return _swift_task_switch(sub_100391968, v5, v4);
}

uint64_t sub_100391968()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = (uint64_t *)v0[5];
    id v3 = [Strong effectiveFullBrowser];
    v0[12] = v3;
    v2[3] = sub_1000CBE70(&qword_10071B630);
    v2[4] = sub_100117024();
    uint64_t v4 = sub_100052C70(v2);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[13] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100391B58;
    uint64_t v6 = v0[7];
    return sub_10054AEE8((uint64_t)v4, (uint64_t)v3, v6);
  }
  else
  {
    swift_release();
    uint64_t v8 = type metadata accessor for DOCAppIntentsGenericError();
    sub_10039B71C((unint64_t *)&unk_100712F50, (void (*)(uint64_t))&type metadata accessor for DOCAppIntentsGenericError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for DOCAppIntentsGenericError.performIntentError(_:), v8);
    swift_willThrow();
    char v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100391B58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_10039E92C;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_10039E928;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100391C74(uint64_t a1, void *a2, uint64_t a3)
{
  v3[5] = a1;
  v3[6] = a3;
  v3[7] = *a2;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[9] = v5;
  v3[10] = v4;
  return _swift_task_switch(sub_100391D14, v5, v4);
}

uint64_t sub_100391D14()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = (uint64_t *)v0[5];
    id v3 = [Strong effectiveFullBrowser];
    v0[12] = v3;
    v2[3] = sub_1000CBE70(&qword_10071B630);
    v2[4] = sub_100117024();
    uint64_t v4 = sub_100052C70(v2);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[13] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100391F04;
    uint64_t v6 = v0[7];
    return sub_10054B50C((uint64_t)v4, (uint64_t)v3, v6);
  }
  else
  {
    swift_release();
    uint64_t v8 = type metadata accessor for DOCAppIntentsGenericError();
    sub_10039B71C((unint64_t *)&unk_100712F50, (void (*)(uint64_t))&type metadata accessor for DOCAppIntentsGenericError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for DOCAppIntentsGenericError.performIntentError(_:), v8);
    swift_willThrow();
    char v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100391F04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100392090;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100392020;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100392020()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100392090()
{
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 40);

  swift_release();
  sub_10039B764(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100392118(void *a1)
{
  id v2 = [a1 effectiveFullBrowser];
  [v2 dismissSearch];

  return sub_100392174(a1);
}

uint64_t sub_100392174(void *a1)
{
  id v2 = [a1 effectiveFullBrowser];
  id v3 = [v2 currentViewController];

  uint64_t v4 = type metadata accessor for DOCSidebarViewController(0);
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    id v6 = (id)v5;
    uint64_t v7 = &protocol witness table for DOCSidebarViewController;
  }
  else
  {

    id v6 = [a1 effectiveFullBrowser];
    uint64_t v4 = sub_10009E6C4(0, (unint64_t *)&unk_100711B80);
    uint64_t v7 = &protocol witness table for DOCFullDocumentManagerViewController;
  }
  v9[3] = v4;
  _OWORD v9[4] = v7;
  v9[0] = v6;
  sub_1000A6B78(v9, v4);
  ((void (__cdecl *)())v7[1])();
  return sub_10009B1B8((uint64_t)v9);
}

void sub_100392298(uint64_t a1, int a2, uint64_t a3)
{
  int v49 = a2;
  uint64_t v50 = a1;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v47 = v7;
  uint64_t v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000CBE70(&qword_10070AC28);
  __chkstk_darwin(v9);
  uint64_t v11 = &v42[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  os_log_type_t v46 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = &v42[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v42[-v18];
  uint64_t v48 = v3;
  uint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController);
  if (!v20 || ![v20 currentPreviewItem]) {
    goto LABEL_14;
  }
  self;
  uint64_t v21 = (void *)swift_dynamicCastObjCClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
LABEL_14:
    id v28 = [self defaultManager];
    uint64_t v29 = v50;
    URL._bridgeToObjectiveC()(v30);
    int v32 = v31;
    uint64_t v33 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, v29, v5);
    unint64_t v34 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v35 = (v47 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = swift_allocObject();
    uint64_t v37 = v8;
    uint64_t v38 = v36;
    *(void *)(v36 + 16) = v33;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v36 + v34, v37, v5);
    unint64_t v39 = v38 + v35;
    *(void *)unint64_t v39 = a3;
    *(unsigned char *)(v39 + 8) = v49 & 1;
    aBlock[4] = sub_10039B0F4;
    void aBlock[5] = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10000CAE4;
    uint64_t aBlock[3] = &unk_1006A5E60;
    uint64_t v40 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    [v28 fetchItemForURL:v32 completionHandler:v40];
    _Block_release(v40);

    return;
  }
  int v44 = v8;
  uint64_t v45 = a3;
  id v22 = [v21 previewItemURL];
  if (v22)
  {
    uint64_t v23 = v22;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v24(v19, 0, 1, v5);
  }
  else
  {
    id v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v24(v19, 1, 1, v5);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v17, v50, v5);
  v24(v17, 0, 1, v5);
  uint64_t v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1002827DC((uint64_t)v19, (uint64_t)v11);
  sub_1002827DC((uint64_t)v17, v25);
  os_log_type_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v26((uint64_t)v11, 1, v5) == 1)
  {
    swift_unknownObjectRelease();
    sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
    sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
    if (v26(v25, 1, v5) == 1)
    {
      sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
      return;
    }
    goto LABEL_13;
  }
  BOOL v27 = v46;
  sub_1002827DC((uint64_t)v11, (uint64_t)v46);
  if (v26(v25, 1, v5) == 1)
  {
    swift_unknownObjectRelease();
    sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
    sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v27, v5);
LABEL_13:
    sub_1000CBBA4((uint64_t)v11, &qword_10070AC28);
    uint64_t v8 = v44;
    a3 = v45;
    goto LABEL_14;
  }
  uint64_t v8 = v44;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v44, v25, v5);
  sub_10039B71C(&qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL);
  int v43 = dispatch thunk of static Equatable.== infix(_:_:)();
  swift_unknownObjectRelease();
  uint64_t v41 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v41(v8, v5);
  sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
  sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
  v41(v27, v5);
  sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
  a3 = v45;
  if ((v43 & 1) == 0) {
    goto LABEL_14;
  }
}

void sub_1003928D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v57 = a6;
  uint64_t v58 = a5;
  uint64_t v60 = a4;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v56 = v9;
  uint64_t v59 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000CBE70(&qword_10070AC28);
  __chkstk_darwin(v10);
  uint64_t v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = &v51[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v51[-v18];
  __chkstk_darwin(v17);
  uint64_t v21 = &v51[-v20];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (void *)Strong;
    id v24 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController);
    if (!v24) {
      goto LABEL_25;
    }
    id v25 = [v24 currentPreviewItem];
    if (!v25) {
      goto LABEL_25;
    }
    id v26 = v25;
    self;
    BOOL v27 = (void *)swift_dynamicCastObjCClass();
    if (!v27) {
      goto LABEL_24;
    }
    id v55 = v26;
    id v53 = v27;
    id v28 = [v27 previewItemURL];
    int v54 = a1;
    if (v28)
    {
      uint64_t v29 = v28;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v30(v21, 0, 1, v7);
    }
    else
    {
      uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v30(v21, 1, 1, v7);
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v19, v60, v7);
    v30(v19, 0, 1, v7);
    uint64_t v31 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_1002827DC((uint64_t)v21, (uint64_t)v12);
    sub_1002827DC((uint64_t)v19, v31);
    int v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v32((uint64_t)v12, 1, v7) == 1)
    {
      sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
      sub_1000CBBA4((uint64_t)v21, &qword_1007076B0);
      if (v32(v31, 1, v7) == 1)
      {
        sub_1000CBBA4((uint64_t)v12, &qword_1007076B0);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      sub_1002827DC((uint64_t)v12, (uint64_t)v16);
      if (v32(v31, 1, v7) != 1)
      {
        uint64_t v33 = v59;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 32))(v59, v31, v7);
        sub_10039B71C(&qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL);
        int v52 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v34 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
        v34(v33, v7);
        sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
        sub_1000CBBA4((uint64_t)v21, &qword_1007076B0);
        v34(v16, v7);
        sub_1000CBBA4((uint64_t)v12, &qword_1007076B0);
        a1 = v54;
        if (v52)
        {

          swift_unknownObjectRelease();
          return;
        }
        goto LABEL_17;
      }
      sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
      sub_1000CBBA4((uint64_t)v21, &qword_1007076B0);
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v16, v7);
    }
    sub_1000CBBA4((uint64_t)v12, &qword_10070AC28);
    a1 = v54;
LABEL_17:
    id v35 = [v53 fpItem];
    if (!v35)
    {
      id v40 = a1;
      swift_unknownObjectRelease();
      if (!a1)
      {
LABEL_26:

        return;
      }

LABEL_25:
      uint64_t v41 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v42 = v59;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v59, v60, v7);
      unint64_t v43 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      unint64_t v44 = (v43 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v45 = a1;
      unint64_t v46 = (v43 + v56 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v41;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v47 + v43, v42, v7);
      unint64_t v48 = v47 + v44;
      *(void *)unint64_t v48 = v58;
      *(unsigned char *)(v48 + 8) = v57 & 1;
      *(void *)(v47 + v46) = v45;
      aBlock[4] = sub_10039B2A4;
      void aBlock[5] = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A5EB0;
      int v49 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      id v50 = v45;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v49);
      goto LABEL_26;
    }
    uint64_t v36 = v35;
    if (a1)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      id v37 = a1;
      id v38 = v36;
      char v39 = static NSObject.== infix(_:_:)();

      swift_unknownObjectRelease();
      if (v39) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }

LABEL_24:
    swift_unknownObjectRelease();
    goto LABEL_25;
  }
}

void sub_100392FB4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void *a5)
{
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    int v23 = a4;
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
    *(void *)(v17 + v16) = v14;
    unint64_t v18 = v17 + v22;
    *(void *)unint64_t v18 = a3;
    *(unsigned char *)(v18 + 8) = v23 & 1;
    *(void *)(v17 + ((v16 + 31) & 0xFFFFFFFFFFFFFFF8)) = a5;
    id v19 = a5;
    id v20 = v14;
    swift_bridgeObjectRetain();
    sub_100390AB8(0, (void (*)(uint64_t))sub_10039B34C, v17);
    swift_release();
  }
}

void sub_100393194(uint64_t a1, void *a2, objc_class *a3, char a4, void *a5)
{
  id v28 = a3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    uint64_t v13 = self;
    id v26 = a5;
    id v27 = [v13 defaultPermission];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v16 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
    uint64_t v17 = a2;
    *(void *)(v16 + v15) = a2;
    unint64_t v18 = v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v18 = v28;
    *(unsigned char *)(v18 + 8) = a4 & 1;
    id v19 = v26;
    *(void *)(v16 + ((v15 + 31) & 0xFFFFFFFFFFFFFFF8)) = v26;
    aBlock[4] = sub_10039B4C8;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A5F28;
    id v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v21 = v19;
    id v22 = v17;
    swift_release();
    id v23 = v27;
    [v27 adoptPersonaFromItem:v21 andPerformBlock:v20];
    _Block_release(v20);
  }
  else
  {
    id v24 = v28;
    sub_100393438(0, a1, a2, v24, a4 & 1);
  }
}

void sub_100393438(uint64_t a1, uint64_t a2, void *a3, Class a4, char a5)
{
  if (a1)
  {
    id v8 = [objc_allocWithZone((Class)QLItem) initWithFPItem:a1];
  }
  else
  {
    id v9 = objc_allocWithZone((Class)QLItem);
    URL._bridgeToObjectiveC()(v10);
    uint64_t v12 = v11;
    id v8 = [v9 initWithURL:v11];
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A04F0;
  *(void *)(v13 + 32) = v8;
  v39[0] = v13;
  specialized Array._endMutation()();
  unint64_t v14 = v39[0];
  unint64_t v15 = (objc_class *)type metadata accessor for DOCQLItemsPreviewController();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC5Files27DOCQLItemsPreviewController__nonSourceBasedQLItems] = v39[0];
  if (v14 >> 62)
  {
    id v38 = v8;
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_10071B4D0);
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v17 = v8;
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10071B4D0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v42.receiver = v16;
  v42.super_class = v15;
  id v19 = [super initWithPreviewItems:isa];

  [v19 setDelegate:a3];
  id v20 = [v19 userActivity];

  if (!v20)
  {
    id v21 = objc_allocWithZone((Class)NSUserActivity);
    id v22 = v19;
    swift_bridgeObjectRetain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v24 = [v21 initWithActivityType:v23];

    [v22 setUserActivity:v24];
  }
  id v25 = [v19 userActivity:v39[0]];
  if (v25)
  {
    id v26 = v25;
    if (a4) {
      a4 = Dictionary._bridgeToObjectiveC()().super.isa;
    }
    [v26 setUserInfo:a4];
  }
  [v19 setAlwaysDisplayPreviewItemTitle:1];
  if (qword_100704FD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  id v27 = a3;
  _s5Files16DOCPreviewRouterC7present10contentsOf24contextIfPresentingInApp10didPresentyAA27DOCQLItemsPreviewControllerC_AC0jK7ContextVyycSgtF_0(v19, a5 & 1, v27, 0, 0);
  id v28 = *(void **)&v27[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  *(void *)&v27[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = v19;
  id v29 = v19;

  sub_100046F64((uint64_t)v39);
  uint64_t v30 = v40;
  if (v40)
  {
    uint64_t v31 = v41;
    sub_1000A6B78(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
    sub_10009B1B8((uint64_t)v39);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v39, &qword_100712EF8);
  }
  sub_100046F64((uint64_t)v39);
  uint64_t v32 = v40;
  if (v40)
  {
    uint64_t v33 = v41;
    sub_1000A6B78(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
    sub_10009B1B8((uint64_t)v39);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v39, &qword_100712EF8);
  }
  sub_100046F64((uint64_t)v39);
  uint64_t v34 = v40;
  if (v40)
  {
    uint64_t v35 = v41;
    sub_1000A6B78(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v35 + 40))(v34, v35);
    sub_10009B1B8((uint64_t)v39);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v39, &qword_100712EF8);
  }
  v39[0] = v29;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  id v37 = *(void **)&v27[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver];
  *(void *)&v27[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = v36;

  swift_release();
}

uint64_t sub_100393974()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100046F64((uint64_t)v12);

    uint64_t v2 = v13;
    if (v13)
    {
      uint64_t v3 = v14;
      sub_1000A6B78(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
      sub_10009B1B8((uint64_t)v12);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v12, &qword_100712EF8);
    }
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_100046F64((uint64_t)v12);

    uint64_t v6 = v13;
    if (v13)
    {
      uint64_t v7 = v14;
      sub_1000A6B78(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
      sub_10009B1B8((uint64_t)v12);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v12, &qword_100712EF8);
    }
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    sub_100046F64((uint64_t)v12);

    uint64_t v10 = v13;
    if (v13)
    {
      uint64_t v11 = v14;
      sub_1000A6B78(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      return sub_10009B1B8((uint64_t)v12);
    }
    else
    {
      return sub_1000CBBA4((uint64_t)v12, &qword_100712EF8);
    }
  }
  return result;
}

uint64_t sub_100393B30(uint64_t a1, int a2, char a3, int a4, uint64_t a5)
{
  uint64_t v41 = a5;
  int v42 = a2;
  int v43 = a4;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v40 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  [self supportsQuickLookInSharedWindow];
  sub_1002827DC(a1, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1000CBBA4((uint64_t)v21, &qword_1007076B0);
    static Logger.Application.getter();
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Interaction] Attempted to quick look a nil url. Ignoring", v28, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v10, v46);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
    if (a3)
    {
      static Logger.Application.getter();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v47 = sub_10009B0E4(0xD000000000000041, 0x80000001005EE6D0, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "[Interaction] %s openInWindow: true", v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v46);
      sub_1003964A8((uint64_t)v25, v43 & 1);
    }
    else if (v43)
    {
      static Logger.Application.getter();
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136315138;
        uint64_t v47 = sub_10009B0E4(0xD000000000000041, 0x80000001005EE6D0, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "[Interaction] %s sharedPreview: true", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
      id v36 = v44;
      sub_100399304(0, v36, v36, v42 & 1);
    }
    else
    {
      static Logger.Application.getter();
      id v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v37, v38))
      {
        char v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)char v39 = 136315138;
        uint64_t v47 = sub_10009B0E4(0xD000000000000041, 0x80000001005EE6D0, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "[Interaction] %s preview", v39, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
      sub_100392298((uint64_t)v25, v42 & 1, v41);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
}

void sub_100394214(void *a1, char a2)
{
  id v4 = [a1 configuration];
  id v5 = [v4 sceneIdentifier];

  if (v5)
  {
    uint64_t v6 = qword_1007052D8;
    id v7 = v5;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)qword_10071B4C0;
    uint64_t v9 = (char *)[(id)qword_10071B4C0 objectForKey:v7];
    if (!v9)
    {
      id v10 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
      uint64_t v9 = (char *)DOCPreviewController.init()();
      [v8 setObject:v9 forKey:v7];
    }

    [v9 setDelegate:a1];
    id v11 = [a1 effectiveFullBrowser];
    id v12 = [v11 documentManager];

    uint64_t v13 = &v9[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
    swift_beginAccess();
    *((void *)v13 + 1) = &protocol witness table for DOCDocumentManager;
    swift_unknownObjectWeakAssign();

    id v14 = [a1 effectiveFullBrowser];
    id v15 = [v14 configuration];

    uint64_t v16 = (void **)&v9[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
    swift_beginAccess();
    uint64_t v17 = *v16;
    *uint64_t v16 = v15;

    id v18 = [a1 effectiveFullBrowser];
    id v19 = [v18 actionManager];

    swift_beginAccess();
    swift_unknownObjectWeakAssign();

    uint64_t v20 = qword_100704FD8;
    id v21 = a1;
    if (v20 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    uint64_t v23 = (char *)v21;
    swift_retain();
    _s5Files16DOCPreviewRouterC7present10contentsOf24contextIfPresentingInApp10didPresentyAA27DOCQLItemsPreviewControllerC_AC0jK7ContextVyycSgtF_0(v9, a2 & 1, v23, (uint64_t)sub_10039AF68, v22);
    swift_release();
    uint64_t v24 = *(void **)&v23[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    *(void *)&v23[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = v9;
    id v25 = v9;

    sub_100046F64((uint64_t)v38);
    uint64_t v26 = v39;
    if (v39)
    {
      uint64_t v27 = v40;
      sub_1000A6B78(v38, v39);
      (*(void (**)(uint64_t, uint64_t))(v27 + 32))(v26, v27);
      sub_10009B1B8((uint64_t)v38);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v38, &qword_100712EF8);
    }
    sub_100046F64((uint64_t)v38);
    uint64_t v28 = v39;
    if (v39)
    {
      uint64_t v29 = v40;
      sub_1000A6B78(v38, v39);
      (*(void (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
      sub_10009B1B8((uint64_t)v38);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v38, &qword_100712EF8);
    }
    sub_100046F64((uint64_t)v38);
    uint64_t v30 = v39;
    if (v39)
    {
      uint64_t v31 = v40;
      sub_1000A6B78(v38, v39);
      (*(void (**)(uint64_t, uint64_t))(v31 + 40))(v30, v31);
      sub_10009B1B8((uint64_t)v38);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v38, &qword_100712EF8);
    }
    v38[0] = v25;
    swift_getKeyPath();
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v33 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v33;
    *(void *)(v34 + 24) = v32;
    uint64_t v35 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
    id v36 = *(void **)&v23[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver];
    *(void *)&v23[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = v35;

    swift_release();
  }
  else
  {
    id v37 = (id)static DOCLog.Source.getter();
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void sub_1003947B4(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  v6[4] = sub_10039B004;
  void v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1000666D8;
  v6[3] = &unk_1006A5E10;
  id v4 = _Block_copy(v6);
  id v5 = a1;
  swift_release();
  [v2 performAfterCATransactionCommits:v4];
  _Block_release(v4);
}

uint64_t sub_10039489C(uint64_t a1)
{
  id v2 = [self defaultCenter];
  [v2 postNotificationName:@"DOCQLPreviewFinishLoadingNotificationName" object:a1];

  sub_100046F64((uint64_t)v10);
  uint64_t v3 = v11;
  if (v11)
  {
    uint64_t v4 = v12;
    sub_1000A6B78(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    sub_10009B1B8((uint64_t)v10);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v10, &qword_100712EF8);
  }
  sub_100046F64((uint64_t)v10);
  uint64_t v5 = v11;
  if (v11)
  {
    uint64_t v6 = v12;
    sub_1000A6B78(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    sub_10009B1B8((uint64_t)v10);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v10, &qword_100712EF8);
  }
  sub_100046F64((uint64_t)v10);
  uint64_t v7 = v11;
  if (!v11) {
    return sub_1000CBBA4((uint64_t)v10, &qword_100712EF8);
  }
  uint64_t v8 = v12;
  sub_1000A6B78(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
  return sub_10009B1B8((uint64_t)v10);
}

uint64_t sub_100394A30(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = a2;
  uint64_t v7 = sub_1000CBE70(&qword_100712F18);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v58 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = *a1;
  uint64_t v17 = a4 + 16;
  id v18 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  uint64_t v68 = v8;
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v67 = v12;
  uint64_t v69 = v7;
  v19(v12, v70, v7);
  uint64_t v70 = a3;
  swift_retain_n();
  id v20 = v16;
  id v21 = Logger.logObject.getter();
  int v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    int v60 = v22;
    os_log_t v61 = v21;
    uint64_t v62 = v18;
    uint64_t v63 = v14;
    uint64_t v64 = v13;
    uint64_t v65 = v17;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    v72[0] = v59;
    *(_DWORD *)uint64_t v23 = 136316162;
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v19;
    uint64_t v71 = sub_10009B0E4(0xD000000000000022, 0x80000001005EE720, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2080;
    id v25 = v20;
    id v26 = [v25 description];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;

    uint64_t v71 = sub_10009B0E4(v27, v29, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    uint64_t v30 = v67;
    uint64_t v31 = v69;
    v24(v66, v67, v69);
    uint64_t v32 = String.init<A>(describing:)();
    uint64_t v71 = sub_10009B0E4(v32, v33, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v30, v31);
    *(_WORD *)(v23 + 32) = 2080;
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v35 = Strong;
      unsigned __int8 v36 = [Strong isBeingPresented];
    }
    else
    {
      unsigned __int8 v36 = 2;
    }
    uint64_t v37 = v63;
    LOBYTE(v71) = v36;
    sub_1000CBE70(&qword_100707C50);
    uint64_t v38 = String.init<A>(describing:)();
    uint64_t v71 = sub_10009B0E4(v38, v39, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unsigned __int8 v40 = 2;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 42) = 2080;
    swift_beginAccess();
    uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v41)
    {
      int v42 = v41;
      unsigned __int8 v40 = [v41 isBeingDismissed];
    }
    LOBYTE(v71) = v40;
    uint64_t v43 = String.init<A>(describing:)();
    uint64_t v71 = sub_10009B0E4(v43, v44, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v45 = v61;
    _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v60, "[Interaction] %s shared Quick Look currentPreviewItemIndex itemChangeObserver observed object: %s change: %s QLVC isBeingPresented: %s isBeingDismissed: %s", (uint8_t *)v23, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v62, v64);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }
  swift_beginAccess();
  uint64_t v46 = swift_unknownObjectWeakLoadStrong();
  if (v46)
  {
    uint64_t v47 = (void *)v46;
    sub_100046F64((uint64_t)v72);

    uint64_t v48 = v73;
    if (v73)
    {
      uint64_t v49 = v74;
      sub_1000A6B78(v72, v73);
      (*(void (**)(uint64_t, uint64_t))(v49 + 32))(v48, v49);
      sub_10009B1B8((uint64_t)v72);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v72, &qword_100712EF8);
    }
  }
  swift_beginAccess();
  uint64_t v50 = swift_unknownObjectWeakLoadStrong();
  if (v50)
  {
    unint64_t v51 = (void *)v50;
    sub_100046F64((uint64_t)v72);

    uint64_t v52 = v73;
    if (v73)
    {
      uint64_t v53 = v74;
      sub_1000A6B78(v72, v73);
      (*(void (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
      sub_10009B1B8((uint64_t)v72);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v72, &qword_100712EF8);
    }
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v55 = (void *)result;
    sub_100046F64((uint64_t)v72);

    uint64_t v56 = v73;
    if (v73)
    {
      uint64_t v57 = v74;
      sub_1000A6B78(v72, v73);
      (*(void (**)(uint64_t, uint64_t))(v57 + 40))(v56, v57);
      return sub_10009B1B8((uint64_t)v72);
    }
    else
    {
      return sub_1000CBBA4((uint64_t)v72, &qword_100712EF8);
    }
  }
  return result;
}

void sub_1003951A0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    if (a1)
    {
      static Logger.UI.getter();
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "[Interaction] Clearing lastOpenedItem in documentBrowser:didPickDocumentsAt: (opened in an other app)", v16, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      id v17 = [v13 configuration];
      id v18 = [v17 sceneIdentifier];

      id v19 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v18);
      id v20 = (void **)&v19[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      id v21 = *v20;
      void *v20 = 0;
      sub_1000D7C50(v21);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
      unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v23 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
      *(void *)(v23 + ((v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
      aBlock[4] = sub_10039E510;
      void aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A60B8;
      uint64_t v24 = _Block_copy(aBlock);
      id v25 = v13;
      swift_release();
      DOCRunInMainThread();

      _Block_release(v24);
    }
  }
}

void sub_100395520(uint64_t a1, void *a2)
{
  uint64_t v85 = a1;
  id v86 = a2;
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v80 - v13;
  __chkstk_darwin(v15);
  uint64_t v81 = (char *)&v80 - v16;
  __chkstk_darwin(v17);
  id v19 = (char *)&v80 - v18;
  static Logger.UI.getter();
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Interaction] update scene activation contditions", v22, 2u);
    swift_slowDealloc();
  }

  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v83 = v9 + 8;
  uint64_t v84 = v8;
  uint64_t v82 = v23;
  v23(v19, v8);
  uint64_t v24 = self;
  if ([v24 supportsQuickLookInSharedWindow]
    && (id v25 = [self sharedApplication],
        unsigned int v26 = [v25 supportsMultipleScenes],
        v25,
        v26)
    && (uint64_t v27 = (void *)sub_1003BDD24()) != 0)
  {
    unint64_t v28 = v27;
    if ([v27 delegate])
    {
      type metadata accessor for QuickLookSceneDelegate();
      if (swift_dynamicCastClass())
      {
        sub_1000CBE70((uint64_t *)&unk_1007087F0);
        unint64_t v29 = v28;
        uint64_t v30 = type metadata accessor for URL();
        uint64_t v31 = *(void *)(v30 - 8);
        unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1005A0030;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 16))(v33 + v32, v85, v30);
        sub_10044F364(v33);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        id v34 = v86;
        id v35 = [v86 viewIfLoaded];
        id v36 = [v35 window];

        id v37 = [v36 windowScene];
        sub_1003BD860(v29, v37);

        id v38 = [v34 configuration];
        id v39 = [v38 sceneIdentifier];

        unsigned __int8 v40 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v39);
        uint64_t v41 = (void **)&v40[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess();
        int v42 = *v41;
        *uint64_t v41 = 0;
        sub_1000D7C50(v42);

        uint64_t v43 = v81;
        static Logger.UI.getter();
        unint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "[Interaction] Clearing lastOpenedItem in documentBrowser:didPickDocumentsAt: (focus on existing window scene) ", v46, 2u);
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
        uint64_t v47 = v43;
        uint64_t v48 = v84;
LABEL_16:
        v82(v47, v48);
        return;
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v49 = [self sharedApplication];
    unsigned int v50 = [v49 supportsMultipleScenes];

    if (v50)
    {
      sub_100397430(v85);
      if (v51)
      {
        uint64_t v52 = v51;
        id v53 = v86;
        id v54 = [v86 viewIfLoaded];
        id v55 = [v54 window];

        id v56 = [v55 windowScene];
        sub_1003BD860(v52, v56);

        id v57 = [v53 configuration];
        id v58 = [v57 sceneIdentifier];

        uint64_t v59 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v58);
        int v60 = (void **)&v59[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
        swift_beginAccess();
        os_log_t v61 = *v60;
        *int v60 = 0;
        sub_1000D7C50(v61);

        static Logger.UI.getter();
        uint64_t v62 = Logger.logObject.getter();
        os_log_type_t v63 = static os_log_type_t.default.getter();
        BOOL v64 = os_log_type_enabled(v62, v63);
        uint64_t v65 = v84;
        if (v64)
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v66 = 0;
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "[Interaction] Clearing lastOpenedItem in documentBrowser:didPickDocumentsAt: (focus on existing scene)", v66, 2u);
          swift_slowDealloc();
        }

        uint64_t v47 = v14;
        uint64_t v48 = v65;
        goto LABEL_16;
      }
    }
    id v67 = [v86 viewIfLoaded];
    id v68 = [v67 window];

    id v69 = [v68 windowScene];
    uint64_t v70 = v84;
    if (v69
      && (URL.contentType.getter(),
          char v71 = UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)(),
          v69,
          sub_1000CBBA4((uint64_t)v7, &qword_100708110),
          (v71 & 1) != 0))
    {
      int v72 = [v24 supportsQuickLookInSharedWindow];
      char v73 = 1;
    }
    else
    {
      char v73 = 0;
      int v72 = 1;
    }
    uint64_t v74 = v82;
    static Logger.UI.getter();
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v77 = 0;
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "[Interaction] Opening in Quick Look", v77, 2u);
      swift_slowDealloc();
    }

    v74(v11, v70);
    uint64_t v78 = type metadata accessor for URL();
    uint64_t v79 = *(void *)(v78 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v4, v85, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v4, 0, 1, v78);
    sub_100393B30((uint64_t)v4, 1, v73, v72, 0);
    sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
  }
}

void sub_100395E58(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    if (a1)
    {
      id v14 = [Strong configuration];
      id v15 = [v14 sceneIdentifier];

      uint64_t v16 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v15);
      uint64_t v17 = (void **)&v16[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      uint64_t v18 = *v17;
      *uint64_t v17 = 0;
      sub_1000D7C50(v18);

      static Logger.UI.getter();
      id v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v19, v20))
      {
        os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[Interaction] Clearing lastOpenedItem in documentBrowser:didPickImportedURLs: (opened in an other app)", v21, 2u);
        swift_slowDealloc();
        unint64_t v22 = v13;
      }
      else
      {
        unint64_t v22 = v19;
        id v19 = v13;
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
      unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v13;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
      aBlock[4] = sub_10039E364;
      void aBlock[5] = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A6040;
      id v25 = _Block_copy(aBlock);
      unsigned int v26 = v13;
      swift_release();
      DOCRunInMainThread();

      _Block_release(v25);
    }
  }
}

uint64_t sub_1003961E0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_100708110);
  double v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 viewIfLoaded];
  id v12 = [v11 window];

  id v13 = [v12 windowScene];
  if (v13)
  {
    URL.contentType.getter();
    char v14 = UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)();

    sub_1000CBBA4((uint64_t)v10, &qword_100708110);
  }
  else
  {
    char v14 = 0;
  }
  int v15 = [self supportsQuickLookInSharedWindow];
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v6, a2, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v6, 0, 1, v16);
  sub_100393B30((uint64_t)v6, 1, v14 & 1, v15, 0);
  return sub_1000CBBA4((uint64_t)v6, &qword_1007076B0);
}

uint64_t sub_10039641C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  type metadata accessor for URL();
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

void sub_1003964A8(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100046F64((uint64_t)v19);
  if (v20)
  {
    sub_1000CBE70(&qword_100712F00);
    type metadata accessor for BrowserSceneDelegate();
    if (swift_dynamicCast())
    {
      id v9 = v18;
      id v10 = [v2 configuration];
      id v11 = [v10 sceneIdentifier];

      id v12 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v11);
      id v13 = (void **)&v12[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      char v14 = *v13;
      *id v13 = 0;
      sub_1000D7C50(v14);

      static Logger.UI.getter();
      int v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Interaction] Clearing lastOpenedItem in documentBrowser:didPickDocumentsAt: (focus on existing scene)", v17, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      sub_100257324(a1, a2 & 1);
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v19, &qword_100712EF8);
  }
}

uint64_t sub_1003966F0(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v7 = a1;
  id v8 = v1;
  id v9 = v7;
  id v10 = (char *)v8;
  id v11 = Logger.logObject.getter();
  int v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    int v37 = v12;
    uint64_t v40 = v4;
    uint64_t v41 = v3;
    uint64_t v13 = swift_slowAlloc();
    char v14 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v45[0] = v39;
    *(_DWORD *)uint64_t v13 = 136315650;
    v42[0] = sub_10009B0E4(0xD00000000000001FLL, 0x80000001005EE6B0, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2112;
    v42[0] = v9;
    id v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v38 = v14;
    *char v14 = v9;

    *(_WORD *)(v13 + 22) = 2080;
    sub_100046F64((uint64_t)v42);
    uint64_t v16 = v43;
    if (v43)
    {
      uint64_t v17 = v44;
      sub_1000A6B78(v42, v43);
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
      uint64_t v16 = v19;
      sub_10009B1B8((uint64_t)v42);
    }
    else
    {
      sub_1000CBBA4((uint64_t)v42, &qword_100712EF8);
      uint64_t v18 = 0;
    }
    v42[0] = v18;
    v42[1] = v16;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v20 = String.init<A>(describing:)();
    v42[0] = sub_10009B0E4(v20, v21, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v37, "[Interaction] %s controller: %@ scene: %s", (uint8_t *)v13, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  id v22 = [v10 configuration];
  id v23 = [v22 sceneIdentifier];

  uint64_t v24 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v23);
  id v25 = (void **)&v24[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  unsigned int v26 = *v25;
  *id v25 = 0;
  sub_1000D7C50(v26);

  uint64_t v27 = *(void **)&v10[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver];
  *(void *)&v10[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = 0;

  unint64_t v28 = *(void **)&v10[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  *(void *)&v10[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;

  sub_100046F64((uint64_t)v42);
  uint64_t v29 = v43;
  if (v43)
  {
    uint64_t v30 = v44;
    sub_1000A6B78(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v30 + 32))(v29, v30);
    sub_10009B1B8((uint64_t)v42);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v42, &qword_100712EF8);
  }
  sub_100046F64((uint64_t)v42);
  uint64_t v31 = v43;
  if (v43)
  {
    uint64_t v32 = v44;
    sub_1000A6B78(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
    sub_10009B1B8((uint64_t)v42);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v42, &qword_100712EF8);
  }
  sub_100046F64((uint64_t)v42);
  uint64_t v33 = v43;
  if (!v43) {
    return sub_1000CBBA4((uint64_t)v42, &qword_100712EF8);
  }
  uint64_t v34 = v44;
  sub_1000A6B78(v42, v43);
  (*(void (**)(uint64_t, uint64_t))(v34 + 40))(v33, v34);
  return sub_10009B1B8((uint64_t)v42);
}

id sub_100397090(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentLocationTitleObserver] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_quicklookStateRestorationActivityIdentifier];
  *(void *)uint64_t v5 = 0xD000000000000024;
  *((void *)v5 + 1) = 0x80000001005EE770;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration] = 0;
  if (a1)
  {
    v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DRIMainViewController();
  id v7 = [super initForOpeningFilesWithContentTypes:v6.super.isa];

  return v7;
}

id sub_1003971F8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentLocationTitleObserver] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_quicklookStateRestorationActivityIdentifier];
  *(void *)uint64_t v5 = 0xD000000000000024;
  *((void *)v5 + 1) = 0x80000001005EE770;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration] = 0;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DRIMainViewController();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id sub_100397358()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DRIMainViewController();
  [super dealloc];
}

uint64_t sub_100397428()
{
  return type metadata accessor for DRIMainViewController();
}

void sub_100397430(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v87 = (char *)v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  double v91 = (char *)v82 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  double v94 = (char *)v82 - v9;
  __chkstk_darwin(v8);
  id v11 = (char *)v82 - v10;
  uint64_t v12 = type metadata accessor for URL();
  v112[3] = v12;
  v112[4] = (uint64_t)&off_10069C8A0;
  uint64_t v13 = sub_100052C70(v112);
  char v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  uint64_t v90 = v13;
  v14(v13, a1, v12);
  static Logger.Application.getter();
  sub_1000D4774((uint64_t)v112, (uint64_t)v113);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    *(void *)&long long v106 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    v109[0] = sub_10009B0E4(0xD000000000000018, 0x80000001005EE7E0, (uint64_t *)&v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    sub_1000A6B78(v113, v114);
    v109[0] = URL.absoluteString.getter();
    v109[1] = v18;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v19 = String.init<A>(describing:)();
    v109[0] = sub_10009B0E4(v19, v20, (uint64_t *)&v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10009B1B8((uint64_t)v113);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s identifier: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10009B1B8((uint64_t)v113);
  }

  Swift::String v96 = *(void (**)(char *, uint64_t))(v3 + 8);
  v96(v11, v2);
  id v21 = [self sharedApplication];
  id v22 = [v21 connectedScenes];

  uint64_t v23 = sub_10009E6C4(0, &qword_100712FA0);
  sub_10039E59C();
  uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v98 = v2;
  if ((v24 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v24 = v113[0];
    uint64_t v26 = v113[1];
    uint64_t v27 = v113[2];
    uint64_t v28 = v114;
    uint64_t v29 = v115;
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v30 = -1 << *(unsigned char *)(v24 + 32);
    uint64_t v26 = v24 + 56;
    uint64_t v27 = ~v30;
    uint64_t v31 = -v30;
    if (v31 < 64) {
      uint64_t v32 = ~(-1 << v31);
    }
    else {
      uint64_t v32 = -1;
    }
    uint64_t v29 = v32 & *(void *)(v24 + 56);
  }
  os_log_t v101 = (os_log_t)(v24 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v95 = v27;
  uint64_t v102 = (unint64_t)(v27 + 64) >> 6;
  char v97 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v33 = (SEL *)&unk_1006E3000;
  *(void *)&long long v25 = 136315394;
  long long v93 = v25;
  unint64_t v92 = (unint64_t)"ailCallbackQueue";
  unint64_t v89 = 0x80000001005EE7E0;
  uint64_t v88 = (char *)&type metadata for Any + 8;
  uint64_t v100 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v99 = v24;
LABEL_13:
  uint64_t v34 = v28;
  unint64_t v35 = v29;
  if (v24 < 0)
  {
    do
    {
      uint64_t v37 = __CocoaSet.Iterator.next()();
      if (!v37) {
        goto LABEL_51;
      }
      *(void *)&long long v106 = v37;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v38 = (id)v109[0];
      swift_unknownObjectRelease();
      uint64_t v28 = v34;
      uint64_t v29 = v35;
      if (!v38) {
        goto LABEL_51;
      }
LABEL_38:
      id v42 = [v38 v33[241]];
      if (!v42
        || (id v103 = v42,
            sub_1000CBE70((uint64_t *)&unk_100712F08),
            sub_1000CBE70(&qword_100712F00),
            (swift_dynamicCast() & 1) == 0))
      {
        uint64_t v108 = 0;
        long long v106 = 0u;
        long long v107 = 0u;
LABEL_12:

        sub_1000CBBA4((uint64_t)&v106, &qword_100712EF8);
        goto LABEL_13;
      }
      if (!*((void *)&v107 + 1)) {
        goto LABEL_12;
      }
      uint64_t v43 = v23;
      sub_1001146DC(&v106, (uint64_t)v109);
      uint64_t v44 = v110;
      uint64_t v45 = v111;
      sub_1000A6B78(v109, v110);
      uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
      if (v47)
      {
        uint64_t v48 = v46;
        uint64_t v49 = v47;
        static Logger.Application.getter();
        sub_1000D4774((uint64_t)v112, (uint64_t)&v106);
        unsigned int v50 = Logger.logObject.getter();
        os_log_type_t v51 = static os_log_type_t.debug.getter();
        id v86 = v50;
        int v85 = v51;
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = swift_slowAlloc();
          uint64_t v83 = swift_slowAlloc();
          uint64_t v105 = v83;
          *(_DWORD *)uint64_t v52 = v93;
          uint64_t v53 = sub_10009B0E4(0xD000000000000018, v89, &v105);
          uint64_t v84 = v52;
          *(void *)(v52 + 4) = v53;
          *(_WORD *)(v52 + 12) = 2080;
          sub_1000A6B78(&v106, *((uint64_t *)&v107 + 1));
          id v103 = (id)URL.absoluteString.getter();
          uint64_t v104 = v54;
          sub_1000CBE70((uint64_t *)&unk_10070BD50);
          uint64_t v55 = String.init<A>(describing:)();
          v82[1] = v56;
          uint64_t v57 = sub_10009B0E4(v55, v56, &v105);
          id v58 = (uint8_t *)v84;
          *(void *)(v84 + 14) = v57;
          swift_bridgeObjectRelease();
          sub_10009B1B8((uint64_t)&v106);
          _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v85, "%s scene identifier: %s", v58, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10009B1B8((uint64_t)&v106);
        }

        v96(v91, v98);
        if (URL.absoluteString.getter() == v48 && v49 == v59)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0)
          {

            sub_10009B1B8((uint64_t)v109);
            uint64_t v33 = (SEL *)&unk_1006E3000;
            uint64_t v23 = v43;
            uint64_t v24 = v99;
            goto LABEL_13;
          }
        }
        id v68 = v87;
        static Logger.Application.getter();
        sub_1000D4774((uint64_t)v112, (uint64_t)&v106);
        id v69 = v38;
        uint64_t v70 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.debug.getter();
        int v72 = v71;
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v73 = swift_slowAlloc();
          os_log_t v101 = v70;
          uint64_t v74 = v73;
          Swift::String v96 = (void (*)(char *, uint64_t))swift_slowAlloc();
          uint64_t v102 = swift_slowAlloc();
          uint64_t v105 = v102;
          *(_DWORD *)uint64_t v74 = 136315906;
          LODWORD(v100) = v72;
          id v103 = (id)sub_10009B0E4(0xD000000000000018, v92 | 0x8000000000000000, &v105);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v74 + 12) = 2080;
          sub_1000A6B78(&v106, *((uint64_t *)&v107 + 1));
          id v103 = (id)URL.absoluteString.getter();
          uint64_t v104 = v75;
          sub_1000CBE70((uint64_t *)&unk_10070BD50);
          uint64_t v76 = String.init<A>(describing:)();
          id v103 = (id)sub_10009B0E4(v76, v77, &v105);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10009B1B8((uint64_t)&v106);
          *(_WORD *)(v74 + 22) = 2112;
          id v103 = v69;
          id v78 = v69;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)Swift::String v96 = v38;

          *(_WORD *)(v74 + 32) = 2080;
          id v103 = [v78 delegate];
          sub_1000CBE70(&qword_100712FB0);
          uint64_t v79 = String.init<A>(describing:)();
          id v103 = (id)sub_10009B0E4(v79, v80, &v105);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v81 = v101;
          _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v100, "%s SUCCESS for identifier: %s windowScene: %@ delegate: %s", (uint8_t *)v74, 0x2Au);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v97)(v87, v98);
        }
        else
        {

          sub_10009B1B8((uint64_t)&v106);
          v96(v68, v98);
        }
        sub_10026AD14();
        sub_10009B1B8((uint64_t)v109);
        goto LABEL_55;
      }

      sub_10009B1B8((uint64_t)v109);
      uint64_t v34 = v28;
      unint64_t v35 = v29;
      uint64_t v33 = (SEL *)&unk_1006E3000;
      uint64_t v23 = v43;
      uint64_t v24 = v99;
    }
    while (v99 < 0);
  }
  if (v35)
  {
    uint64_t v29 = (v35 - 1) & v35;
    unint64_t v36 = __clz(__rbit64(v35)) | (v34 << 6);
    uint64_t v28 = v34;
    goto LABEL_37;
  }
  uint64_t v39 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
    __break(1u);
    return;
  }
  if (v39 < v102)
  {
    unint64_t v40 = *(void *)(v26 + 8 * v39);
    uint64_t v28 = v34 + 1;
    if (v40) {
      goto LABEL_36;
    }
    uint64_t v28 = v34 + 2;
    if (v34 + 2 >= v102) {
      goto LABEL_51;
    }
    unint64_t v40 = *(void *)(v26 + 8 * v28);
    if (v40) {
      goto LABEL_36;
    }
    uint64_t v28 = v34 + 3;
    if (v34 + 3 >= v102) {
      goto LABEL_51;
    }
    unint64_t v40 = *(void *)(v26 + 8 * v28);
    if (v40) {
      goto LABEL_36;
    }
    uint64_t v28 = v34 + 4;
    if (v34 + 4 >= v102) {
      goto LABEL_51;
    }
    unint64_t v40 = *(void *)(v26 + 8 * v28);
    if (v40) {
      goto LABEL_36;
    }
    uint64_t v28 = v34 + 5;
    if (v34 + 5 >= v102) {
      goto LABEL_51;
    }
    unint64_t v40 = *(void *)(v26 + 8 * v28);
    if (v40) {
      goto LABEL_36;
    }
    uint64_t v28 = v34 + 6;
    if (v34 + 6 >= v102) {
      goto LABEL_51;
    }
    unint64_t v40 = *(void *)(v26 + 8 * v28);
    if (v40)
    {
LABEL_36:
      uint64_t v29 = (v40 - 1) & v40;
      unint64_t v36 = __clz(__rbit64(v40)) + (v28 << 6);
LABEL_37:
      id v38 = *(id *)(*(void *)(v24 + 48) + 8 * v36);
      if (v38) {
        goto LABEL_38;
      }
      goto LABEL_51;
    }
    uint64_t v41 = v34 + 7;
    while (v102 != v41)
    {
      unint64_t v40 = *(void *)(v26 + 8 * v41++);
      if (v40)
      {
        uint64_t v28 = v41 - 1;
        goto LABEL_36;
      }
    }
  }
LABEL_51:
  sub_10026AD14();
  os_log_t v61 = v94;
  static Logger.Application.getter();
  sub_1000D4774((uint64_t)v112, (uint64_t)v109);
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = swift_slowAlloc();
    id v103 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = v93;
    *(void *)&long long v106 = sub_10009B0E4(0xD000000000000018, v92 | 0x8000000000000000, (uint64_t *)&v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v64 + 12) = 2080;
    sub_1000A6B78(v109, v110);
    *(void *)&long long v106 = URL.absoluteString.getter();
    *((void *)&v106 + 1) = v65;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v66 = String.init<A>(describing:)();
    *(void *)&long long v106 = sub_10009B0E4(v66, v67, (uint64_t *)&v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10009B1B8((uint64_t)v109);
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "%s No existing scene for %s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10009B1B8((uint64_t)v109);
  }

  v96(v61, v98);
LABEL_55:
  sub_10009B1B8((uint64_t)v112);
}

void sub_10039832C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v104 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v107 = (char *)&v97 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v97 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v97 - v11;
  v128[3] = (id)sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  v128[4] = &off_10069C890;
  v128[0] = a1;
  id v13 = a1;
  static Logger.Application.getter();
  sub_1000D4774((uint64_t)v128, (uint64_t)v129);
  char v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v114 = v2;
  uint64_t v110 = v10;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v3;
    *(void *)&long long v122 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    v125[0] = sub_10009B0E4(0xD000000000000018, 0x80000001005EE7E0, (uint64_t *)&v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    id v19 = [*sub_1000A6B78(v129, v130) itemID];
    uint64_t v20 = FPItemID.identifierString.getter();
    uint64_t v22 = v21;

    v125[0] = v20;
    v125[1] = v22;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v23 = String.init<A>(describing:)();
    v125[0] = sub_10009B0E4(v23, v24, (uint64_t *)&v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10009B1B8((uint64_t)v129);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s identifier: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v112 = *(void (**)(char *, uint64_t))(v3 + 8);
    v112(v12, v114);
  }
  else
  {
    sub_10009B1B8((uint64_t)v129);

    id v112 = *(void (**)(char *, uint64_t))(v3 + 8);
    v112(v12, v2);
    uint64_t v18 = v3;
  }
  id v25 = [self sharedApplication];
  id v26 = [v25 connectedScenes];

  uint64_t v27 = sub_10009E6C4(0, &qword_100712FA0);
  sub_10039E59C();
  uint64_t v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v28 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v28 = v129[0];
    uint64_t v30 = v129[1];
    uint64_t v31 = v129[2];
    uint64_t v32 = v130;
    uint64_t v33 = v131;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = -1 << *(unsigned char *)(v28 + 32);
    uint64_t v30 = v28 + 56;
    uint64_t v31 = ~v34;
    uint64_t v35 = -v34;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    uint64_t v33 = v36 & *(void *)(v28 + 56);
  }
  os_log_t v117 = (os_log_t)(v28 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v111 = v31;
  uint64_t v118 = (unint64_t)(v31 + 64) >> 6;
  id v113 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v37 = (SEL *)&unk_1006E3000;
  *(void *)&long long v29 = 136315394;
  long long v109 = v29;
  unint64_t v108 = (unint64_t)"ailCallbackQueue";
  unint64_t v106 = 0x80000001005EE7E0;
  uint64_t v105 = (char *)&type metadata for Any + 8;
  char v116 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v115 = v28;
LABEL_13:
  uint64_t v38 = v32;
  unint64_t v39 = v33;
  if (v28 < 0)
  {
    do
    {
      uint64_t v41 = __CocoaSet.Iterator.next()();
      if (!v41) {
        goto LABEL_51;
      }
      *(void *)&long long v122 = v41;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v42 = (id)v125[0];
      swift_unknownObjectRelease();
      uint64_t v32 = v38;
      uint64_t v33 = v39;
      if (!v42) {
        goto LABEL_51;
      }
LABEL_38:
      id v46 = [v42 v37[241]];
      if (!v46
        || (id v119 = v46,
            sub_1000CBE70((uint64_t *)&unk_100712F08),
            sub_1000CBE70(&qword_100712F00),
            (swift_dynamicCast() & 1) == 0))
      {
        uint64_t v124 = 0;
        long long v122 = 0u;
        long long v123 = 0u;
LABEL_12:

        sub_1000CBBA4((uint64_t)&v122, &qword_100712EF8);
        goto LABEL_13;
      }
      if (!*((void *)&v123 + 1)) {
        goto LABEL_12;
      }
      uint64_t v47 = v27;
      sub_1001146DC(&v122, (uint64_t)v125);
      uint64_t v48 = v126;
      uint64_t v49 = v127;
      sub_1000A6B78(v125, v126);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
      if (v51)
      {
        uint64_t v52 = v50;
        uint64_t v53 = v51;
        static Logger.Application.getter();
        sub_1000D4774((uint64_t)v128, (uint64_t)&v122);
        uint64_t v54 = Logger.logObject.getter();
        os_log_type_t v55 = static os_log_type_t.debug.getter();
        id v103 = v54;
        LODWORD(v102) = v55;
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = swift_slowAlloc();
          uint64_t v100 = swift_slowAlloc();
          uint64_t v121 = v100;
          *(_DWORD *)uint64_t v56 = v109;
          uint64_t v57 = sub_10009B0E4(0xD000000000000018, v106, &v121);
          uint64_t v101 = v56;
          *(void *)(v56 + 4) = v57;
          *(_WORD *)(v56 + 12) = 2080;
          id v58 = [*sub_1000A6B78(&v122, *((uint64_t *)&v123 + 1)) itemID];
          id v99 = (id)FPItemID.identifierString.getter();
          uint64_t v98 = v59;

          id v119 = v99;
          uint64_t v120 = v98;
          sub_1000CBE70((uint64_t *)&unk_10070BD50);
          uint64_t v60 = String.init<A>(describing:)();
          id v99 = (id)v61;
          uint64_t v62 = sub_10009B0E4(v60, v61, &v121);
          os_log_type_t v63 = (uint8_t *)v101;
          *(void *)(v101 + 14) = v62;
          swift_bridgeObjectRelease();
          sub_10009B1B8((uint64_t)&v122);
          _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v102, "%s scene identifier: %s", v63, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10009B1B8((uint64_t)&v122);
        }

        v112(v107, v114);
        id v64 = [v128[0] itemID];
        uint64_t v102 = FPItemID.identifierString.getter();
        id v103 = v65;

        if (v102 == v52 && v53 == v103)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v66 & 1) == 0)
          {

            sub_10009B1B8((uint64_t)v125);
            uint64_t v37 = (SEL *)&unk_1006E3000;
            uint64_t v27 = v47;
            uint64_t v28 = v115;
            goto LABEL_13;
          }
        }
        uint64_t v79 = v104;
        static Logger.Application.getter();
        sub_1000D4774((uint64_t)v128, (uint64_t)&v122);
        id v80 = v42;
        os_log_t v81 = Logger.logObject.getter();
        os_log_type_t v82 = static os_log_type_t.debug.getter();
        int v83 = v82;
        if (os_log_type_enabled(v81, v82))
        {
          uint64_t v84 = swift_slowAlloc();
          os_log_t v117 = v81;
          uint64_t v85 = v84;
          id v112 = (void (*)(char *, uint64_t))swift_slowAlloc();
          uint64_t v118 = swift_slowAlloc();
          uint64_t v121 = v118;
          *(_DWORD *)uint64_t v85 = 136315906;
          id v119 = (id)sub_10009B0E4(0xD000000000000018, v108 | 0x8000000000000000, &v121);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v85 + 12) = 2080;
          id v86 = [*sub_1000A6B78(&v122, *((uint64_t *)&v123 + 1)) itemID];
          uint64_t v87 = FPItemID.identifierString.getter();
          LODWORD(v116) = v83;
          id v88 = (id)v87;
          uint64_t v90 = v89;

          id v119 = v88;
          uint64_t v120 = v90;
          sub_1000CBE70((uint64_t *)&unk_10070BD50);
          uint64_t v91 = String.init<A>(describing:)();
          id v119 = (id)sub_10009B0E4(v91, v92, &v121);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10009B1B8((uint64_t)&v122);
          *(_WORD *)(v85 + 22) = 2112;
          id v119 = v80;
          id v93 = v80;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)id v112 = v42;

          *(_WORD *)(v85 + 32) = 2080;
          id v119 = [v93 delegate];
          sub_1000CBE70(&qword_100712FB0);
          uint64_t v94 = String.init<A>(describing:)();
          id v119 = (id)sub_10009B0E4(v94, v95, &v121);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v96 = v117;
          _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v116, "%s SUCCESS for identifier: %s windowScene: %@ delegate: %s", (uint8_t *)v85, 0x2Au);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v113)(v104, v114);
        }
        else
        {

          sub_10009B1B8((uint64_t)&v122);
          v112(v79, v114);
        }
        sub_10026AD14();
        sub_10009B1B8((uint64_t)v125);
        goto LABEL_55;
      }

      sub_10009B1B8((uint64_t)v125);
      uint64_t v38 = v32;
      unint64_t v39 = v33;
      uint64_t v37 = (SEL *)&unk_1006E3000;
      uint64_t v27 = v47;
      uint64_t v28 = v115;
    }
    while (v115 < 0);
  }
  if (v39)
  {
    uint64_t v33 = (v39 - 1) & v39;
    unint64_t v40 = __clz(__rbit64(v39)) | (v38 << 6);
    uint64_t v32 = v38;
    goto LABEL_37;
  }
  uint64_t v43 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    return;
  }
  if (v43 < v118)
  {
    unint64_t v44 = *(void *)(v30 + 8 * v43);
    uint64_t v32 = v38 + 1;
    if (v44) {
      goto LABEL_36;
    }
    uint64_t v32 = v38 + 2;
    if (v38 + 2 >= v118) {
      goto LABEL_51;
    }
    unint64_t v44 = *(void *)(v30 + 8 * v32);
    if (v44) {
      goto LABEL_36;
    }
    uint64_t v32 = v38 + 3;
    if (v38 + 3 >= v118) {
      goto LABEL_51;
    }
    unint64_t v44 = *(void *)(v30 + 8 * v32);
    if (v44) {
      goto LABEL_36;
    }
    uint64_t v32 = v38 + 4;
    if (v38 + 4 >= v118) {
      goto LABEL_51;
    }
    unint64_t v44 = *(void *)(v30 + 8 * v32);
    if (v44) {
      goto LABEL_36;
    }
    uint64_t v32 = v38 + 5;
    if (v38 + 5 >= v118) {
      goto LABEL_51;
    }
    unint64_t v44 = *(void *)(v30 + 8 * v32);
    if (v44) {
      goto LABEL_36;
    }
    uint64_t v32 = v38 + 6;
    if (v38 + 6 >= v118) {
      goto LABEL_51;
    }
    unint64_t v44 = *(void *)(v30 + 8 * v32);
    if (v44)
    {
LABEL_36:
      uint64_t v33 = (v44 - 1) & v44;
      unint64_t v40 = __clz(__rbit64(v44)) + (v32 << 6);
LABEL_37:
      id v42 = *(id *)(*(void *)(v28 + 48) + 8 * v40);
      if (v42) {
        goto LABEL_38;
      }
      goto LABEL_51;
    }
    uint64_t v45 = v38 + 7;
    while (v118 != v45)
    {
      unint64_t v44 = *(void *)(v30 + 8 * v45++);
      if (v44)
      {
        uint64_t v32 = v45 - 1;
        goto LABEL_36;
      }
    }
  }
LABEL_51:
  sub_10026AD14();
  unint64_t v67 = v110;
  static Logger.Application.getter();
  sub_1000D4774((uint64_t)v128, (uint64_t)v125);
  id v68 = Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = swift_slowAlloc();
    os_log_type_t v71 = v67;
    id v119 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v70 = v109;
    *(void *)&long long v122 = sub_10009B0E4(0xD000000000000018, v108 | 0x8000000000000000, (uint64_t *)&v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v70 + 12) = 2080;
    id v72 = [*sub_1000A6B78(v125, v126) itemID];
    uint64_t v73 = FPItemID.identifierString.getter();
    uint64_t v75 = v74;

    *(void *)&long long v122 = v73;
    *((void *)&v122 + 1) = v75;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v76 = String.init<A>(describing:)();
    *(void *)&long long v122 = sub_10009B0E4(v76, v77, (uint64_t *)&v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10009B1B8((uint64_t)v125);
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "%s No existing scene for %s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v78 = v71;
  }
  else
  {
    sub_10009B1B8((uint64_t)v125);

    id v78 = v67;
  }
  v112(v78, v114);
LABEL_55:
  sub_10009B1B8((uint64_t)v128);
}

void sub_100399304(int a1, void *a2, void *a3, char a4)
{
  int v50 = a1;
  uint64_t v52 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v52 - 8);
  uint64_t v8 = __chkstk_darwin(v52);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v46 - v12;
  __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v46 - v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(unsigned char *)(v16 + 24) = a4;
  id v47 = a3;
  static Logger.Application.getter();
  uint64_t v17 = a2;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  uint64_t v20 = &off_100712000;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v51 = v7;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v48 = (void (*)(char *, uint64_t))v16;
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v49 = v13;
    id v54 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2080;
    id v54 = *(id *)&v17[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v24 = v54;
    sub_1000CBE70(&qword_100712EF0);
    uint64_t v25 = String.init<A>(describing:)();
    id v54 = (id)sub_10009B0E4(v25, v26, aBlock);
    id v13 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v20 = &off_100712000;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[Interaction] %s %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v16 = (uint64_t)v48;
    swift_slowDealloc();
    uint64_t v7 = v51;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v15, v52);
  uint64_t v28 = (char *)v20[438];
  long long v29 = *(void **)&v28[(void)v17];
  if (v29)
  {
    uint64_t v48 = v27;
    id v30 = v29;
    static Logger.Application.getter();
    uint64_t v31 = v17;
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v51 = v7;
      id v47 = v35;
      aBlock[0] = (uint64_t)v35;
      *(_DWORD *)uint64_t v34 = 136315394;
      uint64_t v49 = v13;
      id v54 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2080;
      id v54 = *(id *)&v28[(void)v17];
      id v36 = v54;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v37 = String.init<A>(describing:)();
      id v54 = (id)sub_10009B0E4(v37, v38, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v39 = v49;
    }
    else
    {

      unint64_t v39 = v13;
    }
    v48(v39, v52);
    unint64_t v44 = *(void **)&v28[(void)v17];
    *(void *)&v28[(void)v17] = 0;

    aBlock[4] = (uint64_t)sub_10039AF5C;
    void aBlock[5] = v16;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000666D8;
    uint64_t aBlock[3] = (uint64_t)&unk_1006A5D20;
    uint64_t v45 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v30 dismissViewControllerAnimated:v50 & 1 completion:v45];
    _Block_release(v45);
    swift_release();
  }
  else
  {
    static Logger.Application.getter();
    unint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v48 = v27;
      uint64_t v43 = (uint8_t *)v42;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      id v54 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[Interaction] %s no current preview controller, calling completion immediately", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v48(v10, v52);
    }
    else
    {

      v27(v10, v52);
    }
    sub_100394214(v47, a4 & 1);
    swift_release();
  }
}

void sub_1003999F4(int a1, void *a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  int v61 = a1;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v63 = (char *)&v55 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  uint64_t v57 = a4;
  *(void *)(v19 + 32) = a5;
  int v58 = a6;
  *(unsigned char *)(v19 + 40) = a6;
  uint64_t v56 = a3;
  uint64_t v59 = a5;
  swift_bridgeObjectRetain();
  static Logger.Application.getter();
  uint64_t v20 = a2;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  uint64_t v23 = &off_100712000;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v62 = v11;
    uint64_t v25 = v24;
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    id v64 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    id v64 = *(id *)&v20[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v26 = v64;
    sub_1000CBE70(&qword_100712EF0);
    uint64_t v27 = String.init<A>(describing:)();
    id v64 = (id)sub_10009B0E4(v27, v28, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v23 = &off_100712000;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[Interaction] %s %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v62;
    swift_slowDealloc();
  }
  else
  {
  }
  long long v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v18, v11);
  id v30 = (char *)v23[438];
  uint64_t v31 = *(void **)&v30[(void)v20];
  uint64_t v32 = v63;
  if (v31)
  {
    uint64_t v60 = v31;
    static Logger.Application.getter();
    os_log_type_t v33 = v20;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      os_log_type_t v55 = v29;
      uint64_t v37 = v36;
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315394;
      uint64_t v62 = v11;
      id v64 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2080;
      id v64 = *(id *)&v30[(void)v20];
      id v38 = v64;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v39 = String.init<A>(describing:)();
      uint64_t v59 = v12;
      id v64 = (id)sub_10009B0E4(v39, v40, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v55(v63, v62);
    }
    else
    {

      v29(v32, v11);
    }
    char v45 = v61;
    NSString v46 = v60;
    id v47 = *(void **)&v30[(void)v20];
    *(void *)&v30[(void)v20] = 0;

    os_log_type_t v69 = sub_10039E71C;
    uint64_t v70 = v19;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v66 = 1107296256;
    unint64_t v67 = sub_1000666D8;
    id v68 = &unk_1006A62C0;
    uint64_t v48 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v46 dismissViewControllerAnimated:v45 & 1 completion:v48];
  }
  else
  {
    os_log_type_t v41 = v60;
    static Logger.Application.getter();
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      os_log_type_t v55 = v29;
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)unint64_t v44 = 136315138;
      id v64 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[Interaction] %s no current preview controller, calling completion immediately", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v55(v41, v11);
    }
    else
    {

      v29(v41, v11);
    }
    uint64_t v49 = v59;
    char v50 = v58;
    uint64_t v52 = v56;
    uint64_t v51 = v57;
    if (*(void *)&v56[OBJC_IVAR____TtC5Files14DOCApplication_currentTestName + 8])
    {
      swift_bridgeObjectRetain();
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v46 = 0;
    }
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v52;
    *(void *)(v53 + 24) = v51;
    *(void *)(v53 + 32) = v49;
    *(unsigned char *)(v53 + 40) = v50;
    os_log_type_t v69 = sub_10039E7A4;
    uint64_t v70 = v53;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v66 = 1107296256;
    unint64_t v67 = sub_1000666D8;
    id v68 = &unk_1006A6298;
    uint64_t v48 = _Block_copy(&aBlock);
    id v54 = v52;
    swift_bridgeObjectRetain();
    swift_release();
    [v54 finishedTest:v46 waitForCommit:1 extraResults:0 withTeardownBlock:v48];
  }
  _Block_release(v48);
  swift_release();
}

void sub_10039A1F4(int a1, void *a2, void *a3)
{
  int v51 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void **)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v48 = (void (*)(char *, uint64_t))((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = a3;
  uint64_t v14 = a3;
  static Logger.Application.getter();
  uint64_t v15 = a2;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  uint64_t v18 = &off_100712000;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    id v49 = v6;
    uint64_t v50 = v5;
    id v54 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2080;
    id v54 = *(id *)&v15[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v20 = v54;
    sub_1000CBE70(&qword_100712EF0);
    id v47 = v14;
    uint64_t v21 = String.init<A>(describing:)();
    id v54 = (id)sub_10009B0E4(v21, v22, aBlock);
    id v23 = v49;
    uint64_t v5 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[Interaction] %s %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v18 = &off_100712000;
    swift_slowDealloc();

    uint64_t v6 = v23;
    uint64_t v24 = v23;
    uint64_t v14 = v47;
  }
  else
  {

    uint64_t v24 = v6;
  }
  uint64_t v25 = (void (*)(char *, uint64_t))v24[1];
  v25(v13, v5);
  id v26 = (char *)v18[438];
  uint64_t v27 = *(void **)&v26[(void)v15];
  if (v27)
  {
    id v28 = v27;
    static Logger.Application.getter();
    long long v29 = v15;
    id v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      id v49 = v28;
      uint64_t v33 = v32;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v48 = v25;
      aBlock[0] = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v50 = v5;
      id v54 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 12) = 2080;
      id v54 = *(id *)&v26[(void)v15];
      id v35 = v54;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v36 = String.init<A>(describing:)();
      id v47 = v11;
      id v54 = (id)sub_10009B0E4(v36, v37, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v28 = v49;
      swift_slowDealloc();

      v48(v47, v50);
    }
    else
    {

      v25(v11, v5);
    }
    os_log_type_t v43 = *(void **)&v26[(void)v15];
    *(void *)&v26[(void)v15] = 0;

    aBlock[4] = (uint64_t)sub_10039E974;
    void aBlock[5] = v52;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000666D8;
    uint64_t aBlock[3] = (uint64_t)&unk_1006A5CD0;
    unint64_t v44 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v28 dismissViewControllerAnimated:v51 & 1 completion:v44];
    _Block_release(v44);
    swift_release();
  }
  else
  {
    id v38 = (char *)v48;
    static Logger.Application.getter();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v39, v40))
    {
      id v49 = v6;
      os_log_type_t v41 = v25;
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      id v54 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[Interaction] %s no current preview controller, calling completion immediately", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v41(v38, v5);
    }
    else
    {

      v25(v38, v5);
    }
    id v45 = [v14 effectiveFullBrowser];
    [v45 dismissSearch];

    sub_100392174(v14);
    swift_release();
  }
}

void sub_10039A90C(uint64_t a1, char a2, int a3, char *a4, void *a5)
{
  os_log_type_t v40 = a4;
  int v39 = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(char **)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  uint64_t v38 = a1;
  if (a2)
  {
    id v16 = a5;
  }
  else
  {
    id v17 = a5;
    if (a1)
    {
      uint64_t v18 = v17;
      id v19 = [v40 presentedViewController];
      if (v19)
      {
        id v20 = v19;
        sub_10009E6C4(0, (unint64_t *)&unk_100712EE0);
        unsigned int v21 = [v20 isKindOfClass:swift_getObjCClassFromMetadata()];

        if (v21)
        {
          os_log_type_t v40 = v9;
          static Logger.Application.getter();
          unint64_t v22 = Logger.logObject.getter();
          os_log_type_t v23 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v22, v23))
          {
            uint64_t v24 = swift_slowAlloc();
            uint64_t aBlock = swift_slowAlloc();
            *(_DWORD *)uint64_t v24 = 136315394;
            uint64_t v41 = sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE630, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v24 + 12) = 2080;
            uint64_t v41 = v38;
            uint64_t v25 = String.init<A>(describing:)();
            uint64_t v37 = v8;
            uint64_t v41 = sub_10009B0E4(v25, v26, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s options: %s satisfied. Document scanner already present. Skipping dismissal", (uint8_t *)v24, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*((void (**)(char *, uint64_t))v40 + 1))(v14, v37);
          }
          else
          {

            (*((void (**)(char *, uint64_t))v40 + 1))(v14, v8);
          }
          id v35 = [v18 effectiveFullBrowser];
          [v35 dismissSearch];

          sub_100392174(v18);
          goto LABEL_14;
        }
      }
    }
  }
  static Logger.Application.getter();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v36 = v15;
    uint64_t v37 = v8;
    uint64_t aBlock = sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE630, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t aBlock = v38;
    LOBYTE(v43) = a2 & 1;
    sub_1000CBE70(&qword_100712ED8);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10009B0E4(v30, v31, &v41);
    uint64_t v15 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s options: %s empty or not satisfied. Dismissing presented view controllers", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v9 + 1))(v12, v37);
  }
  else
  {

    (*((void (**)(char *, uint64_t))v9 + 1))(v12, v8);
  }
  id v32 = v40;
  if (*(void *)&v40[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController])
  {
    id v33 = a5;
    sub_10039A1F4(v39 & 1, v32, v33);
    swift_release();

    return;
  }
  uint64_t v46 = sub_10039AF1C;
  uint64_t v47 = v15;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  unint64_t v44 = sub_1000666D8;
  id v45 = &unk_1006A5C80;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v32 dismissAllPresentedViewControllers:v39 & 1 completion:v34];
  _Block_release(v34);

LABEL_14:
  swift_release();
}

uint64_t sub_10039AEE4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039AF1C()
{
  return sub_100392118(*(void **)(v0 + 16));
}

uint64_t sub_10039AF24()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_10039AF5C()
{
  sub_100394214(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_10039AF68()
{
  sub_1003947B4(*(void **)(v0 + 16));
}

const char *sub_10039AF70()
{
  return "currentPreviewItemIndex";
}

uint64_t sub_10039AF84()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039AFBC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039AFFC(void **a1, uint64_t a2)
{
  return sub_100394A30(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10039B004()
{
  return sub_10039489C(*(void *)(v0 + 16));
}

uint64_t sub_10039B00C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_10039B0F4(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);

  sub_1003928D4(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_10039B1AC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (v4 + *(void *)(v2 + 64) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10039B2A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  int v9 = *(unsigned __int8 *)(v6 + 8);

  sub_100392FB4(v4, v5, v7, v9, v8);
}

void sub_10039B34C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void **)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(objc_class **)v6;
  uint64_t v8 = *(void **)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8));
  char v9 = *(unsigned char *)(v6 + 8);

  sub_100393194(v4, v5, v7, v9, v8);
}

uint64_t sub_10039B3FC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7 + 8, v5);
}

void sub_10039B4C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void **)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = *(objc_class **)v6;
  uint64_t v8 = *(void *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFFFF8));
  char v9 = *(unsigned char *)(v6 + 8);

  sub_100393438(v8, v4, v5, v7, v9);
}

id sub_10039B574@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 currentPreviewItemIndex];
  *a2 = result;
  return result;
}

id sub_10039B5A8(void *a1, id *a2)
{
  return [*a2 setCurrentPreviewItemIndex:*a1];
}

uint64_t sub_10039B5BC()
{
  return sub_100393974();
}

uint64_t sub_10039B5C4(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1000D1744;
  return sub_1003918C8(a1, a2, v2);
}

uint64_t sub_10039B670(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_10000CB70;
  return sub_100391C74(a1, a2, v2);
}

uint64_t sub_10039B71C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10039B764(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_10039B7B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1000D1744;
  return sub_100391150(a1, a2, v2);
}

unint64_t sub_10039B864()
{
  unint64_t result = qword_100712F78;
  if (!qword_100712F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712F78);
  }
  return result;
}

uint64_t sub_10039B8B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10039B918(int a1, void *a2, void *a3, void *a4)
{
  int v51 = a1;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(char **)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v47 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  id v16 = a3;
  id v50 = a4;
  static Logger.Application.getter();
  id v17 = a2;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v52 = v15;
    uint64_t v21 = v20;
    uint64_t v48 = (void (*)(char *, char *))swift_slowAlloc();
    aBlock[0] = (uint64_t)v48;
    *(_DWORD *)uint64_t v21 = 136315394;
    id v55 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v47 = v21 + 14;
    id v55 = *(id *)&v17[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v22 = v55;
    sub_1000CBE70(&qword_100712EF0);
    uint64_t v23 = String.init<A>(describing:)();
    id v55 = (id)sub_10009B0E4(v23, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[Interaction] %s %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v15 = v52;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v25 = (void (*)(char *, uint64_t))*((void *)v8 + 1);
  v25(v14, v7);
  uint64_t v26 = OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController;
  uint64_t v27 = *(void **)&v17[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
  if (v27)
  {
    id v50 = v27;
    static Logger.Application.getter();
    os_log_type_t v28 = v17;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v52 = v15;
      uint64_t v32 = v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v48 = (void (*)(char *, char *))v25;
      aBlock[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      id v49 = (char *)v7;
      id v55 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2080;
      id v55 = *(id *)&v17[v26];
      id v34 = v55;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v35 = String.init<A>(describing:)();
      id v55 = (id)sub_10009B0E4(v35, v36, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v15 = v52;
      swift_slowDealloc();

      v48(v53, v49);
    }
    else
    {

      v25(v53, v7);
    }
    uint64_t v42 = *(void **)&v17[v26];
    *(void *)&v17[v26] = 0;

    aBlock[4] = (uint64_t)sub_10039E924;
    void aBlock[5] = v15;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000666D8;
    uint64_t aBlock[3] = (uint64_t)&unk_1006A6180;
    uint64_t v43 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    unint64_t v44 = v50;
    [v50 dismissViewControllerAnimated:v51 & 1 completion:v43];
    _Block_release(v43);
    swift_release();
  }
  else
  {
    uint64_t v37 = v49;
    static Logger.Application.getter();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v53 = v8;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v48 = (void (*)(char *, char *))v25;
      uint64_t v41 = (uint8_t *)v40;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      id v55 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[Interaction] %s no current preview controller, calling completion immediately", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v48(v37, (char *)v7);
    }
    else
    {

      v25(v37, v7);
    }
    id v45 = *(void **)&v16[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    if (v45)
    {
      id v46 = [v45 effectiveFullBrowser];
      [v46 dismissSearch];
    }
    sub_100252D64(v50, (uint64_t)v16);
    swift_release();
  }
}

void sub_10039C060(uint64_t a1, char a2, int a3, char *a4, char *a5, void *a6)
{
  uint64_t v53 = a4;
  int v52 = a3;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v47 - v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = a6;
  uint64_t v51 = a1;
  if (a2)
  {
    uint64_t v18 = a5;
    id v19 = a6;
    uint64_t v20 = v18;
    id v21 = v19;
  }
  else
  {
    uint64_t v47 = v16;
    id v22 = a5;
    id v23 = a6;
    id v49 = v22;
    id v48 = v23;
    if (a1)
    {
      id v24 = [v53 presentedViewController];
      if (v24)
      {
        uint64_t v25 = v24;
        sub_10009E6C4(0, (unint64_t *)&unk_100712EE0);
        unsigned int v26 = [v25 isKindOfClass:swift_getObjCClassFromMetadata()];

        if (v26)
        {
          uint64_t v27 = v47;
          static Logger.Application.getter();
          os_log_type_t v28 = Logger.logObject.getter();
          os_log_type_t v29 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v30 = swift_slowAlloc();
            uint64_t v31 = swift_slowAlloc();
            uint64_t v50 = v10;
            uint64_t aBlock = v31;
            *(_DWORD *)uint64_t v30 = 136315394;
            uint64_t v54 = sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE630, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v30 + 12) = 2080;
            uint64_t v54 = v51;
            uint64_t v32 = String.init<A>(describing:)();
            uint64_t v54 = sub_10009B0E4(v32, v33, &aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s options: %s satisfied. Document scanner already present. Skipping dismissal", (uint8_t *)v30, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v50);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v10);
          }
          unint64_t v44 = v49;
          id v45 = *(void **)&v49[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
          if (v45)
          {
            id v46 = [v45 effectiveFullBrowser];
            [v46 dismissSearch];
          }
          sub_100252D64(v48, (uint64_t)v44);

          goto LABEL_14;
        }
      }
    }
  }
  static Logger.Application.getter();
  id v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    id v49 = a5;
    uint64_t v54 = v37;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v50 = v10;
    uint64_t aBlock = sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE630, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2080;
    uint64_t aBlock = v51;
    LOBYTE(v56) = a2 & 1;
    sub_1000CBE70(&qword_100712ED8);
    uint64_t v38 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10009B0E4(v38, v39, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s options: %s empty or not satisfied. Dismissing presented view controllers", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v50);
    a5 = v49;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  id v40 = v53;
  if (!*(void *)&v53[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController])
  {
    uint64_t v59 = sub_10039E648;
    uint64_t v60 = v17;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v56 = 1107296256;
    uint64_t v57 = sub_1000666D8;
    int v58 = &unk_1006A6130;
    uint64_t v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v40 dismissAllPresentedViewControllers:v52 & 1 completion:v43];
    _Block_release(v43);

LABEL_14:
    swift_release();
    goto LABEL_15;
  }
  uint64_t v41 = a5;
  id v42 = a6;
  sub_10039B918(v52 & 1, v40, v41, v42);
  swift_release();

LABEL_15:
}

void sub_10039C6A4(int a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  int v62 = a1;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(char **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  id v64 = (char *)&v59 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a3;
  v18[3] = a4;
  uint64_t v65 = (uint64_t)v18;
  v18[4] = a5;
  id v19 = a3;
  uint64_t v60 = a5;
  int v61 = v19;
  swift_retain();
  static Logger.Application.getter();
  uint64_t v20 = a2;
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  id v23 = &off_100712000;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v59 = v13;
    uint64_t v25 = v24;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v63 = v9;
    id v67 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    id v67 = *(id *)&v20[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController];
    id v26 = v67;
    sub_1000CBE70(&qword_100712EF0);
    uint64_t v27 = String.init<A>(describing:)();
    id v67 = (id)sub_10009B0E4(v27, v28, aBlock);
    uint64_t v9 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v23 = &off_100712000;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "[Interaction] %s %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v13 = v59;
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_type_t v29 = (void (*)(char *, uint64_t))*((void *)v10 + 1);
  v29(v17, v9);
  uint64_t v30 = (char *)v23[438];
  uint64_t v31 = *(void **)&v30[(void)v20];
  if (v31)
  {
    id v32 = v31;
    unint64_t v33 = v64;
    static Logger.Application.getter();
    id v34 = v20;
    os_log_type_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v63 = v9;
      uint64_t v38 = v37;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v59 = (char *)v29;
      uint64_t v60 = v39;
      aBlock[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315394;
      int v61 = v10;
      id v67 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 12) = 2080;
      id v67 = *(id *)&v30[(void)v20];
      id v40 = v67;
      sub_1000CBE70(&qword_100712EF0);
      uint64_t v41 = String.init<A>(describing:)();
      id v67 = (id)sub_10009B0E4(v41, v42, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[Interaction] %s calling dismiss on: %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v59)(v33, v63);
    }
    else
    {

      v29(v33, v9);
    }
    char v47 = v62;
    id v48 = *(void **)&v30[(void)v20];
    *(void *)&v30[(void)v20] = 0;

    aBlock[4] = (uint64_t)sub_10039E66C;
    void aBlock[5] = v65;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000666D8;
    uint64_t aBlock[3] = (uint64_t)&unk_1006A6220;
    id v49 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v32 dismissViewControllerAnimated:v47 & 1 completion:v49];
    _Block_release(v49);
    swift_release();
  }
  else
  {
    static Logger.Application.getter();
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v59 = (char *)v29;
      id v46 = (uint8_t *)v45;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v46 = 136315138;
      id v67 = (id)sub_10009B0E4(0xD00000000000003FLL, 0x80000001005EE670, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "[Interaction] %s no current preview controller, calling completion immediately", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v59)(v13, v9);
    }
    else
    {

      v29(v13, v9);
    }
    uint64_t v50 = v61;
    uint64_t v51 = *(void **)&v61[OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController];
    if (v51)
    {
      int v52 = (void *)swift_allocObject();
      uint64_t v53 = v60;
      v52[2] = a4;
      v52[3] = v53;
      v52[4] = v50;
      id v54 = v50;
      swift_retain();
      id v55 = v51;
      id v56 = [v55 namedLocationResolver];
      uint64_t v57 = (void *)swift_allocObject();
      _OWORD v57[2] = v55;
      v57[3] = sub_10026ADA0;
      v57[4] = v52;
      id v58 = v55;
      swift_retain();
      sub_1003FF82C(a4, (uint64_t)sub_10026ADF4, (uint64_t)v57);
      swift_release();

      swift_release();
    }
    swift_release();
  }
}

uint64_t sub_10039CE88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - v13;
  double v17 = __chkstk_darwin(v15);
  id v19 = (char *)&v37 - v18;
  if (!*(void *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v11 + 56))(v9, 1, 1, v10, v17);
    return sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
  }
  uint64_t v47 = v4;
  id v48 = v6;
  id v49 = v16;
  uint64_t v20 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = a1 + ((v20 + 32) & ~v20);
  os_log_type_t v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v22(v9, v21, v10, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
  }
  uint64_t v45 = v20;
  id v46 = v2;
  uint64_t v41 = ~v20;
  unint64_t v42 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v43 = v11 + 32;
  v42(v19, v9, v10);
  id v23 = v48;
  uint64_t v24 = v19;
  static Logger.UI.getter();
  os_log_type_t v44 = (void (*)(uint64_t, char *, uint64_t))v22;
  ((void (*)(char *, char *, uint64_t))v22)(v14, v19, v10);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    os_log_t v39 = v25;
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v52 = v38;
    uint64_t v37 = v27;
    *(_DWORD *)uint64_t v27 = 136315138;
    id v40 = (void (*)(char *, uint64_t))(v27 + 4);
    sub_10039B71C((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v51 = sub_10009B0E4(v28, v29, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v40 = *(void (**)(char *, uint64_t))(v11 + 8);
    v40(v14, v10);
    uint64_t v25 = v39;
    _os_log_impl((void *)&_mh_execute_header, v39, v26, "[Interaction] documentBrowser:didPickDocumentsAt: %s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v40 = *(void (**)(char *, uint64_t))(v11 + 8);
    v40(v14, v10);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v47);
  uint64_t v31 = self;
  id v32 = [v46 configuration];
  [v31 supportsQuickLookInsteadOfOpen:v32];

  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v34 = v49;
  v44((uint64_t)v49, v24, v10);
  uint64_t v35 = (v45 + 24) & v41;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v33;
  v42((char *)(v36 + v35), v34, v10);
  swift_retain();
  static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)();
  swift_release();
  v40(v24, v10);
  return swift_release();
}

uint64_t sub_10039D448(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  double v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - v10;
  if (*(void *)(a1 + 16))
  {
    uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
    v13(v4, a1 + ((v12 + 32) & ~v12), v5, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      uint64_t v25 = ~v12;
      uint64_t v14 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
      uint64_t v26 = v6 + 32;
      uint64_t v27 = v14;
      id v23 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      v14((uint64_t)v11, v4, v5);
      uint64_t v15 = self;
      uint64_t v16 = (void (*)(char *, char *, uint64_t))v13;
      id v17 = [v28 configuration];
      unsigned int v24 = [v15 supportsQuickLookInsteadOfOpen:v17];

      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v19 = v23;
      v16(v23, v11, v5);
      uint64_t v20 = (v12 + 24) & v25;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v18;
      v27(v21 + v20, v19, v5);
      swift_retain();
      static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return swift_release();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v6 + 56))(v4, 1, 1, v5, v9);
  }
  return sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
}

void *sub_10039D78C()
{
  type metadata accessor for DOCPreviewController();
  uint64_t v0 = swift_dynamicCastClass();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)v2;
  swift_unknownObjectRetain();
  id v4 = [v3 fpItem];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = 0;
    uint64_t v7 = v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v8 = *(void *)(v7 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v10 = *(void (**)(uint64_t, void *, void (*)(void *), uint64_t, uint64_t, uint64_t))(v8 + 8);
      swift_retain();
      v10(v1, v5, sub_10039E274, v6, ObjectType, v8);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
    }
    swift_unknownObjectRelease();
    swift_beginAccess();
    uint64_t v11 = *(void **)(v6 + 16);
    id v12 = v11;
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v11;
}

uint64_t sub_10039D934()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - v5;
  type metadata accessor for DOCPreviewController();
  if (!swift_dynamicCastClass()) {
    return 1;
  }
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (!v7) {
    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  uint64_t v8 = (void *)v7;
  swift_unknownObjectRetain();
  id v9 = [v8 fpItem];
  if (!v9)
  {
    swift_unknownObjectRelease();
    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  uint64_t v10 = v9;
  if (([v9 isWritable] & 1) == 0)
  {
    swift_unknownObjectRelease();

    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  id v11 = [v10 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  static UTType.movie.getter();
  LOBYTE(v11) = UTType.conforms(to:)();

  swift_unknownObjectRelease();
  id v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v6, v0);
  if (v11) {
    return 2;
  }
  else {
    return 1;
  }
}

void *sub_10039DB2C()
{
  type metadata accessor for DOCPreviewController();
  uint64_t v0 = swift_dynamicCastClass();
  if (!v0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source);
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v2 == 255) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v3 = *v1;
  uint64_t v4 = (void *)v1[1];
  sub_10039E1B8(*v1, v4, v2 & 1);
  if (sub_10052A6F4(v3, v4, v2 & 1))
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000CBE70(&qword_100708BE0);
    uint64_t v5 = (void *)swift_allocObject();
    *((_OWORD *)v5 + 1) = xmmword_1005A0030;
    type metadata accessor for ActivityType(0);
    v5[7] = v6;
    v5[4] = UIActivityTypeCopyToPasteboard;
    uint64_t v7 = UIActivityTypeCopyToPasteboard;
  }
  sub_10039E204(v3, v4, v2);
  return v5;
}

void sub_10039DC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  type metadata accessor for DOCPreviewController();
  if (swift_dynamicCastClass())
  {
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      swift_unknownObjectRetain();
      id v9 = [v8 fpItem];
      if (v9)
      {
        uint64_t v10 = v9;
        BOOL v20 = URL.startAccessingSecurityScopedResource()();
        id v11 = [objc_allocWithZone((Class)NSOperationQueue) init];
        [v11 setMaxConcurrentOperationCount:8];
        NSString v12 = String._bridgeToObjectiveC()();
        [v11 setName:v12];

        uint64_t v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v4);
        unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = v13;
        (*(void (**)(unint64_t, unsigned char *, uint64_t))(v5 + 32))(v15 + v14, &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
        unint64_t v16 = v15 + ((v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
        *(void *)unint64_t v16 = v10;
        *(unsigned char *)(v16 + 8) = v20;
        aBlock[4] = sub_10039E120;
        void aBlock[5] = v15;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_1000666D8;
        uint64_t aBlock[3] = &unk_1006A5FA0;
        id v17 = _Block_copy(aBlock);
        id v18 = v10;
        swift_release();
        [v11 addOperationWithBlock:v17];
        _Block_release(v17);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

id sub_10039DF44(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookPreviewItemObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentLocationTitleObserver] = 0;
  unint64_t v3 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_currentQuickLookURL];
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files21DRIMainViewController_quicklookStateRestorationActivityIdentifier];
  *(void *)uint64_t v5 = 0xD000000000000024;
  *((void *)v5 + 1) = 0x80000001005EE770;
  *(void *)&v1[OBJC_IVAR____TtC5Files21DRIMainViewController____lazy_storage___internalConfiguration] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DRIMainViewController();
  return [super initWithConfiguration:a1];
}

uint64_t sub_10039E038()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 9, v5);
}

uint64_t sub_10039E120()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = *(void **)v5;
  int v7 = *(unsigned __int8 *)(v5 + 8);

  return sub_10052EF18(v3, v4, v6, v7);
}

id sub_10039E1B8(uint64_t a1, void *a2, char a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return a2;
  }
  else
  {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_10039E204(uint64_t a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    sub_10039E21C(a1, a2, a3 & 1);
  }
}

void sub_10039E21C(uint64_t a1, void *a2, char a3)
{
  swift_bridgeObjectRelease();
  if (a3)
  {
  }
}

void sub_10039E274(void *a1)
{
  sub_100530D98(a1, v1);
}

uint64_t sub_10039E280(uint64_t a1)
{
  return sub_10039E3E4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100395E58);
}

uint64_t sub_10039E298()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10039E364()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1003961E0(v2, v3);
}

uint64_t sub_10039E3CC(uint64_t a1)
{
  return sub_10039E3E4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003951A0);
}

uint64_t sub_10039E3E4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_10039E46C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10039E510()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100395520(v0 + v2, v3);
}

unint64_t sub_10039E59C()
{
  unint64_t result = qword_100712FA8;
  if (!qword_100712FA8)
  {
    sub_10009E6C4(255, &qword_100712FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FA8);
  }
  return result;
}

uint64_t sub_10039E608()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10039E648()
{
  sub_100252CE8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10039E650()
{
  return sub_10039E748((void (*)(void))&_swift_release, 40);
}

uint64_t sub_10039E66C()
{
  return sub_1002525E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_10039E678()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10039E6B8()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10039E700()
{
  return sub_10039E748((void (*)(void))&_swift_bridgeObjectRelease, 41);
}

void sub_10039E71C()
{
  sub_100128B74(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_10039E72C()
{
  return sub_10039E748((void (*)(void))&_swift_bridgeObjectRelease, 41);
}

uint64_t sub_10039E748(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10039E7A4()
{
  return sub_100128CEC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

ValueMetadata *type metadata accessor for DRIMainViewController.DOCPresentedViewControllerDismissalOptions()
{
  return &type metadata for DRIMainViewController.DOCPresentedViewControllerDismissalOptions;
}

unint64_t sub_10039E7C8()
{
  unint64_t result = qword_100712FB8;
  if (!qword_100712FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FB8);
  }
  return result;
}

unint64_t sub_10039E820()
{
  unint64_t result = qword_100712FC0;
  if (!qword_100712FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FC0);
  }
  return result;
}

unint64_t sub_10039E878()
{
  unint64_t result = qword_100712FC8;
  if (!qword_100712FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FC8);
  }
  return result;
}

unint64_t sub_10039E8D0()
{
  unint64_t result = qword_100712FD0;
  if (!qword_100712FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100712FD0);
  }
  return result;
}

BOOL sub_10039E9B4(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  BOOL result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    sub_100365984();
    id v6 = v2;
    id v7 = v3;
    char v8 = static NSObject.== infix(_:_:)();

    return v8 & 1;
  }
  return result;
}

uint64_t sub_10039EA30()
{
  uint64_t result = *(void *)(v0 + 80);
  if (result)
  {
    if (![(id)result contentType]) {
      return 1;
    }
    uint64_t result = *(void *)(v0 + 80);
    if (result)
    {
      uint64_t result = (uint64_t)[(id)result contentType];
      if (result != 1)
      {
        uint64_t result = *(void *)(v0 + 80);
        if (result)
        {
          if (![(id)result contentType]) {
            return 1;
          }
          uint64_t result = *(void *)(v0 + 80);
          if (result)
          {
            uint64_t result = (uint64_t)[(id)result contentType];
            if (result != 1)
            {
              uint64_t result = *(void *)(v0 + 80);
              if (result)
              {
                if ([(id)result contentType])
                {
                  uint64_t result = *(void *)(v0 + 80);
                  if (result) {
                    return [(id)result contentType] == (id)1;
                  }
                  return result;
                }
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t (*sub_10039EADC())()
{
  return j__swift_endAccess;
}

uint64_t sub_10039EB30()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 40;
  swift_beginAccess();
  sub_10011458C(v0 + 40, (uint64_t)v22);
  uint64_t v3 = v23;
  sub_1001145F4((uint64_t)v22);
  if (!v3)
  {
    uint64_t v4 = *(void **)(v1 + 32);
    uint64_t v5 = type metadata accessor for DOCFileProviderSyncStateProvider();
    swift_allocObject();
    id v6 = v4;
    uint64_t v7 = sub_100548A54(v6, 1);

    uint64_t v23 = v5;
    unsigned int v24 = &off_1006B6BA8;
    v22[0] = v7;
    sub_100114654((uint64_t)v22, (uint64_t)v19);
    swift_beginAccess();
    sub_1001144AC((uint64_t)v19, v2);
    swift_endAccess();
  }
  id v9 = sub_10039EADC();
  if (*(void *)(v8 + 24))
  {
    uint64_t v10 = v8;
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = *(void *)(v10 + 24);
    uint64_t v13 = *(void *)(v10 + 32);
    sub_10003CCE8(v10, v12);
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 32))(sub_10039F368, v11, v12, v13);
  }
  ((void (*)(void *, void))v9)(v22, 0);
  sub_10011458C(v2, (uint64_t)v22);
  if (!v23) {
    return sub_1001145F4((uint64_t)v22);
  }
  sub_1000D4774((uint64_t)v22, (uint64_t)v19);
  sub_1001145F4((uint64_t)v22);
  uint64_t v14 = v20;
  uint64_t v15 = v21;
  sub_1000A6B78(v19, v20);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  id v17 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_retain();
  v17(sub_10039F360, v16, v14, v15);
  swift_release_n();
  return sub_10009B1B8((uint64_t)v19);
}

uint64_t sub_10039ED7C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result + 40;
    swift_beginAccess();
    sub_10011458C(v1, (uint64_t)v9);
    if (v10)
    {
      sub_1000D4774((uint64_t)v9, (uint64_t)v6);
      sub_1001145F4((uint64_t)v9);
      uint64_t v2 = v7;
      uint64_t v3 = v8;
      sub_1000A6B78(v6, v7);
      uint64_t v4 = swift_allocObject();
      swift_weakInit();
      uint64_t v5 = *(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v3 + 16);
      swift_retain();
      v5(sub_10039F360, v4, v2, v3);
      swift_release_n();
      sub_10009B1B8((uint64_t)v6);
    }
    else
    {
      sub_1001145F4((uint64_t)v9);
    }
    return swift_release();
  }
  return result;
}

void sub_10039EEBC(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)(Strong + 80);
    *(void *)(Strong + 80) = a1;
    id v4 = a1;

    sub_10039EF3C();
    swift_release();
  }
}

void sub_10039EF3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 80);
  if (v2
    && (![v2 contentType] || (uint64_t v3 = *(void **)(v0 + 80)) != 0
                                         && [v3 contentType] == (id)1))
  {
    id v4 = *(void **)(v0 + 80);
    if (v4) {
      id v5 = v4;
    }
  }
  else
  {
    id v4 = 0;
  }
  id v6 = *(void **)(v0 + 88);
  if (v6 == (void *)1) {
    goto LABEL_9;
  }
  if (!v4)
  {
    if (!v6) {
      return;
    }
    goto LABEL_9;
  }
  if (!v6)
  {
LABEL_9:
    *(void *)(v1 + 88) = v4;
    id v13 = v4;
    sub_1000D8158(v6);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = Strong;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      *(void *)(v9 + 24) = v4;
      aBlock[4] = sub_10039F320;
      void aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A63C8;
      uint64_t v10 = _Block_copy(aBlock);
      id v11 = v13;
      swift_unknownObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v10);
      swift_unknownObjectRelease();

      return;
    }
    goto LABEL_14;
  }
  sub_100365984();
  sub_1000D8148(v6);
  id v13 = v4;
  char v12 = static NSObject.== infix(_:_:)();
  sub_1000D8158(v6);

  if ((v12 & 1) == 0)
  {
    id v6 = *(void **)(v1 + 88);
    goto LABEL_9;
  }
LABEL_14:
}

uint64_t sub_10039F114()
{
  sub_10003A094((uint64_t)(v0 + 2));

  sub_1001145F4((uint64_t)(v0 + 5));
  sub_1000D8158(v0[11]);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCFileProviderSyncStateHeaderViewModel()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for DOCFileProviderSyncStateHeaderViewModel.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for DOCFileProviderSyncStateHeaderViewModel.State(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for DOCFileProviderSyncStateHeaderViewModel.State(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFileProviderSyncStateHeaderViewModel.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSyncStateHeaderViewModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateHeaderViewModel.State()
{
  return &type metadata for DOCFileProviderSyncStateHeaderViewModel.State;
}

uint64_t sub_10039F2E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039F320()
{
  return sub_1003EE05C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10039F328()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10039F360(void *a1)
{
}

uint64_t sub_10039F368()
{
  return sub_10039ED7C();
}

uint64_t DOCUncheckedSendable.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 88), a1);
  return v2;
}

uint64_t DOCUncheckedSendable.init(_:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 88), a1);
  return v1;
}

uint64_t DOCUncheckedSendable.performAsyncThrowing(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_10039F54C, 0, 0);
}

uint64_t sub_10039F54C()
{
  uint64_t v1 = (int *)v0[2];
  (*(void (**)(void, void, void))(v0[6] + 16))(v0[7], v0[4] + *(void *)(*(void *)v0[4] + 88), v0[5]);
  id v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_10039F654;
  uint64_t v3 = v0[7];
  return v5(v3);
}

uint64_t sub_10039F654()
{
  uint64_t v2 = *(void *)(*v1 + 56);
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *v1;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_10039F7FC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_10039F7FC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DOCUncheckedSendable.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t DOCUncheckedSendable.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t DOCWeakUncheckedSendable.__allocating_init(_:)()
{
  uint64_t v0 = sub_10039FA54();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DOCWeakUncheckedSendable.init(_:)()
{
  uint64_t v0 = sub_10039FA1C();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t DOCWeakUncheckedSendable.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_10039FA1C()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_10039FA54()
{
  type metadata accessor for DOCWeakUncheckedSendable();
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_10039FAA8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCUncheckedSendable()
{
  return sub_1000D21B0();
}

uint64_t sub_10039FB54()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DOCWeakUncheckedSendable()
{
  return sub_1000D21B0();
}

void sub_10039FBB0(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void **)&v1[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*v4)
  {
    if (!a1) {
      goto LABEL_9;
    }
    type metadata accessor for DOCBrowserContainerController();
    id v6 = v5;
    a1 = a1;
    char v7 = static NSObject.== infix(_:_:)();

    if (v7) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  id v8 = a1;
  if (sub_10039FDBC(v8))
  {
    [v8 doc_removeFromParentWithRemoveSubviewBlock:0];
    id v9 = [v8 viewIfLoaded];
    [v9 removeFromSuperview];
  }
  uint64_t v5 = *v4;
  if (*v4)
  {
LABEL_9:
    id v10 = v5;
    id v11 = [v2 contentView];
    id v12 = [v10 view];
    if (v12)
    {
      id v13 = v12;
      [v11 addSubview:v12];

      id v14 = [v10 view];
      if (v14)
      {
        uint64_t v15 = v14;
        id v16 = [v2 contentView];
        [v16 bounds];
        double v18 = v17;
        double v20 = v19;
        double v22 = v21;
        double v24 = v23;

        [v15 setFrame:v18, v20, v22, v24];
        sub_10039FE98();
        sub_1003A00E0(0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10039FDBC(void *a1)
{
  id v2 = [a1 viewIfLoaded];
  id v3 = [v2 superview];

  id v4 = [v1 contentView];
  id v5 = v4;
  if (v3)
  {
    if (!v4)
    {
      char v7 = 0;
      goto LABEL_8;
    }
    sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    id v6 = v3;
    char v7 = static NSObject.== infix(_:_:)();
  }
  else
  {
    if (!v4)
    {
      char v7 = 1;
      return v7 & 1;
    }
    char v7 = 0;
  }
  id v3 = v5;
LABEL_8:

  return v7 & 1;
}

void sub_10039FE98()
{
  unint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_separatorView;
  id v3 = [*(id *)&v0[OBJC_IVAR____TtC5Files17DOCColumnViewCell_separatorView] superview];
  if (!v3) {
    goto LABEL_3;
  }
  id v4 = v3;
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  id v5 = v1;
  id v6 = v4;
  LOBYTE(v4) = static NSObject.== infix(_:_:)();

  if ((v4 & 1) == 0)
  {
LABEL_3:
    id v7 = [v1 contentView];
    [v7 addSubview:*(void *)&v1[v2]];
  }
  uint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1003A1AD4;
  *(void *)(v10 + 24) = v9;
  void v14[4] = sub_1000879B8;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100087990;
  void v14[3] = &unk_1006A6628;
  id v11 = _Block_copy(v14);
  id v12 = v1;
  swift_retain();
  swift_release();
  [(id)v8 performWithoutAnimation:v11];
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    id v13 = [v12 contentView];
    [v13 bringSubviewToFront:*(void *)&v1[v2]];
    swift_release();
  }
}

void sub_1003A00E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v110 = v4;
  uint64_t v111 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v107 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  id v14 = (char *)&v107 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  double v17 = (char *)&v107 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  double v20 = (char *)&v107 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  double v23 = (char *)&v107 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v107 - v24;
  if (a1)
  {
    type metadata accessor for DOCItemCollectionCell();
    uint64_t v26 = (void *)swift_dynamicCastClass();
    if (v26) {
      id v27 = a1;
    }
    id v28 = *(void **)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1005A04F0;
    *(void *)(v29 + 32) = a1;
    v117[0] = v29;
    specialized Array._endMutation()();
    id v30 = a1;
    id v31 = v28;
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v31 setPreferredFocusEnvironments:isa];

    static Logger.UI.getter();
    id v33 = v26;
    id v34 = v30;
    uint64_t v35 = v33;
    id v36 = v34;
    uint64_t v37 = Logger.logObject.getter();
    int v38 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      long long v107 = v37;
      LODWORD(v108) = v38;
      uint64_t v39 = swift_slowAlloc();
      id v40 = (void *)swift_slowAlloc();
      id v109 = (id)swift_slowAlloc();
      v117[0] = (uint64_t)v109;
      *(_DWORD *)uint64_t v39 = 136315650;
      uint64_t v116 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 12) = 2112;
      uint64_t v116 = (uint64_t)v36;
      id v41 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v40 = a1;

      *(_WORD *)(v39 + 22) = 2080;
      if (v26 && (uint64_t v42 = (*(uint64_t (**)(void))((swift_isaMask & *v35) + 0x1F8))()) != 0)
      {
        uint64_t v43 = (void *)v42;
        uint64_t v44 = (uint64_t)sub_10009B780();
        unint64_t v46 = v45;
        swift_bridgeObjectRetain();

        uint64_t v47 = v107;
      }
      else
      {
        uint64_t v47 = v107;
        unint64_t v46 = 0xE900000000000065;
        uint64_t v44 = 0x6C746974206C696ELL;
      }
      uint64_t v116 = sub_10009B0E4(v44, v46, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v108, "%s 1 found cell provided: %@. %s", (uint8_t *)v39, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v111 + 8))(v25, v110);
    return;
  }
  id v48 = (void *)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
  swift_beginAccess();
  if (*v48
    && (id v49 = (void **)(*v48 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController),
        swift_beginAccess(),
        (uint64_t v50 = *v49) != 0)
    && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v51 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v52 = (char *)v51;
    id v53 = v50;
    id v54 = sub_1001B9BE0();
    if (v54)
    {
      id v55 = v54;
      id v109 = v53;
      static Logger.UI.getter();
      id v56 = v55;
      uint64_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        v115[0] = v108;
        *(_DWORD *)uint64_t v59 = 136315394;
        v114[0] = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, v115);
        uint64_t v60 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v59 + 12) = 2080;
        uint64_t v61 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v56) + 0x1F8))(v60);
        if (v61)
        {
          int v62 = (void *)v61;
          uint64_t v63 = (uint64_t)sub_10009B780();
          unint64_t v65 = v64;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v63 = 0x6C746974206C696ELL;
          unint64_t v65 = 0xE900000000000065;
        }
        v114[0] = sub_10009B0E4(v63, v65, v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s 2 itemCollectionVC found preferredFocusCell cell: %s", (uint8_t *)v59, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v111 + 8))(v23, v110);
      id v93 = *(void **)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide);
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v94 = swift_allocObject();
      *(_OWORD *)(v94 + 16) = xmmword_1005A04F0;
      *(void *)(v94 + 32) = v56;
      v115[0] = v94;
      specialized Array._endMutation()();
      unint64_t v95 = v56;
      id v96 = v93;
      sub_1000CBE70((uint64_t *)&unk_10070D080);
      Class v97 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v96 setPreferredFocusEnvironments:v97];

      return;
    }
    os_log_type_t v71 = v53;
    id v72 = &v52[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v72 == 2 && ([v52 isEditing] & 1) == 0)
    {
      uint64_t v73 = *(void *)&v52[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode];
      if (v73)
      {
        swift_unknownObjectRetain();
        static Logger.UI.getter();
        swift_unknownObjectRetain_n();
        uint64_t v74 = Logger.logObject.getter();
        os_log_type_t v75 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = swift_slowAlloc();
          v114[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v76 = 136315394;
          uint64_t v113 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v76 + 12) = 2080;
          uint64_t v113 = v73;
          swift_unknownObjectRetain();
          sub_1000CBE70((uint64_t *)&unk_100706730);
          uint64_t v77 = String.init<A>(describing:)();
          uint64_t v113 = sub_10009B0E4(v77, v78, v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v74, v75, "%s 2 itemCollectionVC found selectedChildNode but preferredFocusCell was nil. This is an error. Node: %s", (uint8_t *)v76, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v111 + 8))(v20, v110);
        return;
      }
    }
    uint64_t v79 = &v52[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    swift_beginAccess();
    unint64_t v80 = *((void *)v79 + 1);
    if (v80 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v101 >= 1)
      {
LABEL_30:
        unint64_t v81 = *((void *)v79 + 1);
        if (v81 >> 62)
        {
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_32:
            if (*(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              unint64_t v83 = *(void *)(v81 + 32);
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v84 = sub_1001DB1A4(v83);
              swift_unknownObjectRelease();
              if (v84)
              {
                uint64_t v85 = *(void **)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide);
                sub_1000CBE70((uint64_t *)&unk_1007084E0);
                uint64_t v86 = swift_allocObject();
                *(_OWORD *)(v86 + 16) = xmmword_1005A04F0;
                *(void *)(v86 + 32) = v84;
                uint64_t v113 = v86;
                specialized Array._endMutation()();
                id v87 = v85;
                id v88 = v84;
                sub_1000CBE70((uint64_t *)&unk_10070D080);
                Class v89 = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v87 setPreferredFocusEnvironments:v89];

                static Logger.UI.getter();
                uint64_t v90 = Logger.logObject.getter();
                os_log_type_t v91 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v90, v91))
                {
                  unint64_t v92 = (uint8_t *)swift_slowAlloc();
                  uint64_t v113 = swift_slowAlloc();
                  *(_DWORD *)unint64_t v92 = 136315138;
                  uint64_t v112 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, &v113);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  _os_log_impl((void *)&_mh_execute_header, v90, v91, "%s 3.1 itemCollectionVC found the first cell", v92, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                }
                (*(void (**)(char *, uint64_t))(v111 + 8))(v17, v110);
              }
              else
              {
                static Logger.UI.getter();
                uint64_t v98 = Logger.logObject.getter();
                os_log_type_t v99 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v98, v99))
                {
                  uint64_t v100 = (uint8_t *)swift_slowAlloc();
                  uint64_t v113 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v100 = 136315138;
                  uint64_t v112 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, &v113);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  _os_log_impl((void *)&_mh_execute_header, v98, v99, "%s 3.2 itemCollectionVC found no cell", v100, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }

                (*(void (**)(char *, uint64_t))(v111 + 8))(v14, v110);
              }
              return;
            }
LABEL_53:
            __break(1u);
            return;
          }
        }
        else
        {
          uint64_t v82 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v82) {
            goto LABEL_32;
          }
        }
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_53;
      }
    }
    else if (*(uint64_t *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
      goto LABEL_30;
    }
    static Logger.UI.getter();
    uint64_t v102 = Logger.logObject.getter();
    os_log_type_t v103 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = (uint8_t *)swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      *(_DWORD *)uint64_t v104 = 136315138;
      uint64_t v112 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, &v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "%s 4 itemCollectionVC found no cell", v104, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v111 + 8))(v11, v110);
    id v105 = *(id *)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide);
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    Class v106 = Array._bridgeToObjectiveC()().super.isa;
    [v105 setPreferredFocusEnvironments:v106];
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v66, v67))
    {
      id v68 = (uint8_t *)swift_slowAlloc();
      v115[0] = swift_slowAlloc();
      *(_DWORD *)id v68 = 136315138;
      v114[0] = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005EE900, v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s 5 itemCollectionVC found no cell", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v111 + 8))(v8, v110);
    id v69 = *(id *)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide);
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    Class v70 = Array._bridgeToObjectiveC()().super.isa;
    [v69 setPreferredFocusEnvironments:v70];
  }
}

char *sub_1003A11C4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController] = 0;
  uint64_t v10 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide;
  id v11 = objc_allocWithZone((Class)UIFocusGuide);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_separatorView;
  *(void *)&v12[v13] = [objc_allocWithZone((Class)DOCSeparatorView) init];

  v37.receiver = v12;
  v37.super_class = ObjectType;
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  id v15 = objc_allocWithZone((Class)UIView);
  uint64_t v16 = (char *)v14;
  id v17 = [v15 init];
  [v16 setBackgroundView:v17];

  [v16 setClipsToBounds:1];
  uint64_t v18 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide;
  [v16 addLayoutGuide:*(void *)&v16[OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide]];
  id v19 = *(id *)&v16[v18];
  sub_1000CBE70((uint64_t *)&unk_10070D080);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v19 setPreferredFocusEnvironments:isa];

  uint64_t v21 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1005A1560;
  id v23 = [*(id *)&v16[v18] leadingAnchor];
  id v24 = [v16 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v22 + 32) = v25;
  id v26 = [*(id *)&v16[v18] trailingAnchor];
  id v27 = [v16 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v22 + 40) = v28;
  id v29 = [*(id *)&v16[v18] topAnchor];
  id v30 = [v16 topAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v22 + 48) = v31;
  id v32 = [*(id *)&v16[v18] bottomAnchor];
  id v33 = [v16 bottomAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v22 + 56) = v34;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 activateConstraints:v35];

  [v16 setHoverStyle:0];
  return v16;
}

void sub_1003A15F8()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  uint64_t v1 = (id *)&v0[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
  swift_beginAccess();
  if (!*v1) {
    goto LABEL_4;
  }
  id v2 = [*v1 view];
  if (v2)
  {
    id v3 = v2;
    [v0 frame];
    [v3 setFrame:0.0, 0.0];

LABEL_4:
    sub_10039FE98();
    sub_1003A00E0(0);
    return;
  }
  __break(1u);
}

id sub_1003A1700(char *a1)
{
  id v2 = self;
  id v3 = [a1 traitCollection];
  [v2 separatorThicknessForTraitCollection:v3];
  double v5 = v4;

  [a1 bounds];
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat rect = v12;
  uint64_t v13 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_separatorView;
  [*(id *)&a1[OBJC_IVAR____TtC5Files17DOCColumnViewCell_separatorView] frame];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  if (UIView.doc_isRTL.getter())
  {
    double v22 = 0.0;
  }
  else
  {
    v35.origin.x = v7;
    v35.origin.y = v9;
    v35.size.width = v11;
    v35.size.height = rect;
    double v32 = v11;
    double v23 = v9;
    double v24 = v7;
    double v25 = v5;
    double MaxX = CGRectGetMaxX(v35);
    v36.origin.x = v15;
    v36.origin.y = v17;
    v36.size.width = v19;
    v36.size.height = v21;
    double v22 = MaxX - CGRectGetWidth(v36);
    double v5 = v25;
    CGFloat v7 = v24;
    CGFloat v9 = v23;
    CGFloat v11 = v32;
  }
  [a1 safeAreaInsets:v32];
  double v28 = v27;
  v37.origin.x = v7;
  v37.origin.y = v9;
  v37.size.width = v11;
  v37.size.height = rect;
  double Height = CGRectGetHeight(v37);
  id v30 = *(void **)&a1[v13];

  return [v30 setFrame:v22, v28, v5, Height];
}

void sub_1003A1894()
{
  id v2 = (id *)(v0 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
  swift_beginAccess();
  if (*v2)
  {
    id v3 = *v2;
    char v4 = sub_10039FDBC(v3);

    id v5 = *v2;
    if ((v4 & 1) != 0 && v5)
    {
      id v6 = v5;
      [v6 doc_removeFromParentWithRemoveSubviewBlock:0];
      sub_10033681C(0);

      id v5 = *v2;
    }
  }
  else
  {
    id v5 = 0;
  }
  id *v2 = 0;
  sub_10039FBB0(v5);
}

uint64_t type metadata accessor for DOCColumnViewCell()
{
  return self;
}

uint64_t sub_1003A1A9C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003A1AD4()
{
  return sub_1003A1700(*(char **)(v0 + 16));
}

uint64_t sub_1003A1ADC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1003A1AEC(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController] = 0;
  uint64_t v4 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_navigationFocusGuide;
  id v5 = objc_allocWithZone((Class)UIFocusGuide);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC5Files17DOCColumnViewCell_separatorView;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)DOCSeparatorView) init];

  v9.receiver = v6;
  v9.super_class = ObjectType;
  uint64_t result = [super initWithCoder:a1];
  if (result)
  {

    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A1C08()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1003A1C2C()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1003A1C60()
{
  uint64_t v0 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v0 - 8);
  v12[0] = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10001AF94(v10, static CompressionFormat.typeDisplayRepresentation);
  sub_10009D098(v10, (uint64_t)static CompressionFormat.typeDisplayRepresentation);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t CompressionFormat.typeDisplayRepresentation.unsafeMutableAddressor()
{
  if (qword_100705100 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();

  return sub_10009D098(v0, (uint64_t)static CompressionFormat.typeDisplayRepresentation);
}

uint64_t static CompressionFormat.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100705100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)static CompressionFormat.typeDisplayRepresentation);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static CompressionFormat.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_100705100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)static CompressionFormat.typeDisplayRepresentation);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static CompressionFormat.typeDisplayRepresentation.modify())()
{
  if (qword_100705100 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_10009D098(v0, (uint64_t)static CompressionFormat.typeDisplayRepresentation);
  swift_beginAccess();
  return j__swift_endAccess;
}

Files::CompressionFormat_optional __swiftcall CompressionFormat.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068AC50, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = Files_CompressionFormat_appleArchive;
  }
  else {
    v4.value = Files_CompressionFormat_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static CompressionFormat.allCases.getter()
{
  return &off_10068ACA0;
}

uint64_t CompressionFormat.rawValue.getter(char a1)
{
  if (a1) {
    return 0x637241656C707061;
  }
  else {
    return 7367034;
  }
}

uint64_t sub_1003A22A4(char *a1, char *a2)
{
  return sub_1004C1784(*a1, *a2);
}

Swift::Int sub_1003A22B0()
{
  return Hasher._finalize()();
}

uint64_t sub_1003A2334()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003A23A4()
{
  return Hasher._finalize()();
}

uint64_t sub_1003A2424@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068AC50, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1003A2484(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7367034;
  if (*v1) {
    uint64_t v2 = 0x637241656C707061;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xEC00000065766968;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1003A24C4(uint64_t a1)
{
  unint64_t v2 = sub_1003A5314();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1003A2510(uint64_t a1)
{
  unint64_t v2 = sub_1003A5270();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1003A255C(void *a1@<X8>)
{
  *a1 = &off_10068ACC8;
}

uint64_t sub_1003A256C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_100737430);
  sub_10009D098(v6, (uint64_t)qword_100737430);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_1003A2784()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for IntentDialog();
  sub_10001AF94(v7, qword_100737448);
  sub_10009D098(v7, (uint64_t)qword_100737448);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  return IntentDialog.init(_:)();
}

uint64_t sub_1003A29E4()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007133E8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_1007133F0);
  __chkstk_darwin(v1);
  sub_1003810D8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005EED60;
  v2._uint64_t countAndFlagsBits = 0xD000000000000024;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_1007133F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

uint64_t sub_1003A2B9C()
{
  swift_getKeyPath();
  sub_1003810D8();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A0C30;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_1003A2C9C()
{
  id result = [self defaultManager];
  qword_100713310 = (uint64_t)result;
  return result;
}

uint64_t sub_1003A2CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = sub_1000CBE70(&qword_1007133C0);
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v6 = sub_1000CBE70(&qword_1007133C8);
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v7 = sub_1000CBE70(&qword_1007133D0);
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DOCFileEntity();
  v4[29] = v8;
  v4[30] = *(void *)(v8 - 8);
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  sub_1000CBE70((uint64_t *)&unk_100707AE0);
  v4[33] = swift_task_alloc();
  return _swift_task_switch(sub_1003A2EFC, 0, 0);
}

uint64_t sub_1003A2EFC()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 136);
  *(void *)(v0 + 32) = *(void *)(v0 + 152);
  *(void *)(v0 + 272) = sub_1003A5778();
  uint64_t v1 = (void *)ProgressReportingIntent.progress.getter();
  [v1 setTotalUnitCount:0];

  IntentParameter.wrappedValue.getter();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 240);
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    do
    {
      uint64_t v8 = *(void *)(v0 + 256);
      sub_1001173A0(v6, v8);
      id v9 = *(id *)(v8 + *(int *)(v5 + 32));
      sub_100117404(v8);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += v7;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 232);
  uint64_t v11 = *(void *)(v0 + 240);
  IntentParameter.wrappedValue.getter();
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v12);
  uint64_t v14 = *(void *)(v0 + 264);
  if (v13)
  {
    sub_100338FF8(*(void *)(v0 + 264));
    id v15 = 0;
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 232);
    sub_1001173A0(*(void *)(v0 + 264), v16);
    sub_100338FF8(v14);
    id v15 = *(id *)(v16 + *(int *)(v17 + 32));
    sub_100117404(v16);
  }
  id v30 = v15;
  *(void *)(v0 + 280) = v15;
  IntentParameter.wrappedValue.getter();
  int v18 = *(unsigned __int8 *)(v0 + 97);
  if (qword_100705118 != -1) {
    swift_once();
  }
  if (v18) {
    uint64_t v19 = 4;
  }
  else {
    uint64_t v19 = 0;
  }
  uint64_t v21 = *(void *)(v0 + 192);
  uint64_t v20 = *(void *)(v0 + 200);
  uint64_t v22 = *(void *)(v0 + 176);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 160);
  uint64_t v23 = *(void *)(v0 + 168);
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v26 = (void *)swift_task_alloc();
  _OWORD v26[2] = v25;
  v26[3] = _swiftEmptyArrayStorage;
  v26[4] = v30;
  v26[5] = v19;
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v24);
  AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  AsyncThrowingStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v31);
  *(void *)(v0 + 288) = 0;
  double v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v27;
  *double v27 = v0;
  v27[1] = sub_1003A32B4;
  uint64_t v28 = *(void *)(v0 + 208);
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 88, 0, 0, v28, v0 + 120);
}

uint64_t sub_1003A32B4()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003A37C4;
  }
  else {
    uint64_t v2 = sub_1003A33C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003A33C8()
{
  double v1 = *(double *)(v0 + 88);
  int v2 = *(unsigned __int8 *)(v0 + 96);
  if (v2 != 255)
  {
    uint64_t v3 = *(void *)(v0 + 304);
    static Task<>.checkCancellation()();
    if (v3)
    {
      uint64_t v5 = *(void **)(v0 + 280);
      uint64_t v4 = *(void **)(v0 + 288);
      (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));

      sub_1003A5864(*(void **)&v1, v2);
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_13;
    }
    if (v2)
    {
      uint64_t v22 = *(void **)(v0 + 288);
      uint64_t v23 = *(void *)(v0 + 152);
      *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 136);
      *(void *)(v0 + 56) = v23;
      sub_1003A5888(*(id *)&v1, 1);
      uint64_t v24 = (void *)ProgressReportingIntent.progress.getter();
      [v24 setTotalUnitCount:100];

      sub_1003A5864(*(void **)&v1, v2);
      *(double *)(v0 + 288) = v1;
LABEL_17:
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_1003A32B4;
      uint64_t v16 = *(void *)(v0 + 208);
      int v13 = (void *)(v0 + 88);
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v17 = v0 + 120;
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v13, v14, v15, v16, v17);
    }
    uint64_t v12 = *(void *)(v0 + 152);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 136);
    *(void *)(v0 + 80) = v12;
    int v13 = (void *)ProgressReportingIntent.progress.getter();
    double v18 = v1 * 100.0;
    if ((~COERCE__INT64(v1 * 100.0) & 0x7FF0000000000000) != 0)
    {
      if (v18 > -9.22337204e18)
      {
        if (v18 < 9.22337204e18)
        {
          uint64_t v19 = v13;
          [v13 setCompletedUnitCount:(uint64_t)v18];

          goto LABEL_17;
        }
LABEL_22:
        __break(1u);
        return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v13, v14, v15, v16, v17);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void *)(v0 + 288);
  (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
  if (!v6)
  {
    uint64_t v20 = *(void **)(v0 + 280);
    sub_1003A5810();
    swift_allocError();
    swift_willThrow();

    goto LABEL_12;
  }
  uint64_t v7 = *(void **)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 248);
  id v10 = *(id *)(v0 + 288);
  sub_100162CCC(v10, v8);
  sub_1001173A0(v8, v9);
  *(void *)(v0 + 104) = sub_10040EA48(v9);
  sub_1000CBF40((unint64_t *)&qword_10070C070);
  sub_1001AE94C();
  static IntentResult.result<A, B>(value:opensIntent:)();

  swift_release();
  sub_100117404(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_13:
  return v11();
}

uint64_t sub_1003A37C4()
{
  double v1 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1003A389C@<X0>(uint64_t a1@<X8>)
{
  if (qword_100705108 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)qword_100737430);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1003A394C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000CB70;
  return sub_1003A2CD8(a1, v4, v5, v6);
}

uint64_t sub_1003A3A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003A3A84();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1003A3A2C(uint64_t a1)
{
  unint64_t v2 = sub_1003810D8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1003A3A68()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1003A3A84()
{
  uint64_t v0 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v57 = (char *)v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for InputConnectionBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v74 = v2;
  uint64_t v75 = v3;
  __chkstk_darwin(v2);
  os_log_type_t v71 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v5 - 8);
  Class v70 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v69 = (char *)v49 - v8;
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v9 - 8);
  uint64_t v73 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for LocalizedStringResource();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000CBE70(&qword_1007075E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v21 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104);
  v22((uint64_t)v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  id v72 = v20;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v60 = v21;
  uint64_t v67 = v12 + 104;
  uint64_t v68 = v11;
  unint64_t v64 = v22;
  v22((uint64_t)v14, v21, v11);
  uint64_t v23 = v73;
  v49[0] = v14;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v65 = v18 + 56;
  uint64_t v66 = v17;
  uint64_t v63 = v24;
  v24(v23, 0, 1, v17);
  uint64_t v77 = 0;
  uint64_t v25 = sub_1000CBE70((uint64_t *)&unk_10070C030);
  uint64_t v26 = *(void *)(type metadata accessor for UTType() - 8);
  uint64_t v27 = *(void *)(v26 + 72);
  uint64_t v28 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v29 = (v28 + 32) & ~v28;
  uint64_t v56 = v25;
  uint64_t v53 = v28 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  uint64_t v55 = v29;
  static UTType.item.getter();
  uint64_t v54 = v27;
  static UTType.folder.getter();
  if (qword_100705110 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for IntentDialog();
  uint64_t v31 = sub_10009D098(v30, (uint64_t)qword_100737448);
  uint64_t v58 = v30;
  uint64_t v32 = *(void *)(v30 - 8);
  id v33 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v69, v31, v30);
  id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v59 = v34;
  v34(v33, 0, 1, v30);
  v34(v70, 1, 1, v30);
  unsigned int v62 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v61 = *(void (**)(char *))(v75 + 104);
  v75 += 104;
  v61(v71);
  uint64_t v51 = sub_1000CBF40(&qword_1007075F0);
  uint64_t v52 = IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v50 = sub_1000CBE70(&qword_1007133A8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v35 = v49[0];
  uint64_t v36 = v60;
  uint64_t v37 = v68;
  int v38 = v64;
  v64(v49[0], v60, v68);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v38(v35, v36, v37);
  uint64_t v39 = v73;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v63(v39, 0, 1, v66);
  char v76 = 0;
  uint64_t v40 = v58;
  id v41 = v59;
  v59(v69, 1, 1, v58);
  v41(v70, 1, 1, v40);
  ((void (*)(char *, void, uint64_t))v61)(v71, v62, v74);
  sub_1003A5314();
  uint64_t v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  v49[1] = sub_1000CBE70(&qword_1007133B0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v42 = v60;
  uint64_t v43 = v68;
  uint64_t v44 = v64;
  v64(v35, v60, v68);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v44(v35, v42, v43);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v63(v39, 0, 1, v66);
  uint64_t v45 = type metadata accessor for DOCFileEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v57, 1, 1, v45);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005A0030;
  static UTType.folder.getter();
  uint64_t v46 = v58;
  uint64_t v47 = v59;
  v59(v69, 1, 1, v58);
  v47(v70, 1, 1, v46);
  ((void (*)(char *, void, uint64_t))v61)(v71, v62, v74);
  IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  return v52;
}

unint64_t _s5Files17CompressionFormatO26caseDisplayRepresentationsSDyAC10AppIntents0E14RepresentationVGvgZ_0()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007080D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v56 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v2 - 8);
  uint64_t v55 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v54 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v52 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100713400);
  uint64_t v11 = sub_1000CBE70(&qword_100717900);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = v11 - 8;
  uint64_t v35 = v11 - 8;
  uint64_t v48 = v13;
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  long long v53 = xmmword_10059B760;
  uint64_t v49 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_10059B760;
  unint64_t v46 = v16 + v15 + *(int *)(v14 + 56);
  unint64_t v47 = v16 + v15;
  *(unsigned char *)(v16 + v15) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = v4 + 104;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v20 = v51;
  v19(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v51);
  uint64_t v50 = v19;
  v34[1] = v18;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v6, v17, v20);
  uint64_t v21 = v55;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v45 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
  v45(v21, 0, 1, v54);
  uint64_t v43 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v22 = *(void *)(v43 - 8);
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v44 = v22 + 56;
  v42(v56, 1, 1, v43);
  uint64_t v39 = sub_1000CBE70(&qword_1007080D8);
  uint64_t v36 = v9 + 56;
  uint64_t v23 = *(void *)(v9 + 72);
  uint64_t v24 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = ((v24 + 32) & ~v24) + 2 * v23;
  uint64_t v40 = (v24 + 32) & ~v24;
  uint64_t v41 = v23;
  uint64_t v37 = v24 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = v53;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v25 = v50;
  v50(v6, v17, v20);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v25(v6, v17, v20);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v27 = v55;
  uint64_t v26 = v56;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v28 = (unsigned char *)(v47 + v48);
  v48 += v47 + *(int *)(v35 + 56);
  *uint64_t v28 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v29 = v17;
  uint64_t v30 = v17;
  uint64_t v31 = v50;
  uint64_t v32 = v51;
  v50(v6, v30, v51);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v6, v29, v32);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v45(v27, 0, 1, v54);
  v42(v26, 1, 1, v43);
  *(_OWORD *)(swift_allocObject() + 16) = v53;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v6, v29, v32);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v6, v29, v32);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  return sub_100495528(v49);
}

unint64_t sub_1003A5050()
{
  unint64_t result = qword_100713318;
  if (!qword_100713318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713318);
  }
  return result;
}

unint64_t sub_1003A50A8()
{
  unint64_t result = qword_100713320;
  if (!qword_100713320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713320);
  }
  return result;
}

unint64_t sub_1003A5100()
{
  unint64_t result = qword_100713328;
  if (!qword_100713328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713328);
  }
  return result;
}

unint64_t sub_1003A5158()
{
  unint64_t result = qword_100713330;
  if (!qword_100713330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713330);
  }
  return result;
}

void *sub_1003A51AC()
{
  return &protocol witness table for String;
}

unint64_t sub_1003A51BC()
{
  unint64_t result = qword_100713338;
  if (!qword_100713338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713338);
  }
  return result;
}

unint64_t sub_1003A5214()
{
  unint64_t result = qword_100713340;
  if (!qword_100713340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713340);
  }
  return result;
}

unint64_t sub_1003A5270()
{
  unint64_t result = qword_100713348;
  if (!qword_100713348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713348);
  }
  return result;
}

uint64_t sub_1003A52C4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1003A5314()
{
  unint64_t result = qword_100713350;
  if (!qword_100713350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713350);
  }
  return result;
}

unint64_t sub_1003A536C()
{
  unint64_t result = qword_100713358;
  if (!qword_100713358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713358);
  }
  return result;
}

unint64_t sub_1003A53C4()
{
  unint64_t result = qword_100713360;
  if (!qword_100713360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713360);
  }
  return result;
}

unint64_t sub_1003A541C()
{
  unint64_t result = qword_100713368;
  if (!qword_100713368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713368);
  }
  return result;
}

uint64_t sub_1003A5470()
{
  return sub_100073DF0(&qword_100713370, &qword_100713378);
}

unint64_t sub_1003A54B4()
{
  unint64_t result = qword_100713380;
  if (!qword_100713380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713380);
  }
  return result;
}

unint64_t sub_1003A550C()
{
  unint64_t result = qword_100713388;
  if (!qword_100713388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713388);
  }
  return result;
}

uint64_t sub_1003A5560()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1003A5594()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for CompressionFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003A567CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompressionFormat()
{
  return &type metadata for CompressionFormat;
}

ValueMetadata *type metadata accessor for CompressFilesIntent()
{
  return &type metadata for CompressFilesIntent;
}

uint64_t sub_1003A56C4()
{
  return sub_100073DF0(&qword_100713398, &qword_1007133A0);
}

uint64_t sub_1003A5700()
{
  return sub_100073DF0(&qword_100709AC0, &qword_10071D260);
}

uint64_t sub_1003A573C()
{
  return sub_100073DF0(&qword_100709AC8, &qword_10071D260);
}

unint64_t sub_1003A5778()
{
  unint64_t result = qword_1007133D8;
  if (!qword_1007133D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007133D8);
  }
  return result;
}

uint64_t sub_1003A57CC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A5804(uint64_t a1)
{
  return sub_100540520(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

unint64_t sub_1003A5810()
{
  unint64_t result = qword_1007133E0;
  if (!qword_1007133E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007133E0);
  }
  return result;
}

void sub_1003A5864(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1003A587C(a1, a2 & 1);
  }
}

void sub_1003A587C(id a1, char a2)
{
  if (a2) {
}
  }

id sub_1003A5888(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

uint64_t sub_1003A5894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A58C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A58EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CompressFilesIntent.CompressionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1003A59B4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompressFilesIntent.CompressionError()
{
  return &type metadata for CompressFilesIntent.CompressionError;
}

unint64_t sub_1003A59F0()
{
  unint64_t result = qword_100713408;
  if (!qword_100713408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713408);
  }
  return result;
}

uint64_t sub_1003A5A44(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
  {
    switch(a1)
    {
      case 1:
        id v14 = (id)_DocumentManagerBundle();
        if (!v14) {
          goto LABEL_17;
        }
        uint64_t v8 = v14;
        unint64_t v9 = 0xD000000000000035;
        unint64_t v18 = 0x80000001005EF210;
        unint64_t v10 = 0x6164726574736559;
        unint64_t v11 = 0xE900000000000079;
        break;
      case 2:
        id v12 = (id)_DocumentManagerBundle();
        if (!v12) {
          goto LABEL_15;
        }
        uint64_t v8 = v12;
        unint64_t v9 = 0xD000000000000042;
        unint64_t v18 = 0x80000001005EF1C0;
        unint64_t v10 = 0x73756F6976657250;
        unint64_t v11 = 0xEF73796164203720;
        break;
      case 3:
        id v13 = (id)_DocumentManagerBundle();
        if (!v13) {
          goto LABEL_16;
        }
        uint64_t v8 = v13;
        unint64_t v9 = 0xD000000000000043;
        unint64_t v18 = 0x80000001005EF170;
        unint64_t v11 = 0x80000001005E9540;
        unint64_t v10 = 0xD000000000000010;
        break;
      default:
        id v7 = (id)_DocumentManagerBundle();
        if (!v7)
        {
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          __break(1u);
          JUMPOUT(0x1003A5C68);
        }
        uint64_t v8 = v7;
        unint64_t v9 = 0xD000000000000031;
        unint64_t v18 = 0x80000001005EF250;
        unint64_t v10 = 0x7961646F54;
        unint64_t v11 = 0xE500000000000000;
        break;
    }
    v15._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v15._object = (void *)0xEB00000000656C62;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v10, v15, (NSBundle)v8, v16, *(Swift::String *)&v9)._countAndFlagsBits;
  }
  else
  {
    uint64_t countAndFlagsBits = a1;
  }
  sub_1002F81FC(a1, a2, a3);
  return countAndFlagsBits;
}

Swift::Int sub_1003A5C78(uint64_t a1, uint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  if (!a3)
  {
    Swift::UInt v5 = 4;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    Swift::UInt v5 = 5;
LABEL_5:
    Hasher._combine(_:)(v5);
    String.hash(into:)();
    return Hasher._finalize()();
  }
  switch(a1)
  {
    case 1:
      Swift::UInt v6 = 1;
      break;
    case 2:
      Swift::UInt v6 = 2;
      break;
    case 3:
      Swift::UInt v6 = 3;
      break;
    default:
      Swift::UInt v6 = 0;
      break;
  }
  Hasher._combine(_:)(v6);
  return Hasher._finalize()();
}

Swift::Int sub_1003A5D64()
{
  return sub_1003A5C78(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_1003A5D70()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    Swift::UInt v1 = 4;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    Swift::UInt v1 = 5;
LABEL_5:
    Hasher._combine(_:)(v1);
    String.hash(into:)();
    return;
  }
  switch(*(void *)v0)
  {
    case 1:
      Swift::UInt v2 = 1;
      break;
    case 2:
      Swift::UInt v2 = 2;
      break;
    case 3:
      Swift::UInt v2 = 3;
      break;
    default:
      Swift::UInt v2 = 0;
      break;
  }
  Hasher._combine(_:)(v2);
}

Swift::Int sub_1003A5E44()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)();
  if (!v2)
  {
    Swift::UInt v3 = 4;
    goto LABEL_5;
  }
  if (v2 == 1)
  {
    Swift::UInt v3 = 5;
LABEL_5:
    Hasher._combine(_:)(v3);
    String.hash(into:)();
    return Hasher._finalize()();
  }
  switch(v1)
  {
    case 1:
      Swift::UInt v4 = 1;
      break;
    case 2:
      Swift::UInt v4 = 2;
      break;
    case 3:
      Swift::UInt v4 = 3;
      break;
    default:
      Swift::UInt v4 = 0;
      break;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

uint64_t sub_1003A5F24(uint64_t a1, uint64_t a2)
{
  return sub_1003A5F40(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1003A5F40(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  switch(a1)
  {
    case 1:
      if (a6 != 2 || a4 != 1 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2 || a4 != 2 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 2 || a4 != 3 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    default:
      if (a6 != 2 || a5 | a4) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_1003A605C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v106 = *(void *)(v2 - 8);
  uint64_t v107 = v2;
  __chkstk_darwin(v2);
  id v105 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v103 = *(void *)(v4 - 8);
  uint64_t v104 = v4;
  __chkstk_darwin(v4);
  uint64_t v102 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for Date.FormatStyle();
  uint64_t v111 = *(void *)(v108 - 8);
  uint64_t v6 = __chkstk_darwin(v108);
  id v109 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v110 = (char *)&v87 - v8;
  uint64_t v9 = type metadata accessor for DateComponents();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v112 = v9;
  uint64_t v113 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  Swift::String v16 = (char *)&v87 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v87 - v17;
  uint64_t v19 = type metadata accessor for Calendar();
  uint64_t v114 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v87 - v29;
  uint64_t v31 = a1;
  uint64_t v33 = v32;
  sub_1001653A8(v31, (uint64_t)v24);
  uint64_t v115 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v24, 1, v25) == 1)
  {
    sub_100165410((uint64_t)v24);
    return 0;
  }
  uint64_t v35 = v114;
  os_log_type_t v99 = v18;
  uint64_t v100 = v28;
  Class v97 = v13;
  uint64_t v98 = v16;
  uint64_t v101 = v19;
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v30, v24, v25);
  static Calendar.current.getter();
  uint64_t v36 = v21;
  if (Calendar.isDateInToday(_:)())
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v101);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v30, v25);
    return 0;
  }
  if ((Calendar.isDateInYesterday(_:)() & 1) == 0)
  {
    uint64_t v96 = v25;
    uint64_t v37 = v100;
    Date.init()();
    uint64_t v38 = sub_1000CBE70(&qword_100713410);
    uint64_t v39 = type metadata accessor for Calendar.Component();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(void *)(v40 + 72);
    uint64_t v42 = *(unsigned __int8 *)(v40 + 80);
    uint64_t v43 = (v42 + 32) & ~v42;
    uint64_t v95 = v38;
    uint64_t v94 = v42 | 7;
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1005A0230;
    uint64_t v91 = v43;
    uint64_t v45 = v44 + v43;
    unint64_t v46 = *(void (**)(uint64_t, void, uint64_t))(v40 + 104);
    v46(v45, enum case for Calendar.Component.day(_:), v39);
    uint64_t v89 = v41;
    v46(v45 + v41, enum case for Calendar.Component.month(_:), v39);
    unsigned int v93 = enum case for Calendar.Component.year(_:);
    uint64_t v92 = v40 + 104;
    uint64_t v90 = v46;
    ((void (*)(uint64_t))v46)(v45 + 2 * v41);
    sub_10049D754(v44);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v47 = v99;
    Calendar.dateComponents(_:from:to:)();
    swift_bridgeObjectRelease();
    uint64_t v48 = DateComponents.year.getter();
    if ((v49 & 1) != 0
      || (v50 = v48, uint64_t v51 = DateComponents.month.getter(), (v52 & 1) != 0)
      || (uint64_t v53 = v51, v54 = DateComponents.day.getter(), (v55 & 1) != 0))
    {
      (*(void (**)(char *, uint64_t))(v113 + 8))(v47, v112);
      char v76 = *(void (**)(char *, uint64_t))(v115 + 8);
      uint64_t v77 = v96;
      v76(v37, v96);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v101);
      v76(v30, v77);
      return 0;
    }
    if (!(v53 | v50))
    {
      if (v54 >= -7)
      {
        (*(void (**)(char *, uint64_t))(v113 + 8))(v99, v112);
        unint64_t v83 = *(void (**)(char *, uint64_t))(v115 + 8);
        uint64_t v84 = v96;
        v83(v100, v96);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v101);
        v83(v30, v84);
        return 2;
      }
      if ((unint64_t)v54 >= 0xFFFFFFFFFFFFFFE2)
      {
        (*(void (**)(char *, uint64_t))(v113 + 8))(v99, v112);
        uint64_t v85 = *(void (**)(char *, uint64_t))(v115 + 8);
        uint64_t v86 = v96;
        v85(v100, v96);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v36, v101);
        v85(v30, v86);
        return 3;
      }
    }
    uint64_t v56 = v91;
    v89 += v91;
    uint64_t v57 = swift_allocObject();
    long long v87 = xmmword_1005A0030;
    *(_OWORD *)(v57 + 16) = xmmword_1005A0030;
    uint64_t v58 = v90;
    v90(v57 + v56, v93, v39);
    sub_10049D754(v57);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v87;
    v58(v59 + v56, v93, v39);
    sub_10049D754(v59);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v60 = DateComponents.year.getter();
    char v62 = v61;
    uint64_t v63 = DateComponents.year.getter();
    id v88 = v36;
    if (v62)
    {
      uint64_t v65 = v96;
      uint64_t v66 = v114;
      uint64_t v67 = v110;
      uint64_t v68 = v111;
      uint64_t v70 = v108;
      id v69 = v109;
      if (v64)
      {
LABEL_18:
        static FormatStyle<>.dateTime.getter();
        os_log_type_t v71 = v102;
        static Date.FormatStyle.Symbol.Month.wide.getter();
        Date.FormatStyle.month(_:)();
        (*(void (**)(char *, uint64_t))(v103 + 8))(v71, v104);
        id v72 = *(void (**)(char *, uint64_t))(v68 + 8);
        v72(v69, v70);
        sub_1003A6CB8();
        Date.formatted<A>(_:)();
        v72(v67, v70);
        uint64_t v73 = v112;
        uint64_t v74 = *(void (**)(char *, uint64_t))(v113 + 8);
        v74(v97, v112);
        v74(v98, v73);
        v74(v99, v73);
        uint64_t v75 = *(void (**)(char *, uint64_t))(v115 + 8);
        v75(v100, v65);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v88, v101);
        v75(v30, v65);
        return v116;
      }
    }
    else
    {
      uint64_t v65 = v96;
      uint64_t v66 = v114;
      uint64_t v67 = v110;
      uint64_t v68 = v111;
      uint64_t v70 = v108;
      id v69 = v109;
      if ((v64 & 1) == 0 && v60 == v63) {
        goto LABEL_18;
      }
    }
    static FormatStyle<>.dateTime.getter();
    unint64_t v78 = v105;
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
    Date.FormatStyle.year(_:)();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v78, v107);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v68 + 8);
    v79(v69, v70);
    sub_1003A6CB8();
    Date.formatted<A>(_:)();
    v79(v67, v70);
    uint64_t v80 = v112;
    unint64_t v81 = *(void (**)(char *, uint64_t))(v113 + 8);
    v81(v97, v112);
    v81(v98, v80);
    v81(v99, v80);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v115 + 8);
    v82(v100, v65);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v88, v101);
    v82(v30, v65);
    return v116;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v101);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v30, v25);
  return 1;
}

unint64_t sub_1003A6CB8()
{
  unint64_t result = qword_100713418;
  if (!qword_100713418)
  {
    type metadata accessor for Date.FormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713418);
  }
  return result;
}

uint64_t destroy for DOCItemDateGroupCategory(uint64_t a1)
{
  return sub_100325510(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s5Files24DOCItemDateGroupCategoryOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1002F81FC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCItemDateGroupCategory(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1002F81FC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100325510(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DOCItemDateGroupCategory(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100325510(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemDateGroupCategory(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemDateGroupCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1003A6E9C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1003A6EB4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemDateGroupCategory()
{
  return &type metadata for DOCItemDateGroupCategory;
}

unint64_t sub_1003A6EE0()
{
  unint64_t result = qword_100713420[0];
  if (!qword_100713420[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100713420);
  }
  return result;
}

uint64_t sub_1003A6F34()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003A6FE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = *(void *)((swift_isaMask & *v2) + 0x50);
  __chkstk_darwin(a1);
  uint64_t v34 = (uint64_t)&v30 - v4;
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  __chkstk_darwin(v8);
  uint64_t v36 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v32 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  Swift::String v16 = (char *)&v30 - v15;
  uint64_t v17 = type metadata accessor for UICellConfigurationState();
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003A7BB0();
  id v20 = [v2 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  UICollectionViewCell.contentConfiguration.getter();
  sub_1000CBE70(&qword_1007160C0);
  swift_dynamicCast();
  uint64_t v21 = (objc_class *)type metadata accessor for DOCSidebarCell();
  v37.receiver = v2;
  v37.super_class = v21;
  [super contentView];
  uint64_t v33 = v3;
  swift_getAssociatedTypeWitness();
  uint64_t v23 = swift_dynamicCastUnknownClassUnconditional();
  UICollectionViewCell.backgroundConfiguration.getter();
  uint64_t v24 = v31;
  uint64_t v25 = v30;
  if ((*(unsigned int (**)(char *, uint64_t))(v31 + 48))(v7, 1) == 1)
  {
    static UIBackgroundConfiguration.clear()();
    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_10070E2F0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v36, v7, v25);
  }
  char v26 = *((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x60));
  uint64_t v27 = v34;
  sub_1003A7480(v34);
  uint64_t v28 = (uint64_t)v32;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v32, v16, AssociatedTypeWitness);
  sub_1003A8BA8(v26, (uint64_t)v19, v27, v23, v28, v36, v33, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v16, AssociatedTypeWitness);
}

uint64_t sub_1003A7428()
{
  return *((unsigned __int8 *)v0 + *(void *)((swift_isaMask & *v0) + 0x60));
}

uint64_t sub_1003A7454(uint64_t result)
{
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60)) = result;
  return result;
}

uint64_t sub_1003A7480@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x68);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1003A7534(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = (char *)v1 + *(void *)(v3 + 0x68);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1003A75F0()
{
  unint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = type metadata accessor for UICellConfigurationState();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = __chkstk_darwin(*(void *)(v2 + 80));
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(double))(*(void *)(v2 + 88) + 32))(v7);
  sub_1003A7534((uint64_t)v9);
  id v10 = [v1 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1003A7788((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003A7788(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v25 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v21 - v6;
  uint64_t v8 = *(void (***)(void, void, void))(v3 + 88);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  char v26 = (char *)&v21 - v11;
  uint64_t v12 = type metadata accessor for DOCSidebarCell.Content();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v21 - v14;
  sub_1003A6FE4(v16, (unsigned char *)&v21 - v14);
  if (sub_1003A89D4(a1, v12))
  {
    v8[5](a1, v9, v8);
    v8[6](a1, v9, v8);
    uint64_t v17 = v23;
    uint64_t v18 = v24;
    uint64_t v19 = v25;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v24, v7, v25);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v19);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v7, v18, v19);
    (*(void (**)(unsigned char *, char *, uint64_t))(v21 + 40))(&v15[*(int *)(v12 + 48)], v26, v22);
    (*(void (**)(unsigned char *, char *, uint64_t))(v17 + 40))(&v15[*(int *)(v12 + 52)], v7, v19);
  }
  ((void (**)(unsigned char *, uint64_t, void))v8)[7](&v15[*(int *)(v12 + 48)], v9, v8);
  sub_1003A94C0(v15);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1003A7B18()
{
  return *((unsigned __int8 *)v0 + *(void *)((swift_isaMask & *v0) + 0x70));
}

uint64_t sub_1003A7B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1003A7BB0()
{
  unint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v19 = type metadata accessor for UICellConfigurationState();
  uint64_t v3 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v2 + 88);
  uint64_t v7 = *(void *)(v2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = type metadata accessor for Optional();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20[-1] - v11;
  UICollectionViewCell.contentConfiguration.getter();
  sub_1000CBE70(&qword_1007160C0);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v13)
  {
    v14(v12, 0, 1, AssociatedTypeWitness);
    return (*v15)(v12, v9);
  }
  else
  {
    v14(v12, 1, 1, AssociatedTypeWitness);
    (*v15)(v12, v9);
    id v17 = [v1 _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 40);
    v20[3] = AssociatedTypeWitness;
    v20[4] = swift_getAssociatedConformanceWitness();
    sub_100052C70(v20);
    v18(v5, v7, v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
    return UICollectionViewCell.contentConfiguration.setter();
  }
}

uint64_t sub_1003A7EAC(uint64_t a1)
{
  uint64_t v3 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A7F1C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_10070A178);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v52 = (char *)&v45 - v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = type metadata accessor for UICellAccessory();
  uint64_t v54 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = __chkstk_darwin(v12);
  char v55 = (char *)&v45 - v14;
  LODWORD(v49) = *((unsigned __int8 *)v0 + *(void *)((swift_isaMask & *v0) + 0x70));
  id v15 = [v0 traitCollection];
  id v16 = [v15 sourceOutlineStyle];

  uint64_t v17 = *(void *)((swift_isaMask & *v1) + 0x78);
  uint64_t v45 = v1;
  uint64_t v18 = (void *)((char *)v1 + v17);
  swift_beginAccess();
  unint64_t v19 = *v18;
  unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v48 = v19;
  if (v19 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    unint64_t v19 = v48;
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v51 = v11;
    if (v21) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v51 = v11;
    if (v21)
    {
LABEL_3:
      unint64_t v22 = 0;
      uint64_t v50 = v19 & 0xFFFFFFFFFFFFFF8;
      uint64_t v11 = (char *)(v19 + 32);
      unint64_t v20 = v49;
      while (1)
      {
        if ((v19 & 0xC000000000000001) != 0)
        {
          uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v24 = __OFADD__(v22++, 1);
          if (v24) {
            goto LABEL_27;
          }
        }
        else
        {
          if (v22 >= *(void *)(v50 + 16)) {
            goto LABEL_29;
          }
          uint64_t v23 = *(void *)&v11[8 * v22];
          swift_retain();
          BOOL v24 = __OFADD__(v22++, 1);
          if (v24)
          {
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        if (v20 && *(unsigned char *)(v23 + 32) == 1) {
          goto LABEL_4;
        }
        uint64_t v25 = *(void **)(v23 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles);
        uint64_t v26 = v25[2];
        if (!v26) {
          goto LABEL_4;
        }
        if ((id)v25[4] == v16)
        {
LABEL_15:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v20 = v49;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if (v22 == v21)
          {
LABEL_25:
            swift_bridgeObjectRelease();
            unint64_t v29 = v56;
            unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
            if ((v56 & 0x8000000000000000) == 0) {
              goto LABEL_32;
            }
            goto LABEL_48;
          }
        }
        else
        {
          if (v26 != 1)
          {
            if ((id)v25[5] == v16) {
              goto LABEL_15;
            }
            if (v26 != 2)
            {
              uint64_t v27 = 6;
              do
              {
                uint64_t v28 = v27 - 3;
                if (__OFADD__(v27 - 4, 1)) {
                  goto LABEL_28;
                }
                if ((id)v25[v27] == v16) {
                  goto LABEL_15;
                }
                ++v27;
              }
              while (v28 != v26);
            }
          }
LABEL_4:
          swift_release();
          if (v22 == v21) {
            goto LABEL_25;
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_48;
  }
LABEL_32:
  if ((v29 & 0x4000000000000000) == 0)
  {
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30) {
      goto LABEL_34;
    }
LABEL_49:
    swift_release();
    return UICollectionViewListCell.accessories.setter();
  }
LABEL_48:
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v30) {
    goto LABEL_49;
  }
LABEL_34:
  unint64_t v57 = v20;
  uint64_t result = sub_100191040(0, v30 & ~(v30 >> 63), 0);
  if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v32 = 0;
    unint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
    unint64_t v48 = v29 & 0xC000000000000001;
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v54 + 32);
    unint64_t v46 = (void (**)(char *, char *, uint64_t))(v54 + 16);
    uint64_t v34 = (void (**)(char *, void, uint64_t, uint64_t))(v54 + 56);
    char v49 = (void *)v29;
    uint64_t v50 = (uint64_t)v8;
    do
    {
      if (v48)
      {
        uint64_t v35 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v35 = *(void *)(v29 + 8 * v32 + 32);
        swift_retain();
      }
      uint64_t v36 = v35 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
      swift_beginAccess();
      sub_1003A98C4(v36, (uint64_t)v8);
      if ((*v47)(v8, 1, v9) == 1)
      {
        objc_super v37 = v51;
        (*(void (**)(uint64_t))(v35 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider))(v35);
        sub_1000CBBA4((uint64_t)v8, &qword_10070A178);
      }
      else
      {
        objc_super v37 = v51;
        (*v33)(v51, v8, v9);
      }
      uint64_t v38 = v52;
      (*v46)(v52, v37, v9);
      (*v34)(v38, 0, 1, v9);
      uint64_t v39 = (uint64_t)v38;
      uint64_t v40 = v53;
      sub_1003A992C(v39, v53);
      swift_beginAccess();
      sub_1003A9994(v40, v36);
      swift_endAccess();
      uint64_t v41 = *v33;
      (*v33)(v55, v37, v9);
      swift_release();
      unint64_t v42 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100191040(0, *(void *)(v42 + 16) + 1, 1);
        unint64_t v42 = v57;
      }
      unint64_t v44 = *(void *)(v42 + 16);
      unint64_t v43 = *(void *)(v42 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_100191040(v43 > 1, v44 + 1, 1);
        unint64_t v42 = v57;
      }
      ++v32;
      *(void *)(v42 + 16) = v44 + 1;
      v41((char *)(v42+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v44), v55, v9);
      unint64_t v57 = v42;
      unint64_t v29 = (unint64_t)v49;
      uint64_t v8 = (char *)v50;
    }
    while (v30 != v32);
    goto LABEL_49;
  }
  __break(1u);
  return result;
}

id sub_1003A85A4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (void *)(swift_isaMask & *v4);
  *((unsigned char *)v4 + v9[12]) = 0;
  uint64_t v10 = v9[10];
  uint64_t v11 = v9[11];
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 32);
  double v13 = v4;
  v12(v10, v11);
  *((unsigned char *)v13 + *(void *)((swift_isaMask & *v13) + 0x70)) = 0;
  *(void *)((char *)v13 + *(void *)((swift_isaMask & *v13) + 0x78)) = _swiftEmptyArrayStorage;

  v16.receiver = v13;
  v16.super_class = (Class)type metadata accessor for DOCSidebarCell();
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  sub_1003A75F0();

  return v14;
}

id sub_1003A8738(double a1, double a2, double a3, double a4)
{
  return sub_1003A85A4(a1, a2, a3, a4);
}

id sub_1003A875C(void *a1)
{
  id v1 = a1;
  sub_1003A87C4();

  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1003A87C4()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for DOCSidebarCell();
  id v1 = [super description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  id v5 = [v0 accessibilityLabel];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    v10._uint64_t countAndFlagsBits = v7;
    v10._object = v9;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    v11._uint64_t countAndFlagsBits = 8285;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    v12._uint64_t countAndFlagsBits = v2;
    v12._object = v4;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    return 91;
  }
  return v2;
}

uint64_t sub_1003A88F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarCell();
  [super prepareForReuse];
  sub_1003A7EAC((uint64_t)_swiftEmptyArrayStorage);
  UICollectionViewListCell.accessories.setter();
  return sub_1003A75F0();
}

void sub_1003A898C(void *a1)
{
  id v1 = a1;
  sub_1003A88F4();
}

uint64_t sub_1003A89D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellConfigurationState();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, v2 + *(int *)(a2 + 36), v8, v10);
  sub_1000A1444();
  char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v3, a2);
  if (v13) {
    char v14 = *v7 ^ 1;
  }
  else {
    char v14 = 1;
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, a2);
  return v14 & 1;
}

uint64_t sub_1003A8BA8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unsigned char *a8@<X8>)
{
  *a8 = a1;
  id v15 = (int *)type metadata accessor for DOCSidebarCell.Content();
  uint64_t v16 = &a8[v15[9]];
  uint64_t v17 = type metadata accessor for UICellConfigurationState();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(&a8[v15[10]], a3, a7);
  *(void *)&a8[v15[11]] = a4;
  uint64_t v18 = &a8[v15[12]];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v18, a5, AssociatedTypeWitness);
  unint64_t v20 = &a8[v15[13]];
  uint64_t v21 = type metadata accessor for UIBackgroundConfiguration();
  unint64_t v22 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);

  return v22(v20, a6, v21);
}

uint64_t sub_1003A8D4C(uint64_t a1)
{
  sub_1003A7788(a1);
  uint64_t v3 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x158);

  return v3(a1);
}

uint64_t sub_1003A8DBC(void *a1)
{
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a1;
  sub_1003A8D4C((uint64_t)v5);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1003A8EA4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1003A8EC0()
{
  swift_getObjCClassMetadata();
  sub_1003A8EA4();

  return swift_getObjCClassFromMetadata();
}

uint64_t sub_1003A8EF8(uint64_t a1)
{
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for DOCSidebarCell();
  [super traitCollectionDidChange:a1];
  uint64_t v3 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78));
  swift_beginAccess();
  unint64_t v4 = *v3;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v5) {
      return swift_bridgeObjectRelease_n();
    }
  }
  unint64_t v6 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 32);
    swift_retain();
  }
  uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles);
  if (*(void *)(v8 + 16) == 2)
  {
    if ((_UNKNOWN **)v8 != &off_10068ACF0 && (*(void *)(v8 + 32) || *(void *)(v8 + 40) != 1))
    {
LABEL_27:
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    swift_release();
    swift_bridgeObjectRelease();
    if (v5 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    if (v6)
    {
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v10 = *(void *)(v4 + 40);
      swift_retain();
    }
    uint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles);
    if (*(void *)(v11 + 16) == 2)
    {
      uint64_t v12 = 0;
      uint64_t v13 = v5 - 2;
      while ((_UNKNOWN **)v11 == &off_10068AD20 || !*(void *)(v11 + 32) && *(void *)(v11 + 40) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        if (v13 == v12) {
          return swift_bridgeObjectRelease_n();
        }
        uint64_t v14 = v12 + 2;
        if (v6)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v15 = result;
          if (__OFADD__(v14, 1)) {
            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v15 = *(void *)(v4 + 8 * v12 + 48);
          uint64_t result = swift_retain();
          if (__OFADD__(v14, 1))
          {
LABEL_32:
            __break(1u);
            return result;
          }
        }
        uint64_t v11 = *(void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles);
        ++v12;
        if (*(void *)(v11 + 16) != 2) {
          goto LABEL_28;
        }
      }
      goto LABEL_27;
    }
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  swift_release();
  return sub_1003A7F1C();
}

void sub_1003A91F4(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1003A8EF8((uint64_t)a3);
}

void sub_1003A9260(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1003A977C();
}

id sub_1003A9288(void *a1)
{
  id v1 = a1;
  uint64_t v2 = (void *)sub_1003A92CC();

  return v2;
}

uint64_t sub_1003A92CC()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCSidebarCell();
  [super contentView];
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

id sub_1003A937C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarCell();
  return [super dealloc];
}

uint64_t sub_1003A93F0(char *a1)
{
  (*(void (**)(char *))(*(void *)(*(void *)((swift_isaMask & *(void *)a1) + 0x50) - 8) + 8))(&a1[*(void *)((swift_isaMask & *(void *)a1) + 0x68)]);

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DOCSidebarCell()
{
  return sub_1000D21B0();
}

uint64_t sub_1003A94C0(unsigned char *a1)
{
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0x50);
  uint64_t v17 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  id v5 = (char *)&v18[-1] - v4;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for DOCSidebarCell.Content();
  uint64_t v10 = &a1[v9[12]];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[3] = AssociatedTypeWitness;
  v18[4] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_100052C70(v18);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v12, v10, AssociatedTypeWitness);
  UICollectionViewCell.contentConfiguration.setter();
  uint64_t v13 = &a1[v9[13]];
  uint64_t v14 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, unsigned char *, uint64_t))(v15 + 16))(v8, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  UICollectionViewCell.backgroundConfiguration.setter();
  *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60)) = *a1;
  (*(void (**)(char *, unsigned char *, uint64_t))(v17 + 16))(v5, &a1[v9[10]], v3);
  return sub_1003A7534((uint64_t)v5);
}

void sub_1003A977C()
{
  uint64_t v1 = swift_isaMask & *v0;
  *((unsigned char *)v0 + *(void *)(v1 + 0x60)) = 0;
  (*(void (**)(void))(*(void *)(v1 + 88) + 32))();
  *((unsigned char *)v0 + *(void *)((swift_isaMask & *v0) + 0x70)) = 0;
  *(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x78)) = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1003A98C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070A178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A992C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070A178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A9994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070A178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DOCSidebarCell.Content()
{
  return sub_1000D21B0();
}

uint64_t sub_1003A9A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_1003A9A1C()
{
  uint64_t AssociatedTypeWitness = type metadata accessor for UICellConfigurationState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        uint64_t AssociatedTypeWitness = type metadata accessor for UIBackgroundConfiguration();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1003A9BA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v39 = type metadata accessor for UICellConfigurationState();
  uint64_t v36 = *(void *)(v39 - 8);
  int v4 = *(_DWORD *)(v36 + 80);
  uint64_t v5 = v4;
  uint64_t v37 = *(void *)(*(void *)(a3 + 16) - 8);
  int v6 = *(_DWORD *)(v37 + 80);
  uint64_t v7 = v6;
  uint64_t v34 = *(void *)(v36 + 64);
  uint64_t v33 = *(void *)(v37 + 64) + 7;
  uint64_t v38 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v10 + v13;
  unint64_t v15 = v6 | (unint64_t)v4 | v9 | v13;
  if (v15 > 7
    || ((v6 | v4 | v9 | *(_DWORD *)(v12 + 80)) & 0x100000) != 0
    || ((v14
       + ((v9
         + ((v33
           + ((v34 + ((v4 + 1) & ~(unint64_t)v4) + v6) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)
         + 8) & ~(unint64_t)v9)) & ~v13)
     + *(void *)(*(void *)(v11 - 8) + 64) > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    unint64_t v19 = (uint64_t *)(v18 + ((v15 & 0xF8 ^ 0x1F8) & (v15 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v32 = ~v13;
    unint64_t v19 = a1;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    unint64_t v20 = ((unint64_t)a1 + v4 + 1) & ~(unint64_t)v4;
    uint64_t v21 = ((unint64_t)a2 + v5 + 1) & ~v5;
    uint64_t v41 = v11;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 16))(v20, v21, v39);
    unint64_t v22 = (v20 + v34 + v6) & ~(unint64_t)v6;
    uint64_t v23 = (v21 + v34 + v7) & ~v7;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v37 + 16))(v22, v23, v38);
    BOOL v24 = (void *)((v33 + v22) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void **)((v33 + v23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = *v25;
    *BOOL v24 = *v25;
    unint64_t v27 = ((unint64_t)v24 + v9 + 8) & ~(unint64_t)v9;
    unint64_t v28 = ((unint64_t)v25 + v9 + 8) & ~(unint64_t)v9;
    unint64_t v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    id v30 = v26;
    v29(v27, v28, AssociatedTypeWitness);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((v27 + v14) & v32, (v28 + v14) & v32, v41);
  }
  return v19;
}

uint64_t sub_1003A9F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UICellConfigurationState();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (a1 + *(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v9 = v8 + 8;
  unint64_t v10 = (v7 + *(void *)(v6 + 56) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, void))(v8 + 8))(v10, *(void *)(a2 + 16));
  uint64_t v11 = (id *)((*(void *)(v9 + 56) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);

  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = v13 + 8;
  unint64_t v15 = ((unint64_t)v11 + *(unsigned __int8 *)(v13 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v14 + 56);
  uint64_t v17 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(uint64_t (**)(unint64_t, uint64_t))(v18 + 8);
  uint64_t v20 = v17;
  unint64_t v21 = (v15 + v16 + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);

  return v19(v21, v20);
}

unsigned char *sub_1003AA098(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for UICellConfigurationState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (unint64_t)&a1[v9 + 1] & ~v9;
  uint64_t v11 = (unint64_t)&a2[v9 + 1] & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 48) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t, void))(v12 + 16))(v16, v17, *(void *)(a3 + 16));
  uint64_t v18 = *(void *)(v13 + 48) + 7;
  unint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void **)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = *v20;
  *unint64_t v19 = *v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  BOOL v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  uint64_t v25 = v23 + 16;
  uint64_t v26 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = ((unint64_t)v19 + v26 + 8) & ~v26;
  uint64_t v28 = ((unint64_t)v20 + v26 + 8) & ~v26;
  id v29 = v21;
  v24(v27, v28, AssociatedTypeWitness);
  uint64_t v30 = *(void *)(v25 + 48);
  uint64_t v31 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))((v30 + *(unsigned __int8 *)(v32 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80), (v30 + *(unsigned __int8 *)(v32 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80), v31);
  return a1;
}

unsigned char *sub_1003AA270(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for UICellConfigurationState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (unint64_t)&a1[v9 + 1] & ~v9;
  uint64_t v11 = (unint64_t)&a2[v9 + 1] & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 40) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t, void))(v12 + 24))(v16, v17, *(void *)(a3 + 16));
  uint64_t v18 = *(void *)(v13 + 40) + 7;
  unint64_t v19 = (void **)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void **)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = *v20;
  unint64_t v22 = *v19;
  *unint64_t v19 = *v20;
  id v23 = v21;

  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = v25 + 24;
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = ((unint64_t)v19 + v27 + 8) & ~v27;
  uint64_t v29 = ((unint64_t)v20 + v27 + 8) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24))(v28, v29, AssociatedTypeWitness);
  uint64_t v30 = *(void *)(v26 + 40);
  uint64_t v31 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 24))((v30 + *(unsigned __int8 *)(v32 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80), (v30 + *(unsigned __int8 *)(v32 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80), v31);
  return a1;
}

unsigned char *sub_1003AA444(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for UICellConfigurationState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (unint64_t)&a1[v9 + 1] & ~v9;
  uint64_t v11 = (unint64_t)&a2[v9 + 1] & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 32) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t, void))(v12 + 32))(v16, v17, *(void *)(a3 + 16));
  uint64_t v18 = *(void *)(v13 + 32) + 7;
  unint64_t v19 = (void *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v19 = *v20;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = v22 + 32;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = ((unint64_t)v19 + v24 + 8) & ~v24;
  uint64_t v26 = ((unint64_t)v20 + v24 + 8) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v25, v26, AssociatedTypeWitness);
  uint64_t v27 = *(void *)(v23 + 32);
  uint64_t v28 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 32))((v27 + *(unsigned __int8 *)(v29 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), (v27 + *(unsigned __int8 *)(v29 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), v28);
  return a1;
}

unsigned char *sub_1003AA60C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for UICellConfigurationState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (unint64_t)&a1[v9 + 1] & ~v9;
  uint64_t v11 = (unint64_t)&a2[v9 + 1] & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v8 + 24) + v14;
  uint64_t v16 = (v15 + v10) & ~v14;
  uint64_t v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t, void))(v12 + 40))(v16, v17, *(void *)(a3 + 16));
  uint64_t v18 = *(void *)(v13 + 24) + 7;
  unint64_t v19 = (void **)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void **)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = *v19;
  *unint64_t v19 = *v20;

  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v24 = v23 + 40;
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = ((unint64_t)v19 + v25 + 8) & ~v25;
  uint64_t v27 = ((unint64_t)v20 + v25 + 8) & ~v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 40))(v26, v27, AssociatedTypeWitness);
  uint64_t v28 = *(void *)(v24 + 24);
  uint64_t v29 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v30 + 40))((v28 + *(unsigned __int8 *)(v30 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (v28 + *(unsigned __int8 *)(v30 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), v29);
  return a1;
}

uint64_t sub_1003AA7DC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v41 = type metadata accessor for UICellConfigurationState();
  uint64_t v5 = *(void *)(v41 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v6 <= v8) {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v40 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v39 = *(_DWORD *)(v10 + 84);
  if (v9 <= v39) {
    unsigned int v9 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v11 = *(void *)(type metadata accessor for UIBackgroundConfiguration() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = *(void *)(v5 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  if (v9 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v17 = v9;
  }
  if (v17 <= 0x7FFFFFFF) {
    unsigned int v18 = 0x7FFFFFFF;
  }
  else {
    unsigned int v18 = v17;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(void *)(v7 + 64) + 7;
  uint64_t v20 = v15 + 8;
  uint64_t v21 = *(void *)(v10 + 64) + v16;
  if (a2 <= v18) {
    goto LABEL_33;
  }
  unint64_t v22 = ((v21 + ((v20 + ((v19 + ((v13 + ((v12 + 1) & ~v12) + v14) & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & ~v16)
      + *(void *)(v11 + 64);
  char v23 = 8 * v22;
  if (v22 > 3) {
    goto LABEL_15;
  }
  unsigned int v26 = ((a2 - v18 + ~(-1 << v23)) >> v23) + 1;
  if (HIWORD(v26))
  {
    int v24 = *(_DWORD *)((char *)a1 + v22);
    if (v24) {
      goto LABEL_23;
    }
  }
  else
  {
    if (v26 <= 0xFF)
    {
      if (v26 < 2) {
        goto LABEL_33;
      }
LABEL_15:
      int v24 = *((unsigned __int8 *)a1 + v22);
      if (!*((unsigned char *)a1 + v22)) {
        goto LABEL_33;
      }
LABEL_23:
      int v27 = (v24 - 1) << v23;
      if (v22 > 3) {
        int v27 = 0;
      }
      if (v22)
      {
        if (v22 <= 3) {
          int v28 = v22;
        }
        else {
          int v28 = 4;
        }
        switch(v28)
        {
          case 2:
            int v29 = *a1;
            break;
          case 3:
            int v29 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v29 = *(_DWORD *)a1;
            break;
          default:
            int v29 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v29 = 0;
      }
      return v18 + (v29 | v27) + 1;
    }
    int v24 = *(unsigned __int16 *)((char *)a1 + v22);
    if (*(unsigned __int16 *)((char *)a1 + v22)) {
      goto LABEL_23;
    }
  }
LABEL_33:
  uint64_t v30 = ((unint64_t)a1 + v12 + 1) & ~v12;
  if (v6 == v18)
  {
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v32 = v6;
    uint64_t v33 = v41;
LABEL_37:
    return v31(v30, v32, v33);
  }
  uint64_t v30 = (v30 + v13 + v14) & ~v14;
  if (v8 == v18)
  {
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v32 = v8;
    uint64_t v33 = v40;
    goto LABEL_37;
  }
  uint64_t v34 = (uint64_t *)((v19 + v30) & 0xFFFFFFFFFFFFFFF8);
  if ((v17 & 0x80000000) != 0)
  {
    uint64_t v30 = ((unint64_t)v34 + v20) & ~v15;
    if (v39 == v18)
    {
      uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      uint64_t v32 = v39;
      uint64_t v33 = AssociatedTypeWitness;
      goto LABEL_37;
    }
    uint64_t v36 = (v21 + v30) & ~v16;
    uint64_t v37 = *(uint64_t (**)(uint64_t))(v11 + 48);
    return v37(v36);
  }
  else
  {
    uint64_t v35 = *v34;
    if ((unint64_t)*v34 >= 0xFFFFFFFF) {
      LODWORD(v35) = -1;
    }
    return (v35 + 1);
  }
}

void sub_1003AAC2C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(type metadata accessor for UICellConfigurationState() - 8);
  uint64_t v47 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v46 = v8;
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  if (v7 <= v9) {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v43 = *(_DWORD *)(v11 + 84);
  if (v10 <= v43) {
    unsigned int v10 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v12 = *(void *)(type metadata accessor for UIBackgroundConfiguration() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(void *)(v6 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = *(void *)(v11 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v12 + 80);
  if (v10 <= *(_DWORD *)(v12 + 84)) {
    unsigned int v20 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v20 = v10;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = v16 + 7;
  unint64_t v23 = (v16 + 7 + ((v14 + ((v13 + 1) & ~v13) + v15) & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = v17 + 8;
  uint64_t v25 = (v17 + 8 + v23) & ~v17;
  uint64_t v26 = v18 + v19;
  size_t v27 = ((v18 + v19 + v25) & ~v19) + *(void *)(v12 + 64);
  if (a3 <= v21)
  {
    int v30 = 0;
    int v28 = a1;
    unsigned int v29 = a2;
  }
  else
  {
    int v28 = a1;
    unsigned int v29 = a2;
    if (v27 <= 3)
    {
      unsigned int v35 = ((a3 - v21 + ~(-1 << (8 * v27))) >> (8 * v27)) + 1;
      if (HIWORD(v35))
      {
        int v30 = 4;
      }
      else if (v35 >= 0x100)
      {
        int v30 = 2;
      }
      else
      {
        int v30 = v35 > 1;
      }
    }
    else
    {
      int v30 = 1;
    }
  }
  if (v21 < v29)
  {
    unsigned int v31 = ~v21 + v29;
    if (v27 < 4)
    {
      int v32 = (v31 >> (8 * v27)) + 1;
      if (v27)
      {
        int v36 = v31 & ~(-1 << (8 * v27));
        bzero(v28, v27);
        if (v27 == 3)
        {
          *(_WORD *)int v28 = v36;
          void v28[2] = BYTE2(v36);
        }
        else if (v27 == 2)
        {
          *(_WORD *)int v28 = v36;
        }
        else
        {
          *int v28 = v36;
        }
      }
    }
    else
    {
      bzero(v28, v27);
      *(_DWORD *)int v28 = v31;
      int v32 = 1;
    }
    switch(v30)
    {
      case 1:
        v28[v27] = v32;
        return;
      case 2:
        *(_WORD *)&v28[v27] = v32;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&v28[v27] = v32;
        return;
      default:
        return;
    }
  }
  uint64_t v33 = ~v17;
  uint64_t v34 = ~v19;
  switch(v30)
  {
    case 1:
      v28[v27] = 0;
      if (!v29) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&v28[v27] = 0;
      if (!v29) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x1003AB0F8);
    case 4:
      *(_DWORD *)&v28[v27] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (!v29) {
        return;
      }
LABEL_32:
      uint64_t v37 = (unint64_t)&v28[v13 + 1] & ~v13;
      if (v7 == v21)
      {
        uint64_t v38 = *(void (**)(uint64_t))(v47 + 56);
LABEL_36:
        v38(v37);
        return;
      }
      uint64_t v37 = (v37 + v14 + v15) & ~v15;
      if (v9 == v21)
      {
        uint64_t v38 = *(void (**)(uint64_t))(v46 + 56);
        goto LABEL_36;
      }
      unsigned int v39 = (void *)((v22 + v37) & 0xFFFFFFFFFFFFFFF8);
      if ((v20 & 0x80000000) == 0)
      {
        if ((v29 & 0x80000000) != 0) {
          uint64_t v40 = v29 ^ 0x80000000;
        }
        else {
          uint64_t v40 = v29 - 1;
        }
        *unsigned int v39 = v40;
        return;
      }
      uint64_t v37 = ((unint64_t)v39 + v24) & v33;
      if (v43 == v21)
      {
        uint64_t v38 = *(void (**)(uint64_t))(v11 + 56);
        goto LABEL_36;
      }
      uint64_t v41 = (v26 + v37) & v34;
      unint64_t v42 = *(void (**)(uint64_t))(v12 + 56);
      v42(v41);
      return;
  }
}

uint64_t sub_1003AB120()
{
  unint64_t v1 = v0;
  unint64_t v2 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_1003BA354(aBlock);
  os_unfair_lock_unlock(v2 + 4);
  char v3 = aBlock[0];
  uint64_t result = swift_release();
  if ((v3 & 1) == 0)
  {
    sub_1003ACB74();
    if (qword_100705120 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_100737460;
    uint64_t v6 = *(NSObject **)(qword_100737460 + 24);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(void *)(v7 + 24) = v5;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1003BB474;
    *(void *)(v8 + 24) = v7;
    aBlock[4] = sub_100162A48;
    void aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100087990;
    uint64_t aBlock[3] = &unk_1006A7350;
    unsigned int v9 = _Block_copy(aBlock);
    swift_retain_n();
    id v10 = v1;
    swift_retain();
    swift_release();
    dispatch_sync(v6, v9);
    _Block_release(v9);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1003AB330()
{
  uint64_t isEscapingClosureAtFileLocation = v0;
  unint64_t v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  sub_1003BA354(&aBlock);
  os_unfair_lock_unlock(v2 + 4);
  int v3 = aBlock;
  uint64_t v4 = swift_release();
  uint64_t v5 = &off_10059B000;
  if (v3 != 1) {
    goto LABEL_5;
  }
  if (qword_100705120 != -1) {
    goto LABEL_9;
  }
  while (1)
  {
    uint64_t v6 = qword_100737460;
    uint64_t v7 = *(NSObject **)(qword_100737460 + 24);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = isEscapingClosureAtFileLocation;
    *(void *)(v8 + 24) = v6;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_1003BAF40;
    *(void *)(v9 + 24) = v8;
    unsigned int v21 = sub_100162A48;
    uint64_t v22 = v9;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v18 = *((void *)v5 + 233);
    uint64_t v19 = sub_100087990;
    unsigned int v20 = &unk_1006A6F90;
    id v10 = _Block_copy(&aBlock);
    swift_retain_n();
    (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    dispatch_sync(v7, v10);
    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (v7) {
      break;
    }
    uint64_t v4 = sub_1003AEEE0();
LABEL_5:
    sub_1003ACB74(v4);
    if (qword_100705120 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_100737460;
    uint64_t v13 = *(NSObject **)(qword_100737460 + 24);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = isEscapingClosureAtFileLocation;
    *(void *)(v14 + 24) = v12;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1003BAEEC;
    *(void *)(v15 + 24) = v14;
    unsigned int v21 = sub_1000879B8;
    uint64_t v22 = v15;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100087990;
    unsigned int v20 = &unk_1006A6F18;
    uint64_t v5 = (char *__ptr32 *)_Block_copy(&aBlock);
    swift_retain_n();
    id v16 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    dispatch_sync(v13, v5);
    _Block_release(v5);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
LABEL_9:
    swift_once();
  }
  __break(1u);
  return result;
}

void sub_1003AB6B4(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_1000EDAC0(&v13, *(id *)(*(void *)(a1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  swift_release();
}

uint64_t sub_1003AB820()
{
  type metadata accessor for DOCFileSystemCollectionManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1003ABA50();
  qword_100737460 = v0;
  return result;
}

uint64_t sub_1003AB85C()
{
  uint64_t v1 = v0;
  uint64_t v9 = 0;
  int64_t v2 = *(NSObject **)(v0 + 24);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &v9;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1003BB130;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_100162A48;
  void aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100087990;
  uint64_t aBlock[3] = &unk_1006A7198;
  uint64_t v5 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v9;
    if (v9)
    {
      swift_release();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003AB9C8(void *a1, uint64_t a2)
{
  id v3 = [*(id *)(a2 + 16) allObjects];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = sub_1004F2D90(v4);
  swift_bridgeObjectRelease();
  *a1 = v5;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003ABA50()
{
  uint64_t v1 = v0;
  v11[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v11[0] - 8);
  __chkstk_darwin(v11[0]);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)NSCountedSet) initWithCapacity:100];
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.unspecified.getter();
  v11[1] = &_swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v11[0]);
  *(void *)(v0 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v7 = self;
  id v8 = [v7 defaultCenter];
  [v8 addObserver:v1 selector:"applicationDidEnterBackgroundWithSender:" name:UIApplicationDidEnterBackgroundNotification object:0];

  id v9 = [v7 defaultCenter];
  [v9 addObserver:v1 selector:"applicationWillEnterForegroundWithSender:" name:UIApplicationWillEnterForegroundNotification object:0];

  return v1;
}

id sub_1003ABD70(void *a1, uint64_t a2)
{
  return sub_1003ABD98(a1, a2, "DOCFileSystemCollectionManager: Adding an active collection for: %s", (SEL *)&selRef_addObject_);
}

id sub_1003ABD84(void *a1, uint64_t a2)
{
  return sub_1003ABD98(a1, a2, "DOCFileSystemCollectionManager: Removing an inactive collection for: %s", (SEL *)&selRef_removeObject_);
}

id sub_1003ABD98(void *a1, uint64_t a2, const char *a3, SEL *a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  int64_t v12 = a1;
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v28 = a2;
    uint64_t v15 = swift_slowAlloc();
    unsigned int v29 = a4;
    id v16 = (uint8_t *)v15;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v31 = v27;
    *(_DWORD *)id v16 = 136315138;
    uint64_t v24 = v16 + 4;
    id v17 = [*(id *)&v12[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode] displayName:v16 + 4];
    uint64_t v25 = a3;
    id v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v8;
    uint64_t v20 = v19;
    unint64_t v22 = v21;

    uint64_t v30 = sub_10009B0E4(v20, v22, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a2 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v25, v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v29;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return [*(id *)(a2 + 16) *a4 v12];
}

void sub_1003AC004(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    unint64_t v10 = sub_1003AB85C();
    unint64_t v11 = v10;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v15 >= 1) {
        goto LABEL_4;
      }
    }
    else if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_4:
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v17 = static OS_dispatch_queue.main.getter();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v11;
      aBlock[4] = sub_1003BB1D8;
      void aBlock[5] = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A72B0;
      id v13 = _Block_copy(aBlock);
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      os_log_type_t v14 = (void *)v17;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v13);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return;
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003AC380(unint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v34 = a2;
  uint64_t v46 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unsigned int v43 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v49 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v12 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
LABEL_14:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v12 >= 1)
  {
    uint64_t v15 = 0;
    unint64_t v38 = v49 & 0xC000000000000001;
    uint64_t v40 = v11;
    uint64_t v41 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v37 = v52;
    int v36 = (void (**)(char *, uint64_t))(v5 + 8);
    unsigned int v35 = (void (**)(char *, uint64_t))(v7 + 8);
    *(void *)&long long v14 = 136315138;
    long long v33 = v14;
    v32[1] = (char *)&type metadata for Any + 8;
    uint64_t v39 = v12;
    do
    {
      if (v38) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v21 = *(id *)(v49 + 8 * v15 + 32);
      }
      unint64_t v22 = v21;
      unint64_t v23 = v40;
      static Logger.Enumeration.getter();
      uint64_t v24 = v22;
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = v33;
        id v28 = [*(id *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode] displayName];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v31 = v30;

        *(void *)(v27 + 4) = sub_10009B0E4(v29, v31, aBlock);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, v34, (uint8_t *)v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*v41)(v23, v42);
      ++v15;
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v52[2] = v47;
      v52[3] = v16;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v52[0] = sub_1000666D8;
      v52[1] = v48;
      uint64_t v17 = _Block_copy(aBlock);
      swift_retain();
      id v18 = v43;
      static DispatchQoS.unspecified.getter();
      uint64_t v50 = _swiftEmptyArrayStorage;
      sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v19 = v45;
      uint64_t v20 = v46;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v17);
      (*v36)(v19, v20);
      (*v35)(v18, v44);

      swift_release();
      swift_release();
    }
    while (v39 != v15);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003AC998(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  uint64_t v5 = swift_retain();
  a4(v5);
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t type metadata accessor for DOCFileSystemCollectionManager()
{
  return self;
}

uint64_t sub_1003ACB08()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1001A0FB0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003ACB60@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving);
  return result;
}

uint64_t sub_1003ACB74()
{
  return sub_1003AEF00((uint64_t)sub_1003BB01C, (uint64_t)&unk_1006A7058);
}

void sub_1003ACB94()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v37 - v5;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (char *)Strong;
    uint64_t v39 = v4;
    uint64_t v40 = v1;
    uint64_t v38 = v0;
    id v13 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    uint64_t v14 = __chkstk_darwin(Strong);
    __chkstk_darwin(v14);
    swift_retain();
    os_unfair_lock_lock(v13 + 4);
    sub_1000D8B60();
    os_unfair_lock_unlock(v13 + 4);
    swift_release();
    static os_signpost_type_t.event.getter();
    uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = *(void *)&v12[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode];
    type metadata accessor for DOCICloudRootNode();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v37 = v16;
      swift_unknownObjectRetain();
      static Logger.Enumeration.getter();
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        v42[0] = swift_slowAlloc();
        *(_DWORD *)id v21 = 136446210;
        uint64_t v41 = sub_10009B0E4(0xD000000000000010, 0x80000001005D9210, v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "[DSEnumeration] %{public}s: node is DOCICloudRootNode", v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      unint64_t v22 = *(void (**)(char *, uint64_t))(v40 + 8);
      uint64_t v23 = v38;
      v22(v6, v38);
      uint64_t v24 = v39;
      uint64_t v25 = (void *)dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();

      if (v25)
      {
        static Logger.Enumeration.getter();
        os_log_type_t v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v26, v27))
        {
          id v28 = (uint8_t *)swift_slowAlloc();
          v42[0] = swift_slowAlloc();
          *(_DWORD *)id v28 = 136446210;
          uint64_t v41 = sub_10009B0E4(0xD000000000000010, 0x80000001005D9210, v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "[DSEnumeration] %{public}s: DOCICloudRootNode: main container is ready, startObserving", v28, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v29 = v39;
        }
        else
        {

          uint64_t v29 = v24;
        }
        v22(v29, v23);
        uint64_t v32 = dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();
        if (v32)
        {
          long long v33 = (void *)v32;
          uint64_t v34 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode;
          swift_getObjectType();
          swift_unknownObjectRetain();
          id v35 = v33;
          LOBYTE(v33) = DOCNode.isEqualTo(node:)();

          swift_unknownObjectRelease();
          if ((v33 & 1) == 0)
          {
            *(void *)&v12[v34] = v35;
            id v36 = v35;
            swift_unknownObjectRelease();
          }
          sub_1003AD7AC();
        }
      }
      else
      {
        uint64_t v30 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v30;
        *(void *)(v31 + 24) = v18;
        swift_unknownObjectRetain();
        swift_retain();
        dispatch thunk of DOCICloudRootNode.observerBlock.setter();
        swift_release();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1003AD7AC();
    }
  }
}

uint64_t sub_1003AD204(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = (void *)result;
    uint64_t v23 = *(void *)(result + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v15 = swift_allocObject();
    uint64_t v22 = v6;
    uint64_t v24 = v9;
    uint64_t v16 = v15;
    swift_unknownObjectWeakInit();
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = v16;
    void v17[3] = a1;
    void v17[4] = a3;
    aBlock[4] = sub_1003BB0E4;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A70D0;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = a1;
    id v20 = a3;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v25 = &_swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);

    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003AD548(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (char *)Strong;
    if (a2)
    {
      id v11 = a2;
      static Logger.Enumeration.getter();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v12, v13))
      {
        id v18 = v11;
        uint64_t v14 = swift_slowAlloc();
        uint64_t v19 = a3;
        uint64_t v15 = (uint8_t *)v14;
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136446210;
        uint64_t v20 = sub_10009B0E4(0xD000000000000010, 0x80000001005D9210, &v21);
        id v11 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "[DSEnumeration] %{public}s: DOCICloudRootNode: main container became ready, start Observing", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(void *)&v10[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v11;
      id v16 = v11;
      swift_unknownObjectRelease();
      sub_1003AD7AC();
      dispatch thunk of DOCICloudRootNode.observerBlock.setter();
    }
  }
}

void sub_1003AD7AC()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  double v128 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  double v129 = (char *)&v121 - v4;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v131 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  long long v123 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v124 = (char *)&v121 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v121 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v126 = (char *)&v121 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v127 = (char *)&v121 - v16;
  __chkstk_darwin(v15);
  uint64_t v130 = (char *)&v121 - v17;
  uint64_t v18 = type metadata accessor for OSSignpostID();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v26 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *uint64_t v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  id v27 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if (v26)
  {
    static os_signpost_type_t.event.getter();
    uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    static Logger.Enumeration.getter();
    uint64_t v29 = v0;
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    p_class_meths = &OBJC_PROTOCOL___QLPreviewControllerDelegate.class_meths;
    long long v125 = v12;
    if (v32)
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136315138;
      long long v122 = v34 + 4;
      id v35 = [*(id *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] displayName];
      id v36 = v29;
      uint64_t v37 = v5;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      uint64_t v41 = v38;
      uint64_t v5 = v37;
      uint64_t v29 = v36;
      uint64_t v133 = sub_10009B0E4(v41, v40, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___QLPreviewControllerDelegate + 32);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "[DSEnumeration] startObserving: DOCNode %s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v42 = *(char **)(v131 + 8);
    ((void (*)(char *, uint64_t))v42)(v130, v5);
    id v43 = v128;
    uint64_t v44 = (uint64_t)v129;
    uint64_t v45 = *(void *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source];
    if (v45)
    {
      uint64_t v46 = *(void **)(v45 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      id v47 = v46;
    }
    else
    {
      uint64_t v46 = 0;
    }
    sub_1003AF7F8(v46);

    uint64_t v48 = p_class_meths[196];
    self;
    id v49 = [(id)swift_dynamicCastObjCClassUnconditional() fileURL];
    if (v49)
    {
      uint64_t v50 = v49;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v51 = type metadata accessor for URL();
      (*(void (**)(id, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v43, 0, 1, v51);
    }
    else
    {
      uint64_t v51 = type metadata accessor for URL();
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v43, 1, 1, v51);
    }
    sub_10032D1DC((uint64_t)v43, v44);
    type metadata accessor for URL();
    uint64_t v52 = *(void *)(v51 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v44, 1, v51) == 1)
    {
      sub_1000CBBA4(v44, &qword_1007076B0);
      Swift::Bool v53 = 0;
    }
    else
    {
      Swift::Bool v53 = URL.startAccessingSecurityScopedResource()();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v51);
    }
    v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] = v53;
    uint64_t v54 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver];
    if (v54)
    {
      uint64_t v55 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = (uint64_t)sub_1003BAFF0;
      void aBlock[5] = v55;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_1000704F8;
      uint64_t aBlock[3] = (uint64_t)&unk_1006A6FE0;
      unint64_t v56 = _Block_copy(aBlock);
      swift_release();
      id v57 = [v54 addSubscriber:v56];
      _Block_release(v56);
    }
    else
    {
      id v57 = 0;
    }
    uint64_t v58 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken];
    *(void *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken] = v57;

    [v54 startObservingSources];
    self;
    uint64_t v59 = (void *)swift_dynamicCastObjCClass();
    if (v59)
    {
      id v60 = [v59 fpDomain];
      if (v60)
      {
        char v61 = v60;
        id v62 = v60;
        sub_1003AF7F8(v61);
      }
    }
    uint64_t v63 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer;
    char v64 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer];
    if (v64)
    {
      uint64_t v65 = v64;
      uint64_t v66 = v127;
      static Logger.Enumeration.getter();
      uint64_t v67 = v29;
      uint64_t v68 = Logger.logObject.getter();
      os_log_type_t v69 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        double v128 = v42;
        uint64_t v71 = v70;
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 136446466;
        uint64_t v133 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF9E0, aBlock);
        double v129 = v65;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v71 + 12) = 2080;
        id v72 = [*(id *)((char *)v48 + (void)v29) displayName];
        uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v130 = (char *)v5;
        uint64_t v74 = v73;
        unint64_t v76 = v75;

        uint64_t v133 = sub_10009B0E4(v74, v76, aBlock);
        uint64_t v65 = v129;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "[DSEnumeration] %{public}s: observer already exists, start observing %s again", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, char *))v128)(v127, v130);
      }
      else
      {

        ((void (*)(char *, uint64_t))v42)(v66, v5);
      }
      [v65 startObserving:*(unsigned int *)&v67[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions]];
      sub_1003B15D4(1);
    }
    else
    {
      uint64_t v77 = *(char **)((char *)v48 + (void)v29);
      self;
      uint64_t v78 = swift_dynamicCastObjCClass();
      if (v78)
      {
        uint64_t v79 = (char *)v78;
        double v129 = v77;
        uint64_t v130 = (char *)v5;
        swift_unknownObjectRetain();
        uint64_t v80 = v126;
        static Logger.Enumeration.getter();
        unint64_t v81 = v29;
        uint64_t v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.info.getter();
        int v84 = v83;
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v85 = swift_slowAlloc();
          LODWORD(v122) = v84;
          uint64_t v86 = v85;
          long long v123 = (char *)swift_slowAlloc();
          aBlock[0] = (uint64_t)v123;
          *(_DWORD *)uint64_t v86 = 136446466;
          uint64_t v133 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF9E0, aBlock);
          uint64_t v127 = v79;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v86 + 12) = 2080;
          uint64_t v121 = v86 + 14;
          long long v87 = v42;
          id v88 = [*(id *)((char *)v48 + (void)v29) displayName:v86 + 14];
          uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          double v128 = v29;
          unint64_t v91 = v90;

          uint64_t v42 = v87;
          uint64_t v133 = sub_10009B0E4(v89, v91, aBlock);
          uint64_t v79 = v127;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          uint64_t v29 = v128;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v122, "[DSEnumeration] %{public}s: Creating Observer with DOCNode %s)", (uint8_t *)v86, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v92 = v126;
        }
        else
        {

          uint64_t v92 = v80;
        }
        ((void (*)(char *, char *))v42)(v92, v130);
        Class v97 = v125;
        id v98 = [self observerForFINode:v79 withObserver:v81];
        os_log_type_t v99 = *(void **)&v29[v63];
        *(void *)&v29[v63] = v98;
        double v128 = (char *)v98;

        static Logger.Enumeration.getter();
        uint64_t v100 = v81;
        uint64_t v101 = Logger.logObject.getter();
        os_log_type_t v102 = static os_log_type_t.info.getter();
        uint64_t v103 = v29;
        int v104 = v102;
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v105 = swift_slowAlloc();
          uint64_t v127 = (char *)swift_slowAlloc();
          aBlock[0] = (uint64_t)v127;
          *(_DWORD *)uint64_t v105 = 136446466;
          uint64_t v133 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF9E0, aBlock);
          LODWORD(v126) = v104;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v105 + 12) = 2080;
          long long v123 = (char *)(v105 + 14);
          uint64_t v106 = v42;
          id v107 = [*(id *)((char *)v48 + (void)v29) displayName];
          uint64_t v108 = v100;
          uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v111 = v110;

          uint64_t v42 = v106;
          uint64_t v112 = v109;
          uint64_t v100 = v108;
          uint64_t v103 = v29;
          uint64_t v133 = sub_10009B0E4(v112, v111, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v126, "[DSEnumeration] %{public}s: Starting Observer with DOCNode %s", (uint8_t *)v105, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v113 = v130;
          ((void (*)(char *, char *))v106)(v125, v130);
        }
        else
        {

          uint64_t v113 = v130;
          ((void (*)(char *, char *))v42)(v97, v130);
        }
        uint64_t v114 = v124;
        uint64_t v115 = *(void **)&v103[v63];
        if (v115) {
          [v115 startObserving:*(unsigned int *)&v100[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions]];
        }
        static Logger.Enumeration.getter();
        uint64_t v116 = Logger.logObject.getter();
        os_log_type_t v117 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v116, v117))
        {
          uint64_t v118 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v118 = 136446210;
          uint64_t v133 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF9E0, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v116, v117, "[DSEnumeration] %{public}s: start refreshing items", v118, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        ((void (*)(char *, char *))v42)(v114, v113);
        sub_1003B15D4(1);
        sub_1003B0674();
        swift_unknownObjectRelease();
      }
      else
      {
        unsigned int v93 = v123;
        static Logger.Enumeration.getter();
        uint64_t v94 = Logger.logObject.getter();
        os_log_type_t v95 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v96 = 136446210;
          uint64_t v133 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF9E0, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "[DSEnumeration] %{public}s: Error Cannot observe a non FINode from Desktop Services", v96, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        ((void (*)(char *, uint64_t))v42)(v93, v5);
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_1003BAF9C();
          uint64_t v119 = swift_allocError();
          *(void *)uint64_t v120 = 0xD00000000000002CLL;
          *(void *)(v120 + 8) = 0x80000001005EF9B0;
          *(unsigned char *)(v120 + 16) = 1;
          sub_1001A0BC4(v119);
          swift_unknownObjectRelease();
          swift_errorRelease();
        }
        sub_1003AEEE0();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003AE9AC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v41 = v3;
  uint64_t v42 = v2;
  unint64_t v39 = v5;
  uint64_t v40 = v6;
  uint64_t v37 = v9;
  uint64_t v38 = v7;
  uint64_t v44 = Strong;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v12 = Strong;
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_4;
    }
LABEL_20:
    id v36 = v44;

    swift_bridgeObjectRelease();
    return;
  }
LABEL_19:
  id v35 = Strong;
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  if (!v11) {
    goto LABEL_20;
  }
LABEL_4:
  unint64_t v45 = a1 & 0xC000000000000001;
  uint64_t v43 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source;
  uint64_t v13 = 4;
  uint64_t v14 = (id *)a1;
  while (1)
  {
    if (v45) {
      uint64_t Strong = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t Strong = (char *)*(id *)(a1 + 8 * v13);
    }
    a1 = (unint64_t)Strong;
    uint64_t v15 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain;
      uint64_t v19 = *(void **)(v16 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (v19)
      {
        uint64_t v20 = *(void *)&v44[v43];
        if (v20)
        {
          uint64_t v21 = *(void **)(v20 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
          if (v21)
          {
            sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
            id v22 = v19;
            id v23 = v21;
            char v24 = static NSObject.== infix(_:_:)();

            if (v24) {
              break;
            }
          }
        }
      }
    }

    ++v13;
    a1 = (unint64_t)v14;
    if (v15 == v11) {
      goto LABEL_20;
    }
  }
  uint64_t v25 = v44;

  swift_bridgeObjectRelease();
  os_log_type_t v26 = *(void **)(v17 + v18);
  if (v26)
  {
    unint64_t v45 = *(void *)&v25[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = v26;
    aBlock[4] = sub_1003BB014;
    void aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A7030;
    uint64_t v29 = _Block_copy(aBlock);
    uint64_t v30 = v25;
    id v31 = v26;
    swift_retain();
    BOOL v32 = v37;
    static DispatchQoS.unspecified.getter();
    uint64_t v46 = &_swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    long long v33 = v39;
    uint64_t v34 = v42;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v34);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v40);

    swift_release();
    swift_release();
  }
  else
  {
  }
}

void sub_1003AEE84(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1003AF7F8(a2);
  }
}

uint64_t sub_1003AEEE0()
{
  return sub_1003AEF00((uint64_t)sub_1003BAF7C, (uint64_t)&unk_1006A6FB8);
}

uint64_t sub_1003AEF00(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1000666D8;
  uint64_t aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = &_swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
  swift_release();
  return swift_release();
}

void sub_1003AF1CC()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v52 = (uint64_t)&v45 - v4;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (char *)Strong;
    uint64_t v51 = v3;
    uint64_t v11 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    uint64_t v12 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    uint64_t v13 = __chkstk_darwin(Strong);
    *(&v45 - 2) = (uint8_t *)v13;
    __chkstk_darwin(v13);
    *(&v45 - 2) = (uint8_t *)sub_1003BB4F0;
    *(&v45 - 1) = v14;
    swift_retain();
    os_unfair_lock_lock(v12 + 4);
    sub_1003BA354(v54);
    os_unfair_lock_unlock(v12 + 4);
    int v15 = LOBYTE(v54[0]);
    swift_release();
    if (v15 == 1)
    {
      uint64_t v50 = v11;
      static Logger.Enumeration.getter();
      uint64_t v16 = v10;
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      int v19 = v18;
      BOOL v20 = os_log_type_enabled(v17, v18);
      uint64_t v49 = 0;
      if (v20)
      {
        int v48 = v19;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v54[0] = v47;
        *(_DWORD *)uint64_t v21 = 136315138;
        unint64_t v45 = v21 + 4;
        uint64_t v46 = v21;
        id v22 = [v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] displayName:v21 + 4];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        uint64_t v53 = sub_10009B0E4(v23, v25, v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v48, "[DSEnumeration] stopObserving: DOCNode %s", v46, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      os_log_type_t v26 = *(void **)&v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer];
      uint64_t v27 = v50;
      if (v26) {
        [v26 stopObserving:*(unsigned int *)&v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions]];
      }
      uint64_t v28 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken;
      uint64_t v29 = *(void **)&v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken];
      if (v29)
      {
        uint64_t v30 = *(void **)&v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver];
        id v31 = v29;
        [v30 removeSubscriberForToken:v31];
        BOOL v32 = *(void **)&v16[v28];
        *(void *)&v16[v28] = 0;
      }
      id v33 = [*(id *)&v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver] stopObservingSources];
      uint64_t v34 = *(os_unfair_lock_s **)&v10[v27];
      uint64_t v35 = __chkstk_darwin(v33);
      *(&v45 - 2) = (uint8_t *)v16;
      *((unsigned char *)&v45 - 8) = 0;
      __chkstk_darwin(v35);
      *(&v45 - 2) = (uint8_t *)sub_1003BAF84;
      *(&v45 - 1) = v36;
      swift_retain();
      os_unfair_lock_lock(v34 + 4);
      sub_1000D8B60();
      os_unfair_lock_unlock(v34 + 4);
      swift_release();
      [v16 setIsGathering:0];
      if (v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] == 1)
      {
        id v37 = [*(id *)&v16[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] nodeURL];
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t v39 = (uint64_t)v51;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v40 = type metadata accessor for URL();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
        }
        else
        {
          uint64_t v40 = type metadata accessor for URL();
          uint64_t v39 = (uint64_t)v51;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v51, 1, 1, v40);
        }
        uint64_t v41 = v39;
        uint64_t v42 = v52;
        sub_10032D1DC(v41, v52);
        type metadata accessor for URL();
        uint64_t v43 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v42, 1, v40) == 1)
        {

          sub_1000CBBA4(v52, &qword_1007076B0);
        }
        else
        {
          uint64_t v44 = v52;
          URL.stopAccessingSecurityScopedResource()();

          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v40);
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

void sub_1003AF7F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    return;
  }
  if (a1)
  {
    id v14 = a1;
    if (![v14 isUsingFPFS])
    {
LABEL_11:

      return;
    }
    if ([v14 needsAuthentication]
      && v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] != 2)
    {
      v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 2;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v2;
      aBlock[4] = (uint64_t)sub_1003BAECC;
      void aBlock[5] = v20;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_1000666D8;
      uint64_t aBlock[3] = (uint64_t)&unk_1006A6EA0;
      uint64_t v21 = _Block_copy(aBlock);
      id v22 = v2;
      swift_release();
      DOCRunInMainThread();

      _Block_release(v21);
      return;
    }
    if (([v14 needsAuthentication] & 1) == 0)
    {
      uint64_t v15 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState;
      if (v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] == 2)
      {
        static Logger.Enumeration.getter();
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v16, v17))
        {
          os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          aBlock[0] = v24;
          *(_DWORD *)os_log_type_t v18 = 136446210;
          v23[1] = v18 + 4;
          void aBlock[6] = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005EF970, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "[DSEnumeration] %{public}s: Domain became authenticated, restarting observation", v18, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v2[v15] = 1;
        sub_1003AB330();
        goto LABEL_11;
      }
    }
    unsigned __int8 v19 = [v14 needsAuthentication];

    if ((v19 & 1) == 0 && !v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState]) {
      v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 1;
    }
  }
}

uint64_t sub_1003AFC14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    v18[1] = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005EF970, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[DSEnumeration] %{public}s: Domain needs authentication", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = objc_allocWithZone((Class)NSError);
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v10 initWithDomain:v11 code:-1000 userInfo:0];

    sub_1001A0BC4((uint64_t)v12);
    uint64_t Strong = swift_unknownObjectRelease();
  }
  id v13 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
  uint64_t v14 = __chkstk_darwin(Strong);
  v18[-2] = a1;
  __chkstk_darwin(v14);
  v18[-2] = sub_1003BB4F0;
  v18[-1] = v15;
  swift_retain();
  os_unfair_lock_lock(v13 + 4);
  sub_1003BA354(v19);
  os_unfair_lock_unlock(v13 + 4);
  int v16 = LOBYTE(v19[0]);
  uint64_t result = swift_release();
  if (v16 == 1) {
    return sub_1003AEEE0();
  }
  return result;
}

uint64_t sub_1003AFF2C(void *a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.event.getter();
  uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10019F9C8(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003B0088(uint64_t a1)
{
  uint64_t v14 = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1003BAE8C;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1000666D8;
  uint64_t aBlock[3] = &unk_1006A6E50;
  id v10 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = &_swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
  swift_release();
  return swift_release();
}

void sub_1003B0368()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    static os_signpost_type_t.event.getter();
    uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    static Logger.Enumeration.getter();
    NSString v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      v15[1] = sub_10009B0E4(0xD000000000000020, 0x80000001005EF940, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[DSEnumeration] %{public}s: FlushingNodesUpdates", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1003B0674(v14);
  }
}

uint64_t sub_1003B0674()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v47 = v2;
  __chkstk_darwin(v2);
  uint64_t v49 = &v42[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1000CBE70(&qword_100713790);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  int v48 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v8 = &v42[-v7];
  uint64_t v50 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v50 - 8);
  uint64_t v10 = __chkstk_darwin(v50);
  os_log_type_t v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v15 = (unint64_t)&v42[-v14];
  __chkstk_darwin(v13);
  os_log_type_t v17 = &v42[-v16];
  os_log_type_t v18 = type metadata accessor for DispatchPredicate();
  Class isa = v18[-1].isa;
  __chkstk_darwin(v18);
  uint64_t v21 = &v42[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v22 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *uint64_t v21 = v22;
  (*((void (**)(void *, void, NSObject *))isa + 13))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  uint64_t v24 = _dispatchPreconditionTest(_:)();
  (*((void (**)(void *, NSObject *))isa + 1))(v21, v18);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  static DispatchTime.now()();
  uint64_t v24 = (uint64_t)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates];
  swift_beginAccess();
  if ((*(void *)v24 & 0xC000000000000001) == 0)
  {
    if (*(uint64_t *)(*(void *)v24 + 16) >= 1) {
      goto LABEL_4;
    }
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v17, v50);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = __CocoaSet.count.getter();
  swift_bridgeObjectRelease();
  if (v25 < 1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v17, v50);
  }
LABEL_4:
  char v26 = sub_1000D7150();
  uint64_t v27 = v50;
  if ((v26 & 1) == 0) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v17, v50);
  }
  uint64_t v28 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_dispatchedUpdateIsPending;
  if (v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_dispatchedUpdateIsPending]) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v17, v50);
  }
  uint64_t v30 = (uint64_t)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime];
  swift_beginAccess();
  uint64_t v45 = v30;
  sub_1003BAD98(v30, (uint64_t)v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v27) == 1)
  {
    uint64_t v44 = v28;
    sub_1000CBBA4((uint64_t)v8, &qword_100713790);
    goto LABEL_16;
  }
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v15, v8, v27);
  DispatchTime.advanced(by:)();
  if ((static DispatchTime.< infix(_:_:)() & 1) == 0)
  {
    uint64_t v44 = v28;
    BOOL v32 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    v32(v12, v27);
    v32((unsigned char *)v15, v27);
LABEL_16:
    uint64_t v33 = swift_bridgeObjectRetain();
    unint64_t v15 = (unint64_t)sub_1002F5928(v33);
    swift_bridgeObjectRelease();
    uint64_t v34 = v49;
    static Logger.Enumeration.getter();
    swift_retain_n();
    os_log_type_t v18 = Logger.logObject.getter();
    int v35 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v18, (os_log_type_t)v35))
    {

      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v34, v47);
      goto LABEL_22;
    }
    int v43 = v35;
    uint64_t v8 = (unsigned char *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v51 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005EF900, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v8 + 6) = 2048;
    if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
    {
      uint64_t v36 = *(void *)(v15 + 16);
LABEL_20:
      uint64_t v27 = v50;
      swift_release();
      uint64_t v51 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v43, "[DSEnumeration] %{public}s: updated %ld nodes", v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v49, v47);
LABEL_22:
      *(void *)uint64_t v24 = &_swiftEmptySetSingleton;
      swift_bridgeObjectRelease();
      uint64_t v37 = (uint64_t)v48;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v48, v17, v27);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v37, 0, 1, v27);
      uint64_t v38 = v45;
      swift_beginAccess();
      sub_1003BAE00(v37, v38);
      swift_endAccess();
      v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 0;
      v1[v44] = 1;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v15;
      *(void *)(v39 + 24) = v1;
      aBlock[4] = (uint64_t)sub_1003BAE84;
      void aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_1000666D8;
      uint64_t aBlock[3] = (uint64_t)&unk_1006A6E28;
      uint64_t v40 = _Block_copy(aBlock);
      uint64_t v41 = v1;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v40);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v17, v27);
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    goto LABEL_20;
  }
  if (v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] != 1)
  {
    v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 1;
    sub_1003B0088((uint64_t)v12);
  }
  id v31 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v31(v12, v27);
  v31((unsigned char *)v15, v27);
  return ((uint64_t (*)(unsigned char *, uint64_t))v31)(v17, v27);
}

uint64_t sub_1003B0E64(unint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1000CBE70(&qword_100713790);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OSSignpostID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.event.getter();
  uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  static Logger.Enumeration.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  unint64_t v29 = a1 >> 62;
  if (v18)
  {
    unsigned __int8 v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v19 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v21 = v31;
    swift_bridgeObjectRelease();
    uint64_t v34 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[DSEnumeration] MainThread updating %ld nodes", v19, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v21 = v31;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  uint64_t v22 = v33;
  *(unsigned char *)(v33 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_dispatchedUpdateIsPending) = 0;
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (v29)
    {
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v28 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a1 = v28;
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    sub_1001A12FC(a1, (uint64_t)&_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v23 = v22 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime;
  swift_beginAccess();
  sub_1003BAD98(v23, (uint64_t)v5);
  uint64_t v24 = v32;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v32);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = (uint64_t)v30;
    DispatchTime.advanced(by:)();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v27(v5, v24);
    sub_1003B0088(v26);
    return ((uint64_t (*)(uint64_t, uint64_t))v27)(v26, v24);
  }
  return result;
}

uint64_t sub_1003B1364()
{
  unint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, unint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  uint64_t v7 = (*(uint64_t (**)(void *, unint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v8 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    uint64_t v9 = __chkstk_darwin(v7);
    *(&v14 - 2) = v0;
    __chkstk_darwin(v9);
    *(&v14 - 2) = (uint64_t)sub_1000CB168;
    *(&v14 - 1) = v10;
    swift_retain();
    os_unfair_lock_lock(v8 + 4);
    sub_1000CB0F0(&v15);
    os_unfair_lock_unlock(v8 + 4);
    unint64_t v1 = v15;
    uint64_t result = swift_release();
    if (!(v1 >> 62))
    {
      uint64_t v12 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  if (v12 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_unknownObjectRetain();
      }
      ++v13;
      swift_getObjectType();
      LOBYTE(v15) = 1;
      DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
      swift_unknownObjectRelease();
    }
    while (v12 != v13);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B15D4(int a1)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v156 = (char *)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v159 = *(void *)(v6 - 8);
  uint64_t v160 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  double v158 = (char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  char v150 = (char *)&v140 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v153 = (char *)&v140 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v152 = (char *)&v140 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  double v151 = (char *)&v140 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v154 = (uint64_t)&v140 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v140 - v19;
  uint64_t v21 = type metadata accessor for DispatchPredicate();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)((char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
  *uint64_t v24 = v25;
  (*(void (**)(void *, void, uint64_t))(v22 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v21);
  id v26 = v25;
  uint64_t v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  if ((v27 & 1) == 0) {
    goto LABEL_65;
  }
  static Logger.Enumeration.getter();
  uint64_t v28 = v1;
  unint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.info.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v155 = v3;
  int v149 = a1;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    id v157 = (uint64_t (*)(char *, uint64_t))swift_slowAlloc();
    aBlock[0] = (uint64_t)v157;
    *(_DWORD *)uint64_t v32 = 136446466;
    uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2080;
    double v148 = (char *)(v32 + 14);
    id v33 = [*(id *)&v28[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] displayName];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v4;
    unint64_t v37 = v36;

    uint64_t v162 = sub_10009B0E4(v34, v37, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v4 = v35;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "[DSEnumeration] %{public}s: DOCNode %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v157 = *(uint64_t (**)(char *, uint64_t))(v159 + 8);
  uint64_t v38 = v157(v20, v160);
  uint64_t v39 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  uint64_t v40 = *(os_unfair_lock_s **)&v28[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
  uint64_t v41 = __chkstk_darwin(v38);
  __chkstk_darwin(v41);
  swift_retain();
  os_unfair_lock_lock(v40 + 4);
  sub_1003BA354(aBlock);
  os_unfair_lock_unlock(v40 + 4);
  int v42 = LOBYTE(aBlock[0]);
  uint64_t result = swift_release();
  if (v42 == 1)
  {
    uint64_t v44 = v28;
    uint64_t v45 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode;
    uint64_t v46 = *(void *)&v28[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode];
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result)
    {
      uint64_t v47 = (void *)result;
      uint64_t v145 = v39;
      uint64_t v146 = 0;
      double v148 = v44;
      swift_unknownObjectRetain();
      static os_signpost_type_t.begin.getter();
      uint64_t updated = (void *)updateLogHandler.getter();
      uint64_t v49 = v156;
      static OSSignpostID.exclusive.getter();
      os_signpost(_:dso:log:name:signpostID:_:_:)();

      uint64_t v51 = *(void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v50 = v4 + 8;
      v51(v49, v155);
      id v52 = sub_1003B99F8(v47);
      double v147 = v51;
      if (v52)
      {
        uint64_t v53 = v52;
        swift_unknownObjectRetain();
        static Logger.Enumeration.getter();
        uint64_t v54 = v148;
        uint64_t v55 = v148;
        swift_unknownObjectRetain_n();
        unint64_t v56 = v55;
        id v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.info.getter();
        int v141 = v58;
        BOOL v59 = os_log_type_enabled(v57, v58);
        id v144 = v53;
        double v158 = v56;
        uint64_t v143 = v50;
        uint64_t v142 = v46;
        if (v59)
        {
          uint64_t v60 = swift_slowAlloc();
          uint64_t v140 = swift_slowAlloc();
          aBlock[0] = v140;
          *(_DWORD *)uint64_t v60 = 136446722;
          uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v60 + 12) = 2080;
          id v61 = [*(id *)&v54[v45] displayName];
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v64 = v63;

          uint64_t v65 = v62;
          uint64_t v53 = v144;
          uint64_t v162 = sub_10009B0E4(v65, v64, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 22) = 2080;
          unsigned int v66 = [v53 fullyPopulated];
          BOOL v67 = v66 == 0;
          if (v66) {
            uint64_t v68 = 0;
          }
          else {
            uint64_t v68 = 1953459744;
          }
          if (v67) {
            unint64_t v69 = 0xE400000000000000;
          }
          else {
            unint64_t v69 = 0xE000000000000000;
          }
          uint64_t v162 = sub_10009B0E4(v68, v69, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v141, "[DSEnumeration] %{public}s: iterator for %s%s fully populated", (uint8_t *)v60, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v157((char *)v154, v160);
        }
        else
        {

          swift_unknownObjectRelease_n();
          v157((char *)v154, v160);
        }
        uint64_t v85 = v151;
        static Logger.Enumeration.getter();
        uint64_t v86 = Logger.logObject.getter();
        os_log_type_t v87 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v86, v87))
        {
          id v88 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)id v88 = 136446210;
          uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v86, v87, "[DSEnumeration] %{public}s: starting iteration", v88, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        uint64_t v89 = v85;
        uint64_t v4 = (uint64_t)v157;
        v157(v89, v160);
        unint64_t v90 = v152;
        swift_unknownObjectRetain();
        unint64_t v91 = (unint64_t)sub_1003B9C1C(v47, v53);
        swift_unknownObjectRelease();
        static Logger.Enumeration.getter();
        swift_bridgeObjectRetain_n();
        uint64_t v92 = Logger.logObject.getter();
        os_log_type_t v93 = static os_log_type_t.info.getter();
        BOOL v94 = os_log_type_enabled(v92, v93);
        unint64_t v95 = v91 >> 62;
        uint64_t v154 = v91;
        if (v94)
        {
          uint64_t v96 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v96 = 136446466;
          uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v96 + 12) = 2048;
          uint64_t v97 = v154;
          if (v95)
          {
            swift_bridgeObjectRetain();
            uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v98 = *(void *)((v154 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          uint64_t v162 = v98;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v92, v93, "[DSEnumeration] %{public}s: iteratedNodes count = %ld", (uint8_t *)v96, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          ((void (*)(char *, uint64_t))v4)(v90, v160);
          uint64_t v99 = v97;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          ((void (*)(char *, uint64_t))v4)(v90, v160);
          uint64_t v99 = v91;
        }
        aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
        uint64_t v27 = (uint64_t)v158;
        if (v95) {
          goto LABEL_66;
        }
        uint64_t v100 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v101 = v158;
LABEL_28:
        if (v100)
        {
          unint64_t v102 = 0;
          uint64_t v4 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate;
          unint64_t v103 = v99 & 0xC000000000000001;
          uint64_t v104 = v99 & 0xFFFFFFFFFFFFFF8;
          while (1)
          {
            if (v103)
            {
              id v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v102 >= *(void *)(v104 + 16))
              {
                __break(1u);
LABEL_64:
                __break(1u);
LABEL_65:
                __break(1u);
LABEL_66:
                id v139 = (id)v27;
                uint64_t v99 = v154;
                uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
                goto LABEL_28;
              }
              id v105 = *(id *)(v99 + 8 * v102 + 32);
            }
            uint64_t v106 = v105;
            unint64_t v107 = v102 + 1;
            if (__OFADD__(v102, 1)) {
              goto LABEL_64;
            }
            if ([v105 propertyAsBool:1987273324]
              && ((uint64_t v108 = *(void **)(v27 + v4)) == 0
               || ([v108 evaluateWithObject:v106] & 1) != 0))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              uint64_t v27 = (uint64_t)v158;
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              uint64_t v99 = v154;
            }
            else
            {
            }
            ++v102;
            if (v107 == v100)
            {
              uint64_t v109 = aBlock[0];
              uint64_t v4 = (uint64_t)v157;
              goto LABEL_43;
            }
          }
        }
        uint64_t v109 = (uint64_t)&_swiftEmptyArrayStorage;
LABEL_43:
        swift_bridgeObjectRelease();

        unint64_t v110 = v153;
        static Logger.Enumeration.getter();
        swift_bridgeObjectRetain_n();
        unint64_t v111 = Logger.logObject.getter();
        os_log_type_t v112 = static os_log_type_t.info.getter();
        BOOL v113 = os_log_type_enabled(v111, v112);
        uint64_t v114 = v155;
        uint64_t v115 = v150;
        if (v113)
        {
          uint64_t v116 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v116 = 136446466;
          uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v116 + 12) = 2048;
          if (v109 < 0 || (v109 & 0x4000000000000000) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
            swift_release();
          }
          else
          {
            uint64_t v117 = *(void *)(v109 + 16);
          }
          swift_release();
          uint64_t v162 = v117;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v111, v112, "[DSEnumeration] %{public}s: filteredNodes count = %ld", (uint8_t *)v116, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v118 = v153;
        }
        else
        {

          swift_release_n();
          uint64_t v118 = v110;
        }
        ((void (*)(char *, uint64_t))v4)(v118, v160);
        unint64_t v119 = (unint64_t)sub_10001AB88();
        swift_release();
        swift_bridgeObjectRetain();
        if (v119 >> 62)
        {
          sub_1000CBE70((uint64_t *)&unk_100706730);
          _bridgeCocoaArray<A>(_:)();
          uint64_t v120 = swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v120 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        }
        uint64_t v121 = *(os_unfair_lock_s **)&v148[v145];
        uint64_t v122 = __chkstk_darwin(v120);
        __chkstk_darwin(v122);
        swift_retain();
        os_unfair_lock_lock(v121 + 4);
        sub_1000D8B60();
        os_unfair_lock_unlock(v121 + 4);
        swift_release();
        swift_bridgeObjectRelease();
        static Logger.Enumeration.getter();
        swift_bridgeObjectRetain();
        long long v123 = Logger.logObject.getter();
        os_log_type_t v124 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = 136446466;
          uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v125 + 12) = 2048;
          if (v119 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v126 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v126 = *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          uint64_t v162 = v126;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v123, v124, "[DSEnumeration] %{public}s: sorted nodes count = %ld", (uint8_t *)v125, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v157(v115, v160);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v157(v115, v160);
        }
        static os_signpost_type_t.end.getter();
        double v129 = (void *)updateLogHandler.getter();
        uint64_t v130 = v156;
        static OSSignpostID.exclusive.getter();
        os_signpost(_:dso:log:name:signpostID:_:_:)();

        v147(v130, v114);
        uint64_t v131 = v144;
        uint64_t v132 = v158;
        if (v149) {
          sub_1003B1364();
        }
        uint64_t v133 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated;
        char v134 = v132[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated];
        unsigned int v135 = [v131 fullyPopulated];
        v132[v133] = v135;
        [v132 setIsGathering:v135 ^ 1];
        uint64_t v136 = swift_allocObject();
        *(void *)(v136 + 16) = v132;
        *(unsigned char *)(v136 + 24) = v134;
        aBlock[4] = (uint64_t)sub_1003BAD8C;
        void aBlock[5] = v136;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        uint64_t aBlock[2] = (uint64_t)sub_1000666D8;
        uint64_t aBlock[3] = (uint64_t)&unk_1006A6DD8;
        long long v137 = _Block_copy(aBlock);
        long long v138 = v132;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v137);
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease_n();
      }
      else
      {
        uint64_t v70 = v148;
        uint64_t v71 = *(os_unfair_lock_s **)&v148[v145];
        uint64_t v72 = __chkstk_darwin(0);
        __chkstk_darwin(v72);
        swift_retain();
        os_unfair_lock_lock(v71 + 4);
        sub_1000D8B60();
        os_unfair_lock_unlock(v71 + 4);
        swift_release();
        v70[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] = 1;
        [v70 setIsGathering:0];
        uint64_t v73 = v158;
        static Logger.Enumeration.getter();
        uint64_t v74 = v70;
        unint64_t v75 = Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.info.getter();
        int v77 = v76;
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v78 = swift_slowAlloc();
          LODWORD(v153) = v77;
          uint64_t v79 = v78;
          uint64_t v154 = swift_slowAlloc();
          aBlock[0] = v154;
          *(_DWORD *)uint64_t v79 = 136446466;
          uint64_t v162 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v79 + 12) = 2080;
          uint64_t v152 = (char *)(v79 + 14);
          id v80 = [*(id *)&v70[v45] displayName];
          uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v83 = v82;

          uint64_t v84 = v155;
          uint64_t v162 = sub_10009B0E4(v81, v83, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v153, "[DSEnumeration] %{public}s: %s does not support iteration. Is it a file?", (uint8_t *)v79, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v157(v158, v160);
        }
        else
        {

          v157(v73, v160);
          uint64_t v84 = v155;
        }
        static os_signpost_type_t.end.getter();
        uint64_t v127 = (void *)updateLogHandler.getter();
        double v128 = v156;
        static OSSignpostID.exclusive.getter();
        os_signpost(_:dso:log:name:signpostID:_:_:)();

        swift_unknownObjectRelease();
        return ((uint64_t (*)(char *, uint64_t))v147)(v128, v84);
      }
    }
  }
  return result;
}

uint64_t sub_1003B2C84(void *a1, int a2)
{
  LODWORD(v51) = a2;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v49 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.event.getter();
  uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  uint64_t v14 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v46 = v12;
  uint64_t v47 = v10 + 8;
  uint64_t v48 = v9;
  uint64_t v44 = v14;
  v14(v12, v9);
  static Logger.Enumeration.getter();
  uint64_t v15 = a1;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v45 = v3;
    uint64_t v19 = v18;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v53 = v43;
    *(_DWORD *)uint64_t v19 = 136446466;
    uint64_t v50 = v4;
    uint64_t v52 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2080;
    id v20 = [*(id *)&v15[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] displayName];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    uint64_t v52 = sub_10009B0E4(v21, v23, &v53);
    uint64_t v4 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[DSEnumeration] %{public}s: DOCNode %s : data(forFileSystemCollectionShouldBeReloaded:)", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v45;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24(v8, v3);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10019F9C8(v15);
    uint64_t result = swift_unknownObjectRelease();
  }
  if ((v51 & 1) == 0 && v15[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] == 1)
  {
    uint64_t v50 = v4;
    id v26 = v49;
    static Logger.Enumeration.getter();
    uint64_t v27 = v15;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136446466;
      os_log_t v51 = v28;
      uint64_t v52 = sub_10009B0E4(0xD000000000000021, 0x80000001005EF870, &v53);
      LODWORD(v43) = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2080;
      id v32 = [*(id *)&v27[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] displayName];
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = v3;
      uint64_t v34 = v33;
      unint64_t v36 = v35;

      uint64_t v52 = sub_10009B0E4(v34, v36, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v37 = v51;
      _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v43, "[DSEnumeration] %{public}s: DOCNode %s : calling fileSystemCollectionDidFinishGathering", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v38 = v49;
      uint64_t v39 = v45;
    }
    else
    {

      uint64_t v38 = v26;
      uint64_t v39 = v3;
    }
    v24(v38, v39);
    static os_signpost_type_t.event.getter();
    uint64_t v40 = (void *)updatePointsOfInterestHandler.getter();
    uint64_t v41 = v46;
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    v44(v41, v48);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1001A12E0();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1003B32F8(char a1, void *a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v15 - v9;
  if (a1)
  {
    id v11 = [a2 fileURL];
    if (v11)
    {
      uint64_t v12 = v11;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 0, 1, v13);
    }
    else
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
    }
    sub_10032D1DC((uint64_t)v7, (uint64_t)v10);
    type metadata accessor for URL();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
    {
      return sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    }
    else
    {
      URL.stopAccessingSecurityScopedResource()();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    }
  }
  return result;
}

id sub_1003B34F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileSystemCollection();
  return [super dealloc];
}

uint64_t sub_1003B36A8()
{
  return type metadata accessor for DOCFileSystemCollection();
}

uint64_t sub_1003B36B0(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
  swift_unknownObjectRetain();
  char v12 = DOCNode.isEqualTo(node:)();
  swift_unknownObjectRelease();
  if ((v12 & 1) == 0)
  {
    uint64_t v34 = a2;
    uint64_t v35 = v9;
    static Logger.Enumeration.getter();
    swift_bridgeObjectRetain_n();
    id v13 = v4;
    id v14 = a1;
    id v15 = v13;
    id v16 = v14;
    os_log_type_t v17 = Logger.logObject.getter();
    int v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      int v29 = v18;
      id v30 = v15;
      os_log_t v32 = v17;
      uint64_t v33 = v8;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v37 = v31;
      *(_DWORD *)uint64_t v19 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_10009B0E4(v34, a3, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2114;
      self;
      uint64_t v20 = swift_dynamicCastObjCClass();
      uint64_t v21 = v20;
      if (v20)
      {
        uint64_t v36 = v20;
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v36 = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v22 = v30;
      unint64_t v23 = v28;
      *uint64_t v28 = v21;

      *(_WORD *)(v19 + 22) = 2114;
      uint64_t v36 = (uint64_t)v16;
      id v24 = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v23[1] = v16;

      os_log_t v25 = v32;
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v29, "[DSEnumeration] %{public}s: Received notification for node not being observed.\n\tExpected: %{public}@\n\tReceived: %{public}@", (uint8_t *)v19, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v33);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v8);
    }
  }
  return v12 & 1;
}

uint64_t sub_1003B3A90(void *a1, void *a2, int a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a2, 0xD000000000000016, 0x80000001005EF7B0);
  if (result)
  {
    uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(_DWORD *)(v17 + 24) = a3;
    *(void *)(v17 + 32) = a1;
    aBlock[4] = sub_1003BAD44;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6D88;
    int v18 = _Block_copy(aBlock);
    swift_retain();
    id v19 = a1;
    static DispatchQoS.unspecified.getter();
    unint64_t v23 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    uint64_t v21 = v11;
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003B3DC4(uint64_t a1, Swift::UInt32 a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (char *)Strong;
    uint64_t v80 = v10;
    uint64_t v81 = v9;
    uint64_t v82 = v6;
    uint64_t v83 = v5;
    Swift::UInt32 v84 = a2;
    uint64_t v15 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    uint64_t v16 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    *(&v72 - 2) = v17;
    __chkstk_darwin(v17);
    *(&v72 - 2) = (uint64_t)sub_1003BB4F0;
    *(&v72 - 1) = v18;
    swift_retain();
    os_unfair_lock_lock(v16 + 4);
    sub_1003BA354(v85);
    os_unfair_lock_unlock(v16 + 4);
    int v19 = LOBYTE(v85[0]);
    uint64_t v20 = swift_release();
    if (v19 != 1) {
      goto LABEL_6;
    }
    uint64_t v79 = v15;
    uint64_t v21 = *(os_unfair_lock_s **)&v14[v15];
    __chkstk_darwin(v20);
    *(&v72 - 2) = (uint64_t)v14;
    __chkstk_darwin(v22);
    *(&v72 - 2) = (uint64_t)sub_1000CB168;
    *(&v72 - 1) = v23;
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    sub_1000CB0F0(v85);
    os_unfair_lock_unlock(v21 + 4);
    unint64_t v24 = v85[0];
    swift_release();
    os_log_t v25 = sub_1000D24AC(v24);
    swift_bridgeObjectRelease();
    if (!v25)
    {
LABEL_6:

      return;
    }
    uint64_t v78 = 0;
    v86[1] = v25;
    swift_bridgeObjectRetain();
    static Logger.Enumeration.getter();
    id v26 = a3;
    uint64_t v27 = v14;
    id v28 = v26;
    int v29 = v27;
    id v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.info.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      int v74 = v32;
      uint64_t v34 = v33;
      uint64_t v75 = swift_slowAlloc();
      v85[0] = v75;
      *(_DWORD *)uint64_t v34 = 136446978;
      v86[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005EF7B0, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2082;
      os_log_t v73 = (os_log_t)(v34 + 14);
      id v35 = [self propertyName:v84];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v77 = v29;
      uint64_t v37 = v36;
      os_log_type_t v76 = v25;
      uint64_t v38 = v28;
      unint64_t v40 = v39;

      v86[0] = sub_10009B0E4(v37, v40, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      id v41 = [v38 displayName];
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_t v73 = v30;
      unint64_t v44 = v43;

      v86[0] = sub_10009B0E4(v42, v44, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 32) = 2080;
      uint64_t v72 = v34 + 34;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v38;
      v86[0] = inited;
      specialized Array._endMutation()();
      unint64_t v46 = v86[0];
      id v47 = v38;
      uint64_t v48 = sub_1003B9ECC(v46);
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      uint64_t v51 = v48;
      id v28 = v38;
      os_log_t v25 = v76;
      v86[0] = sub_10009B0E4(v51, v50, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      int v29 = v77;
      swift_bridgeObjectRelease();
      os_log_t v52 = v73;
      _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v74, "[DSEnumeration] %{public}s: Property %{public}s changed on %s%s", (uint8_t *)v34, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v53 = v12;
      Swift::UInt32 v54 = v84;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v53, v81);
      uint64_t v55 = v79;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v80 + 8))(v12, v81);
      uint64_t v55 = v79;
      Swift::UInt32 v54 = v84;
    }
    uint64_t v56 = v82;
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    LOBYTE(v85[0]) = 0;
    DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
    if ([v28 propertyAsBool:1987273324]
      && ((id v57 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate]) == 0
       || ([v57 evaluateWithObject:v28] & 1) != 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1001B60A4((uint64_t)v28, (unint64_t)v25);
      unint64_t v59 = v58;
      char v61 = v60;
      swift_bridgeObjectRelease();
      if ((v61 & 1) == 0) {
    }
      }
    uint64_t v62 = *(void **)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue];
    *uint64_t v8 = v62;
    uint64_t v63 = v83;
    (*(void (**)(void *, void, uint64_t))(v56 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v83);
    id v64 = v62;
    LOBYTE(v62) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v56 + 8))(v8, v63);
    if (v62)
    {
      if (!sub_100535764(v54, *(void *)&v29[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort]))
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      unint64_t v65 = (unint64_t)sub_10001AB88();
      swift_bridgeObjectRelease();
      if (!(v65 >> 62))
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        uint64_t v66 = v65;
LABEL_18:
        uint64_t v67 = swift_bridgeObjectRelease();
        uint64_t v68 = *(os_unfair_lock_s **)&v14[v55];
        __chkstk_darwin(v67);
        *(&v72 - 2) = (uint64_t)v29;
        *(&v72 - 1) = v66;
        __chkstk_darwin(v69);
        *(&v72 - 2) = (uint64_t)sub_1000D7258;
        *(&v72 - 1) = v70;
        swift_retain();
        os_unfair_lock_lock(v68 + 4);
        sub_1000D8B60();
        os_unfair_lock_unlock(v68 + 4);
        swift_release();
        swift_bridgeObjectRelease();
LABEL_20:
        swift_beginAccess();
        sub_1000EE744(v86, v28);
        uint64_t v71 = (void *)v86[0];
        swift_endAccess();

        sub_1003B0674();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v66 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
}

uint64_t sub_1003B4750(void *a1, int a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a1, 0x286465676E616863, 0xEF293A726F663A5FLL);
  if (result)
  {
    v19[1] = *(void *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v14 = swift_allocObject();
    uint64_t v20 = v9;
    uint64_t v15 = v14;
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = a1;
    *(_DWORD *)(v16 + 32) = a2;
    aBlock[4] = sub_1003BACAC;
    void aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6CE8;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    id v18 = a1;
    static DispatchQoS.unspecified.getter();
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003B4A84(uint64_t a1, void *a2, unsigned int a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    uint64_t v49 = v6;
    uint64_t v11 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    *(void *)&v43[-16] = v12;
    __chkstk_darwin(v12);
    *(void *)&v43[-16] = sub_1003BB4F0;
    *(void *)&v43[-8] = v13;
    swift_retain();
    os_unfair_lock_lock(v11 + 4);
    sub_1003BA354(aBlock);
    os_unfair_lock_unlock(v11 + 4);
    int v14 = LOBYTE(aBlock[0]);
    swift_release();
    if (v14 == 1)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
      LOBYTE(aBlock[0]) = 0;
      DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
      static Logger.Enumeration.getter();
      id v15 = a2;
      id v16 = v10;
      id v17 = v15;
      id v18 = v16;
      int v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.info.getter();
      int v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        aBlock[0] = v46;
        *(_DWORD *)uint64_t v22 = 136446978;
        unsigned int v48 = a3;
        uint64_t v50 = sub_10009B0E4(0x286465676E616863, 0xEF293A726F663A5FLL, aBlock);
        os_log_t v45 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v22 + 12) = 2082;
        id v23 = [self propertyName:v48];
        int v44 = v21;
        id v24 = v23;
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v47 = v18;
        unint64_t v27 = v26;

        uint64_t v50 = sub_10009B0E4(v25, v27, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 22) = 2080;
        id v28 = [v17 displayName];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v31 = v30;

        uint64_t v50 = sub_10009B0E4(v29, v31, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 32) = 2080;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
        *(void *)(inited + 32) = v17;
        uint64_t v50 = inited;
        specialized Array._endMutation()();
        unint64_t v33 = v50;
        id v34 = v17;
        uint64_t v35 = sub_1003B9ECC(v33);
        unint64_t v37 = v36;
        swift_bridgeObjectRelease();
        uint64_t v50 = sub_10009B0E4(v35, v37, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        id v18 = v47;
        a3 = v48;
        swift_bridgeObjectRelease();
        os_log_t v38 = v45;
        _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v44, "[DSEnumeration] %{public}s: Property %{public}s change on %s%s", (uint8_t *)v22, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v8, v5);
      uint64_t v39 = swift_allocObject();
      *(_DWORD *)(v39 + 16) = a3;
      *(void *)(v39 + 24) = v17;
      *(void *)(v39 + 32) = v18;
      aBlock[4] = (uint64_t)sub_1003BACF8;
      void aBlock[5] = v39;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_1000666D8;
      uint64_t aBlock[3] = (uint64_t)&unk_1006A6D38;
      unint64_t v40 = _Block_copy(aBlock);
      id v41 = v17;
      id v42 = v18;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v40);
    }
  }
}

void sub_1003B5018(int a1, id a2, char *a3)
{
  if (a1 == 1969385844 && (id v5 = [a2 enumeratorError]) != 0)
  {
    uint64_t v11 = v5;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1001A0BC4((uint64_t)v11);
      swift_unknownObjectRelease();
    }
    sub_1003AEEE0();
  }
  else if (a3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] != 2)
  {
    id v6 = [a3 isGathering];
    if ((v6 & 1) == 0)
    {
      uint64_t v7 = *(os_unfair_lock_s **)&a3[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
      __chkstk_darwin(v6);
      __chkstk_darwin(v8);
      swift_retain();
      os_unfair_lock_lock(v7 + 4);
      sub_1003BA354(&v12);
      os_unfair_lock_unlock(v7 + 4);
      int v9 = v12;
      swift_release();
      if (v9 == 1)
      {
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          sub_1003BA36C(a2, Strong);
          swift_unknownObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1003B5258(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int8 v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a2, 0xD000000000000013, 0x80000001005EF760);
  if (result)
  {
    uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = a1;
    aBlock[4] = sub_1003BAC88;
    void aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6C98;
    id v16 = _Block_copy(aBlock);
    uint64_t v19 = v9;
    id v17 = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    int v21 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003B5584(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = type metadata accessor for Logger();
  uint64_t v70 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (unint64_t)&v63 - v7;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v71 = a2;
    uint64_t v69 = v5;
    uint64_t v10 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    uint64_t v11 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    *(&v63 - 2) = v12;
    __chkstk_darwin(v12);
    *(&v63 - 2) = (uint64_t)sub_1003BB4F0;
    *(&v63 - 1) = v13;
    uint64_t v15 = v14;
    swift_retain();
    os_unfair_lock_lock(v11 + 4);
    sub_1003BA354(v74);
    os_unfair_lock_unlock(v11 + 4);
    int v16 = LOBYTE(v74[0]);
    uint64_t v17 = swift_release();
    if (v16 != 1) {
      goto LABEL_9;
    }
    uint64_t v68 = v10;
    uint64_t v18 = *(os_unfair_lock_s **)&v15[v10];
    __chkstk_darwin(v17);
    *(&v63 - 2) = (uint64_t)v15;
    __chkstk_darwin(v19);
    *(&v63 - 2) = (uint64_t)sub_1000CB168;
    *(&v63 - 1) = v20;
    uint64_t v21 = (uint64_t)&v18[4];
    swift_retain();
    os_unfair_lock_lock(v18 + 4);
    sub_1000CB0F0(v74);
    os_unfair_lock_unlock(v18 + 4);
    unint64_t v22 = v74[0];
    swift_release();
    uint64_t v23 = (uint64_t)sub_1000D24AC(v22);
    swift_bridgeObjectRelease();
    if (v23)
    {
      uint64_t v66 = 0;
      uint64_t v75 = v23;
      static Logger.Enumeration.getter();
      unint64_t v24 = v71;
      swift_bridgeObjectRetain_n();
      uint64_t v67 = v15;
      uint64_t v25 = v15;
      unint64_t v26 = Logger.logObject.getter();
      LOBYTE(v23) = static os_log_type_t.info.getter();
      BOOL v27 = os_log_type_enabled(v26, (os_log_type_t)v23);
      uint64_t v28 = v24 >> 62;
      uint64_t v72 = v25;
      if (!v27)
      {

        swift_bridgeObjectRelease_n();
        id v64 = *(void (**)(unint64_t, unint64_t))(v70 + 8);
        v64(v8, v3);
        unint64_t v31 = v25;
        goto LABEL_13;
      }
      uint64_t v21 = swift_slowAlloc();
      id v64 = (void (*)(unint64_t, unint64_t))swift_slowAlloc();
      v74[0] = (uint64_t)v64;
      *(_DWORD *)uint64_t v21 = 136446722;
      uint64_t v73 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF760, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2048;
      if (v28) {
        goto LABEL_58;
      }
      uint64_t v29 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        swift_bridgeObjectRelease();
        uint64_t v73 = v29;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 22) = 2080;
        uint64_t v63 = v28;
        swift_bridgeObjectRetain();
        if (v28)
        {
          sub_1000CBE70((uint64_t *)&unk_100706730);
          unint64_t v30 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          unint64_t v30 = v24;
        }
        uint64_t v32 = sub_1003B9ECC(v30);
        unint64_t v34 = v33;
        swift_bridgeObjectRelease();
        uint64_t v73 = sub_10009B0E4(v32, v34, v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        unint64_t v31 = v72;

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v23, "[DSEnumeration] %{public}s: added %ld nodes%s", (uint8_t *)v21, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v64 = *(void (**)(unint64_t, unint64_t))(v70 + 8);
        v64(v8, v3);
        uint64_t v28 = v63;
LABEL_13:
        v74[0] = (uint64_t)_swiftEmptyArrayStorage;
        if (v28) {
          goto LABEL_30;
        }
        uint64_t v35 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        unint64_t v36 = v31;
        unint64_t v65 = v3;
        if (v35)
        {
LABEL_15:
          unint64_t v37 = 0;
          uint64_t v28 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate;
          unint64_t v3 = v24 & 0xC000000000000001;
          uint64_t v38 = v24 & 0xFFFFFFFFFFFFFF8;
          unint64_t v26 = &selRef_prepareForReuse;
          while (1)
          {
            if (v3)
            {
              id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v37 >= *(void *)(v38 + 16))
              {
                __break(1u);
LABEL_29:
                __break(1u);
LABEL_30:
                swift_bridgeObjectRetain();
                id v42 = v31;
                uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
                unint64_t v65 = v3;
                if (!v35) {
                  break;
                }
                goto LABEL_15;
              }
              id v39 = *(id *)(v24 + 8 * v37 + 32);
            }
            uint64_t v21 = (uint64_t)v39;
            unint64_t v40 = v37 + 1;
            if (__OFADD__(v37, 1)) {
              goto LABEL_29;
            }
            if ([v39 propertyAsBool:1987273324]
              && ((id v41 = *(void **)&v31[v28]) == 0
               || ([v41 evaluateWithObject:v21] & 1) != 0))
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              unint64_t v24 = v71;
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              unint64_t v31 = v72;
            }
            else
            {
            }
            ++v37;
            if (v40 == v35)
            {
              unint64_t v8 = v74[0];
              goto LABEL_32;
            }
          }
        }
        unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_32:
        swift_bridgeObjectRelease();

        if ((v8 & 0x8000000000000000) != 0 || (v8 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
          if (!v23) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v23 = *(void *)(v8 + 16);
          swift_bridgeObjectRetain();
          if (!v23) {
            goto LABEL_46;
          }
        }
        if (v23 >= 1) {
          break;
        }
        __break(1u);
LABEL_58:
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      for (uint64_t i = 0; i != v23; ++i)
      {
        if ((v8 & 0xC000000000000001) != 0) {
          id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v44 = *(id *)(v8 + 8 * i + 32);
        }
        os_log_t v45 = v44;
        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        swift_bridgeObjectRetain();
        id v46 = v45;
        LOBYTE(v45) = Array<A>.contains(node:)();
        swift_bridgeObjectRelease();

        if ((v45 & 1) == 0)
        {
          id v47 = v46;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
LABEL_46:
      swift_release();
      unint64_t v48 = (unint64_t)sub_10001AB88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if (v48 >> 62)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        uint64_t v50 = _bridgeCocoaArray<A>(_:)();
        uint64_t v49 = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v49 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        uint64_t v50 = v48;
      }
      uint64_t v51 = *(os_unfair_lock_s **)&v67[v68];
      __chkstk_darwin(v49);
      *(&v63 - 2) = (uint64_t)v72;
      *(&v63 - 1) = v50;
      __chkstk_darwin(v52);
      *(&v63 - 2) = (uint64_t)sub_1000D7258;
      *(&v63 - 1) = v53;
      swift_retain();
      os_unfair_lock_lock(v51 + 4);
      sub_1000D8B60();
      os_unfair_lock_unlock(v51 + 4);
      swift_release();
      swift_bridgeObjectRelease();
      Swift::UInt32 v54 = v69;
      static Logger.Enumeration.getter();
      swift_bridgeObjectRetain();
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        v74[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 136446466;
        uint64_t v73 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF760, v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 12) = 2048;
        unint64_t v58 = v65;
        if (v48 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v59 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        uint64_t v73 = v59;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "[DSEnumeration] %{public}s: nodes = %ld", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        char v60 = v69;
        unint64_t v61 = v58;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        char v60 = v54;
        unint64_t v61 = v65;
      }
      v64((unint64_t)v60, v61);
      uint64_t v62 = v72;
      swift_beginAccess();
      sub_1003B9364(v8);
      swift_endAccess();
      swift_release();
      sub_1003B0674();
    }
    else
    {
LABEL_9:
    }
  }
}

uint64_t sub_1003B6050(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a2, 0xD000000000000017, 0x80000001005EF740);
  if (result)
  {
    uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = a1;
    aBlock[4] = sub_1003BA334;
    void aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6BF8;
    int v16 = _Block_copy(aBlock);
    uint64_t v19 = v9;
    uint64_t v17 = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003B637C(uint64_t a1, unint64_t a2)
{
  uint64_t v95 = type metadata accessor for Logger();
  unint64_t v3 = *(void **)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v5 = (char *)v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)v85 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v85 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (char *)Strong;
    os_log_type_t v93 = v5;
    BOOL v94 = v8;
    uint64_t v14 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
    uint64_t v15 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock);
    __chkstk_darwin(Strong);
    v85[-2] = v16;
    __chkstk_darwin(v16);
    v85[-2] = sub_1003BA33C;
    v85[-1] = v17;
    swift_retain();
    os_unfair_lock_lock(v15 + 4);
    sub_1003BA354(aBlock);
    os_unfair_lock_unlock(v15 + 4);
    int v18 = LOBYTE(aBlock[0]);
    uint64_t v19 = swift_release();
    if (v18 != 1) {
      goto LABEL_9;
    }
    uint64_t v90 = v14;
    uint64_t v20 = *(void *)&v13[v14];
    __chkstk_darwin(v19);
    v85[-2] = v13;
    __chkstk_darwin(v21);
    v85[-2] = sub_1000CB168;
    v85[-1] = v22;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v20 + 16));
    sub_1000CB0F0(aBlock);
    os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 16));
    unint64_t v23 = aBlock[0];
    swift_release();
    unint64_t v24 = sub_1000D24AC(v23);
    swift_bridgeObjectRelease();
    if (!v24)
    {
LABEL_9:

      return;
    }
    uint64_t v87 = 0;
    unint64_t v99 = (unint64_t)v24;
    static Logger.Enumeration.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v25 = v13;
    unint64_t v26 = Logger.logObject.getter();
    int v27 = static os_log_type_t.info.getter();
    BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
    uint64_t v29 = a2 >> 62;
    uint64_t v92 = v3;
    unint64_t v89 = a2 >> 62;
    if (!v28)
    {

      swift_bridgeObjectRelease_n();
      unint64_t v33 = v11;
      uint64_t v11 = (char *)v95;
      unint64_t v91 = (void (*)(char *, uint64_t))v3[1];
      v91(v33, v95);
      unint64_t v86 = a2 & 0x8000000000000000;
      goto LABEL_13;
    }
    LODWORD(v91) = v27;
    uint64_t v20 = swift_slowAlloc();
    unint64_t v3 = (void *)swift_slowAlloc();
    aBlock[0] = (uint64_t)v3;
    *(_DWORD *)uint64_t v20 = 136446722;
    uint64_t v96 = sub_10009B0E4(0xD000000000000017, 0x80000001005EF740, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2048;
    unint64_t v86 = a2 & 0x8000000000000000;
    if (v29) {
      goto LABEL_60;
    }
    uint64_t v30 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      swift_bridgeObjectRelease();
      uint64_t v96 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2080;
      id v88 = (char *)v3;
      unint64_t v31 = v25;
      swift_bridgeObjectRetain();
      if (v29)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        unint64_t v32 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        unint64_t v32 = a2;
      }
      uint64_t v34 = sub_1003B9ECC(v32);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v96 = sub_10009B0E4(v34, v36, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();

      uint64_t v25 = v31;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v91, "[DSEnumeration] %{public}s: deleted %ld nodes%s", (uint8_t *)v20, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v3 = v92;
      unint64_t v37 = v11;
      uint64_t v11 = (char *)v95;
      unint64_t v91 = (void (*)(char *, uint64_t))v92[1];
      v91(v37, v95);
      uint64_t v29 = v89;
LABEL_13:
      uint64_t v38 = v94;
      if (v29)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        if (!v29)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v29) {
          goto LABEL_24;
        }
      }
      if (v29 >= 1) {
        break;
      }
      __break(1u);
LABEL_60:
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    id v88 = v25;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v39 = 0;
      do
      {
        unint64_t v40 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        ++v39;
        swift_beginAccess();
        id v41 = (void *)sub_1004FDF14(v40);
        swift_endAccess();

        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        LOBYTE(aBlock[0]) = 1;
        DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
        swift_unknownObjectRelease();
      }
      while (v29 != v39);
    }
    else
    {
      uint64_t v42 = 0;
      do
      {
        unint64_t v43 = *(void **)(a2 + 8 * v42++ + 32);
        swift_beginAccess();
        id v44 = v43;
        os_log_t v45 = (void *)sub_1004FDF14(v44);
        swift_endAccess();

        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        LOBYTE(aBlock[0]) = 1;
        DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
      }
      while (v29 != v42);
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v94;
    uint64_t v11 = (char *)v95;
    unint64_t v3 = v92;
    uint64_t v25 = v88;
LABEL_25:
    sub_1003B0674();
    static Logger.Enumeration.getter();
    id v46 = v25;
    id v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.info.getter();
    BOOL v49 = os_log_type_enabled(v47, v48);
    id v88 = v46;
    if (v49)
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      aBlock[0] = v51;
      *(_DWORD *)uint64_t v50 = 136446722;
      uint64_t v96 = sub_10009B0E4(0xD000000000000017, 0x80000001005EF740, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v50 + 12) = 2048;
      swift_beginAccess();
      unint64_t v52 = v99;
      if (v99 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v53 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v97 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v50 + 22) = 2080;
      v85[1] = v51;
      if (v52 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1000CBE70((uint64_t *)&unk_100706730);
        unint64_t v54 = _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        unint64_t v54 = v52;
      }
      swift_bridgeObjectRelease();
      unint64_t v3 = (void *)sub_1003B9ECC(v54);
      unint64_t v57 = v56;
      swift_bridgeObjectRelease();
      uint64_t v97 = sub_10009B0E4((uint64_t)v3, v57, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      unint64_t v58 = v88;

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "[DSEnumeration] %{public}s: current %ld nodes%s", (uint8_t *)v50, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v55 = v38;
      uint64_t v11 = (char *)v95;
    }
    else
    {

      uint64_t v55 = v38;
    }
    v91(v55, (uint64_t)v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1003BA754((uint64_t *)&v99, a2);
    swift_bridgeObjectRelease();
    uint64_t v60 = v90;
    if (v99 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v61 >= v59)
      {
LABEL_35:
        sub_1005166A4(v59, v61);
        swift_endAccess();
        unint64_t v62 = v99;
        unint64_t v3 = v11;
        if (!(v99 >> 62))
        {
          swift_bridgeObjectRetain_n();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          uint64_t v63 = v62;
          goto LABEL_37;
        }
LABEL_58:
        swift_bridgeObjectRetain();
        sub_1000CBE70((uint64_t *)&unk_100706730);
        uint64_t v63 = _bridgeCocoaArray<A>(_:)();
LABEL_37:
        uint64_t v64 = swift_bridgeObjectRelease();
        unint64_t v65 = *(os_unfair_lock_s **)&v13[v60];
        __chkstk_darwin(v64);
        uint64_t v66 = v88;
        v85[-2] = v88;
        v85[-1] = v63;
        __chkstk_darwin(v67);
        v85[-2] = sub_1000D7258;
        v85[-1] = v68;
        swift_retain();
        os_unfair_lock_lock(v65 + 4);
        sub_1000D8B78();
        os_unfair_lock_unlock(v65 + 4);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v69 = v93;
        static Logger.Enumeration.getter();
        uint64_t v70 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v72 = 136446466;
          uint64_t v97 = sub_10009B0E4(0xD000000000000017, 0x80000001005EF740, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v72 + 12) = 2048;
          if (v99 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v73 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v97 = v73;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v70, v71, "[DSEnumeration] %{public}s: nodes = %ld", (uint8_t *)v72, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          int v74 = v93;
        }
        else
        {

          int v74 = v69;
        }
        v91(v74, (uint64_t)v3);
        unint64_t v75 = v89;
        if ((sub_1000D7150() & 1) == 0)
        {

LABEL_66:
          swift_bridgeObjectRelease();
          return;
        }
        swift_bridgeObjectRetain();
        if (v75)
        {
          sub_1000CBE70((uint64_t *)&unk_100706730);
          uint64_t v76 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
          a2 = v76;
        }
        else
        {
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        }
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v77) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v77 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v77)
          {
LABEL_49:
            aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
            specialized ContiguousArray.reserveCapacity(_:)();
            if (v77 < 0)
            {
              __break(1u);
              return;
            }
            uint64_t v78 = 0;
            do
            {
              if ((a2 & 0xC000000000000001) != 0)
              {
                uint64_t v79 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                uint64_t v79 = *(void **)(a2 + 8 * v78 + 32);
                swift_unknownObjectRetain();
              }
              ++v78;
              id v80 = [v79 identifier];
              swift_unknownObjectRelease();
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            while (v77 != v78);
            swift_bridgeObjectRelease();
            uint64_t v81 = (void *)aBlock[0];
            goto LABEL_65;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v81 = _swiftEmptyArrayStorage;
LABEL_65:
        uint64_t v82 = swift_allocObject();
        *(void *)(v82 + 16) = v66;
        *(void *)(v82 + 24) = v81;
        aBlock[4] = (uint64_t)sub_1003BAC3C;
        void aBlock[5] = v82;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        uint64_t aBlock[2] = (uint64_t)sub_1000666D8;
        uint64_t aBlock[3] = (uint64_t)&unk_1006A6C48;
        uint64_t v83 = _Block_copy(aBlock);
        Swift::UInt32 v84 = v66;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v83);

        goto LABEL_66;
      }
    }
    else
    {
      uint64_t v61 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v61 >= v59) {
        goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_58;
  }
}

uint64_t sub_1003B72D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1001A12FC((uint64_t)_swiftEmptyArrayStorage, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003B7358(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a4;
  id v10 = a1;
  a5(v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003B73F8(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a1, 0x28646574656C6564, 0xEB00000000293A5FLL);
  if (result)
  {
    v17[1] = *(void *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v12 = swift_allocObject();
    uint64_t v18 = v7;
    uint64_t v13 = v12;
    swift_unknownObjectWeakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_1003BA2E0;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6B58;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    id v16 = a1;
    static DispatchQoS.unspecified.getter();
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003B7720(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    static Logger.Enumeration.getter();
    id v9 = a2;
    id v10 = v8;
    id v11 = v9;
    id v12 = v10;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v36 = v4;
      uint64_t v17 = v16;
      uint64_t v35 = swift_slowAlloc();
      aBlock[0] = v35;
      *(_DWORD *)uint64_t v17 = 136446722;
      int v34 = v15;
      uint64_t v37 = sub_10009B0E4(0x28646574656C6564, 0xEB00000000293A5FLL, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2080;
      id v18 = [v11 displayName];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v3;
      uint64_t v20 = v19;
      unint64_t v22 = v21;

      uint64_t v37 = sub_10009B0E4(v20, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 22) = 2080;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v11;
      uint64_t v37 = inited;
      specialized Array._endMutation()();
      unint64_t v24 = v37;
      id v25 = v11;
      uint64_t v26 = sub_1003B9ECC(v24);
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_10009B0E4(v26, v28, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v34, "[DSEnumeration] %{public}s: on %s%s", (uint8_t *)v17, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v33);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    LOBYTE(aBlock[0]) = 1;
    DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
    if (sub_1000D7150())
    {
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v12;
      *(void *)(v29 + 24) = v11;
      aBlock[4] = (uint64_t)sub_1003BA328;
      void aBlock[5] = v29;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = (uint64_t)sub_1000666D8;
      uint64_t aBlock[3] = (uint64_t)&unk_1006A6BA8;
      uint64_t v30 = _Block_copy(aBlock);
      id v31 = v11;
      id v32 = v12;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v30);
    }
  }
}

uint64_t sub_1003B7B94(uint64_t a1, void *a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1005A04F0;
    id v5 = [a2 identifier];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1000A6B78(v6, v6[3]);
    *(void *)(v4 + 32) = _bridgeAnythingToObjectiveC<A>(_:)();
    specialized Array._endMutation()();
    sub_10009B1B8((uint64_t)v6);
    sub_1001A12FC((uint64_t)_swiftEmptyArrayStorage, v4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003B7CF0(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a1, 0xD000000000000013, 0x80000001005EF700);
  if (result)
  {
    v17[1] = *(void *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v12 = swift_allocObject();
    uint64_t v18 = v7;
    uint64_t v13 = v12;
    swift_unknownObjectWeakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_1003BA2BC;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6B08;
    int v15 = _Block_copy(aBlock);
    swift_retain();
    id v16 = a1;
    static DispatchQoS.unspecified.getter();
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003B8014(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (void *)result;
    uint64_t v37 = v4;
    static os_signpost_type_t.begin.getter();
    uint64_t updated = (void *)updateLogHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    static Logger.Enumeration.getter();
    id v14 = a2;
    id v15 = v12;
    id v16 = v14;
    id v17 = v15;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v39 = v35;
      *(_DWORD *)uint64_t v21 = 136446722;
      uint64_t v38 = sub_10009B0E4(0xD000000000000013, 0x80000001005EF700, &v39);
      uint64_t v36 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2080;
      id v22 = [v16 displayName];
      int v34 = v20;
      id v23 = v22;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;

      uint64_t v38 = sub_10009B0E4(v24, v26, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2080;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v16;
      uint64_t v38 = inited;
      specialized Array._endMutation()();
      unint64_t v28 = v38;
      id v29 = v16;
      uint64_t v30 = sub_1003B9ECC(v28);
      unint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_10009B0E4(v30, v32, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v34, "[DSEnumeration] %{public}s: Open sync started on %s%s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v37 + 8))(v6, v36);
    }
    else
    {

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v37 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_1003B8504(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003B36B0(a1, 0xD000000000000015, 0x80000001005EF6A0);
  if (result)
  {
    v17[1] = *(void *)(v1 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue);
    uint64_t v12 = swift_allocObject();
    uint64_t v18 = v7;
    uint64_t v13 = v12;
    swift_unknownObjectWeakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_1003B90C0;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_1000666D8;
    uint64_t aBlock[3] = &unk_1006A6AB8;
    id v15 = _Block_copy(aBlock);
    swift_retain();
    id v16 = a1;
    static DispatchQoS.unspecified.getter();
    os_log_type_t v19 = _swiftEmptyArrayStorage;
    sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1003B8828(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = type metadata accessor for OSSignpostID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    os_log_type_t v48 = v6;
    uint64_t v49 = v4;
    static os_signpost_type_t.end.getter();
    uint64_t updated = (void *)updateLogHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    static Logger.Enumeration.getter();
    id v17 = a2;
    id v18 = v15;
    id v19 = v17;
    id v20 = v18;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v51 = v45;
      *(_DWORD *)uint64_t v23 = 136446722;
      uint64_t v50 = sub_10009B0E4(0xD000000000000015, 0x80000001005EF6A0, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2080;
      id v24 = [v19 displayName];
      uint64_t v46 = v3;
      id v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v47 = v20;
      uint64_t v27 = v26;
      unint64_t v29 = v28;

      uint64_t v50 = sub_10009B0E4(v27, v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v19;
      uint64_t v50 = inited;
      specialized Array._endMutation()();
      unint64_t v31 = v50;
      id v32 = v19;
      uint64_t v33 = sub_1003B9ECC(v31);
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      uint64_t v36 = v33;
      uint64_t v3 = v46;
      uint64_t v50 = sub_10009B0E4(v36, v35, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v20 = v47;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[DSEnumeration] %{public}s: Open sync completed on %s%s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v37 = *(void (**)(char *, uint64_t))(v49 + 8);
    v37(v9, v3);
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    swift_unknownObjectRetain();
    char v38 = DOCNode.isEqualTo(node:)();
    swift_unknownObjectRelease();
    uint64_t v39 = v48;
    if (v38)
    {
      static Logger.Enumeration.getter();
      unint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        id v47 = v20;
        unint64_t v43 = (uint8_t *)v42;
        uint64_t v51 = swift_slowAlloc();
        *(_DWORD *)unint64_t v43 = 136446210;
        uint64_t v50 = sub_10009B0E4(0xD000000000000015, 0x80000001005EF6A0, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "[DSEnumeration] %{public}s: Open sync completed on the collection's observed node, start refreshing items", v43, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v20 = v47;
        swift_slowDealloc();
      }

      v37(v39, v3);
      sub_1003B15D4(0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FileSystemCollectionDomainState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003B8F98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileSystemCollectionDomainState()
{
  return &type metadata for FileSystemCollectionDomainState;
}

unint64_t sub_1003B8FD4()
{
  unint64_t result = qword_100713780;
  if (!qword_100713780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713780);
  }
  return result;
}

void *sub_1003B9028@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  unint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1003B906C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B90A4()
{
  return sub_1003BB040((void (*)(void))&_swift_release, 32);
}

void sub_1003B90C0()
{
  sub_1003B8828(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003B90C8(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = v5 & 0xC000000000000001;
    uint64_t v19 = v3;
    uint64_t v20 = v5 + 32;
    uint64_t v23 = v5;
    unint64_t v24 = a2 & 0xC000000000000001;
    unint64_t v9 = a2 >> 62;
    unint64_t v21 = v5 & 0xC000000000000001;
    uint64_t v22 = v6;
    while (1)
    {
      if (v8)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v9) {
          goto LABEL_6;
        }
      }
      else
      {
        id v10 = *(id *)(v20 + 8 * v7);
        if (!v9)
        {
LABEL_6:
          uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v11) {
            goto LABEL_14;
          }
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11)
      {
LABEL_14:

        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
LABEL_7:
      if (v24) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a2 + 32);
      }
      uint64_t v5 = (uint64_t)v12;
      sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
      char v13 = static NSObject.== infix(_:_:)();

      if (v13)
      {
LABEL_31:

        swift_bridgeObjectRelease();
        return v7;
      }
      if (v11 != 1) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_26:
      uint64_t v6 = v22;
      uint64_t v5 = v23;
      unint64_t v9 = a2 >> 62;
      unint64_t v8 = v21;
LABEL_27:
      if (__OFADD__(v7++, 1)) {
        goto LABEL_34;
      }
      if (v7 == v6) {
        return 0;
      }
    }
    if (v24)
    {
      uint64_t v5 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v3 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        char v14 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v14) {
          goto LABEL_31;
        }
        ++v5;
        if (v3 == v11) {
          goto LABEL_25;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v15 = 5;
      while (1)
      {
        uint64_t v3 = v15 - 3;
        if (__OFADD__(v15 - 4, 1)) {
          break;
        }
        uint64_t v5 = (uint64_t)*(id *)(a2 + 8 * v15);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_31;
        }
        ++v15;
        if (v3 == v11)
        {
LABEL_25:

          swift_bridgeObjectRelease();
          uint64_t v3 = v19;
          goto LABEL_26;
        }
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_1003B9364(unint64_t a1)
{
  if (a1 >> 62)
  {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      return;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
  }
  else if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      unsigned int v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      sub_1000EE744(&v7, v4);
    }
  }
  else
  {
    uint64_t v5 = (void **)(a1 + 32);
    do
    {
      uint64_t v6 = *v5++;
      sub_1000EE744(&v7, v6);

      --v2;
    }
    while (v2);
  }
}

void sub_1003B9434()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 134217984;
    unint64_t v9 = sub_1003AB85C();
    if (v9 >> 62) {
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_release();
    swift_bridgeObjectRelease();
    aBlock[0] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "DOCFileSystemCollectionManager: Application did enter Background, Stoping %ld active collections", v8, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v11 = [self processInfo];
  NSString v12 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_1003BB1D0;
  void aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_10000A884;
  uint64_t aBlock[3] = &unk_1006A7260;
  char v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v11 performExpiringActivityWithReason:v12 usingBlock:v13];
  _Block_release(v13);
}

uint64_t sub_1003B96F8()
{
  uint64_t v2 = v0;
  uint64_t isEscapingClosureAtFileLocation = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(isEscapingClosureAtFileLocation - 8);
  __chkstk_darwin(isEscapingClosureAtFileLocation);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  swift_retain_n();
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v7, v8))
  {

    swift_release_n();
    goto LABEL_6;
  }
  uint64_t v1 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v1 = 134217984;
  unint64_t v9 = sub_1003AB85C();
  if (v9 >> 62) {
    goto LABEL_8;
  }
  for (uint64_t i = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    swift_release();
    swift_bridgeObjectRelease();
    aBlock[0] = i;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "DOCFileSystemCollectionManager: Application will enter Foreground, Restarting active %ld collections", v1, 0xCu);
    swift_slowDealloc();

LABEL_6:
    id v11 = *(void (**)(char *, uint64_t))(v4 + 8);
    v4 += 8;
    v11(v6, isEscapingClosureAtFileLocation);
    uint64_t v12 = sub_1003AB85C();
    char v13 = *(NSObject **)(v2 + 24);
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1003BB180;
    *(void *)(v14 + 24) = v2;
    aBlock[4] = sub_100162A48;
    id v17 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_100087990;
    uint64_t aBlock[3] = &unk_1006A7210;
    uint64_t v6 = (char *)_Block_copy(aBlock);
    os_log_type_t v7 = v17;
    swift_retain();
    swift_release();
    dispatch_sync(v13, v6);
    _Block_release(v6);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_8:
    ;
  }
  return result;
}

id sub_1003B99F8(void *a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v15 - v6;
  if (![a1 isContainer]) {
    return 0;
  }
  id v8 = [a1 fileURL];
  if (v8)
  {
    unint64_t v9 = v8;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_10032D1DC((uint64_t)v5, (uint64_t)v7);
  type metadata accessor for URL();
  uint64_t v12 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v10) == 1)
  {
    sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
    Swift::Bool v13 = 0;
  }
  else
  {
    Swift::Bool v13 = URL.startAccessingSecurityScopedResource()();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v10);
  }
  id v11 = [a1 iteratorWithOptions:4];
  sub_1003B32F8(v13, a1);
  return v11;
}

void *sub_1003B9C1C(void *a1, void *a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  os_log_type_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = &_swiftEmptyArrayStorage;
  if (a2)
  {
    swift_unknownObjectRetain();
    id v11 = [a1 fileURL];
    if (v11)
    {
      uint64_t v12 = v11;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 0, 1, v13);
    }
    else
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
    }
    sub_10032D1DC((uint64_t)v7, (uint64_t)v9);
    type metadata accessor for URL();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    {
      sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
      Swift::Bool v15 = 0;
    }
    else
    {
      Swift::Bool v15 = URL.startAccessingSecurityScopedResource()();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    }
    unint64_t v21 = (unint64_t)&_swiftEmptyArrayStorage;
    id v16 = [a2 first];
    if (v16)
    {
      id v17 = v16;
      do
      {
        id v18 = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v17 = [a2 next];
      }
      while (v17);
      uint64_t v10 = (void *)v21;
    }
    sub_1003B32F8(v15, a1);
    swift_unknownObjectRelease();
  }
  return v10;
}

uint64_t sub_1003B9ECC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  Swift::Bool v7 = Logger.doc_isEnabled(for:)(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v7) {
    return 0;
  }
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v8 <= 1) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = 45;
    }
    if (v8 <= 1) {
      unint64_t v10 = 0xE000000000000000;
    }
    else {
      unint64_t v10 = 0xE100000000000000;
    }
    uint64_t v37 = 10;
    unint64_t v38 = 0xE100000000000000;
    unint64_t v11 = v10;
    String.append(_:)(*(Swift::String *)&v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v12._uint64_t countAndFlagsBits = 9;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = v37;
    unint64_t v13 = v38;
    Swift::Bool v15 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_25:
      uint64_t v37 = (uint64_t)v15;
      sub_1000CBE70(&qword_10070AEB0);
      sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
      uint64_t v28 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v37 = v14;
      unint64_t v38 = v13;
      swift_bridgeObjectRetain();
      v31._uint64_t countAndFlagsBits = v28;
      v31._object = v30;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v37;
    }
    uint64_t v36 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100059E2C(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v33 = v14;
    unint64_t v34 = v13;
    uint64_t v17 = 0;
    Swift::Bool v15 = v36;
    while (v8 != v17)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v18 = *(void **)(a1 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v37 = 0x203A45444F4ELL;
      unint64_t v38 = 0xE600000000000000;
      swift_getObjectType();
      v19._uint64_t countAndFlagsBits = DOCNode.nodeDescription.getter();
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      uint64_t v20 = v37;
      unint64_t v21 = v38;
      id v22 = [v18 fpfs_fpItem];
      if (v22)
      {
        uint64_t v23 = v22;
        v35._uint64_t countAndFlagsBits = 0x203A4D455449090ALL;
        v35._object = (void *)0xE800000000000000;
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        v24._uint64_t countAndFlagsBits = DOCNode.nodeDescription.getter();
        String.append(_:)(v24);
        swift_bridgeObjectRelease();
        String.append(_:)(v35);
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v20 = v37;
        unint64_t v21 = v38;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      uint64_t v36 = v15;
      unint64_t v26 = v15[2];
      unint64_t v25 = v15[3];
      if (v26 >= v25 >> 1)
      {
        sub_100059E2C(v25 > 1, v26 + 1, 1);
        Swift::Bool v15 = v36;
      }
      ++v17;
      void v15[2] = v26 + 1;
      uint64_t v27 = &v15[2 * v26];
      v27[4] = v20;
      v27[5] = v21;
      if (v8 == v17)
      {
        uint64_t v14 = v33;
        unint64_t v13 = v34;
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003BA2A0()
{
  return sub_1003BB040((void (*)(void))&_swift_release, 32);
}

uint64_t sub_1003BA2BC()
{
  return sub_1003B8014(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003BA2C4()
{
  return sub_1003BB040((void (*)(void))&_swift_release, 32);
}

void sub_1003BA2E0()
{
  sub_1003B7720(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003BA2E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BA328()
{
  return sub_1003B7B94(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1003BA334()
{
  sub_1003B637C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003BA33C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving);
}

void *sub_1003BA354@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003BB218(a1);
}

void sub_1003BA36C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::Bool v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v8 = a2;
  id v9 = a1;
  unint64_t v10 = (char *)v8;
  id v11 = v9;
  Swift::String v12 = Logger.logObject.getter();
  int v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v28 = v13;
    os_log_t v29 = v12;
    uint64_t v31 = v5;
    uint64_t v32 = v4;
    uint64_t v14 = swift_slowAlloc();
    Swift::Bool v15 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v34 = v30;
    *(_DWORD *)uint64_t v14 = 136446978;
    unint64_t v16 = *(void *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v16)
    {

      __break(1u);
      return;
    }
    uint64_t v17 = *(void *)&v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_10009B0E4(v17, v16, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    uint64_t v33 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005EF780, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 22) = 2112;
    uint64_t v33 = (uint64_t)v10;
    id v18 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::Bool v15 = v10;

    *(_WORD *)(v14 + 32) = 2080;
    id v19 = [v11 displayName];
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    uint64_t v33 = sub_10009B0E4(v20, v22, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v23 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v28, "%{public}s %{public}s DOCNodeCollection (%@) observedNode: %s", (uint8_t *)v14, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  Swift::String v24 = &v10[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v25 = *((void *)v24 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, id, uint64_t, uint64_t))(v25 + 24))(v10, v11, ObjectType, v25);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1003BA754(uint64_t *a1, unint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v37 = a2;
  unint64_t v6 = sub_1003B90C8(v5, a2);
  char v8 = v7;
  uint64_t v9 = v2;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_82;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_83:
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10 != v32) {
        goto LABEL_6;
      }
    }
    else if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      uint64_t v35 = v9;
      unint64_t v36 = v37 & 0xC000000000000001;
      uint64_t v34 = a1;
      while (1)
      {
        uint64_t v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_71;
          }
          if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_72;
          }
          id v12 = *(id *)(v11 + 8 * v10 + 32);
        }
        int v13 = v12;
        if (v37 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
          if (!v14) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v14 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v14) {
            goto LABEL_22;
          }
        }
        if (v36) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(v37 + 32);
        }
        unint64_t v16 = v15;
        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        char v17 = static NSObject.== infix(_:_:)();

        if (v17)
        {

          swift_bridgeObjectRelease();
          BOOL v18 = __OFADD__(v10++, 1);
          if (v18) {
            goto LABEL_73;
          }
          goto LABEL_43;
        }
        if (v14 != 1)
        {
          if (v36)
          {
            uint64_t v28 = 1;
            while (1)
            {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
              a1 = (uint64_t *)(v28 + 1);
              if (__OFADD__(v28, 1)) {
                break;
              }
              uint64_t v9 = static NSObject.== infix(_:_:)();
              swift_unknownObjectRelease();
              if (v9) {
                goto LABEL_59;
              }
              ++v28;
              if (a1 == (uint64_t *)v14) {
                goto LABEL_57;
              }
            }
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
          uint64_t v9 = 5;
          while (1)
          {
            a1 = (uint64_t *)(v9 - 3);
            if (__OFADD__(v9 - 4, 1)) {
              break;
            }
            id v29 = *(id *)(v37 + 8 * v9);
            char v30 = static NSObject.== infix(_:_:)();

            if (v30)
            {
LABEL_59:

              swift_bridgeObjectRelease();
              a1 = v34;
              uint64_t v9 = v35;
              BOOL v18 = __OFADD__(v10++, 1);
              if (v18) {
                goto LABEL_73;
              }
              goto LABEL_43;
            }
            ++v9;
            if (a1 == (uint64_t *)v14)
            {
LABEL_57:

              swift_bridgeObjectRelease();
              a1 = v34;
              uint64_t v9 = v35;
              if (v6 != v10) {
                goto LABEL_23;
              }
              goto LABEL_41;
            }
          }
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
LABEL_82:
          __break(1u);
          goto LABEL_83;
        }
LABEL_22:

        swift_bridgeObjectRelease();
        if (v6 == v10) {
          goto LABEL_41;
        }
LABEL_23:
        uint64_t v19 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v19 = *a1;
          if ((*a1 & 0xC000000000000001) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_76;
          }
          if (v6 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_77;
          }
          id v20 = *(id *)(v19 + 8 * v6 + 32);
          if ((v19 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v10 & 0x8000000000000000) != 0) {
              goto LABEL_78;
            }
            if (v10 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_79;
            }
            id v21 = *(id *)(v19 + 8 * v10 + 32);
            goto LABEL_30;
          }
        }
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v19 = *a1;
LABEL_30:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v19;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
        {
          uint64_t v19 = sub_1000BC324(v19);
          *a1 = v19;
        }
        os_log_t v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
        *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

        specialized Array._endMutation()();
        uint64_t v24 = *a1;
        int v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v24;
        if (!v25 || v24 < 0 || (v24 & 0x4000000000000000) != 0)
        {
          uint64_t v24 = sub_1000BC324(v24);
          *a1 = v24;
        }
        if ((v10 & 0x8000000000000000) != 0) {
          goto LABEL_80;
        }
        if (v10 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_81;
        }
        unint64_t v26 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
        *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v20;

        specialized Array._endMutation()();
LABEL_41:
        BOOL v18 = __OFADD__(v6++, 1);
        if (v18) {
          goto LABEL_75;
        }
        BOOL v18 = __OFADD__(v10++, 1);
        if (v18) {
          goto LABEL_73;
        }
LABEL_43:
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v10 == v27) {
          return v6;
        }
      }
    }
    return v6;
  }
  if (!((unint64_t)*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1003BAC24()
{
  return sub_1003BB274((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003BAC3C()
{
  return sub_1003B72D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003BAC48()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003BAC88()
{
  sub_1003B5584(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003BAC90()
{
  return sub_1003BB040((void (*)(void))&_swift_release, 36);
}

void sub_1003BACAC()
{
  sub_1003B4A84(*(void *)(v0 + 16), *(void **)(v0 + 24), *(_DWORD *)(v0 + 32));
}

uint64_t sub_1003BACB8()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003BACF8()
{
  sub_1003B5018(*(_DWORD *)(v0 + 16), *(id *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_1003BAD04()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003BAD44()
{
  sub_1003B3DC4(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003BAD54()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1003BAD8C()
{
  return sub_1003B2C84(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1003BAD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100713790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BAE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100713790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BAE68()
{
  return sub_1003BB040((void (*)(void))&_swift_bridgeObjectRelease, 32);
}

uint64_t sub_1003BAE84()
{
  return sub_1003B0E64(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1003BAE8C()
{
}

uint64_t sub_1003BAE94()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BAECC()
{
  return sub_1003AFC14(*(void *)(v0 + 16));
}

uint64_t sub_1003BAED4()
{
  return sub_1003BB274((void (*)(void))&_swift_release);
}

id sub_1003BAEEC()
{
  return sub_1003ABD98(*(void **)(v0 + 16), *(void *)(v0 + 24), "DOCFileSystemCollectionManager: Adding an active collection for: %s", (SEL *)&selRef_addObject_);
}

uint64_t sub_1003BAF18()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BAF28()
{
  return sub_1003BB274((void (*)(void))&_swift_release);
}

id sub_1003BAF40()
{
  return sub_1003ABD98(*(void **)(v0 + 16), *(void *)(v0 + 24), "DOCFileSystemCollectionManager: Removing an inactive collection for: %s", (SEL *)&selRef_removeObject_);
}

uint64_t sub_1003BAF6C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003BAF7C()
{
}

void sub_1003BAF84()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving) = *(unsigned char *)(v0 + 24);
}

unint64_t sub_1003BAF9C()
{
  unint64_t result = qword_100713798;
  if (!qword_100713798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713798);
  }
  return result;
}

void sub_1003BAFF0(unint64_t a1)
{
}

uint64_t sub_1003BAFF8()
{
  return sub_1003BB040((void (*)(void))&_swift_release, 32);
}

void sub_1003BB014()
{
  sub_1003AEE84(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1003BB01C()
{
}

uint64_t sub_1003BB024()
{
  return sub_1003BB040((void (*)(void))&_swift_release, 32);
}

uint64_t sub_1003BB040(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_1003BB094(void *a1)
{
  return sub_1003AD204(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003BB09C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003BB0E4()
{
  sub_1003AD548(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003BB0F0()
{
  return sub_1003ACB08();
}

uint64_t sub_1003BB0F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BB130()
{
  return sub_1003AB9C8(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003BB138()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BB148()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BB180()
{
  return sub_1003AC380(*(void *)(v0 + 16), "DOCFileSystemCollectionManager:      re-starting collection: %s", (uint64_t)sub_1003BB01C, (uint64_t)&unk_1006A7238);
}

uint64_t sub_1003BB1C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003BB1D0(char a1)
{
}

uint64_t sub_1003BB1D8()
{
  return sub_1003AC380(*(void *)(v0 + 16), "DOCFileSystemCollectionManager:      stopping collection: %s", (uint64_t)sub_1003BAF7C, (uint64_t)&unk_1006A72D8);
}

void *sub_1003BB218@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1003BB25C()
{
  return sub_1003BB274((void (*)(void))&_swift_release);
}

uint64_t sub_1003BB274(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1003BB2C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BB2D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003BB31C()
{
  return sub_1003AFF2C(*(void **)(v0 + 16));
}

uint64_t sub_1003BB328(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a3) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t destroy for FileSystemCollectionError(uint64_t a1)
{
  return sub_1003BB358(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1003BB358(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a3) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t _s5Files25FileSystemCollectionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1003BB328(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FileSystemCollectionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1003BB328(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1003BB358(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FileSystemCollectionError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1003BB358(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FileSystemCollectionError()
{
  return &type metadata for FileSystemCollectionError;
}

void sub_1003BB4F0(unsigned char *a1@<X8>)
{
}

void sub_1003BB574()
{
}

void sub_1003BB5B4(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, &qword_100712FA0);
    sub_1000B86A8((unint64_t *)&qword_100712FA8, &qword_100712FA0);
    Set.Iterator.init(_cocoa:)();
    unint64_t v3 = (unint64_t)v21[1];
    uint64_t v19 = v21[2];
    uint64_t v4 = (uint64_t)v21[3];
    uint64_t v5 = (char *)v21[4];
    unint64_t v6 = (unint64_t)v21[5];
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = (void *)(a1 + 56);
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  while ((v3 & 0x8000000000000000) != 0)
  {
    uint64_t v14 = __CocoaSet.Iterator.next()();
    if (!v14) {
      goto LABEL_39;
    }
    uint64_t v20 = v14;
    sub_10009E6C4(0, &qword_100712FA0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = v21[0];
    swift_unknownObjectRelease();
    int64_t v13 = (int64_t)v5;
    uint64_t v11 = v6;
    if (!v15) {
      goto LABEL_39;
    }
LABEL_28:
    v21[0] = v15;
    sub_1003BCB88(v21, &v20);

    if (v2)
    {
      sub_10026AD14();
      swift_bridgeObjectRelease();
      return;
    }
    if (v20)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t v5 = (char *)v13;
    unint64_t v6 = v11;
  }
  if (v6)
  {
    uint64_t v11 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | ((void)v5 << 6);
    int64_t v13 = (int64_t)v5;
LABEL_27:
    id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_28;
  }
  int64_t v13 = (int64_t)(v5 + 1);
  if (!__OFADD__(v5, 1))
  {
    if (v13 >= v10) {
      goto LABEL_39;
    }
    unint64_t v16 = v19[v13];
    if (!v16)
    {
      int64_t v17 = (int64_t)(v5 + 2);
      if ((uint64_t)(v5 + 2) >= v10) {
        goto LABEL_39;
      }
      unint64_t v16 = v19[v17];
      if (v16) {
        goto LABEL_25;
      }
      int64_t v17 = (int64_t)(v5 + 3);
      if ((uint64_t)(v5 + 3) >= v10) {
        goto LABEL_39;
      }
      unint64_t v16 = v19[v17];
      if (v16) {
        goto LABEL_25;
      }
      int64_t v17 = (int64_t)(v5 + 4);
      if ((uint64_t)(v5 + 4) >= v10) {
        goto LABEL_39;
      }
      unint64_t v16 = v19[v17];
      if (v16)
      {
LABEL_25:
        int64_t v13 = v17;
      }
      else
      {
        int64_t v13 = (int64_t)(v5 + 5);
        if ((uint64_t)(v5 + 5) >= v10) {
          goto LABEL_39;
        }
        unint64_t v16 = v19[v13];
        if (!v16)
        {
          BOOL v18 = v5 + 6;
          while ((char *)v10 != v18)
          {
            unint64_t v16 = v19[(void)v18++];
            if (v16)
            {
              int64_t v13 = (int64_t)(v18 - 1);
              goto LABEL_26;
            }
          }
LABEL_39:
          sub_10026AD14();
          return;
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

void sub_1003BB914(uint64_t a1, unsigned int *a2)
{
  uint64_t v42 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  os_log_type_t v41 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
    sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
    Set.Iterator.init(_cocoa:)();
    a1 = v44;
    uint64_t v34 = v45;
    uint64_t v6 = v46;
    uint64_t v7 = v47;
    unint64_t v8 = v48;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v34 = a1 + 56;
    uint64_t v11 = ~v9;
    uint64_t v12 = -v9;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v8 = v13 & v10;
    swift_bridgeObjectRetain();
    uint64_t v6 = v11;
    uint64_t v7 = 0;
  }
  v32[1] = v6;
  v32[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v33 = (unint64_t)(v6 + 64) >> 6;
  unsigned int v40 = *a2;
  unint64_t v38 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v39 = (void (**)(char *, void, uint64_t))(v4 + 104);
  v32[3] = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v37 = a1;
  uint64_t v14 = v42;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v15 = __CocoaSet.Iterator.next()();
  if (!v15) {
    goto LABEL_36;
  }
  uint64_t v43 = v15;
  sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v16 = v49;
  swift_unknownObjectRelease();
  uint64_t v17 = v7;
  uint64_t v18 = v8;
  if (!v16) {
    goto LABEL_36;
  }
  while (1)
  {
    unint64_t v35 = v8;
    uint64_t v36 = v7;
    id v23 = [v16 activityType];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    uint64_t v27 = v41;
    (*v39)(v41, v40, v14);
    uint64_t v28 = DOCUserActivityIdentifier.rawValue.getter();
    uint64_t v30 = v29;
    (*v38)(v27, v14);
    if (v24 == v28 && v26 == v30)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_36;
    }
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_36;
    }

    uint64_t v7 = v17;
    unint64_t v8 = v18;
    a1 = v37;
    if (v37 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v8) {
      break;
    }
    uint64_t v18 = (v8 - 1) & v8;
    unint64_t v19 = __clz(__rbit64(v8)) | (v7 << 6);
    uint64_t v17 = v7;
LABEL_29:
    id v16 = *(id *)(*(void *)(a1 + 48) + 8 * v19);
    if (!v16) {
      goto LABEL_36;
    }
  }
  int64_t v20 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return;
  }
  if (v20 >= v33) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  uint64_t v17 = v7 + 1;
  if (v21) {
    goto LABEL_28;
  }
  uint64_t v17 = v7 + 2;
  if (v7 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v17);
  if (v21) {
    goto LABEL_28;
  }
  uint64_t v17 = v7 + 3;
  if (v7 + 3 >= v33) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v17);
  if (v21) {
    goto LABEL_28;
  }
  uint64_t v17 = v7 + 4;
  if (v7 + 4 >= v33) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v17);
  if (v21) {
    goto LABEL_28;
  }
  uint64_t v17 = v7 + 5;
  if (v7 + 5 >= v33) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v17);
  if (v21)
  {
LABEL_28:
    uint64_t v18 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_29;
  }
  uint64_t v22 = v7 + 6;
  while (v33 != v22)
  {
    unint64_t v21 = *(void *)(v34 + 8 * v22++);
    if (v21)
    {
      uint64_t v17 = v22 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  sub_10026AD14();
}

uint64_t sub_1003BBD74()
{
  uint64_t v1 = type metadata accessor for Logger();
  __chkstk_darwin(v1);
  id v2 = [v0 userActivities];
  sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
  sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1003BB914(v3, (unsigned int *)&enum case for DOCUserActivityIdentifier.folderDrag(_:));
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  id v6 = [v5 userInfo];
  if (!v6)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_11:

    uint64_t v14 = &v17;
LABEL_12:
    sub_10006273C((uint64_t)v14);
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  DOCUserActivityFPItemKey.getter();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10008E070((uint64_t)v16), (v10 & 1) != 0))
  {
    sub_10009B208(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_10008E17C((uint64_t)v16);
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  uint64_t v11 = v16[0];
  unint64_t v12 = v16[1];
  sub_10009E6C4(0, &qword_10070B710);
  sub_1000CBE70(&qword_100719C30);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  *(void *)(v13 + 32) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  sub_100021020(v11, v12);

  if (!v16[3])
  {
    uint64_t v14 = (long long *)v16;
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return v17;
  }
  else {
    return 0;
  }
}

id sub_1003BC270()
{
  uint64_t v1 = type metadata accessor for Logger();
  __chkstk_darwin(v1);
  id v2 = [v0 userActivities];
  sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
  sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1003BB914(v3, (unsigned int *)&enum case for DOCUserActivityIdentifier.location(_:));
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  id v6 = [v5 userInfo];
  if (!v6)
  {
    long long v23 = 0u;
    long long v24 = 0u;
LABEL_11:

    uint64_t v14 = &v23;
LABEL_12:
    sub_10006273C((uint64_t)v14);
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  DOCUserActivityLocationKey.getter();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10008E070((uint64_t)v22), (v10 & 1) != 0))
  {
    sub_10009B208(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_10008E17C((uint64_t)v22);
  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1)) {
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  uint64_t v11 = v22[0];
  unint64_t v12 = v22[1];
  sub_10009E6C4(0, &qword_10070B710);
  sub_1000CBE70(&qword_100719C30);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  *(void *)(v13 + 32) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  if (!v22[3])
  {

    sub_100021020(v11, v12);
    uint64_t v14 = (long long *)v22;
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    id v15 = (id)v23;
    id v16 = [v5 userInfo];
    if (v16)
    {
      long long v17 = v16;
      uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      DOCUserActivityTagNameKey.getter();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v18 + 16) && (unint64_t v19 = sub_10008E070((uint64_t)v22), (v20 & 1) != 0))
      {
        sub_10009B208(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v23);
      }
      else
      {
        long long v23 = 0u;
        long long v24 = 0u;
      }

      sub_100021020(v11, v12);
      sub_10008E17C((uint64_t)v22);
      swift_bridgeObjectRelease();
      if (*((void *)&v24 + 1))
      {
        swift_dynamicCast();
        return v15;
      }
    }
    else
    {

      sub_100021020(v11, v12);
      long long v23 = 0u;
      long long v24 = 0u;
    }
    sub_10006273C((uint64_t)&v23);
    return v15;
  }

  sub_100021020(v11, v12);
  return 0;
}

uint64_t sub_1003BC89C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a2;
  swift_errorRetain();
  id v9 = v8;
  swift_errorRetain();
  char v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    os_log_t v21 = v10;
    id v15 = (void *)v14;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = (uint64_t)v9;
    uint64_t v26 = v22;
    *(_DWORD *)uint64_t v13 = 138412546;
    uint64_t v23 = v4;
    id v16 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v15 = v9;

    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v25 = a1;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v25 = sub_10009B0E4(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v19 = v21;
    _os_log_impl((void *)&_mh_execute_header, v21, v11, "Unable to activate scene from requesting scene: %@ error: %s", (uint8_t *)v13, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v7, v23);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id sub_1003BCB88@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *a1;
  id result = [v9 delegate];
  if (!result) {
    goto LABEL_7;
  }
  type metadata accessor for QuickLookSceneDelegate();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11 || (uint64_t v12 = (void *)v11, *(unsigned char *)(v11 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene) != 1))
  {
    id result = (id)swift_unknownObjectRelease();
LABEL_7:
    *a2 = 0;
    return result;
  }
  static Logger.Application.getter();
  swift_unknownObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  int v26 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v13;
    uint64_t v16 = v15;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v29 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v22 = v16 + 4;
    uint64_t v27 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005EFB60, &v29);
    uint64_t v23 = &v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v22 = v16 + 14;
    swift_unknownObjectRetain();
    id v17 = [v12 description];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;
    uint64_t v21 = v18;
    swift_unknownObjectRelease();

    uint64_t v27 = sub_10009B0E4(v21, v20, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v26, "%s found existing shared scene: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v9;
  return v9;
}

uint64_t sub_1003BCE90()
{
  uint64_t v1 = type metadata accessor for Logger();
  __chkstk_darwin(v1);
  id v2 = [v0 userInfo];
  if (!v2)
  {
    long long v13 = 0u;
    long long v14 = 0u;
LABEL_10:
    char v10 = &v13;
LABEL_11:
    sub_10006273C((uint64_t)v10);
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  DOCUserActivityFPItemKey.getter();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10008E070((uint64_t)v12), (v6 & 1) != 0))
  {
    sub_10009B208(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_10008E17C((uint64_t)v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1)) {
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = v12[0];
  unint64_t v8 = v12[1];
  sub_10009E6C4(0, &qword_10070B710);
  sub_1000CBE70(&qword_100719C30);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
  *(void *)(v9 + 32) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  sub_100021020(v7, v8);
  if (!v12[3])
  {
    char v10 = (long long *)v12;
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return v13;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003BD2D4()
{
  uint64_t v1 = type metadata accessor for Logger();
  id v2 = [v0 userInfo];
  if (!v2)
  {
    long long v13 = 0u;
    long long v14 = 0u;
LABEL_10:
    char v10 = &v13;
LABEL_11:
    sub_10006273C((uint64_t)v10);
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10008E070((uint64_t)v12), (v6 & 1) != 0))
  {
    sub_10009B208(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_10008E17C((uint64_t)v12);
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1)) {
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = v12[0];
  unint64_t v8 = v12[1];
  sub_10009E6C4(0, &qword_10070B710);
  sub_1000CBE70(&qword_100719C30);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
  *(void *)(v9 + 32) = sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  sub_100021020(v7, v8);
  if (!v12[3])
  {
    char v10 = (long long *)v12;
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return v13;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003BD730()
{
  id v1 = [v0 userInfo];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_10:
    sub_10006273C((uint64_t)&v8);
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v8 = 0xD000000000000019;
  *((void *)&v8 + 1) = 0x80000001005E00D0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10008E070((uint64_t)v7), (v5 & 1) != 0))
  {
    sub_10009B208(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_10008E17C((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return v7[0];
  }
  return 0;
}

void sub_1003BD860(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a2;
  id v9 = a1;
  id v10 = v8;
  id v11 = v9;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = (uint64_t)a2;
    uint64_t v16 = v15;
    uint64_t v41 = swift_slowAlloc();
    aBlock[0] = v41;
    *(_DWORD *)uint64_t v16 = 136315650;
    uint64_t v44 = sub_10009B0E4(0xD000000000000022, 0x80000001005EFB80, aBlock);
    uint64_t v42 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2080;
    id v17 = v11;
    id v43 = v11;
    id v18 = v10;
    id v19 = v17;
    id v20 = [v17 description];
    int v38 = v14;
    id v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v5;
    uint64_t v23 = v22;
    unint64_t v25 = v24;

    uint64_t v44 = sub_10009B0E4(v23, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v10 = v18;
    id v11 = v43;
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    uint64_t v44 = v39;
    id v26 = v10;
    sub_1000CBE70((uint64_t *)&unk_1007137C0);
    uint64_t v27 = String.init<A>(describing:)();
    uint64_t v44 = sub_10009B0E4(v27, v28, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v38, "%s scene: %s requestingScene: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v42);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v29 = [objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions) init];
  [v29 setRequestingScene:v10];
  uint64_t v46 = (void *)type metadata accessor for _UIWindowScenePreservedPlacement();
  unint64_t v47 = sub_1003BE288();
  sub_100052C70(aBlock);
  _UIWindowScenePreservedPlacement.init()();
  UIWindowSceneActivationRequestOptions.placement.setter();
  id v30 = [self sharedApplication];
  id v31 = [v11 session];
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v11;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1003BE318;
  *(void *)(v33 + 24) = v32;
  unint64_t v47 = (unint64_t)sub_1003BE358;
  uint64_t v48 = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_10044D134;
  uint64_t v46 = &unk_1006A7588;
  uint64_t v34 = _Block_copy(aBlock);
  id v35 = v11;
  id v36 = v29;
  swift_release();
  [v30 requestSceneSessionActivation:v31 userActivity:0 options:v36 errorHandler:v34];
  _Block_release(v34);
}

uint64_t sub_1003BDD24()
{
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v0 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v26 - v4;
  static Logger.Application.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    uint64_t v30 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005EFB60, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v9 = *(void (**)(char *, uint64_t))(v0 + 8);
  v9(v5, v29);
  id v10 = [self sharedApplication];
  id v11 = [v10 connectedScenes];

  sub_10009E6C4(0, &qword_100712FA0);
  sub_1000B86A8((unint64_t *)&qword_100712FA8, &qword_100712FA0);
  unint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1003BB5B4(v12);
  unint64_t v14 = v13;
  uint64_t result = swift_bridgeObjectRelease();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16 < 2) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16 < 2) {
      goto LABEL_8;
    }
  }
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    unint64_t v28 = v2;
    v31[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v27 = (uint64_t (*)(char *, uint64_t))v9;
    uint64_t v30 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005EFB60, v31);
    v26[1] = v0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2048;
    uint64_t v30 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = Array.description.getter();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_10009B0E4(v21, v23, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s found %ld scenes. There should only be 1. Scenes: %s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t result = v27(v28, v29);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v9)(v2, v29);
  }
LABEL_8:
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v24)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return v24;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v24) {
      goto LABEL_16;
    }
  }
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v25 = *(id *)(v14 + 32);
LABEL_15:
    uint64_t v24 = (uint64_t)v25;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t sub_1003BE288()
{
  unint64_t result = qword_1007137B8;
  if (!qword_1007137B8)
  {
    type metadata accessor for _UIWindowScenePreservedPlacement();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007137B8);
  }
  return result;
}

uint64_t sub_1003BE2E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003BE318(uint64_t a1)
{
  return sub_1003BC89C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003BE320()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003BE358()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1003BE380()
{
  uint64_t v1 = (char *)sub_1003BE64C();
  id v2 = &v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  swift_bridgeObjectRetain();

  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4) {
    return 0;
  }
  id v6 = [v0 text];
  if (!v6) {
    return 1;
  }

  uint64_t result = (uint64_t)[v0 text];
  if (result)
  {
    os_log_type_t v7 = (void *)result;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    return v11 == 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1003BE474(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = (char *)sub_1003BE64C();
  uint64_t v5 = &v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  swift_bridgeObjectRelease();
  sub_1003C083C();

  id v6 = (void *)sub_1003BE64C();
  [v6 systemLayoutSizeFittingSize:0.0, 0.0];
  double v8 = v7;
  double v10 = v9;

  uint64_t v11 = (void *)sub_1003BE64C();
  [v11 setFrame:0.0, 0.0, v8, v10];

  id result = [v2 _placeholderLabel];
  if (result)
  {
    unint64_t v13 = result;
    unint64_t v14 = (char *)sub_1003BE64C();
    uint64_t v15 = &v14[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v16 = *(void *)v15;
    swift_bridgeObjectRetain();

    uint64_t v17 = *(void *)(v16 + 16);
    swift_bridgeObjectRelease();
    [v13 setHidden:v17 != 0];

    os_log_type_t v18 = (char *)sub_1003BE64C();
    uint64_t v19 = &v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v20 = *(void *)v19;
    swift_bridgeObjectRetain();

    uint64_t v21 = *(char **)(v20 + 16);
    swift_bridgeObjectRelease();
    if (v21) {
      uint64_t v21 = sub_1003BE928();
    }
    [v2 setLeftView:v21];

    return [v2 setNeedsLayout];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003BE64C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView];
  if (v2)
  {
    uint64_t v3 = *(char **)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView];
LABEL_19:
    id v20 = v2;
    return (uint64_t)v3;
  }
  type metadata accessor for DOCTokenChainView();
  uint64_t v4 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate + 8] = &off_1006A7640;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v5 = [v0 font];
  uint64_t v6 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font;
  double v7 = *(void **)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font];
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font] = v5;
  id v22 = v5;

  uint64_t v21 = v4;
  id v8 = [v21 arrangedSubviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();

    uint64_t v16 = qword_100705160;
    uint64_t v17 = v21;
    if (v16 != -1) {
      swift_once();
    }
    double v18 = *(double *)&qword_100713818;
    if (qword_100705130 != -1) {
      swift_once();
    }
    [v17 setLayoutMargins:0.0, v18 - *(double *)&qword_1007137D8, 0.0, 7.0];

    [v17 setLayoutMarginsRelativeArrangement:1];
    uint64_t v19 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v17;
    uint64_t v3 = v17;

    id v2 = 0;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_5:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(v9 + 8 * i + 32);
      }
      unint64_t v14 = v13;
      type metadata accessor for DOCTokenChainView.DOCTextTokenView();
      uint64_t v15 = (void *)swift_dynamicCastClass();
      if (v15) {
        [v15 setFont:*(void *)&v4[v6]];
      }
    }
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

char *sub_1003BE928()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = (void *)sub_1003BE64C();
    id v6 = objc_allocWithZone((Class)type metadata accessor for DOCTrailingVisibilityContainerView());
    double v7 = sub_1003C157C(v5);
    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    uint64_t v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1003BE9AC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel];
LABEL_5:
    id v8 = v2;
    return v3;
  }
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  [v4 setAdjustsFontForContentSizeCategory:1];
  id result = [v0 _fieldEditor];
  if (result)
  {
    id v6 = result;
    [result addSubview:v4];

    double v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1003BEA6C()
{
  [v0 setDelegate:v0];
  uint64_t v1 = sub_1003BE928();
  [v0 setLeftView:v1];

  [v0 setLeftViewMode:3];
  [v0 setClipsToBounds:1];
  [v0 setAutocorrectionType:1];
  [v0 addTarget:v0 action:"textDidChange:" forControlEvents:0x20000];
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setPlaceholder:v2];

  id v3 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2];
  id v4 = [self fontWithDescriptor:v3 size:0.0];
  [v0 setFont:v4];

  id v5 = [self labelColor];
  id v6 = [v5 colorWithAlphaComponent:0.075];

  [v0 setBackgroundColor:v6];
  id v7 = [v0 layer];
  [v7 setCornerCurve:kCACornerCurveContinuous];

  id v8 = [v0 layer];
  if (qword_100705150 != -1) {
    swift_once();
  }
  [v8 setCornerRadius:*(double *)&qword_100713808];

  [v0 setBorderStyle:0];
  id v9 = [v0 heightAnchor];
  if (qword_100705158 != -1) {
    swift_once();
  }
  id v10 = [v9 constraintGreaterThanOrEqualToConstant:*(double *)&qword_100713810];

  [v10 setActive:1];
  uint64_t v11 = (char *)sub_1003BE64C();
  unint64_t v12 = &v11[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v13 = *(void *)v12;
  swift_bridgeObjectRetain();

  unint64_t v14 = *(char **)(v13 + 16);
  swift_bridgeObjectRelease();
  if (v14) {
    unint64_t v14 = sub_1003BE928();
  }
  [v0 setLeftView:v14];

  [v0 setNeedsLayout];
  id v15 = [v0 _placeholderLabel];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = (char *)sub_1003BE64C();
    double v18 = &v17[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v19 = *(void *)v18;
    swift_bridgeObjectRetain();

    uint64_t v20 = *(void *)(v19 + 16);
    swift_bridgeObjectRelease();
    [v16 setHidden:v20 != 0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1003BEE64()
{
  uint64_t v1 = v0;
  id v2 = [v0 text];
  if (v2)
  {
    id v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = sub_1002B2068(v1);
      unint64_t v6 = v5;
      swift_unknownObjectRelease();
      if (v6)
      {
        String.lowercased()();
        Swift::String v7 = String.lowercased()();
        Swift::Bool v8 = String.hasPrefix(_:)(v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v8)
        {
          swift_bridgeObjectRetain();
          String.count.getter();
          unint64_t v9 = String.index(_:offsetBy:)();
          swift_bridgeObjectRelease();
          sub_1003C30F8(v9, v4, v6);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v10 = String.count.getter();
          swift_bridgeObjectRelease();
          sub_100062330(v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          static String._fromSubstring(_:)();
          sub_1003C38F0();
          String.append<A>(contentsOf:)();
          Substring.init(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v11 = static String._fromSubstring(_:)();
          unint64_t v13 = v12;
          swift_bridgeObjectRelease();
          id v14 = sub_1003BE9AC();
          [v1 bounds];
          [v1 textRectForBounds:];
          double v16 = v15;
          double v18 = v17;
          double v20 = v19;
          double v22 = v21;
          id v23 = [v1 _fieldEditor];
          [v1 convertRect:v23 toView:v16, v18, v20, v22];
          double v25 = v24;
          double v27 = v26;
          double v29 = v28;
          double v31 = v30;

          [v14 setFrame:v25, v27, v29, v31];
          id v32 = sub_1003BE9AC();
          [v32 setHidden:0];

          id v33 = sub_1003BE9AC();
          NSString v34 = String._bridgeToObjectiveC()();
          [v33 setText:v34];

          id v35 = sub_1003BE9AC();
          id v36 = [v1 _placeholderLabel];
          if (v36)
          {
            uint64_t v37 = v36;
            id v38 = [v36 font];

            [v35 setFont:v38];
            id v39 = sub_1003BE9AC();
            id v40 = [v1 _placeholderLabel];
            if (v40)
            {
              uint64_t v41 = v40;
              id v42 = [v40 textColor];

              [v39 setTextColor:v42];
              id v43 = sub_1003BE9AC();
              id v44 = [v1 _placeholderLabel];
              if (v44)
              {
                uint64_t v45 = v44;
                [v44 alpha];
                double v47 = v46;

                [v43 setAlpha:v47];
                id v48 = [v1 _placeholderLabel];
                if (v48)
                {
                  uint64_t v49 = v48;
                  swift_bridgeObjectRelease();
                  uint64_t v50 = HIBYTE(v13) & 0xF;
                  if ((v13 & 0x2000000000000000) == 0) {
                    uint64_t v50 = v11 & 0xFFFFFFFFFFFFLL;
                  }
                  [v49 setHidden:v50 != 0];

                  return;
                }
LABEL_21:
                __break(1u);
                return;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  id v51 = sub_1003BE9AC();
  [v51 setHidden:1];
}

double sub_1003BF394()
{
  double result = 4.0;
  unk_1007137D0 = xmmword_1005A9D20;
  unk_1007137E0 = xmmword_1005A9D20;
  return result;
}

id sub_1003BF3AC()
{
  id result = [self tintColor];
  qword_1007137F0 = (uint64_t)result;
  return result;
}

void sub_1003BF3E8()
{
  qword_1007137F8 = 0x4040000000000000;
}

void sub_1003BF3F8()
{
  qword_100713800 = 0x406F400000000000;
}

void sub_1003BF40C()
{
  qword_100713808 = 0x4020000000000000;
}

void sub_1003BF41C()
{
  qword_100713810 = 0x404B000000000000;
}

void sub_1003BF42C()
{
  qword_100713818 = 0x402A000000000000;
}

void sub_1003BF43C()
{
  qword_100713820 = 0x4049000000000000;
}

id sub_1003BF660()
{
  return sub_1003C2D28(0, type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator);
}

id sub_1003BF67C()
{
  if ([v0 isHighlighted])
  {
    if (qword_100705138 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1007137F0;
  }
  else
  {
    id v1 = [self clearColor];
  }
  id v2 = v1;
  [v0 setBackgroundColor:v1];

  id v3 = [v0 layer];
  [v3 setCornerCurve:kCACornerCurveContinuous];

  id v4 = [v0 layer];
  [v4 setMasksToBounds:1];

  LODWORD(v4) = [v0 isHighlighted];
  unint64_t v5 = self;
  unint64_t v6 = &selRef_lightTextColor;
  if (!v4) {
    unint64_t v6 = &selRef_labelColor;
  }
  id v7 = [v5 *v6];
  [v0 setTextColor:v7];

  id v8 = [self whiteColor];
  [v0 setHighlightedTextColor:v8];

  return [v0 setNumberOfLines:1];
}

id sub_1003BFAAC()
{
  return sub_1003C2D28(0, type metadata accessor for DOCTokenChainView.DOCTextTokenView);
}

id sub_1003BFAC8(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron] = 1;
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = 0;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for DOCTokenChainView();
  [super initWithFrame:a1, a2, a3, a4];
  [v9 setAlignment:3];
  id v10 = [v9 heightAnchor];
  if (qword_100705140 != -1) {
    swift_once();
  }
  id v11 = [v10 constraintGreaterThanOrEqualToConstant:*(double *)&qword_1007137F8];

  [v11 setActive:1];
  id v12 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v9 action:"tap:"];
  [v9 addGestureRecognizer:v12];

  return v9;
}

void sub_1003BFCF8()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *unint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v7 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount;
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = v10;
  sub_1003BFE7C((uint64_t)v1);
  uint64_t v11 = *(void *)&v1[v7];
  BOOL v9 = __OFSUB__(v11, 1);
  uint64_t v12 = v11 - 1;
  if (!v9)
  {
    *(void *)&v1[v7] = v12;
    sub_1003C083C();
    unint64_t v13 = (objc_class *)type metadata accessor for DOCTokenChainView();
    v14.receiver = v1;
    v14.super_class = v13;
    [super becomeFirstResponder];
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1003BFE7C(uint64_t a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (v3 = Strong, id v4 = [Strong text], v3, v4))
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v9 = v8 != 0;
  }
  else
  {
    BOOL v9 = 0;
  }
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron) = v9;
  sub_1003C083C();
  uint64_t v10 = a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens;
  swift_beginAccess();
  int v11 = *(void *)(*(void *)v10 + 16) != 0;
  int v12 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) = v11;
  if (v12 != v11) {
    sub_1003C083C();
  }
}

void sub_1003BFFB0()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v6 = (objc_class *)type metadata accessor for DOCTokenChainView();
  v15.receiver = v0;
  v15.super_class = v6;
  [super resignFirstResponder];
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v8 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = v11;
  int v12 = v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];
  v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
  if (v12) {
    sub_1003C083C();
  }
  v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron] = 1;
  sub_1003C083C();
  uint64_t v13 = *(void *)&v1[v8];
  BOOL v10 = __OFSUB__(v13, 1);
  uint64_t v14 = v13 - 1;
  if (!v10)
  {
    *(void *)&v1[v8] = v14;
    sub_1003C083C();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1003C01B4()
{
  [v0 effectiveUserInterfaceLayoutDirection];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self keyCommandWithInput:v1 modifierFlags:0 action:"directionKeyCommand:"];

  [v2 setWantsPriorityOverSystemBehavior:1];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A04F0;
  *(void *)(v3 + 32) = v2;
  uint64_t v5 = v3;
  specialized Array._endMutation()();
  return v5;
}

void sub_1003C02AC(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) = 2;
  if (v3 != 2) {
    sub_1003C083C();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_100053674(a1, (uint64_t)v16);
    if (v17)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_100713A40);
      if (swift_dynamicCast())
      {
        id v6 = v15;
        if (static NSObject.== infix(_:_:)())
        {
        }
        else
        {
          sub_100053674(a1, (uint64_t)v16);
          uint64_t v7 = v17;
          if (v17)
          {
            uint64_t v8 = sub_1000A6B78(v16, v17);
            uint64_t v9 = *(void *)(v7 - 8);
            double v10 = __chkstk_darwin(v8);
            int v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v9 + 16))(v12, v10);
            uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
            sub_10009B1B8((uint64_t)v16);
          }
          else
          {
            uint64_t v13 = 0;
          }
          [v5 selectAll:v13];

          swift_unknownObjectRelease();
        }
      }
      else
      {
      }
    }
    else
    {

      sub_10006273C((uint64_t)v16);
    }
  }
}

void sub_1003C052C()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens);
  swift_beginAccess();
  if (!*(void *)(*v2 + 16)) {
    goto LABEL_6;
  }
  swift_beginAccess();
  int v3 = (void *)*v2;
  if (!*(void *)(*v2 + 16))
  {
    __break(1u);
LABEL_16:
    int v3 = sub_10050DFCC(v3);
    uint64_t v4 = v3[2];
    if (v4) {
      goto LABEL_5;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v4 = v3[2];
  if (!v4) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t v5 = v4 - 1;
  sub_10009B1B8((uint64_t)&v3[5 * v4 - 1]);
  v3[2] = v5;
  uint64_t *v2 = (uint64_t)v3;
  swift_endAccess();
  sub_1003C083C();
LABEL_6:
  sub_1003C083C();
  uint64_t v6 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *v2;
    double v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v10(v1, v9, ObjectType, v7);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v12 = Strong;
    [Strong setText:0];
  }
  uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    uint64_t v14 = v13;
    [v13 becomeFirstResponder];
  }
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    double v16 = (void *)v15;
    NSString v17 = String._bridgeToObjectiveC()();
    [v16 insertText:v17];
  }
}

void sub_1003C083C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070D500);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIHoverHighlightEffect();
  double v7 = __chkstk_darwin(v5);
  if (*(void *)(v1
                 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount))
    return;
  unint64_t v56 = v6;
  id v8 = [v1 arrangedSubviews];
  v46[1] = sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (!v10) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_11;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    ++v11;
    [(id)v1 removeArrangedSubview:v12];
    [v13 removeFromSuperview];
  }
  while (v10 != v11);
LABEL_11:
  swift_bridgeObjectRelease_n();
  uint64_t v55 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection))
  {
    [(id)v1 setHoverStyle:0];
  }
  else
  {
    sub_10009E6C4(0, &qword_10070D210);
    static UIHoverEffect<>.highlight.getter();
    static UIShape.capsule.getter();
    uint64_t v14 = type metadata accessor for UIShape();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 0, 1, v14);
    uint64_t v15 = (void *)UIHoverStyle.init<A>(effect:shape:)();
    [(id)v1 setHoverStyle:v15];
  }
  unint64_t v16 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens;
  swift_beginAccess();
  unint64_t v56 = v16;
  uint64_t v17 = *(void *)v16;
  unint64_t v18 = *(void *)(*(void *)v16 + 16);
  uint64_t v19 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron;
  uint64_t v54 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font;
  uint64_t v49 = v17 + 32;
  id v48 = (long long *)&v57;
  uint64_t v47 = (uint64_t)&v58 + 8;
  uint64_t v53 = (long long *)v62;
  uint64_t v50 = v17;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  unint64_t v52 = (unsigned char *)(v1 + v19);
  for (i = v18; ; unint64_t v18 = i)
  {
    if (v20 == v18)
    {
      long long v59 = 0u;
      long long v60 = 0u;
      unint64_t v20 = v18;
      long long v58 = 0u;
    }
    else
    {
      if (v20 >= *(void *)(v50 + 16)) {
        goto LABEL_42;
      }
      double v21 = v48;
      sub_1000D4774(v49 + 40 * v20, (uint64_t)v48);
      *(void *)&long long v58 = v20;
      sub_1001146DC(v21, v47);
      ++v20;
    }
    sub_1003C373C((uint64_t)&v58, (uint64_t)&v61);
    if (!v62[3]) {
      break;
    }
    uint64_t v22 = v61;
    sub_1001146DC(v53, (uint64_t)&v58);
    type metadata accessor for DOCTokenChainView.DOCTextTokenView();
    id v23 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v23 setFont:*(void *)(v1 + v54)];
    uint64_t v25 = *((void *)&v59 + 1);
    uint64_t v24 = v60;
    sub_1000A6B78(&v58, *((uint64_t *)&v59 + 1));
    double v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    id v27 = v23;
    v26(v25, v24);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setText:v28];

    id v29 = [v27 widthAnchor];
    if (qword_100705148 != -1) {
      swift_once();
    }
    id v30 = [v29 constraintLessThanOrEqualToConstant:*(double *)&qword_100713800];

    BOOL v31 = 1;
    [v30 setActive:1];

    [v27 setAdjustsFontForContentSizeCategory:1];
    [v27 setLineBreakMode:5];
    if (*(unsigned char *)(v1 + v55))
    {
      if (*(unsigned char *)(v1 + v55) == 1) {
        BOOL v31 = v22 == *(void *)(*(void *)v56 + 16) - 1;
      }
      [v27 setHighlighted:v31];
    }
    [(id)v1 addArrangedSubview:v27];
    uint64_t v32 = *(void *)(*(void *)v56 + 16);
    BOOL v33 = (*v52 & 1) == 0;
    BOOL v34 = __OFSUB__(v32, v33);
    uint64_t v35 = v32 - v33;
    if (v34)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v22 >= v35)
    {
      sub_10009B1B8((uint64_t)&v58);
    }
    else
    {
      sub_1003C1288();
      uint64_t v37 = v36;
      [(id)v1 addArrangedSubview:v36];

      sub_10009B1B8((uint64_t)&v58);
    }
  }
  swift_bridgeObjectRelease();
  id v38 = [(id)v1 arrangedSubviews];
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v1 >> 62))
  {
    uint64_t v39 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v39) {
      goto LABEL_44;
    }
    goto LABEL_33;
  }
LABEL_43:
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  if (!v39) {
    goto LABEL_44;
  }
LABEL_33:
  if (v39 < 1) {
    goto LABEL_47;
  }
  for (uint64_t j = 0; j != v39; ++j)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v41 = *(id *)(v1 + 8 * j + 32);
    }
    id v42 = v41;
    type metadata accessor for DOCTokenChainView.DOCTextTokenView();
    id v43 = (void *)swift_dynamicCastClass();
    if (v43)
    {
      uint64_t v45 = v43;
      LODWORD(v44) = 1148846080;
      [v43 setContentHuggingPriority:0 forAxis:v44];
      [v45 sizeToFit];
    }
  }
LABEL_44:
  swift_bridgeObjectRelease_n();
}

void sub_1003C0FA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens);
  swift_beginAccess();
  if (!*(void *)(*v6 + 16)) {
    return;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  uint64_t v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v2 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount;
  uint64_t v8 = *(void *)(v1
                 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v1
            + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount) = v10;
  uint64_t v5 = (uint64_t *)OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection;
  if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection)) {
    goto LABEL_13;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) != 1)
  {
    uint64_t *v6 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (!*(void *)(*v6 + 16)) {
    goto LABEL_22;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v11 = *(void *)(v7 + 16);
  if (v11)
  {
    while (1)
    {
      uint64_t v12 = v11 - 1;
      sub_10009B1B8(v7 + 40 * (v11 - 1) + 32);
      *(void *)(v7 + 16) = v12;
      uint64_t *v6 = v7;
      swift_endAccess();
LABEL_11:
      uint64_t v7 = v1;
      sub_1003C083C();
      int v13 = *((unsigned __int8 *)v5 + v1);
      *((unsigned char *)v5 + v1) = 0;
      if (v13)
      {
        uint64_t v7 = v1;
        sub_1003C083C();
      }
LABEL_13:
      uint64_t v14 = *(void *)(v1 + v2);
      BOOL v9 = __OFSUB__(v14, 1);
      uint64_t v15 = v14 - 1;
      if (!v9) {
        break;
      }
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v7 = (uint64_t)sub_10050DFCC((void *)v7);
      uint64_t v11 = *(void *)(v7 + 16);
      if (!v11) {
        goto LABEL_24;
      }
    }
    *(void *)(v1 + v2) = v15;
    sub_1003C083C();
    uint64_t v16 = v1 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v19 = *v6;
      unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
      swift_bridgeObjectRetain();
      v20(v1, v19, ObjectType, v17);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v22 = Strong;
      [Strong becomeFirstResponder];
    }
  }
  else
  {
LABEL_24:
    __break(1u);
  }
}

void sub_1003C1288()
{
  type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v1 setFont:*(void *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font)];
  id v2 = [self configurationWithScale:1];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self systemImageNamed:v3 withConfiguration:v2];

  if (v4)
  {
    id v5 = [self textAttachmentWithImage:v4];

    sub_10009E6C4(0, (unint64_t *)&qword_100709D50);
    id v6 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v5];
    [v1 setAttributedText:v6];
    uint64_t v7 = self;
    id v8 = v1;
    id v9 = [v7 tertiaryLabelColor];
    [v8 setTextColor:v9];

    uint64_t v10 = (char *)v8;
    [v10 setAdjustsFontForContentSizeCategory:1];

    uint64_t v11 = &v10[OBJC_IVAR____TtCC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView16DOCTextTokenView_padding];
    *(_OWORD *)uint64_t v11 = xmmword_1005A9D30;
    *((_OWORD *)v11 + 1) = xmmword_1005A9D30;
  }
  else
  {
    __break(1u);
  }
}

id sub_1003C1488()
{
  return sub_1003C2D28(0, type metadata accessor for DOCTokenChainView);
}

uint64_t type metadata accessor for DOCTokenChainView()
{
  return self;
}

uint64_t type metadata accessor for DOCTokenChainView.DOCTextTokenView()
{
  return self;
}

uint64_t type metadata accessor for DOCTokenChainView.DOCTextTokenView.Separator()
{
  return self;
}

char *sub_1003C157C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_containedView] = a1;
  v28.receiver = v1;
  v28.super_class = (Class)type metadata accessor for DOCTrailingVisibilityContainerView();
  id v3 = a1;
  id v4 = [(char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0]];
  [v4 addSubview:v3];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v3 leadingAnchor];
  id v6 = [v4 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  LODWORD(v8) = 1132068864;
  [v7 setPriority:v8];
  id v9 = [v4 widthAnchor];
  id v10 = [v9 constraintLessThanOrEqualToConstant:200.0];

  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints];
  *(void *)&v4[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints] = v10;
  id v12 = v10;

  int v13 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1005A00C0;
  id v15 = [v3 topAnchor];
  id v16 = [v4 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v14 + 32) = v17;
  id v18 = [v3 bottomAnchor];
  id v19 = [v4 bottomAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v14 + 40) = v20;
  id v21 = [v3 trailingAnchor];
  id v22 = [v4 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v14 + 48) = v23;
  *(void *)(v14 + 56) = v7;
  *(void *)(v14 + 64) = v12;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  id v24 = v12;
  id v25 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v13 activateConstraints:isa];

  return v4;
}

id sub_1003C1988()
{
  return sub_1003C2D28(0, type metadata accessor for DOCTrailingVisibilityContainerView);
}

uint64_t type metadata accessor for DOCTrailingVisibilityContainerView()
{
  return self;
}

id sub_1003C1D3C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField_dataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenChainView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___tokenContainerContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCTokenTextField____lazy_storage___suggestionLabel] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCTokenTextField();
  [super initWithCoder:a1];

  return v3;
}

void sub_1003C1DF0(uint64_t a1)
{
  sub_100053674(a1, (uint64_t)v12);
  uint64_t v2 = v13;
  if (v13)
  {
    id v3 = sub_1000A6B78(v12, v13);
    uint64_t v4 = *(void *)(v2 - 8);
    double v5 = __chkstk_darwin(v3);
    id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v4 + 16))(v7, v5);
    uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    sub_10009B1B8((uint64_t)v12);
  }
  else
  {
    uint64_t v8 = 0;
  }
  id v9 = (objc_class *)type metadata accessor for DOCTokenTextField();
  v11.receiver = v1;
  v11.super_class = v9;
  [super selectAll:v8];
  swift_unknownObjectRelease();
  id v10 = (void *)sub_1003BE64C();
  [v10 selectAll:v1];
}

Class sub_1003C1F78(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = a3();

  if (v5)
  {
    sub_10009E6C4(0, &qword_100708860);
    v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }

  return v6.super.isa;
}

unint64_t sub_1003C2000()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for DOCTokenTextField();
  id v1 = [super keyCommands];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10009E6C4(0, &qword_100708860);
    id v3 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v3 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = [v5 keyCommandWithInput:v4 modifierFlags:0 action:"directionKeyCommand"];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v5 keyCommandWithInput:v7 modifierFlags:0 action:"directionKeyCommand"];

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v13 + 2;
    if (!__OFADD__(v13, 2))
    {
LABEL_6:
      sub_10009EEB0(v10, 1);
      specialized Array._endMutation()();
      id v6 = v6;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = v9 + 2;
    if (!__OFADD__(v9, 2)) {
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_13:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_7:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v11 = v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return v15;
}

uint64_t sub_1003C226C(uint64_t a1, uint64_t a2)
{
  if ((static Selector.== infix(_:_:)() & 1) == 0)
  {
    sub_100053674(a2, (uint64_t)v22);
    uint64_t v13 = v23;
    if (v23)
    {
      objc_super v14 = sub_1000A6B78(v22, v23);
      uint64_t v15 = *(void *)(v13 - 8);
      double v16 = __chkstk_darwin(v14);
      id v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v15 + 16))(v18, v16);
      uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
      sub_10009B1B8((uint64_t)v22);
    }
    else
    {
      uint64_t v19 = 0;
    }
    id v20 = (objc_class *)type metadata accessor for DOCTokenTextField();
    v21.receiver = v2;
    v21.super_class = v20;
    [super canPerformAction:a1 withSender:v19];
    swift_unknownObjectRelease();
    return (uint64_t)v12;
  }
  id v5 = [v2 text];
  if (!v5) {
    return 1;
  }

  uint64_t result = (uint64_t)[v2 text];
  if (result)
  {
    NSString v7 = (void *)result;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    return v11 == 0;
  }
  __break(1u);
  return result;
}

void sub_1003C24EC(SEL *a1, double a2, double a3, double a4, double a5)
{
  v24.receiver = v5;
  v24.super_class = (Class)type metadata accessor for DOCTokenTextField();
  [super a1:a2 a3:a4 a5:a5];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  uint64_t v19 = (char *)sub_1003BE64C();
  id v20 = &v19[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  swift_bridgeObjectRetain();

  uint64_t v22 = *(void *)(v21 + 16);
  swift_bridgeObjectRelease();
  double v23 = 0.0;
  if (!v22)
  {
    if (qword_100705160 != -1) {
      swift_once();
    }
    double v23 = *(double *)&qword_100713818;
  }
  if (qword_100705168 != -1) {
    swift_once();
  }
  sub_10009D0D0(v12, v14, v16, v18, 8.0, v23);
}

double sub_1003C2658(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, SEL *a7)
{
  id v12 = a1;
  sub_1003C24EC(a7, a2, a3, a4, a5);
  double v14 = v13;

  return v14;
}

id sub_1003C26DC()
{
  id v1 = v0;
  id v2 = [v0 selectedTextRange];

  if (!v2) {
    goto LABEL_11;
  }
  id result = [v1 selectedTextRange];
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  NSString v4 = result;
  unsigned int v5 = [result isEmpty];

  if (!v5) {
    goto LABEL_11;
  }
  id result = [v1 selectedTextRange];
  if (!result)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v6 = result;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v7 = [v6 start];

  id v8 = [v1 beginningOfDocument];
  LOBYTE(v6) = static NSObject.== infix(_:_:)();

  if (v6)
  {
    unint64_t v9 = (char *)sub_1003BE64C();
    unint64_t v10 = &v9[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v11 = *(void *)v10;
    swift_bridgeObjectRetain();

    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRelease();
    if (v12)
    {
      [v1 resignFirstResponder];
      double v13 = (unsigned __int8 *)sub_1003BE64C();
      int v14 = v13[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];

      double v15 = (void *)sub_1003BE64C();
      double v16 = v15;
      if (v14 == 2) {
        sub_1003C0FA4();
      }
      else {
        [v15 becomeFirstResponder];
      }
    }
  }
LABEL_11:
  double v17 = (unsigned __int8 *)sub_1003BE64C();
  int v18 = v17[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];

  if (v18 != 2) {
    goto LABEL_18;
  }
  id v19 = [v1 selectedTextRange];

  if (!v19) {
    goto LABEL_18;
  }
  id result = [v1 selectedTextRange];
  if (!result) {
    goto LABEL_21;
  }
  id v20 = result;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v21 = [v20 start];

  id v22 = [v1 beginningOfDocument];
  char v23 = static NSObject.== infix(_:_:)();

  if ((v23 & 1) == 0)
  {
LABEL_18:
    v29.receiver = v1;
    v29.super_class = (Class)type metadata accessor for DOCTokenTextField();
    return [super deleteBackward];
  }
  id result = [v1 selectedTextRange];
  if (result)
  {
    objc_super v24 = result;
    id v25 = [result end];

    id v26 = [v1 endOfDocument];
    char v27 = static NSObject.== infix(_:_:)();

    if (v27)
    {
      objc_super v28 = (void *)sub_1003BE64C();
      sub_1003C0FA4();
    }
    goto LABEL_18;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_1003C2AE0(uint64_t a1)
{
  sub_100053674(a1, (uint64_t)v15);
  uint64_t v2 = v16;
  if (v16)
  {
    id v3 = sub_1000A6B78(v15, v16);
    uint64_t v4 = *(void *)(v2 - 8);
    double v5 = __chkstk_darwin(v3);
    id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v4 + 16))(v7, v5);
    uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    sub_10009B1B8((uint64_t)v15);
  }
  else
  {
    uint64_t v8 = 0;
  }
  unint64_t v9 = (objc_class *)type metadata accessor for DOCTokenTextField();
  v14.receiver = v1;
  v14.super_class = v9;
  [super fieldEditorDidChangeSelection:v8];
  swift_unknownObjectRelease();
  id v10 = [v1 selectedTextRange];
  if (v10)
  {
    uint64_t v11 = v10;
    if ([v10 isEmpty])
    {
      uint64_t v12 = (unsigned char *)sub_1003BE64C();
      int v13 = v12[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];
      v12[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
      if (v13) {
        sub_1003C083C();
      }
    }
  }
}

uint64_t sub_1003C2C90(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v9);

  return sub_10006273C((uint64_t)v9);
}

id sub_1003C2D10(uint64_t a1)
{
  return sub_1003C2D28(a1, type metadata accessor for DOCTokenTextField);
}

id sub_1003C2D28(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCTokenTextField()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCTokenChainView.Selection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003C3068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCTokenChainView.Selection()
{
  return &type metadata for DOCTokenChainView.Selection;
}

unint64_t sub_1003C30A4()
{
  unint64_t result = qword_100713A20;
  if (!qword_100713A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713A20);
  }
  return result;
}

unint64_t sub_1003C30F8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C3144(void *a1, uint64_t a2)
{
  id v3 = [a1 arrangedSubviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      id v10 = v9;
      type metadata accessor for DOCTokenChainView.DOCTextTokenView();
      uint64_t v11 = (void *)swift_dynamicCastClass();
      if (v11) {
        [v11 setFont:*(void *)(a2 + v8)];
      }

      ++v7;
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_1003C328C()
{
  id v1 = (char *)sub_1003BE64C();
  uint64_t v2 = &v1[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  swift_bridgeObjectRetain();

  unint64_t v4 = *(char **)(v3 + 16);
  swift_bridgeObjectRelease();
  if (v4) {
    unint64_t v4 = sub_1003BE928();
  }
  [v0 setLeftView:v4];

  [v0 setNeedsLayout];
  id result = [v0 _placeholderLabel];
  if (result)
  {
    unsigned int v6 = result;
    uint64_t v7 = (char *)sub_1003BE64C();
    uint64_t v8 = &v7[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
    swift_beginAccess();
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();

    uint64_t v10 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease();
    [v6 setHidden:v10 != 0];

    return [v0 sendActionsForControlEvents:0x20000];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003C33C4()
{
  id v1 = v0;
  id v2 = [v0 text];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1000CBE70((uint64_t *)&unk_100706750);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A0030;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v5 = NSFontAttributeName;
    id v6 = [v1 font];
    if (v6)
    {
      id v7 = v6;
      *(void *)(inited + 64) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
      *(void *)(inited + 40) = v7;
      sub_10009CC48(inited);
      type metadata accessor for Key(0);
      sub_10009CBF0();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v3 sizeWithAttributes:isa];
      double v10 = v9;

      [v1 frame];
      double v12 = v11;
      int v13 = (char *)sub_1003BE64C();
      objc_super v14 = &v13[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
      swift_beginAccess();
      uint64_t v15 = *(void *)v14;
      swift_bridgeObjectRetain();

      uint64_t v16 = *(void *)(v15 + 16);
      swift_bridgeObjectRelease();
      double v17 = 0.0;
      if (!v16)
      {
        if (qword_100705160 != -1) {
          swift_once();
        }
        double v17 = *(double *)&qword_100713818;
      }
      if (qword_100705168 != -1) {
        swift_once();
      }
      int v18 = (char *)sub_1003BE64C();
      id v19 = &v18[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
      swift_beginAccess();
      uint64_t v20 = *(void *)v19;
      swift_bridgeObjectRetain();

      uint64_t v21 = *(void *)(v20 + 16);
      swift_bridgeObjectRelease();
      if (!v21 && qword_100705160 != -1) {
        swift_once();
      }
      double v22 = v12 - v10 - v17 - *(double *)&qword_100713820;
      char v23 = sub_1003BE928();
      [*(id *)&v23[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0434DOCTrailingVisibilityContainerView_widthConstraints] setConstant:v22];

      objc_super v24 = (unsigned char *)sub_1003BE64C();
      int v25 = v24[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection];
      v24[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
      if (v25) {
        sub_1003C083C();
      }

      id v26 = [v1 _placeholderLabel];
      if (v26)
      {
        char v27 = v26;
        objc_super v28 = (char *)sub_1003BE64C();
        objc_super v29 = &v28[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens];
        swift_beginAccess();
        uint64_t v30 = *(void *)v29;
        swift_bridgeObjectRetain();

        uint64_t v31 = *(void *)(v30 + 16);
        swift_bridgeObjectRelease();
        [v27 setHidden:v31 != 0];

        sub_1003BEE64();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1003C373C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100713A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003C37A4()
{
  *(void *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_font] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_tokens] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_showTrailingChevron] = 1;
  *(void *)&v0[OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_isCoalescingRebuildsCount] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1003C3878()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5FilesP33_D8D362724F0696B48319604C3F2D1F0417DOCTokenChainView_selection) = 0;
  if (v1) {
    sub_1003C083C();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    [Strong becomeFirstResponder];
  }
}

unint64_t sub_1003C38F0()
{
  unint64_t result = qword_100713A50;
  if (!qword_100713A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713A50);
  }
  return result;
}

uint64_t sub_1003C3944(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = [self generalPasteboard];
  id v9 = [v8 itemProviders];

  sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *a1 = v10;
  swift_bridgeObjectRelease();
  double v11 = (id *)*a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1003CA47C;
  *(void *)(v13 + 24) = v12;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1003C4568(v11, (uint64_t)v11, a2, 1, (uint64_t)sub_1003CBCBC, v13);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void sub_1003C3AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (void *)swift_allocObject();
  v6[2] = a2;
  void v6[3] = a3;
  void v6[4] = a1;
  v8[4] = sub_1003CA49C;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000666D8;
  v8[3] = &unk_1006A7858;
  id v7 = _Block_copy(v8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
}

uint64_t static NSItemProvider.fpItemsFromItemProviders(_:alertPresenting:loadFromURLs:completionHandler:)(id *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  swift_retain();
  sub_1003C4568(a1, (uint64_t)a1, a2, 1, (uint64_t)sub_1003C3D44, v9);

  return swift_release();
}

uint64_t sub_1003C3C30(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = (void **)(a1 + 40);
    do
    {
      id v6 = *v5;
      v5 += 2;
      id v7 = v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
  }
  a2(_swiftEmptyArrayStorage);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003C3D0C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003C3D44(uint64_t a1)
{
  return sub_1003C3C30(a1, *(void (**)(void *))(v1 + 16));
}

void sub_1003C3D4C(id *a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v53 = a6;
  uint64_t v52 = a5;
  int v47 = a4;
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  __chkstk_darwin(v7);
  uint64_t v57 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v49 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = &v46[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = swift_allocObject();
  id v19 = _swiftEmptyArrayStorage;
  unint64_t v65 = a1;
  uint64_t v66 = v18;
  *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
  id v20 = (id)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v66 + 16) = v19;
  if (!isUniquelyReferenced_nonNull_native || (char v23 = v19, v21 > v19[3] >> 1))
  {
    if (v19[2] <= v21) {
      int64_t v24 = v21;
    }
    else {
      int64_t v24 = v19[2];
    }
    char v23 = sub_10018F6AC(isUniquelyReferenced_nonNull_native, v24, 0, v19);
  }
  *(void *)(v66 + 16) = v23;
  id v63 = [self defaultManager];
  uint64_t v64 = dispatch_group_create();
  uint64_t v25 = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(unsigned char *, void, unint64_t))(v15 + 104))(v17, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v14);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = v19;
  sub_1000BAC9C((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v48 = v25;
  id v26 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v54 = v13;
  if (v20)
  {
    unint64_t v27 = (unint64_t)v65;
    swift_bridgeObjectRetain_n();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    if (!v28)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      uint64_t v35 = v50;
      id v36 = v49;
      uint64_t v37 = v51;
      (*(void (**)(unsigned char *, void, uint64_t))(v50 + 104))(v49, enum case for DispatchQoS.QoSClass.default(_:), v51);
      id v38 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v36, v37);
      uint64_t v39 = (void *)swift_allocObject();
      uint64_t v40 = v53;
      v39[2] = v52;
      void v39[3] = v40;
      v39[4] = v66;
      aBlock[4] = sub_1003CB72C;
      void aBlock[5] = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A7B50;
      id v41 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      id v42 = v54;
      static DispatchQoS.unspecified.getter();
      uint64_t v67 = _swiftEmptyArrayStorage;
      sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      id v43 = v57;
      uint64_t v44 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v45 = v64;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();

      _Block_release(v41);
      (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v43, v44);
      (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v42, v56);
      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    unint64_t v27 = (unint64_t)v65;
    uint64_t v28 = *(void *)(((unint64_t)v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v28) {
      goto LABEL_22;
    }
  }
  if (v28 >= 1)
  {
    unint64_t v14 = 0;
    double v17 = 0;
    unint64_t v29 = v27 & 0xC000000000000001;
    id v19 = (void *)(v62 & 0xC000000000000001);
    uint64_t v60 = v62 & 0xFFFFFFFFFFFFFF8;
    uint64_t v15 = v47 & 1;
    while (1)
    {
      if (v29)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v19) {
          goto LABEL_17;
        }
      }
      else
      {
        id v20 = *(id *)(v27 + 8 * v14 + 32);
        if (v19)
        {
LABEL_17:
          id v30 = v20;
          uint64_t v31 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_21;
        }
      }
      if (v14 >= *(void *)(v60 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v32 = *(void **)(v62 + 8 * v14 + 32);
      id v33 = v20;
      uint64_t v31 = v32;
LABEL_21:
      uint64_t v13 = v31;
      sub_1003C4D84(v20, v64, v61, v26, v66, v13, v15, v63);
      ++v14;

      unint64_t v27 = (unint64_t)v65;
      if (v28 == v14) {
        goto LABEL_22;
      }
    }
  }
  __break(1u);
  __break(1u);
}

void sub_1003C4568(id *a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v53 = a6;
  uint64_t v52 = a5;
  int v47 = a4;
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  __chkstk_darwin(v7);
  uint64_t v57 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v49 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v17 = &v46[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = swift_allocObject();
  id v19 = _swiftEmptyArrayStorage;
  unint64_t v65 = a1;
  uint64_t v66 = v18;
  *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
  id v20 = (id)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v66 + 16) = v19;
  if (!isUniquelyReferenced_nonNull_native || (char v23 = v19, v21 > v19[3] >> 1))
  {
    if (v19[2] <= v21) {
      int64_t v24 = v21;
    }
    else {
      int64_t v24 = v19[2];
    }
    char v23 = sub_10019037C(isUniquelyReferenced_nonNull_native, v24, 0, v19);
  }
  *(void *)(v66 + 16) = v23;
  id v63 = [self defaultManager];
  uint64_t v64 = dispatch_group_create();
  uint64_t v25 = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(unsigned char *, void, unint64_t))(v15 + 104))(v17, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v14);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = v19;
  sub_1000BAC9C((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v48 = v25;
  id v26 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v54 = v13;
  if (v20)
  {
    unint64_t v27 = (unint64_t)v65;
    swift_bridgeObjectRetain_n();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    if (!v28)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      uint64_t v35 = v50;
      id v36 = v49;
      uint64_t v37 = v51;
      (*(void (**)(unsigned char *, void, uint64_t))(v50 + 104))(v49, enum case for DispatchQoS.QoSClass.default(_:), v51);
      id v38 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v36, v37);
      uint64_t v39 = (void *)swift_allocObject();
      uint64_t v40 = v53;
      v39[2] = v52;
      void v39[3] = v40;
      v39[4] = v66;
      aBlock[4] = sub_1003CB904;
      void aBlock[5] = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      uint64_t aBlock[2] = sub_1000666D8;
      uint64_t aBlock[3] = &unk_1006A7E20;
      id v41 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      id v42 = v54;
      static DispatchQoS.unspecified.getter();
      uint64_t v67 = _swiftEmptyArrayStorage;
      sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      id v43 = v57;
      uint64_t v44 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v45 = v64;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();

      _Block_release(v41);
      (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v43, v44);
      (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v42, v56);
      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    unint64_t v27 = (unint64_t)v65;
    uint64_t v28 = *(void *)(((unint64_t)v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v28) {
      goto LABEL_22;
    }
  }
  if (v28 >= 1)
  {
    unint64_t v14 = 0;
    double v17 = 0;
    unint64_t v29 = v27 & 0xC000000000000001;
    id v19 = (void *)(v62 & 0xC000000000000001);
    uint64_t v60 = v62 & 0xFFFFFFFFFFFFFF8;
    uint64_t v15 = v47 & 1;
    while (1)
    {
      if (v29)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v19) {
          goto LABEL_17;
        }
      }
      else
      {
        id v20 = *(id *)(v27 + 8 * v14 + 32);
        if (v19)
        {
LABEL_17:
          id v30 = v20;
          uint64_t v31 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_21;
        }
      }
      if (v14 >= *(void *)(v60 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v32 = *(void **)(v62 + 8 * v14 + 32);
      id v33 = v20;
      uint64_t v31 = v32;
LABEL_21:
      uint64_t v13 = v31;
      sub_1003C5170(v20, v64, v61, v26, v66, v13, v15, v63);
      ++v14;

      unint64_t v27 = (unint64_t)v65;
      if (v28 == v14) {
        goto LABEL_22;
      }
    }
  }
  __break(1u);
  __break(1u);
}

uint64_t sub_1003C4D84(void *a1, NSObject *a2, void *a3, void *a4, uint64_t a5, void *a6, char a7, void *a8)
{
  NSString v50 = a8;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v12 = sub_1000CBE70(&qword_100713B78);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003C555C();
  if (v20)
  {
    DOCDragPasteboardType.init(_:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
      return sub_1000CBBA4((uint64_t)v14, &qword_100713B78);
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    dispatch_group_enter(a2);
    if (DOCDragPasteboardType.isFPItemFileOrLocation.getter())
    {
      DOCDragPasteboardType.typeIdentifier.getter();
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = a2;
      uint64_t v21[3] = a3;
      double v22 = v51;
      uint64_t v49 = a2;
      uint64_t v24 = v52;
      char v23 = v53;
      void v21[4] = v51;
      v21[5] = v24;
      v21[6] = v23;
      uint64_t v58 = sub_1003CB780;
      uint64_t v59 = v21;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v55 = 1107296256;
      uint64_t v56 = sub_1003C6064;
      uint64_t v57 = &unk_1006A7BF0;
      uint64_t v25 = _Block_copy(&aBlock);
      NSString v48 = v59;
      id v26 = a3;
      id v27 = v22;
      swift_retain();
      id v28 = v23;
      unint64_t v29 = v49;
      swift_release();
      id v30 = v50;
      id v31 = [a1 loadDataRepresentationForTypeIdentifier:v50 completionHandler:v25];
      uint64_t v32 = v25;
    }
    else
    {
      if ((a7 & 1) == 0)
      {
        dispatch_group_leave(a2);
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      DOCDragPasteboardType.typeIdentifier.getter();
      NSString v48 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = (void *)swift_allocObject();
      v33[2] = a2;
      void v33[3] = a3;
      BOOL v34 = v50;
      uint64_t v49 = a2;
      uint64_t v35 = v51;
      uint64_t v36 = v52;
      unsigned char v33[4] = v50;
      void v33[5] = v35;
      uint64_t v37 = v53;
      v33[6] = v36;
      v33[7] = v37;
      uint64_t v58 = sub_1003CB764;
      uint64_t v59 = v33;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v55 = 1107296256;
      uint64_t v56 = sub_1003C69B0;
      uint64_t v57 = &unk_1006A7BA0;
      id v38 = _Block_copy(&aBlock);
      double v46 = v59;
      int v47 = v38;
      id v39 = a3;
      id v40 = v35;
      swift_retain();
      id v41 = v37;
      id v42 = v34;
      id v43 = v49;
      swift_release();
      uint64_t v44 = a1;
      uint64_t v45 = v47;
      id v30 = v48;
      id v31 = [v44 loadInPlaceFileRepresentationForTypeIdentifier:v48 completionHandler:v47];
      uint64_t v32 = v45;
    }
    _Block_release(v32);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_1003C5170(void *a1, NSObject *a2, void *a3, void *a4, uint64_t a5, void *a6, char a7, void *a8)
{
  NSString v50 = a8;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v12 = sub_1000CBE70(&qword_100713B78);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1003C555C();
  if (v20)
  {
    DOCDragPasteboardType.init(_:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
      return sub_1000CBBA4((uint64_t)v14, &qword_100713B78);
    }
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    dispatch_group_enter(a2);
    if (DOCDragPasteboardType.isFPItemFileOrLocation.getter())
    {
      DOCDragPasteboardType.typeIdentifier.getter();
      NSString v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = a2;
      uint64_t v21[3] = a3;
      double v22 = v51;
      uint64_t v49 = a2;
      uint64_t v24 = v52;
      char v23 = v53;
      void v21[4] = v51;
      v21[5] = v24;
      v21[6] = v23;
      uint64_t v58 = sub_1003CB9D4;
      uint64_t v59 = v21;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v55 = 1107296256;
      uint64_t v56 = sub_1003C6064;
      uint64_t v57 = &unk_1006A7EC0;
      uint64_t v25 = _Block_copy(&aBlock);
      NSString v48 = v59;
      id v26 = a3;
      id v27 = v22;
      swift_retain();
      id v28 = v23;
      unint64_t v29 = v49;
      swift_release();
      id v30 = v50;
      id v31 = [a1 loadDataRepresentationForTypeIdentifier:v50 completionHandler:v25];
      uint64_t v32 = v25;
    }
    else
    {
      if ((a7 & 1) == 0)
      {
        dispatch_group_leave(a2);
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      DOCDragPasteboardType.typeIdentifier.getter();
      NSString v48 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = (void *)swift_allocObject();
      v33[2] = a2;
      void v33[3] = a3;
      BOOL v34 = v50;
      uint64_t v49 = a2;
      uint64_t v35 = v51;
      uint64_t v36 = v52;
      unsigned char v33[4] = v50;
      void v33[5] = v35;
      uint64_t v37 = v53;
      v33[6] = v36;
      v33[7] = v37;
      uint64_t v58 = sub_1003CB99C;
      uint64_t v59 = v33;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v55 = 1107296256;
      uint64_t v56 = sub_1003C69B0;
      uint64_t v57 = &unk_1006A7E70;
      id v38 = _Block_copy(&aBlock);
      double v46 = v59;
      int v47 = v38;
      id v39 = a3;
      id v40 = v35;
      swift_retain();
      id v41 = v37;
      id v42 = v34;
      id v43 = v49;
      swift_release();
      uint64_t v44 = a1;
      uint64_t v45 = v47;
      id v30 = v48;
      id v31 = [v44 loadInPlaceFileRepresentationForTypeIdentifier:v48 completionHandler:v47];
      uint64_t v32 = v45;
    }
    _Block_release(v32);

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_1003C555C()
{
  uint64_t v1 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10059B760;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_100073F48();
  strcpy((char *)(v2 + 32), "typeToRequest");
  *(_WORD *)(v2 + 46) = -4864;
  id v3 = [v0 registeredTypeIdentifiers];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)(v2 + 96) = sub_1000CBE70(&qword_10070AEB0);
  *(void *)(v2 + 104) = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
  *(void *)(v2 + 72) = v4;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v5 = DOCAcceptableDragPasteboardTypes.getter();
  id v6 = [v0 registeredTypeIdentifiers];
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = v7 + 40; ; i += 16)
    {
      uint64_t v10 = *(void *)(i - 8);
      swift_bridgeObjectRetain();
      if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v5)) {
        break;
      }
      swift_bridgeObjectRelease();
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

void sub_1003C5768(uint64_t a1, unint64_t a2, uint64_t a3, NSObject *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  uint64_t v65 = a7;
  uint64_t v66 = a8;
  uint64_t v63 = a6;
  uint64_t v64 = a5;
  uint64_t v68 = a4;
  uint64_t v69 = a3;
  uint64_t v67 = a1;
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v20 = __chkstk_darwin(v19);
  if (a2 >> 60 == 15)
  {
    uint64_t v66 = a14;
    uint64_t v67 = a12;
    char v23 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10059B760;
    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v25 = sub_100073F48();
    *(void *)(v24 + 64) = v25;
    *(void *)(v24 + 32) = 0xD000000000000060;
    *(void *)(v24 + 40) = 0x80000001005F0460;
    uint64_t v26 = v69;
    if (v69)
    {
      uint64_t v27 = _convertErrorToNSError(_:)();
      uint64_t v73 = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v74 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v27;
      sub_1001146DC(&aBlock, v24 + 72);
    }
    else
    {
      *(void *)(v24 + 96) = &type metadata for String;
      *(void *)(v24 + 104) = v25;
      *(void *)(v24 + 72) = 0xD000000000000013;
      *(void *)(v24 + 80) = 0x80000001005DD4C0;
    }
    id v33 = v68;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    dispatch_group_leave(v33);
    if (v26)
    {
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v34 = dispatch thunk of Error._domain.getter();
      uint64_t v36 = v35;
      if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0) {
          goto LABEL_14;
        }
      }
      swift_getErrorValue();
      if (dispatch thunk of Error._code.getter() == -1000)
      {
LABEL_16:
        swift_errorRelease();
        return;
      }
LABEL_14:
      int v47 = v64;
      if (v64)
      {
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = v26;
        *(void *)(v48 + 24) = v47;
        uint64_t v74 = a13;
        unint64_t v75 = (void *)v48;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        uint64_t v72 = sub_1000666D8;
        uint64_t v73 = (uint64_t)v66;
        uint64_t v49 = _Block_copy(&aBlock);
        id v50 = v47;
        swift_errorRetain();
        id v51 = v50;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v49);
        swift_errorRelease();

        return;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v58 = a10;
    uint64_t v59 = a11;
    uint64_t v28 = v65;
    unint64_t v29 = v66;
    uint64_t v60 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v62 = v22;
    uint64_t v64 = (void *)v20;
    uint64_t v61 = v16;
    uint64_t v30 = v69;
    sub_10009E6C4(0, &qword_10070B710);
    uint64_t v31 = v67;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    sub_100168CBC(v31, a2);
    uint64_t v32 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    id v38 = (void *)v32;
    unint64_t v57 = a2;
    if (v32)
    {
      id v39 = (void *)swift_allocObject();
      v39[2] = v28;
      void v39[3] = v29;
      id v40 = v68;
      v39[4] = v38;
      v39[5] = v40;
      uint64_t v74 = v58;
      unint64_t v75 = v39;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      uint64_t v72 = sub_1000666D8;
      uint64_t v73 = v59;
      id v41 = _Block_copy(&aBlock);
      swift_retain();
      id v42 = v29;
      id v43 = v38;
      uint64_t v44 = v40;
      uint64_t v45 = v60;
      static DispatchQoS.unspecified.getter();
      uint64_t v70 = _swiftEmptyArrayStorage;
      sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v41);
      sub_10023E59C(v67, v57);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v15);
      (*(void (**)(char *, void *))(v62 + 8))(v45, v64);
      swift_release();
    }
    else
    {
      uint64_t v52 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_10059B760;
      *(void *)(v53 + 56) = &type metadata for String;
      unint64_t v54 = sub_100073F48();
      *(void *)(v53 + 64) = v54;
      *(void *)(v53 + 32) = 0xD000000000000060;
      *(void *)(v53 + 40) = 0x80000001005F0460;
      if (v30)
      {
        uint64_t v55 = _convertErrorToNSError(_:)();
        uint64_t v73 = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
        uint64_t v74 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
        *(void *)&long long aBlock = v55;
        sub_1001146DC(&aBlock, v53 + 72);
      }
      else
      {
        *(void *)(v53 + 96) = &type metadata for String;
        *(void *)(v53 + 104) = v54;
        *(void *)(v53 + 72) = 0xD000000000000013;
        *(void *)(v53 + 80) = 0x80000001005DD4C0;
      }
      uint64_t v56 = v68;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      dispatch_group_leave(v56);
      sub_10023E59C(v67, v57);
    }
  }
}

uint64_t sub_1003C6064(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_10023E59C((uint64_t)v4, v8);

  return swift_release();
}

void sub_1003C6110(void *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  v30[1] = a5;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v30[0] = v18;
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    uint64_t v21[3] = a7;
    void v21[4] = a1;
    v21[5] = a3;
    uint64_t v37 = sub_1003CB800;
    id v38 = v21;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_1000666D8;
    uint64_t v36 = &unk_1006A7DA8;
    uint64_t v22 = _Block_copy(&aBlock);
    id v23 = a1;
    swift_retain();
    id v24 = a7;
    unint64_t v25 = a3;
    static DispatchQoS.unspecified.getter();
    uint64_t v32 = _swiftEmptyArrayStorage;
    sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
    (*(void (**)(char *, void))(v17 + 8))(v20, v30[0]);
    swift_release();
  }
  else
  {
    dispatch_group_leave(a3);
    if (a2)
    {
      if (a4)
      {
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = a2;
        *(void *)(v26 + 24) = a4;
        uint64_t v37 = sub_1003CB710;
        id v38 = (void *)v26;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v34 = 1107296256;
        uint64_t v35 = sub_1000666D8;
        uint64_t v36 = &unk_1006A7D58;
        uint64_t v27 = _Block_copy(&aBlock);
        swift_errorRetain();
        id v28 = a4;
        swift_errorRetain();
        id v29 = v28;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v27);
        swift_errorRelease();
      }
    }
  }
}

void sub_1003C64DC(void *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  v30[1] = a5;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v30[0] = v18;
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a6;
    uint64_t v21[3] = a7;
    void v21[4] = a1;
    v21[5] = a3;
    uint64_t v37 = sub_1003CBA54;
    id v38 = v21;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_1000666D8;
    uint64_t v36 = &unk_1006A8078;
    uint64_t v22 = _Block_copy(&aBlock);
    id v23 = a1;
    swift_retain();
    id v24 = a7;
    unint64_t v25 = a3;
    static DispatchQoS.unspecified.getter();
    uint64_t v32 = _swiftEmptyArrayStorage;
    sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v13);
    (*(void (**)(char *, void))(v17 + 8))(v20, v30[0]);
    swift_release();
  }
  else
  {
    dispatch_group_leave(a3);
    if (a2)
    {
      if (a4)
      {
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = a2;
        *(void *)(v26 + 24) = a4;
        uint64_t v37 = sub_1003CB710;
        id v38 = (void *)v26;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v34 = 1107296256;
        uint64_t v35 = sub_1000666D8;
        uint64_t v36 = &unk_1006A8028;
        uint64_t v27 = _Block_copy(&aBlock);
        swift_errorRetain();
        id v28 = a4;
        swift_errorRetain();
        id v29 = v28;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v27);
        swift_errorRelease();
      }
    }
  }
}

void sub_1003C68A8(uint64_t a1, void *a2, void *a3, NSObject *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  id v12 = a3;
  id v13 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v11 = a5(0, *(void *)(v11 + 16) + 1, 1, v11);
    *uint64_t v10 = v11;
  }
  unint64_t v16 = *(void *)(v11 + 16);
  unint64_t v15 = *(void *)(v11 + 24);
  if (v16 >= v15 >> 1)
  {
    uint64_t v11 = a5(v15 > 1, v16 + 1, 1, v11);
    *uint64_t v10 = v11;
  }
  *(void *)(v11 + 16) = v16 + 1;
  uint64_t v17 = v11 + 16 * v16;
  *(void *)(v17 + 32) = v13;
  *(void *)(v17 + 40) = v12;
  swift_endAccess();
  dispatch_group_leave(a4);
}

uint64_t sub_1003C69B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a4;
  v11(v10, a3, a4);
  swift_release();

  return sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
}

uint64_t sub_1003C6B04(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = a4(v6);
  swift_bridgeObjectRelease();
  a1(v7);
  return swift_bridgeObjectRelease();
}

id sub_1003C6B8C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v67 = a1;
  uint64_t v5 = sub_1000CBE70(&qword_100708110);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v63 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v61 - v8;
  uint64_t v10 = type metadata accessor for UTType();
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v62 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v14 = (char *)v61 - v13;
  id v15 = [v3 suggestedName];
  uint64_t v64 = v10;
  uint64_t v65 = a2;
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t object = v18;

    uint64_t v20 = HIBYTE(object) & 0xF;
    if ((object & 0x2000000000000000) == 0) {
      uint64_t v20 = countAndFlagsBits & 0xFFFFFFFFFFFFLL;
    }
    if (v20)
    {
      uint64_t v21 = (void *)static DOCLog.UI.getter();
      v61[3] = static os_log_type_t.info.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_10059B760;
      *(void *)(v22 + 56) = &type metadata for String;
      unint64_t v23 = sub_100073F48();
      *(void *)(v22 + 64) = v23;
      *(void *)(v22 + 32) = 0xD000000000000013;
      *(void *)(v22 + 40) = 0x80000001005F02E0;
      id v24 = [v3 suggestedName];
      if (v24)
      {
        unint64_t v25 = v24;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;

        id v29 = (uint64_t *)(v22 + 72);
        *(void *)(v22 + 96) = &type metadata for String;
        *(void *)(v22 + 104) = v23;
        if (v28)
        {
          *id v29 = v26;
LABEL_18:
          *(void *)(v22 + 80) = v28;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      else
      {
        id v29 = (uint64_t *)(v22 + 72);
        *(void *)(v22 + 96) = &type metadata for String;
        *(void *)(v22 + 104) = v23;
      }
      *id v29 = 7104878;
      unint64_t v28 = 0xE300000000000000;
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  UTType.init(_:)();
  uint64_t v30 = v66;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v9, 1, v10) == 1)
  {
    sub_1000CBBA4((uint64_t)v9, &qword_100708110);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v14, v9, v10);
    uint64_t v31 = UTType.localizedDescription.getter();
    if (v32)
    {
      uint64_t countAndFlagsBits = v31;
      unint64_t object = v32;
      uint64_t v33 = HIBYTE(v32) & 0xF;
      if ((v32 & 0x2000000000000000) == 0) {
        uint64_t v33 = v31 & 0xFFFFFFFFFFFFLL;
      }
      if (v33)
      {
        uint64_t v34 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.info.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1005A0230;
        *(void *)(v35 + 56) = &type metadata for String;
        unint64_t v36 = sub_100073F48();
        *(void *)(v35 + 32) = 0xD000000000000013;
        *(void *)(v35 + 40) = 0x80000001005F02E0;
        *(void *)(v35 + 96) = &type metadata for String;
        *(void *)(v35 + 104) = v36;
        uint64_t v37 = v67;
        *(void *)(v35 + 64) = v36;
        *(void *)(v35 + 72) = v37;
        *(void *)(v35 + 80) = v65;
        *(void *)(v35 + 136) = &type metadata for String;
        *(void *)(v35 + 144) = v36;
        *(void *)(v35 + 112) = countAndFlagsBits;
        *(void *)(v35 + 120) = object;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v10);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v10);
    }
  }
  id v38 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.info.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1005A0030;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_100073F48();
  *(void *)(v39 + 32) = 0xD000000000000013;
  *(void *)(v39 + 40) = 0x80000001005F02E0;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v41 = result;
  v68._uint64_t countAndFlagsBits = 0xD000000000000033;
  v68._unint64_t object = (void *)0x80000001005F0300;
  v42._uint64_t countAndFlagsBits = 0x64656C7469746E55;
  v42._unint64_t object = (void *)0xE800000000000000;
  v43._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v43._unint64_t object = (void *)0xEB00000000656C62;
  v44._uint64_t countAndFlagsBits = 0;
  v44._unint64_t object = (void *)0xE000000000000000;
  Swift::String v45 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v68);
  uint64_t countAndFlagsBits = v45._countAndFlagsBits;
  unint64_t object = (unint64_t)v45._object;

LABEL_23:
  char v46 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.info.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1005A0230;
  *(void *)(v47 + 56) = &type metadata for String;
  unint64_t v48 = sub_100073F48();
  *(void *)(v47 + 32) = 0xD000000000000013;
  *(void *)(v47 + 40) = 0x80000001005F02E0;
  *(void *)(v47 + 96) = &type metadata for String;
  *(void *)(v47 + 104) = v48;
  *(void *)(v47 + 64) = v48;
  *(void *)(v47 + 72) = countAndFlagsBits;
  *(void *)(v47 + 80) = object;
  *(void *)(v47 + 136) = &type metadata for String;
  *(void *)(v47 + 144) = v48;
  uint64_t v49 = v65;
  *(void *)(v47 + 112) = v67;
  *(void *)(v47 + 120) = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v50 = (uint64_t)v63;
  UTType.init(_:)();
  uint64_t v51 = v66;
  uint64_t v52 = v64;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v50, 1, v64) == 1)
  {
    sub_1000CBBA4(v50, &qword_100708110);
  }
  else
  {
    uint64_t v53 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v62, v50, v52);
    uint64_t v54 = v51;
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = UTType._bridgeToObjectiveC()().super.isa;
    id v57 = [v55 stringByAppendingPathExtensionForType:isa];

    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t object = v58;

    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v52);
  }
  uint64_t v59 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.info.getter();
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_10059B760;
  *(void *)(v60 + 56) = &type metadata for String;
  *(void *)(v60 + 64) = v48;
  *(void *)(v60 + 32) = 0xD000000000000013;
  *(void *)(v60 + 40) = 0x80000001005F02E0;
  *(void *)(v60 + 96) = &type metadata for String;
  *(void *)(v60 + 104) = v48;
  *(void *)(v60 + 72) = countAndFlagsBits;
  *(void *)(v60 + 80) = object;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  return (id)countAndFlagsBits;
}

void sub_1003C7378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self alertControllerWithTitle:v13 message:v14 preferredStyle:1];

  id v16 = (id)_DocumentManagerBundle();
  if (v16)
  {
    uint64_t v17 = v16;
    v43._unint64_t object = (void *)0xE400000000000000;
    v18._uint64_t countAndFlagsBits = 2003789907;
    v18._unint64_t object = (void *)0xE400000000000000;
    v19._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v19._unint64_t object = (void *)0xEB00000000656C62;
    v20._uint64_t countAndFlagsBits = 0;
    v20._unint64_t object = (void *)0xE000000000000000;
    v43._uint64_t countAndFlagsBits = 2003789907;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v43);

    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a5;
    uint64_t v21[3] = a6;
    void v21[4] = a7;
    v21[5] = a8;
    swift_retain();
    swift_bridgeObjectRetain();
    id v22 = a8;
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = sub_1003CB4F4;
    Swift::String v42 = v21;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v38 = 1107296256;
    uint64_t v39 = sub_10041B2E4;
    id v40 = &unk_1006A79E8;
    id v24 = _Block_copy(&aBlock);
    swift_release();
    unint64_t v25 = self;
    id v26 = [v25 actionWithTitle:v23 style:0 handler:v24];
    _Block_release(v24);

    [v15 addAction:v26];
    id v27 = (id)_DocumentManagerBundle();
    if (v27)
    {
      unint64_t v28 = v27;
      v44._unint64_t object = (void *)0xE400000000000000;
      v29._uint64_t countAndFlagsBits = 1701079368;
      v29._unint64_t object = (void *)0xE400000000000000;
      v30._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v30._unint64_t object = (void *)0xEB00000000656C62;
      v31._uint64_t countAndFlagsBits = 0;
      v31._unint64_t object = (void *)0xE000000000000000;
      v44._uint64_t countAndFlagsBits = 1701079368;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v44);

      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v22;
      id v33 = v22;
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v41 = sub_100167BBC;
      Swift::String v42 = (void *)v32;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = sub_10041B2E4;
      id v40 = &unk_1006A7A38;
      uint64_t v35 = _Block_copy(&aBlock);
      swift_release();
      id v36 = [v25 actionWithTitle:v34 style:1 handler:v35];
      _Block_release(v35);

      [v15 addAction:v36];
      [a9 presentViewController:v15 animated:1 completion:0];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Int sub_1003C774C()
{
  swift_beginAccess();
  while (1)
  {
    swift_bridgeObjectRetain();
    v0._uint64_t countAndFlagsBits = 46;
    v0._unint64_t object = (void *)0xE100000000000000;
    Swift::Bool v1 = String.hasPrefix(_:)(v0);
    swift_bridgeObjectRelease();
    if (!v1) {
      break;
    }
    swift_beginAccess();
    String.remove(at:)();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1003C780C(uint64_t result, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v10 = (void *)result;
    uint64_t v11 = self;
    id v12 = v10;
    id v13 = [v11 defaultPermission];
    id v14 = [v13 dataOwnerStateForNode:v12];

    unint64_t v25 = _swiftEmptyArrayStorage;
    if (v14 == (id)1) {
      uint64_t v15 = 2;
    }
    else {
      uint64_t v15 = v14 == (id)2;
    }
    id v16 = self;
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = &v25;
    void v17[3] = v14;
    void v17[4] = a3;
    void v17[5] = v12;
    v17[6] = a2;
    v17[7] = a4;
    v17[8] = a5;
    v17[9] = v5;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1003C9E64;
    *(void *)(v18 + 24) = v17;
    aBlock[4] = sub_1000879B8;
    void aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_100087990;
    uint64_t aBlock[3] = &unk_1006A76C8;
    Swift::String v19 = _Block_copy(aBlock);
    id v20 = v12;
    id v21 = a3;
    id v22 = a2;
    swift_retain();
    swift_retain();
    swift_release();
    [v16 _performAsDataOwner:v15 block:v19];

    _Block_release(v19);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    id result = swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1003C7A38(uint64_t *a1, uint64_t a2, uint64_t a3, char **a4, char **a5, unint64_t a6, void *a7, uint64_t a8)
{
  id v15 = [self generalPasteboard];
  id v16 = [v15 itemProviders];

  sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *a1 = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))swift_bridgeObjectRetain();
  LOBYTE(v16) = sub_1003CA02C(v18);
  swift_bridgeObjectRelease();
  if (v16)
  {
    if (a2 == 1) {
      uint64_t v19 = 2;
    }
    else {
      uint64_t v19 = a2 == 2;
    }
    id v20 = (void *)swift_allocObject();
    v20[2] = a4;
    v20[3] = a3;
    v20[4] = a5;
    uint64_t v20[5] = a6;
    v20[6] = a7;
    id v21 = a4;
    id v22 = (id)a3;
    NSString v23 = a5;
    swift_retain();
    sub_1003C9E88(v19, v22, (uint64_t)sub_1003CA410, (uint64_t)v20);
    return swift_release();
  }
  else
  {
    unint64_t v25 = *a1;
    if (v25 >> 62) {
      goto LABEL_32;
    }
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v26; uint64_t v26 = _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v51 = a6;
      uint64_t v52 = a4;
      a6 = 0;
      unint64_t v56 = v25 & 0xC000000000000001;
      unint64_t v47 = v25 + 32;
      uint64_t v48 = v25 & 0xFFFFFFFFFFFFFF8;
      char v46 = a7;
      uint64_t v49 = (void *)a3;
      uint64_t v50 = a5;
      uint64_t v54 = v26;
      unint64_t v55 = v25;
      while (1)
      {
        if (v56)
        {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (a6 >= *(void *)(v48 + 16)) {
            goto LABEL_31;
          }
          id v27 = *(id *)(v47 + 8 * a6);
        }
        unint64_t v28 = v27;
        if (__OFADD__(a6++, 1)) {
          break;
        }
        a3 = (uint64_t)a7;
        Swift::String v30 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_10059B760;
        *(void *)(v31 + 56) = &type metadata for String;
        *(void *)(v31 + 64) = sub_100073F48();
        strcpy((char *)(v31 + 32), "typeToRequest");
        *(_WORD *)(v31 + 46) = -4864;
        a5 = &selRef_prepareForReuse;
        id v32 = [v28 registeredTypeIdentifiers];
        uint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)(v31 + 96) = sub_1000CBE70(&qword_10070AEB0);
        *(void *)(v31 + 104) = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
        *(void *)(v31 + 72) = v33;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v34 = DOCAcceptableDragPasteboardTypes.getter();
        id v35 = [v28 registeredTypeIdentifiers];
        unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        a4 = *(char ***)(v25 + 16);
        if (a4)
        {
          uint64_t v37 = *(void *)(v25 + 32);
          uint64_t v36 = *(void *)(v25 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v34))
          {
LABEL_26:
            a3 = (uint64_t)v49;
            a5 = v50;
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            NSString v38 = String._bridgeToObjectiveC()();
            uint64_t v39 = (void *)swift_allocObject();
            v39[2] = v28;
            void v39[3] = v37;
            v39[4] = v36;
            v39[5] = a8;
            v39[6] = v49;
            v39[7] = v52;
            v39[8] = v50;
            v39[9] = v51;
            v39[10] = a7;
            aBlock[4] = sub_1003CA384;
            void aBlock[5] = v39;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            uint64_t aBlock[2] = sub_1003C9CA8;
            uint64_t aBlock[3] = &unk_1006A7718;
            id v40 = _Block_copy(aBlock);
            id v41 = v52;
            id v42 = v49;
            Swift::String v43 = v50;
            swift_retain();
            id v44 = v28;
            swift_release();
            id v45 = [v44 loadFileRepresentationForTypeIdentifier:v38 completionHandler:v40];

            _Block_release(v40);
          }
          else
          {
            swift_bridgeObjectRelease();
            if (a4 != (char **)1)
            {
              a7 = (void *)(v25 + 56);
              a3 = 1;
              while (1)
              {
                a5 = (char **)(a3 + 1);
                if (__OFADD__(a3, 1)) {
                  break;
                }
                uint64_t v37 = *(a7 - 1);
                uint64_t v36 = *a7;
                swift_bridgeObjectRetain();
                if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v34))
                {
                  a7 = v46;
                  goto LABEL_26;
                }
                swift_bridgeObjectRelease();
                ++a3;
                a7 += 2;
                if (a5 == a4) {
                  goto LABEL_24;
                }
              }
              __break(1u);
              break;
            }
LABEL_24:
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            a7 = v46;
          }
          unint64_t v25 = v55;
          if (a6 == v54) {
            return swift_bridgeObjectRelease();
          }
        }
        else
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v25 = v55;
          if (a6 == v54) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003C8040(unint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v57 = a4;
  uint64_t v58 = a6;
  uint64_t v56 = a5;
  uint64_t v59 = a3;
  id v66 = a2;
  uint64_t v7 = type metadata accessor for DOCOperationItem();
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v55 = (void **)((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (uint64_t *)((char *)&v54 - v11);
  unint64_t v60 = a1 >> 62;
  uint64_t v61 = v10;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
    if (v65) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v65)
    {
LABEL_3:
      unint64_t v62 = a1;
      unint64_t v63 = a1 & 0xC000000000000001;
      uint64_t v13 = 4;
      do
      {
        if (v63) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(a1 + 8 * v13);
        }
        id v16 = v15;
        a1 = v13 - 3;
        if (__OFADD__(v13 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        id v18 = [v16 effectiveParentItemIdentifier];
        id v19 = [v66 itemIdentifier];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;
        BOOL v24 = v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23;
        if (v24)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v25 & 1) == 0)
          {

            goto LABEL_5;
          }
        }
        id v26 = [v16 providerDomainID];
        id v27 = [v66 providerDomainID];
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v29;
        if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
        {

          swift_bridgeObjectRelease_n();

LABEL_20:
          a1 = v62;
          swift_bridgeObjectRelease();
          int v32 = 1;
          if (!v60) {
            goto LABEL_25;
          }
LABEL_21:
          swift_bridgeObjectRetain();
          uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v14) {
          goto LABEL_20;
        }
LABEL_5:
        ++v13;
        BOOL v24 = a1 == v65;
        a1 = v62;
      }
      while (!v24);
    }
  }
  swift_bridgeObjectRelease();
  int v32 = 0;
  if (v60) {
    goto LABEL_21;
  }
LABEL_25:
  uint64_t v33 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_26:
  uint64_t v34 = _swiftEmptyArrayStorage;
  if (!v33) {
    goto LABEL_38;
  }
  uint64_t v67 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190F0C(0, v33 & ~(v33 >> 63), 0);
  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = v67;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v36 = 0;
      uint64_t v37 = v64;
      do
      {
        uint64_t *v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_storeEnumTagMultiPayload();
        uint64_t v67 = v34;
        unint64_t v39 = v34[2];
        unint64_t v38 = v34[3];
        if (v39 >= v38 >> 1)
        {
          sub_100190F0C(v38 > 1, v39 + 1, 1);
          uint64_t v37 = v64;
          uint64_t v34 = v67;
        }
        ++v36;
        void v34[2] = v39 + 1;
        sub_10010C430((uint64_t)v12, (uint64_t)v34+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v39);
      }
      while (v33 != v36);
    }
    else
    {
      id v40 = (void **)(a1 + 32);
      id v41 = v55;
      do
      {
        id v42 = *v40;
        *id v41 = *v40;
        swift_storeEnumTagMultiPayload();
        uint64_t v67 = v34;
        unint64_t v44 = v34[2];
        unint64_t v43 = v34[3];
        id v45 = v42;
        if (v44 >= v43 >> 1)
        {
          sub_100190F0C(v43 > 1, v44 + 1, 1);
          uint64_t v34 = v67;
        }
        void v34[2] = v44 + 1;
        sub_10010C430((uint64_t)v41, (uint64_t)v34+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v44);
        ++v40;
        --v33;
      }
      while (v33);
    }
LABEL_38:
    id v46 = [self defaultManager];
    unint64_t v47 = (void *)swift_allocObject();
    uint64_t v49 = v56;
    uint64_t v48 = v57;
    id v50 = v66;
    v47[2] = v57;
    v47[3] = v50;
    uint64_t v51 = v58;
    v47[4] = v49;
    v47[5] = v51;
    id v52 = v48;
    id v53 = v50;
    swift_retain();
    sub_100535854(1, (uint64_t)v34, v50, v32, 0, 1, v59, (void (*)(void))sub_1003CA514, (uint64_t)v47);
    swift_bridgeObjectRelease();

    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C85D0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  id v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  void v16[3] = a3;
  v16[4] = a4;
  void v16[5] = a5;
  void v16[6] = a1;
  aBlock[4] = sub_1003CA570;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1000666D8;
  uint64_t aBlock[3] = &unk_1006A78D0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v18 = a2;
  id v19 = a3;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v24);
}

void sub_1003C88E0(void *a1, void *a2, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 hostIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v14 = a2;
  Date.init()();
  id v15 = objc_allocWithZone((Class)DOCHotFolderEvent);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v18 = [v15 initWithAppBundleIdentifier:v16 folderItem:v14 type:1 lastUsedDate:isa frecency:1.0];

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for DOCSmartFolderManager();
  id v19 = (void *)static DOCSmartFolderManager.sharedManager.getter();
  DOCSmartFolderManager.register(event:)();

  a3(a5, 0);
}

uint64_t sub_1003C8A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, objc_class *a8, void *a9, uint64_t a10, uint64_t a11)
{
  Class v94 = a8;
  uint64_t v96 = a6;
  uint64_t v97 = a7;
  uint64_t v15 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v95 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v80 - v22;
  sub_1002827DC(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
    uint64_t v24 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10059B760;
    *(void *)(v25 + 56) = &type metadata for String;
    unint64_t v26 = sub_100073F48();
    *(void *)(v25 + 64) = v26;
    *(void *)(v25 + 32) = 0xD00000000000004CLL;
    *(void *)(v25 + 40) = 0x80000001005F0130;
    if (a2)
    {
      uint64_t v27 = _convertErrorToNSError(_:)();
      uint64_t v100 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v101 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v27;
      sub_1001146DC(&aBlock, v25 + 72);
    }
    else
    {
      *(void *)(v25 + 96) = &type metadata for String;
      *(void *)(v25 + 104) = v26;
      *(void *)(v25 + 72) = 0xD000000000000013;
      *(void *)(v25 + 80) = 0x80000001005DD4C0;
    }
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v90 = a10;
    unint64_t v91 = a9;
    id v88 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v89 = v19 + 32;
    v88(v23, v17, v18);
    id v28 = sub_1003C6B8C(a4, a5);
    uint64_t v30 = v29;
    v31._uint64_t countAndFlagsBits = 46;
    v31._unint64_t object = (void *)0xE100000000000000;
    Swift::Bool v32 = String.hasPrefix(_:)(v31);
    uint64_t v92 = a11;
    if (v32)
    {
      id v81 = sub_1003CB0D8(v97, v28, v30);
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      uint64_t v80 = v34;
      Class v35 = v94;
    }
    else
    {
      Class v35 = v94;
      id v81 = v28;
      uint64_t v80 = v30;
    }
    dispatch_semaphore_t v86 = dispatch_semaphore_create(0);
    sub_1000CBE70((uint64_t *)&unk_1007087F0);
    uint64_t v36 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v93 = v19;
    uint64_t v85 = v36 | 7;
    uint64_t v37 = swift_allocObject();
    long long v82 = xmmword_1005A0030;
    *(_OWORD *)(v37 + 16) = xmmword_1005A0030;
    unint64_t v38 = *(void (**)(void))(v19 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v38)(v37 + ((v36 + 32) & ~v36), v23, v18);
    unint64_t v39 = self;
    id v40 = v35;
    uint64_t v83 = v40;
    id v41 = [v39 shared];
    Class v94 = (Class)type metadata accessor for DOCCopyOperation();
    id v42 = objc_allocWithZone(v94);
    unint64_t v43 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)(v37, v40, v41);
    sub_1000CBE70(&qword_100708D68);
    unint64_t v44 = (int *)(sub_1000CBE70((uint64_t *)&unk_100708D70) - 8);
    id v45 = v23;
    unint64_t v46 = (*(unsigned __int8 *)(*(void *)v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v44 + 80);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v82;
    uint64_t v48 = (void *)(v47 + v46 + v44[14]);
    uint64_t v49 = v45;
    Swift::UInt32 v84 = v45;
    v38();
    uint64_t v50 = v80;
    *uint64_t v48 = v81;
    v48[1] = v50;
    uint64_t v51 = v43;
    sub_100495550(v47);
    sub_1000BAC9C((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v51 setTargetFilenamesByURL:isa];

    [v51 setLastUsageUpdatePolicy:2];
    [v51 setShouldBounceOnCollision:1];
    id v53 = v95;
    ((void (*)(char *, char *, uint64_t))v38)(v95, v49, v18);
    uint64_t v54 = (v36 + 64) & ~v36;
    unint64_t v55 = (v20 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v56 = (char *)swift_allocObject();
    id v57 = v97;
    *((void *)v56 + 2) = v96;
    *((void *)v56 + 3) = v57;
    uint64_t v58 = v18;
    uint64_t v87 = v18;
    dispatch_semaphore_t v59 = v86;
    unint64_t v60 = v91;
    *((void *)v56 + 4) = v86;
    *((void *)v56 + 5) = v60;
    uint64_t v61 = v83;
    *((void *)v56 + 6) = v83;
    *((void *)v56 + 7) = v51;
    v88(&v56[v54], v53, v58);
    unint64_t v62 = &v56[v55];
    uint64_t v63 = v92;
    *(void *)unint64_t v62 = v90;
    *((void *)v62 + 1) = v63;
    uint64_t v101 = (uint64_t)sub_1003CA68C;
    unint64_t v102 = v56;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    unint64_t v99 = sub_1001950CC;
    uint64_t v100 = &unk_1006A7920;
    uint64_t v64 = _Block_copy(&aBlock);
    uint64_t v65 = v51;
    id v66 = v61;
    uint64_t v67 = v65;
    id v68 = v57;
    uint64_t v69 = v59;
    id v70 = v60;
    swift_retain();
    swift_release();
    [v67 setActionCompletionBlock:v64];
    _Block_release(v64);

    os_log_type_t v71 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1005A0230;
    *(void *)(v72 + 56) = &type metadata for String;
    *(void *)(v72 + 64) = sub_100073F48();
    *(void *)(v72 + 32) = 0xD00000000000004CLL;
    *(void *)(v72 + 40) = 0x80000001005F0130;
    *(void *)(v72 + 96) = v94;
    *(void *)(v72 + 104) = sub_1000BAC9C(&qword_100713B70, (void (*)(uint64_t))type metadata accessor for DOCCopyOperation);
    *(void *)(v72 + 72) = v67;
    uint64_t v73 = v67;
    uint64_t v74 = v84;
    URL._bridgeToObjectiveC()(v75);
    uint64_t v77 = v76;
    *(void *)(v72 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v72 + 144) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v72 + 112) = v77;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v78 = [self defaultManager];
    [v78 scheduleAction:v73];

    OS_dispatch_semaphore.wait()();
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v74, v87);
  }
}