unint64_t sub_10028B800()
{
  unint64_t result;

  result = qword_1015D7F90;
  if (!qword_1015D7F90)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7F90);
  }
  return result;
}

uint64_t sub_10028B854()
{
  return sub_100292330(&qword_1015D7FA0, (uint64_t *)&unk_1015D7F60, (void (*)(void))sub_10028B78C, (void (*)(void))sub_10028B890);
}

unint64_t sub_10028B890()
{
  unint64_t result = qword_1015D7FA8;
  if (!qword_1015D7FA8)
  {
    sub_10010118C(&qword_1015D7F40);
    sub_1001010F8(&qword_1015D7FB0, &qword_1015D7F48);
    sub_10028B800();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7FA8);
  }
  return result;
}

unint64_t sub_10028B930()
{
  unint64_t result = qword_1015D7FB8;
  if (!qword_1015D7FB8)
  {
    sub_10010118C(&qword_1015D7F30);
    sub_10028B78C();
    sub_1001010F8(&qword_1015D7F98, &qword_1015D7F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D7FB8);
  }
  return result;
}

uint64_t sub_10028B9D4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10028BA34()
{
  return sub_10028AB30(v0 + 16);
}

uint64_t sub_10028BA3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10028BA84@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10028BB04(uint64_t a1, void **a2)
{
  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10028BB7C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10028BBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10028BBCC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10028BBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10028BC9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10028BCC8()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_10028BCF0(uint64_t result)
{
  v1 = _swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(result + 16);
  if (v23)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    v4 = &_swiftEmptyArrayStorage[4];
    v5 = (uint64_t *)(result + 56);
    v6 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v7 = *(v5 - 3);
      uint64_t v8 = *(v5 - 2);
      uint64_t v9 = *(v5 - 1);
      uint64_t v10 = *v5;
      if (v2)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRetain();
        v1 = v6;
        BOOL v11 = __OFSUB__(v2--, 1);
        if (v11) {
          goto LABEL_29;
        }
      }
      else
      {
        unint64_t v12 = v6[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_30;
        }
        int64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1) {
          uint64_t v14 = 1;
        }
        else {
          uint64_t v14 = v13;
        }
        sub_1000FF33C(&qword_1015D8138);
        v1 = (void *)swift_allocObject();
        uint64_t v15 = (uint64_t)(j__malloc_size(v1) - 32) / 40;
        v1[2] = v14;
        v1[3] = 2 * v15;
        v16 = v1 + 4;
        uint64_t v17 = v6[3] >> 1;
        v4 = &v1[5 * v17 + 4];
        uint64_t v18 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v6[2])
        {
          BOOL v19 = v1 < v6 || v16 >= &v6[5 * v17 + 4];
          if (!v19 && v1 == v6)
          {
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            memmove(v16, v6 + 4, 40 * v17);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
          }
          v6[2] = 0;
        }
        else
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t result = swift_release();
        BOOL v11 = __OFSUB__(v18, 1);
        uint64_t v2 = v18 - 1;
        if (v11)
        {
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
      }
      v5 += 4;
      void *v4 = v3;
      v4[1] = v7;
      v4[2] = v8;
      v4[3] = v9;
      v4[4] = v10;
      v4 += 5;
      v6 = v1;
      if (v23 == ++v3)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
  }
  uint64_t v2 = 0;
LABEL_25:
  unint64_t v20 = v1[3];
  if (v20 >= 2)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v11 = __OFSUB__(v21, v2);
    uint64_t v22 = v21 - v2;
    if (v11) {
      goto LABEL_31;
    }
    v1[2] = v22;
  }
  return (uint64_t)v1;
}

uint64_t sub_10028BF18(uint64_t a1)
{
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v1 = 0;
  for (uint64_t i = a1 + 56; ; i += 32)
  {
    uint64_t v4 = *(void *)(i - 24);
    uint64_t v3 = *(void *)(i - 16);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D8008);
    State.wrappedValue.getter();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (v4 == v7 && v3 == v8) {
      break;
    }
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5) {
      return v1;
    }
    if (v9 == ++v1) {
      return 0;
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v1;
}

void sub_10028C07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v778 = *(void *)(a4 + 16);
  if (!v778) {
    return;
  }
  uint64_t v4 = a3;
  uint64_t v777 = a4 + 32;
  uint64_t v756 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v722 = a2;
  uint64_t v723 = v4;
  uint64_t v721 = a1;
LABEL_8:
  uint64_t v8 = (void *)(v777 + 32 * v7);
  uint64_t v9 = v8[2];
  BOOL v10 = *v8 == a1 && v8[1] == a2;
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11 != *(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  if (!v11 || v9 == v4)
  {
LABEL_1142:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v12 = v9 + 32;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  uint64_t v775 = v7;
  uint64_t v726 = v12;
  uint64_t v727 = v11;
  while (2)
  {
    uint64_t v776 = v13;
    uint64_t v14 = v13 << 6;
    uint64_t v15 = (uint64_t *)(v12 + (v13 << 6));
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    uint64_t v855 = v15[3];
    v831 = (char *)v15[4];
    unint64_t v856 = v15[5];
    int v19 = *((unsigned __int8 *)v15 + 48);
    uint64_t v20 = v756 + v14;
    uint64_t v22 = *(void *)(v20 + 16);
    uint64_t v21 = *(void *)(v20 + 24);
    v848 = *(char **)(v20 + 32);
    unint64_t v857 = *(void *)(v20 + 40);
    int v23 = *(unsigned __int8 *)(v20 + 48);
    BOOL v24 = v16 == *(void *)v20 && v17 == *(void *)(v20 + 8);
    uint64_t v844 = *(void *)(v20 + 24);
    if (!v24)
    {
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v21 = v844;
      if ((v25 & 1) == 0)
      {
LABEL_1078:
        swift_bridgeObjectRelease();
        a1 = v721;
        a2 = v722;
        goto LABEL_5;
      }
    }
    if (v855)
    {
      v26 = v848;
      if (!v21
        || (v18 == v22 ? (BOOL v27 = v855 == v21) : (BOOL v27 = 0),
            !v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
      {
LABEL_1074:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_1080;
      }
    }
    else
    {
      v26 = v848;
      if (v21) {
        goto LABEL_1074;
      }
    }
    if (v19 != v23) {
      goto LABEL_1078;
    }
    uint64_t v28 = *((void *)v831 + 2);
    if (v28 != *((void *)v26 + 2)) {
      goto LABEL_1078;
    }
    if (!v28)
    {
      swift_bridgeObjectRetain();
      unint64_t v29 = v857;
LABEL_779:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v176 = v856;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_780;
    }
    swift_bridgeObjectRetain();
    unint64_t v29 = v857;
    if (v831 == v26) {
      goto LABEL_779;
    }
    v30 = v831 + 32;
    v728 = v26 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v31 = 0;
    uint64_t v724 = v28;
    do
    {
      if (v31 >= *((void *)v26 + 2)) {
        goto LABEL_1144;
      }
      unint64_t v725 = v31;
      uint64_t v32 = 80 * v31;
      v33 = &v30[10 * v31];
      uint64_t v34 = v33[2];
      int v758 = *((unsigned __int8 *)v33 + 32);
      unint64_t v35 = v33[5];
      LODWORD(v755) = *((unsigned __int8 *)v33 + 48);
      id obj = (id)v33[7];
      int v734 = *((unsigned __int8 *)v33 + 72);
      v36 = &v728[v32];
      uint64_t v849 = *((void *)v36 + 2);
      LODWORD(v757) = v36[32];
      unint64_t v845 = *((void *)v36 + 5);
      LODWORD(v754) = v36[48];
      id v739 = (id)*((void *)v36 + 7);
      uint64_t v792 = v33[8];
      uint64_t v796 = *((void *)v36 + 8);
      int v730 = v36[72];
      unint64_t v798 = v35;
      if ((*v33 != *(void *)v36 || v33[1] != *((void *)v36 + 1))
        && (uint64_t v34 = v33[2], v35 = v33[5], (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        || (uint64_t v37 = *(void *)(v34 + 16), v37 != *(void *)(v849 + 16)))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v722;
        goto LABEL_1133;
      }
      if (v37)
      {
        v779 = *(char **)(v34 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v38 = v849;
        if (v34 != v849)
        {
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v39 = 0;
          v40 = 0;
          uint64_t v780 = v34;
          while ((unint64_t)v40 < *(void *)(v38 + 16))
          {
            v41 = (void *)(v34 + v39);
            uint64_t v42 = *(void *)(v34 + v39 + 32);
            uint64_t v43 = *(void *)(v34 + v39 + 40);
            uint64_t v44 = *(void *)(v34 + v39 + 48);
            uint64_t v45 = *(void *)(v34 + v39 + 56);
            uint64_t v47 = *(void *)(v34 + v39 + 64);
            uint64_t v46 = v41[9];
            uint64_t v837 = v41[10];
            uint64_t v851 = v41[11];
            uint64_t v826 = v41[12];
            v809 = (void *)v41[13];
            v816 = (char *)v41[14];
            v48 = (void *)(v38 + v39);
            uint64_t v49 = *(void *)(v38 + v39 + 32);
            uint64_t v50 = *(void *)(v38 + v39 + 40);
            uint64_t v51 = *(void *)(v38 + v39 + 48);
            uint64_t v52 = *(void *)(v38 + v39 + 56);
            uint64_t v54 = *(void *)(v38 + v39 + 64);
            uint64_t v53 = v48[9];
            uint64_t v55 = v48[11];
            uint64_t v832 = v48[10];
            uint64_t v821 = v48[12];
            uint64_t v802 = v48[13];
            v815 = (char *)v48[14];
            if (v42 != v49 || v43 != v50)
            {
              uint64_t v768 = v47;
              uint64_t v56 = v48[9];
              uint64_t v57 = v48[11];
              uint64_t v58 = v46;
              uint64_t v59 = v44;
              v60 = v40;
              uint64_t v61 = v51;
              uint64_t v62 = v45;
              char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v45 = v62;
              uint64_t v51 = v61;
              v40 = v60;
              uint64_t v44 = v59;
              uint64_t v46 = v58;
              uint64_t v55 = v57;
              uint64_t v53 = v56;
              uint64_t v47 = v768;
              if ((v63 & 1) == 0)
              {
LABEL_3:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                a1 = v721;
                a2 = v722;
                uint64_t v7 = v775;
                goto LABEL_4;
              }
            }
            if (v45)
            {
              if (!v52) {
                goto LABEL_3;
              }
              if (v44 != v51 || v45 != v52)
              {
                uint64_t v64 = v46;
                char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
                uint64_t v46 = v64;
                if ((v65 & 1) == 0) {
                  goto LABEL_3;
                }
              }
            }
            else if (v52)
            {
              goto LABEL_3;
            }
            if ((v47 != v54 || v46 != v53) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              goto LABEL_3;
            }
            if (v851)
            {
              if (!v55
                || (v837 != v832 || v851 != v55)
                && ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
              {
                goto LABEL_3;
              }
            }
            else if (v55)
            {
              goto LABEL_3;
            }
            if (v826 != v821 || v816 != v815) {
              goto LABEL_3;
            }
            if (([v809 isEqual:v802] & 1) == 0) {
              goto LABEL_1081;
            }
            ++v40;
            v39 += 88;
            uint64_t v34 = v780;
            v26 = v848;
            uint64_t v38 = v849;
            unint64_t v35 = v798;
            if (v779 == v40) {
              goto LABEL_73;
            }
          }
          __break(1u);
LABEL_1144:
          __break(1u);
          goto LABEL_1145;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_73:
      if (v758 != v757)
      {
LABEL_1081:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v721;
        a2 = v722;
        uint64_t v7 = v775;
        goto LABEL_4;
      }
      uint64_t v7 = v775;
      if (v755 != v754
        || (obj != v739 || v792 != v796) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        || v734 != v730)
      {
LABEL_1083:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v722;
        goto LABEL_1133;
      }
      if (v35 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v66 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v845 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v478 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v66 != v478) {
          goto LABEL_1083;
        }
      }
      else if (v66 != *(void *)((v845 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_1083;
      }
      unint64_t v29 = v857;
      if (v35 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v67)
        {
LABEL_96:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_244;
        }
      }
      else
      {
        uint64_t v67 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v67) {
          goto LABEL_96;
        }
      }
      unint64_t v833 = v35 & 0xC000000000000001;
      if ((v35 & 0xC000000000000001) != 0)
      {
        uint64_t v68 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_1146;
        }
        uint64_t v68 = *(void *)(v35 + 32);
        swift_unknownObjectRetain();
      }
      unint64_t v69 = v845;
      if (v845 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v29 = v857;
        uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        unint64_t v69 = v845;
        uint64_t v827 = v75;
        if (!v75) {
          goto LABEL_243;
        }
      }
      else
      {
        uint64_t v827 = *(void *)((v845 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v827) {
          goto LABEL_243;
        }
      }
      unint64_t v817 = v69 & 0xC000000000000001;
      uint64_t v822 = v67;
      if ((v69 & 0xC000000000000001) != 0)
      {
        uint64_t v70 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_1149;
        }
        uint64_t v70 = *(void *)(v69 + 32);
        swift_unknownObjectRetain();
      }
      v71 = (char *)(id)v68;
      v72 = (char *)(id)v70;
      v73 = v72;
      if (!(v68 | v70))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v74 = v822;
        goto LABEL_236;
      }
      if (v71) {
        BOOL v76 = v70 == 0;
      }
      else {
        BOOL v76 = 0;
      }
      char v77 = v76;
      if (v72) {
        BOOL v78 = v68 == 0;
      }
      else {
        BOOL v78 = 0;
      }
      if (v78
        || (v77 & 1) != 0
        || (unsigned int v79 = [v71 artworkSourceType],
            v79 != [v73 artworkSourceType])
        || (unsigned int v80 = [v71 artworkUseType],
            v80 != [v73 artworkUseType]))
      {
LABEL_1084:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_1131;
      }
      v852 = v71;
      uint64_t v81 = [v71 shieldDataSource];
      uint64_t v82 = [v73 shieldDataSource];
      v838 = v73;
      v83 = (char *)(id)v81;
      v84 = (char *)(id)v82;
      v803 = v83;
      v810 = v84;
      if (v81 | v82)
      {
        if (v83) {
          BOOL v85 = v82 == 0;
        }
        else {
          BOOL v85 = 0;
        }
        int v86 = v85;
        if (v84) {
          BOOL v87 = v81 == 0;
        }
        else {
          BOOL v87 = 0;
        }
        v88 = v84;
        if (v87 || v86 || (id v89 = [v83 shieldType], v89 != objc_msgSend(v88, "shieldType")))
        {
LABEL_1087:

          goto LABEL_1098;
        }
        v90 = [v83 shieldText];
        if (v90 || ([v88 shieldText], (v815 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
        {
          [v83 shieldText:v711];
          v73 = (char *)objc_claimAutoreleasedReturnValue();
          id v89 = [v88 shieldText];
          if (([v73 isEqualToString:v89] & 1) == 0) {
            goto LABEL_1094;
          }
          int v91 = 1;
        }
        else
        {
          v815 = 0;
          int v91 = 0;
        }
        [v83 shieldColorString:v711];
        v93 = v92 = v83;
        if (v93
          || ([v88 shieldColorString], (v779 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
        {
          v94 = v90;
          uint64_t v95 = v34;
          v96 = [v92 shieldColorString];
          v97 = [v88 shieldColorString];
          unsigned __int8 v98 = [v96 isEqualToString:v97];

          if (v93)
          {

            uint64_t v34 = v95;
            v90 = v94;
            if (!v91) {
              goto LABEL_134;
            }
            goto LABEL_133;
          }
          uint64_t v34 = v95;
          v90 = v94;
          v149 = v779;
        }
        else
        {
          v149 = 0;
          unsigned __int8 v98 = 1;
        }

        if ((v91 & 1) == 0)
        {
LABEL_134:
          v26 = v848;
          if (v90)
          {
            v71 = v803;

            v73 = v810;
            uint64_t v7 = v775;
            if ((v98 & 1) == 0) {
              goto LABEL_1099;
            }
          }
          else
          {
            v71 = v803;

            v73 = v810;
            uint64_t v7 = v775;
            if ((v98 & 1) == 0) {
              goto LABEL_1099;
            }
          }
          goto LABEL_138;
        }
LABEL_133:

        goto LABEL_134;
      }
LABEL_138:
      uint64_t v99 = [v852 iconDataSource];
      uint64_t v100 = [v838 iconDataSource];
      v101 = (char *)(id)v99;
      v102 = (char *)(id)v100;
      v103 = v102;
      if (v99 | v100)
      {
        if (v101) {
          BOOL v104 = v100 == 0;
        }
        else {
          BOOL v104 = 0;
        }
        char v105 = v104;
        if (v102) {
          BOOL v106 = v99 == 0;
        }
        else {
          BOOL v106 = 0;
        }
        if (v106
          || (v105 & 1) != 0
          || (unsigned int v107 = [v101 iconType], v107 != objc_msgSend(v103, "iconType"))
          || (unsigned int v108 = [v101 cartoID], v108 != objc_msgSend(v103, "cartoID"))
          || (unsigned int v109 = [v101 defaultTransitType],
              v109 != [v103 defaultTransitType])
          || (unsigned int v110 = [v101 iconAttributeKey],
              v110 != [v103 iconAttributeKey]))
        {
          id v117 = v101;
          v122 = v103;
          goto LABEL_1110;
        }
        unsigned int v111 = [v101 iconAttributeValue];
        unsigned int v112 = [v103 iconAttributeValue];

        if (v111 != v112) {
          goto LABEL_1111;
        }
      }
      v779 = v103;
      v113 = v852;
      uint64_t v114 = [v852 iconFallbackShieldDataSource];
      v115 = v838;
      uint64_t v116 = [v838 iconFallbackShieldDataSource];
      id v117 = (id)v114;
      v118 = (char *)(id)v116;
      v759 = v117;
      v815 = v118;
      v769 = v101;
      if (!(v114 | v116)) {
        goto LABEL_181;
      }
      if (v117) {
        BOOL v119 = v116 == 0;
      }
      else {
        BOOL v119 = 0;
      }
      int v120 = v119;
      if (v118) {
        BOOL v121 = v114 == 0;
      }
      else {
        BOOL v121 = 0;
      }
      v122 = v118;
      if (v121 || v120)
      {

        v708 = v122;
        v103 = v779;
        goto LABEL_1109;
      }
      id v123 = [v117 shieldType];
      v103 = v779;
      if (v123 != [v122 shieldType])
      {

        v708 = v122;
        goto LABEL_1109;
      }
      v124 = [v117 shieldText];
      if (!v124)
      {
        v757 = [v122 shieldText];
        if (!v757)
        {
          v757 = 0;
          int v125 = 0;
          goto LABEL_172;
        }
      }
      v101 = [v117 shieldText];
      id v123 = [v122 shieldText];
      if (([v101 isEqualToString:v123] & 1) == 0)
      {

        v708 = v757;
        if (v124) {
          v708 = v124;
        }
        v101 = v769;
        uint64_t v7 = v775;
LABEL_1109:

LABEL_1110:
LABEL_1111:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        v71 = v101;
        v73 = v103;
        goto LABEL_1131;
      }
      int v125 = 1;
LABEL_172:
      v126 = [v117 shieldColorString];
      if (v126 || ([v815 shieldColorString], (v26 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
      {
        uint64_t v127 = v34;
        v128 = [v117 shieldColorString];
        v129 = [v815 shieldColorString];
        unsigned __int8 v130 = [v128 isEqualToString:v129];

        if (v126)
        {

          uint64_t v34 = v127;
          if (!v125) {
            goto LABEL_177;
          }
LABEL_176:

          goto LABEL_177;
        }
        uint64_t v34 = v127;
      }
      else
      {
        unsigned __int8 v130 = 1;
      }

      if (v125) {
        goto LABEL_176;
      }
LABEL_177:
      v26 = v848;
      v101 = v769;

      v122 = v815;
      if (v124)
      {
      }
      else
      {
      }
      uint64_t v7 = v775;
      v113 = v852;
      v115 = v838;
      if ((v130 & 1) == 0)
      {
        v103 = v779;
        id v117 = v759;
        goto LABEL_1110;
      }
LABEL_181:
      uint64_t v131 = [v113 textDataSource];
      uint64_t v132 = [v115 textDataSource];
      id v133 = (id)v131;
      v134 = (char *)(id)v132;
      v135 = v115;
      id v755 = v133;
      v757 = v134;
      if (v131 | v132)
      {
        if (v133) {
          BOOL v136 = v132 == 0;
        }
        else {
          BOOL v136 = 0;
        }
        int v137 = v136;
        if (v134) {
          BOOL v138 = v131 == 0;
        }
        else {
          BOOL v138 = 0;
        }
        v139 = v134;
        if (v138 || v137)
        {

          unsigned __int8 v145 = 0;
          v146 = v139;
        }
        else
        {
          uint64_t v140 = [v133 text];
          uint64_t v141 = [v139 text];
          id v754 = (id)v140;
          id v142 = (id)v141;
          v143 = v142;
          if (!(v140 | v141))
          {

            v135 = v838;
            v113 = v852;
            goto LABEL_195;
          }
          if (v754) {
            BOOL v150 = v141 == 0;
          }
          else {
            BOOL v150 = 0;
          }
          char v151 = v150;
          if (v142) {
            BOOL v152 = v140 == 0;
          }
          else {
            BOOL v152 = 0;
          }
          if (!v152 && (v151 & 1) == 0)
          {
            uint64_t v153 = [v754 formatStrings];
            [v143 formatStrings];
            uint64_t v155 = v154 = v143;
            id v156 = (id)v153;
            id v157 = (id)v155;
            v158 = &stru_1012E1218;
            id v740 = v154;
            if (!(v153 | v155))
            {
              v735 = v156;
              v719 = v157;

              v159 = v154;
              goto LABEL_217;
            }
            if (v156) {
              BOOL v389 = v155 == 0;
            }
            else {
              BOOL v389 = 0;
            }
            char v390 = v389;
            if (v157) {
              BOOL v391 = v153 == 0;
            }
            else {
              BOOL v391 = 0;
            }
            if (!v391 && (v390 & 1) == 0)
            {
              id v392 = [v156 count];
              if (v392 == [v157 count])
              {
                long long v861 = 0u;
                long long v862 = 0u;
                long long v859 = 0u;
                long long v860 = 0u;
                v735 = v156;
                id objc = v156;
                id v393 = [objc countByEnumeratingWithState:&v859 objects:v858 count:16];
                if (v393)
                {
                  id v394 = v393;
                  uint64_t v395 = 0;
                  uint64_t v396 = *(void *)v860;
                  while (2)
                  {
                    for (uint64_t i = 0; i != v394; uint64_t i = (char *)i + 1)
                    {
                      if (*(void *)v860 != v396) {
                        objc_enumerationMutation(objc);
                      }
                      v398 = *(NSString **)(*((void *)&v859 + 1) + 8 * i);
                      v399 = v157;
                      v400 = [v157 objectAtIndexedSubscript:(char *)i + v395];
                      LODWORD(v398) = sub_10029BF80(v400, v398, (NSString *)v400);

                      if (!v398)
                      {
                        id v426 = v399;

                        v26 = v848;
                        v135 = v838;
                        id v156 = v735;
                        goto LABEL_633;
                      }
                      id v157 = v399;
                    }
                    id v394 = [objc countByEnumeratingWithState:&v859 objects:v858 count:16];
                    v395 += (uint64_t)i;
                    if (v394) {
                      continue;
                    }
                    break;
                  }
                }
                v719 = v157;

                v26 = v848;
                v159 = v154;
LABEL_217:
                uint64_t v160 = [v754 separators];
                uint64_t v161 = [v159 separators];
                id v162 = (id)v160;
                id v163 = (id)v161;
                v164 = &stru_1012E1238;
                v135 = v838;
                id obja = v163;
                if (v160 | v161)
                {
                  if (v162) {
                    BOOL v427 = v161 == 0;
                  }
                  else {
                    BOOL v427 = 0;
                  }
                  char v428 = v427;
                  if (v163) {
                    BOOL v429 = v160 == 0;
                  }
                  else {
                    BOOL v429 = 0;
                  }
                  uint64_t v74 = v822;
                  if (v429
                    || (v428 & 1) != 0
                    || (id v430 = [v162 count], v430 != objc_msgSend(obja, "count")))
                  {

                    v439 = v162;
                    unint64_t v35 = v798;
                    goto LABEL_767;
                  }
                  long long v861 = 0u;
                  long long v862 = 0u;
                  long long v859 = 0u;
                  long long v860 = 0u;
                  v731 = v162;
                  id v431 = v162;
                  id v432 = [v431 countByEnumeratingWithState:&v859 objects:v858 count:16];
                  if (v432)
                  {
                    id v433 = v432;
                    uint64_t v434 = 0;
                    uint64_t v435 = *(void *)v860;
                    while (2)
                    {
                      for (j = 0; j != v433; j = (char *)j + 1)
                      {
                        if (*(void *)v860 != v435) {
                          objc_enumerationMutation(v431);
                        }
                        v437 = *(NSString **)(*((void *)&v859 + 1) + 8 * (void)j);
                        v438 = [obja objectAtIndexedSubscript:(char *)j + v434];
                        LODWORD(v437) = sub_10029BF80(v438, v437, (NSString *)v438);

                        if (!v437)
                        {

                          v26 = v848;
LABEL_765:
                          unint64_t v35 = v798;
                          goto LABEL_766;
                        }
                      }
                      id v433 = [v431 countByEnumeratingWithState:&v859 objects:v858 count:16];
                      v434 += (uint64_t)j;
                      if (v433) {
                        continue;
                      }
                      break;
                    }
                  }

                  v26 = v848;
                }
                else
                {
                  v731 = v162;
                }
                uint64_t v165 = [v754 formatTokens];
                uint64_t v166 = [v740 formatTokens];
                id v167 = (id)v165;
                id v168 = (id)v166;
                v169 = &stru_1012E1278;
                unint64_t v35 = v798;
                if (!(v165 | v166))
                {

                  goto LABEL_221;
                }
                if (v167) {
                  BOOL v440 = v166 == 0;
                }
                else {
                  BOOL v440 = 0;
                }
                char v441 = v440;
                if (v168) {
                  BOOL v442 = v165 == 0;
                }
                else {
                  BOOL v442 = 0;
                }
                if (!v442 && (v441 & 1) == 0)
                {
                  id v443 = [v167 count];
                  if (v443 == [v168 count])
                  {
                    uint64_t v444 = v34;
                    long long v861 = 0u;
                    long long v862 = 0u;
                    long long v859 = 0u;
                    long long v860 = 0u;
                    id v445 = v167;
                    id v446 = [v445 countByEnumeratingWithState:&v859 objects:v858 count:16];
                    if (v446)
                    {
                      id v447 = v446;
                      uint64_t v448 = 0;
                      uint64_t v449 = *(void *)v860;
                      while (2)
                      {
                        for (k = 0; k != v447; k = (char *)k + 1)
                        {
                          if (*(void *)v860 != v449) {
                            objc_enumerationMutation(v445);
                          }
                          v451 = *(GEOServerFormatToken **)(*((void *)&v859 + 1) + 8 * (void)k);
                          v452 = [v168 objectAtIndexedSubscript:(char *)k + v448];
                          LODWORD(v451) = sub_10029C004(v452, v451, (GEOServerFormatToken *)v452);

                          if (!v451)
                          {

                            uint64_t v7 = v775;
                            v26 = v848;
                            uint64_t v34 = v444;
                            goto LABEL_765;
                          }
                        }
                        id v447 = [v445 countByEnumeratingWithState:&v859 objects:v858 count:16];
                        v448 += (uint64_t)k;
                        if (v447) {
                          continue;
                        }
                        break;
                      }
                    }

                    uint64_t v34 = v444;
LABEL_221:
                    uint64_t v170 = [v754 alternativeString];
                    uint64_t v171 = [v740 alternativeString];
                    uint64_t v172 = v170 | v171;
                    id v173 = (id)v170;
                    id v174 = (id)v171;
                    if (v172) {
                      unsigned __int8 v716 = [v173 isEqual:v174];
                    }
                    else {
                      unsigned __int8 v716 = 1;
                    }

                    uint64_t v7 = v775;
                    v26 = v848;
                    v135 = v838;
                    v113 = v852;
                    if ((v716 & 1) == 0)
                    {
LABEL_196:
                      unsigned __int8 v145 = 0;
                      unint64_t v35 = v798;
                      uint64_t v74 = v822;
                      goto LABEL_235;
                    }
                    goto LABEL_195;
                  }
                }

                uint64_t v7 = v775;
LABEL_766:
                v135 = v838;
                uint64_t v74 = v822;
                v439 = v731;
LABEL_767:

                unsigned __int8 v145 = 0;
                v146 = obja;
                goto LABEL_234;
              }
            }

            id v426 = v157;
            v135 = v838;
LABEL_633:

            unsigned __int8 v145 = 0;
            v146 = v426;
            unint64_t v35 = v798;
LABEL_233:
            uint64_t v74 = v822;
            goto LABEL_234;
          }

          unsigned __int8 v145 = 0;
          v146 = v143;
        }
        unint64_t v35 = v798;
        v135 = v838;
        goto LABEL_233;
      }
LABEL_195:
      unsigned int v144 = [v113 hasRoutingIncidentBadge];
      if (v144 != [v135 hasRoutingIncidentBadge]) {
        goto LABEL_196;
      }
      v146 = [v113 accessibilityText];
      if (v146 || ([v135 accessibilityText], (id v754 = (id)objc_claimAutoreleasedReturnValue()) != 0))
      {
        v147 = [v113 accessibilityText];
        v148 = [v135 accessibilityText];
        unsigned __int8 v145 = [v147 isEqualToString:v148];

        v135 = v838;
        unint64_t v35 = v798;
        uint64_t v74 = v822;
        if (!v146) {
          v146 = v754;
        }
      }
      else
      {
        id v754 = 0;
        unsigned __int8 v145 = 1;
        unint64_t v35 = v798;
        uint64_t v74 = v822;
        v146 = 0;
      }
LABEL_234:

LABEL_235:
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      if ((v145 & 1) == 0) {
        goto LABEL_1132;
      }
LABEL_236:
      if (v74 == 1) {
        goto LABEL_237;
      }
      unint64_t v29 = v857;
      if (v833)
      {
        uint64_t v175 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_1156;
        }
        uint64_t v175 = *(void *)(v35 + 40);
        swift_unknownObjectRetain();
      }
      if (v827 == 1)
      {
LABEL_243:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_244;
      }
      if (v817)
      {
        uint64_t v177 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v845 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_1158;
        }
        uint64_t v177 = *(void *)(v845 + 40);
        swift_unknownObjectRetain();
      }
      v71 = (char *)(id)v175;
      v178 = (char *)(id)v177;
      v73 = v178;
      if (v175 | v177)
      {
        if (v71) {
          BOOL v180 = v177 == 0;
        }
        else {
          BOOL v180 = 0;
        }
        char v181 = v180;
        if (v178) {
          BOOL v182 = v175 == 0;
        }
        else {
          BOOL v182 = 0;
        }
        if (v182) {
          goto LABEL_1084;
        }
        if (v181) {
          goto LABEL_1084;
        }
        unsigned int v183 = [v71 artworkSourceType];
        if (v183 != [v73 artworkSourceType]) {
          goto LABEL_1084;
        }
        unsigned int v184 = [v71 artworkUseType];
        if (v184 != [v73 artworkUseType]) {
          goto LABEL_1084;
        }
        v852 = v71;
        uint64_t v185 = [v71 shieldDataSource];
        uint64_t v186 = [v73 shieldDataSource];
        v838 = v73;
        v83 = (char *)(id)v185;
        v187 = (char *)(id)v186;
        v803 = v83;
        v810 = v187;
        if (!(v185 | v186))
        {
LABEL_291:
          uint64_t v199 = [v852 iconDataSource:v711];
          uint64_t v200 = [v838 iconDataSource];
          v201 = (char *)(id)v199;
          v202 = (char *)(id)v200;
          v73 = v202;
          if (v199 | v200)
          {
            if (v201) {
              BOOL v203 = v200 == 0;
            }
            else {
              BOOL v203 = 0;
            }
            char v204 = v203;
            if (v202) {
              BOOL v205 = v199 == 0;
            }
            else {
              BOOL v205 = 0;
            }
            if (v205
              || (v204 & 1) != 0
              || (unsigned int v206 = [v201 iconType],
                  v206 != [v73 iconType])
              || (unsigned int v207 = [v201 cartoID], v207 != objc_msgSend(v73, "cartoID"))
              || (unsigned int v208 = [v201 defaultTransitType],
                  v208 != [v73 defaultTransitType])
              || (unsigned int v209 = [v201 iconAttributeKey],
                  v209 != [v73 iconAttributeKey]))
            {
              id v214 = v201;
              v219 = v73;
              goto LABEL_1139;
            }
            unsigned int v210 = [v201 iconAttributeValue];
            unsigned int v211 = [v73 iconAttributeValue];

            if (v210 != v211) {
              goto LABEL_1140;
            }
          }
          uint64_t v212 = [v852 iconFallbackShieldDataSource];
          uint64_t v213 = [v838 iconFallbackShieldDataSource];
          id v214 = (id)v212;
          v215 = (char *)(id)v213;
          v760 = v214;
          v815 = v215;
          v770 = v201;
          v779 = v73;
          if (!(v212 | v213)) {
            goto LABEL_335;
          }
          if (v214) {
            BOOL v216 = v213 == 0;
          }
          else {
            BOOL v216 = 0;
          }
          int v217 = v216;
          if (v215) {
            BOOL v218 = v212 == 0;
          }
          else {
            BOOL v218 = 0;
          }
          v219 = v215;
          if (v218 || v217 || (id v220 = [v214 shieldType], v220 != objc_msgSend(v219, "shieldType")))
          {

            v710 = v219;
          }
          else
          {
            v221 = [v214 shieldText];
            if (!v221)
            {
              v757 = [v219 shieldText];
              if (!v757)
              {
                v757 = 0;
                int v222 = 0;
                goto LABEL_325;
              }
            }
            v73 = [v214 shieldText];
            id v220 = [v219 shieldText];
            if ([v73 isEqualToString:v220])
            {
              int v222 = 1;
LABEL_325:
              v223 = [v214 shieldColorString];
              if (v223
                || ([v815 shieldColorString], (v26 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
              {
                uint64_t v224 = v34;
                v225 = [v214 shieldColorString];
                v226 = [v815 shieldColorString];
                unsigned __int8 v227 = [v225 isEqualToString:v226];

                if (v223)
                {

                  uint64_t v34 = v224;
                  if (!v222)
                  {
LABEL_330:
                    v26 = v848;
                    v73 = v779;
                    if (v221)
                    {
                      v228 = v760;

                      v219 = v815;
                      v201 = v770;
                      uint64_t v7 = v775;
                      if ((v227 & 1) == 0) {
                        goto LABEL_1134;
                      }
LABEL_335:
                      v229 = v852;
                      uint64_t v230 = [v852 textDataSource];
                      v231 = v838;
                      uint64_t v232 = [v838 textDataSource];
                      id v233 = (id)v230;
                      v234 = (char *)(id)v232;
                      id v755 = v233;
                      v757 = v234;
                      if (!(v230 | v232))
                      {
LABEL_336:
                        unsigned int v235 = [v229 hasRoutingIncidentBadge];
                        if (v235 != [v231 hasRoutingIncidentBadge])
                        {
LABEL_337:
                          unsigned __int8 v236 = 0;
                          unint64_t v35 = v798;
                          uint64_t v179 = v822;
                          goto LABEL_359;
                        }
                        v245 = [v229 accessibilityText];
                        if (v245
                          || ([v231 accessibilityText],
                              (id v754 = (id)objc_claimAutoreleasedReturnValue()) != 0))
                        {
                          v246 = [v229 accessibilityText];
                          v247 = [v231 accessibilityText];
                          unsigned __int8 v236 = [v246 isEqualToString:v247];

                          v231 = v838;
                          unint64_t v35 = v798;
                          uint64_t v179 = v822;
                          if (!v245) {
                            v245 = v754;
                          }
                        }
                        else
                        {
                          HIDWORD(v754) = 0;
                          unsigned __int8 v236 = 1;
                          unint64_t v35 = v798;
                          uint64_t v179 = v822;
                          v245 = 0;
                        }
LABEL_358:

LABEL_359:
                        swift_unknownObjectRelease();

                        swift_unknownObjectRelease();
                        if ((v236 & 1) == 0) {
                          goto LABEL_1132;
                        }
                        goto LABEL_360;
                      }
                      if (v233) {
                        BOOL v237 = v232 == 0;
                      }
                      else {
                        BOOL v237 = 0;
                      }
                      int v238 = v237;
                      if (v234) {
                        BOOL v239 = v230 == 0;
                      }
                      else {
                        BOOL v239 = 0;
                      }
                      v240 = v234;
                      if (v239 || v238)
                      {

                        unsigned __int8 v236 = 0;
                        v245 = v240;
                      }
                      else
                      {
                        uint64_t v241 = [v233 text];
                        uint64_t v242 = [v240 text];
                        id v754 = (id)v241;
                        id v243 = (id)v242;
                        v244 = v243;
                        if (!(v241 | v242))
                        {

                          v231 = v838;
                          v229 = v852;
                          goto LABEL_336;
                        }
                        if (v754) {
                          BOOL v401 = v242 == 0;
                        }
                        else {
                          BOOL v401 = 0;
                        }
                        char v402 = v401;
                        if (v243) {
                          BOOL v403 = v241 == 0;
                        }
                        else {
                          BOOL v403 = 0;
                        }
                        if (!v403 && (v402 & 1) == 0)
                        {
                          uint64_t v404 = [v754 formatStrings];
                          [v244 formatStrings];
                          uint64_t v406 = v405 = v244;
                          id v407 = (id)v404;
                          id v408 = (id)v406;
                          v409 = &stru_1012E1218;
                          id v742 = v405;
                          if (!(v404 | v406))
                          {
                            v737 = v407;
                            v720 = v408;

                            v410 = v405;
                            goto LABEL_626;
                          }
                          if (v407) {
                            BOOL v453 = v406 == 0;
                          }
                          else {
                            BOOL v453 = 0;
                          }
                          char v454 = v453;
                          if (v408) {
                            BOOL v455 = v404 == 0;
                          }
                          else {
                            BOOL v455 = 0;
                          }
                          if (!v455 && (v454 & 1) == 0)
                          {
                            id v456 = [v407 count];
                            if (v456 == [v408 count])
                            {
                              long long v861 = 0u;
                              long long v862 = 0u;
                              long long v859 = 0u;
                              long long v860 = 0u;
                              v737 = v407;
                              id obje = v407;
                              id v457 = [obje countByEnumeratingWithState:&v859 objects:v858 count:16];
                              if (v457)
                              {
                                id v458 = v457;
                                uint64_t v459 = 0;
                                uint64_t v460 = *(void *)v860;
                                while (2)
                                {
                                  for (m = 0; m != v458; m = (char *)m + 1)
                                  {
                                    if (*(void *)v860 != v460) {
                                      objc_enumerationMutation(obje);
                                    }
                                    v462 = *(NSString **)(*((void *)&v859 + 1) + 8 * (void)m);
                                    v463 = v408;
                                    v464 = [v408 objectAtIndexedSubscript:(char *)m + v459];
                                    LODWORD(v462) = sub_10029BF80(v464, v462, (NSString *)v464);

                                    if (!v462)
                                    {
                                      id v465 = v463;

                                      v26 = v848;
                                      v231 = v838;
                                      id v407 = v737;
                                      goto LABEL_713;
                                    }
                                    id v408 = v463;
                                  }
                                  id v458 = [obje countByEnumeratingWithState:&v859 objects:v858 count:16];
                                  v459 += (uint64_t)m;
                                  if (v458) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              v720 = v408;

                              v26 = v848;
                              v410 = v405;
LABEL_626:
                              uint64_t v411 = [v754 separators];
                              uint64_t v412 = [v410 separators];
                              id v413 = (id)v411;
                              id v414 = (id)v412;
                              v415 = &stru_1012E1238;
                              v231 = v838;
                              id objd = v414;
                              if (v411 | v412)
                              {
                                if (v413) {
                                  BOOL v466 = v412 == 0;
                                }
                                else {
                                  BOOL v466 = 0;
                                }
                                char v467 = v466;
                                if (v414) {
                                  BOOL v468 = v411 == 0;
                                }
                                else {
                                  BOOL v468 = 0;
                                }
                                uint64_t v179 = v822;
                                if (v468
                                  || (v467 & 1) != 0
                                  || (id v469 = [v413 count], v469 != objc_msgSend(objd, "count")))
                                {

                                  v479 = v413;
                                  unint64_t v35 = v798;
                                  goto LABEL_777;
                                }
                                long long v861 = 0u;
                                long long v862 = 0u;
                                long long v859 = 0u;
                                long long v860 = 0u;
                                v732 = v413;
                                id v470 = v413;
                                id v471 = [v470 countByEnumeratingWithState:&v859 objects:v858 count:16];
                                if (v471)
                                {
                                  id v472 = v471;
                                  uint64_t v473 = 0;
                                  uint64_t v474 = *(void *)v860;
                                  while (2)
                                  {
                                    for (n = 0; n != v472; n = (char *)n + 1)
                                    {
                                      if (*(void *)v860 != v474) {
                                        objc_enumerationMutation(v470);
                                      }
                                      v476 = *(NSString **)(*((void *)&v859 + 1) + 8 * (void)n);
                                      v477 = [objd objectAtIndexedSubscript:(char *)n + v473];
                                      LODWORD(v476) = sub_10029BF80(v477, v476, (NSString *)v477);

                                      if (!v476)
                                      {

                                        v26 = v848;
LABEL_775:
                                        unint64_t v35 = v798;
                                        goto LABEL_776;
                                      }
                                    }
                                    id v472 = [v470 countByEnumeratingWithState:&v859 objects:v858 count:16];
                                    v473 += (uint64_t)n;
                                    if (v472) {
                                      continue;
                                    }
                                    break;
                                  }
                                }

                                v26 = v848;
                              }
                              else
                              {
                                v732 = v413;
                              }
                              uint64_t v416 = [v754 formatTokens];
                              uint64_t v417 = [v742 formatTokens];
                              id v418 = (id)v416;
                              id v419 = (id)v417;
                              v420 = &stru_1012E1278;
                              unint64_t v35 = v798;
                              if (!(v416 | v417))
                              {

                                goto LABEL_630;
                              }
                              if (v418) {
                                BOOL v480 = v417 == 0;
                              }
                              else {
                                BOOL v480 = 0;
                              }
                              char v481 = v480;
                              if (v419) {
                                BOOL v482 = v416 == 0;
                              }
                              else {
                                BOOL v482 = 0;
                              }
                              if (!v482 && (v481 & 1) == 0)
                              {
                                id v483 = [v418 count];
                                if (v483 == [v419 count])
                                {
                                  uint64_t v484 = v34;
                                  long long v861 = 0u;
                                  long long v862 = 0u;
                                  long long v859 = 0u;
                                  long long v860 = 0u;
                                  id v485 = v418;
                                  id v486 = [v485 countByEnumeratingWithState:&v859 objects:v858 count:16];
                                  if (v486)
                                  {
                                    id v487 = v486;
                                    uint64_t v488 = 0;
                                    uint64_t v489 = *(void *)v860;
                                    while (2)
                                    {
                                      for (iuint64_t i = 0; ii != v487; iuint64_t i = (char *)ii + 1)
                                      {
                                        if (*(void *)v860 != v489) {
                                          objc_enumerationMutation(v485);
                                        }
                                        v491 = *(GEOServerFormatToken **)(*((void *)&v859 + 1) + 8 * (void)ii);
                                        v492 = [v419 objectAtIndexedSubscript:(char *)ii + v488];
                                        LODWORD(v491) = sub_10029C004(v492, v491, (GEOServerFormatToken *)v492);

                                        if (!v491)
                                        {

                                          uint64_t v7 = v775;
                                          v26 = v848;
                                          uint64_t v34 = v484;
                                          goto LABEL_775;
                                        }
                                      }
                                      id v487 = [v485 countByEnumeratingWithState:&v859 objects:v858 count:16];
                                      v488 += (uint64_t)ii;
                                      if (v487) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }

                                  uint64_t v34 = v484;
LABEL_630:
                                  uint64_t v421 = [v754 alternativeString];
                                  uint64_t v422 = [v742 alternativeString];
                                  uint64_t v423 = v421 | v422;
                                  id v424 = (id)v421;
                                  id v425 = (id)v422;
                                  if (v423) {
                                    unsigned __int8 v718 = [v424 isEqual:v425];
                                  }
                                  else {
                                    unsigned __int8 v718 = 1;
                                  }

                                  uint64_t v7 = v775;
                                  v26 = v848;
                                  v231 = v838;
                                  v229 = v852;
                                  if ((v718 & 1) == 0) {
                                    goto LABEL_337;
                                  }
                                  goto LABEL_336;
                                }
                              }

                              uint64_t v7 = v775;
LABEL_776:
                              v231 = v838;
                              uint64_t v179 = v822;
                              v479 = v732;
LABEL_777:

                              unsigned __int8 v236 = 0;
                              v245 = objd;
                              goto LABEL_358;
                            }
                          }

                          id v465 = v408;
                          v231 = v838;
LABEL_713:

                          unsigned __int8 v236 = 0;
                          v245 = v465;
                          unint64_t v35 = v798;
LABEL_357:
                          uint64_t v179 = v822;
                          goto LABEL_358;
                        }

                        unsigned __int8 v236 = 0;
                        v245 = v244;
                      }
                      unint64_t v35 = v798;
                      v231 = v838;
                      goto LABEL_357;
                    }
                    v228 = v760;

                    v219 = v815;
                    v201 = v770;
                    uint64_t v7 = v775;
                    if (v227) {
                      goto LABEL_335;
                    }
LABEL_1134:
                    id v214 = v228;
LABEL_1139:

LABEL_1140:
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();

                    v71 = v201;
                    goto LABEL_1131;
                  }
LABEL_329:

                  goto LABEL_330;
                }
                uint64_t v34 = v224;
              }
              else
              {
                unsigned __int8 v227 = 1;
              }

              if ((v222 & 1) == 0) {
                goto LABEL_330;
              }
              goto LABEL_329;
            }

            v710 = v757;
            if (v221) {
              v710 = (char *)v221;
            }
            uint64_t v7 = v775;
            v73 = v779;
          }

          goto LABEL_1139;
        }
        if (v83) {
          BOOL v188 = v186 == 0;
        }
        else {
          BOOL v188 = 0;
        }
        int v189 = v188;
        if (v187) {
          BOOL v190 = v185 == 0;
        }
        else {
          BOOL v190 = 0;
        }
        v88 = v187;
        if (v190) {
          goto LABEL_1087;
        }
        if (v189) {
          goto LABEL_1087;
        }
        id v89 = [v83 shieldType];
        if (v89 != [v88 shieldType]) {
          goto LABEL_1087;
        }
        v90 = [v83 shieldText];
        if (!v90)
        {
          v815 = [v88 shieldText];
          if (!v815)
          {
            v815 = 0;
            int v191 = 0;
            goto LABEL_282;
          }
        }
        [v83 shieldText:v711];
        v73 = (char *)objc_claimAutoreleasedReturnValue();
        id v89 = [v88 shieldText];
        if ([v73 isEqualToString:v89])
        {
          int v191 = 1;
LABEL_282:
          [v83 shieldColorString:v711];
          v193 = v192 = v83;
          if (v193
            || ([v88 shieldColorString], (v779 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
          {
            v194 = v90;
            uint64_t v195 = v34;
            v196 = [v192 shieldColorString];
            v197 = [v88 shieldColorString];
            unsigned __int8 v198 = [v196 isEqualToString:v197];

            if (v193)
            {

              uint64_t v34 = v195;
              v90 = v194;
              if (!v191) {
                goto LABEL_287;
              }
              goto LABEL_286;
            }
            uint64_t v34 = v195;
            v90 = v194;
            v388 = v779;
          }
          else
          {
            v388 = 0;
            unsigned __int8 v198 = 1;
          }

          if ((v191 & 1) == 0)
          {
LABEL_287:
            v26 = v848;
            v71 = v803;

            v73 = v810;
            if (v90)
            {
            }
            else
            {
            }
            uint64_t v7 = v775;
            if ((v198 & 1) == 0) {
              goto LABEL_1099;
            }
            goto LABEL_291;
          }
LABEL_286:

          goto LABEL_287;
        }
LABEL_1094:

        if (v90) {
          v88 = (char *)v90;
        }
        else {
          v88 = v815;
        }
        uint64_t v7 = v775;
LABEL_1098:

        v71 = v803;
        v73 = v810;
LABEL_1099:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        goto LABEL_1131;
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v179 = v822;
LABEL_360:
      if (v179 == 2)
      {
LABEL_237:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v29 = v857;
        goto LABEL_244;
      }
      unint64_t v736 = v35 + 32;
      v741 = (void *)(v35 & 0xFFFFFFFFFFFFFF8);
      unint64_t v248 = 2;
      while (1)
      {
        if (v833)
        {
          uint64_t v250 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v248 >= v741[2]) {
            goto LABEL_1154;
          }
          uint64_t v250 = *(void *)(v736 + 8 * v248);
          swift_unknownObjectRetain();
        }
        unint64_t v251 = v248 + 1;
        if (__OFADD__(v248, 1)) {
          goto LABEL_1151;
        }
        if (v248 == v827) {
          break;
        }
        if (v817)
        {
          uint64_t v252 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v248 >= *(void *)((v845 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_1155;
          }
          uint64_t v252 = *(void *)(v845 + 32 + 8 * v248);
          swift_unknownObjectRetain();
        }
        v71 = (char *)(id)v250;
        v253 = (char *)(id)v252;
        v254 = v253;
        if (!(v250 | v252))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v249 = v822;
          goto LABEL_363;
        }
        if (v71) {
          BOOL v255 = v252 == 0;
        }
        else {
          BOOL v255 = 0;
        }
        char v256 = v255;
        if (v253) {
          BOOL v257 = v250 == 0;
        }
        else {
          BOOL v257 = 0;
        }
        if (v257
          || (v256 & 1) != 0
          || (unsigned int v258 = [v71 artworkSourceType],
              v258 != [v254 artworkSourceType])
          || (unsigned int v259 = [v71 artworkUseType],
              v259 != [v254 artworkUseType]))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v73 = v254;
          goto LABEL_1131;
        }
        unint64_t v761 = v251;
        v853 = v71;
        uint64_t v260 = [v71 shieldDataSource];
        uint64_t v261 = [v254 shieldDataSource];
        v262 = (char *)(id)v260;
        v263 = (char *)(id)v261;
        v264 = v254;
        v839 = v254;
        v811 = v263;
        v815 = v262;
        if (v260 | v261)
        {
          if (v262) {
            BOOL v265 = v261 == 0;
          }
          else {
            BOOL v265 = 0;
          }
          int v266 = v265;
          if (v263) {
            BOOL v267 = v260 == 0;
          }
          else {
            BOOL v267 = 0;
          }
          v268 = v263;
          if (v267 || v266 || (id v269 = [v262 shieldType], v269 != objc_msgSend(v268, "shieldType")))
          {

LABEL_1116:
            v73 = v811;
            v277 = v815;
LABEL_1117:
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            v71 = v277;
LABEL_1131:

LABEL_1132:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v722;
LABEL_1133:
            a1 = v721;
LABEL_4:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_5:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
LABEL_6:
            uint64_t v4 = v723;
LABEL_7:
            if (++v7 != v778) {
              goto LABEL_8;
            }
            goto LABEL_1142;
          }
          uint64_t v270 = [v262 shieldText];
          if (v270 || ([v268 shieldText], (v779 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
          {
            [v262 shieldText:v711];
            v262 = (char *)objc_claimAutoreleasedReturnValue();
            id v269 = [v268 shieldText];
            if (([v262 isEqualToString:v269] & 1) == 0)
            {

              if (v270) {
                v268 = (void *)v270;
              }
              else {
                v268 = v779;
              }
              v264 = v254;
              goto LABEL_1116;
            }
            int v804 = 1;
          }
          else
          {
            v779 = 0;
            int v804 = 0;
          }
          v271 = [v815 shieldColorString:v711];
          if (v271
            || ([v268 shieldColorString], (v26 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
          {
            uint64_t v272 = v34;
            v273 = [v815 shieldColorString];
            v274 = [v268 shieldColorString];
            unsigned __int8 v275 = [v273 isEqualToString:v274];

            if (v271)
            {

              uint64_t v34 = v272;
              v276 = (void *)v270;
              if (v804) {
                goto LABEL_409;
              }
              goto LABEL_410;
            }
            uint64_t v34 = v272;
          }
          else
          {
            unsigned __int8 v275 = 1;
          }
          v276 = (void *)v270;

          if (v804)
          {
LABEL_409:
          }
LABEL_410:
          v26 = v848;
          v264 = v839;
          v277 = v815;
          if (v276)
          {

            v73 = v811;
            uint64_t v7 = v775;
            if ((v275 & 1) == 0) {
              goto LABEL_1117;
            }
          }
          else
          {

            v73 = v811;
            uint64_t v7 = v775;
            if ((v275 & 1) == 0) {
              goto LABEL_1117;
            }
          }
        }
        uint64_t v278 = [v853 iconDataSource:v711];
        v279 = v264;
        uint64_t v280 = [v264 iconDataSource];
        v71 = (char *)(id)v278;
        v805 = (char *)(id)v280;
        if (v278 | v280)
        {
          if (v71) {
            BOOL v281 = v280 == 0;
          }
          else {
            BOOL v281 = 0;
          }
          char v282 = v281;
          if (v805) {
            BOOL v283 = v278 == 0;
          }
          else {
            BOOL v283 = 0;
          }
          if (v283
            || (v282 & 1) != 0
            || (unsigned int v284 = [v71 iconType], v284 != objc_msgSend(v805, "iconType"))
            || (unsigned int v285 = [v71 cartoID], v285 != objc_msgSend(v805, "cartoID"))
            || (unsigned int v286 = [v71 defaultTransitType],
                v286 != [v805 defaultTransitType])
            || (unsigned int v287 = [v71 iconAttributeKey],
                v287 != [v805 iconAttributeKey]))
          {
            v297 = v805;
            v292 = v71;
            goto LABEL_1129;
          }
          unsigned int v288 = [v71 iconAttributeValue];
          unsigned int v289 = [v805 iconAttributeValue];

          if (v288 != v289) {
            goto LABEL_1130;
          }
        }
        uint64_t v290 = [v853 iconFallbackShieldDataSource];
        uint64_t v291 = [v279 iconFallbackShieldDataSource];
        v292 = (char *)(id)v290;
        v293 = (char *)(id)v291;
        v771 = v292;
        v779 = v71;
        if (!(v290 | v291)) {
          goto LABEL_457;
        }
        if (v292) {
          BOOL v294 = v291 == 0;
        }
        else {
          BOOL v294 = 0;
        }
        int v295 = v294;
        if (v293) {
          BOOL v296 = v290 == 0;
        }
        else {
          BOOL v296 = 0;
        }
        v297 = v293;
        if (v296 || v295 || (id v298 = [v292 shieldType], v298 != objc_msgSend(v297, "shieldType")))
        {

          v709 = v297;
          goto LABEL_1128;
        }
        v299 = [v292 shieldText];
        if (v299 || ([v297 shieldText], (v757 = (char *)objc_claimAutoreleasedReturnValue()) != 0))
        {
          v279 = [v292 shieldText];
          id v298 = [v297 shieldText];
          if (([v279 isEqualToString:v298] & 1) == 0)
          {

            v709 = v757;
            if (v299) {
              v709 = v299;
            }
            v279 = v839;
LABEL_1128:

LABEL_1129:
LABEL_1130:
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            v73 = v805;
            goto LABEL_1131;
          }
          int v300 = 1;
        }
        else
        {
          v757 = 0;
          int v300 = 0;
        }
        v301 = [v292 shieldColorString];
        if (v301 || ([v297 shieldColorString], (id v755 = (id)objc_claimAutoreleasedReturnValue()) != 0))
        {
          uint64_t v302 = v34;
          uint64_t v303 = [v292 shieldColorString];
          v304 = v297;
          v305 = (void *)v303;
          v306 = v304;
          v307 = [v304 shieldColorString];
          unsigned __int8 v308 = [v305 isEqualToString:v307];

          if (v301)
          {

            uint64_t v34 = v302;
            v71 = v779;
            v297 = v306;
            if (!v300) {
              goto LABEL_453;
            }
LABEL_452:

            goto LABEL_453;
          }
          uint64_t v34 = v302;
          v297 = v306;
          v329 = v755;
        }
        else
        {
          v329 = 0;
          unsigned __int8 v308 = 1;
        }

        v71 = v779;
        if (v300) {
          goto LABEL_452;
        }
LABEL_453:
        v26 = v848;
        v279 = v839;

        if (v299)
        {
        }
        else
        {
        }
        uint64_t v7 = v775;
        v293 = v297;
        if ((v308 & 1) == 0)
        {
          v292 = v771;
          goto LABEL_1129;
        }
LABEL_457:
        id v754 = v293;
        v309 = v853;
        uint64_t v310 = [v853 textDataSource];
        uint64_t v311 = [v279 textDataSource];
        id objb = (id)(v310 | v311);
        v312 = (char *)v279;
        id v313 = (id)v310;
        v314 = (char *)(id)v311;
        id v755 = v313;
        v757 = v314;
        if (!(v310 | v311)) {
          goto LABEL_471;
        }
        if (v313) {
          BOOL v315 = v311 == 0;
        }
        else {
          BOOL v315 = 0;
        }
        int v316 = v315;
        if (v314) {
          BOOL v317 = v310 == 0;
        }
        else {
          BOOL v317 = 0;
        }
        v318 = v314;
        if (v317 || v316)
        {

          unsigned int v325 = 0;
          v326 = v318;
          goto LABEL_508;
        }
        uint64_t v319 = [v313 text];
        uint64_t v320 = [v318 text];
        id objb = (id)v319;
        id v321 = (id)v320;
        if (!(v319 | v320))
        {
          v322 = v321;

          v312 = v839;
          v309 = v853;
LABEL_471:
          unsigned int v323 = [v309 hasRoutingIncidentBadge:v711];
          v324 = v312;
          if (v323 != [v312 hasRoutingIncidentBadge])
          {
            unsigned int v325 = 0;
            uint64_t v249 = v822;
            goto LABEL_510;
          }
          v326 = [v309 accessibilityText];
          if (v326
            || ([v312 accessibilityText], (id objb = (id)objc_claimAutoreleasedReturnValue()) != 0))
          {
            v327 = [v309 accessibilityText];
            v328 = [v312 accessibilityText];
            unsigned int v325 = [v327 isEqualToString:v328];

            v324 = v839;
            uint64_t v249 = v822;
            if (!v326) {
              v326 = objb;
            }
          }
          else
          {
            unsigned int v325 = 1;
            uint64_t v249 = v822;
            v326 = 0;
          }
          goto LABEL_509;
        }
        if (objb) {
          BOOL v330 = v320 == 0;
        }
        else {
          BOOL v330 = 0;
        }
        char v331 = v330;
        v717 = v321;
        if (v321) {
          BOOL v332 = v319 == 0;
        }
        else {
          BOOL v332 = 0;
        }
        if (v332 || (v331 & 1) != 0)
        {

          v326 = v717;
          unsigned int v325 = 0;
LABEL_508:
          v324 = v839;
          uint64_t v249 = v822;
LABEL_509:

          goto LABEL_510;
        }
        uint64_t v333 = [objb formatStrings];
        uint64_t v334 = [v717 formatStrings];
        id v713 = (id)v333;
        id v335 = (id)v334;
        v336 = &stru_1012E1218;
        uint64_t v249 = v822;
        if (v333 | v334)
        {
          if (v713) {
            BOOL v351 = v334 == 0;
          }
          else {
            BOOL v351 = 0;
          }
          char v352 = v351;
          if (v335) {
            BOOL v353 = v333 == 0;
          }
          else {
            BOOL v353 = 0;
          }
          v326 = v335;
          if (v353 || (v352 & 1) != 0 || (id v354 = [v713 count], v354 != objc_msgSend(v335, "count")))
          {

            v324 = v839;
LABEL_535:

            unsigned int v325 = 0;
            goto LABEL_509;
          }
          v715 = v335;
          long long v861 = 0u;
          long long v862 = 0u;
          long long v859 = 0u;
          long long v860 = 0u;
          id v355 = v713;
          id v356 = [v355 countByEnumeratingWithState:&v859 objects:v858 count:16];
          if (v356)
          {
            id v357 = v356;
            uint64_t v358 = 0;
            uint64_t v359 = *(void *)v860;
            while (2)
            {
              for (jj = 0; jj != v357; jj = (char *)jj + 1)
              {
                if (*(void *)v860 != v359) {
                  objc_enumerationMutation(v355);
                }
                v361 = *(NSString **)(*((void *)&v859 + 1) + 8 * (void)jj);
                v362 = [v715 objectAtIndexedSubscript:(char *)jj + v358];
                LODWORD(v361) = sub_10029BF80(v362, v361, (NSString *)v362);

                if (!v361)
                {
                  v326 = v715;

                  v26 = v848;
                  v324 = v839;
                  uint64_t v249 = v822;
                  goto LABEL_535;
                }
              }
              id v357 = [v355 countByEnumeratingWithState:&v859 objects:v858 count:16];
              v358 += (uint64_t)jj;
              if (v357) {
                continue;
              }
              break;
            }
          }

          v26 = v848;
          uint64_t v249 = v822;
        }
        else
        {
          v715 = v335;
        }
        uint64_t v337 = [objb separators];
        uint64_t v338 = [v717 separators];
        uint64_t v711 = v337 | v338;
        id v712 = (id)v337;
        id v339 = (id)v338;
        v340 = &stru_1012E1238;
        v714 = v339;
        if (v337 | v338)
        {
          if (v712) {
            BOOL v363 = v338 == 0;
          }
          else {
            BOOL v363 = 0;
          }
          char v364 = v363;
          if (v339) {
            BOOL v365 = v337 == 0;
          }
          else {
            BOOL v365 = 0;
          }
          v366 = v712;
          if (v365 || (v364 & 1) != 0 || (id v367 = [v712 count], v367 != objc_msgSend(v339, "count")))
          {

            v324 = v839;
LABEL_588:

            unsigned int v325 = 0;
            v326 = v714;
            goto LABEL_509;
          }
          long long v861 = 0u;
          long long v862 = 0u;
          long long v859 = 0u;
          long long v860 = 0u;
          id v368 = v712;
          id v369 = [v368 countByEnumeratingWithState:&v859 objects:v858 count:16];
          if (v369)
          {
            id v370 = v369;
            uint64_t v371 = 0;
            uint64_t v372 = *(void *)v860;
            while (2)
            {
              for (kk = 0; kk != v370; kk = (char *)kk + 1)
              {
                if (*(void *)v860 != v372) {
                  objc_enumerationMutation(v368);
                }
                v374 = *(NSString **)(*((void *)&v859 + 1) + 8 * (void)kk);
                v375 = [v714 objectAtIndexedSubscript:(char *)kk + v371];
                LODWORD(v374) = sub_10029BF80(v375, v374, (NSString *)v375);

                if (!v374)
                {

LABEL_586:
                  v26 = v848;
                  goto LABEL_587;
                }
              }
              id v370 = [v368 countByEnumeratingWithState:&v859 objects:v858 count:16];
              v371 += (uint64_t)kk;
              if (v370) {
                continue;
              }
              break;
            }
          }

          v26 = v848;
        }
        else
        {
        }
        uint64_t v341 = [objb formatTokens];
        uint64_t v342 = [v717 formatTokens];
        id v343 = (id)v341;
        id v344 = (id)v342;
        v345 = &stru_1012E1278;
        if (v341 | v342)
        {
          if (v343) {
            BOOL v376 = v342 == 0;
          }
          else {
            BOOL v376 = 0;
          }
          char v377 = v376;
          if (v344) {
            BOOL v378 = v341 == 0;
          }
          else {
            BOOL v378 = 0;
          }
          if (v378 || (v377 & 1) != 0 || (id v379 = [v343 count], v379 != objc_msgSend(v344, "count")))
          {

            uint64_t v7 = v775;
LABEL_587:
            v324 = v839;
            uint64_t v249 = v822;
            v366 = v712;
            goto LABEL_588;
          }
          uint64_t v781 = v34;
          long long v861 = 0u;
          long long v862 = 0u;
          long long v859 = 0u;
          long long v860 = 0u;
          id v380 = v343;
          id v381 = [v380 countByEnumeratingWithState:&v859 objects:v858 count:16];
          if (v381)
          {
            id v382 = v381;
            uint64_t v383 = 0;
            uint64_t v384 = *(void *)v860;
            while (2)
            {
              for (mm = 0; mm != v382; mm = (char *)mm + 1)
              {
                if (*(void *)v860 != v384) {
                  objc_enumerationMutation(v380);
                }
                v386 = *(GEOServerFormatToken **)(*((void *)&v859 + 1) + 8 * (void)mm);
                v387 = [v344 objectAtIndexedSubscript:(char *)mm + v383];
                LODWORD(v386) = sub_10029C004(v387, v386, (GEOServerFormatToken *)v387);

                if (!v386)
                {

                  uint64_t v7 = v775;
                  uint64_t v34 = v781;
                  goto LABEL_586;
                }
              }
              id v382 = [v380 countByEnumeratingWithState:&v859 objects:v858 count:16];
              v383 += (uint64_t)mm;
              if (v382) {
                continue;
              }
              break;
            }
          }

          uint64_t v34 = v781;
        }
        else
        {
        }
        uint64_t v346 = [objb alternativeString];
        uint64_t v347 = [v717 alternativeString];
        uint64_t v348 = v346 | v347;
        id v349 = (id)v346;
        id v350 = (id)v347;
        if (v348) {
          LODWORD(v711) = [v349 isEqual:v350];
        }
        else {
          LODWORD(v711) = 1;
        }

        uint64_t v7 = v775;
        v26 = v848;
        v312 = v839;
        v309 = v853;
        if (v711) {
          goto LABEL_471;
        }
        unsigned int v325 = 0;
        v324 = v839;
        uint64_t v249 = v822;
LABEL_510:

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        unint64_t v251 = v761;
        if (!v325) {
          goto LABEL_1132;
        }
LABEL_363:
        unint64_t v248 = v251;
        if (v251 == v249) {
          goto LABEL_237;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      unint64_t v29 = v857;
LABEL_244:
      swift_bridgeObjectRelease();
      unint64_t v31 = v725 + 1;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v831 + 32;
      unint64_t v176 = v856;
    }
    while (v725 + 1 != v724);
LABEL_780:
    unint64_t v493 = v176 >> 62;
    if (v176 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v494 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v495 = v29 >> 62;
      if (v29 >> 62) {
        goto LABEL_793;
      }
LABEL_782:
      if (v494 == *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_783;
      }
LABEL_1079:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_1080:
      a1 = v721;
      a2 = v722;
      goto LABEL_6;
    }
    uint64_t v494 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v495 = v29 >> 62;
    if (!(v29 >> 62)) {
      goto LABEL_782;
    }
LABEL_793:
    swift_bridgeObjectRetain();
    uint64_t v502 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v494 != v502) {
      goto LABEL_1079;
    }
LABEL_783:
    unint64_t v496 = v856;
    unint64_t v497 = v857;
    if (!v493)
    {
      uint64_t v498 = *(void *)((v856 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v498) {
        goto LABEL_785;
      }
LABEL_791:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_886:
      uint64_t v13 = v776 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v726;
      if (v776 + 1 == v727)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_1142;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v496 = v856;
  uint64_t v498 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v498) {
    goto LABEL_791;
  }
LABEL_785:
  unint64_t v499 = v496 & 0xC000000000000001;
  if ((v496 & 0xC000000000000001) != 0)
  {
    uint64_t v500 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v501 = v857 & 0xFFFFFFFFFFFFFF8;
    if (v495) {
      goto LABEL_796;
    }
LABEL_788:
    uint64_t v854 = *(void *)(v501 + 16);
    if (!v854) {
      goto LABEL_885;
    }
LABEL_797:
    unint64_t v850 = v497 & 0xC000000000000001;
    if ((v497 & 0xC000000000000001) != 0)
    {
      uint64_t v504 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v497 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_1147;
      }
      uint64_t v504 = *(void *)(v497 + 32);
      swift_unknownObjectRetain();
    }
    id v505 = (id)v500;
    id v506 = (id)v504;
    v507 = v506;
    if (!(v500 | v504))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      unint64_t v508 = v856;
      goto LABEL_878;
    }
    if (v505) {
      BOOL v509 = v504 == 0;
    }
    else {
      BOOL v509 = 0;
    }
    char v510 = v509;
    if (v506) {
      BOOL v511 = v500 == 0;
    }
    else {
      BOOL v511 = 0;
    }
    if (v511) {
      goto LABEL_1082;
    }
    if (v510) {
      goto LABEL_1082;
    }
    id v512 = [v505 muid];
    if (v512 != [v507 muid]) {
      goto LABEL_1082;
    }
    unint64_t v840 = v499;
    uint64_t v513 = [v505 title];
    uint64_t v514 = [v507 title];
    id v515 = (id)v513;
    id v516 = (id)v514;
    if (v513 | v514)
    {
      unsigned int v517 = [v515 isEqual:v516];

      if (!v517) {
        goto LABEL_1122;
      }
    }
    uint64_t v518 = [v505 summary:v711];
    uint64_t v519 = [v507 summary];
    uint64_t v520 = v518 | v519;
    v521 = (char *)(id)v518;
    id v522 = (id)v519;
    if (v520)
    {
      unsigned int v523 = [v521 isEqual:v522];

      if (!v523) {
        goto LABEL_1121;
      }
    }
    id v846 = v516;
    v834 = v522;
    uint64_t v524 = [v505 fullDescription];
    uint64_t v525 = [v507 fullDescription];
    uint64_t v526 = v524 | v525;
    id v527 = (id)v524;
    id v528 = (id)v525;
    if (v526)
    {
      unsigned int v529 = [v527 isEqual:v528];

      if (!v529)
      {

        swift_unknownObjectRelease();
        id v505 = v515;
LABEL_1093:
        id v516 = v846;
        goto LABEL_1123;
      }
    }
    id v818 = v527;
    v828 = v528;
    uint64_t v530 = [v505 messageForRoutePlanning];
    uint64_t v531 = [v507 messageForRoutePlanning];
    id v532 = (id)v530;
    id v533 = (id)v531;
    v823 = v515;
    if (v530 | v531)
    {
      unsigned int v534 = [v532 isEqual:v533];

      if (!v534)
      {
        v547 = v532;
        LOBYTE(v532) = 0;
        unint64_t v508 = v856;
        v559 = v521;
        v560 = v818;
        goto LABEL_877;
      }
    }
    uint64_t v535 = [v505 messageForRouteStepping];
    uint64_t v536 = [v507 messageForRouteStepping];
    v815 = (char *)(id)v535;
    id v812 = (id)v536;
    if (v535 | v536)
    {
      unsigned int v537 = [v815 isEqual:v812];

      if (!v537)
      {
        v547 = v532;
        LOBYTE(v532) = 0;
        unint64_t v508 = v856;
        v559 = v521;
        v560 = v818;
LABEL_876:

LABEL_877:
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        unint64_t v499 = v840;
        if ((v532 & 1) == 0) {
          goto LABEL_1124;
        }
LABEL_878:
        if (v498 == 1)
        {
LABEL_879:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v7 = v775;
          goto LABEL_886;
        }
        if (v499)
        {
          uint64_t v573 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v508 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_1153;
          }
          uint64_t v573 = *(void *)(v508 + 40);
          swift_unknownObjectRetain();
        }
        uint64_t v7 = v775;
        if (v854 == 1) {
          goto LABEL_885;
        }
        if (v850)
        {
          uint64_t v574 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v857 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_1157;
          }
          uint64_t v574 = *(void *)(v857 + 40);
          swift_unknownObjectRetain();
        }
        id v505 = (id)v573;
        id v575 = (id)v574;
        v507 = v575;
        if (!(v573 | v574))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          unint64_t v576 = v856;
LABEL_948:
          if (v498 == 2) {
            goto LABEL_879;
          }
          uint64_t v795 = v576 & 0xFFFFFFFFFFFFFF8;
          uint64_t v797 = v498;
          unint64_t v791 = v576 + 32;
          unint64_t v631 = 2;
          while (1)
          {
            if (v499)
            {
              uint64_t v632 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v631 >= *(void *)(v795 + 16)) {
                goto LABEL_1150;
              }
              uint64_t v632 = *(void *)(v791 + 8 * v631);
              swift_unknownObjectRetain();
            }
            unint64_t v633 = v631 + 1;
            if (__OFADD__(v631, 1)) {
              goto LABEL_1148;
            }
            if (v631 == v854)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              uint64_t v7 = v775;
              goto LABEL_886;
            }
            if (v850)
            {
              uint64_t v634 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v631 >= *(void *)((v857 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_1152;
              }
              uint64_t v634 = *(void *)(v857 + 32 + 8 * v631);
              swift_unknownObjectRetain();
            }
            id v505 = (id)v632;
            id v635 = (id)v634;
            v507 = v635;
            if (!(v632 | v634))
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_952;
            }
            if (v505) {
              BOOL v636 = v634 == 0;
            }
            else {
              BOOL v636 = 0;
            }
            char v637 = v636;
            if (v635) {
              BOOL v638 = v632 == 0;
            }
            else {
              BOOL v638 = 0;
            }
            if (v638) {
              goto LABEL_1082;
            }
            if (v637) {
              goto LABEL_1082;
            }
            id v639 = [v505 muid];
            if (v639 != [v507 muid]) {
              goto LABEL_1082;
            }
            uint64_t v640 = [v505 title];
            uint64_t v641 = [v507 title];
            id v642 = (id)v640;
            id v846 = (id)v641;
            if (v640 | v641)
            {
              unsigned int v643 = [v642 isEqual:v846];

              if (!v643) {
                goto LABEL_1091;
              }
            }
            uint64_t v644 = [v505 summary:v711];
            uint64_t v645 = [v507 summary];
            uint64_t v646 = v644 | v645;
            id v647 = (id)v644;
            id v648 = (id)v645;
            if (v646)
            {
              unsigned int v649 = [v647 isEqual:v648];

              if (!v649)
              {

LABEL_1091:
                swift_unknownObjectRelease();

                id v505 = v642;
                goto LABEL_1093;
              }
            }
            v830 = v642;
            v836 = v648;
            uint64_t v650 = [v505 fullDescription];
            uint64_t v651 = [v507 fullDescription];
            uint64_t v652 = v650 | v651;
            id v653 = (id)v650;
            id v654 = (id)v651;
            if (v652)
            {
              unsigned int v655 = [v653 isEqual:v654];

              if (!v655)
              {

                swift_unknownObjectRelease();
                id v505 = v830;
                goto LABEL_1093;
              }
            }
            v820 = v653;
            v825 = v654;
            uint64_t v656 = [v505 messageForRoutePlanning];
            uint64_t v657 = [v507 messageForRoutePlanning];
            id v658 = (id)v656;
            id v659 = (id)v657;
            if (v656 | v657)
            {
              unsigned int v660 = [v658 isEqual:v659];

              if (!v660)
              {
                v673 = v658;
                BOOL v682 = 0;
                v683 = v647;
                uint64_t v498 = v797;
                goto LABEL_1042;
              }
            }
            uint64_t v661 = [v505 messageForRouteStepping];
            uint64_t v662 = [v507 messageForRouteStepping];
            v815 = (char *)(id)v661;
            id v814 = (id)v662;
            if (!(v661 | v662)) {
              break;
            }
            unsigned int v663 = [v815 isEqual:v814];

            if (v663) {
              break;
            }
            v673 = v658;
            BOOL v682 = 0;
            v683 = v647;
            uint64_t v498 = v797;
LABEL_1041:

LABEL_1042:
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            if (!v682) {
              goto LABEL_1124;
            }
LABEL_952:
            unint64_t v631 = v633;
            if (v633 == v498) {
              goto LABEL_879;
            }
          }
          uint64_t v664 = [v505 messageForNonRoutable];
          uint64_t v665 = [v507 messageForNonRoutable];
          id v808 = (id)v664;
          id v801 = (id)v665;
          if (v664 | v665)
          {
            unsigned int v666 = [v808 isEqual:v801];

            if (!v666)
            {
              v673 = v658;
              BOOL v682 = 0;
              v683 = v647;
              uint64_t v498 = v797;
LABEL_1040:

              goto LABEL_1041;
            }
          }
          uint64_t v667 = [v505 startDate];
          uint64_t v668 = [v507 startDate];
          id v784 = (id)v667;
          v779 = (char *)(id)v668;
          if (v667 | v668)
          {
            unsigned int v669 = [v784 isEqual:v779];

            if (!v669)
            {
              v673 = v658;
              BOOL v682 = 0;
              v683 = v647;
              uint64_t v498 = v797;
LABEL_1039:

              goto LABEL_1040;
            }
          }
          uint64_t v670 = [v505 endDate];
          uint64_t v671 = [v507 endDate];
          id v774 = (id)v670;
          id v767 = (id)v671;
          if (v670 | v671
            && (unsigned int v672 = [v774 isEqual:v767], v774, v767, !v672))
          {
            v673 = v658;
          }
          else
          {
            v673 = v658;
            unsigned int v674 = [v505 iconType];
            if (v674 == [v507 iconType])
            {
              uint64_t v675 = [v505 creationDate];
              uint64_t v676 = [v507 creationDate];
              id v764 = (id)v675;
              v757 = (char *)(id)v676;
              if (v675 | v676)
              {
                unsigned int v677 = [v764 isEqual:v757];

                if (!v677)
                {
                  BOOL v682 = 0;
                  v683 = v647;
LABEL_1037:
                  uint64_t v498 = v797;

                  goto LABEL_1038;
                }
              }
              uint64_t v678 = [v505 lastUpdated];
              uint64_t v679 = [v507 lastUpdated];
              id v755 = (id)v678;
              id v754 = (id)v679;
              if (v678 | v679
                && (unsigned int v680 = [v755 isEqual:v754],
                    v755,
                    v754,
                    !v680)
                || (unsigned int v681 = [v505 isBlockingIncident],
                    v681 != [v507 isBlockingIncident]))
              {
                BOOL v682 = 0;
                v683 = v647;
LABEL_1036:

                goto LABEL_1037;
              }
              uint64_t v684 = [v505 affectedEntities];
              uint64_t v685 = [v507 affectedEntities];
              uint64_t v686 = v684 | v685;
              uint64_t v842 = v684;
              id v743 = (id)v684;
              id v687 = (id)v685;
              v688 = &stru_1012E12B8;
              id objh = v687;
              if (v686)
              {
                BOOL v682 = 0;
                if (v743) {
                  BOOL v689 = v685 == 0;
                }
                else {
                  BOOL v689 = 0;
                }
                char v690 = v689;
                if (v687) {
                  BOOL v691 = v842 == 0;
                }
                else {
                  BOOL v691 = 0;
                }
                if (!v691)
                {
                  v683 = v647;
                  if ((v690 & 1) == 0)
                  {
                    id v692 = [v743 count];
                    if (v692 == [objh count])
                    {
                      long long v861 = 0u;
                      long long v862 = 0u;
                      long long v859 = 0u;
                      long long v860 = 0u;
                      id v729 = v743;
                      id v693 = [v729 countByEnumeratingWithState:&v859 objects:v858 count:16];
                      if (v693)
                      {
                        id v694 = v693;
                        unint64_t v843 = v499;
                        uint64_t v733 = *(void *)v860;
                        uint64_t v738 = 0;
                        v695 = objh;
LABEL_1022:
                        v696 = 0;
                        while (1)
                        {
                          if (*(void *)v860 != v733) {
                            objc_enumerationMutation(v729);
                          }
                          v697 = *(GEOTransitIncidentEntity **)(*((void *)&v859 + 1) + 8 * (void)v696);
                          v698 = [v695 objectAtIndexedSubscript:(char *)v696 + v738];
                          BOOL v682 = sub_10029C058(v698, v697, (GEOTransitIncidentEntity *)v698);

                          if (!v682) {
                            break;
                          }
                          v696 = (char *)v696 + 1;
                          v695 = objh;
                          if (v694 == v696)
                          {
                            id v694 = [v729 countByEnumeratingWithState:&v859 objects:v858 count:16];
                            v738 += (uint64_t)v696;
                            if (v694) {
                              goto LABEL_1022;
                            }
                            BOOL v682 = 1;
                            break;
                          }
                        }
                        unint64_t v499 = v843;
                      }
                      else
                      {
                        BOOL v682 = 1;
                      }

                      goto LABEL_1034;
                    }
                    BOOL v682 = 0;
                  }
LABEL_1035:

                  goto LABEL_1036;
                }
              }
              else
              {
                BOOL v682 = 1;
              }
LABEL_1034:
              v683 = v647;
              goto LABEL_1035;
            }
          }
          BOOL v682 = 0;
          v683 = v647;
          uint64_t v498 = v797;
LABEL_1038:

          goto LABEL_1039;
        }
        if (v505) {
          BOOL v577 = v574 == 0;
        }
        else {
          BOOL v577 = 0;
        }
        char v578 = v577;
        if (v575) {
          BOOL v579 = v573 == 0;
        }
        else {
          BOOL v579 = 0;
        }
        if (!v579 && (v578 & 1) == 0)
        {
          id v580 = [v505 muid];
          if (v580 == [v507 muid])
          {
            unint64_t v841 = v499;
            uint64_t v581 = [v505 title];
            uint64_t v582 = [v507 title];
            id v515 = (id)v581;
            id v516 = (id)v582;
            if (v581 | v582)
            {
              unsigned int v583 = [v515 isEqual:v516];

              if (!v583) {
                goto LABEL_1122;
              }
            }
            uint64_t v584 = [v505 summary:v711];
            uint64_t v585 = [v507 summary];
            uint64_t v586 = v584 | v585;
            v521 = (char *)(id)v584;
            id v522 = (id)v585;
            if (!v586
              || (unsigned int v587 = [v521 isEqual:v522], v521,
                                                                             v522,
                                                                             v587))
            {
              v824 = v522;
              v829 = v521;
              uint64_t v588 = [v505 fullDescription];
              uint64_t v589 = [v507 fullDescription];
              uint64_t v590 = v588 | v589;
              v521 = (char *)(id)v588;
              id v522 = (id)v589;
              if (!v590
                || (unsigned int v591 = [v521 isEqual:v522],
                    v521,
                    v522,
                    v591))
              {
                v819 = v522;
                uint64_t v592 = [v505 messageForRoutePlanning];
                uint64_t v593 = [v507 messageForRoutePlanning];
                id v835 = (id)v592;
                id v594 = (id)v593;
                v815 = v521;
                if (v592 | v593)
                {
                  unsigned int v595 = [v835 isEqual:v594];

                  if (!v595)
                  {
                    v611 = v515;
                    char v625 = 0;
                    unint64_t v576 = v856;
                    v626 = v829;
                    goto LABEL_947;
                  }
                }
                uint64_t v596 = [v505 messageForRouteStepping];
                uint64_t v597 = [v507 messageForRouteStepping];
                id v813 = (id)v596;
                id v807 = (id)v597;
                if (v596 | v597)
                {
                  unsigned int v598 = [v813 isEqual:v807];

                  if (!v598)
                  {
                    v611 = v515;
                    char v625 = 0;
                    unint64_t v576 = v856;
                    v626 = v829;
LABEL_946:

LABEL_947:
                    swift_unknownObjectRelease();

                    swift_unknownObjectRelease();
                    unint64_t v499 = v841;
                    if (v625) {
                      goto LABEL_948;
                    }
LABEL_1124:
                    swift_unknownObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    a1 = v721;
                    a2 = v722;
                    uint64_t v7 = v775;
                    goto LABEL_6;
                  }
                }
                uint64_t v599 = [v505 messageForNonRoutable];
                uint64_t v600 = [v507 messageForNonRoutable];
                id v800 = (id)v599;
                id v794 = (id)v600;
                if (v599 | v600)
                {
                  unsigned int v601 = [v800 isEqual:v794];

                  if (!v601)
                  {
                    v611 = v515;
                    char v625 = 0;
                    unint64_t v576 = v856;
                    v626 = v829;
LABEL_945:

                    goto LABEL_946;
                  }
                }
                uint64_t v602 = [v505 startDate];
                uint64_t v603 = [v507 startDate];
                id v790 = (id)v602;
                id v788 = (id)v603;
                if (v602 | v603)
                {
                  unsigned int v604 = [v790 isEqual:v788];

                  if (!v604)
                  {
                    v611 = v515;
                    char v625 = 0;
                    unint64_t v576 = v856;
                    v626 = v829;
LABEL_944:

                    goto LABEL_945;
                  }
                }
                uint64_t v605 = [v505 endDate];
                uint64_t v606 = [v507 endDate];
                id v607 = (id)v605;
                id v608 = (id)v606;
                v786 = v607;
                v783 = v608;
                if (v605 | v606
                  && (v609 = v608,
                      unsigned int v610 = [v607 isEqual:v608],
                      v607,
                      v609,
                      !v610))
                {
                  v611 = v515;
                }
                else
                {
                  v611 = v515;
                  unsigned int v612 = [v505 iconType];
                  if (v612 == [v507 iconType])
                  {
                    uint64_t v613 = [v505 creationDate];
                    uint64_t v614 = [v507 creationDate];
                    id v615 = (id)v613;
                    v616 = (char *)(id)v614;
                    v779 = v616;
                    if (v613 | v614)
                    {
                      v617 = v616;
                      unsigned int v618 = [v615 isEqual:v616];

                      if (!v618)
                      {
                        char v625 = 0;
                        unint64_t v576 = v856;
                        v626 = v829;
                        goto LABEL_942;
                      }
                    }
                    uint64_t v619 = [v505 lastUpdated];
                    uint64_t v620 = [v507 lastUpdated];
                    id v773 = (id)v619;
                    id v621 = (id)v620;
                    v766 = v621;
                    if (v619 | v620
                      && (v622 = v621,
                          unsigned int v623 = [v773 isEqual:v621],
                          v773,
                          v622,
                          !v623)
                      || (unsigned int v624 = [v505 isBlockingIncident],
                          v624 != [v507 isBlockingIncident]))
                    {
                      char v625 = 0;
                      unint64_t v576 = v856;
                      v626 = v829;
LABEL_940:

LABEL_942:
                      goto LABEL_943;
                    }
                    id objg = v615;
                    uint64_t v627 = [v505 affectedEntities];
                    uint64_t v628 = [v507 affectedEntities];
                    id v763 = (id)v627;
                    id v629 = (id)v628;
                    v630 = &stru_1012E12B8;
                    id v754 = v629;
                    if (v627 | v628)
                    {
                      char v625 = 0;
                      if (v763) {
                        BOOL v699 = v628 == 0;
                      }
                      else {
                        BOOL v699 = 0;
                      }
                      char v700 = v699;
                      if (v629) {
                        BOOL v701 = v627 == 0;
                      }
                      else {
                        BOOL v701 = 0;
                      }
                      if (!v701)
                      {
                        unint64_t v576 = v856;
                        v626 = v829;
                        if (v700) {
                          goto LABEL_939;
                        }
                        id v702 = [v763 count];
                        if (v702 != [v629 count])
                        {
                          char v625 = 0;
                          unint64_t v576 = v856;
                          goto LABEL_939;
                        }
                        long long v861 = 0u;
                        long long v862 = 0u;
                        long long v859 = 0u;
                        long long v860 = 0u;
                        id v744 = v763;
                        id v703 = [v744 countByEnumeratingWithState:&v859 objects:v858 count:16];
                        if (v703)
                        {
                          id v704 = v703;
                          id v847 = v516;
                          v757 = 0;
                          id v755 = *(id *)v860;
                          while (2)
                          {
                            for (nn = 0; nn != v704; nn = (char *)nn + 1)
                            {
                              if (*(id *)v860 != v755) {
                                objc_enumerationMutation(v744);
                              }
                              v706 = *(GEOTransitIncidentEntity **)(*((void *)&v859 + 1) + 8 * (void)nn);
                              v707 = [v754 objectAtIndexedSubscript:(char *)nn + (void)v757];
                              LODWORD(v706) = sub_10029C058(v707, v706, (GEOTransitIncidentEntity *)v707);

                              if (!v706)
                              {
                                char v625 = 0;
                                goto LABEL_1070;
                              }
                            }
                            id v704 = [v744 countByEnumeratingWithState:&v859 objects:v858 count:16];
                            v757 = (char *)nn + (void)v757;
                            if (v704) {
                              continue;
                            }
                            break;
                          }
                          char v625 = 1;
LABEL_1070:
                          unint64_t v576 = v856;
                          id v516 = v847;
                        }
                        else
                        {
                          char v625 = 1;
                          unint64_t v576 = v856;
                        }

LABEL_938:
                        v626 = v829;
LABEL_939:

                        id v615 = objg;
                        goto LABEL_940;
                      }
                    }
                    else
                    {
                      char v625 = 1;
                    }
                    unint64_t v576 = v856;
                    goto LABEL_938;
                  }
                }
                char v625 = 0;
                unint64_t v576 = v856;
                v626 = v829;
LABEL_943:

                goto LABEL_944;
              }
            }
LABEL_1121:

LABEL_1122:
            swift_unknownObjectRelease();

            id v505 = v515;
            goto LABEL_1123;
          }
        }
LABEL_1082:
        swift_unknownObjectRelease();
        id v516 = v507;
LABEL_1123:
        swift_unknownObjectRelease();

        goto LABEL_1124;
      }
    }
    uint64_t v538 = [v505 messageForNonRoutable];
    uint64_t v539 = [v507 messageForNonRoutable];
    id v806 = (id)v538;
    id v799 = (id)v539;
    if (v538 | v539)
    {
      unsigned int v540 = [v806 isEqual:v799];

      if (!v540)
      {
        v547 = v532;
        LOBYTE(v532) = 0;
        unint64_t v508 = v856;
        v559 = v521;
        v560 = v818;
LABEL_875:

        goto LABEL_876;
      }
    }
    uint64_t v541 = [v505 startDate];
    uint64_t v542 = [v507 startDate];
    id v793 = (id)v541;
    id v789 = (id)v542;
    if (v541 | v542)
    {
      unsigned int v543 = [v793 isEqual:v789];

      if (!v543)
      {
        v547 = v532;
        LOBYTE(v532) = 0;
        unint64_t v508 = v856;
        v559 = v521;
        v560 = v818;
LABEL_874:

        goto LABEL_875;
      }
    }
    uint64_t v544 = [v505 endDate];
    uint64_t v545 = [v507 endDate];
    id v787 = (id)v544;
    id v785 = (id)v545;
    if (v544 | v545
      && (unsigned int v546 = [v787 isEqual:v785], v787, v785, !v546))
    {
      v547 = v532;
    }
    else
    {
      v547 = v532;
      unsigned int v548 = [v505 iconType];
      if (v548 == [v507 iconType])
      {
        uint64_t v549 = [v505 creationDate];
        uint64_t v550 = [v507 creationDate];
        id v551 = (id)v549;
        id v552 = (id)v550;
        v782 = v552;
        if (v549 | v550)
        {
          v553 = v552;
          unsigned int v554 = [v551 isEqual:v552];

          if (!v554)
          {
            LOBYTE(v532) = 0;
            unint64_t v508 = v856;
            v559 = v521;
LABEL_872:
            v560 = v818;

            goto LABEL_873;
          }
        }
        uint64_t v555 = [v505 lastUpdated];
        uint64_t v556 = [v507 lastUpdated];
        v779 = (char *)(id)v555;
        id v772 = (id)v556;
        if (v555 | v556
          && (unsigned int v557 = [v779 isEqual:v772], v779, v772, !v557)
          || (unsigned int v558 = [v505 isBlockingIncident],
              v558 != [v507 isBlockingIncident]))
        {
          LOBYTE(v532) = 0;
          unint64_t v508 = v856;
          v559 = v521;
LABEL_871:

          goto LABEL_872;
        }
        id v754 = v551;
        uint64_t v561 = [v505 affectedEntities];
        uint64_t v562 = [v507 affectedEntities];
        id v762 = (id)v561;
        id v563 = (id)v562;
        v564 = &stru_1012E12B8;
        v765 = v563;
        if (v561 | v562)
        {
          LOBYTE(v532) = 0;
          if (v762) {
            BOOL v565 = v562 == 0;
          }
          else {
            BOOL v565 = 0;
          }
          char v566 = v565;
          if (v563) {
            BOOL v567 = v561 == 0;
          }
          else {
            BOOL v567 = 0;
          }
          if (!v567)
          {
            unint64_t v508 = v856;
            v559 = v521;
            if (v566)
            {
LABEL_870:

              id v551 = v754;
              goto LABEL_871;
            }
            id v568 = [v762 count];
            if (v568 != [v563 count])
            {
              LOBYTE(v532) = 0;
              unint64_t v508 = v856;
              goto LABEL_870;
            }
            long long v861 = 0u;
            long long v862 = 0u;
            long long v859 = 0u;
            long long v860 = 0u;
            id objf = v762;
            id v569 = [objf countByEnumeratingWithState:&v859 objects:v858 count:16];
            if (v569)
            {
              id v570 = v569;
              v757 = 0;
              id v755 = *(id *)v860;
LABEL_860:
              v571 = 0;
              while (1)
              {
                if (*(id *)v860 != v755) {
                  objc_enumerationMutation(objf);
                }
                id v532 = *(id *)(*((void *)&v859 + 1) + 8 * (void)v571);
                v572 = [v563 objectAtIndexedSubscript:(char *)v571 + (void)v757];
                LODWORD(v532) = sub_10029C058(v572, (GEOTransitIncidentEntity *)v532, (GEOTransitIncidentEntity *)v572);

                if (!v532) {
                  break;
                }
                v571 = (char *)v571 + 1;
                id v563 = v765;
                if (v570 == v571)
                {
                  id v570 = [objf countByEnumeratingWithState:&v859 objects:v858 count:16];
                  v757 = (char *)v571 + (void)v757;
                  if (v570) {
                    goto LABEL_860;
                  }
                  goto LABEL_866;
                }
              }
            }
            else
            {
LABEL_866:
              LOBYTE(v532) = 1;
            }
            unint64_t v508 = v856;

LABEL_869:
            v559 = v521;
            goto LABEL_870;
          }
        }
        else
        {
          LOBYTE(v532) = 1;
        }
        unint64_t v508 = v856;
        goto LABEL_869;
      }
    }
    LOBYTE(v532) = 0;
    unint64_t v508 = v856;
    v559 = v521;
    v560 = v818;
LABEL_873:

    goto LABEL_874;
  }
  if (*(void *)((v496 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v500 = *(void *)(v496 + 32);
    swift_unknownObjectRetain();
    uint64_t v501 = v857 & 0xFFFFFFFFFFFFFF8;
    if (!v495) {
      goto LABEL_788;
    }
LABEL_796:
    swift_bridgeObjectRetain();
    unint64_t v497 = v857;
    uint64_t v503 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v854 = v503;
    if (v503) {
      goto LABEL_797;
    }
LABEL_885:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_886;
  }
LABEL_1145:
  __break(1u);
LABEL_1146:
  __break(1u);
LABEL_1147:
  __break(1u);
LABEL_1148:
  __break(1u);
LABEL_1149:
  __break(1u);
LABEL_1150:
  __break(1u);
LABEL_1151:
  __break(1u);
LABEL_1152:
  __break(1u);
LABEL_1153:
  __break(1u);
LABEL_1154:
  __break(1u);
LABEL_1155:
  __break(1u);
LABEL_1156:
  __break(1u);
LABEL_1157:
  __break(1u);
LABEL_1158:
  __break(1u);
}

uint64_t sub_100291870(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return a1;
}

unint64_t sub_1002918E0()
{
  unint64_t result = qword_1015D8038;
  if (!qword_1015D8038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8038);
  }
  return result;
}

void destroy for NearbyTransitListView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for NearbyTransitListView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void **)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for NearbyTransitListView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void **)(a1 + 72);
  uint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  id v6 = v5;

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for NearbyTransitDeparturesViewModel(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitListView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  long long v4 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitDeparturesViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitDeparturesViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitListView()
{
  return &type metadata for NearbyTransitListView;
}

uint64_t destroy for NearbyTransitFilterHorizontalScrollView(id *a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  id v9 = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitFilterHorizontalScrollView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitFilterHorizontalScrollView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitFilterHorizontalScrollView()
{
  return &type metadata for NearbyTransitFilterHorizontalScrollView;
}

uint64_t destroy for NearbyTransitErrorView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for NearbyTransitErrorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NearbyTransitErrorView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for NearbyTransitErrorView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitErrorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitErrorView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitErrorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitErrorView()
{
  return &type metadata for NearbyTransitErrorView;
}

uint64_t sub_1002922E0()
{
  return sub_100292330(&qword_1015D8040, &qword_1015D8048, (void (*)(void))sub_10028B854, (void (*)(void))sub_10028B930);
}

uint64_t sub_100292330(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002923B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002923D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002923F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029240C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100292438@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100292464()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t sub_10029248C()
{
  unint64_t result = qword_1015D8080;
  if (!qword_1015D8080)
  {
    sub_10010118C(&qword_1015D8078);
    sub_1001010F8(&qword_1015D8088, &qword_1015D8090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8080);
  }
  return result;
}

uint64_t sub_10029252C()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 105, 7);
}

uint64_t sub_1002925A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002790CC(v1 + 24, a1);
}

uint64_t sub_1002925B0()
{
  return sub_10014B5E8(*(uint64_t (**)(void))(v0 + 16));
}

void **sub_1002925B8(void **a1)
{
  unint64_t v2 = *a1;
  swift_retain();
  swift_retain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_100292640(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_1001010F8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002926DC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_10029274C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_100279330(a1, a2, a3, a4, a5, v6 + 16, a6);
}

uint64_t sub_100292754()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10029278C(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], a1[3], a1[4]);
}

unint64_t sub_1002927C4()
{
  unint64_t result = qword_1015D80F0;
  if (!qword_1015D80F0)
  {
    sub_10010118C(&qword_1015D80E0);
    sub_10010118C(&qword_1015D8058);
    sub_1001010F8(&qword_1015D80A0, &qword_1015D8058);
    sub_1002928E4();
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D80F0);
  }
  return result;
}

unint64_t sub_1002928E4()
{
  unint64_t result = qword_1015D80F8;
  if (!qword_1015D80F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D80F8);
  }
  return result;
}

uint64_t sub_100292938()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

void sub_1002929C8()
{
  sub_1002798E8(v0 + 16, *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void **)(v0 + 152));
}

uint64_t sub_1002929E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028889C(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

unint64_t sub_1002929F0()
{
  unint64_t result = qword_1015D8170;
  if (!qword_1015D8170)
  {
    sub_10010118C(&qword_1015D8178);
    sub_10028BA3C(&qword_1015D8180, (void (*)(uint64_t))type metadata accessor for NearbyTransitGroupView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8170);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitGroupView(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D8250);
}

unint64_t sub_100292AB4()
{
  unint64_t result = qword_1015D8190;
  if (!qword_1015D8190)
  {
    sub_10010118C(&qword_1015D8150);
    sub_10010118C(&qword_1015D8140);
    type metadata accessor for InsetGroupedListStyle();
    sub_1001010F8(&qword_1015D8188, &qword_1015D8140);
    swift_getOpaqueTypeConformance2();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8190);
  }
  return result;
}

uint64_t sub_100292BCC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

double sub_100292C04@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100288B30(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_100292C0C()
{
  unint64_t result = qword_1015D81B8;
  if (!qword_1015D81B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D81B8);
  }
  return result;
}

uint64_t sub_100292C60()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 136, 7);
}

void sub_100292CE8()
{
  sub_100292D7C(*(void *)(v0 + 120));
}

uint64_t sub_100292CF0(uint64_t a1)
{
  id v2 = *(id *)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_100292D7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v2 - 8);
  v44[1] = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v46 = a1 + 32;
    v44[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    long long v5 = _swiftEmptyArrayStorage;
    long long v45 = xmmword_100F5CFA0;
    long long v55 = xmmword_100F5CF70;
    do
    {
      uint64_t v6 = (void *)(v46 + (v4 << 6));
      uint64_t v7 = v6[4];
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v53 = v5;
        uint64_t v54 = v4;
        uint64_t v9 = v6[1];
        uint64_t v10 = v6[5];
        uint64_t v49 = v6[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v48 = v10;
        swift_bridgeObjectRetain();
        uint64_t v50 = v9;
        swift_bridgeObjectRetain();
        uint64_t v51 = v7;
        uint64_t v11 = (uint64_t *)(v7 + 56);
        uint64_t v52 = v8;
        uint64_t v12 = _swiftEmptyArrayStorage;
        do
        {
          if (*((unsigned char *)v11 + 8) == 1)
          {
            uint64_t v16 = *(v11 - 2);
            uint64_t v56 = *(v11 - 3);
            uint64_t v17 = *(v11 - 1);
            uint64_t v18 = *v11;
            uint64_t v19 = v11[2];
            int v20 = *((unsigned __int8 *)v11 + 24);
            uint64_t v21 = v11[4];
            uint64_t v22 = v11[5];
            int v57 = *((unsigned __int8 *)v11 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v60 = v12;
            int v59 = v20;
            uint64_t v58 = v21;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_10025AFF8(0, v12[2] + 1, 1);
              uint64_t v12 = v60;
            }
            unint64_t v14 = v12[2];
            unint64_t v13 = v12[3];
            if (v14 >= v13 >> 1)
            {
              sub_10025AFF8(v13 > 1, v14 + 1, 1);
              uint64_t v12 = v60;
            }
            v12[2] = v14 + 1;
            uint64_t v15 = &v12[10 * v14];
            v15[4] = v56;
            v15[5] = v16;
            v15[6] = v17;
            v15[7] = v18;
            *((unsigned char *)v15 + 64) = 1;
            v15[9] = v19;
            *((unsigned char *)v15 + 80) = v59;
            v15[11] = v58;
            v15[12] = v22;
            *((unsigned char *)v15 + 104) = v57;
          }
          v11 += 10;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v54;
        long long v5 = v53;
        uint64_t v8 = v52;
      }
      else
      {
        uint64_t v12 = _swiftEmptyArrayStorage;
      }
      uint64_t v24 = v12[2];
      swift_release();
      sub_1000FF33C(&qword_1015D81C0);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v45;
      sub_1000FF33C((uint64_t *)&unk_1015D81C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v55;
      *(void *)(inited + 32) = 0x73656E696CLL;
      *(void *)(inited + 40) = 0xE500000000000000;
      *(void *)(inited + 48) = v8 - v24;
      *(void *)(v25 + 32) = sub_100116760(inited);
      uint64_t v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = v55;
      strcpy((char *)(v27 + 32), "pinned_lines");
      *(unsigned char *)(v27 + 45) = 0;
      *(_WORD *)(v27 + 46) = -5120;
      *(void *)(v27 + 48) = v24;
      *(void *)(v25 + 40) = sub_100116760(v27);
      sub_1000FF33C(&qword_1015CC060);
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = v55;
      *(void *)(v28 + 32) = 0x70756F7267;
      *(void *)(v28 + 40) = 0xE500000000000000;
      *(void *)(v28 + 72) = sub_1000FF33C(&qword_1015D81D8);
      *(void *)(v28 + 48) = v25;
      unint64_t v29 = sub_1001160B4(v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v5 = sub_1001D0974(0, v5[2] + 1, 1, v5);
      }
      unint64_t v31 = v5[2];
      unint64_t v30 = v5[3];
      if (v31 >= v30 >> 1) {
        long long v5 = sub_1001D0974((void *)(v30 > 1), v31 + 1, 1, v5);
      }
      ++v4;
      v5[2] = v31 + 1;
      v5[v31 + 4] = v29;
    }
    while (v4 != v47);
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = self;
  sub_1000FF33C((uint64_t *)&unk_1015D81E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v60 = 0;
  id v34 = [v32 dataWithJSONObject:isa options:0 error:&v60];

  unint64_t v35 = v60;
  if (!v34)
  {
    uint64_t v43 = v35;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    v41 = self;
    goto LABEL_24;
  }
  uint64_t v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v38 = v37;

  static String.Encoding.utf8.getter();
  String.init(data:encoding:)();
  uint64_t v40 = v39;
  sub_1001442DC(v36, v38);
  v41 = self;
  if (!v40)
  {
LABEL_24:
    NSString v42 = 0;
    goto LABEL_25;
  }
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_25:
  [v41 captureUserAction:21 target:44 value:v42];
}

uint64_t *sub_100293398(uint64_t *a1)
{
  uint64_t v2 = a1[8];
  uint64_t v3 = a1[9];
  sub_100293428(*a1, a1[1]);
  sub_100293428(v2, v3);
  return a1;
}

uint64_t sub_100293428(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FilterBarButtonStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterBarButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterBarButtonStyle()
{
  return &type metadata for FilterBarButtonStyle;
}

uint64_t *sub_100293530(uint64_t *a1, uint64_t *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    BOOL v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000FF33C(&qword_1015D81F0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)v4 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    uint64_t v14 = *((void *)v11 + 5);
    *((void *)v10 + 4) = *((void *)v11 + 4);
    *((void *)v10 + 5) = v14;
    v10[48] = v11[48];
    uint64_t v15 = *(uint64_t *)((char *)a2 + v9);
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *(uint64_t *)((char *)v4 + v9) = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (char *)a2 + v16;
    uint64_t v21 = *(void **)v19;
    uint64_t v20 = *((void *)v19 + 1);
    *uint64_t v18 = v21;
    v18[1] = v20;
    uint64_t v22 = (char *)v4 + v17;
    int v23 = (char *)a2 + v17;
    *uint64_t v22 = *v23;
    *((void *)v22 + 1) = *((void *)v23 + 1);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    *uint64_t v25 = *v26;
    *((void *)v25 + 1) = *((void *)v26 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v21;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1002936B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t sub_10029377C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  uint64_t v13 = *(void *)(v10 + 40);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = v13;
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v14 = *(void *)(a2 + v8);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(a1 + v8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = a2 + v15;
  uint64_t v20 = *(void **)v18;
  uint64_t v19 = *(void *)(v18 + 8);
  *uint64_t v17 = v20;
  v17[1] = v19;
  uint64_t v21 = a1 + v16;
  uint64_t v22 = a2 + v16;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = v20;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1002938B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void **)(a1 + v10);
  uint64_t v14 = *(void **)(a2 + v10);
  *uint64_t v11 = v14;
  id v15 = v14;

  v11[1] = *(void *)(v12 + 8);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100293A48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  _OWORD *v9 = *v10;
  v9[1] = v11;
  long long v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v13 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100293B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  id v15 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_release();
  return a1;
}

uint64_t sub_100293C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100293C60);
}

uint64_t sub_100293C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002964B0(a1, a2, a3, &qword_1015D81F0);
}

uint64_t sub_100293C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100293C80);
}

uint64_t sub_100293C80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100296594(a1, a2, a3, a4, &qword_1015D81F0);
}

void sub_100293C8C()
{
  sub_100176ED8(319, (unint64_t *)&unk_1015D8260, (void (*)(void))sub_1001742A0);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100293D60()
{
  return sub_1001010F8(&qword_1015D82A0, &qword_1015D82A8);
}

uint64_t sub_100293D9C()
{
  return sub_1001010F8(&qword_1015D82B0, &qword_1015D82B8);
}

unint64_t sub_100293DDC()
{
  unint64_t result = qword_1015D82C0;
  if (!qword_1015D82C0)
  {
    sub_10010118C(&qword_1015D82C8);
    sub_10010118C(&qword_1015D8150);
    sub_100292AB4();
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D82C0);
  }
  return result;
}

uint64_t sub_100293ED0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100293EEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100293F08()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100293F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10028BBCC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_100293F74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100293FA0()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_100293FCC()
{
  return sub_10029BAEC(&qword_1015D8370, &qword_1015D8378, (void (*)(void))sub_100293FFC);
}

unint64_t sub_100293FFC()
{
  unint64_t result = qword_1015D8380;
  if (!qword_1015D8380)
  {
    sub_10010118C(&qword_1015D8388);
    sub_10029409C();
    sub_1001010F8(&qword_1015D83C0, &qword_1015D83C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8380);
  }
  return result;
}

unint64_t sub_10029409C()
{
  unint64_t result = qword_1015D8390;
  if (!qword_1015D8390)
  {
    sub_10010118C(&qword_1015D8398);
    sub_1001010F8(&qword_1015D83A0, &qword_1015D83A8);
    sub_1001010F8(&qword_1015D83B0, &qword_1015D83B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8390);
  }
  return result;
}

uint64_t sub_100294160(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002941CC()
{
  type metadata accessor for NearbyTransitGroupView(0);

  return sub_100288190();
}

unint64_t sub_10029424C()
{
  unint64_t result = qword_1015D83F0;
  if (!qword_1015D83F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D83F0);
  }
  return result;
}

uint64_t sub_1002942A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100294300@<X0>(uint64_t a1@<X8>)
{
  return sub_100284E58(v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_100294330()
{
  unint64_t result = qword_1015D8418;
  if (!qword_1015D8418)
  {
    sub_10010118C(&qword_1015D8410);
    sub_1002979F0(&qword_1015D8420, &qword_1015D8428, &qword_1015D8430, &qword_1015D8438);
    sub_1001010F8(&qword_1015D83B0, &qword_1015D83B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8418);
  }
  return result;
}

uint64_t sub_1002943F4()
{
  uint64_t v1 = (int *)(type metadata accessor for NearbyTransitGroupView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100294530()
{
  return sub_100297D78(type metadata accessor for NearbyTransitGroupView, (uint64_t (*)(uint64_t))sub_100285348);
}

uint64_t sub_10029455C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002853D4(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_100294568()
{
  return sub_10029BAEC(&qword_1015D8460, &qword_1015D8468, (void (*)(void))sub_100294598);
}

unint64_t sub_100294598()
{
  unint64_t result = qword_1015D8470;
  if (!qword_1015D8470)
  {
    sub_10010118C(&qword_1015D8478);
    sub_10028BA3C((unint64_t *)&unk_1015D8480, (void (*)(uint64_t))type metadata accessor for NearbyTransitCollapsedLinesView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8470);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitCollapsedLinesView(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D8618);
}

uint64_t sub_100294664()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100294688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10028BBCC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_1002946C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100288214(*(void *)(v1 + 24), a1);
}

unint64_t sub_1002946D0()
{
  unint64_t result = qword_1015D8498;
  if (!qword_1015D8498)
  {
    sub_10010118C(&qword_1015D8490);
    sub_10010118C(&qword_1015D84A0);
    sub_10010118C(&qword_1015D84A8);
    type metadata accessor for NearbyTransitLineSectionView(255);
    sub_10010118C(&qword_1015D84B0);
    sub_10028BA3C(&qword_1015D84B8, (void (*)(uint64_t))type metadata accessor for NearbyTransitLineSectionView);
    sub_1001010F8(&qword_1015D84C0, &qword_1015D84B0);
    swift_getOpaqueTypeConformance2();
    sub_100294898();
    swift_getOpaqueTypeConformance2();
    sub_1001010F8(&qword_1015D83B0, &qword_1015D83B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8498);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitLineSectionView(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D86C0);
}

unint64_t sub_100294898()
{
  unint64_t result = qword_1015D84C8;
  if (!qword_1015D84C8)
  {
    sub_10010118C(&qword_1015D84A8);
    sub_1001010F8(&qword_1015D84D0, &qword_1015D84D8);
    sub_1001010F8(&qword_1015D84E0, &qword_1015D84E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D84C8);
  }
  return result;
}

uint64_t sub_10029495C()
{
  return sub_100286234(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(_OWORD **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10029496C@<X0>(uint64_t a1@<X8>)
{
  return sub_100286408(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(_OWORD **)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t *sub_10029497C(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v4 = a1[10];
  sub_100294A34(*a1, a1[1]);
  sub_100294A34(v4, v2);
  return a1;
}

uint64_t sub_100294A34(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_100294AA8()
{
  return sub_100294DD4(255, (uint64_t)&unk_1012E0F68, (uint64_t)&unk_1015D8538, 256);
}

uint64_t sub_100294AD0()
{
  return sub_1002869CC();
}

uint64_t sub_100294AD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100294B04()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_100294B30()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100294B6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100105268;
  return sub_10013B6C0(a1, v4, v5, v7, v6);
}

uint64_t sub_100294C30()
{
  uint64_t v1 = (int *)(type metadata accessor for NearbyTransitGroupView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 73;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

id sub_100294DAC()
{
  return sub_100294DD4(254, (uint64_t)&unk_1012E0FB8, (uint64_t)&unk_1015D8540, 253);
}

id sub_100294DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for NearbyTransitGroupView(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_100286778(*(unsigned char *)(v4 + 16), v4 + v10, v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8), a1, a2, a3, a4);
}

uint64_t sub_100294E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D8500);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100294F04()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100294F4C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10005056C;
  return sub_10013B6C0(a1, v4, v5, v7, v6);
}

uint64_t *sub_10029500C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100295060(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002950D8()
{
  uint64_t v1 = (int *)(type metadata accessor for NearbyTransitGroupView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100295230()
{
  uint64_t v1 = *(void *)(type metadata accessor for NearbyTransitGroupView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100284B24(v2);
}

uint64_t sub_1002952BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100284CC8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t type metadata accessor for NearbyTransitGroupIncidentsView(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D8768);
}

uint64_t sub_1002952EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100295354(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_unknownObjectRetain();
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[7];
    *(void *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = type metadata accessor for Text.Measurements();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1002954D4(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Text.Measurements();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_1002955C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_unknownObjectRetain();
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

void *sub_1002956F8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1000FF2E0((uint64_t)a1 + v6, &qword_1015CE6F8);
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_100295860(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t sub_100295994(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_1000FF2E0(a1 + v6, &qword_1015CE6F8);
    uint64_t v9 = sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_100295AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100295B0C);
}

uint64_t sub_100295B0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Text.Measurements();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100295C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100295C50);
}

void *sub_100295C50(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Text.Measurements();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100295D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *sub_100295DAC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1000FF33C(&qword_1015D8660);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)v4 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    uint64_t v14 = *((void *)v11 + 8);
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((void *)v10 + 8) = v14;
    v10[72] = v11[72];
    uint64_t v15 = (void *)((char *)v4 + v9);
    uint64_t v16 = (char *)a2 + v9;
    uint64_t v18 = *(void **)v16;
    uint64_t v17 = *((void *)v16 + 1);
    *uint64_t v15 = v18;
    v15[1] = v17;
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)v4 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *uint64_t v21 = *v22;
    *((void *)v21 + 1) = *((void *)v22 + 1);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = v18;
  }
  swift_retain();
  return v4;
}

uint64_t sub_100295F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100295FE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  uint64_t v13 = *(void *)(v10 + 64);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(v9 + 64) = v13;
  *(unsigned char *)(v9 + 72) = *(unsigned char *)(v10 + 72);
  uint64_t v14 = (void *)(a1 + v8);
  uint64_t v15 = a2 + v8;
  uint64_t v17 = *(void **)v15;
  uint64_t v16 = *(void *)(v15 + 8);
  *uint64_t v14 = v17;
  v14[1] = v16;
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = v17;
  swift_retain();
  return a1;
}

uint64_t sub_100296110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 72) = *(unsigned char *)(v9 + 72);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void **)(a1 + v10);
  uint64_t v14 = *(void **)(a2 + v10);
  *uint64_t v11 = v14;
  id v15 = v14;

  v11[1] = *(void *)(v12 + 8);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100296298(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[3];
  v9[2] = v10[2];
  v9[3] = v11;
  *(_OWORD *)((char *)v9 + 57) = *(_OWORD *)((char *)v10 + 57);
  long long v12 = v10[1];
  _OWORD *v9 = *v10;
  v9[1] = v12;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v13 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_10029634C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_unknownObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v11 = *(void *)(v9 + 64);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 72) = *(unsigned char *)(v9 + 72);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  id v15 = *(void **)(a1 + v12);
  *uint64_t v13 = *v14;

  v13[1] = v14[1];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100296490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002964A4);
}

uint64_t sub_1002964A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002964B0(a1, a2, a3, &qword_1015D8660);
}

uint64_t sub_1002964B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_1000FF33C(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100296574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100296588);
}

uint64_t sub_100296588(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100296594(a1, a2, a3, a4, &qword_1015D8660);
}

uint64_t sub_100296594(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = sub_1000FF33C(a5);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_100296654()
{
  sub_100176ED8(319, (unint64_t *)&unk_1015D86D0, (void (*)(void))sub_1001742F4);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_100296724(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100296808(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100296880(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_100296918(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1002969AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100296A28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100296AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100296AC8);
}

uint64_t sub_100296AC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100296B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100296B8C);
}

void *sub_100296B8C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100296C34()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for NearbyTransitGroupHeaderView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for NearbyTransitGroupHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NearbyTransitGroupHeaderView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for NearbyTransitGroupHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitGroupHeaderView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitGroupHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitGroupHeaderView()
{
  return &type metadata for NearbyTransitGroupHeaderView;
}

unint64_t sub_100297010()
{
  unint64_t result = qword_1015D87A0;
  if (!qword_1015D87A0)
  {
    sub_10010118C((uint64_t *)&unk_1015D8310);
    sub_1002970B0();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D87A0);
  }
  return result;
}

unint64_t sub_1002970B0()
{
  unint64_t result = qword_1015D87A8;
  if (!qword_1015D87A8)
  {
    sub_10010118C(&qword_1015D8308);
    sub_100297150();
    sub_1001010F8((unint64_t *)&unk_1015D8808, (uint64_t *)&unk_1015D8338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D87A8);
  }
  return result;
}

unint64_t sub_100297150()
{
  unint64_t result = qword_1015D87B0;
  if (!qword_1015D87B0)
  {
    sub_10010118C(&qword_1015D8300);
    sub_1002971F0();
    sub_1001010F8(&qword_1015D0F08, &qword_1015D0F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D87B0);
  }
  return result;
}

unint64_t sub_1002971F0()
{
  unint64_t result = qword_1015D87B8;
  if (!qword_1015D87B8)
  {
    sub_10010118C(&qword_1015D82F8);
    sub_10029BAEC(&qword_1015D87C0, &qword_1015D82F0, (void (*)(void))sub_1002972BC);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D87B8);
  }
  return result;
}

uint64_t sub_1002972BC()
{
  return sub_10029BAEC(&qword_1015D87C8, &qword_1015D82E8, (void (*)(void))sub_1002972EC);
}

unint64_t sub_1002972EC()
{
  unint64_t result = qword_1015D87D0;
  if (!qword_1015D87D0)
  {
    sub_10010118C(&qword_1015D82E0);
    sub_10029738C();
    sub_1001010F8((unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D87D0);
  }
  return result;
}

unint64_t sub_10029738C()
{
  unint64_t result = qword_1015D87D8;
  if (!qword_1015D87D8)
  {
    sub_10010118C(&qword_1015D82D8);
    type metadata accessor for ButtonStyleConfiguration.Label();
    type metadata accessor for BorderedProminentButtonStyle();
    sub_10028BA3C(&qword_1015D13B0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_10028BA3C(&qword_1015D8328, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_1001010F8((unint64_t *)&unk_1015D87E0, &qword_1015D8330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D87D8);
  }
  return result;
}

uint64_t sub_1002974DC()
{
  return sub_1001010F8(&qword_1015D8818, (uint64_t *)&unk_1015D8820);
}

uint64_t sub_100297518()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100297534()
{
  return sub_10028BA3C(&qword_1015D85A8, (void (*)(uint64_t))type metadata accessor for NearbyTransitGroupIncidentsView);
}

uint64_t sub_10029757C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100297598()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002975B4()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1002975D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10028BBCC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100297618()
{
  uint64_t v1 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 28);
  uint64_t v8 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100297798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for NearbyTransitCollapsedLinesView(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10027BB80(v1 + v4, v5, a1);
}

unint64_t sub_100297844()
{
  unint64_t result = qword_1015D2AB8;
  if (!qword_1015D2AB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D2AB8);
  }
  return result;
}

unint64_t sub_100297884()
{
  unint64_t result = qword_1015D8890;
  if (!qword_1015D8890)
  {
    sub_10010118C(&qword_1015D8870);
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8890);
  }
  return result;
}

uint64_t sub_100297930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
  {
    sub_10017FDF0(a3, a4, a5 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100297980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
  {
    sub_10017F958(a3, a4, a5 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitLineSectionHeaderView(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D8BC0);
}

uint64_t sub_1002979F0(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_10010118C(a3);
    type metadata accessor for BorderlessButtonStyle();
    sub_1001010F8(a4, a3);
    sub_10028BA3C(&qword_1015D8440, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100297B40@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for NearbyTransitLineSectionView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10027DCA4(a1, v6, a2);
}

unint64_t sub_100297BC0()
{
  unint64_t result = qword_1015D8988;
  if (!qword_1015D8988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8988);
  }
  return result;
}

uint64_t sub_100297C18()
{
  uint64_t v1 = (int *)(type metadata accessor for NearbyTransitLineSectionView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100297D4C()
{
  return sub_100297D78(type metadata accessor for NearbyTransitLineSectionView, (uint64_t (*)(uint64_t))sub_10027ECB8);
}

uint64_t sub_100297D78(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

unint64_t sub_100297DF4()
{
  unint64_t result = qword_1015D89A8;
  if (!qword_1015D89A8)
  {
    sub_10010118C(&qword_1015D89B0);
    sub_100292640(&qword_1015D89B8, &qword_1015D89C0, &qword_1015D89C8, &qword_1015D89D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D89A8);
  }
  return result;
}

uint64_t sub_100297E90(uint64_t a1)
{
  return a1;
}

uint64_t sub_100297ED4()
{
  return sub_100298240((uint64_t (*)(unint64_t, uint64_t))sub_10027E5C8);
}

uint64_t sub_100297EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_10027E710(*(void *)(v1 + 16), a1);
}

uint64_t sub_100297EF4()
{
  return sub_10029BAEC(&qword_1015D8A18, &qword_1015D8A20, (void (*)(void))sub_100297F24);
}

unint64_t sub_100297F24()
{
  unint64_t result = qword_1015D8A28;
  if (!qword_1015D8A28)
  {
    sub_10010118C(&qword_1015D8A30);
    sub_10028BA3C(&qword_1015D8A38, (void (*)(uint64_t))type metadata accessor for NearbyTransitDepartureView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8A28);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitDepartureView(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D8B18);
}

uint64_t *sub_100297FF0(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  sub_100295060(*a1, a1[1]);
  sub_100295060(v2, v3);
  return a1;
}

uint64_t sub_1002980B4()
{
  uint64_t v1 = (int *)(type metadata accessor for NearbyTransitLineSectionView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 88;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100298228()
{
  return sub_100298240((uint64_t (*)(unint64_t, uint64_t))sub_10027CE70);
}

uint64_t sub_100298240(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for NearbyTransitLineSectionView(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);

  return a1(v1 + v3, v4);
}

double sub_1002982E0@<D0>(uint64_t a1@<X8>)
{
  return sub_10027CFA4(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1002982E8()
{
  return sub_10029BAEC(&qword_1015D8A68, &qword_1015D8A70, (void (*)(void))sub_100298318);
}

unint64_t sub_100298318()
{
  unint64_t result = qword_1015D8A78;
  if (!qword_1015D8A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8A78);
  }
  return result;
}

uint64_t sub_10029836C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002983E0(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for NearbyTransitWalkingPillView(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D8C58);
}

void destroy for NearbyTransitInactiveDepartureView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 168);
}

uint64_t initializeWithCopy for NearbyTransitInactiveDepartureView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  unint64_t v11 = *(void **)(a2 + 168);
  uint64_t v10 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = v11;
  *(void *)(a1 + 176) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v11;
  return a1;
}

uint64_t assignWithCopy for NearbyTransitInactiveDepartureView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v4 = *(void **)(a1 + 168);
  uint64_t v5 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v5;
  id v6 = v5;

  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

__n128 initializeWithTake for NearbyTransitInactiveDepartureView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitInactiveDepartureView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v9 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  long long v10 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);

  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitInactiveDepartureView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitInactiveDepartureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitInactiveDepartureView()
{
  return &type metadata for NearbyTransitInactiveDepartureView;
}

void *sub_100298990(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[10];
    uint64_t v12 = a2[11];
    uint64_t v14 = (void *)a2[12];
    uint64_t v13 = a2[13];
    a1[12] = v14;
    a1[13] = v13;
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    a1[10] = v11;
    a1[11] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    id v18 = v14;
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v16, v17, v19);
    }
    else
    {
      void *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[7];
    id v22 = (void *)((char *)a1 + v21);
    id v23 = (void *)((char *)a2 + v21);
    sub_1000FF33C(&qword_1015CE720);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *id v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_100298BCC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  sub_1000FF33C(&qword_1015CE720);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100298D2C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[10];
  uint64_t v11 = a2[11];
  uint64_t v13 = (void *)a2[12];
  uint64_t v12 = a2[13];
  a1[12] = v13;
  a1[13] = v12;
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  a1[10] = v10;
  a1[11] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v17 = v13;
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
  }
  else
  {
    *uint64_t v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  sub_1000FF33C(&qword_1015CE720);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_100298F18(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a1[12];
  uint64_t v7 = (void *)a2[12];
  a1[12] = v7;
  id v8 = v7;

  a1[13] = a2[13];
  if (a1 != a2)
  {
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_1000FF2E0((uint64_t)a1 + v9, &qword_1015CE6F8);
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    sub_1000FF2E0((uint64_t)a1 + v13, &qword_1015CE720);
    sub_1000FF33C(&qword_1015CE720);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_100299184(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  long long v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  long long v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  uint64_t v12 = sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_1000FF33C(&qword_1015CE720);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_10029932C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_unknownObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_release();
  uint64_t v12 = (void *)a1[12];
  a1[12] = a2[12];

  a1[13] = a2[13];
  if (a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_1000FF2E0((uint64_t)a1 + v13, &qword_1015CE6F8);
    uint64_t v16 = sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    sub_1000FF2E0((uint64_t)a1 + v18, &qword_1015CE720);
    uint64_t v21 = sub_1000FF33C(&qword_1015CE720);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100299554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100299568);
}

uint64_t sub_100299568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000FF33C(&qword_1015D8AB8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10029969C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002996B0);
}

uint64_t sub_1002996B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000FF33C(&qword_1015D8AB8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1002997E4()
{
  sub_100299900(319, (unint64_t *)&unk_1015D05B8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100299900(319, (unint64_t *)&qword_1015D4840, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100299900(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100299954(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[7];
    uint64_t v10 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v11 = a3[5];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[7];
    *(void *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = type metadata accessor for Font.TextStyle();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_retain();
    v20(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_100299B38(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_100299C50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Font.TextStyle();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_retain();
  v18(v15, v16, v17);
  return a1;
}

uint64_t sub_100299DE4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_1000FF2E0(a1 + v6, &qword_1015CE6F8);
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Font.TextStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_100299FCC(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Font.TextStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_10029A110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_1000FF2E0(a1 + v8, &qword_1015CE6F8);
    uint64_t v11 = sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Font.TextStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_10029A2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029A2DC);
}

uint64_t sub_10029A2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Font.TextStyle();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10029A40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029A420);
}

uint64_t sub_10029A420(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Font.TextStyle();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10029A550(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10029A57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  sub_100299900(319, (unint64_t *)&unk_1015D05B8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v7 <= 0x3F)
  {
    a6(319);
    if (v8 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10029A678(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1000FF33C(&qword_1015D81F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_10029A7EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1000FF33C(&qword_1015D81F0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_10029A8DC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *sub_10029AA00(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1000FF2E0((uint64_t)a1 + v6, &qword_1015CE6F8);
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_10029AB50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *sub_10029AC80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1000FF2E0((uint64_t)a1 + v7, &qword_1015CE6F8);
    uint64_t v10 = sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_10029ADD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029ADE4);
}

uint64_t sub_10029ADE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000FF33C(&qword_1015D81F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10029AF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029AF2C);
}

uint64_t sub_10029AF2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000FF33C(&qword_1015D81F0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10029B060()
{
  sub_100299900(319, (unint64_t *)&unk_1015D05B8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100176ED8(319, (unint64_t *)&unk_1015D8260, (void (*)(void))sub_1001742A0);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10029B174()
{
  return sub_1001010F8(&qword_1015D8C98, (uint64_t *)&unk_1015D8830);
}

unint64_t sub_10029B1B4()
{
  unint64_t result = qword_1015D8CA0;
  if (!qword_1015D8CA0)
  {
    sub_10010118C(&qword_1015D8CA8);
    sub_10010118C(&qword_1015D88B8);
    sub_1001010F8(&qword_1015D88D0, &qword_1015D88B8);
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8CA0);
  }
  return result;
}

unint64_t sub_10029B2C4()
{
  unint64_t result = qword_1015D8CB0;
  if (!qword_1015D8CB0)
  {
    sub_10010118C(&qword_1015D8CB8);
    sub_10010118C(&qword_1015D8A88);
    sub_1001010F8(&qword_1015D8A98, &qword_1015D8A88);
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8CB0);
  }
  return result;
}

uint64_t sub_10029B3D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029B3EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029B408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029B424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029B440()
{
  uint64_t v1 = type metadata accessor for NearbyTransitDepartureView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 28);
  sub_1000FF33C(&qword_1015CE720);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10029B600(uint64_t a1)
{
  return sub_100280660(a1);
}

uint64_t sub_10029B664(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10029B6A4(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_10029B6E4()
{
  unint64_t result = qword_1015D8D70;
  if (!qword_1015D8D70)
  {
    sub_10010118C(&qword_1015D8D68);
    sub_10029248C();
    sub_1001010F8(&qword_1015D0F08, &qword_1015D0F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8D70);
  }
  return result;
}

id sub_10029B78C(void *a1, char a2, void *a3, char a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13)
  {
    sub_10019F7BC(a1, a2 & 1);
    return a5;
  }
  else
  {
    sub_10019F7BC(a3, a4 & 1);
    id v15 = a7;
    return (id)swift_retain();
  }
}

void sub_10029B814(void *a1, char a2, void *a3, char a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13)
  {
    sub_10019F808(a1, a2 & 1);
    uint64_t v14 = a5;
  }
  else
  {
    sub_10019F808(a3, a4 & 1);
    swift_release();
    uint64_t v14 = a7;
  }
}

unint64_t sub_10029B88C()
{
  unint64_t result = qword_1015D8E40;
  if (!qword_1015D8E40)
  {
    sub_10010118C(&qword_1015D8E28);
    sub_10029B92C();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8E40);
  }
  return result;
}

unint64_t sub_10029B92C()
{
  unint64_t result = qword_1015D8E48;
  if (!qword_1015D8E48)
  {
    sub_10010118C(&qword_1015D8E20);
    sub_10029BAEC(&qword_1015D8E50, &qword_1015D8E18, (void (*)(void))sub_10029B9F8);
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8E48);
  }
  return result;
}

uint64_t sub_10029B9F8()
{
  return sub_10029BAEC(&qword_1015D8E58, &qword_1015D8E10, (void (*)(void))sub_10029BA28);
}

unint64_t sub_10029BA28()
{
  unint64_t result = qword_1015D8E60;
  if (!qword_1015D8E60)
  {
    sub_10010118C(&qword_1015D8E08);
    sub_1001010F8(&qword_1015D8E68, &qword_1015D8E00);
    sub_1001010F8(&qword_1015D84E0, &qword_1015D84E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8E60);
  }
  return result;
}

uint64_t sub_10029BAEC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10029BB68()
{
  unint64_t result = qword_1015D0E30;
  if (!qword_1015D0E30)
  {
    sub_10010118C(&qword_1015D0E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0E30);
  }
  return result;
}

unint64_t sub_10029BBE0()
{
  unint64_t result = qword_1015D8E90;
  if (!qword_1015D8E90)
  {
    sub_10010118C(&qword_1015D8E98);
    sub_1001010F8(&qword_1015D8D08, &qword_1015D8CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8E90);
  }
  return result;
}

unint64_t sub_10029BC84()
{
  unint64_t result = qword_1015D8EA0;
  if (!qword_1015D8EA0)
  {
    sub_10010118C(&qword_1015D8EA8);
    sub_10010118C(&qword_1015D89C0);
    sub_100292640(&qword_1015D89B8, &qword_1015D89C0, &qword_1015D89C8, &qword_1015D89D0);
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8EA0);
  }
  return result;
}

unint64_t sub_10029BD90()
{
  unint64_t result = qword_1015D8EB0;
  if (!qword_1015D8EB0)
  {
    sub_10010118C(&qword_1015D8D98);
    sub_10010118C(&qword_1015D8D88);
    sub_1001010F8(&qword_1015D8DA8, &qword_1015D8D88);
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8EB0);
  }
  return result;
}

unint64_t sub_10029BEA0()
{
  unint64_t result = qword_1015D8EB8;
  if (!qword_1015D8EB8)
  {
    sub_10010118C((uint64_t *)&unk_1015D8EC0);
    sub_10010118C(&qword_1015D8E28);
    sub_10029B88C();
    swift_getOpaqueTypeConformance2();
    sub_10028BA3C((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8EB8);
  }
  return result;
}

uint64_t sub_10029BF88(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4 = a2 | a3;
  id v5 = (id)a2;
  id v6 = (id)a3;
  id v7 = v5;
  id v8 = v6;
  if (v4) {
    uint64_t v9 = (uint64_t)[v7 isEqual:v8];
  }
  else {
    uint64_t v9 = 1;
  }

  return v9;
}

BOOL sub_10029C004(id a1, GEOServerFormatToken *a2, GEOServerFormatToken *a3)
{
  unint64_t v4 = a2;
  id v5 = a3;
  char v6 = GEOServerFormatTokenEqual();

  return v6;
}

BOOL sub_10029C058(id a1, GEOTransitIncidentEntity *a2, GEOTransitIncidentEntity *a3)
{
  unint64_t v5 = (unint64_t)a2 | (unint64_t)a3;
  char v6 = a2;
  id v7 = a3;
  id v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = v9;
  if (v5)
  {
    unsigned __int8 v11 = 0;
    if (v8) {
      BOOL v12 = a3 == 0;
    }
    else {
      BOOL v12 = 0;
    }
    char v13 = v12;
    if (v9) {
      BOOL v14 = a2 == 0;
    }
    else {
      BOOL v14 = 0;
    }
    if (!v14 && (v13 & 1) == 0)
    {
      id v15 = [(GEOTransitIncidentEntity *)v8 muid];
      if (v15 == [(GEOTransitIncidentEntity *)v10 muid]
        && (unsigned int v16 = [(GEOTransitIncidentEntity *)v8 hasNextStopIDs],
            v16 == [(GEOTransitIncidentEntity *)v10 hasNextStopIDs]))
      {
        uint64_t v17 = [(GEOTransitIncidentEntity *)v8 nextStopIDs];
        uint64_t v18 = [(GEOTransitIncidentEntity *)v10 nextStopIDs];
        uint64_t v19 = v17 | v18;
        id v20 = (id)v17;
        id v21 = (id)v18;
        if (v19) {
          unsigned __int8 v11 = [v20 isEqual:v21];
        }
        else {
          unsigned __int8 v11 = 1;
        }
      }
      else
      {
        unsigned __int8 v11 = 0;
      }
    }
  }
  else
  {
    unsigned __int8 v11 = 1;
  }

  return v11;
}

id sub_10029C2D8(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v8 = a3;
  id v9 = a1;
  id v10 = [Strong *a4];

  return v10;
}

void sub_10029C620(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    unint64_t v4 = (objc_class *)type metadata accessor for TransitLineContext();
    unint64_t v5 = (char *)objc_allocWithZone(v4);
    *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController] = 0;
    uint64_t v6 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem;
    *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem] = 0;
    *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker] = 0;
    *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController] = 0;
    *(void *)&v5[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController] = 0;
    *(void *)&v5[v6] = a1;
    swift_unknownObjectRetain_n();
    swift_unknownObjectRelease();
    v8.receiver = v5;
    v8.super_class = v4;
    [super init];
    swift_unknownObjectRelease();
    [v3 pushContext:v7 animated:1 completion:0];
  }
}

unint64_t sub_10029C73C()
{
  unint64_t result = qword_1015D8F30;
  if (!qword_1015D8F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F30);
  }
  return result;
}

uint64_t sub_10029C790()
{
  return sub_1001010F8(&qword_1015D8F38, &qword_1015D8F40);
}

uint64_t sub_10029C7CC()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  unint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611AA0);
  sub_1000F2248(v10, (uint64_t)qword_101611AA0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10029CAA4()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611AB8);
  sub_1000F2248(v0, (uint64_t)qword_101611AB8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10029CB08()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611AD0);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611AD0);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10029CBC0()
{
  uint64_t result = swift_getKeyPath();
  qword_101611AE8 = result;
  return result;
}

uint64_t sub_10029CBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10029CC0C, 0, 0);
}

uint64_t sub_10029CC0C()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBEC8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611AE8;
  *(void *)(v0 + 80) = qword_101611AE8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D9040, &qword_1015D9048);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10029CD68;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10029CD68()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10029CEBC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10029CEBC()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611AE8;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10029CF98()
{
  if (qword_1015CBEC8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10029CFF8()
{
  unint64_t result = qword_1015D8F48;
  if (!qword_1015D8F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F48);
  }
  return result;
}

unint64_t sub_10029D050()
{
  unint64_t result = qword_1015D8F50;
  if (!qword_1015D8F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F50);
  }
  return result;
}

uint64_t sub_10029D0A4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10029D0D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029D128@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBEB8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611AB8, a1);
}

uint64_t sub_10029D160@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBEC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611AD0);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10029D1DC(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10029CC0C, 0, 0);
}

uint64_t sub_10029D290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10029E10C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10029D2B8()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_10029D2D8()
{
  unint64_t result = qword_1015D8F60;
  if (!qword_1015D8F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F60);
  }
  return result;
}

unint64_t sub_10029D330()
{
  unint64_t result = qword_1015D8F68;
  if (!qword_1015D8F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F68);
  }
  return result;
}

unint64_t sub_10029D388()
{
  unint64_t result = qword_1015D8F70;
  if (!qword_1015D8F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F70);
  }
  return result;
}

unint64_t sub_10029D3E0()
{
  unint64_t result = qword_1015D8F78;
  if (!qword_1015D8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F78);
  }
  return result;
}

unint64_t sub_10029D438()
{
  unint64_t result = qword_1015D8F80;
  if (!qword_1015D8F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F80);
  }
  return result;
}

unint64_t sub_10029D490()
{
  unint64_t result = qword_1015D8F88;
  if (!qword_1015D8F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F88);
  }
  return result;
}

uint64_t sub_10029D4E4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10029D504, 0, 0);
}

uint64_t sub_10029D504()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)WalkPreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidBusyRoads];
  unsigned char *v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10029D5D0(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10029D5F4, 0, 0);
}

uint64_t sub_10029D5F4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)WalkPreferences) initWithDefaults:v2];

  [v3 setAvoidBusyRoads:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10029D6F8()
{
  unint64_t result = qword_1015D8F90;
  if (!qword_1015D8F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F90);
  }
  return result;
}

unint64_t sub_10029D750()
{
  unint64_t result = qword_1015D8F98;
  if (!qword_1015D8F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8F98);
  }
  return result;
}

unint64_t sub_10029D7A8()
{
  unint64_t result = qword_1015D8FA0;
  if (!qword_1015D8FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8FA0);
  }
  return result;
}

unint64_t sub_10029D800()
{
  unint64_t result = qword_1015D8FA8;
  if (!qword_1015D8FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8FA8);
  }
  return result;
}

uint64_t sub_10029D854@<X0>(uint64_t *a1@<X8>)
{
  sub_10029DAA0();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10029D894@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBEB0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611AA0, a1);
}

uint64_t sub_10029D8CC()
{
  return sub_1001010F8(&qword_1015D8FB0, &qword_1015D8FB8);
}

uint64_t sub_10029D908(uint64_t a1)
{
  unint64_t v2 = sub_10029D2D8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10029D958()
{
  unint64_t result = qword_1015D8FC0;
  if (!qword_1015D8FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8FC0);
  }
  return result;
}

uint64_t sub_10029D9AC(uint64_t a1)
{
  unint64_t v2 = sub_10029DAA0();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10029D9F8(uint64_t a1)
{
  unint64_t v2 = sub_10029D800();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10029DA48()
{
  unint64_t result = qword_1015D8FC8;
  if (!qword_1015D8FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8FC8);
  }
  return result;
}

unint64_t sub_10029DAA0()
{
  unint64_t result = qword_1015D8FD0[0];
  if (!qword_1015D8FD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D8FD0);
  }
  return result;
}

uint64_t sub_10029DAF4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10029DB84, 0, 0);
}

uint64_t sub_10029DB84()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D8F40);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D9040, &qword_1015D9048);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10029DC94(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10029D330();
  void *v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10029DD48()
{
  unint64_t result = qword_1015D8FE8;
  if (!qword_1015D8FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8FE8);
  }
  return result;
}

unint64_t sub_10029DDA0()
{
  unint64_t result = qword_1015D8FF0[0];
  if (!qword_1015D8FF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D8FF0);
  }
  return result;
}

uint64_t sub_10029DDF4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10029D330();
  void *v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10029DEA8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10029D330();
  void *v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10029DF5C()
{
  unint64_t result = qword_1015D9008;
  if (!qword_1015D9008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9008);
  }
  return result;
}

unint64_t sub_10029DFB4()
{
  unint64_t result = qword_1015D9010;
  if (!qword_1015D9010)
  {
    sub_10010118C(qword_1015D9018);
    sub_10029D7A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9010);
  }
  return result;
}

uint64_t sub_10029E028(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10029D490();
  void *v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInWalkingQuery()
{
  return &type metadata for AvoidBusyRoadsInWalkingQuery;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInWalkingEntity()
{
  return &type metadata for AvoidBusyRoadsInWalkingEntity;
}

uint64_t sub_10029E10C()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  unint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D9050);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  id v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10029D2D8();
  uint64_t v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_10029E54C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t withTimeout<A>(seconds:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 32) = a2;
  *(double *)(v5 + 24) = a5;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_10029E584, 0, 0);
}

uint64_t sub_10029E584()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  void *v4 = v0;
  v4[1] = sub_10029E638;
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[2];
  return withTimeout<A>(_:block:)(v8, v1, v3, v7, v5, v6);
}

uint64_t sub_10029E638()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t withTimeout<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = type metadata accessor for ContinuousClock.Instant();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  return _swift_task_switch(sub_10029E860, 0, 0);
}

uint64_t sub_10029E860()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  ContinuousClock.init()();
  ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 120) = v4;
  *(void *)(v0 + 128) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  unint64_t v6 = sub_10029EEF8();
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_10029E9A4;
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 16);
  long long v11 = *(_OWORD *)(v0 + 40);
  *(void *)(v5 + 64) = *(void *)(v0 + 96);
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 56) = v9;
  *(_OWORD *)(v5 + 40) = v11;
  *(void *)(v5 + 24) = v8;
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 16) = v10;
  return _swift_task_switch(sub_10029EC54, 0, 0);
}

uint64_t sub_10029E9A4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10029EB70;
  }
  else {
    uint64_t v2 = sub_10029EAB8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10029EAB8()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10029EB70()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(v0 + 120))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t withDeadline<A, B>(_:clock:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return _swift_task_switch(sub_10029EC54, 0, 0);
}

uint64_t sub_10029EC54()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  long long v3 = *(_OWORD *)(v0 + 40);
  long long v4 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  *(_OWORD *)(v2 + 56) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  void *v5 = v0;
  v5[1] = sub_10029ED58;
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, 0, 0, 0xD00000000000001CLL, 0x8000000100F7C100, sub_10029F8EC, v2, v6);
}

uint64_t sub_10029ED58()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10029EE94, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10029EE94()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_10029EEF8()
{
  unint64_t result = qword_1015D48D0;
  if (!qword_1015D48D0)
  {
    type metadata accessor for ContinuousClock();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D48D0);
  }
  return result;
}

uint64_t withTimeout<A, B>(_:clock:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  v8[11] = *(void *)(AssociatedTypeWitness - 8);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  return _swift_task_switch(sub_10029F044, 0, 0);
}

uint64_t sub_10029F044()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  dispatch thunk of Clock.now.getter();
  swift_getAssociatedConformanceWitness();
  dispatch thunk of InstantProtocol.advanced(by:)();
  long long v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 112) = v4;
  *(void *)(v0 + 120) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v2);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_10029F198;
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v5 + 64) = v9;
  *(_OWORD *)(v5 + 32) = v8;
  *(void *)(v5 + 16) = v7;
  *(void *)(v5 + 24) = v6;
  return _swift_task_switch(sub_10029EC54, 0, 0);
}

uint64_t sub_10029F198()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10029F32C;
  }
  else {
    uint64_t v2 = sub_10029F2AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10029F2AC()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029F32C()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029F3AC(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  long long v55 = a2;
  uint64_t v56 = a3;
  uint64_t v64 = a1;
  uint64_t v54 = a7;
  uint64_t v66 = *(void *)(a7 - 8);
  uint64_t v67 = a8;
  uint64_t v63 = *(void *)(v66 + 64);
  __chkstk_darwin(a1);
  v60 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v59 = *(void *)(v57 + 64);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v68 = (char *)&v44 - v11;
  sub_10010118C(&qword_1015D98E0);
  uint64_t v51 = a6;
  uint64_t v12 = type metadata accessor for CheckedContinuation();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v50 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v65 = v18;
  type metadata accessor for TimeoutActor();
  uint64_t v19 = swift_allocObject();
  swift_defaultActor_initialize();
  *(unsigned char *)(v19 + 112) = 0;
  uint64_t v47 = type metadata accessor for TaskPriority();
  uint64_t v20 = *(void *)(v47 - 8);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v48 = v20 + 56;
  v46(v18, 1, 1, v47);
  uint64_t v21 = v13;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v49(v15, v64, v12);
  uint64_t v22 = *(unsigned __int8 *)(v13 + 80);
  id v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0;
  *((void *)v23 + 4) = a6;
  uint64_t v24 = v54;
  uint64_t v25 = v67;
  *((void *)v23 + 5) = v54;
  *((void *)v23 + 6) = v25;
  uint64_t v26 = v56;
  *((void *)v23 + 7) = v55;
  *((void *)v23 + 8) = v26;
  *((void *)v23 + 9) = v19;
  unsigned int v27 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v52 = v19;
  uint64_t v53 = v21 + 32;
  long long v55 = v27;
  uint64_t v28 = v15;
  long long v45 = v15;
  uint64_t v44 = v12;
  v27(&v23[(v22 + 80) & ~v22], v15, v12);
  swift_retain();
  swift_retain();
  uint64_t v29 = (uint64_t)v65;
  uint64_t v56 = sub_100042AF4((uint64_t)v65, (uint64_t)&unk_1015D9150, (uint64_t)v23);
  v46((char *)v29, 1, 1, v47);
  uint64_t v31 = v57;
  uint64_t v30 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v68, v61, v58);
  uint64_t v32 = v66;
  uint64_t v33 = v60;
  uint64_t v34 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v60, v62, v24);
  v49(v28, v64, v12);
  uint64_t v35 = v31;
  unint64_t v36 = (*(unsigned __int8 *)(v31 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v37 = (v59 + *(unsigned __int8 *)(v32 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v38 = (v63 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (v22 + v39 + 8) & ~v22;
  v41 = (char *)swift_allocObject();
  *((void *)v41 + 2) = 0;
  *((void *)v41 + 3) = 0;
  *((void *)v41 + 4) = v51;
  *((void *)v41 + 5) = v34;
  NSString v42 = v68;
  *((void *)v41 + 6) = v67;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v41[v36], v42, v30);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v41[v37], v33, v34);
  *(void *)&v41[v38] = v52;
  *(void *)&v41[v39] = v56;
  v55(&v41[v40], v45, v44);
  sub_100042AF4((uint64_t)v65, (uint64_t)&unk_1015D9160, (uint64_t)v41);
  return swift_release();
}

uint64_t sub_10029F8EC(uint64_t a1)
{
  return sub_10029F3AC(a1, *(void (**)(char *, char *, uint64_t))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

ValueMetadata *type metadata accessor for TimeoutError()
{
  return &type metadata for TimeoutError;
}

uint64_t sub_10029F910(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[4] = a7;
  v8[5] = a8;
  v8[3] = a6;
  v8[6] = *(void *)(a8 - 8);
  v8[7] = swift_task_alloc();
  uint64_t v10 = swift_task_alloc();
  v8[8] = v10;
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v8[9] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_10029FA60;
  return v13(v10);
}

uint64_t sub_10029FA60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10029FE48;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v3 = sub_10029FB7C;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_10029FB7C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t v2 = sub_10029FCA8;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_10029FBBC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10029FBBC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 16))(v0[7], v1, v2);
  sub_10010118C(&qword_1015D98E0);
  type metadata accessor for CheckedContinuation();
  CheckedContinuation.resume(returning:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10029FCA8()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[8], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10029FD28()
{
  v0[2] = v0[10];
  sub_10010118C(&qword_1015D98E0);
  type metadata accessor for CheckedContinuation();
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10029FDD8()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029FE48()
{
  return _swift_task_switch(sub_10029FE64, *(void *)(v0 + 24), 0);
}

uint64_t sub_10029FE64()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t v2 = sub_10029FDD8;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_10029FD28;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10029FEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = v13;
  v8[11] = v14;
  v8[8] = a8;
  v8[9] = v12;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v8[12] = swift_getAssociatedTypeWitness();
  uint64_t v9 = type metadata accessor for Optional();
  v8[13] = v9;
  v8[14] = *(void *)(v9 - 8);
  v8[15] = swift_task_alloc();
  return _swift_task_switch(sub_10029FF9C, 0, 0);
}

uint64_t sub_10029FF9C()
{
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0[12] - 8) + 56))(v0[15], 1, 1);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  void *v1 = v0;
  v1[1] = sub_1002A0074;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  return static Task<>.sleep<A>(until:tolerance:clock:)(v6, v2, v5, v3, v4);
}

uint64_t sub_1002A0074()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 120);
  uint64_t v4 = *(void *)(*v1 + 112);
  uint64_t v5 = *(void *)(*v1 + 104);
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    uint64_t v6 = sub_1002A04B8;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 48);
    uint64_t v6 = sub_1002A01F4;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_1002A01F4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v1 + 112))
  {
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    return _swift_task_switch(sub_1002A02A0, 0, 0);
  }
}

uint64_t sub_1002A02A0()
{
  Task.cancel()();
  sub_1001EBC10();
  *(void *)(v0 + 24) = swift_allocError();
  sub_10010118C(&qword_1015D98E0);
  type metadata accessor for CheckedContinuation();
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A0384()
{
  uint64_t v1 = v0[17];
  Task.cancel()();
  v0[2] = v1;
  sub_10010118C(&qword_1015D98E0);
  type metadata accessor for CheckedContinuation();
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1002A0450()
{
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A04B8()
{
  return _swift_task_switch(sub_1002A04D4, *(void *)(v0 + 48), 0);
}

uint64_t sub_1002A04D4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t v2 = sub_1002A0450;
  }
  else
  {
    *(unsigned char *)(v1 + 112) = 1;
    uint64_t v2 = sub_1002A0384;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A0514()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for TimeoutActor()
{
  return self;
}

uint64_t sub_1002A0568()
{
  return v0;
}

uint64_t sub_1002A0574()
{
  sub_10010118C(&qword_1015D98E0);
  uint64_t v1 = type metadata accessor for CheckedContinuation();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002A0670(uint64_t a1)
{
  uint64_t v3 = v1[4];
  sub_10010118C(&qword_1015D98E0);
  uint64_t v4 = *(void *)(type metadata accessor for CheckedContinuation() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (int *)v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100105268;
  return sub_10029F910(a1, v5, v6, v7, v8, v9, v10, v3);
}

uint64_t sub_1002A07B8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v16 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = (v3 + 56) & ~v3;
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v15 + *(void *)(v2 + 64) + v5) & ~v5;
  unint64_t v13 = (((*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_10010118C(&qword_1015D98E0);
  uint64_t v7 = type metadata accessor for CheckedContinuation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v13 + v9 + 8) & ~v9;
  uint64_t v14 = v10 + *(void *)(v8 + 64);
  uint64_t v11 = v3 | v5 | v9 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v15, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v16);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);

  return _swift_deallocObject(v0, v14, v11);
}

uint64_t sub_1002A09FC(uint64_t a1)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v6 = (*(void *)(*(void *)(v2 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_10010118C(&qword_1015D98E0);
  uint64_t v8 = *(void *)(type metadata accessor for CheckedContinuation() - 8);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + v4;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = (uint64_t)v1 + v5;
  uint64_t v14 = *(void *)((char *)v1 + v7);
  uint64_t v15 = (uint64_t)v1 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v18 + 16) = v16;
  void *v16 = v18;
  v16[1] = sub_10005056C;
  return sub_10029FEA4(a1, v9, v10, v11, v13, v12, v14, v15);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitServerOverride()
{
  return &type metadata for PlaceSummaryUnitServerOverride;
}

id sub_1002A0C88()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___modalHeaderView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___modalHeaderView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___modalHeaderView);
  }
  else
  {
    id v4 = sub_1002A0CEC(v0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002A0CEC(uint64_t a1)
{
  id v2 = [self defaultModalCardHeaderConfiguration];
  id v3 = [objc_allocWithZone((Class)ModalCardHeaderView) initWithConfiguration:v2];

  [v3 setUseAdaptiveFont:1];
  id v4 = [v3 bottomHairline];
  [v4 setHidden:1];

  id v5 = [v3 leadingButton];
  NSString v6 = sub_100AEBD5C();
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v5 setTitle:v6 forState:0];

  id v7 = [v3 leadingButton];
  [v7 addTarget:a1 action:"cancelTapped" forControlEvents:64];

  return v3;
}

id sub_1002A0E4C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___tableView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___tableView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___tableView);
  }
  else
  {
    id v4 = sub_1002A0EAC();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002A0EAC()
{
  id v0 = [objc_allocWithZone((Class)MapsThemeTableView) initWithFrame:2 style:0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 clearColor];
  [v2 setBackgroundColor:v3];

  [v2 setPreservesSuperviewLayoutMargins:1];
  id v4 = v2;
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setAccessibilityIdentifier:v5];

  return v4;
}

Swift::Void __swiftcall CollectionPickerContaineeViewController.viewDidLoad()()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 cardPresentationController];
  if (v1)
  {
    id v2 = v1;
    [v1 setTakesAvailableHeight:1];

    id v3 = [v0 cardPresentationController];
    if (v3)
    {
      id v4 = v3;
      [v3 setPresentedModally:1];

      sub_1002A11BC();
      sub_1002A17A0();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1002A11BC()
{
  id v1 = [v0 headerView];
  if (!v1) {
    return;
  }
  id v2 = v1;
  id v3 = sub_1002A0C88();
  [v2 addSubview:v3];

  id v4 = sub_1002A0C88();
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v53._countAndFlagsBits = 0xD00000000000004ELL;
  v53._object = (void *)0x8000000100F82490;
  v5._object = (void *)0x8000000100F82460;
  v5._countAndFlagsBits = 0xD000000000000022;
  v6._countAndFlagsBits = 0x61206F7420646441;
  v6._object = (void *)0xEE00656469754720;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)qword_101611820, v6, v53);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setTitle:v7];

  id v8 = [v0 contentView];
  if (!v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v9 = v8;
  id v10 = sub_1002A0E4C();
  [v9 addSubview:v10];

  sub_1000FF33C(&qword_1015CD310);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100F5E870;
  id v12 = sub_1002A0C88();
  id v13 = [v12 leadingAnchor];

  id v14 = [v2 leadingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v11 + 32) = v15;
  id v16 = sub_1002A0C88();
  id v17 = [v16 topAnchor];

  id v18 = [v2 topAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v11 + 40) = v19;
  id v20 = sub_1002A0C88();
  id v21 = [v20 trailingAnchor];

  id v22 = [v2 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v11 + 48) = v23;
  id v24 = sub_1002A0C88();
  id v25 = [v24 bottomAnchor];

  id v26 = [v2 bottomAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v11 + 56) = v27;
  id v28 = sub_1002A0E4C();
  id v29 = [v28 topAnchor];

  id v30 = [v2 bottomAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v11 + 64) = v31;
  id v32 = sub_1002A0E4C();
  id v33 = [v32 leadingAnchor];

  id v34 = [v0 contentView];
  if (!v34)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v35 = v34;
  id v36 = [v34 leadingAnchor];

  id v37 = [v33 constraintEqualToAnchor:v36];
  *(void *)(v11 + 72) = v37;
  id v38 = sub_1002A0E4C();
  id v39 = [v38 trailingAnchor];

  id v40 = [v0 contentView];
  if (!v40)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v41 = v40;
  id v42 = [v40 trailingAnchor];

  id v43 = [v39 constraintEqualToAnchor:v42];
  *(void *)(v11 + 80) = v43;
  id v44 = sub_1002A0E4C();
  id v45 = [v44 bottomAnchor];

  id v46 = [v0 contentView];
  if (!v46)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v47 = v46;
  uint64_t v48 = self;
  id v49 = [v47 bottomAnchor];

  id v50 = [v45 constraintEqualToAnchor:v49];
  *(void *)(v11 + 88) = v50;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v48 activateConstraints:isa];
}

void sub_1002A17A0()
{
  id v1 = sub_1002A0E4C();
  id v2 = [objc_allocWithZone((Class)CollectionListDataSource) initWithTableView:v1 editSession:*(void *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionSession) showsAddCollection:1];

  [v2 setCellsSize:1];
  [v2 setDelegate:v0];
  id v3 = sub_1002A0E4C();
  [v3 setDelegate:v2];

  id v4 = sub_1002A0E4C();
  [v4 setDataSource:v2];

  Swift::String v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionListDataSource);
  *(void *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionListDataSource) = v2;
  id v6 = v2;

  [v6 setActive:1];
}

Swift::Void __swiftcall CollectionPickerContaineeViewController.dataSourceUpdated(_:)(DataSource_optional *a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionListDataSource);
  if (a1)
  {
    if (!v2) {
      return;
    }
    id v3 = a1;
    sub_100100830(0, &qword_1015D9178);
    id v4 = v2;
    Swift::String v5 = v3;
    LOBYTE(v3) = static NSObject.== infix(_:_:)();

    if ((v3 & 1) == 0) {
      return;
    }
  }
  else
  {
    if (v2) {
      return;
    }
    id v6 = 0;
  }
  id v7 = sub_1002A0E4C();
  [v7 reloadData];
}

void CollectionPickerContaineeViewController.dataSource(_:itemTapped:)(uint64_t a1, uint64_t a2)
{
}

uint64_t CollectionPickerContaineeViewController.dataSource(_:confirmDeleteCollections:sourceView:sourceRect:)()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002A1C74, v2, v1);
}

uint64_t sub_1002A1C74()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1002A1E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  v5[6] = type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002A1F38, v7, v6);
}

uint64_t sub_1002A1F38()
{
  uint64_t v1 = (const void *)v0[4];
  uint64_t v2 = (void *)v0[5];
  uint64_t v4 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  swift_release();
  v0[8] = _Block_copy(v1);
  id v5 = v3;
  id v6 = v2;
  id v7 = v4;
  v0[9] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002A1FF8, v9, v8);
}

uint64_t sub_1002A1FF8()
{
  uint64_t v1 = (void (**)(void, void))v0[8];
  uint64_t v2 = (void *)v0[5];
  uint64_t v4 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  swift_release();

  v1[2](v1, 0);
  _Block_release(v1);
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

void CollectionPickerContaineeViewController.init(nibName:bundle:)()
{
}

void sub_1002A21F0(uint64_t a1)
{
  sub_10011D518(a1, (uint64_t)v4);
  if (v5)
  {
    sub_100100830(0, (unint64_t *)&qword_1015D9240);
    if (swift_dynamicCast())
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong collectionPickerContaineeViewController:v1 selectCollection:v3];

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
  else
  {
    sub_1001189D4((uint64_t)v4);
  }
}

uint64_t type metadata accessor for CollectionPickerContaineeViewController()
{
  return self;
}

uint64_t sub_1002A22DC()
{
  _Block_release(*(const void **)(v0 + 72));

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1002A2334()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10005056C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1015D9230 + dword_1015D9230);
  return v8(v2, v3, v4, v6, v5);
}

id sub_1002A2470(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((void *)v3 + 8) = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider;
  id v5 = objc_allocWithZone((Class)type metadata accessor for NearbyTransitDeparturesProvider());
  uint64_t v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView] = 0;
  v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition] = 1;
  *(void *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator] = 0;
  *(void *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_initialMapViewMode] = 0;

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  [super initWithCoder:a1];

  return v7;
}

void sub_1002A2580()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for NearbyTransitViewController();
  v57.receiver = v0;
  v57.super_class = v2;
  [super viewDidLoad];
  id v3 = [v0 headerView];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v0 view];
    if (v5)
    {
      uint64_t v6 = v5;
      NSString v7 = String._bridgeToObjectiveC()();
      [v6 setAccessibilityIdentifier:v7];

      id v8 = [objc_allocWithZone((Class)ContainerHeaderView) initWithCardButtonType:0];
      if (v8)
      {
        objc_super v9 = v8;
        uint64_t v54 = v2;
        [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
        [v9 setDelegate:v1];
        [v9 setHairLineAlpha:0.0];
        [v4 addSubview:v9];
        id v10 = [objc_allocWithZone((Class)UIView) init];
        [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v11 = [objc_allocWithZone((Class)UILabel) init];
        [v10 addSubview:v11];
        [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v12._countAndFlagsBits = 0xD00000000000001FLL;
        v58._countAndFlagsBits = 0xD000000000000022;
        v58._object = (void *)0x8000000100F82660;
        v12._object = (void *)0x8000000100F82640;
        v13._countAndFlagsBits = 0x542079627261654ELL;
        v13._object = (void *)0xEE007469736E6172;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_101611820, v13, v58);
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v11 setText:v14];

        [v11 setNumberOfLines:2];
        id v15 = [self _preferredFontForTextStyle:UIFontTextStyleTitle1 weight:UIFontWeightBold];
        [v11 setFont:v15];

        id v55 = self;
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_100F62DB0;
        id v17 = [v11 leadingAnchor];
        id v18 = [v10 leadingAnchor];
        id v19 = [v17 constraintEqualToAnchor:v18 constant:16.0];

        *(void *)(v16 + 32) = v19;
        id v20 = [v11 trailingAnchor];
        id v21 = [v10 trailingAnchor];
        id v22 = [v20 constraintEqualToAnchor:v21 constant:-16.0];

        *(void *)(v16 + 40) = v22;
        id v23 = [v11 topAnchor];
        id v24 = [v10 topAnchor];
        id v25 = [v23 constraintEqualToAnchor:v24 constant:16.0];

        *(void *)(v16 + 48) = v25;
        id v26 = [v11 bottomAnchor];
        id v27 = [v10 bottomAnchor];
        id v28 = [v26 constraintEqualToAnchor:v27 constant:-14.0];

        *(void *)(v16 + 56) = v28;
        specialized Array._endMutation()();
        sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v55 activateConstraints:isa];

        [v9 setTitleView:v10];
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_100F62DB0;
        id v31 = [v9 leadingAnchor];
        id v32 = [v4 leadingAnchor];
        id v33 = [v31 constraintEqualToAnchor:v32];

        *(void *)(v30 + 32) = v33;
        id v34 = [v9 trailingAnchor];
        id v35 = [v4 trailingAnchor];
        id v36 = [v34 constraintEqualToAnchor:v35];

        *(void *)(v30 + 40) = v36;
        id v37 = [v9 topAnchor];
        id v38 = [v4 topAnchor];
        id v39 = [v37 constraintEqualToAnchor:v38];

        *(void *)(v30 + 48) = v39;
        id v40 = [v9 bottomAnchor];
        id v41 = [v4 bottomAnchor];
        id v42 = [v40 constraintEqualToAnchor:v41];

        *(void *)(v30 + 56) = v42;
        v56[0] = v30;
        specialized Array._endMutation()();
        Class v43 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v55 activateConstraints:v43];

        uint64_t v2 = v54;
      }
      sub_100100830(0, &qword_1015D93D0);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      sub_1000FF33C(&qword_1015D93D8);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_100F5CF70;
      *(void *)(v45 + 32) = v2;
      sub_1000FF33C((uint64_t *)&unk_1015D93E0);
      Class v46 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v47 = [ObjCClassFromMetadata appearanceWhenContainedInInstancesOfClasses:v46];

      id v48 = [self clearColor];
      [v47 setBackgroundColor:v48];

      uint64_t v49 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider;
      id v50 = *(void **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
      v56[3] = v2;
      v56[4] = &off_1012E14B0;
      v56[0] = v1;
      uint64_t v51 = (uint64_t)v50 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
      swift_beginAccess();
      id v52 = v50;
      Swift::String v53 = v1;
      sub_1002A4B6C((uint64_t)v56, v51);
      swift_endAccess();

      sub_1002A2E10();
      sub_1002A3460();
      *(void *)(*(void *)&v1[v49] + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_delegate + 8) = &off_1012E14D8;
      swift_unknownObjectWeakAssign();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002A2E10()
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  type metadata accessor for NearbyTransitDeparturesProvider();
  sub_1002A4CD8(&qword_1015D93F0, (void (*)(uint64_t))type metadata accessor for NearbyTransitDeparturesProvider);
  uint64_t v1 = EnvironmentObject.init()();
  id v58 = v0;
  uint64_t v2 = (uint64_t *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 8];
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 16];
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 24];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 32];
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 40];
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 48];
  id v10 = *(void **)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 56];
  uint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 64];
  uint64_t *v2 = v59;
  *(_OWORD *)(v2 + 1) = v60;
  v2[3] = v61;
  v2[4] = v62;
  v2[5] = v59;
  v2[6] = v60;
  v2[7] = v1;
  v2[8] = v12;
  uint64_t v57 = v11;
  sub_1002A4BD4(v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v13 = v2[1];
  if (v13)
  {
    NSString v14 = (void *)v2[7];
    uint64_t v15 = v2[8];
    uint64_t v16 = v2[5];
    uint64_t v17 = v2[6];
    uint64_t v19 = v2[3];
    uint64_t v18 = v2[4];
    uint64_t v20 = v2[2];
    uint64_t v21 = *v2;
    id v22 = *(void **)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
    uint64_t v57 = v15;
    sub_1002A4C58(v21, v13, v20, v19, v18, v16, v17, v14);
    v22;
    static ObservableObject.environmentStore.getter();
  }
  else
  {
    LODWORD(v21) = 0;
  }
  id v23 = objc_allocWithZone((Class)sub_1000FF33C(&qword_1015D93F8));
  id v24 = (void *)UIHostingController.init(rootView:)();
  [v0 addChildViewController:v24];
  id v25 = [v0 contentView];
  if (v25)
  {
    id v26 = v25;
    id v27 = [v24 view];
    if (!v27)
    {
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    id v28 = v27;
    [v26 addSubview:v27];
  }
  [v24 didMoveToParentViewController:v58];
  id v29 = [v24 view];
  if (!v29)
  {
LABEL_13:

    return;
  }
  uint64_t v30 = v29;
  [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v31 = [self clearColor];
  [v30 setBackgroundColor:v31];

  type metadata accessor for UILayoutPriority(0);
  sub_1002A4CD8((unint64_t *)&qword_1015D9400, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v32) = v21;
  [v30 setContentHuggingPriority:1 forAxis:v32];
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v33) = v21;
  [v30 setContentCompressionResistancePriority:1 forAxis:v33];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_100F62DB0;
  id v35 = [v30 leadingAnchor];
  id v36 = [v58 contentView];
  if (!v36) {
    goto LABEL_15;
  }
  id v37 = v36;
  id v38 = [v36 leadingAnchor];

  id v39 = [v35 constraintEqualToAnchor:v38];
  *(void *)(v34 + 32) = v39;
  id v40 = [v30 trailingAnchor];
  id v41 = [v58 contentView];
  if (!v41)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v42 = v41;
  id v43 = [v41 trailingAnchor];

  id v44 = [v40 constraintEqualToAnchor:v43];
  *(void *)(v34 + 40) = v44;
  id v45 = [v30 topAnchor];
  id v46 = [v58 contentView];
  if (!v46)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v47 = v46;
  id v48 = [v46 topAnchor];

  id v49 = [v45 constraintEqualToAnchor:v48];
  *(void *)(v34 + 48) = v49;
  id v50 = [v30 bottomAnchor];
  id v51 = [v58 contentView];
  if (v51)
  {
    id v52 = v51;
    Swift::String v53 = self;
    id v54 = [v52 bottomAnchor];

    id v55 = [v50 constraintEqualToAnchor:v54];
    *(void *)(v34 + 56) = v55;
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v53 activateConstraints:isa];

    goto LABEL_13;
  }
LABEL_18:
  __break(1u);
}

void sub_1002A3460()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView);
  if (v2)
  {
    uint64_t v3 = v2;
    if (![v3 isUserLocationVisible]) {
      goto LABEL_6;
    }
    id v4 = [self sharedLocationManager];
    if (!v4)
    {
      __break(1u);
      return;
    }
    uint64_t v5 = v4;
    unsigned int v6 = [v4 isAuthorizedForPreciseLocation];

    if (v6)
    {
      id v21 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
      sub_10013699C();
    }
    else
    {
LABEL_6:

      uint64_t v7 = *(void **)(v0 + v1);
      if (!v7) {
        return;
      }
      id v21 = v7;
      [v21 centerCoordinate];
      id v10 = [objc_allocWithZone((Class)GEOLocation) initWithLatitude:v8 longitude:v9];
      if (v10)
      {
        uint64_t v11 = v10;
        [v21 _zoomLevel];
        uint64_t v13 = v12;
        NSString v14 = *(unsigned char **)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
        v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser] = 0;
        uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation];
        *(void *)&v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation] = v11;
        uint64_t v3 = v14;
        id v16 = v11;

        uint64_t v17 = (char *)v3 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel;
        *(void *)uint64_t v17 = v13;
        v17[8] = 0;
        sub_100136EEC();
      }
      else
      {
        if (qword_1015CBD38 != -1) {
          swift_once();
        }
        uint64_t v18 = type metadata accessor for Logger();
        sub_1000F2248(v18, (uint64_t)qword_101611760);
        uint64_t v3 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v3, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl((void *)&_mh_execute_header, v3, v19, "Unable to get the center coordinates from mapView when requesting nearby departures", v20, 2u);
          swift_slowDealloc();
        }
      }
    }
  }
}

void sub_1002A371C(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = *(unsigned char **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
  uint64_t v4 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive;
  v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive] = 1;
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater];
  if (v5)
  {
    unsigned int v6 = v3;
    [v5 setActive:1];
    if ((v3[v4] & 1) == 0)
    {
      uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate];
      if (v7)
      {
        [v7 cancel];

        goto LABEL_7;
      }
    }
  }
  else
  {
    double v8 = v3;
  }

LABEL_7:
  double v9 = *(void **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator];
  if (v9)
  {
    if ([*(id *)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator] displayedViewMode] != (id)3) [v9 setViewMode:3 animated:1]; {
  }
    }
}

id sub_1002A3888(char a1)
{
  uint64_t v3 = *(unsigned char **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
  uint64_t v4 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive;
  v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive] = 0;
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater];
  if (v5)
  {
    unsigned int v6 = v3;
    [v5 setActive:0];
    if (v3[v4]) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v7 = v3;
  }
  double v8 = *(void **)&v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate];
  if (v8) {
    [v8 cancel];
  }
LABEL_7:

  double v9 = *(void **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator];
  if (v9)
  {
    id v10 = [*(id *)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator] displayedViewMode];
    if (v10 != *(id *)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_initialMapViewMode]) {
      [v9 setViewMode:];
    }
  }
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  return [super viewWillDisappear:a1 & 1];
}

void sub_1002A39F0()
{
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  if ((v3 & 1) == 0 && sub_1001DCAB4())
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
    if (v4)
    {
      [v4 showNearbyTeachableMomentCard];
    }
  }
}

id sub_1002A3B58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for NearbyTransitViewController()
{
  return self;
}

void sub_1002A3C3C(uint64_t a1)
{
  id v3 = [self standardUserDefaults];
  NSString v4 = String._bridgeToObjectiveC()();
  unsigned __int8 v5 = [v3 BOOLForKey:v4];

  if ((v5 & 1) == 0)
  {
    if (*(void *)(a1 + 16))
    {
      unsigned int v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
      if (v6)
      {
        [v6 showNearbyTeachableMomentCard];
      }
    }
  }
}

uint64_t sub_1002A3DB4(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v33 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  NSString v14 = (char *)&v30 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = a1[9];
  id v19 = [(id)swift_unknownObjectRetain() timeZone];
  if (v19)
  {
    uint64_t v20 = v19;
    static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = type metadata accessor for TimeZone();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 1, 1, v22);
  }
  sub_1002A4D20((uint64_t)v14, (uint64_t)v17);
  sub_1002A40F4(v3, a1, (uint64_t)v8);
  id v23 = *(void **)(v3 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
  if (v23)
  {
    uint64_t v31 = v3;
    uint64_t v32 = v5;
    sub_1002A4D88((uint64_t)v17, (uint64_t)v11);
    uint64_t v24 = type metadata accessor for TimeZone();
    uint64_t v25 = *(void *)(v24 - 8);
    int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24);
    swift_unknownObjectRetain();
    Class isa = 0;
    if (v26 != 1)
    {
      Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v24);
    }
    Class v28 = Date._bridgeToObjectiveC()().super.isa;
    [v23 viewController:v31 displayTransitSchedulesForDepartureSequence:v18 withTimeZone:isa scheduleWindowStartDate:v28 includeAllDirections:v33 & 1];
    swift_unknownObjectRelease_n();

    uint64_t v5 = v32;
  }
  else
  {
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1000FF2E0((uint64_t)v17, (uint64_t *)&unk_1015D9A00);
}

uint64_t sub_1002A40F4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v6 - 8);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
  swift_getKeyPath();
  swift_getKeyPath();
  id v17 = v16;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v18 = a2[1];
  if ((v18 & 0x2000000000000000) != 0)
  {
    if ((v18 & 0xF00000000000000) != 0) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v15, v9);
    }
  }
  else if ((*a2 & 0xFFFFFFFFFFFFLL) != 0)
  {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v15, v9);
  }
  id v19 = (void *)a2[9];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v21 = [v19 serviceResumesAfterDate:isa];

  if (v21)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v22(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v22)(a3, v8, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_1000FF2E0((uint64_t)v8, (uint64_t *)&unk_1015D9410);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v15, v9);
}

id sub_1002A44A0(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((void *)v3 + 8) = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider;
  id v5 = objc_allocWithZone((Class)type metadata accessor for NearbyTransitDeparturesProvider());
  uint64_t v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView;
  *(void *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView] = 0;
  uint64_t v8 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition;
  v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition] = 1;
  id v9 = [a1 containerViewController];
  id v10 = v9;
  if (v9)
  {
    id v11 = [v9 chromeViewController];

    if (v11)
    {
      id v10 = [v11 mapView];
    }
    else
    {
      id v10 = 0;
    }
  }
  uint64_t v12 = *(void **)&v6[v7];
  *(void *)&v6[v7] = v10;

  id v13 = [a1 displayedViewMode];
  *(void *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_initialMapViewMode] = v13;
  *(void *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator] = a1;
  uint64_t v14 = self;
  swift_unknownObjectRetain();
  id v15 = [v14 standardUserDefaults];
  NSString v16 = String._bridgeToObjectiveC()();
  unsigned __int8 v17 = [v15 BOOLForKey:v16];

  v6[v8] = v17 ^ 1;
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  return [super initWithNibName:0 bundle:0];
}

void sub_1002A4684(id a1)
{
  uint64_t v2 = v1;
  if (v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition] != 1
    || ![a1 isUserLocationVisible])
  {
    goto LABEL_9;
  }
  id v4 = [self sharedLocationManager];
  if (!v4)
  {
    __break(1u);
    return;
  }
  id v5 = v4;
  unsigned int v6 = [v4 isAuthorizedForPreciseLocation];

  if (v6)
  {
    uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
    if ((*((unsigned char *)v7 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) & 1) == 0)
    {
      id v30 = v7;
      sub_10013699C();
    }
  }
  else
  {
LABEL_9:
    if ((char *)[a1 userTrackingMode] - 1 >= (char *)2)
    {
      if (qword_1015CBD38 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_1000F2248(v8, (uint64_t)qword_101611760);
      id v9 = a1;
      id v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v29 = v2;
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        id v13 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 138412290;
        id v31 = v9;
        id v14 = v9;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v13 = v9;

        uint64_t v2 = v29;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "changed visible region on mapview: %@", v12, 0xCu);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      [v9 centerCoordinate:v29, v31];
      id v17 = [objc_allocWithZone((Class)GEOLocation) initWithLatitude:v15 longitude:v16];
      if (v17)
      {
        uint64_t v18 = v17;
        [v9 _zoomLevel];
        uint64_t v20 = v19;
        id v21 = *(unsigned char **)&v2[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
        v21[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser] = 0;
        uint64_t v22 = *(void **)&v21[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation];
        *(void *)&v21[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation] = v18;
        id v23 = v21;
        id v24 = v18;

        uint64_t v25 = &v23[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel];
        *(void *)uint64_t v25 = v20;
        v25[8] = 0;
        sub_100136EEC();
      }
      else
      {
        int v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v26, v27))
        {
          Class v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Class v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to get updated center coordinates from mapView", v28, 2u);
          swift_slowDealloc();
        }
      }
    }
  }
}

void sub_1002A4A48(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) <= 1)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
    if ((*((unsigned char *)v2 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) & 1) == 0)
    {
      id v3 = v2;
      sub_10013699C();
    }
  }
  if (qword_1015CBD38 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000F2248(v4, (uint64_t)qword_101611760);
  oslog = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    unsigned int v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Map mode switched to tracking, requesting the data provider to use the user location instead", v6, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1002A4B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015CF2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1002A4BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1002A4C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a2)
  {
    id v8 = a8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1002A4CD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002A4D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A4D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1002A4E1C(char *a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)&a1[*a3];
  uint64_t v4 = a1;
  id v5 = [v3 text];
  if (v5)
  {
    unsigned int v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {

    NSString v7 = 0;
  }

  return v7;
}

void sub_1002A4EC8(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    unsigned int v6 = *(void **)&a1[*a4];
    NSString v7 = a1;
    id v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v6 = *(void **)&a1[*a4];
    id v8 = a1;
    id v9 = 0;
  }
  [v6 setText:v9];
}

void sub_1002A5000(uint64_t a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_imageView);
  uint64_t v4 = OBJC_IVAR____TtC4Maps14EmptyStateView_image;
  [v3 setImage:*(void *)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_image)];
  [v3 setHidden:*(void *)(v1 + v4) == 0];
  uint64_t v5 = *(void *)(v1 + v4);
  if ((a1 == 0) == (v5 != 0))
  {
    unsigned int v6 = self;
    sub_10010B37C();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 deactivateConstraints:isa];

    swift_bridgeObjectRetain();
    Class v8 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 activateConstraints:v8];
  }
}

void sub_1002A51A0(char *a1, uint64_t a2, void *a3, void *a4, void (*a5)(void *))
{
  NSString v7 = *(void **)&a1[*a4];
  *(void *)&a1[*a4] = a3;
  id v9 = a3;
  Class v8 = a1;
  a5(v7);
}

void sub_1002A521C(void *a1)
{
  uint64_t v2 = v1;
  if (a1) {
    [a1 removeFromSuperview];
  }
  id v3 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_button];
  if (v3)
  {
    id v4 = v3;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v1 addSubview:v4];
    uint64_t v5 = self;
    uint64_t v6 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
    sub_10010B37C();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 deactivateConstraints:isa];

    sub_1000FF33C(&qword_1015CD310);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100F5E000;
    id v9 = [v4 centerXAnchor];
    id v10 = [v2 centerXAnchor];
    id v11 = [v9 constraintEqualToAnchor:v10];

    *(void *)(v8 + 32) = v11;
    id v12 = [v4 leadingAnchor];
    id v13 = [v2 leadingAnchor];
    id v14 = [v12 constraintGreaterThanOrEqualToAnchor:v13];

    *(void *)(v8 + 40) = v14;
    id v15 = [v4 trailingAnchor];
    id v16 = [v2 trailingAnchor];
    id v17 = [v15 constraintLessThanOrEqualToAnchor:v16];

    *(void *)(v8 + 48) = v17;
    specialized Array._endMutation()();
    Class v18 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 activateConstraints:v18];

    *(void *)&v2[v6] = sub_1002A55A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v22 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 activateConstraints:v22];
  }
  else
  {
    uint64_t v19 = self;
    uint64_t v20 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
    sub_10010B37C();
    swift_bridgeObjectRetain();
    Class v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 deactivateConstraints:v21];

    *(void *)&v1[v20] = sub_1002A55A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v22 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 activateConstraints:v22];
  }
}

uint64_t sub_1002A55A0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_button];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle + 8];
    sub_1000FF33C(&qword_1015CD310);
    if (v2)
    {
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100F5E000;
      id v4 = v1;
      id v5 = [v4 topAnchor];
      id v6 = [*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel] bottomAnchor];
      id v7 = [v5 constraintEqualToAnchor:v6 constant:12.0];

      *(void *)(v3 + 32) = v7;
      uint64_t v8 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
      id v9 = [*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView] topAnchor];
      id v10 = [v4 bottomAnchor];
      id v11 = [v9 constraintEqualToAnchor:v10 constant:16.0];

      *(void *)(v3 + 40) = v11;
      id v12 = [*(id *)&v0[v8] bottomAnchor];
      id v13 = [v0 bottomAnchor];
      id v14 = [v12 constraintEqualToAnchor:v13];

      *(void *)(v3 + 48) = v14;
    }
    else
    {
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100F5F0D0;
      id v4 = v1;
      id v24 = [v4 topAnchor];
      id v25 = [*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel] bottomAnchor];
      id v26 = [v24 constraintEqualToAnchor:v25 constant:12.0];

      *(void *)(v3 + 32) = v26;
      id v27 = [v4 bottomAnchor];
      id v28 = [v0 bottomAnchor];
      id v29 = [v27 constraintEqualToAnchor:v28];

      *(void *)(v3 + 40) = v29;
    }
    specialized Array._endMutation()();
    uint64_t v30 = v3;
  }
  else
  {
    uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle + 8];
    sub_1000FF33C(&qword_1015CD310);
    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_100F5F0D0;
      uint64_t v17 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
      id v18 = [*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView] topAnchor];
      id v19 = [*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel] bottomAnchor];
      id v20 = [v18 constraintEqualToAnchor:v19 constant:16.0];

      *(void *)(v16 + 32) = v20;
      id v21 = [*(id *)&v0[v17] bottomAnchor];
      id v22 = [v0 bottomAnchor];
      id v23 = [v21 constraintEqualToAnchor:v22];

      *(void *)(v16 + 40) = v23;
    }
    else
    {
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_100F5DFF0;
      id v31 = [*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel] bottomAnchor];
      id v32 = [v0 bottomAnchor];
      id v33 = [v31 constraintEqualToAnchor:v32];

      *(void *)(v16 + 32) = v33;
    }
    specialized Array._endMutation()();
    return v16;
  }
  return v30;
}

void sub_1002A5A44()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle;
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  UIListContentConfiguration.text.setter();
  swift_endAccess();
  uint64_t v4 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView);
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  v13[3] = v6;
  v13[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  id v7 = sub_100100B1C(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v7, v3, v6);
  id v8 = v5;
  UITableViewCell.contentConfiguration.setter();

  [*(id *)(v1 + v4) setHidden:*(void *)(v2 + 8) == 0];
  id v9 = self;
  uint64_t v10 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
  sub_10010B37C();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 deactivateConstraints:isa];

  *(void *)(v1 + v10) = sub_1002A55A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  Class v12 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 activateConstraints:v12];
}

void sub_1002A5C38(char *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  if (a3)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = (uint64_t *)&a1[*a4];
  *uint64_t v10 = v8;
  v10[1] = v9;
  Class v12 = a1;
  uint64_t v11 = swift_bridgeObjectRelease();
  a5(v11);
}

void sub_1002A5CC8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  UIListContentConfiguration.secondaryText.setter();
  swift_endAccess();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView);
  uint64_t v3 = type metadata accessor for UIListContentConfiguration();
  v6[3] = v3;
  v6[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v4 = sub_100100B1C(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v4, v1, v3);
  id v5 = v2;
  UITableViewCell.contentConfiguration.setter();
}

id sub_1002A5F08(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC4Maps14EmptyStateView_imageView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIImageView) init];
  static UIListContentConfiguration.valueCell()();
  uint64_t v14 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UITableViewCell) init];
  *(void *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_image] = 0;
  *(void *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_button] = 0;
  uint64_t v15 = &v11[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v16 = &v11[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureSubtitle];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  uint64_t v17 = &v11[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureAction];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for EmptyStateView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_1002A60B8();
  sub_1002A67F8();

  return v18;
}

uint64_t sub_1002A60B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015D9498);
  __chkstk_darwin(v2 - 8);
  id v45 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  *(void *)&double v5 = __chkstk_darwin(v4).n128_u64[0];
  id v42 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel];
  [v0 addSubview:v7];
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel];
  [v0 addSubview:v8];
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_imageView];
  [v1 addSubview:v9];
  uint64_t v10 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView]];
  NSString v11 = String._bridgeToObjectiveC()();
  [v7 setAccessibilityIdentifier:v11];

  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setTextAlignment:1];
  [v7 setNumberOfLines:0];
  uint64_t v12 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 _mapkit_preferredFontForTextStyleInTableViewCell:v13 weight:UIFontWeightSemibold];

  [v7 setFont:v14];
  uint64_t v15 = self;
  id v16 = [v15 labelColor];
  [v7 setTextColor:v16];

  [v7 setAdjustsFontForContentSizeCategory:1];
  NSString v17 = String._bridgeToObjectiveC()();
  [v8 setAccessibilityIdentifier:v17];

  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setTextAlignment:1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v12 _mapkit_preferredFontForTextStyleInTableViewCell:v18 weight:UIFontWeightRegular];

  [v8 setFont:v19];
  id v20 = [v15 secondaryLabelColor];
  [v8 setTextColor:v20];

  [v8 setNumberOfLines:0];
  [v8 setAdjustsFontForContentSizeCategory:1];
  NSString v21 = String._bridgeToObjectiveC()();
  [v9 setAccessibilityIdentifier:v21];

  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setHidden:1];
  id v22 = [v15 secondaryLabelColor];
  [v9 setTintColor:v22];

  id v23 = [v12 systemFontOfSize:48.0 weight:UIFontWeightMedium];
  id v24 = [self configurationWithFont:v23 scale:2];

  [v9 setPreferredSymbolConfiguration:v24];
  id v25 = [v15 secondaryLabelColor];
  id v26 = &v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel];
  swift_beginAccess();
  id v27 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v27(v46, 0);
  swift_endAccess();
  id v28 = *(id *)&v1[v10];
  NSString v29 = String._bridgeToObjectiveC()();
  [v28 setAccessibilityIdentifier:v29];

  [*(id *)&v1[v10] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v1[v10] setHidden:1];
  [*(id *)&v1[v10] setAccessoryType:1];
  [*(id *)&v1[v10] setSelectionStyle:2];
  uint64_t v30 = *(void **)&v1[v10];
  uint64_t v31 = type metadata accessor for UIListContentConfiguration();
  v46[3] = v31;
  v46[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  id v32 = sub_100100B1C(v46);
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v32, v26, v31);
  id v33 = v30;
  UITableViewCell.contentConfiguration.setter();

  uint64_t v34 = v42;
  static UIBackgroundConfiguration.listCell()();
  UIBackgroundConfiguration.cornerRadius.setter();
  id v35 = *(void **)&v1[v10];
  uint64_t v37 = v43;
  uint64_t v36 = v44;
  id v38 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v45, v34, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
  id v39 = v35;
  UITableViewCell.backgroundConfiguration.setter();

  id v40 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"_pressedDisclosureCell"];
  [*(id *)&v1[v10] addGestureRecognizer:v40];

  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v34, v36);
}

void sub_1002A67F8()
{
  uint64_t v1 = v0;
  id v52 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F6A730;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_imageView];
  id v4 = [v3 topAnchor];
  id v5 = [v1 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 centerXAnchor];
  id v8 = [v1 centerXAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v2 + 40) = v9;
  id v10 = [v3 leadingAnchor];
  id v11 = [v1 leadingAnchor];
  id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];

  *(void *)(v2 + 48) = v12;
  id v13 = [v3 trailingAnchor];
  id v14 = [v1 trailingAnchor];
  id v15 = [v13 constraintLessThanOrEqualToAnchor:v14];

  *(void *)(v2 + 56) = v15;
  id v16 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel];
  id v17 = [v16 leadingAnchor];
  id v18 = [v1 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:16.0];

  *(void *)(v2 + 64) = v19;
  id v20 = [v16 trailingAnchor];
  id v21 = [v1 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:-16.0];

  *(void *)(v2 + 72) = v22;
  id v23 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel];
  id v24 = [v23 topAnchor];
  id v25 = [v16 bottomAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:2.0];

  *(void *)(v2 + 80) = v26;
  id v27 = [v23 leadingAnchor];
  id v28 = [v1 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:16.0];

  *(void *)(v2 + 88) = v29;
  id v30 = [v23 trailingAnchor];
  id v31 = [v1 trailingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31 constant:-16.0];

  *(void *)(v2 + 96) = v32;
  uint64_t v33 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  id v34 = [*(id *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView] leadingAnchor];
  id v35 = [v1 leadingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v2 + 104) = v36;
  id v37 = [*(id *)&v1[v33] trailingAnchor];
  id v38 = [v1 trailingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v2 + 112) = v39;
  id v40 = [*(id *)&v1[v33] heightAnchor];
  id v41 = [v40 constraintEqualToConstant:44.0];

  *(void *)(v2 + 120) = v41;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v52 activateConstraints:isa];

  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_100F5DFF0;
  id v44 = [v16 topAnchor];
  id v45 = [v1 topAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45];

  *(void *)(v43 + 32) = v46;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints] = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  Class v47 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v52 activateConstraints:v47];

  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_100F5DFF0;
  id v49 = [v16 topAnchor];
  id v50 = [v3 bottomAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50 constant:12.0];

  *(void *)(v48 + 32) = v51;
  specialized Array._endMutation()();
  *(void *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints] = v48;
  swift_bridgeObjectRelease();
  *(void *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints] = sub_1002A55A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  Class v53 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v52 activateConstraints:v53];
}

id sub_1002A6FA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyStateView();
  return [super dealloc];
}

uint64_t sub_1002A711C()
{
  return type metadata accessor for EmptyStateView();
}

uint64_t type metadata accessor for EmptyStateView()
{
  uint64_t result = qword_1015D9488;
  if (!qword_1015D9488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002A7170()
{
  uint64_t result = type metadata accessor for UIListContentConfiguration();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1002A72C4()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC4Maps14EmptyStateView_imageView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  static UIListContentConfiguration.valueCell()();
  uint64_t v4 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UITableViewCell) init];
  *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_button] = 0;
  id v5 = &v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  id v6 = &v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureSubtitle];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  id v7 = &v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureAction];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1002A7430()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1002A746C()
{
  unint64_t result = qword_1015D94A0;
  if (!qword_1015D94A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94A0);
  }
  return result;
}

uint64_t sub_1002A74C0()
{
  return sub_1001010F8(&qword_1015D94A8, &qword_1015D94B0);
}

uint64_t sub_1002A74FC()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611B18);
  sub_1000F2248(v10, (uint64_t)qword_101611B18);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1002A77D8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611B30);
  sub_1000F2248(v0, (uint64_t)qword_101611B30);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1002A783C()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611B48);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611B48);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1002A78F4()
{
  uint64_t result = swift_getKeyPath();
  qword_101611B60 = result;
  return result;
}

uint64_t sub_1002A791C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1002A7940, 0, 0);
}

uint64_t sub_1002A7940()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBEE8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611B60;
  *(void *)(v0 + 80) = qword_101611B60;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D95B0, &qword_1015D95B8);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_1002A7A9C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_1002A7A9C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_1002A7BF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A7BF0()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611B60;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_1002A7CCC()
{
  if (qword_1015CBEE8 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1002A7D2C()
{
  unint64_t result = qword_1015D94B8;
  if (!qword_1015D94B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94B8);
  }
  return result;
}

unint64_t sub_1002A7D84()
{
  unint64_t result = qword_1015D94C0;
  if (!qword_1015D94C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94C0);
  }
  return result;
}

uint64_t sub_1002A7DD8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002A7E0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002A7E5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBED8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611B30, a1);
}

uint64_t sub_1002A7E94@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBEE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611B48);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_1002A7F10(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1002A7940, 0, 0);
}

uint64_t sub_1002A7FC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002A8E44();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002A7FEC()
{
  return 0xD000000000000022;
}

unint64_t sub_1002A800C()
{
  unint64_t result = qword_1015D94D0;
  if (!qword_1015D94D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94D0);
  }
  return result;
}

unint64_t sub_1002A8064()
{
  unint64_t result = qword_1015D94D8;
  if (!qword_1015D94D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94D8);
  }
  return result;
}

unint64_t sub_1002A80BC()
{
  unint64_t result = qword_1015D94E0;
  if (!qword_1015D94E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94E0);
  }
  return result;
}

unint64_t sub_1002A8114()
{
  unint64_t result = qword_1015D94E8;
  if (!qword_1015D94E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94E8);
  }
  return result;
}

unint64_t sub_1002A816C()
{
  unint64_t result = qword_1015D94F0;
  if (!qword_1015D94F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94F0);
  }
  return result;
}

unint64_t sub_1002A81C4()
{
  unint64_t result = qword_1015D94F8;
  if (!qword_1015D94F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D94F8);
  }
  return result;
}

uint64_t sub_1002A8218(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002A8238, 0, 0);
}

uint64_t sub_1002A8238()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)WalkPreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidStairs];
  unsigned char *v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002A8304(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1002A8328, 0, 0);
}

uint64_t sub_1002A8328()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)WalkPreferences) initWithDefaults:v2];

  [v3 setAvoidStairs:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1002A842C()
{
  unint64_t result = qword_1015D9500;
  if (!qword_1015D9500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9500);
  }
  return result;
}

unint64_t sub_1002A8484()
{
  unint64_t result = qword_1015D9508;
  if (!qword_1015D9508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9508);
  }
  return result;
}

unint64_t sub_1002A84DC()
{
  unint64_t result = qword_1015D9510;
  if (!qword_1015D9510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9510);
  }
  return result;
}

unint64_t sub_1002A8534()
{
  unint64_t result = qword_1015D9518;
  if (!qword_1015D9518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9518);
  }
  return result;
}

uint64_t sub_1002A8588@<X0>(uint64_t *a1@<X8>)
{
  sub_1002A87D4();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002A85C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBED0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611B18, a1);
}

uint64_t sub_1002A8600()
{
  return sub_1001010F8(&qword_1015D9520, &qword_1015D9528);
}

uint64_t sub_1002A863C(uint64_t a1)
{
  unint64_t v2 = sub_1002A800C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002A868C()
{
  unint64_t result = qword_1015D9530;
  if (!qword_1015D9530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9530);
  }
  return result;
}

uint64_t sub_1002A86E0(uint64_t a1)
{
  unint64_t v2 = sub_1002A87D4();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1002A872C(uint64_t a1)
{
  unint64_t v2 = sub_1002A8534();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002A877C()
{
  unint64_t result = qword_1015D9538;
  if (!qword_1015D9538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9538);
  }
  return result;
}

unint64_t sub_1002A87D4()
{
  unint64_t result = qword_1015D9540[0];
  if (!qword_1015D9540[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D9540);
  }
  return result;
}

uint64_t sub_1002A8828(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1002A88B8, 0, 0);
}

uint64_t sub_1002A88B8()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D94B0);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D95B0, &qword_1015D95B8);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002A89CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002A8064();
  void *v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1002A8A80()
{
  unint64_t result = qword_1015D9558;
  if (!qword_1015D9558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9558);
  }
  return result;
}

unint64_t sub_1002A8AD8()
{
  unint64_t result = qword_1015D9560[0];
  if (!qword_1015D9560[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D9560);
  }
  return result;
}

uint64_t sub_1002A8B2C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002A8064();
  void *v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1002A8BE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002A8064();
  void *v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1002A8C94()
{
  unint64_t result = qword_1015D9578;
  if (!qword_1015D9578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9578);
  }
  return result;
}

unint64_t sub_1002A8CEC()
{
  unint64_t result = qword_1015D9580;
  if (!qword_1015D9580)
  {
    sub_10010118C(qword_1015D9588);
    sub_1002A84DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9580);
  }
  return result;
}

uint64_t sub_1002A8D60(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002A81C4();
  void *v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidStairsQuery()
{
  return &type metadata for AvoidStairsQuery;
}

ValueMetadata *type metadata accessor for AvoidStairsEntity.UpdateIntent_value()
{
  return &type metadata for AvoidStairsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidStairsEntity()
{
  return &type metadata for AvoidStairsEntity;
}

uint64_t sub_1002A8E44()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  id v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D95C0);
  LocalizedStringResource.init(stringLiteral:)();
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  id v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  id v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002A800C();
  id v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1002A9284@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1002A9290(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(type metadata accessor for ContentSizeCategory() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_1002ADEE4();
  uint64_t v7 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_1002A9384(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  double v4 = *(double *)(a1 + 32);
  uint64_t result = 0;
  if (v4 != a2)
  {
    uint64_t v6 = v2 - 1;
    uint64_t v7 = a1 + 40;
    while (v6 != result)
    {
      double v8 = *(double *)(v7 + 8 * result++);
      if (v8 == a2) {
        return result;
      }
    }
    return 0;
  }
  return result;
}

void sub_1002A93E4(uint64_t a1, unint64_t a2)
{
}

void sub_1002A93F8(uint64_t a1, unint64_t a2)
{
}

void sub_1002A940C(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v6;
      sub_100100830(0, a3);
      char v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1)) {
            break;
          }
          if (a3 == (unint64_t *)v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if ((unint64_t)a3 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * (void)a3);
          }
          uint64_t v11 = v10;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

void sub_1002A95A8(void *a1, uint64_t a2)
{
  uint64_t v505 = *(void *)(a2 + 16);
  if (!v505) {
    return;
  }
  uint64_t v2 = a1;
  uint64_t v3 = 0;
  uint64_t v502 = a2 + 32;
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v509 = v4;
  uint64_t v497 = *a1;
  while (1)
  {
    uint64_t v6 = v502 + 80 * v3;
    uint64_t v7 = *(void *)(v6 + 16);
    int v534 = *(unsigned __int8 *)(v6 + 32);
    unint64_t v8 = *(void *)(v6 + 40);
    LODWORD(v512) = *(unsigned __int8 *)(v6 + 48);
    uint64_t v9 = *(void *)(v6 + 64);
    id v506 = *(void **)(v6 + 56);
    LODWORD(v503) = *(unsigned __int8 *)(v6 + 72);
    BOOL v10 = *(void *)v6 == v5 && *(void *)(v6 + 8) == v4;
    if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v11 = *(void *)(v7 + 16);
    uint64_t v538 = v2[2];
    if (v11 != *(void *)(v538 + 16)) {
      goto LABEL_5;
    }
    uint64_t v498 = v3;
    uint64_t v511 = v8;
    if (v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 != v538)
      {
        uint64_t v12 = 0;
        uint64_t v500 = v7;
        uint64_t v499 = v9;
        do
        {
          uint64_t v13 = *(void *)(v7 + v12 + 32);
          uint64_t v14 = *(void *)(v7 + v12 + 40);
          uint64_t v16 = *(void *)(v7 + v12 + 48);
          uint64_t v15 = *(void *)(v7 + v12 + 56);
          id v17 = *(void **)(v7 + v12 + 64);
          id v18 = *(void **)(v7 + v12 + 72);
          uint64_t v501 = *(void **)(v7 + v12 + 80);
          uint64_t v536 = *(void *)(v7 + v12 + 88);
          uint64_t v19 = *(void *)(v7 + v12 + 96);
          unsigned int v517 = *(void **)(v7 + v12 + 104);
          uint64_t v526 = *(void *)(v7 + v12 + 112);
          uint64_t v21 = *(void *)(v538 + v12 + 48);
          uint64_t v20 = *(void *)(v538 + v12 + 56);
          uint64_t v22 = *(void **)(v538 + v12 + 64);
          id v23 = *(void **)(v538 + v12 + 72);
          uint64_t v24 = *(void **)(v538 + v12 + 80);
          uint64_t v25 = *(void *)(v538 + v12 + 88);
          uint64_t v530 = *(void *)(v538 + v12 + 96);
          uint64_t v532 = v19;
          uint64_t v513 = *(void *)(v538 + v12 + 104);
          uint64_t v522 = *(void *)(v538 + v12 + 112);
          if (v13 != *(void *)(v538 + v12 + 32) || v14 != *(void *)(v538 + v12 + 40))
          {
            unint64_t v495 = *(void **)(v538 + v12 + 72);
            unint64_t v496 = *(void **)(v538 + v12 + 64);
            id v26 = v17;
            unsigned int v27 = v18;
            uint64_t v28 = *(void *)(v538 + v12 + 88);
            uint64_t v29 = *(void **)(v538 + v12 + 80);
            uint64_t v30 = v12;
            uint64_t v31 = v11;
            uint64_t v32 = v15;
            uint64_t v33 = v20;
            char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v20 = v33;
            uint64_t v15 = v32;
            uint64_t v11 = v31;
            uint64_t v12 = v30;
            uint64_t v24 = v29;
            uint64_t v25 = v28;
            id v18 = v27;
            id v17 = v26;
            id v23 = v495;
            uint64_t v22 = v496;
            if ((v34 & 1) == 0)
            {
LABEL_51:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v5 = v497;
              uint64_t v3 = v498;
              uint64_t v4 = v509;
              uint64_t v2 = a1;
              goto LABEL_4;
            }
          }
          if (v15)
          {
            if (!v20) {
              goto LABEL_51;
            }
            if (v16 != v21 || v15 != v20)
            {
              id v35 = v24;
              char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v24 = v35;
              if ((v36 & 1) == 0) {
                goto LABEL_51;
              }
            }
          }
          else if (v20)
          {
            goto LABEL_51;
          }
          if (v17 != v22 || v18 != v23)
          {
            id v37 = v24;
            char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v24 = v37;
            if ((v38 & 1) == 0) {
              goto LABEL_51;
            }
          }
          uint64_t v7 = v500;
          unint64_t v8 = v511;
          uint64_t v9 = v499;
          if (v536)
          {
            uint64_t v4 = v509;
            if (!v25)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v5 = v497;
              uint64_t v3 = v498;
              uint64_t v2 = a1;
              goto LABEL_4;
            }
            uint64_t v7 = v500;
            uint64_t v9 = v499;
            if ((v501 != v24 || v536 != v25)
              && ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
            {
LABEL_52:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v5 = v497;
              uint64_t v3 = v498;
              goto LABEL_60;
            }
          }
          else if (v25)
          {
            goto LABEL_52;
          }
          if (v532 != v530) {
            goto LABEL_52;
          }
          uint64_t v5 = v497;
          if (v526 != v522)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v3 = v498;
LABEL_60:
            uint64_t v2 = a1;
LABEL_62:
            uint64_t v4 = v509;
            goto LABEL_4;
          }
          uint64_t v2 = a1;
          if (([v517 isEqual:v513] & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v3 = v498;
            goto LABEL_62;
          }
          v12 += 88;
          --v11;
          uint64_t v4 = v509;
        }
        while (v11);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if ((v534 ^ *((unsigned __int8 *)v2 + 32)))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v498;
      goto LABEL_4;
    }
    uint64_t v3 = v498;
    if (((v512 ^ *((unsigned __int8 *)v2 + 48)) & 1) != 0
      || (v506 == (void *)v2[7] ? (BOOL v39 = v9 == v2[8]) : (BOOL v39 = 0),
          !v39 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
       || ((v503 ^ *((unsigned __int8 *)v2 + 72)) & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    unint64_t v40 = v8;
    unint64_t v41 = v8 >> 62;
    if (v41)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v43 = v2[5];
    unint64_t v540 = v43;
    unint64_t v44 = v43 >> 62;
    if (v43 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
      sub_10019C1E4((uint64_t)&v540);
      if (v42 != v49)
      {
LABEL_73:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_378;
      }
    }
    else if (v42 != *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_73;
    }
    unint64_t v539 = v43;
    if (v41)
    {
      uint64_t v45 = v511;
      swift_bridgeObjectRetain_n();
      sub_1002ADF3C((uint64_t)&v540);
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v45 = v511;
      uint64_t v46 = *(void *)((v511 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      sub_1002ADF3C((uint64_t)&v540);
    }
    if (!v46) {
      goto LABEL_811;
    }
    unint64_t v535 = v45 & 0xC000000000000001;
    if ((v45 & 0xC000000000000001) != 0)
    {
      uint64_t v47 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v48 = v43 & 0xFFFFFFFFFFFFFF8;
      if (!v44) {
        goto LABEL_69;
      }
    }
    else
    {
      if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_814;
      }
      uint64_t v47 = *(void *)(v45 + 32);
      swift_unknownObjectRetain();
      uint64_t v48 = v43 & 0xFFFFFFFFFFFFFF8;
      if (!v44)
      {
LABEL_69:
        uint64_t v533 = *(void *)(v48 + 16);
        if (!v533) {
          goto LABEL_808;
        }
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    sub_10019C1E4((uint64_t)&v540);
    uint64_t v533 = v50;
    if (!v50) {
      goto LABEL_808;
    }
LABEL_76:
    unint64_t v531 = v43 & 0xC000000000000001;
    uint64_t v537 = v46;
    if ((v43 & 0xC000000000000001) != 0)
    {
      uint64_t v51 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_815;
      }
      uint64_t v51 = *(void *)(v43 + 32);
      swift_unknownObjectRetain();
    }
    id v52 = (id)v47;
    id v53 = (id)v51;
    id v54 = v53;
    if (!(v47 | v51))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_81;
    }
    if (v52) {
      BOOL v56 = v51 == 0;
    }
    else {
      BOOL v56 = 0;
    }
    char v57 = v56;
    if (v53) {
      BOOL v58 = v47 == 0;
    }
    else {
      BOOL v58 = 0;
    }
    if (v58
      || (v57 & 1) != 0
      || (unsigned int v59 = [v52 artworkSourceType],
          v59 != [v54 artworkSourceType])
      || (unsigned int v60 = [v52 artworkUseType],
          v60 != [v54 artworkUseType]))
    {

      swift_unknownObjectRelease();
      goto LABEL_375;
    }
    unsigned int v523 = v52;
    uint64_t v61 = [v52 shieldDataSource];
    id v527 = v54;
    uint64_t v62 = [v54 shieldDataSource];
    uint64_t v63 = (void *)(v61 | v62);
    id v64 = (id)v61;
    id v65 = (id)v62;
    uint64_t v66 = v65;
    if (v61 | v62)
    {
      if (v64) {
        BOOL v272 = v62 == 0;
      }
      else {
        BOOL v272 = 0;
      }
      int v273 = v272;
      if (v65) {
        BOOL v274 = v61 == 0;
      }
      else {
        BOOL v274 = 0;
      }
      if (v274 || v273 || (id v275 = [v64 shieldType], v275 != objc_msgSend(v66, "shieldType")))
      {
        id v278 = v64;

        v279 = v66;
      }
      else
      {
        uint64_t v520 = [v64 shieldText];
        if (!v520)
        {
          id v506 = [v66 shieldText];
          if (!v506)
          {
            id v516 = v66;
            v276 = v64;
            id v506 = 0;
            int v277 = 0;
            goto LABEL_554;
          }
        }
        uint64_t v62 = [v64 shieldText];
        uint64_t v63 = [v66 shieldText];
        if ([(id)v62 isEqualToString:v63])
        {
          id v516 = v66;
          v276 = v64;
          int v277 = 1;
LABEL_554:
          uint64_t v358 = [v276 shieldColorString];
          if (v358
            || ([v516 shieldColorString], (id v503 = (id)objc_claimAutoreleasedReturnValue()) != 0))
          {
            uint64_t v359 = [v276 shieldColorString];
            v360 = [v516 shieldColorString];
            unsigned __int8 v361 = [v359 isEqualToString:v360];

            if (v358)
            {

              uint64_t v5 = v497;
              uint64_t v3 = v498;
              unint64_t v43 = v539;
              char v362 = v361;
              if (!v277) {
                goto LABEL_559;
              }
              goto LABEL_558;
            }
            uint64_t v3 = v498;
            unint64_t v43 = v539;
            char v362 = v361;
            BOOL v363 = v503;
          }
          else
          {
            BOOL v363 = 0;
            char v362 = 1;
          }

          uint64_t v5 = v497;
          if ((v277 & 1) == 0)
          {
LABEL_559:
            if (v520)
            {
              id v64 = v276;

              uint64_t v66 = v516;
              if ((v362 & 1) == 0) {
                goto LABEL_399;
              }
            }
            else
            {
              id v64 = v276;

              uint64_t v66 = v516;
              if ((v362 & 1) == 0) {
                goto LABEL_399;
              }
            }
            goto LABEL_98;
          }
LABEL_558:

          goto LABEL_559;
        }

        id v278 = v64;
        v279 = v66;

        if (v520) {
          uint64_t v66 = v520;
        }
        else {
          uint64_t v66 = v506;
        }
      }

      id v64 = v278;
      uint64_t v66 = v279;
LABEL_399:

      swift_unknownObjectRelease();
      uint64_t v280 = v527;
LABEL_437:

      swift_unknownObjectRelease();
      goto LABEL_376;
    }
LABEL_98:
    id v512 = v64;
    uint64_t v514 = v66;
    uint64_t v67 = [v523 iconDataSource];
    uint64_t v68 = [v527 iconDataSource];
    id v518 = (id)v67;
    id v69 = (id)v68;
    uint64_t v70 = v69;
    if (v67 | v68)
    {
      if (v518) {
        BOOL v281 = v68 == 0;
      }
      else {
        BOOL v281 = 0;
      }
      char v282 = v281;
      if (v69) {
        BOOL v283 = v67 == 0;
      }
      else {
        BOOL v283 = 0;
      }
      unsigned int v284 = v518;
      BOOL v76 = v69;
      if (v283) {
        goto LABEL_571;
      }
      unsigned int v284 = v518;
      BOOL v76 = v69;
      if (v282) {
        goto LABEL_571;
      }
      unsigned int v285 = [v518 iconType];
      unsigned int v284 = v518;
      BOOL v76 = v70;
      if (v285 != [v70 iconType]) {
        goto LABEL_571;
      }
      unsigned int v286 = [v518 cartoID];
      unsigned int v284 = v518;
      BOOL v76 = v70;
      if (v286 != [v70 cartoID]) {
        goto LABEL_571;
      }
      unsigned int v287 = [v518 defaultTransitType];
      unsigned int v284 = v518;
      BOOL v76 = v70;
      if (v287 != [v70 defaultTransitType]) {
        goto LABEL_571;
      }
      unsigned int v288 = [v518 iconAttributeKey];
      unsigned int v284 = v518;
      BOOL v76 = v70;
      if (v288 != [v70 iconAttributeKey]) {
        goto LABEL_571;
      }
      unsigned int v289 = [v518 iconAttributeValue];
      unsigned int v290 = [v70 iconAttributeValue];

      if (v289 != v290) {
        goto LABEL_572;
      }
    }
    id v506 = v70;
    v71 = v523;
    uint64_t v72 = [v523 iconFallbackShieldDataSource];
    uint64_t v73 = [v527 iconFallbackShieldDataSource];
    id v74 = (id)v72;
    id v75 = (id)v73;
    BOOL v76 = v75;
    if (v72 | v73)
    {
      id v298 = v74;
      if (v74) {
        BOOL v299 = v73 == 0;
      }
      else {
        BOOL v299 = 0;
      }
      int v300 = v299;
      if (v75) {
        BOOL v301 = v72 == 0;
      }
      else {
        BOOL v301 = 0;
      }
      if (v301 || v300)
      {
        unsigned int v284 = v74;

        BOOL v315 = v76;
        uint64_t v70 = v506;
      }
      else
      {
        unsigned int v284 = v74;
        id v302 = [v74 shieldType];
        uint64_t v70 = v506;
        if (v302 == [v76 shieldType])
        {
          id v503 = [v298 shieldText];
          if (!v503)
          {
            uint64_t v501 = [v76 shieldText];
            if (!v501)
            {
              uint64_t v501 = 0;
              int v303 = 0;
              goto LABEL_621;
            }
          }
          unsigned int v284 = [v298 shieldText];
          id v302 = [v76 shieldText];
          if ([v284 isEqualToString:v302])
          {
            int v303 = 1;
LABEL_621:
            v388 = [v298 shieldColorString];
            if (v388
              || ([v76 shieldColorString], (uint64_t v70 = objc_claimAutoreleasedReturnValue()) != 0))
            {
              BOOL v389 = [v298 shieldColorString];
              char v390 = [v76 shieldColorString];
              unsigned __int8 v493 = [v389 isEqualToString:v390];

              if (v388)
              {

                uint64_t v3 = v498;
                if (!v303)
                {
LABEL_626:
                  unint64_t v43 = v539;
                  id v74 = v298;

                  if (v503)
                  {
                  }
                  else
                  {
                  }
                  uint64_t v5 = v497;
                  v71 = v523;
                  if (v493) {
                    goto LABEL_100;
                  }
                  unsigned int v284 = v298;
                  uint64_t v70 = v506;
LABEL_571:

LABEL_572:
                  swift_unknownObjectRelease();
                  char v364 = v527;
LABEL_618:

                  swift_unknownObjectRelease();
                  goto LABEL_376;
                }
LABEL_625:

                goto LABEL_626;
              }
            }
            else
            {
              unsigned __int8 v493 = 1;
            }

            uint64_t v3 = v498;
            if ((v303 & 1) == 0) {
              goto LABEL_626;
            }
            goto LABEL_625;
          }

          BOOL v315 = v503;
          if (!v503) {
            BOOL v315 = v501;
          }
          unsigned int v284 = v298;
        }
        else
        {

          BOOL v315 = v76;
        }
      }

      goto LABEL_571;
    }
LABEL_100:
    unint64_t v495 = v74;
    unint64_t v496 = v76;
    uint64_t v77 = [v71 textDataSource];
    uint64_t v78 = [v527 textDataSource];
    id v79 = (id)v77;
    id v80 = (id)v78;
    uint64_t v501 = v79;
    id v503 = v80;
    if (!(v77 | v78)) {
      goto LABEL_114;
    }
    id v81 = v80;
    if (v79) {
      BOOL v82 = v78 == 0;
    }
    else {
      BOOL v82 = 0;
    }
    int v83 = v82;
    if (v80) {
      BOOL v84 = v77 == 0;
    }
    else {
      BOOL v84 = 0;
    }
    if (v84 || v83)
    {

      goto LABEL_577;
    }
    uint64_t v85 = [v79 text];
    uint64_t v86 = [v81 text];
    id v87 = (id)v85;
    id v88 = (id)v86;
    if (!(v85 | v86))
    {
      id v89 = v88;

      v71 = v523;
LABEL_114:
      id v90 = [v71 hasRoutingIncidentBadge];
      int v91 = v527;
      if (v90 != [v527 hasRoutingIncidentBadge])
      {
        unsigned __int8 v92 = 0;
        v93 = v506;
        goto LABEL_580;
      }
      id v81 = [v71 accessibilityText];
      if (v81 || ([v527 accessibilityText], (id v90 = (id)objc_claimAutoreleasedReturnValue()) != 0))
      {
        v322 = [v523 accessibilityText];
        unsigned int v323 = [v527 accessibilityText];
        unsigned __int8 v92 = [v322 isEqualToString:v323];

        int v91 = v527;
        unint64_t v43 = v539;
        v93 = v506;
        if (!v81) {
          id v81 = v90;
        }
      }
      else
      {
        unsigned __int8 v92 = 1;
        v93 = v506;
        id v81 = 0;
      }
LABEL_579:

      goto LABEL_580;
    }
    if (v87) {
      BOOL v338 = v86 == 0;
    }
    else {
      BOOL v338 = 0;
    }
    char v339 = v338;
    v491 = v88;
    if (v88) {
      BOOL v340 = v85 == 0;
    }
    else {
      BOOL v340 = 0;
    }
    if (v340 || (v339 & 1) != 0)
    {

      id v81 = v491;
LABEL_577:
      unsigned __int8 v92 = 0;
LABEL_578:
      int v91 = v527;
      v93 = v506;
      goto LABEL_579;
    }
    uint64_t v341 = v87;
    uint64_t v342 = [v87 formatStrings];
    uint64_t v343 = [v491 formatStrings];
    id v344 = (id)v342;
    id v81 = (id)v343;
    v345 = &stru_1012E1600;
    id v487 = v344;
    if (v342 | v343)
    {
      if (v344) {
        BOOL v391 = v343 == 0;
      }
      else {
        BOOL v391 = 0;
      }
      char v392 = v391;
      if (v81) {
        BOOL v393 = v342 == 0;
      }
      else {
        BOOL v393 = 0;
      }
      if (v393 || (v392 & 1) != 0 || (id v394 = [v344 count], v394 != objc_msgSend(v81, "count")))
      {

LABEL_657:
        unsigned __int8 v92 = 0;
        uint64_t v5 = v497;
        uint64_t v3 = v498;
        unint64_t v43 = v539;
        goto LABEL_578;
      }
      long long v544 = 0u;
      long long v545 = 0u;
      long long v542 = 0u;
      long long v543 = 0u;
      id v395 = v344;
      id v396 = [v395 countByEnumeratingWithState:&v542 objects:v541 count:16];
      if (v396)
      {
        id v397 = v396;
        uint64_t v398 = 0;
        uint64_t v399 = *(void *)v543;
        while (2)
        {
          for (uint64_t i = 0; i != v397; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v543 != v399) {
              objc_enumerationMutation(v395);
            }
            BOOL v401 = *(NSString **)(*((void *)&v542 + 1) + 8 * i);
            char v402 = [v81 objectAtIndexedSubscript:(char *)i + v398];
            LODWORD(v401) = sub_1002ADF68(v402, v401, (NSString *)v402);

            if (!v401)
            {

              goto LABEL_657;
            }
          }
          id v397 = [v395 countByEnumeratingWithState:&v542 objects:v541 count:16];
          v398 += (uint64_t)i;
          if (v397) {
            continue;
          }
          break;
        }
      }
    }
    else
    {
    }
    uint64_t v346 = [v341 separators];
    uint64_t v347 = [v491 separators];
    id v482 = (id)v346;
    id v485 = (id)v347;
    uint64_t v348 = &stru_1012E1620;
    if (v346 | v347)
    {
      if (v482) {
        BOOL v403 = v347 == 0;
      }
      else {
        BOOL v403 = 0;
      }
      char v404 = v403;
      if (v485) {
        BOOL v405 = v346 == 0;
      }
      else {
        BOOL v405 = 0;
      }
      if (v405 || (v404 & 1) != 0 || (id v406 = [v482 count], v406 != objc_msgSend(v485, "count")))
      {

LABEL_798:
        unsigned __int8 v92 = 0;
        uint64_t v5 = v497;
        uint64_t v3 = v498;
        unint64_t v43 = v539;
        int v91 = v527;
        v93 = v506;
        id v81 = v485;
        goto LABEL_579;
      }
      long long v544 = 0u;
      long long v545 = 0u;
      long long v542 = 0u;
      long long v543 = 0u;
      id v407 = v482;
      id v408 = [v407 countByEnumeratingWithState:&v542 objects:v541 count:16];
      if (v408)
      {
        id v409 = v408;
        uint64_t v410 = 0;
        uint64_t v411 = *(void *)v543;
        while (2)
        {
          for (j = 0; j != v409; j = (char *)j + 1)
          {
            if (*(void *)v543 != v411) {
              objc_enumerationMutation(v407);
            }
            id v413 = *(NSString **)(*((void *)&v542 + 1) + 8 * (void)j);
            id v414 = [v485 objectAtIndexedSubscript:(char *)j + v410];
            LODWORD(v413) = sub_1002ADF68(v414, v413, (NSString *)v414);

            if (!v413)
            {

              goto LABEL_798;
            }
          }
          id v409 = [v407 countByEnumeratingWithState:&v542 objects:v541 count:16];
          v410 += (uint64_t)j;
          if (v409) {
            continue;
          }
          break;
        }
      }
    }
    else
    {
    }
    uint64_t v349 = [v341 formatTokens];
    uint64_t v350 = [v491 formatTokens];
    id v477 = (id)v349;
    id v479 = (id)v350;
    BOOL v351 = &stru_1012E1640;
    if (!(v349 | v350))
    {

      goto LABEL_551;
    }
    if (v477) {
      BOOL v431 = v350 == 0;
    }
    else {
      BOOL v431 = 0;
    }
    char v432 = v431;
    if (v479) {
      BOOL v433 = v349 == 0;
    }
    else {
      BOOL v433 = 0;
    }
    if (v433 || (v432 & 1) != 0 || (id v434 = [v477 count], v434 != objc_msgSend(v479, "count")))
    {

      BOOL v455 = v479;
LABEL_768:

      goto LABEL_798;
    }
    long long v544 = 0u;
    long long v545 = 0u;
    long long v542 = 0u;
    long long v543 = 0u;
    id v435 = v477;
    id v436 = [v435 countByEnumeratingWithState:&v542 objects:v541 count:16];
    if (v436)
    {
      id v437 = v436;
      uint64_t v438 = 0;
      uint64_t v439 = *(void *)v543;
      while (2)
      {
        for (k = 0; k != v437; k = (char *)k + 1)
        {
          if (*(void *)v543 != v439) {
            objc_enumerationMutation(v435);
          }
          char v441 = *(GEOServerFormatToken **)(*((void *)&v542 + 1) + 8 * (void)k);
          BOOL v442 = [v479 objectAtIndexedSubscript:(char *)k + v438];
          LODWORD(v441) = sub_1002ADF70(v442, v441, (GEOServerFormatToken *)v442);

          if (!v441)
          {
            BOOL v455 = v479;

            goto LABEL_768;
          }
        }
        id v437 = [v435 countByEnumeratingWithState:&v542 objects:v541 count:16];
        v438 += (uint64_t)k;
        if (v437) {
          continue;
        }
        break;
      }
    }

LABEL_551:
    uint64_t v352 = [v341 alternativeString];
    uint64_t v353 = [v491 alternativeString];
    uint64_t v354 = v352 | v353;
    id v355 = (id)v352;
    id v356 = (id)v353;
    if (v354) {
      unsigned __int8 v357 = [v355 isEqual:v356];
    }
    else {
      unsigned __int8 v357 = 1;
    }

    uint64_t v5 = v497;
    uint64_t v3 = v498;
    unint64_t v43 = v539;
    v71 = v523;
    if (v357) {
      goto LABEL_114;
    }
    unsigned __int8 v92 = 0;
    int v91 = v527;
    v93 = v506;
LABEL_580:

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    uint64_t v4 = v509;
    if ((v92 & 1) == 0) {
      goto LABEL_377;
    }
LABEL_81:
    if (v537 == 1) {
      goto LABEL_811;
    }
    if (v535)
    {
      uint64_t v55 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((v511 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_818;
      }
      uint64_t v55 = *(void *)(v511 + 40);
      swift_unknownObjectRetain();
    }
    if (v533 == 1)
    {
LABEL_808:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
LABEL_812:
      sub_10019C1E4((uint64_t)&v540);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    if (v531)
    {
      uint64_t v94 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_819;
      }
      uint64_t v94 = *(void *)(v43 + 40);
      swift_unknownObjectRetain();
    }
    id v95 = (id)v55;
    id v96 = (id)v94;
    v97 = v96;
    if (!(v55 | v94)) {
      break;
    }
    if (v95) {
      BOOL v246 = v94 == 0;
    }
    else {
      BOOL v246 = 0;
    }
    char v247 = v246;
    if (v96) {
      BOOL v248 = v55 == 0;
    }
    else {
      BOOL v248 = 0;
    }
    if (!v248 && (v247 & 1) == 0)
    {
      unsigned int v249 = [v95 artworkSourceType];
      if (v249 == [v97 artworkSourceType])
      {
        unsigned int v250 = [v95 artworkUseType];
        if (v250 == [v97 artworkUseType])
        {
          unsigned int v529 = v95;
          uint64_t v251 = [v95 shieldDataSource];
          uint64_t v525 = v97;
          uint64_t v252 = [v97 shieldDataSource];
          id v64 = (id)v251;
          id v253 = (id)v252;
          uint64_t v66 = v253;
          if (!(v251 | v252)) {
            goto LABEL_369;
          }
          if (v64) {
            BOOL v291 = v252 == 0;
          }
          else {
            BOOL v291 = 0;
          }
          int v292 = v291;
          if (v253) {
            BOOL v293 = v251 == 0;
          }
          else {
            BOOL v293 = 0;
          }
          BOOL v294 = v253;
          if (v293 || v292 || (id v295 = [v64 shieldType], v295 != objc_msgSend(v66, "shieldType")))
          {
          }
          else
          {
            v521 = [v64 shieldText];
            if (!v521)
            {
              id v506 = [v66 shieldText];
              if (!v506)
              {
                BOOL v296 = v66;
                id v506 = 0;
                int v297 = 0;
                goto LABEL_602;
              }
            }
            uint64_t v252 = [v64 shieldText];
            [v66 shieldText];
            BOOL v294 = v296 = v66;
            if ([(id)v252 isEqualToString:v294])
            {
              int v297 = 1;
LABEL_602:
              v385 = [v64 shieldColorString];
              if (v385
                || ([v296 shieldColorString], (uint64_t v66 = objc_claimAutoreleasedReturnValue()) != 0))
              {
                v386 = [v64 shieldColorString];
                v387 = [v296 shieldColorString];
                unsigned __int8 v504 = [v386 isEqualToString:v387];

                if (v385)
                {

                  uint64_t v3 = v498;
                  unint64_t v43 = v539;
                  if (!v297) {
                    goto LABEL_607;
                  }
                  goto LABEL_606;
                }
              }
              else
              {
                unsigned __int8 v504 = 1;
              }
              uint64_t v3 = v498;

              unint64_t v43 = v539;
              if ((v297 & 1) == 0)
              {
LABEL_607:

                uint64_t v66 = v296;
                if (v521)
                {
                }
                else
                {
                }
                uint64_t v5 = v497;
                if ((v504 & 1) == 0) {
                  goto LABEL_436;
                }
LABEL_369:
                id v512 = v64;
                uint64_t v514 = v66;
                uint64_t v254 = [v529 iconDataSource];
                uint64_t v255 = [v525 iconDataSource];
                id v518 = (id)v254;
                id v256 = (id)v255;
                uint64_t v70 = v256;
                if (v254 | v255)
                {
                  if (v518) {
                    BOOL v304 = v255 == 0;
                  }
                  else {
                    BOOL v304 = 0;
                  }
                  char v305 = v304;
                  if (v256) {
                    BOOL v306 = v254 == 0;
                  }
                  else {
                    BOOL v306 = 0;
                  }
                  v307 = v518;
                  v262 = v256;
                  if (v306) {
                    goto LABEL_616;
                  }
                  v307 = v518;
                  v262 = v256;
                  if (v305) {
                    goto LABEL_616;
                  }
                  unsigned int v308 = [v518 iconType];
                  v307 = v518;
                  v262 = v70;
                  if (v308 != [v70 iconType]) {
                    goto LABEL_616;
                  }
                  unsigned int v309 = [v518 cartoID];
                  v307 = v518;
                  v262 = v70;
                  if (v309 != [v70 cartoID]) {
                    goto LABEL_616;
                  }
                  unsigned int v310 = [v518 defaultTransitType];
                  v307 = v518;
                  v262 = v70;
                  if (v310 != [v70 defaultTransitType]) {
                    goto LABEL_616;
                  }
                  unsigned int v311 = [v518 iconAttributeKey];
                  v307 = v518;
                  v262 = v70;
                  if (v311 != [v70 iconAttributeKey]) {
                    goto LABEL_616;
                  }
                  unsigned int v312 = [v518 iconAttributeValue];
                  unsigned int v313 = [v70 iconAttributeValue];

                  if (v312 != v313) {
                    goto LABEL_617;
                  }
                }
                id v503 = v70;
                BOOL v257 = v529;
                uint64_t v258 = [v529 iconFallbackShieldDataSource];
                unsigned int v259 = v525;
                uint64_t v260 = [v525 iconFallbackShieldDataSource];
                id v508 = (id)v258;
                id v261 = (id)v260;
                v262 = v261;
                if (!(v258 | v260)) {
                  goto LABEL_371;
                }
                if (v508) {
                  BOOL v316 = v260 == 0;
                }
                else {
                  BOOL v316 = 0;
                }
                int v317 = v316;
                if (v261) {
                  BOOL v318 = v258 == 0;
                }
                else {
                  BOOL v318 = 0;
                }
                if (v318 || v317)
                {
                  v307 = v508;

                  uint64_t v334 = v262;
                  uint64_t v70 = v503;
                }
                else
                {
                  v307 = v508;
                  id v319 = [v508 shieldType];
                  uint64_t v70 = v503;
                  if (v319 == [v262 shieldType])
                  {
                    uint64_t v320 = [v508 shieldText];
                    if (!v320)
                    {
                      uint64_t v501 = [v262 shieldText];
                      if (!v501)
                      {
                        unint64_t v496 = 0;
                        uint64_t v501 = 0;
                        int v321 = 0;
                        goto LABEL_684;
                      }
                    }
                    v307 = [v508 shieldText];
                    id v319 = [v262 shieldText];
                    if ([v307 isEqualToString:v319])
                    {
                      unint64_t v496 = (void *)v320;
                      int v321 = 1;
LABEL_684:
                      v415 = [v508 shieldColorString];
                      if (v415
                        || ([v262 shieldColorString],
                            (uint64_t v70 = objc_claimAutoreleasedReturnValue()) != 0))
                      {
                        uint64_t v416 = [v508 shieldColorString];
                        uint64_t v417 = v262;
                        id v418 = [v262 shieldColorString];
                        unsigned __int8 v494 = [v416 isEqualToString:v418];

                        if (v415)
                        {

                          if (!v321) {
                            goto LABEL_689;
                          }
                          goto LABEL_688;
                        }
                      }
                      else
                      {
                        uint64_t v417 = v262;
                        unsigned __int8 v494 = 1;
                      }

                      if ((v321 & 1) == 0)
                      {
LABEL_689:

                        v262 = v417;
                        if (v496)
                        {
                        }
                        else
                        {
                        }
                        uint64_t v5 = v497;
                        uint64_t v3 = v498;
                        unint64_t v43 = v539;
                        unsigned int v259 = v525;
                        BOOL v257 = v529;
                        if ((v494 & 1) == 0)
                        {
                          uint64_t v70 = v503;
                          v307 = v508;
                          goto LABEL_616;
                        }
LABEL_371:
                        unint64_t v495 = v262;
                        uint64_t v263 = [v257 textDataSource];
                        v264 = v259;
                        uint64_t v265 = [v259 textDataSource];
                        id v266 = (id)v263;
                        id v267 = (id)v265;
                        uint64_t v501 = v266;
                        unint64_t v496 = v267;
                        if (!(v263 | v265)) {
                          goto LABEL_372;
                        }
                        if (v266) {
                          BOOL v324 = v265 == 0;
                        }
                        else {
                          BOOL v324 = 0;
                        }
                        int v325 = v324;
                        if (v267) {
                          BOOL v326 = v263 == 0;
                        }
                        else {
                          BOOL v326 = 0;
                        }
                        v327 = v266;
                        v328 = v267;
                        if (v326 || v325)
                        {

                          unsigned __int8 v270 = 0;
                          id v335 = v328;
                        }
                        else
                        {
                          uint64_t v329 = [v266 text];
                          uint64_t v330 = [v328 text];
                          id v331 = (id)v329;
                          id v332 = (id)v330;
                          if (!(v329 | v330))
                          {
                            uint64_t v333 = v332;

                            v264 = v525;
                            BOOL v257 = v529;
LABEL_372:
                            id v268 = [v257 hasRoutingIncidentBadge];
                            id v269 = v264;
                            if (v268 != [v264 hasRoutingIncidentBadge])
                            {
                              unsigned __int8 v270 = 0;
                              v271 = v503;
                              goto LABEL_720;
                            }
                            id v335 = [v257 accessibilityText];
                            if (v335
                              || ([v269 accessibilityText],
                                  (id v268 = (id)objc_claimAutoreleasedReturnValue()) != 0))
                            {
                              v336 = [v529 accessibilityText];
                              uint64_t v337 = [v525 accessibilityText];
                              unsigned __int8 v270 = [v336 isEqualToString:v337];

                              id v269 = v525;
                              unint64_t v43 = v539;
                              v271 = v503;
                              if (!v335) {
                                id v335 = v268;
                              }
                            }
                            else
                            {
                              unsigned __int8 v270 = 1;
                              unint64_t v43 = v539;
                              v271 = v503;
                              id v335 = 0;
                            }
                            goto LABEL_719;
                          }
                          if (v331) {
                            BOOL v365 = v330 == 0;
                          }
                          else {
                            BOOL v365 = 0;
                          }
                          char v366 = v365;
                          id v367 = v332;
                          if (v332) {
                            BOOL v368 = v329 == 0;
                          }
                          else {
                            BOOL v368 = 0;
                          }
                          if (v368 || (v366 & 1) != 0)
                          {

                            id v335 = v367;
                            unsigned __int8 v270 = 0;
                            uint64_t v5 = v497;
                          }
                          else
                          {
                            id v369 = v331;
                            uint64_t v370 = [v331 formatStrings];
                            uint64_t v371 = [v367 formatStrings];
                            id v489 = (id)v370;
                            id v492 = (id)v371;
                            uint64_t v372 = &stru_1012E1600;
                            if (!(v370 | v371))
                            {

                              goto LABEL_595;
                            }
                            if (v489) {
                              BOOL v419 = v371 == 0;
                            }
                            else {
                              BOOL v419 = 0;
                            }
                            char v420 = v419;
                            if (v492) {
                              BOOL v421 = v370 == 0;
                            }
                            else {
                              BOOL v421 = 0;
                            }
                            if (!v421 && (v420 & 1) == 0)
                            {
                              id v422 = [v489 count];
                              if (v422 == [v492 count])
                              {
                                long long v544 = 0u;
                                long long v545 = 0u;
                                long long v542 = 0u;
                                long long v543 = 0u;
                                id v423 = v489;
                                id v424 = [v423 countByEnumeratingWithState:&v542 objects:v541 count:16];
                                if (v424)
                                {
                                  id v425 = v424;
                                  uint64_t v426 = 0;
                                  uint64_t v427 = *(void *)v543;
                                  while (2)
                                  {
                                    for (m = 0; m != v425; m = (char *)m + 1)
                                    {
                                      if (*(void *)v543 != v427) {
                                        objc_enumerationMutation(v423);
                                      }
                                      BOOL v429 = *(NSString **)(*((void *)&v542 + 1) + 8 * (void)m);
                                      id v430 = [v492 objectAtIndexedSubscript:(char *)m + v426];
                                      LODWORD(v429) = sub_1002ADF68(v430, v429, (NSString *)v430);

                                      if (!v429)
                                      {

                                        goto LABEL_717;
                                      }
                                    }
                                    id v425 = [v423 countByEnumeratingWithState:&v542 objects:v541 count:16];
                                    v426 += (uint64_t)m;
                                    if (v425) {
                                      continue;
                                    }
                                    break;
                                  }
                                }

LABEL_595:
                                uint64_t v373 = [v369 separators];
                                uint64_t v374 = [v367 separators];
                                id v486 = (id)v373;
                                id v488 = (id)v374;
                                v375 = &stru_1012E1620;
                                if (v373 | v374)
                                {
                                  if (v486) {
                                    BOOL v443 = v374 == 0;
                                  }
                                  else {
                                    BOOL v443 = 0;
                                  }
                                  char v444 = v443;
                                  if (v488) {
                                    BOOL v445 = v373 == 0;
                                  }
                                  else {
                                    BOOL v445 = 0;
                                  }
                                  if (v445
                                    || (v444 & 1) != 0
                                    || (id v446 = [v486 count], v446 != objc_msgSend(v488, "count")))
                                  {

LABEL_805:
                                    unsigned __int8 v270 = 0;
                                    uint64_t v5 = v497;
                                    uint64_t v3 = v498;
                                    unint64_t v43 = v539;
                                    id v269 = v525;
                                    v271 = v503;
                                    id v335 = v488;
                                    goto LABEL_719;
                                  }
                                  long long v544 = 0u;
                                  long long v545 = 0u;
                                  long long v542 = 0u;
                                  long long v543 = 0u;
                                  id v447 = v486;
                                  id v448 = [v447 countByEnumeratingWithState:&v542 objects:v541 count:16];
                                  if (v448)
                                  {
                                    id v449 = v448;
                                    uint64_t v450 = 0;
                                    uint64_t v451 = *(void *)v543;
                                    while (2)
                                    {
                                      for (n = 0; n != v449; n = (char *)n + 1)
                                      {
                                        if (*(void *)v543 != v451) {
                                          objc_enumerationMutation(v447);
                                        }
                                        BOOL v453 = *(NSString **)(*((void *)&v542 + 1) + 8 * (void)n);
                                        char v454 = [v488 objectAtIndexedSubscript:(char *)n + v450];
                                        LODWORD(v453) = sub_1002ADF68(v454, v453, (NSString *)v454);

                                        if (!v453)
                                        {

                                          goto LABEL_805;
                                        }
                                      }
                                      id v449 = [v447 countByEnumeratingWithState:&v542 objects:v541 count:16];
                                      v450 += (uint64_t)n;
                                      if (v449) {
                                        continue;
                                      }
                                      break;
                                    }
                                  }
                                }
                                else
                                {
                                }
                                uint64_t v376 = [v369 formatTokens];
                                uint64_t v377 = [v367 formatTokens];
                                id v480 = (id)v376;
                                id v483 = (id)v377;
                                BOOL v378 = &stru_1012E1640;
                                if (!(v376 | v377))
                                {

                                  goto LABEL_599;
                                }
                                if (v480) {
                                  BOOL v456 = v377 == 0;
                                }
                                else {
                                  BOOL v456 = 0;
                                }
                                char v457 = v456;
                                if (v483) {
                                  BOOL v458 = v376 == 0;
                                }
                                else {
                                  BOOL v458 = 0;
                                }
                                if (!v458 && (v457 & 1) == 0)
                                {
                                  id v459 = [v480 count];
                                  if (v459 == [v483 count])
                                  {
                                    long long v544 = 0u;
                                    long long v545 = 0u;
                                    long long v542 = 0u;
                                    long long v543 = 0u;
                                    id v460 = v480;
                                    id v461 = [v460 countByEnumeratingWithState:&v542 objects:v541 count:16];
                                    if (v461)
                                    {
                                      id v462 = v461;
                                      uint64_t v463 = 0;
                                      uint64_t v464 = *(void *)v543;
                                      while (2)
                                      {
                                        for (iuint64_t i = 0; ii != v462; iuint64_t i = (char *)ii + 1)
                                        {
                                          if (*(void *)v543 != v464) {
                                            objc_enumerationMutation(v460);
                                          }
                                          BOOL v466 = *(GEOServerFormatToken **)(*((void *)&v542 + 1) + 8 * (void)ii);
                                          char v467 = [v483 objectAtIndexedSubscript:(char *)ii + v463];
                                          LODWORD(v466) = sub_1002ADF70(v467, v466, (GEOServerFormatToken *)v467);

                                          if (!v466)
                                          {
                                            BOOL v468 = v483;

                                            goto LABEL_796;
                                          }
                                        }
                                        id v462 = [v460 countByEnumeratingWithState:&v542 objects:v541 count:16];
                                        v463 += (uint64_t)ii;
                                        if (v462) {
                                          continue;
                                        }
                                        break;
                                      }
                                    }

LABEL_599:
                                    uint64_t v379 = [v369 alternativeString];
                                    uint64_t v380 = [v367 alternativeString];
                                    uint64_t v381 = v379 | v380;
                                    id v382 = (id)v379;
                                    id v383 = (id)v380;
                                    if (v381) {
                                      unsigned __int8 v384 = [v382 isEqual:v383];
                                    }
                                    else {
                                      unsigned __int8 v384 = 1;
                                    }

                                    uint64_t v5 = v497;
                                    uint64_t v3 = v498;
                                    unint64_t v43 = v539;
                                    v264 = v525;
                                    BOOL v257 = v529;
                                    if ((v384 & 1) == 0)
                                    {
                                      unsigned __int8 v270 = 0;
                                      id v269 = v525;
                                      v271 = v503;
LABEL_720:

                                      swift_unknownObjectRelease();
                                      swift_unknownObjectRelease();

                                      uint64_t v4 = v509;
                                      if (v270) {
                                        goto LABEL_126;
                                      }
                                      goto LABEL_377;
                                    }
                                    goto LABEL_372;
                                  }
                                }

                                BOOL v468 = v483;
LABEL_796:

                                goto LABEL_805;
                              }
                            }

LABEL_717:
                            unsigned __int8 v270 = 0;
                            id v335 = v492;
                            uint64_t v5 = v497;
                            uint64_t v3 = v498;
                            unint64_t v43 = v539;
                          }
                        }
                        id v269 = v525;
                        v271 = v503;
LABEL_719:

                        goto LABEL_720;
                      }
LABEL_688:

                      goto LABEL_689;
                    }

                    v307 = v508;
                    uint64_t v334 = v501;
                    if (v320) {
                      uint64_t v334 = (void *)v320;
                    }
                  }
                  else
                  {

                    uint64_t v334 = v262;
                  }
                }

LABEL_616:
LABEL_617:

                swift_unknownObjectRelease();
                char v364 = v525;
                goto LABEL_618;
              }
LABEL_606:

              goto LABEL_607;
            }

            if (v521) {
              BOOL v294 = v521;
            }
            else {
              BOOL v294 = v506;
            }
          }

LABEL_436:
          swift_unknownObjectRelease();
          uint64_t v280 = v525;
          goto LABEL_437;
        }
      }
    }

    swift_unknownObjectRelease();
LABEL_375:
    swift_unknownObjectRelease();
LABEL_376:
    uint64_t v4 = v509;
LABEL_377:
    swift_bridgeObjectRelease();
    sub_10019C1E4((uint64_t)&v540);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_378:
    swift_bridgeObjectRelease();
    uint64_t v2 = a1;
LABEL_4:
    swift_bridgeObjectRelease();
LABEL_5:
    if (++v3 == v505) {
      return;
    }
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = v509;
LABEL_126:
  if (v537 == 2)
  {
LABEL_811:
    swift_bridgeObjectRelease();
    goto LABEL_812;
  }
  unint64_t v481 = v43 + 32;
  uint64_t v484 = v43 & 0xFFFFFFFFFFFFFF8;
  unint64_t v98 = 2;
  while (2)
  {
    if (v535)
    {
      uint64_t v99 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v100 = v98 + 1;
      if (__OFADD__(v98, 1)) {
        goto LABEL_813;
      }
LABEL_136:
      if (v98 == v533) {
        goto LABEL_808;
      }
      unint64_t v524 = v100;
      if (v531)
      {
        uint64_t v101 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v98 >= *(void *)(v484 + 16)) {
          goto LABEL_817;
        }
        uint64_t v101 = *(void *)(v481 + 8 * v98);
        swift_unknownObjectRetain();
      }
      id v102 = (id)v99;
      id v103 = (id)v101;
      if (v99 | v101)
      {
        if (v102) {
          BOOL v104 = v101 == 0;
        }
        else {
          BOOL v104 = 0;
        }
        char v105 = v104;
        if (v103) {
          BOOL v106 = v99 == 0;
        }
        else {
          BOOL v106 = 0;
        }
        unsigned int v107 = v103;
        unsigned int v108 = v102;
        if (v106
          || (v105 & 1) != 0
          || (unsigned int v109 = [v102 artworkSourceType],
              v109 != [v107 artworkSourceType])
          || (unsigned int v110 = [v102 artworkUseType],
              v110 != [v107 artworkUseType]))
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_486;
        }
        uint64_t v111 = [v102 shieldDataSource];
        id v528 = v107;
        uint64_t v112 = [v107 shieldDataSource];
        v113 = (void *)(v111 | v112);
        id v114 = (id)v111;
        id v115 = (id)v112;
        id v515 = v108;
        uint64_t v519 = v114;
        v507 = v115;
        if (!(v111 | v112)) {
          goto LABEL_181;
        }
        if (v114) {
          BOOL v116 = v112 == 0;
        }
        else {
          BOOL v116 = 0;
        }
        int v117 = v116;
        if (v115) {
          BOOL v118 = v111 == 0;
        }
        else {
          BOOL v118 = 0;
        }
        BOOL v119 = v115;
        if (v118 || v117 || (id v120 = [v114 shieldType], v120 != objc_msgSend(v119, "shieldType")))
        {
        }
        else
        {
          BOOL v121 = [v114 shieldText];
          if (!v121)
          {
            id v512 = [v119 shieldText];
            if (!v512)
            {
              id v512 = 0;
              int v122 = 0;
              goto LABEL_172;
            }
          }
          unsigned int v108 = [v114 shieldText];
          v113 = [v119 shieldText];
          if ([v108 isEqualToString:v113])
          {
            int v122 = 1;
LABEL_172:
            id v123 = [v114 shieldColorString];
            if (v123
              || ([v119 shieldColorString], (id v120 = (id)objc_claimAutoreleasedReturnValue()) != 0))
            {
              v124 = [v114 shieldColorString];
              int v125 = [v119 shieldColorString];
              unsigned __int8 v126 = [v124 isEqualToString:v125];

              if (v123)
              {

                uint64_t v5 = v497;
                uint64_t v3 = v498;
                if (v122) {
                  goto LABEL_176;
                }
                goto LABEL_177;
              }
              uint64_t v3 = v498;
            }
            else
            {
              unsigned __int8 v126 = 1;
            }

            uint64_t v5 = v497;
            if (v122)
            {
LABEL_176:
            }
LABEL_177:
            unsigned int v108 = v515;
            id v114 = v519;

            uint64_t v127 = v507;
            if (v121)
            {
            }
            else
            {
            }
            uint64_t v4 = v509;
            if ((v126 & 1) == 0) {
              goto LABEL_478;
            }
LABEL_181:
            uint64_t v128 = [v108 iconDataSource];
            uint64_t v129 = [v528 iconDataSource];
            id v130 = (id)v128;
            id v503 = (id)v129;
            uint64_t v501 = v130;
            if (v128 | v129)
            {
              if (v130) {
                BOOL v131 = v129 == 0;
              }
              else {
                BOOL v131 = 0;
              }
              char v132 = v131;
              if (v503) {
                BOOL v133 = v128 == 0;
              }
              else {
                BOOL v133 = 0;
              }
              if (!v133 && (v132 & 1) == 0)
              {
                unsigned int v134 = [v130 iconType];
                if (v134 == [v503 iconType])
                {
                  unsigned int v135 = [v130 cartoID];
                  if (v135 == [v503 cartoID])
                  {
                    unsigned int v136 = [v130 defaultTransitType];
                    if (v136 == [v503 defaultTransitType])
                    {
                      unsigned int v137 = [v130 iconAttributeKey];
                      if (v137 == [v503 iconAttributeKey])
                      {
                        unsigned int v138 = [v130 iconAttributeValue];
                        unsigned int v139 = [v503 iconAttributeValue];

                        if (v138 != v139) {
                          goto LABEL_485;
                        }
                        goto LABEL_198;
                      }
                    }
                  }
                }
              }
              v149 = v130;
              v148 = v503;
LABEL_484:

              id v130 = v501;
LABEL_485:
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

              unsigned int v108 = v130;
              unsigned int v107 = v503;
LABEL_486:

              goto LABEL_377;
            }
LABEL_198:
            uint64_t v140 = [v108 iconFallbackShieldDataSource];
            uint64_t v141 = [v528 iconFallbackShieldDataSource];
            id v142 = (void *)(v140 | v141);
            id v143 = (id)v140;
            id v144 = (id)v141;
            id v512 = v143;
            if (!(v140 | v141)) {
              goto LABEL_224;
            }
            if (v143) {
              BOOL v145 = v141 == 0;
            }
            else {
              BOOL v145 = 0;
            }
            int v146 = v145;
            if (v144) {
              BOOL v147 = v140 == 0;
            }
            else {
              BOOL v147 = 0;
            }
            v148 = v144;
            if (v147 || v146)
            {
              v149 = v512;
LABEL_472:

              v314 = v148;
            }
            else
            {
              v149 = v512;
              id v150 = [v512 shieldType];
              if (v150 != [v148 shieldType]) {
                goto LABEL_472;
              }
              char v151 = [v512 shieldText];
              if (!v151)
              {
                unint64_t v496 = [v148 shieldText];
                if (!v496)
                {
                  unint64_t v496 = 0;
                  int v152 = 0;
                  goto LABEL_215;
                }
              }
              unsigned int v108 = [v512 shieldText];
              id v142 = [v148 shieldText];
              if ([v108 isEqualToString:v142])
              {
                int v152 = 1;
LABEL_215:
                uint64_t v153 = [v512 shieldColorString];
                if (v153
                  || ([v148 shieldColorString],
                      (unint64_t v495 = objc_claimAutoreleasedReturnValue()) != 0))
                {
                  v154 = [v512 shieldColorString];
                  uint64_t v155 = v148;
                  id v156 = [v148 shieldColorString];
                  unsigned __int8 v157 = [v154 isEqualToString:v156];

                  if (v153)
                  {

                    uint64_t v5 = v497;
                    uint64_t v3 = v498;
                    v148 = v155;
                    char v158 = v157;
                    if (v152) {
                      goto LABEL_219;
                    }
                    goto LABEL_220;
                  }
                  uint64_t v3 = v498;
                  v148 = v155;
                  char v158 = v157;
                  BOOL v180 = v495;
                }
                else
                {
                  BOOL v180 = 0;
                  char v158 = 1;
                }

                uint64_t v5 = v497;
                if (v152)
                {
LABEL_219:
                }
LABEL_220:
                unsigned int v108 = v515;

                if (v151)
                {
                }
                else
                {
                }
                uint64_t v4 = v509;
                id v144 = v148;
                if ((v158 & 1) == 0)
                {
                  v149 = v512;
                  goto LABEL_484;
                }
LABEL_224:
                v490 = v144;
                uint64_t v159 = [v108 textDataSource];
                uint64_t v160 = v108;
                uint64_t v161 = v528;
                uint64_t v162 = [v528 textDataSource];
                id v163 = (id)v159;
                id v164 = (id)v162;
                unint64_t v495 = v164;
                unint64_t v496 = v163;
                if (!(v159 | v162))
                {
LABEL_225:
                  unsigned int v165 = [v160 hasRoutingIncidentBadge];
                  uint64_t v166 = v161;
                  if (v165 != [v161 hasRoutingIncidentBadge])
                  {
                    unsigned int v167 = 0;
                    goto LABEL_353;
                  }
                  uint64_t v177 = [v160 accessibilityText];
                  if (v177
                    || ([v161 accessibilityText], (id v163 = (id)objc_claimAutoreleasedReturnValue()) != 0))
                  {
                    v178 = [v160 accessibilityText];
                    uint64_t v179 = [v528 accessibilityText];
                    unsigned int v167 = [v178 isEqualToString:v179];

                    uint64_t v166 = v528;
                    if (!v177) {
                      uint64_t v177 = v163;
                    }
                  }
                  else
                  {
                    unsigned int v167 = 1;
                    uint64_t v177 = 0;
                  }
LABEL_352:

                  goto LABEL_353;
                }
                if (v163) {
                  BOOL v168 = v162 == 0;
                }
                else {
                  BOOL v168 = 0;
                }
                int v169 = v168;
                if (v164) {
                  BOOL v170 = v159 == 0;
                }
                else {
                  BOOL v170 = 0;
                }
                uint64_t v171 = v163;
                uint64_t v172 = v164;
                if (v170 || v169)
                {

                  unsigned int v167 = 0;
                  uint64_t v177 = v172;
                  uint64_t v166 = v528;
                  goto LABEL_352;
                }
                uint64_t v173 = [v163 text];
                uint64_t v174 = [v172 text];
                id v163 = (id)v173;
                id v175 = (id)v174;
                if (!(v173 | v174))
                {
                  unint64_t v176 = v175;

                  uint64_t v161 = v528;
                  uint64_t v160 = v515;
                  goto LABEL_225;
                }
                if (v163) {
                  BOOL v181 = v174 == 0;
                }
                else {
                  BOOL v181 = 0;
                }
                char v182 = v181;
                uint64_t v478 = v175;
                if (v175) {
                  BOOL v183 = v173 == 0;
                }
                else {
                  BOOL v183 = 0;
                }
                if (v183 || (v182 & 1) != 0)
                {

                  uint64_t v177 = v478;
                  unsigned int v167 = 0;
                  uint64_t v166 = v528;
                  goto LABEL_352;
                }
                v476 = v163;
                uint64_t v184 = [v163 formatStrings];
                uint64_t v185 = [v478 formatStrings];
                id v186 = (id)v184;
                id v187 = (id)v185;
                BOOL v188 = &stru_1012E1600;
                if (v184 | v185)
                {
                  if (v186) {
                    BOOL v205 = v185 == 0;
                  }
                  else {
                    BOOL v205 = 0;
                  }
                  char v206 = v205;
                  if (v187) {
                    BOOL v207 = v184 == 0;
                  }
                  else {
                    BOOL v207 = 0;
                  }
                  unsigned int v208 = v187;
                  unsigned int v209 = v186;
                  if (v207
                    || (v206 & 1) != 0
                    || (id v210 = [v186 count], v210 != objc_msgSend(v208, "count")))
                  {

                    BOOL v218 = v208;
                    uint64_t v166 = v528;
LABEL_298:

                    unsigned int v167 = 0;
                    uint64_t v177 = v218;
                    goto LABEL_352;
                  }
                  long long v544 = 0u;
                  long long v545 = 0u;
                  long long v542 = 0u;
                  long long v543 = 0u;
                  uint64_t v474 = v186;
                  id v211 = v186;
                  id v212 = [v211 countByEnumeratingWithState:&v542 objects:v541 count:16];
                  if (v212)
                  {
                    id v213 = v212;
                    uint64_t v214 = 0;
                    uint64_t v215 = *(void *)v543;
                    while (2)
                    {
                      for (jj = 0; jj != v213; jj = (char *)jj + 1)
                      {
                        if (*(void *)v543 != v215) {
                          objc_enumerationMutation(v211);
                        }
                        int v217 = *(NSString **)(*((void *)&v542 + 1) + 8 * (void)jj);
                        BOOL v218 = v208;
                        v219 = [v208 objectAtIndexedSubscript:(char *)jj + v214];
                        LODWORD(v217) = sub_1002ADF68(v219, v217, (NSString *)v219);

                        if (!v217)
                        {

                          uint64_t v3 = v498;
                          uint64_t v4 = v509;
                          uint64_t v166 = v528;
                          unsigned int v209 = v474;
                          goto LABEL_298;
                        }
                        unsigned int v208 = v218;
                      }
                      id v213 = [v211 countByEnumeratingWithState:&v542 objects:v541 count:16];
                      v214 += (uint64_t)jj;
                      if (v213) {
                        continue;
                      }
                      break;
                    }
                  }
                  uint64_t v473 = v208;

                  uint64_t v3 = v498;
                  uint64_t v4 = v509;
                }
                else
                {
                  uint64_t v473 = v187;
                  uint64_t v474 = v186;
                }
                uint64_t v189 = [v476 separators];
                uint64_t v190 = [v478 separators];
                id v191 = (id)v189;
                id v192 = (id)v190;
                v193 = &stru_1012E1620;
                v475 = v192;
                if (!(v189 | v190))
                {
                  id v472 = v191;

                  goto LABEL_262;
                }
                if (v191) {
                  BOOL v220 = v190 == 0;
                }
                else {
                  BOOL v220 = 0;
                }
                char v221 = v220;
                if (v192) {
                  BOOL v222 = v189 == 0;
                }
                else {
                  BOOL v222 = 0;
                }
                if (v222
                  || (v221 & 1) != 0
                  || (id v223 = [v191 count], v223 != objc_msgSend(v192, "count")))
                {

                  uint64_t v166 = v528;
                }
                else
                {
                  long long v544 = 0u;
                  long long v545 = 0u;
                  long long v542 = 0u;
                  long long v543 = 0u;
                  id v472 = v191;
                  id v224 = v191;
                  id v225 = [v224 countByEnumeratingWithState:&v542 objects:v541 count:16];
                  if (v225)
                  {
                    id v226 = v225;
                    uint64_t v227 = 0;
                    uint64_t v228 = *(void *)v543;
                    while (2)
                    {
                      for (kk = 0; kk != v226; kk = (char *)kk + 1)
                      {
                        if (*(void *)v543 != v228) {
                          objc_enumerationMutation(v224);
                        }
                        uint64_t v230 = *(NSString **)(*((void *)&v542 + 1) + 8 * (void)kk);
                        v231 = [v475 objectAtIndexedSubscript:(char *)kk + v227];
                        LODWORD(v230) = sub_1002ADF68(v231, v230, (NSString *)v231);

                        if (!v230)
                        {

LABEL_349:
                          uint64_t v3 = v498;
                          uint64_t v4 = v509;
                          goto LABEL_350;
                        }
                      }
                      id v226 = [v224 countByEnumeratingWithState:&v542 objects:v541 count:16];
                      v227 += (uint64_t)kk;
                      if (v226) {
                        continue;
                      }
                      break;
                    }
                  }

                  uint64_t v3 = v498;
                  uint64_t v4 = v509;
LABEL_262:
                  uint64_t v194 = [v476 formatTokens];
                  uint64_t v195 = [v478 formatTokens];
                  id v196 = (id)v194;
                  id v197 = (id)v195;
                  unsigned __int8 v198 = &stru_1012E1640;
                  if (!(v194 | v195))
                  {
                    id v469 = v197;
                    id v471 = v196;

LABEL_264:
                    uint64_t v199 = [v476 alternativeString];
                    uint64_t v200 = [v478 alternativeString];
                    uint64_t v201 = v199 | v200;
                    id v202 = (id)v199;
                    id v203 = (id)v200;
                    if (v201) {
                      unsigned __int8 v204 = [v202 isEqual:v203];
                    }
                    else {
                      unsigned __int8 v204 = 1;
                    }
                    id v163 = v496;

                    uint64_t v161 = v528;
                    uint64_t v160 = v515;
                    if (v204) {
                      goto LABEL_225;
                    }
                    unsigned int v167 = 0;
                    uint64_t v166 = v528;
LABEL_353:

                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();

                    if (!v167) {
                      goto LABEL_377;
                    }
LABEL_129:
                    unint64_t v98 = v524;
                    if (v524 == v537) {
                      goto LABEL_811;
                    }
                    continue;
                  }
                  if (v196) {
                    BOOL v232 = v195 == 0;
                  }
                  else {
                    BOOL v232 = 0;
                  }
                  char v233 = v232;
                  if (v197) {
                    BOOL v234 = v194 == 0;
                  }
                  else {
                    BOOL v234 = 0;
                  }
                  unsigned int v235 = v197;
                  if (!v234 && (v233 & 1) == 0)
                  {
                    id v471 = v196;
                    id v236 = [v196 count];
                    if (v236 == [v197 count])
                    {
                      long long v544 = 0u;
                      long long v545 = 0u;
                      long long v542 = 0u;
                      long long v543 = 0u;
                      id v237 = v196;
                      id v238 = [v237 countByEnumeratingWithState:&v542 objects:v541 count:16];
                      if (v238)
                      {
                        id v239 = v238;
                        uint64_t v240 = 0;
                        uint64_t v241 = *(void *)v543;
                        while (2)
                        {
                          for (mm = 0; mm != v239; mm = (char *)mm + 1)
                          {
                            if (*(void *)v543 != v241) {
                              objc_enumerationMutation(v237);
                            }
                            id v243 = *(GEOServerFormatToken **)(*((void *)&v542 + 1) + 8 * (void)mm);
                            v244 = v235;
                            v245 = [v235 objectAtIndexedSubscript:(char *)mm + v240];
                            LODWORD(v243) = sub_1002ADF70(v245, v243, (GEOServerFormatToken *)v245);

                            if (!v243)
                            {

                              goto LABEL_349;
                            }
                            unsigned int v235 = v244;
                          }
                          id v239 = [v237 countByEnumeratingWithState:&v542 objects:v541 count:16];
                          v240 += (uint64_t)mm;
                          if (v239) {
                            continue;
                          }
                          break;
                        }
                      }
                      id v469 = v235;

                      uint64_t v3 = v498;
                      uint64_t v4 = v509;
                      goto LABEL_264;
                    }
                  }

LABEL_350:
                  uint64_t v166 = v528;
                  id v191 = v472;
                }

                unsigned int v167 = 0;
                uint64_t v177 = v475;
                goto LABEL_352;
              }

              v314 = v496;
              if (v151) {
                v314 = v151;
              }
              uint64_t v4 = v509;
              unsigned int v108 = v515;
            }

            goto LABEL_484;
          }

          if (v121) {
            BOOL v119 = v121;
          }
          else {
            BOOL v119 = v512;
          }
          uint64_t v4 = v509;
          unsigned int v108 = v515;
        }

        uint64_t v127 = v507;
LABEL_478:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        unsigned int v108 = v114;
        unsigned int v107 = v127;
        goto LABEL_486;
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_129;
    }
    break;
  }
  if (v98 >= *(void *)((v511 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_816;
  }
  uint64_t v99 = *(void *)(v511 + 32 + 8 * v98);
  swift_unknownObjectRetain();
  unint64_t v100 = v98 + 1;
  if (!__OFADD__(v98, 1)) {
    goto LABEL_136;
  }
LABEL_813:
  __break(1u);
LABEL_814:
  __break(1u);
LABEL_815:
  __break(1u);
LABEL_816:
  __break(1u);
LABEL_817:
  __break(1u);
LABEL_818:
  __break(1u);
LABEL_819:
  __break(1u);
}

uint64_t sub_1002ACC18(uint64_t a1, unint64_t a2)
{
  if (!(a2 >> 62))
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
LABEL_3:
  uint64_t v5 = 0;
  uint64_t v6 = OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
  int v9 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA);
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 8 * v5 + 32);
      swift_retain();
    }
    if (v9 == *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA)
      && ([*(id *)(v7 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem) isEqual:*(void *)(a1 + v6)] & 1) != 0)
    {
      break;
    }
    swift_release();
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    if (++v5 == v4) {
      return 0;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v10)
  {
    swift_release();
    return v5;
  }
LABEL_16:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1002ACEC0@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_1003481A8(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    sub_1000EFD84(&v5[4 * a1 + 4], a2);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v5[4 * a1 + 4], &v5[4 * a1 + 8], 32 * (v7 - a1));
      v5[2] = v7;
      void *v2 = v5;
      return result;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002ACFAC(unint64_t a1)
{
  return sub_1002ACFC4(a1, sub_1000A1A6C);
}

uint64_t sub_1002ACFC4(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    uint64_t *v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)(v7 + 16) = v9;
      specialized Array._endMutation()();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1002AD0B0(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v2 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v2)
      {
LABEL_4:
        uint64_t v30 = v2 - 1;
        if (v2 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v3 = 0;
        unsigned int v27 = (void *)(v26 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models);
        uint64_t v25 = (void *)(v26 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_etaProviders);
        unint64_t v28 = v1 & 0xC000000000000001;
        unint64_t v29 = v1;
        if ((v1 & 0xC000000000000001) == 0) {
          goto LABEL_7;
        }
LABEL_6:
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        while (1)
        {
          id v5 = *(id *)(v4 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem);
          id v6 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:[v5 _muid]];
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_100100830(0, (unint64_t *)&qword_1015D9670);
          uint64_t v7 = (void *)static OS_os_log.default.getter();
          static os_log_type_t.debug.getter();
          sub_1000FF33C((uint64_t *)&unk_1015D59C0);
          uint64_t v8 = swift_allocObject();
          *(_OWORD *)(v8 + 16) = xmmword_100F5CFA0;
          *(void *)(v8 + 56) = sub_100100830(0, (unint64_t *)&qword_1015D9680);
          *(void *)(v8 + 64) = sub_1002ADE74();
          *(void *)(v8 + 32) = v6;
          id v9 = v6;
          id v10 = [v5 name];
          uint64_t v11 = v10;
          if (v31) {
            break;
          }
          if (v10)
          {
            uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v17 = v16;
          }
          else
          {
            uint64_t v15 = 0;
            unint64_t v17 = 0;
          }
          *(void *)(v8 + 96) = &type metadata for String;
          *(void *)(v8 + 104) = sub_10011A750();
          if (v17) {
            uint64_t v20 = v15;
          }
          else {
            uint64_t v20 = 0;
          }
          unint64_t v21 = 0xE000000000000000;
          if (v17) {
            unint64_t v21 = v17;
          }
          *(void *)(v8 + 72) = v20;
          *(void *)(v8 + 80) = v21;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          swift_beginAccess();
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          id v22 = [objc_allocWithZone((Class)MKETAProvider) initWithMapItem:v5];
          if (!v22)
          {

LABEL_20:
            swift_release();
            goto LABEL_33;
          }
          id v23 = v22;
          [v22 _placeSummary_addObserver:v26];
          swift_beginAccess();
          id v24 = v23;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          [v24 start];
          swift_release();

LABEL_33:
          unint64_t v1 = v29;
          if (v30 == v3) {
            return swift_bridgeObjectRelease();
          }
          ++v3;
          if (v28) {
            goto LABEL_6;
          }
LABEL_7:
          uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
          swift_retain();
        }
        if (v10)
        {
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v14 = v13;
        }
        else
        {
          uint64_t v12 = 0;
          unint64_t v14 = 0;
        }
        *(void *)(v8 + 96) = &type metadata for String;
        *(void *)(v8 + 104) = sub_10011A750();
        if (v14) {
          uint64_t v18 = v12;
        }
        else {
          uint64_t v18 = 0;
        }
        unint64_t v19 = 0xE000000000000000;
        if (v14) {
          unint64_t v19 = v14;
        }
        *(void *)(v8 + 72) = v18;
        *(void *)(v8 + 80) = v19;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1002AD5A0(void *a1)
{
  if (!a1) {
    goto LABEL_24;
  }
  swift_beginAccess();
  id v2 = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1002ADCC8(v3, v2);
  swift_bridgeObjectRelease();

  if (!v4) {
    return;
  }
  [v2 etaTravelTime];
  double v6 = v5;
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_searchAlongRoute) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
  if (v6 > 0.0)
  {
    uint64_t v7 = self;
    if ((~*(void *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -1.0)
      {
        if (v6 < 1.84467441e19)
        {
          id v8 = [v7 _navigation_stringWithSeconds:v6 andAbbreviationType:2];
          if (v8)
          {
            id v9 = v8;
            uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v12 = v11;

            swift_getKeyPath();
            swift_getKeyPath();
            uint64_t v24 = v12;
            swift_retain();
            static Published.subscript.setter();
            sub_100100830(0, (unint64_t *)&qword_1015D9670);
            unint64_t v13 = (void *)static OS_os_log.default.getter();
            static os_log_type_t.debug.getter();
            sub_1000FF33C((uint64_t *)&unk_1015D59C0);
            uint64_t v14 = swift_allocObject();
            *(_OWORD *)(v14 + 16) = xmmword_100F5CFA0;
            uint64_t v15 = OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
            id v16 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:[*(id *)(v4 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem) _muid]];
            *(void *)(v14 + 56) = sub_100100830(0, (unint64_t *)&qword_1015D9680);
            *(void *)(v14 + 64) = sub_1002ADE74();
            *(void *)(v14 + 32) = v16;
            id v17 = [*(id *)(v4 + v15) name];
            if (v17)
            {
              uint64_t v18 = v17;
              uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v21 = v20;
            }
            else
            {
              uint64_t v19 = 0;
              unint64_t v21 = 0;
            }
            *(void *)(v14 + 96) = &type metadata for String;
            *(void *)(v14 + 104) = sub_10011A750();
            if (v21) {
              uint64_t v22 = v19;
            }
            else {
              uint64_t v22 = 0;
            }
            unint64_t v23 = 0xE000000000000000;
            if (v21) {
              unint64_t v23 = v21;
            }
            *(void *)(v14 + 72) = v22;
            *(void *)(v14 + 80) = v23;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            sub_1002AD95C((uint64_t)v2, v4);
          }
          goto LABEL_19;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
LABEL_19:
  swift_release();
}

uint64_t sub_1002AD95C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  double v6 = (unint64_t *)(v2 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_etaProviders);
  swift_beginAccess();
  unint64_t v7 = *v6;
  swift_bridgeObjectRetain();
  sub_1002A940C(a1, v7, &qword_1015D9668);
  unint64_t v9 = v8;
  char v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v12 = (void *)sub_1002ACFC4(v9, sub_1000A1A6C);
    swift_endAccess();
  }
  unint64_t v13 = (unint64_t *)(v3 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models);
  swift_beginAccess();
  unint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_1002ACC18(a2, v14);
  char v17 = v16;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    swift_beginAccess();
    sub_1002ACFC4(v15, sub_1000A1A6C);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

id sub_1002ADB28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryETADownloader();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryETADownloader()
{
  return self;
}

uint64_t sub_1002ADBCC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002ADC4C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1002ADCC8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 4;
      do
      {
        uint64_t v5 = v4 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v6 = *(void *)(a1 + 8 * v4);
          swift_retain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        id v8 = *(id *)(v6 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem);
        id v9 = [a2 mapItem];
        if (v9)
        {
          char v10 = v9;
          sub_100100830(0, &qword_1015CF128);
          id v11 = v8;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12)
          {
            swift_bridgeObjectRelease();
            return v6;
          }
          swift_release();
        }
        else
        {
          swift_release();
        }
        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1002ADE74()
{
  unint64_t result = qword_1015D9688;
  if (!qword_1015D9688)
  {
    sub_100100830(255, (unint64_t *)&qword_1015D9680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9688);
  }
  return result;
}

unint64_t sub_1002ADEE4()
{
  unint64_t result = qword_1015D9690;
  if (!qword_1015D9690)
  {
    type metadata accessor for ContentSizeCategory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9690);
  }
  return result;
}

uint64_t sub_1002ADF3C(uint64_t a1)
{
  return a1;
}

BOOL sub_1002ADF70(id a1, GEOServerFormatToken *a2, GEOServerFormatToken *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a3;
  char v6 = GEOServerFormatTokenEqual();

  return v6;
}

uint64_t sub_1002ADFC8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaceSummaryLine(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for PlaceSummaryLine(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for PlaceSummaryLine(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryLine(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryLine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryLine()
{
  return &type metadata for PlaceSummaryLine;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitPublisherNameForGuide()
{
  return &type metadata for PlaceSummaryUnitPublisherNameForGuide;
}

uint64_t sub_1002AE15C()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

Swift::Void __swiftcall UIView.annotateView(placeCardViewController:)(PlaceCardViewController *placeCardViewController)
{
  uint64_t v2 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PlaceEntity();
  __chkstk_darwin(v6);
  id v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v9).n128_u64[0];
  char v12 = (char *)&v23[-1] - v11;
  unint64_t v13 = [(PlaceCardViewController *)placeCardViewController placeCardItem];
  if (v13)
  {
    uint64_t v22 = v13;
    unint64_t v14 = [(PlaceCardItem *)v13 mapItem];
    if (v14)
    {
      unint64_t v15 = v14;
      uint64_t v16 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
      char v17 = v15;
      sub_10035772C(v17, (uint64_t)v5, (uint64_t)v12);
      uint64_t v24 = v6;
      uint64_t v25 = sub_1002AE614(&qword_1015D96A0, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
      uint64_t v18 = sub_100100B1C(v23);
      sub_1002AE4EC((uint64_t)v12, (uint64_t)v18);
      sub_1000FF380(v23, v24);
      sub_1002AE15C();
      sub_1002AE4EC((uint64_t)v18, (uint64_t)v8);
      id v19 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
      unint64_t v20 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
      UIView.annotate(with:)();

      sub_1000FF22C((uint64_t)v23);
      sub_1002AE550((uint64_t)v12);
    }
    else
    {
      unint64_t v21 = v22;
    }
  }
}

uint64_t sub_1002AE4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AE550(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaceEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002AE614(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002AE65C()
{
  unint64_t result = qword_1015D96B8;
  if (!qword_1015D96B8)
  {
    sub_10010118C(&qword_1015D96B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D96B8);
  }
  return result;
}

uint64_t sub_1002AE6B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

id sub_1002AE730()
{
  uint64_t v1 = type metadata accessor for AttributedString();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - v6;
  *(void *)&v0[OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel____lazy_storage___labelView] = 1;
  id v8 = v0;
  AttributedString.init(stringLiteral:)();
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  swift_endAccess();

  uint64_t v9 = (objc_class *)type metadata accessor for DistanceAccessoryLabelViewModel();
  v12.receiver = v8;
  v12.super_class = v9;
  return [super init];
}

id sub_1002AEA90()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel____lazy_storage___labelView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel____lazy_storage___labelView];
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = sub_1002AEB44(v0);
    uint64_t v4 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v3;
    id v5 = v3;
    sub_10010B3BC(v4);
  }
  sub_1000F41B8(v2);
  return v3;
}

id sub_1002AEB44(void *a1)
{
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8);
  type metadata accessor for DistanceAccessoryLabelViewModel();
  sub_1002AFE00(&qword_1015D9710, (void (*)(uint64_t))type metadata accessor for DistanceAccessoryLabelViewModel);
  id v3 = a1;
  uint64_t v4 = ObservedObject.init(wrappedValue:)();
  uint64_t v6 = v5;
  objc_allocWithZone((Class)sub_1000FF33C(&qword_1015D9718));
  uint64_t v14 = v4;
  unint64_t v15 = v6;
  id v7 = v6;
  id v8 = (void *)UIHostingController.init(rootView:)();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  id v9 = v8;
  dispatch thunk of UIHostingController._disableSafeArea.setter();

  id result = [v9 view:v14, v15];
  if (result)
  {
    uint64_t v11 = result;
    id v12 = [self clearColor];
    [v11 setBackgroundColor:v12];

    id v13 = [v9 view];
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002AECF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DistanceAccessoryLabelViewModel();
  return [super dealloc];
}

uint64_t sub_1002AEDB4()
{
  return type metadata accessor for DistanceAccessoryLabelViewModel();
}

uint64_t type metadata accessor for DistanceAccessoryLabelViewModel()
{
  uint64_t result = qword_1015D96F8;
  if (!qword_1015D96F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002AEE08()
{
  sub_1002AEEA0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002AEEA0()
{
  if (!qword_1015D9708)
  {
    type metadata accessor for AttributedString();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D9708);
    }
  }
}

uint64_t sub_1002AEEF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DistanceAccessoryLabelViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1002AEF38@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for ContentTransition.Style();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D9728) - 8;
  __chkstk_darwin(v5);
  char v57 = (uint64_t *)((char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = type metadata accessor for ContentTransition();
  uint64_t v7 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  id v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  __chkstk_darwin(v10);
  id v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000FF33C(&qword_1015D9730) - 8;
  __chkstk_darwin(v55);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000FF33C(&qword_1015D9738) - 8;
  __chkstk_darwin(v59);
  BOOL v58 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000FF33C(&qword_1015D9740) - 8;
  __chkstk_darwin(v61);
  unsigned int v60 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000FF33C(&qword_1015D9748);
  __chkstk_darwin(v65);
  uint64_t v62 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = a1;
  id v53 = v12;
  id v54 = v18;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v19 = Text.init(_:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  id v52 = v9;
  static ContentTransition.numericText(increasing:)();
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = *(int *)(v5 + 36);
  unint64_t v29 = v57;
  uint64_t v30 = v9;
  uint64_t v31 = v56;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v57 + v28, v30, v56);
  *unint64_t v29 = v27;
  sub_1000FF27C((uint64_t)v29, (uint64_t)&v14[*(int *)(v55 + 44)], &qword_1015D9728);
  *(void *)uint64_t v14 = v19;
  *((void *)v14 + 1) = v21;
  v14[16] = v25;
  *((void *)v14 + 3) = v23;
  *((void *)v14 + 4) = KeyPath;
  v14[40] = 0;
  sub_10017FDF0(v19, v21, v25);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000FF2E0((uint64_t)v29, &qword_1015D9728);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v52, v31);
  sub_10017F958(v19, v21, v25);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = static Animation.spring(response:dampingFraction:blendDuration:)();
  swift_getKeyPath();
  swift_getKeyPath();
  id v33 = v54;
  char v34 = v53;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v35 = (uint64_t)v58;
  char v36 = (uint64_t *)&v58[*(int *)(v59 + 44)];
  uint64_t v37 = sub_1000FF33C(&qword_1015D9750);
  uint64_t v39 = v63;
  uint64_t v38 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))((char *)v36 + *(int *)(v37 + 36), v34, v64);
  uint64_t *v36 = v32;
  uint64_t v40 = v35;
  sub_1000FF27C((uint64_t)v14, v35, &qword_1015D9730);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v38);
  sub_1000FF2E0((uint64_t)v14, &qword_1015D9730);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = v66;
  static ContentTransition.Style.sessionWidget.getter();
  uint64_t v43 = (uint64_t)v60;
  unint64_t v44 = (uint64_t *)&v60[*(int *)(v61 + 44)];
  uint64_t v45 = sub_1000FF33C(&qword_1015D9758);
  uint64_t v47 = v67;
  uint64_t v46 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))((char *)v44 + *(int *)(v45 + 28), v42, v68);
  *unint64_t v44 = v41;
  sub_1000FF27C(v40, v43, &qword_1015D9738);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v46);
  sub_1000FF2E0(v40, &qword_1015D9738);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = v62;
  sub_1000FF27C(v43, v62, &qword_1015D9740);
  uint64_t v50 = v49 + *(int *)(v65 + 36);
  *(void *)uint64_t v50 = v48;
  *(unsigned char *)(v50 + 8) = 1;
  sub_1000FF2E0(v43, &qword_1015D9740);
  sub_1002AFAD0();
  View.accessibility(identifier:)();
  return sub_1000FF2E0(v49, &qword_1015D9748);
}

uint64_t sub_1002AF608@<X0>(uint64_t a1@<X8>)
{
  return sub_1002AEF38(*(void **)(v1 + 8), a1);
}

uint64_t sub_1002AF610()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1002AF690(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - v10;
  id v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v16 - v10, a1, v4, v9);
  uint64_t v13 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v12)(v7, v11, v4);
  id v14 = v13;
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

void *initializeBufferWithCopyOfBuffer for DistanceAccessoryLabelView(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for DistanceAccessoryLabelView(uint64_t a1)
{
}

void *assignWithCopy for DistanceAccessoryLabelView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for DistanceAccessoryLabelView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for DistanceAccessoryLabelView()
{
  return &type metadata for DistanceAccessoryLabelView;
}

uint64_t sub_1002AF8BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002AF8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  __n128 v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1002AF9B0()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_1002AF9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002AF8D8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_1002AFA14()
{
  return EnvironmentValues.contentTransitionStyle.getter();
}

uint64_t sub_1002AFA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002AF8D8(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition.Style, (uint64_t (*)(char *))&EnvironmentValues.contentTransitionStyle.setter);
}

uint64_t sub_1002AFA78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.contentTransitionAddsDrawingGroup.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002AFAA8()
{
  return EnvironmentValues.contentTransitionAddsDrawingGroup.setter();
}

unint64_t sub_1002AFAD0()
{
  unint64_t result = qword_1015D9760;
  if (!qword_1015D9760)
  {
    sub_10010118C(&qword_1015D9748);
    sub_1002AFB70();
    sub_1001010F8(&qword_1015D9798, &qword_1015D97A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9760);
  }
  return result;
}

unint64_t sub_1002AFB70()
{
  unint64_t result = qword_1015D9768;
  if (!qword_1015D9768)
  {
    sub_10010118C(&qword_1015D9740);
    sub_1002AFC10();
    sub_1001010F8(&qword_1015D9790, &qword_1015D9758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9768);
  }
  return result;
}

unint64_t sub_1002AFC10()
{
  unint64_t result = qword_1015D9770;
  if (!qword_1015D9770)
  {
    sub_10010118C(&qword_1015D9738);
    sub_1002AFCB0();
    sub_1001010F8(&qword_1015D9788, &qword_1015D9750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9770);
  }
  return result;
}

unint64_t sub_1002AFCB0()
{
  unint64_t result = qword_1015D9778;
  if (!qword_1015D9778)
  {
    sub_10010118C(&qword_1015D9730);
    sub_10029248C();
    sub_1001010F8(&qword_1015D9780, &qword_1015D9728);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9778);
  }
  return result;
}

unint64_t sub_1002AFD54()
{
  unint64_t result = qword_1015D97A8;
  if (!qword_1015D97A8)
  {
    sub_10010118C((uint64_t *)&unk_1015D97B0);
    sub_1002AFAD0();
    sub_1002AFE00((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D97A8);
  }
  return result;
}

uint64_t sub_1002AFE00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002AFE4C(uint64_t a1)
{
  uint64_t v60 = sub_1000FF33C(&qword_1015D9940);
  __chkstk_darwin(v60);
  uint64_t v54 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v53 = (char *)&v43 - v5;
  __chkstk_darwin(v6);
  id v52 = (char *)&v43 - v7;
  uint64_t v8 = type metadata accessor for Handle();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (unint64_t)v13;
  }
  uint64_t v43 = v1;
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_10025B018(0, v12, 0);
  unint64_t result = sub_1002BC504(a1);
  uint64_t v16 = 0;
  uint64_t v17 = a1 + 64;
  uint64_t v47 = v9 + 32;
  uint64_t v48 = v9 + 16;
  uint64_t v55 = a1 + 80;
  uint64_t v18 = v9;
  uint64_t v50 = v9;
  uint64_t v51 = a1;
  uint64_t v49 = v11;
  int64_t v44 = v12;
  uint64_t v45 = v15;
  uint64_t v46 = a1 + 64;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v21 = result >> 6;
    if ((*(void *)(v17 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v56 = v16;
    uint64_t v57 = 1 << result;
    uint64_t v22 = v52;
    uint64_t v23 = &v52[*(int *)(v60 + 48)];
    uint64_t v24 = *(void *)(a1 + 56);
    char v25 = (uint64_t *)(*(void *)(a1 + 48) + 16 * result);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v58 = *(void *)(v18 + 72);
    int64_t v59 = result;
    uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    v28(v23, v24 + v58 * result, v8);
    *uint64_t v22 = v27;
    v22[1] = v26;
    uint64_t v29 = v8;
    uint64_t v30 = v53;
    *(void *)id v53 = v27;
    *((void *)v30 + 1) = v26;
    uint64_t v31 = v60;
    v28(&v30[*(int *)(v60 + 48)], (unint64_t)v23, v29);
    uint64_t v32 = (uint64_t)v30;
    uint64_t v8 = v29;
    uint64_t v33 = v54;
    sub_100101750(v32, v54, &qword_1015D9940);
    swift_bridgeObjectRetain_n();
    uint64_t v34 = (uint64_t)v22;
    uint64_t v35 = v49;
    sub_1000FF2E0(v34, &qword_1015D9940);
    v28(v35, v33 + *(int *)(v31 + 48), v29);
    sub_1000FF2E0(v33, &qword_1015D9940);
    uint64_t v13 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10025B018(0, v13[2] + 1, 1);
      uint64_t v13 = v61;
    }
    unint64_t v37 = v13[2];
    unint64_t v36 = v13[3];
    uint64_t v18 = v50;
    a1 = v51;
    if (v37 >= v36 >> 1)
    {
      sub_10025B018(v36 > 1, v37 + 1, 1);
      uint64_t v13 = v61;
    }
    v13[2] = v37 + 1;
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))((unint64_t)v13+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ v37 * v58, v35, v8);
    uint64_t v61 = v13;
    int64_t v19 = 1 << *(unsigned char *)(a1 + 32);
    if (v59 >= v19) {
      goto LABEL_27;
    }
    uint64_t v17 = v46;
    uint64_t v38 = *(void *)(v46 + 8 * v21);
    if ((v38 & v57) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v45;
    if (*(_DWORD *)(a1 + 36) != v45) {
      goto LABEL_29;
    }
    unint64_t v39 = v38 & (-2 << (v59 & 0x3F));
    if (v39)
    {
      int64_t v19 = __clz(__rbit64(v39)) | v59 & 0xFFFFFFFFFFFFFFC0;
      int64_t v20 = v44;
    }
    else
    {
      unint64_t v40 = v21 + 1;
      unint64_t v41 = (unint64_t)(v19 + 63) >> 6;
      int64_t v20 = v44;
      if (v21 + 1 < v41)
      {
        unint64_t v42 = *(void *)(v46 + 8 * v40);
        if (v42)
        {
LABEL_22:
          int64_t v19 = __clz(__rbit64(v42)) + (v40 << 6);
        }
        else
        {
          while (v41 - 2 != v21)
          {
            unint64_t v42 = *(void *)(v55 + 8 * v21++);
            if (v42)
            {
              unint64_t v40 = v21 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v56 + 1;
    unint64_t result = v19;
    if (v56 + 1 == v20) {
      return (unint64_t)v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1002B0430()
{
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016117D8);
  objc_super v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1000F2280(v6, v7, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation is starting for query: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (objc_msgSend(v2, "isCancelled", v18, v19))
  {
    uint64_t v8 = v2;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v12 = *(void *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      unint64_t v13 = *(void *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain();
      sub_1000F2280(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "SearchFindMyFriendOperation is cancelled: %s. Marking it as finished.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    NSString v16 = String._bridgeToObjectiveC()();
    [v8 willChangeValueForKey:v16];

    v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation] = 1;
    NSString v17 = String._bridgeToObjectiveC()();
    [v8 didChangeValueForKey:v17];
  }
  else
  {
    NSString v14 = String._bridgeToObjectiveC()();
    [v2 willChangeValueForKey:v14];

    v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation] = 1;
    NSString v15 = String._bridgeToObjectiveC()();
    [v2 didChangeValueForKey:v15];

    [v2 main];
  }
}

id sub_1002B0878()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v39[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39[-1] - v7;
  uint64_t v9 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v39[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isOffline])
  {
    Date.init()();
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_1000F2248(v12, (uint64_t)qword_1016117D8);
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      NSString v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "SearchFindMyFriendOperation is offline, building contacts only.", v15, 2u);
      swift_slowDealloc();
    }

    static TaskPriority.userInitiated.getter();
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    unint64_t v17 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v18 = (char *)swift_allocObject();
    *((void *)v18 + 2) = 0;
    *((void *)v18 + 3) = 0;
    *((void *)v18 + 4) = v1;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v18[v17], v5, v2);
    id v19 = v1;
    sub_100042AF4((uint64_t)v11, (uint64_t)&unk_1015D9908, (uint64_t)v18);
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    uint64_t v21 = *(void *)&v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchFindMySession];
    if (v21 && (uint64_t v22 = *(void *)(v21 + OBJC_IVAR____TtC4Maps19SearchFindMySession_session)) != 0)
    {
      swift_retain();
      GEOConfigGetDouble();
      uint64_t v24 = v23;
      static TaskPriority.userInitiated.getter();
      uint64_t v25 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 0, 1, v25);
      uint64_t v26 = (void *)swift_allocObject();
      v26[2] = 0;
      v26[3] = 0;
      v26[4] = v24;
      v26[5] = v1;
      v26[6] = v22;
      swift_retain();
      uint64_t v27 = v1;
      *(void *)&v27[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_findFriendsTask] = sub_100042AF4((uint64_t)v11, (uint64_t)&unk_1015D98F8, (uint64_t)v26);
      swift_release();
      return (id)swift_release();
    }
    else
    {
      if (qword_1015CBD60 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_1000F2248(v28, (uint64_t)qword_1016117D8);
      uint64_t v29 = v1;
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        v39[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 136315138;
        uint64_t v33 = *(void *)&v29[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
        unint64_t v34 = *(void *)&v29[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1000F2280(v33, v34, v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v30, v31, "SearchFindMyFriendOperation: No session found: %s", v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        unint64_t v36 = (void *)Strong;
        swift_beginAccess();
        sub_100100830(0, &qword_1015D98E8);
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v36 searchFindMyFriendOperation:v29 didMatchResults:isa];
        swift_unknownObjectRelease();
      }
      return [v29 markOperationAsComplete];
    }
  }
}

uint64_t sub_1002B0E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[25] = a4;
  v5[26] = a5;
  uint64_t v6 = type metadata accessor for Date();
  v5[27] = v6;
  v5[28] = *(void *)(v6 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  return _swift_task_switch(sub_1002B0F54, 0, 0);
}

uint64_t sub_1002B0F54()
{
  NSString v15 = v0;
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = type metadata accessor for Logger();
  v0[31] = sub_1000F2248(v2, (uint64_t)qword_1016117D8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[25];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    v0[21] = sub_1000F2280(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SearchFindMyFriendOperation: Starting to build contacts for query: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (void *)v0[25];
  v0[2] = v0;
  v0[7] = v0 + 32;
  v0[3] = sub_1002B11D8;
  uint64_t v12 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002B176C;
  v0[13] = &unk_1012E1908;
  v0[14] = v12;
  [v11 contactsMatchingSearchQueryWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002B11D8()
{
  return _swift_task_switch(sub_1002B12B8, 0, 0);
}

uint64_t sub_1002B12B8()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void **)(v0 + 200);
  (*(void (**)(void, void, void))(*(void *)(v0 + 224) + 16))(*(void *)(v0 + 240), *(void *)(v0 + 208), *(void *)(v0 + 216));
  id v2 = v1;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v35 = *(void *)(v0 + 240);
    os_log_type_t type = v4;
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v33 = *(void *)(v0 + 216);
    uint64_t v7 = *(char **)(v0 + 200);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 184) = sub_1000F2280(v10, v9, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2048;
    Date.init()();
    Date.timeIntervalSince(_:)();
    uint64_t v12 = v11;
    unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v13(v5, v33);
    *(void *)(v0 + 192) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13(v35, v33);
    _os_log_impl((void *)&_mh_execute_header, v3, type, "SearchFindMyFriendOperation: Finished building contacts\n searchQuery:%s\n Time taken: %f", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 240);
    uint64_t v15 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }

  unint64_t v17 = *(void **)(v0 + 200);
  [v17 createAutocompletePersonContacts];
  id v18 = v17;
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = *(void **)(v0 + 200);
  if (v21)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_beginAccess();
    sub_100100830(0, &qword_1015D98E8);
    swift_bridgeObjectRetain();
    uint64_t v24 = Array.description.getter();
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 176) = sub_1000F2280(v24, v26, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "SearchFindMyFriendOperation: calling delegate method with items: %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = (void *)Strong;
    uint64_t v29 = *(void *)(v0 + 200);
    swift_beginAccess();
    sub_100100830(0, &qword_1015D98E8);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v28 searchFindMyFriendOperation:v29 didMatchResults:isa];
    swift_unknownObjectRelease();
  }
  [*(id *)(v0 + 200) markOperationAsComplete];
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1002B176C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(unsigned char **)(*(void *)(v2 + 64) + 40) = a2;
  return _swift_continuation_resume(v2);
}

uint64_t sub_1002B1790(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  *(double *)(v6 + 32) = a1;
  return _swift_task_switch(sub_1002B17B4, 0, 0);
}

uint64_t sub_1002B17B4()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  v0[7] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  uint64_t v4 = static Duration.seconds(_:)();
  uint64_t v6 = v5;
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1015D48A8 + dword_1015D48A8);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[8] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002B18E8;
  return v9((uint64_t)v9, v4, v6, (uint64_t)&unk_1015D9918, v3);
}

uint64_t sub_1002B18E8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002B1A04;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1001E9C34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002B1A04()
{
  uint64_t v20 = v0;
  swift_release();
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000F2248(v2, (uint64_t)qword_1016117D8);
  swift_errorRetain();
  swift_errorRetain();
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(char **)(v0 + 40);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v11 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v12 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_1000F2280(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SearchFindMyFriendOperation: encountered error: %@ for searchQuery:%s", (uint8_t *)v8, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    uint64_t v15 = *(void *)(v0 + 40);
    sub_100100830(0, &qword_1015D98E8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v14 searchFindMyFriendOperation:v15 didMatchResults:isa];
    swift_unknownObjectRelease();
  }
  [*(id *)(v0 + 40) markOperationAsComplete];
  swift_errorRelease();
  unint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1002B1D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[191] = a3;
  v3[190] = a2;
  sub_1000FF33C(&qword_1015D9920);
  v3[192] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Location();
  v3[193] = v4;
  v3[194] = *(void *)(v4 - 8);
  v3[195] = swift_task_alloc();
  v3[196] = swift_task_alloc();
  v3[197] = swift_task_alloc();
  v3[198] = swift_task_alloc();
  v3[199] = swift_task_alloc();
  v3[200] = swift_task_alloc();
  v3[201] = swift_task_alloc();
  sub_1000FF33C(&qword_1015D9928);
  v3[202] = swift_task_alloc();
  v3[203] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  v3[204] = v5;
  v3[205] = *(void *)(v5 - 8);
  v3[206] = swift_task_alloc();
  v3[207] = swift_task_alloc();
  v3[208] = swift_task_alloc();
  v3[209] = swift_task_alloc();
  v3[210] = swift_task_alloc();
  v3[211] = swift_task_alloc();
  v3[212] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v3[213] = v6;
  v3[214] = *(void *)(v6 - 8);
  v3[215] = swift_task_alloc();
  v3[216] = swift_task_alloc();
  v3[217] = swift_task_alloc();
  v3[218] = swift_task_alloc();
  return _swift_task_switch(sub_1002B2004, 0, 0);
}

uint64_t sub_1002B2004()
{
  id v18 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[219] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = swift_allocObject();
    v0[220] = v3;
    *(void *)(v3 + 16) = v2;
    id v4 = v2;
    swift_retain();
    swift_asyncLet_begin();
    Date.init()();
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    v0[221] = sub_1000F2248(v5, (uint64_t)qword_1016117D8);
    uint64_t v6 = (char *)v4;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 136315138;
      uint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      unint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain();
      v0[184] = sub_1000F2280(v11, v10, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "SearchFindMyFriendOperation: Friends for \n searchQuery:%s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v14 = swift_allocObject();
    v0[222] = v14;
    swift_beginAccess();
    uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v16 = (void *)swift_task_alloc();
    v0[223] = v16;
    void *v16 = v0;
    v16[1] = sub_1002B24DC;
    return Session.friendsSharingLocationsWithMe(filter:)(sub_1002BCE70, v14);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1002B24DC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1792) = a1;
  *(void *)(v3 + 1800) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1002B5ED4;
  }
  else
  {
    swift_release();
    id v4 = sub_1002B2630;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002B2630()
{
  BOOL v76 = v0;
  uint64_t v1 = (void *)v0[219];
  uint64_t v2 = v0[218];
  uint64_t v3 = v0[217];
  uint64_t v4 = v0[214];
  uint64_t v5 = v0[213];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[226] = v6;
  v0[227] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v3, v2, v5);
  id v7 = v1;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  v71 = v0;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (char *)v0[219];
    uint64_t v66 = v0[217];
    os_log_type_t typea = v10;
    uint64_t v12 = v0[216];
    uint64_t v13 = v0[214];
    uint64_t v68 = v0[213];
    uint64_t v14 = swift_slowAlloc();
    id v75 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315650;
    type metadata accessor for Friend();
    swift_bridgeObjectRetain();
    uint64_t v15 = Array.description.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[188] = sub_1000F2280(v15, v17, (uint64_t *)&v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v18 = *(void *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v19 = *(void *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    v0[189] = sub_1000F2280(v18, v19, (uint64_t *)&v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 22) = 2048;
    Date.init()();
    Date.timeIntervalSince(_:)();
    uint64_t v21 = v20;
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(v12, v68);
    v0[186] = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v22(v66, v68);
    _os_log_impl((void *)&_mh_execute_header, v9, typea, "SearchFindMyFriendOperation: Found friends:%s\n searchQuery:%s\n Time taken: %f", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v23 = (void *)v0[219];
    uint64_t v24 = v0[217];
    uint64_t v25 = v0[214];
    uint64_t v26 = v0[213];
    swift_bridgeObjectRelease_n();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v22(v24, v26);
  }

  v0[228] = v22;
  uint64_t v27 = v0[224];
  uint64_t v28 = (void *)sub_10011699C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v29 = *(void *)(v27 + 16);
  uint64_t v30 = v0[224];
  if (!v29)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    v0[229] = v28;
    if (sub_1002B7BF8())
    {
      v22(v0[218], v0[213]);
      swift_bridgeObjectRelease();
      uint64_t v58 = v0 + 98;
      id v59 = v0 + 2;
      uint64_t v60 = (char *)v0 + 1900;
      uint64_t v61 = sub_1002B5BEC;
    }
    else
    {
      uint64_t v62 = self;
      v0[230] = v62;
      id v59 = [v62 sharedManager];
      if (v59)
      {
        uint64_t v63 = v59;
        v0[231] = [v59 contactStore];

        return _swift_asyncLet_get(v0 + 2, (char *)v0 + 1900, sub_1002B2DA4, v0 + 122);
      }
      __break(1u);
    }
    return _swift_asyncLet_finish(v59, v60, v61, v58);
  }
  uint64_t v65 = v22;
  uint64_t v31 = v0[205];
  uint64_t v32 = *(void *)(type metadata accessor for Friend() - 8);
  uint64_t v33 = v30 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v67 = *(void *)(v32 + 72);
  uint64_t v69 = v31;
  uint64_t v70 = (void (**)(uint64_t, uint64_t))(v31 + 8);
  uint64_t v72 = (void (**)(unint64_t, uint64_t, uint64_t))(v31 + 32);
  swift_bridgeObjectRetain();
  while (1)
  {
    *(void *)os_log_type_t type = v29;
    uint64_t v34 = v0[212];
    uint64_t v35 = v0[211];
    unint64_t v36 = v0[210];
    uint64_t v37 = v0[204];
    Friend.handle.getter();
    uint64_t v38 = Handle.identifier.getter();
    uint64_t v40 = v39;
    (*v70)(v34, v37);
    Friend.handle.getter();
    uint64_t v41 = v37;
    unint64_t v42 = *v72;
    (*v72)(v36, v35, v41);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v75 = v28;
    unint64_t v45 = sub_100103580(v38, v40);
    uint64_t v46 = v28[2];
    BOOL v47 = (v44 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
LABEL_31:
      __break(1u);
    }
    char v49 = v44;
    if (v28[3] >= v48)
    {
      uint64_t v0 = v71;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1003534A8();
        uint64_t v28 = v75;
      }
      goto LABEL_14;
    }
    sub_100350850(v48, isUniquelyReferenced_nonNull_native);
    uint64_t v28 = v75;
    unint64_t v50 = sub_100103580(v38, v40);
    uint64_t v0 = v71;
    if ((v49 & 1) != (v51 & 1)) {
      break;
    }
    unint64_t v45 = v50;
LABEL_14:
    uint64_t v52 = v0[210];
    uint64_t v53 = v0[204];
    if (v49)
    {
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v69 + 40))(v28[7] + *(void *)(v69 + 72) * v45, v52, v53);
    }
    else
    {
      v28[(v45 >> 6) + 8] |= 1 << v45;
      uint64_t v54 = (uint64_t *)(v28[6] + 16 * v45);
      *uint64_t v54 = v38;
      v54[1] = v40;
      v42(v28[7] + *(void *)(v69 + 72) * v45, v52, v53);
      uint64_t v55 = v28[2];
      BOOL v56 = __OFADD__(v55, 1);
      uint64_t v57 = v55 + 1;
      if (v56) {
        goto LABEL_31;
      }
      v28[2] = v57;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 += v67;
    uint64_t v29 = *(void *)type - 1;
    if (*(void *)type == 1)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v22 = v65;
      goto LABEL_19;
    }
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1002B2DA4()
{
  return _swift_task_switch(sub_1002B2E30, 0, 0);
}

uint64_t sub_1002B2E30()
{
  int v1 = *(unsigned __int8 *)(v0 + 1900);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    *(_DWORD *)(v0 + 1896) = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SearchFindMyFriendOperation: did fetch contacts: %{BOOL}d", v4, 8u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 1832);

  if (!*(void *)(v5 + 16))
  {
    os_log_type_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "SearchFindMyFriendOperation: no handles were found from FindMy.", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = *(void **)(v0 + 1752);

    [v13 createAutocompletePersonContacts];
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "SearchFindMyFriendOperation: calling delegate method with no items", v16, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = (void *)Strong;
      swift_beginAccess();
      unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1824);
      uint64_t v20 = *(void *)(v0 + 1752);
      sub_100100830(0, &qword_1015D98E8);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 searchFindMyFriendOperation:v20 didMatchResults:isa];
      swift_unknownObjectRelease();
    }
    else
    {
      unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1824);
    }
    uint64_t v23 = *(void **)(v0 + 1848);
    uint64_t v24 = *(void *)(v0 + 1744);
    uint64_t v25 = *(void *)(v0 + 1704);
    [*(id *)(v0 + 1752) markOperationAsComplete];

    v19(v24, v25);
    swift_bridgeObjectRelease();
    uint64_t v9 = v0 + 1296;
    goto LABEL_17;
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1002AFE4C(v6);
  *(void *)(v0 + 1856) = v7;
  swift_bridgeObjectRelease();
  if (sub_1002B7BF8())
  {
    id v8 = *(void **)(v0 + 1848);
    (*(void (**)(void, void))(v0 + 1824))(*(void *)(v0 + 1744), *(void *)(v0 + 1704));
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v9 = v0 + 656;
LABEL_17:
    return _swift_asyncLet_finish(v0 + 16, v0 + 1900, sub_1002B5BEC, v9);
  }
  *(CFAbsoluteTime *)(v0 + 1864) = CFAbsoluteTimeGetCurrent();
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 1872) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1002B32C0;
  return Session.locations(for:reverseGeocode:)(v7, 0);
}

uint64_t sub_1002B32C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1880) = a1;
  *(void *)(v3 + 1888) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_1002B61F8;
  }
  else {
    uint64_t v4 = sub_1002B342C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002B342C()
{
  uint64_t v294 = v0;
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    double v4 = *(double *)(v0 + 1864);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    *(double *)(v0 + 1464) = Current - v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SearchFindMyFriendOperation: did fetch locations. Time Take: %f", v5, 0xCu);
    swift_slowDealloc();
  }

  if (sub_1002B7BF8())
  {
    uint64_t v6 = *(void **)(v0 + 1848);
    (*(void (**)(void, void))(v0 + 1824))(*(void *)(v0 + 1744), *(void *)(v0 + 1704));
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    unint64_t v7 = sub_1002B5BEC;
    uint64_t v8 = v0 + 848;
    goto LABEL_108;
  }
  BOOL v257 = (void *)(v0 + 696);
  uint64_t v9 = *(void *)(v0 + 1832);
  uint64_t v10 = *(void *)(v0 + 1752);
  uint64_t v264 = v9 + 64;
  uint64_t v11 = -1;
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1 << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v9 + 64);
  uint64_t v254 = (uint64_t *)(v10 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery);
  uint64_t v262 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_singularResults;
  uint64_t v263 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context;
  uint64_t v277 = *(void *)(v0 + 1752);
  uint64_t v258 = (void *)(v10 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
  uint64_t v14 = *(void *)(v0 + 1880);
  uint64_t v276 = *(void *)(v0 + 1848);
  uint64_t v15 = *(void *)(v0 + 1640);
  uint64_t v286 = *(void *)(v0 + 1624);
  uint64_t v280 = *(void *)(v0 + 1616);
  uint64_t v16 = *(void *)(v0 + 1552);
  unsigned int v287 = (void (**)(uint64_t, void, uint64_t))(v15 + 16);
  unsigned int v285 = (void (**)(void, char *, void))(v15 + 32);
  uint64_t v281 = v15;
  unsigned int v288 = (void (**)(uint64_t, uint64_t))(v15 + 8);
  id v267 = (void (**)(uint64_t, uint64_t))(v16 + 8);
  uint64_t v268 = v16;
  v279 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  int64_t v273 = (unint64_t)(63 - v12) >> 6;
  int64_t v253 = v273 - 1;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v269 = v9;
  uint64_t v283 = v14;
  if (!v13) {
    goto LABEL_13;
  }
LABEL_8:
  int64_t v290 = v17;
  uint64_t v292 = (v13 - 1) & v13;
  unint64_t v18 = __clz(__rbit64(v13)) | (v17 << 6);
LABEL_9:
  uint64_t v19 = *(void *)(v0 + 1632);
  uint64_t v20 = *(char **)(v0 + 1616);
  uint64_t v21 = (void *)(*(void *)(v9 + 48) + 16 * v18);
  uint64_t v22 = v21[1];
  *(void *)uint64_t v20 = *v21;
  *(void *)(v280 + 8) = v22;
  unint64_t v23 = *(void *)(v9 + 56) + *(void *)(v281 + 72) * v18;
  uint64_t v24 = sub_1000FF33C(&qword_1015D9940);
  (*(void (**)(char *, unint64_t, uint64_t))(v281 + 16))(&v20[*(int *)(v24 + 48)], v23, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 0, 1, v24);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v33 = *(void *)(v0 + 1624);
    sub_100101750(*(void *)(v0 + 1616), v33, &qword_1015D9928);
    uint64_t v34 = sub_1000FF33C(&qword_1015D9940);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1) {
      break;
    }
    uint64_t v35 = *(uint64_t **)(v0 + 1624);
    uint64_t v36 = *v35;
    unint64_t v37 = *(void *)(v286 + 8);
    (*v285)(*(void *)(v0 + 1672), (char *)v35 + *(int *)(v34 + 48), *(void *)(v0 + 1632));
    uint64_t v38 = Handle.contactIdentifier.getter();
    if (v39)
    {
      unint64_t v40 = v39;
      if (v276)
      {
        uint64_t v41 = v38;
        unint64_t v42 = *(void **)(v0 + 1840);
        id v43 = *(id *)(v0 + 1848);
        NSString v44 = String._bridgeToObjectiveC()();
        id v45 = [v42 sharedManager];
        if (!v45) {
          goto LABEL_120;
        }
        uint64_t v46 = v45;
        id v47 = [v45 properties];

        if (v47)
        {
          uint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1002B7268(v48);
          swift_bridgeObjectRelease();
        }
        uint64_t v64 = *(void **)(v0 + 1848);
        sub_1000FF33C(&qword_1015D9868);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1480) = 0;
        id v66 = [v64 unifiedContactWithIdentifier:v44 keysToFetch:isa error:v0 + 1480];

        uint64_t v67 = *(void **)(v0 + 1480);
        unint64_t v284 = v37;
        uint64_t v278 = v36;
        if (!v66)
        {
          id v74 = *(void **)(v0 + 1752);
          id v75 = v67;
          swift_bridgeObjectRelease();
          _convertNSErrorToError(_:)();

          swift_willThrow();
          id v76 = v74;
          swift_errorRetain();
          id v77 = v76;
          swift_errorRetain();
          uint64_t v78 = Logger.logObject.getter();
          os_log_type_t v79 = static os_log_type_t.error.getter();
          BOOL v80 = os_log_type_enabled(v78, v79);
          id v81 = *(void **)(v0 + 1752);
          if (v80)
          {
            uint64_t v82 = swift_slowAlloc();
            int v83 = (void *)swift_slowAlloc();
            v293[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v82 = 138412546;
            swift_errorRetain();
            uint64_t v84 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v0 + 1392) = v84;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v83 = v84;
            swift_errorRelease();
            swift_errorRelease();
            *(_WORD *)(v82 + 12) = 2080;
            uint64_t v85 = *v254;
            unint64_t v86 = v254[1];
            swift_bridgeObjectRetain();
            *(void *)(v0 + 1344) = sub_1000F2280(v85, v86, v293);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl((void *)&_mh_execute_header, v78, v79, "SearchFindMyFriendOperation: encountered contact matching error: %@ for searchQuery:%s", (uint8_t *)v82, 0x16u);
            sub_1000FF33C((uint64_t *)&unk_1015CF600);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
          }
          (*v287)(*(void *)(v0 + 1648), *(void *)(v0 + 1672), *(void *)(v0 + 1632));
          uint64_t v127 = Logger.logObject.getter();
          os_log_type_t v128 = static os_log_type_t.info.getter();
          BOOL v129 = os_log_type_enabled(v127, v128);
          uint64_t v130 = *(void *)(v0 + 1648);
          uint64_t v131 = *(void *)(v0 + 1632);
          if (v129)
          {
            char v132 = (uint8_t *)swift_slowAlloc();
            v293[0] = swift_slowAlloc();
            *(_DWORD *)char v132 = 136315138;
            uint64_t v133 = Handle.identifier.getter();
            *(void *)(v0 + 1400) = sub_1000F2280(v133, v134, v293);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            unsigned int v135 = *v288;
            (*v288)(v130, v131);
            _os_log_impl((void *)&_mh_execute_header, v127, v128, "SearchFindMyFriendOperation: Creating a regular find my handle:%s", v132, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            unsigned int v135 = *v288;
            (*v288)(*(void *)(v0 + 1648), *(void *)(v0 + 1632));
          }

          uint64_t v14 = v283;
          if (*(void *)(v283 + 16) && (unint64_t v136 = sub_1001EA9E0(*(void *)(v0 + 1672)), (v137 & 1) != 0))
          {
            id v275 = v135;
            uint64_t v138 = *(void *)(v0 + 1568);
            uint64_t v139 = *(void *)(v0 + 1560);
            uint64_t v140 = *(void *)(v0 + 1544);
            uint64_t v141 = *(void (**)(uint64_t, unint64_t, uint64_t))(v268 + 16);
            v141(v139, *(void *)(v283 + 56) + *(void *)(v268 + 72) * v136, v140);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v268 + 32))(v138, v139, v140);
            swift_bridgeObjectRetain();
            id v142 = Logger.logObject.getter();
            os_log_type_t v143 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v142, v143))
            {
              id v144 = (uint8_t *)swift_slowAlloc();
              v293[0] = swift_slowAlloc();
              *(_DWORD *)id v144 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)(v0 + 1408) = sub_1000F2280(v278, v284, v293);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v142, v143, "SearchFindMyFriendOperation: Handle:%s and has location.", v144, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            uint64_t v216 = *(void *)(v0 + 1752);
            uint64_t v217 = *(void *)(v0 + 1672);
            uint64_t v218 = *(void *)(v0 + 1632);
            unint64_t v219 = *(void *)(v0 + 1568);
            uint64_t v220 = *(void *)(v0 + 1544);
            uint64_t v221 = *(void *)(v0 + 1536);
            v141(v221, v219, v220);
            (*v279)(v221, 0, 1, v220);
            sub_1002B6A2C(v217, v221, v216);
            swift_errorRelease();
            sub_1000FF2E0(v221, &qword_1015D9920);
            (*v267)(v219, v220);
            v275(v217, v218);
            uint64_t v9 = v269;
          }
          else
          {
            swift_bridgeObjectRetain();
            BOOL v145 = Logger.logObject.getter();
            os_log_type_t v146 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v145, v146))
            {
              BOOL v147 = (uint8_t *)swift_slowAlloc();
              v293[0] = swift_slowAlloc();
              *(_DWORD *)BOOL v147 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)(v0 + 1456) = sub_1000F2280(v278, v284, v293);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v145, v146, "SearchFindMyFriendOperation: Handle:%s and does not have location.", v147, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            uint64_t v148 = *(void *)(v0 + 1752);
            uint64_t v149 = *(void *)(v0 + 1672);
            uint64_t v150 = *(void *)(v0 + 1632);
            uint64_t v151 = *(void *)(v0 + 1536);
            (*v279)(v151, 1, 1, *(void *)(v0 + 1544));
            sub_1002B6A2C(v149, v151, v148);
            swift_errorRelease();
            sub_1000FF2E0(v151, &qword_1015D9920);
            v135(v149, v150);
            uint64_t v9 = v269;
          }
          goto LABEL_12;
        }
        uint64_t v68 = *(void *)(v277 + v263);
        id v69 = objc_allocWithZone((Class)SearchAddressBookOperationMatch);
        id v70 = v67;
        id v282 = [v69 initWithContact:v66 context:v68];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v71 = Logger.logObject.getter();
        os_log_type_t v72 = static os_log_type_t.info.getter();
        id v274 = v66;
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = swift_slowAlloc();
          v293[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v73 = 136315394;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 1440) = sub_1000F2280(v36, v37, v293);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v73 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 1448) = sub_1000F2280(v41, v40, v293);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v71, v72, "SearchFindMyFriendOperation: Handle:%s has a matching contact: %s", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        id v87 = (objc_class *)type metadata accessor for MapsAutocompletePerson();
        id v88 = objc_allocWithZone(v87);
        id v89 = sub_100326AB8(0, 0, 0, 0);
        char v90 = *(unsigned char *)(v277 + v262);
        v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_placeSummaryShowsStackedIconsAndLabels] = v90 ^ 1;
        if ((v90 & 1) == 0)
        {
          id v91 = [v282 autocompleteMatchInfo];
          unsigned __int8 v92 = *(void **)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo];
          *(void *)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = v91;
        }
        if (*(unsigned char *)(v277 + v262) == 1
          && ([v66 mutableCopy],
              _bridgeAnyObjectToAny(_:)(),
              swift_unknownObjectRelease(),
              sub_100100830(0, &qword_1015D9948),
              (swift_dynamicCast() & 1) != 0))
        {
          v93 = *(void **)(v0 + 1432);
          sub_1000FF33C((uint64_t *)&unk_1015DC510);
          Class v94 = Array._bridgeToObjectiveC()().super.isa;
          [v93 setPostalAddresses:v94];

          id v95 = *(void **)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
          *(void *)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = v93;
        }
        else
        {
          id v95 = *(void **)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
          *(void *)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = v66;
          id v96 = v66;
        }

        v271 = v87;
        if (*(void *)(v283 + 16) && (unint64_t v97 = sub_1001EA9E0(*(void *)(v0 + 1672)), (v98 & 1) != 0))
        {
          uint64_t v99 = *(void *)(v0 + 1608);
          uint64_t v100 = *(void *)(v0 + 1600);
          uint64_t v101 = *(void *)(v0 + 1544);
          id v261 = *(void (**)(uint64_t, unint64_t, uint64_t))(v268 + 16);
          v261(v100, *(void *)(v283 + 56) + *(void *)(v268 + 72) * v97, v101);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v268 + 32))(v99, v100, v101);
          swift_bridgeObjectRetain_n();
          id v102 = Logger.logObject.getter();
          os_log_type_t v103 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v102, v103))
          {
            BOOL v104 = (uint8_t *)swift_slowAlloc();
            v293[0] = swift_slowAlloc();
            *(_DWORD *)BOOL v104 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 1416) = sub_1000F2280(v278, v37, v293);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v102, v103, "SearchFindMyFriendOperation: Handle:%s has a location", v104, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v152 = *(void *)(v0 + 1664);
          uint64_t v153 = *(void *)(v0 + 1632);
          unint64_t v154 = *(void *)(v0 + 1608);
          unint64_t v255 = *(void *)(v0 + 1592);
          uint64_t v256 = *(void *)(v0 + 1544);
          uint64_t v155 = *v287;
          (*v287)(v152, *(void *)(v0 + 1672), v153);
          MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
          unsigned __int8 v157 = (char *)objc_allocWithZone(MyHandle);
          UUID.init()();
          uint64_t v265 = v155;
          v155(&v157[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v152, v153);

          *(void *)(v0 + 1208) = v157;
          *(void *)(v0 + 1216) = MyHandle;
          id v158 = [super init];
          unsigned __int8 v270 = *v288;
          (*v288)(v152, v153);
          v261(v255, v154, v256);
          MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
          uint64_t v160 = (char *)objc_allocWithZone(MyLocation);
          UUID.init()();
          v261((uint64_t)&v160[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v255, v256);

          *(void *)(v0 + 1272) = v160;
          *(void *)(v0 + 1280) = MyLocation;
          id v161 = [super init];
          uint64_t v162 = *v267;
          (*v267)(v255, v256);
          MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
          id v164 = (char *)objc_allocWithZone(MyLocationHandle);
          uint64_t v165 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
          *(void *)&v164[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
          *(void *)&v164[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v158;
          uint64_t v166 = *(void **)&v164[v165];
          *(void *)&v164[v165] = v161;
          id v167 = v158;
          id v168 = v161;

          *(void *)(v0 + 1224) = v164;
          *(void *)(v0 + 1232) = MyLocationHandle;
          [v0 init];

          BOOL v170 = *(void **)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
          *(void *)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v169;

          v162(v154, v256);
        }
        else
        {
          swift_bridgeObjectRetain_n();
          char v105 = Logger.logObject.getter();
          os_log_type_t v106 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v105, v106))
          {
            unsigned int v107 = (uint8_t *)swift_slowAlloc();
            v293[0] = swift_slowAlloc();
            *(_DWORD *)unsigned int v107 = 136315138;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 1384) = sub_1000F2280(v278, v37, v293);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v105, v106, "SearchFindMyFriendOperation: Handle:%s does not have a location", v107, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v114 = *(void *)(v0 + 1664);
          uint64_t v115 = *(void *)(v0 + 1632);
          BOOL v116 = *v287;
          (*v287)(v114, *(void *)(v0 + 1672), v115);
          int v117 = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
          BOOL v118 = (char *)objc_allocWithZone(v117);
          UUID.init()();
          uint64_t v265 = v116;
          v116(&v118[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v114, v115);

          *(void *)(v0 + 1240) = v118;
          *(void *)(v0 + 1248) = v117;
          id v119 = [super init];
          unsigned __int8 v270 = *v288;
          (*v288)(v114, v115);
          id v120 = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
          BOOL v121 = (char *)objc_allocWithZone(v120);
          uint64_t v122 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
          *(void *)&v121[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
          *(void *)&v121[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v119;
          id v123 = *(void **)&v121[v122];
          *(void *)&v121[v122] = 0;
          id v124 = v119;

          *(void *)(v0 + 1256) = v121;
          *(void *)(v0 + 1264) = v120;
          id v125 = [super init];

          unsigned __int8 v126 = *(void **)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
          *(void *)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v125;
        }
        uint64_t v171 = *(void **)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo];
        *(void *)&v89[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo] = 0;

        unint64_t v172 = v284;
        swift_bridgeObjectRetain_n();
        uint64_t v173 = v89;
        uint64_t v174 = Logger.logObject.getter();
        os_log_type_t v175 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v174, v175))
        {
          uint64_t v176 = swift_slowAlloc();
          log = v174;
          uint64_t v177 = (void *)swift_slowAlloc();
          v293[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v176 = 138412546;
          *(void *)(v0 + 1368) = v173;
          v178 = v173;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v177 = v173;

          *(_WORD *)(v176 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 1376) = sub_1000F2280(v278, v284, v293);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, log, v175, "SearchFindMyFriendOperation: Successfully built a person:\n%@ for key:%s", (uint8_t *)v176, 0x16u);
          sub_1000FF33C((uint64_t *)&unk_1015CF600);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        *(void *)(v0 + 720) = v271;
        *(void *)(v0 + 696) = v173;
        BOOL v272 = v173;
        id v179 = [v282 autocompleteMatchInfo];
        uint64_t v180 = *(void *)(v0 + 720);
        if (v180)
        {
          BOOL v181 = sub_1000FF380(v257, *(void *)(v0 + 720));
          uint64_t v182 = *(void *)(v180 - 8);
          uint64_t v183 = swift_task_alloc();
          (*(void (**)(uint64_t, void *, uint64_t))(v182 + 16))(v183, v181, v180);
          uint64_t v184 = _bridgeAnythingToObjectiveC<A>(_:)();
          (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v183, v180);
          unint64_t v172 = v284;
          swift_task_dealloc();
          sub_1000FF22C((uint64_t)v257);
        }
        else
        {
          uint64_t v184 = 0;
        }
        id v185 = [objc_allocWithZone((Class)AutocompleteItem) initWithLocalCompletion:v184 sourceType:10 sourceSubtype:0 matchInfo:v179];

        swift_unknownObjectRelease();
        if (!v185)
        {
          uint64_t v193 = *(void *)(v0 + 1672);
          uint64_t v194 = *(void *)(v0 + 1656);
          uint64_t v195 = *(void *)(v0 + 1632);
          swift_bridgeObjectRelease();
          v265(v194, v193, v195);
          id v196 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.error.getter();
          BOOL v198 = os_log_type_enabled(v196, v197);
          uint64_t v199 = *(void *)(v0 + 1672);
          uint64_t v200 = *(void *)(v0 + 1656);
          uint64_t v201 = *(void *)(v0 + 1632);
          if (v198)
          {
            id v202 = (uint8_t *)swift_slowAlloc();
            v293[0] = swift_slowAlloc();
            *(_DWORD *)id v202 = 136315138;
            uint64_t v203 = Handle.identifier.getter();
            *(void *)(v0 + 1288) = sub_1000F2280(v203, v204, v293);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            BOOL v205 = v270;
            v270(v200, v201);
            _os_log_impl((void *)&_mh_execute_header, v196, v197, "SearchFindMyFriendOperation: Unable to create AC item for handle:%s", v202, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            BOOL v205 = v270;
            v270(v200, v201);
          }

          v205(v199, v201);
          uint64_t v9 = v269;
          uint64_t v14 = v283;
          goto LABEL_12;
        }
        id v186 = v185;
        swift_bridgeObjectRetain();
        id v187 = v186;
        BOOL v188 = Logger.logObject.getter();
        os_log_type_t v189 = static os_log_type_t.info.getter();
        id v266 = v187;
        if (os_log_type_enabled(v188, v189))
        {
          uint64_t v190 = swift_slowAlloc();
          loga = v188;
          id v191 = (void *)swift_slowAlloc();
          v293[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v190 = 138412546;
          *(void *)(v0 + 1352) = v187;
          id v192 = v187;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *id v191 = v185;

          *(_WORD *)(v190 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 1360) = sub_1000F2280(v278, v172, v293);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, loga, v189, "SearchFindMyFriendOperation: \nAC item:%@ \nkey:%s", (uint8_t *)v190, 0x16u);
          sub_1000FF33C((uint64_t *)&unk_1015CF600);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v9 = v269;
        id v206 = [v274 identifier:v253];
        uint64_t v207 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v209 = v208;

        swift_beginAccess();
        id v210 = (void *)sub_1002BC41C(v207, v209);
        id v212 = v211;
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_1002BCE78(v210, v212);
        swift_beginAccess();
        id v213 = v266;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        uint64_t v214 = *(void *)(v0 + 1672);
        uint64_t v215 = *(void *)(v0 + 1632);
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();

        v270(v214, v215);
        goto LABEL_89;
      }
      swift_bridgeObjectRelease();
    }
    if (!*(void *)(v14 + 16) || (unint64_t v49 = sub_1001EA9E0(*(void *)(v0 + 1672)), (v50 & 1) == 0))
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = v36;
        uint64_t v63 = swift_slowAlloc();
        v293[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v63 + 4) = sub_1000F2280(v62, v37, v293);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "SearchFindMyFriendOperation: No matching contact Handle:%s and does not have location.", (uint8_t *)v63, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v25 = *(void *)(v0 + 1752);
      uint64_t v26 = *(void *)(v0 + 1672);
      uint64_t v27 = *(void *)(v0 + 1632);
      uint64_t v28 = *(void *)(v0 + 1536);
      (*v279)(v28, 1, 1, *(void *)(v0 + 1544));
      sub_1002B6A2C(v26, v28, v25);
      sub_1000FF2E0(v28, &qword_1015D9920);
      (*v288)(v26, v27);
LABEL_12:
      int64_t v17 = v290;
      unint64_t v13 = v292;
      if (v292) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t v51 = v14;
    uint64_t v52 = v36;
    uint64_t v53 = *(void *)(v0 + 1584);
    uint64_t v54 = *(void *)(v0 + 1576);
    uint64_t v55 = *(void *)(v0 + 1544);
    BOOL v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v268 + 16);
    v56(v54, *(void *)(v51 + 56) + *(void *)(v268 + 72) * v49, v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v268 + 32))(v53, v54, v55);
    swift_bridgeObjectRetain();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      v293[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v59 + 4) = sub_1000F2280(v52, v37, v293);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "SearchFindMyFriendOperation: No matching contact Handle:%s but has location.", (uint8_t *)v59, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v108 = *(void *)(v0 + 1752);
    uint64_t v109 = *(void *)(v0 + 1672);
    uint64_t v110 = *(void *)(v0 + 1632);
    unint64_t v111 = *(void *)(v0 + 1584);
    uint64_t v112 = *(void *)(v0 + 1544);
    uint64_t v113 = *(void *)(v0 + 1536);
    v56(v113, v111, v112);
    (*v279)(v113, 0, 1, v112);
    sub_1002B6A2C(v109, v113, v108);
    sub_1000FF2E0(v113, &qword_1015D9920);
    (*v267)(v111, v112);
    (*v288)(v109, v110);
LABEL_89:
    int64_t v17 = v290;
    unint64_t v13 = v292;
    uint64_t v14 = v283;
    if (v292) {
      goto LABEL_8;
    }
LABEL_13:
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
    }
    if (v29 >= v273)
    {
LABEL_23:
      int64_t v290 = v17;
      goto LABEL_24;
    }
    unint64_t v30 = *(void *)(v264 + 8 * v29);
    if (v30) {
      goto LABEL_16;
    }
    v17 += 2;
    if (v29 + 1 < v273)
    {
      unint64_t v30 = *(void *)(v264 + 8 * v17);
      if (v30) {
        goto LABEL_19;
      }
      if (v29 + 2 >= v273) {
        goto LABEL_23;
      }
      unint64_t v30 = *(void *)(v264 + 8 * (v29 + 2));
      if (v30)
      {
        v29 += 2;
        goto LABEL_16;
      }
      int64_t v17 = v29 + 3;
      if (v29 + 3 >= v273)
      {
        int64_t v290 = v29 + 2;
        goto LABEL_24;
      }
      unint64_t v30 = *(void *)(v264 + 8 * v17);
      if (v30)
      {
LABEL_19:
        int64_t v29 = v17;
LABEL_16:
        int64_t v290 = v29;
        uint64_t v292 = (v30 - 1) & v30;
        unint64_t v18 = __clz(__rbit64(v30)) + (v29 << 6);
        goto LABEL_9;
      }
      while (1)
      {
        int64_t v29 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_119;
        }
        if (v29 >= v273) {
          break;
        }
        unint64_t v30 = *(void *)(v264 + 8 * v29);
        ++v17;
        if (v30) {
          goto LABEL_16;
        }
      }
      int64_t v29 = v253;
    }
    int64_t v290 = v29;
LABEL_24:
    uint64_t v31 = *(void *)(v0 + 1616);
    uint64_t v32 = sub_1000FF33C(&qword_1015D9940);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    uint64_t v292 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  if (sub_1002B7BF8())
  {
    BOOL v222 = *(void **)(v0 + 1848);
    (*(void (**)(void, void))(*(void *)(v0 + 1712) + 8))(*(void *)(v0 + 1744), *(void *)(v0 + 1704));

    swift_bridgeObjectRelease();
    unint64_t v7 = sub_1002B5C78;
    uint64_t v8 = v0 + 1168;
    goto LABEL_108;
  }
  [*(id *)(v0 + 1752) createAutocompletePersonContacts];
  if (sub_1002B7BF8())
  {
    id v223 = *(void **)(v0 + 1848);
    (*(void (**)(void, void))(*(void *)(v0 + 1712) + 8))(*(void *)(v0 + 1744), *(void *)(v0 + 1704));

    swift_bridgeObjectRelease();
    unint64_t v7 = sub_1002B5BEC;
    uint64_t v8 = v0 + 1040;
LABEL_108:
    uint64_t v224 = v0 + 16;
    uint64_t v225 = v0 + 1900;
    id v226 = v7;
  }
  else
  {
    uint64_t v227 = *(void **)(v0 + 1752);
    (*(void (**)(void, void, void))(v0 + 1808))(*(void *)(v0 + 1720), *(void *)(v0 + 1744), *(void *)(v0 + 1704));
    id v228 = v227;
    v229 = Logger.logObject.getter();
    os_log_type_t v230 = static os_log_type_t.info.getter();
    BOOL v231 = os_log_type_enabled(v229, v230);
    BOOL v232 = *(void **)(v0 + 1752);
    if (v231)
    {
      uint64_t v233 = *(void *)(v0 + 1728);
      uint64_t v234 = *(void *)(v0 + 1712);
      uint64_t v289 = *(void *)(v0 + 1720);
      uint64_t v291 = *(void *)(v0 + 1704);
      uint64_t v235 = swift_slowAlloc();
      v293[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v235 = 136315394;
      swift_beginAccess();
      sub_100100830(0, &qword_1015D98E8);
      swift_bridgeObjectRetain();
      uint64_t v236 = Array.description.getter();
      unint64_t v238 = v237;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1496) = sub_1000F2280(v236, v238, v293);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v235 + 12) = 2048;
      Date.init()();
      Date.timeIntervalSince(_:)();
      uint64_t v240 = v239;
      uint64_t v241 = *(void (**)(uint64_t, uint64_t))(v234 + 8);
      v241(v233, v291);
      *(void *)(v0 + 1336) = v240;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v241(v289, v291);
      _os_log_impl((void *)&_mh_execute_header, v229, v230, "SearchFindMyFriendOperation: calling delegate method with items: %s \n Time taken: %f", (uint8_t *)v235, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v242 = *(void *)(v0 + 1720);
      uint64_t v243 = *(void *)(v0 + 1712);
      uint64_t v244 = *(void *)(v0 + 1704);

      uint64_t v241 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
      v241(v242, v244);
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      BOOL v246 = (void *)Strong;
      swift_beginAccess();
      uint64_t v247 = *(void *)(v0 + 1752);
      sub_100100830(0, &qword_1015D98E8);
      swift_bridgeObjectRetain();
      Class v248 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v246 searchFindMyFriendOperation:v247 didMatchResults:v248];
      swift_unknownObjectRelease();
    }
    unsigned int v249 = *(void **)(v0 + 1848);
    uint64_t v250 = *(void *)(v0 + 1744);
    uint64_t v251 = *(void *)(v0 + 1704);
    [*(id *)(v0 + 1752) markOperationAsComplete:v253];

    v241(v250, v251);
    swift_bridgeObjectRelease();
    uint64_t v224 = v0 + 16;
    uint64_t v225 = v0 + 1900;
    id v226 = sub_1002B5BEC;
    uint64_t v8 = v0 + 1296;
  }
  return _swift_asyncLet_finish(v224, v225, v226, v8);
}

uint64_t sub_1002B5BEC()
{
  return _swift_task_switch(sub_1002BD0C8, 0, 0);
}

uint64_t sub_1002B5C78()
{
  return _swift_task_switch(sub_1002B5D04, 0, 0);
}

uint64_t sub_1002B5D04()
{
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B5ED4()
{
  (*(void (**)(void, void))(v0[214] + 8))(v0[218], v0[213]);
  swift_release();
  return _swift_asyncLet_finish(v0 + 2, (char *)v0 + 1900, sub_1002B5F8C, v0 + 114);
}

uint64_t sub_1002B5F8C()
{
  return _swift_task_switch(sub_1002B6018, 0, 0);
}

uint64_t sub_1002B6018()
{
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B61F8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1824);
  uint64_t v2 = *(void *)(v0 + 1744);
  uint64_t v3 = *(void *)(v0 + 1704);

  v1(v2, v3);
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1900, sub_1002B62D4, v0 + 1104);
}

uint64_t sub_1002B62D4()
{
  return _swift_task_switch(sub_1002B6360, 0, 0);
}

uint64_t sub_1002B6360()
{
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B6540(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return _swift_task_switch(sub_1002B6560, 0, 0);
}

uint64_t sub_1002B6560()
{
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_1002B665C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002B176C;
  v0[13] = &unk_1012E1998;
  v0[14] = v2;
  [v1 contactsMatchingSearchQueryWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002B665C()
{
  return _swift_task_switch(sub_1002B673C, 0, 0);
}

uint64_t sub_1002B673C()
{
  **(unsigned char **)(v0 + 120) = *(unsigned char *)(v0 + 136);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1002B6760()
{
  uint64_t v0 = type metadata accessor for Handle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v26 - v5;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    char v14 = 0;
    return (id)(v14 & 1);
  }
  uint64_t v8 = (char *)Strong;
  Friend.handle.getter();
  uint64_t v9 = Handle.identifier.getter();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v6, v0);
  v26[3] = v9;
  v26[4] = v11;
  uint64_t v13 = *(void *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
  v26[1] = *(void *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
  v26[2] = v13;
  sub_100180324();
  char v14 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
  swift_bridgeObjectRelease();
  Friend.handle.getter();
  Handle.prettyName.getter();
  uint64_t v16 = v15;
  v12(v3, v0);
  if (!v16)
  {
LABEL_9:

    return (id)(v14 & 1);
  }
  id result = [objc_allocWithZone((Class)AutocompleteMatchInfo) initWithType:1];
  if (result)
  {
    unint64_t v18 = result;
    id v19 = objc_allocWithZone((Class)AutocompleteStringMatcher);
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithString:v20 requiredMatchLength:1 matchInfo:v18];

    swift_bridgeObjectRetain();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 matchForAutocompleteSearchString:v22];

    if (v23)
    {
      [v23 fractionOfMatch];
      double v25 = v24;

      if (v25 > 0.0) {
        char v14 = 1;
      }
      return (id)(v14 & 1);
    }

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_1002B6A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v80 = a1;
  uint64_t v4 = type metadata accessor for Handle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v76 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v70 - v8;
  uint64_t v10 = sub_1000FF33C(&qword_1015D9920);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Location();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v19 = (char *)&v70 - v18;
  id v20 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
  os_log_type_t v79 = (char *)sub_100326AB8(0, 0, 0, 0);
  sub_1001DA09C(a2, (uint64_t)v12);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  uint64_t v77 = v4;
  if (v21 == 1)
  {
    sub_1000FF2E0((uint64_t)v12, &qword_1015D9920);
    NSString v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v23 = v80;
    v22(v9, v80, v4);
    MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    double v25 = (char *)objc_allocWithZone(MyHandle);
    UUID.init()();
    v22(&v25[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], (uint64_t)v9, v4);

    v86.receiver = v25;
    v86.super_class = MyHandle;
    id v26 = [super init];
    id v75 = *(void (**)(char *, uint64_t))(v5 + 8);
    v75(v9, v4);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    uint64_t v28 = (char *)objc_allocWithZone(MyLocationHandle);
    uint64_t v29 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(void *)&v28[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(void *)&v28[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v26;
    unint64_t v30 = *(void **)&v28[v29];
    *(void *)&v28[v29] = 0;
    id v31 = v26;

    v85.receiver = v28;
    v85.super_class = MyLocationHandle;
    id v32 = [super init];

    uint64_t v33 = v79;
    uint64_t v34 = *(void **)&v79[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
    *(void *)&v79[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v32;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    os_log_type_t v72 = v19;
    uint64_t v73 = v5;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v35(v9, v80, v4);
    v71 = v16;
    uint64_t v36 = (void (*)(char *, char *, uint64_t))v35;
    id v74 = v35;
    unint64_t v37 = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    uint64_t v38 = (char *)objc_allocWithZone(v37);
    UUID.init()();
    v36(&v38[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v9, v4);

    v83.receiver = v38;
    v83.super_class = v37;
    [super init];
    id v75 = *(void (**)(char *, uint64_t))(v5 + 8);
    v75(v9, v4);
    unint64_t v40 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v41 = v71;
    unint64_t v42 = v72;
    v40(v71, v72, v13);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    NSString v44 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()();
    v40(&v44[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v41, v13);

    v82.receiver = v44;
    v82.super_class = MyLocation;
    id v45 = [super init];
    uint64_t v46 = *(void (**)(char *, uint64_t))(v14 + 8);
    v46(v41, v13);
    id v47 = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    uint64_t v48 = (char *)objc_allocWithZone(v47);
    uint64_t v49 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(void *)&v48[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(void *)&v48[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v39;
    char v50 = *(void **)&v48[v49];
    *(void *)&v48[v49] = v45;
    id v51 = v39;
    id v52 = v45;

    v81.receiver = v48;
    v81.super_class = v47;
    id v53 = [super init];

    uint64_t v33 = v79;
    uint64_t v54 = *(void **)&v79[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
    *(void *)&v79[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v53;

    uint64_t v55 = v13;
    NSString v22 = v74;
    v46(v42, v55);
    uint64_t v23 = v80;
  }
  BOOL v56 = *(void **)&v33[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo];
  *(void *)&v33[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo] = 0;

  id v57 = [objc_allocWithZone((Class)AutocompleteItem) initWithLocalCompletion:v33 sourceType:10 sourceSubtype:0 matchInfo:0];
  if (v57)
  {
    os_log_type_t v58 = v57;
    uint64_t v59 = (void *)(v78 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
    swift_beginAccess();
    id v60 = v58;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_1000F2248(v61, (uint64_t)qword_1016117D8);
    uint64_t v63 = v76;
    uint64_t v62 = v77;
    v22(v76, v23, v77);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      id v66 = v63;
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      v84[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136315138;
      uint64_t v68 = Handle.identifier.getter();
      v84[3] = sub_1000F2280(v68, v69, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v75(v66, v62);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "SearchFindMyFriendOperation: Unable to create AC item for handle:%s", v67, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v75(v63, v62);
    }
  }
}

void *sub_1002B7268(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1000F2354(i, (uint64_t)v5);
    sub_1000FF33C(&qword_1015D9868);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();
  swift_unknownObjectRelease();
  return 0;
}

void *sub_1002B7374(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1000F2354(i, (uint64_t)v5);
    sub_100100830(0, &qword_1015CF128);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

id sub_1002B74D8()
{
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016117D8);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v5 = 138412546;
    uint64_t v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    sub_1000F2280(v9, v8, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: %@ was cancelled for searchQuery:%s.", (uint8_t *)v5, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "SearchFindMyFriendOperation: calling delegate method with no items", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    sub_100100830(0, &qword_1015D98E8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v14 searchFindMyFriendOperation:v2 didMatchResults:isa];

    swift_unknownObjectRelease();
  }
  if (*(void *)&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_findFriendsTask])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  return [v2 markOperationAsComplete:v17];
}

id sub_1002B78AC()
{
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016117D8);
  id v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412546;
    uint64_t v7 = (char *)v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    sub_1000F2280(v9, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: deallocating operation:%@ for query:%s", (uint8_t *)v5, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  [v2 markOperationAsComplete];
  MyFriendOperation = (objc_class *)type metadata accessor for SearchFindMyFriendOperation();
  v13.receiver = v2;
  v13.super_class = MyFriendOperation;
  return [super dealloc];
}

uint64_t sub_1002B7BF8()
{
  if (([v0 isFinished] & 1) != 0
    || (uint64_t result = (uint64_t)[v0 isCancelled], result))
  {
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000F2248(v2, (uint64_t)qword_1016117D8);
    id v3 = v0;
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      id v8 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v7 = v3;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "SearchFindMyFriendOperation: %%@ is cancelled or finished: %@. Treating it as No-Op.", v6, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      sub_100100830(0, &qword_1015D98E8);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v10 searchFindMyFriendOperation:v3 didMatchResults:isa];

      swift_unknownObjectRelease();
    }
    [v3 markOperationAsComplete];
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for SearchFindMyFriendOperation()
{
  return self;
}

uint64_t sub_1002B7EC0()
{
  v1[54] = v0;
  uint64_t v2 = type metadata accessor for Date();
  v1[55] = v2;
  v1[56] = *(void *)(v2 - 8);
  v1[57] = swift_task_alloc();
  return _swift_task_switch(sub_1002B7FAC, 0, 0);
}

uint64_t sub_1002B7FAC()
{
  uint64_t v182 = v0;
  uint64_t v1 = v0;
  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 432);
  uint64_t v3 = type metadata accessor for Logger();
  *(void *)(v0 + 464) = sub_1000F2248(v3, (uint64_t)qword_1016117D8);
  id v4 = v2;
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = *(char **)(v0 + 432);
  uint64_t v161 = v0;
  uint64_t v180 = (id *)(v0 + 432);
  if (v7)
  {
    uint64_t v9 = (uint64_t *)(v0 + 424);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v181[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v11 = *(void *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v12 = *(void *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    uint64_t *v9 = sub_1000F2280(v11, v12, v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = v161;
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v5, v6, " [⌛] SearchFindMyFriendOperation: Starting to build contacts for searchQuery:%s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  *(CFAbsoluteTime *)(v1 + 472) = CFAbsoluteTimeGetCurrent();
  uint64_t v13 = swift_allocObject();
  *(void *)(v1 + 480) = v13;
  *(void *)(v13 + 16) = _swiftEmptyArrayStorage;
  uint64_t v14 = (void *)(v13 + 16);
  uint64_t v15 = swift_allocObject();
  *(void *)(v1 + 488) = v15;
  *(void *)(v15 + 16) = sub_100116B9C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v16 = swift_allocObject();
  *(void *)(v1 + 496) = v16;
  *(void *)(v16 + 16) = sub_100116B9C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v17 = self;
  if (![v17 addressBookAllowed]) {
    goto LABEL_16;
  }
  id v18 = [v17 sharedManager];
  if (!v18)
  {
    __break(1u);
    goto LABEL_94;
  }
  id v19 = v18;
  id v20 = [v18 contactStore];
  *(void *)(v1 + 504) = v20;

  id v18 = [v17 sharedManager];
  if (!v18)
  {
LABEL_94:
    __break(1u);
    return _swift_continuation_await(v18);
  }
  int v21 = v18;
  id v22 = [v18 properties];

  if (v22)
  {
    uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1002B7268(v23);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *(void *)(v1 + 432);
  id v25 = objc_allocWithZone((Class)CNContactFetchRequest);
  sub_1000FF33C(&qword_1015D9868);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [v25 initWithKeysToFetch:isa];
  *(void *)(v1 + 512) = v27;

  uint64_t v28 = self;
  uint64_t v29 = v24 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery;
  uint64_t v30 = *(void *)(v24 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery);
  *(void *)(v1 + 520) = v30;
  unint64_t v31 = *(void *)(v29 + 8);
  *(void *)(v1 + 528) = v31;
  uint64_t v170 = v30;
  unint64_t v174 = v31;
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [v28 predicateForContactsMatchingName:v32];

  [v27 setPredicate:v33];
  [v27 setSortOrder:1];
  CFAbsoluteTimeGetCurrent();
  uint64_t v34 = v20;
  if (v20)
  {
    uint64_t v35 = *(void **)(v1 + 432);
    uint64_t v36 = (void *)swift_allocObject();
    v36[2] = v35;
    v36[3] = v13;
    v36[4] = v15;
    v36[5] = v16;
    *(void *)(v1 + 112) = sub_1002BC98C;
    *(void *)(v1 + 120) = v36;
    *(void *)(v1 + 80) = _NSConcreteStackBlock;
    *(void *)(v1 + 88) = 1107296256;
    *(void *)(v1 + 96) = sub_1002BAD50;
    *(void *)(v1 + 104) = &unk_1012E1890;
    unint64_t v37 = _Block_copy((const void *)(v1 + 80));
    id v38 = v35;
    id v39 = v34;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(v1 + 416) = 0;
    unsigned int v40 = [v39 enumerateContactsAndMatchInfoWithFetchRequest:v27 error:v1 + 416 usingBlock:v37];
    _Block_release(v37);

    id v41 = *(id *)(v1 + 416);
    if (!v40)
    {
      uint64_t v62 = v41;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v63 = *(void **)(v1 + 432);
      double Current = CFAbsoluteTimeGetCurrent();
      id v65 = v63;
      swift_errorRetain();
      id v66 = v65;
      swift_errorRetain();
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v67, v68))
      {
        unint64_t v69 = *(void *)(v1 + 528);
        uint64_t v163 = *(void *)(v1 + 520);
        id v168 = *(void **)(v1 + 512);
        uint64_t v171 = *(void **)(v1 + 504);
        double v70 = *(double *)(v1 + 472);
        uint64_t v166 = *(void **)(v1 + 432);
        uint64_t v71 = swift_slowAlloc();
        os_log_type_t v72 = (void *)swift_slowAlloc();
        v181[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 138412802;
        swift_errorRetain();
        uint64_t v73 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v161 + 376) = v73;
        uint64_t v1 = v161;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v72 = v73;
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v71 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v161 + 384) = sub_1000F2280(v163, v69, v181);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();

        *(_WORD *)(v71 + 22) = 2048;
        *(double *)(v161 + 392) = Current - v70;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "[⌛]SearchFindMyFriendOperation: Error encountered while fetching contacts:%@ for query:%s\n Time taken: %f", (uint8_t *)v71, 0x20u);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        id v74 = *(void **)(v1 + 512);
        id v75 = *(void **)(v1 + 432);

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
LABEL_16:
      swift_release();
      swift_release();
      swift_release();
      uint64_t v48 = 0;
LABEL_89:
      swift_task_dealloc();
      unint64_t v154 = *(uint64_t (**)(uint64_t))(v1 + 8);
      return v154(v48);
    }
  }
  if (sub_1002B7BF8())
  {
    id v42 = *v180;
    id v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    BOOL v45 = os_log_type_enabled(v43, v44);
    id v46 = *v180;
    if (v45)
    {
      v178 = v43;
      id v47 = (uint8_t *)swift_slowAlloc();
      v181[0] = swift_slowAlloc();
      *(_DWORD *)id v47 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 400) = sub_1000F2280(v170, v174, v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v178, v44, " [⌛] SearchFindMyFriendOperation: Cancelled, Not building contacts for:%s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_release();
    swift_release();
    swift_release();
    uint64_t v48 = 0;
    uint64_t v1 = v161;
    goto LABEL_89;
  }
  if (GEOConfigGetBOOL())
  {
    swift_beginAccess();
    if (*v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v76 >= 1) {
        goto LABEL_20;
      }
    }
    else if (*(uint64_t *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_20:
      id v49 = [self currentContext];
      id v50 = v49;
      *(void *)(v161 + 536) = v49;
      if (v49)
      {
        uint64_t v52 = *(void *)(v161 + 448);
        uint64_t v51 = *(void *)(v161 + 456);
        uint64_t v53 = *(void *)(v161 + 440);
        id v54 = v49;
        NSString v55 = String._bridgeToObjectiveC()();
        [v54 setConsumerIdentifier:v55];

        id v56 = v54;
        Date.init()();
        Class v57 = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
        [v56 setDate:v57];
      }
      id v58 = [self defaultSettings];
      uint64_t v59 = v58;
      *(void *)(v161 + 544) = v58;
      if (v58)
      {
        [v58 setMaxNumberOfPeopleSuggested:100];
        [v59 setAggregateByIdentifier:1];
      }
      id v60 = [objc_allocWithZone((Class)_CDPeopleSuggester) init];
      *(void *)(v161 + 552) = v60;
      [v60 setContext:v50];
      [v60 setSettings:v59];
      *(void *)(v161 + 344) = 0;
      CFAbsoluteTimeGetCurrent();
      *(void *)(v161 + 16) = v161;
      *(void *)(v161 + 56) = v161 + 352;
      *(void *)(v161 + 24) = sub_1002B983C;
      uint64_t v61 = swift_continuation_init();
      *(void *)(v161 + 128) = _NSConcreteStackBlock;
      *(void *)(v161 + 136) = 0x40000000;
      *(void *)(v161 + 144) = sub_1002BADE4;
      *(void *)(v161 + 152) = &unk_1012E1850;
      *(void *)(v161 + 160) = v61;
      [v60 suggestPeopleWithCompletionHandler:v161 + 128];
      id v18 = (id)(v161 + 16);
      return _swift_continuation_await(v18);
    }
  }
  uint64_t v77 = *(void *)(v161 + 480);
  swift_beginAccess();
  *(void *)(v161 + 368) = *(void *)(v77 + 16);
  sub_1000FF33C(&qword_1015D9870);
  sub_1000FF33C(&qword_1015D9878);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_100F5CFA0;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  KeyPathComparator.init<A>(_:order:)();
  swift_getKeyPath();
  KeyPathComparator.init<A>(_:order:)();
  *(void *)(v161 + 360) = v78;
  sub_1000FF33C(&qword_1015D9880);
  sub_1000FF33C(&qword_1015D9888);
  sub_1001010F8(&qword_1015D9890, &qword_1015D9880);
  sub_1001010F8(&qword_1015D9898, &qword_1015D9888);
  sub_1001010F8((unint64_t *)&unk_1015D98A0, &qword_1015D9878);
  uint64_t v79 = Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v77 + 16) = v79;
  swift_bridgeObjectRelease();
  unint64_t v80 = *(void *)(v77 + 16);
  unint64_t v156 = v80;
  if (v80 >> 62) {
    goto LABEL_84;
  }
  uint64_t v81 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  objc_super v82 = v180;
  if (!v81)
  {
LABEL_85:
    uint64_t v1 = v161;
    uint64_t v140 = *(void **)(v161 + 432);
    swift_bridgeObjectRelease_n();
    double v141 = CFAbsoluteTimeGetCurrent();
    id v142 = v140;
    os_log_type_t v143 = Logger.logObject.getter();
    os_log_type_t v144 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v143, v144))
    {
      unint64_t v145 = *(void *)(v161 + 528);
      uint64_t v169 = *(void *)(v161 + 520);
      uint64_t v173 = *(void **)(v161 + 512);
      uint64_t v176 = *(void **)(v161 + 504);
      double v146 = *(double *)(v161 + 472);
      BOOL v147 = *(void **)(v161 + 432);
      uint64_t v148 = swift_slowAlloc();
      v181[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v148 = 134218498;
      *(double *)(v161 + 328) = v141 - v146;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v148 + 12) = 2080;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1000FF33C((uint64_t *)&unk_1015D98B0);
      uint64_t v149 = Dictionary.description.getter();
      unint64_t v151 = v150;
      swift_bridgeObjectRelease();
      *(void *)(v161 + 408) = sub_1000F2280(v149, v151, v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v1 = v161;
      swift_bridgeObjectRelease();

      *(_WORD *)(v148 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v161 + 336) = sub_1000F2280(v169, v145, v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v143, v144, "[⌛(%f)]SearchFindMyFriendOperation: Finished fetching \n contacts:%s\n searchQuery:%s", (uint8_t *)v148, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v152 = *(void **)(v161 + 512);
      uint64_t v153 = *(void **)(v161 + 432);
    }
    swift_release();
    swift_release();
    swift_release();
    uint64_t v48 = 1;
    goto LABEL_89;
  }
  while (2)
  {
    uint64_t v83 = 0;
    uint64_t v159 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context;
    unint64_t v172 = (uint64_t *)((char *)*v82 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict);
    uint64_t v160 = (char *)*v82;
    id v158 = (void **)((char *)*v82 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray);
    uint64_t v84 = &selRef_showDisclosureButton;
    objc_super v85 = &selRef_isEvFeasible;
    uint64_t v155 = v81;
    while (1)
    {
      uint64_t v86 = v83;
      if ((v156 & 0xC000000000000001) != 0) {
        id v87 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v87 = *(id *)(v156 + 32 + 8 * v83);
      }
      uint64_t v177 = v87;
      BOOL v88 = __OFADD__(v86, 1);
      uint64_t v89 = v86 + 1;
      if (v88) {
        goto LABEL_83;
      }
      uint64_t v157 = v89;
      id v90 = [v87 contact];
      id v91 = [v90 postalAddresses];
      sub_1000FF33C((uint64_t *)&unk_1015DC510);
      unint64_t v92 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v92 >> 62) {
        break;
      }
      uint64_t v93 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v93) {
        goto LABEL_43;
      }
LABEL_36:

      swift_bridgeObjectRelease_n();
      uint64_t v83 = v157;
      if (v157 == v155) {
        goto LABEL_85;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v93 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v93) {
      goto LABEL_36;
    }
LABEL_43:
    Class v94 = self;
    id v95 = 0;
    unint64_t v175 = v92 & 0xC000000000000001;
    unint64_t v165 = v92;
    id v167 = v90;
    uint64_t v162 = v94;
    uint64_t v164 = v93;
    if ((v92 & 0xC000000000000001) != 0)
    {
LABEL_44:
      id v96 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v97 = (char *)v95 + 1;
      if (!__OFADD__(v95, 1)) {
        goto LABEL_48;
      }
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      swift_bridgeObjectRetain_n();
      uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      objc_super v82 = v180;
      if (!v81) {
        goto LABEL_85;
      }
      continue;
    }
    break;
  }
  while (2)
  {
    id v96 = *(id *)(v92 + 8 * (void)v95 + 32);
    unint64_t v97 = (char *)v95 + 1;
    if (__OFADD__(v95, 1)) {
      goto LABEL_80;
    }
LABEL_48:
    char v98 = v96;
    id v179 = v97;
    uint64_t v180 = v95;
    id v99 = [v94 v84[204] v90];
    if (!v99) {
      __break(1u);
    }
    uint64_t v100 = v99;
    if (![v99 v85[436]])
    {

      goto LABEL_72;
    }
    id v101 = [v177 autocompleteMatchInfo];
    if (v101)
    {
      id v102 = v101;
      os_log_type_t v103 = *(void **)&v160[v159];
      Class v104 = Array._bridgeToObjectiveC()().super.isa;
      [v103 setMatchInfo:v102 forObject:v104];
    }
    id v105 = [v90 identifier];
    uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v108 = v107;

    id v109 = v90;
    id v110 = [v177 autocompleteMatchInfo];
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v181[0] = *v172;
    uint64_t v112 = (void *)v181[0];
    *unint64_t v172 = 0x8000000000000000;
    unint64_t v114 = sub_100103580(v106, v108);
    uint64_t v115 = v112[2];
    BOOL v116 = (v113 & 1) == 0;
    uint64_t v117 = v115 + v116;
    if (__OFADD__(v115, v116)) {
      goto LABEL_81;
    }
    char v118 = v113;
    if (v112[3] >= v117)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v113 & 1) == 0) {
          goto LABEL_62;
        }
      }
      else
      {
        sub_1003532E0();
        uint64_t v112 = (void *)v181[0];
        if ((v118 & 1) == 0) {
          goto LABEL_62;
        }
      }
      goto LABEL_60;
    }
    sub_10035053C(v117, isUniquelyReferenced_nonNull_native);
    uint64_t v112 = (void *)v181[0];
    unint64_t v119 = sub_100103580(v106, v108);
    if ((v118 & 1) == (v120 & 1))
    {
      unint64_t v114 = v119;
      if ((v118 & 1) == 0)
      {
LABEL_62:
        v112[(v114 >> 6) + 8] |= 1 << v114;
        id v123 = (uint64_t *)(v112[6] + 16 * v114);
        *id v123 = v106;
        v123[1] = v108;
        id v124 = (void *)(v112[7] + 16 * v114);
        void *v124 = v109;
        v124[1] = v110;
        uint64_t v125 = v112[2];
        BOOL v88 = __OFADD__(v125, 1);
        uint64_t v126 = v125 + 1;
        if (v88) {
          goto LABEL_82;
        }
        v112[2] = v126;
        swift_bridgeObjectRetain();
LABEL_64:
        *unint64_t v172 = (uint64_t)v112;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        id v127 = [objc_allocWithZone((Class)CNMutableContact) initWithContact:v109];
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v128 = swift_allocObject();
        *(_OWORD *)(v128 + 16) = xmmword_100F5DFF0;
        *(void *)(v128 + 32) = v98;
        v181[0] = v128;
        specialized Array._endMutation()();
        id v129 = v98;
        Class v130 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v127 setPostalAddresses:v130];

        [v127 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100100830(0, (unint64_t *)&unk_1015D98C0);
        if (swift_dynamicCast())
        {
          id v131 = *(id *)(v161 + 320);
          id v132 = [v177 autocompleteMatchInfo];
          swift_beginAccess();
          uint64_t v133 = *v158;
          char v134 = swift_isUniquelyReferenced_nonNull_native();
          Block_layout *v158 = v133;
          if ((v134 & 1) == 0)
          {
            uint64_t v133 = sub_1001D0A84(0, v133[2] + 1, 1, v133);
            Block_layout *v158 = v133;
          }
          unint64_t v136 = v133[2];
          unint64_t v135 = v133[3];
          if (v136 >= v135 >> 1)
          {
            uint64_t v133 = sub_1001D0A84((void *)(v135 > 1), v136 + 1, 1, v133);
            Block_layout *v158 = v133;
          }
          v133[2] = v136 + 1;
          char v137 = &v133[2 * v136];
          v137[4] = v131;
          v137[5] = v132;
          swift_endAccess();

          uint64_t v93 = v164;
          unint64_t v92 = v165;
          uint64_t v84 = &selRef_showDisclosureButton;
          objc_super v85 = &selRef_isEvFeasible;
          id v90 = v167;
          Class v94 = v162;
          uint64_t v138 = v180;
          if (v179 == (char *)v164) {
            goto LABEL_36;
          }
          goto LABEL_73;
        }

        uint64_t v84 = &selRef_showDisclosureButton;
        objc_super v85 = &selRef_isEvFeasible;
        unint64_t v92 = v165;
        id v90 = v167;
        Class v94 = v162;
        uint64_t v93 = v164;
LABEL_72:
        uint64_t v138 = v180;
        if (v179 == (char *)v93) {
          goto LABEL_36;
        }
LABEL_73:
        id v95 = (id *)((char *)v138 + 1);
        if (v175) {
          goto LABEL_44;
        }
        continue;
      }
LABEL_60:
      uint64_t v121 = v112[7] + 16 * v114;
      uint64_t v122 = *(void **)(v121 + 8);

      *(void *)uint64_t v121 = v109;
      *(void *)(v121 + 8) = v110;
      goto LABEL_64;
    }
    break;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1002B983C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 560) = v1;
  if (v1) {
    uint64_t v2 = sub_1002BA6CC;
  }
  else {
    uint64_t v2 = sub_1002B9978;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002B9978()
{
  uint64_t v110 = v1;
  uint64_t v2 = (void *)(v1 + 344);
  unint64_t v3 = *(void *)(v1 + 352);
  if (!v3)
  {
    uint64_t v10 = *(void **)(v1 + 552);
    uint64_t v11 = *(void **)(v1 + 544);
    goto LABEL_13;
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
LABEL_72:
        __break(1u);
      }
      uint64_t v0 = 0;
      uint64_t v5 = 0;
      do
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v3 + 8 * v5 + 32);
        }
        BOOL v7 = v6;
        id v8 = (uint64_t *)(*(void *)(v92 + 496) + 16);
        uint64_t v9 = (uint64_t *)(*(void *)(v92 + 488) + 16);
        ++v5;
        v109[0] = v6;
        sub_1002BAEDC(v109, v8, v9, v2);
      }
      while (v4 != v5);
    }
  }
  uint64_t v88 = v0;
  uint64_t v1 = v92;
  uint64_t v11 = *(void **)(v92 + 552);
  uint64_t v10 = *(void **)(v92 + 544);
  swift_bridgeObjectRelease_n();
LABEL_13:

  uint64_t v12 = *(void *)(v1 + 480);
  swift_beginAccess();
  *(void *)(v1 + 368) = *(void *)(v12 + 16);
  sub_1000FF33C(&qword_1015D9870);
  sub_1000FF33C(&qword_1015D9878);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100F5CFA0;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  KeyPathComparator.init<A>(_:order:)();
  swift_getKeyPath();
  KeyPathComparator.init<A>(_:order:)();
  *(void *)(v1 + 360) = v13;
  sub_1000FF33C(&qword_1015D9880);
  sub_1000FF33C(&qword_1015D9888);
  sub_1001010F8(&qword_1015D9890, &qword_1015D9880);
  sub_1001010F8(&qword_1015D9898, &qword_1015D9888);
  sub_1001010F8((unint64_t *)&unk_1015D98A0, &qword_1015D9878);
  uint64_t v14 = Sequence.sorted<A, B>(using:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  unint64_t v15 = *(void *)(v12 + 16);
  unint64_t v90 = v15;
  if (v15 >> 62) {
    goto LABEL_64;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v16)
  {
LABEL_65:
    uint64_t v73 = *(void **)(v92 + 432);
    swift_bridgeObjectRelease_n();
    double Current = CFAbsoluteTimeGetCurrent();
    id v75 = v73;
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v76, v77))
    {
      unint64_t v78 = *(void *)(v92 + 528);
      uint64_t v100 = *(void *)(v92 + 520);
      os_log_type_t v103 = *(void **)(v92 + 512);
      id v105 = *(void **)(v92 + 504);
      double v79 = *(double *)(v92 + 472);
      unint64_t v80 = *(void **)(v92 + 432);
      uint64_t v81 = swift_slowAlloc();
      v109[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 134218498;
      *(double *)(v92 + 328) = Current - v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v81 + 12) = 2080;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1000FF33C((uint64_t *)&unk_1015D98B0);
      uint64_t v82 = Dictionary.description.getter();
      unint64_t v84 = v83;
      swift_bridgeObjectRelease();
      *(void *)(v92 + 408) = sub_1000F2280(v82, v84, (uint64_t *)v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v81 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v92 + 336) = sub_1000F2280(v100, v78, (uint64_t *)v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v76, v77, "[⌛(%f)]SearchFindMyFriendOperation: Finished fetching \n contacts:%s\n searchQuery:%s", (uint8_t *)v81, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      objc_super v85 = *(void **)(v92 + 512);
      uint64_t v86 = *(void **)(v92 + 432);
    }
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    id v87 = *(uint64_t (**)(uint64_t))(v92 + 8);
    return v87(1);
  }
LABEL_15:
  uint64_t v17 = 0;
  uint64_t v18 = v92 + 272;
  uint64_t v94 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context;
  uint64_t v95 = *(void *)(v92 + 432);
  id v99 = (id *)(v95 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict);
  uint64_t v93 = (void **)(v95 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray);
  id v19 = &selRef_showDisclosureButton;
  id v20 = &selRef_isEvFeasible;
  uint64_t v89 = v16;
  while (1)
  {
    uint64_t v21 = v17;
    if ((v90 & 0xC000000000000001) != 0) {
      id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v22 = *(id *)(v90 + 32 + 8 * v17);
    }
    uint64_t v107 = v22;
    BOOL v23 = __OFADD__(v21, 1);
    uint64_t v24 = v21 + 1;
    if (v23)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      swift_bridgeObjectRetain_n();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_65;
      }
      goto LABEL_15;
    }
    uint64_t v91 = v24;
    id v25 = [v22 contact];
    id v26 = [v25 postalAddresses];
    sub_1000FF33C((uint64_t *)&unk_1015DC510);
    unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v27 >> 62) {
      break;
    }
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v28) {
      goto LABEL_23;
    }
LABEL_16:

    swift_bridgeObjectRelease_n();
    uint64_t v17 = v91;
    if (v91 == v89) {
      goto LABEL_65;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v28) {
    goto LABEL_16;
  }
LABEL_23:
  uint64_t v29 = 0;
  id v101 = self;
  unint64_t v102 = v27 & 0xC000000000000001;
  unint64_t v97 = v27;
  id v98 = v25;
  uint64_t v96 = v28;
  while (1)
  {
    if (v102)
    {
      id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v31 = v29 + 1;
      if (__OFADD__(v29, 1)) {
        goto LABEL_60;
      }
    }
    else
    {
      id v30 = *(id *)(v27 + 8 * v29 + 32);
      uint64_t v31 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
    }
    uint64_t v108 = v30;
    id v32 = [v101 v19[204] v25 v88];
    if (!v32) {
      goto LABEL_72;
    }
    id v33 = v32;
    if (![v32 v20[436]])
    {

      goto LABEL_25;
    }
    uint64_t v104 = v31;
    uint64_t v106 = v29;
    id v34 = [v107 autocompleteMatchInfo];
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = *(void **)(v95 + v94);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v36 setMatchInfo:v35 forObject:isa];
    }
    id v38 = [v25 identifier];
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;

    id v42 = v25;
    id v43 = [v107 autocompleteMatchInfo];
    uint64_t v44 = v18;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v109[0] = *v99;
    id v46 = v109[0];
    *id v99 = (id)0x8000000000000000;
    unint64_t v48 = sub_100103580(v39, v41);
    uint64_t v49 = v46[2];
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      goto LABEL_61;
    }
    char v52 = v47;
    if (v46[3] < v51) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v18 = v44;
      if (v47) {
        goto LABEL_43;
      }
    }
    else
    {
      sub_1003532E0();
      id v46 = v109[0];
      uint64_t v18 = v44;
      if (v52)
      {
LABEL_43:
        uint64_t v55 = v46[7] + 16 * v48;
        id v56 = *(void **)(v55 + 8);

        *(void *)uint64_t v55 = v42;
        *(void *)(v55 + 8) = v43;
        goto LABEL_47;
      }
    }
LABEL_45:
    v46[(v48 >> 6) + 8] |= 1 << v48;
    Class v57 = (uint64_t *)(v46[6] + 16 * v48);
    *Class v57 = v39;
    v57[1] = v41;
    id v58 = (void *)(v46[7] + 16 * v48);
    *id v58 = v42;
    v58[1] = v43;
    uint64_t v59 = v46[2];
    BOOL v23 = __OFADD__(v59, 1);
    uint64_t v60 = v59 + 1;
    if (v23) {
      goto LABEL_62;
    }
    v46[2] = v60;
    swift_bridgeObjectRetain();
LABEL_47:
    *id v99 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v61 = [objc_allocWithZone((Class)CNMutableContact) initWithContact:v42];
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_100F5DFF0;
    *(void *)(v62 + 32) = v108;
    v109[0] = (id)v62;
    specialized Array._endMutation()();
    id v63 = v108;
    Class v64 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v61 setPostalAddresses:v64];

    [v61 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100100830(0, (unint64_t *)&unk_1015D98C0);
    uint64_t v31 = v104;
    uint64_t v29 = v106;
    if ((swift_dynamicCast() & 1) == 0)
    {

      id v19 = &selRef_showDisclosureButton;
      id v20 = &selRef_isEvFeasible;
      unint64_t v27 = v97;
      id v25 = v98;
      uint64_t v28 = v96;
LABEL_25:
      if (v31 == v28) {
        goto LABEL_16;
      }
      goto LABEL_26;
    }
    id v65 = *(id *)(v92 + 320);
    id v66 = [v107 autocompleteMatchInfo];
    swift_beginAccess();
    uint64_t v67 = *v93;
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    void *v93 = v67;
    if ((v68 & 1) == 0)
    {
      uint64_t v67 = sub_1001D0A84(0, v67[2] + 1, 1, v67);
      void *v93 = v67;
    }
    unint64_t v70 = v67[2];
    unint64_t v69 = v67[3];
    if (v70 >= v69 >> 1)
    {
      uint64_t v67 = sub_1001D0A84((void *)(v69 > 1), v70 + 1, 1, v67);
      void *v93 = v67;
    }
    v67[2] = v70 + 1;
    uint64_t v71 = &v67[2 * v70];
    v71[4] = v65;
    v71[5] = v66;
    swift_endAccess();

    uint64_t v28 = v96;
    unint64_t v27 = v97;
    uint64_t v29 = v106;
    id v19 = &selRef_showDisclosureButton;
    id v20 = &selRef_isEvFeasible;
    id v25 = v98;
    if (v104 == v96) {
      goto LABEL_16;
    }
LABEL_26:
    ++v29;
  }
  sub_10035053C(v51, isUniquelyReferenced_nonNull_native);
  id v46 = v109[0];
  unint64_t v53 = sub_100103580(v39, v41);
  if ((v52 & 1) == (v54 & 1))
  {
    unint64_t v48 = v53;
    uint64_t v18 = v44;
    if (v52) {
      goto LABEL_43;
    }
    goto LABEL_45;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1002BA6CC()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = *(void **)(v0 + 544);
  unint64_t v3 = *(void **)(v0 + 536);
  swift_willThrow();

  uint64_t v4 = *(void **)(v0 + 432);
  double Current = CFAbsoluteTimeGetCurrent();
  id v6 = v4;
  swift_errorRetain();
  id v7 = v6;
  swift_errorRetain();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = *(void *)(v0 + 528);
    uint64_t v19 = *(void *)(v0 + 520);
    uint64_t v21 = *(void **)(v0 + 512);
    id v22 = *(void **)(v0 + 504);
    double v11 = *(double *)(v0 + 472);
    id v20 = *(void **)(v0 + 432);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412802;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 376) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v14;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 384) = sub_1000F2280(v19, v10, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 22) = 2048;
    *(double *)(v0 + 392) = Current - v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[⌛]SearchFindMyFriendOperation: Error encountered while fetching contacts:%@ for query:%s\n Time taken: %f", (uint8_t *)v12, 0x20u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    swift_release();
    swift_release();
  }
  else
  {
    unint64_t v15 = *(void **)(v0 + 512);
    uint64_t v16 = *(void **)(v0 + 432);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    swift_release();
    swift_release();
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17(0);
}

void sub_1002BAA48(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (sub_1002B7BF8()) {
    *a3 = 1;
  }
  id v31 = [objc_allocWithZone((Class)SearchAddressBookOperationMatch) initWithContact:a1 context:*(void *)(a4 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context)];
  if ([v31 isGoodMatch])
  {
    uint64_t v13 = (void *)(a5 + 16);
    uint64_t v14 = (uint64_t *)(a6 + 16);
    swift_beginAccess();
    id v15 = v31;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    id v16 = [v15 contact];
    id v17 = [v16 identifier];

    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    swift_beginAccess();
    id v21 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *v14;
    *uint64_t v14 = 0x8000000000000000;
    sub_100351D58((uint64_t)v21, v18, v20, isUniquelyReferenced_nonNull_native);
    *uint64_t v14 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v23 = [v21 contact];
    int v24 = [v23 iOSLegacyIdentifier];

    if (v24 >= 1)
    {
      uint64_t v25 = (uint64_t *)(a7 + 16);
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_100F5CF70;
      *(void *)(v26 + 56) = &type metadata for Int32;
      *(void *)(v26 + 64) = &protocol witness table for Int32;
      *(_DWORD *)(v26 + 32) = v24;
      uint64_t v27 = String.init(format:_:)();
      uint64_t v29 = v28;
      swift_beginAccess();
      id v21 = v21;
      char v30 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *v25;
      *uint64_t v25 = 0x8000000000000000;
      sub_100351D58((uint64_t)v21, v27, v29, v30);
      *uint64_t v25 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
  else
  {
  }
}

void sub_1002BAD50(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = *(void (**)(id, id, uint64_t))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a3;
  v7(v9, v8, a4);
  swift_release();
}

uint64_t sub_1002BADE4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000FF33C(&qword_1015D98E0);
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      sub_100100830(0, &qword_1015D98D8);
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_100101750((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40), &qword_1015D98D0);
    return swift_continuation_throwingResume();
  }
}

void sub_1002BAEDC(id *a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  id v7 = *a1;
  id v8 = [*a1 contact];
  if (!v8) {
    return;
  }
  id v9 = v8;
  id v10 = [v8 personId];
  if (!v10) {
    goto LABEL_7;
  }
  double v11 = v10;
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if ([v9 personIdType] == (id)1)
  {
    swift_beginAccess();
    uint64_t v14 = *a2;
    if (*(void *)(*a2 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_100103580(v33, v13);
      if (v16)
      {
        id v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
        id v18 = v17;
      }
      else
      {
        id v17 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      id v17 = 0;
    }
    swift_endAccess();
  }
  else
  {
    id v17 = 0;
  }
  if ([v9 personIdType] == (id)3)
  {
    swift_beginAccess();
    uint64_t v19 = *a3;
    if (*(void *)(*a3 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_100103580(v33, v13);
      if (v21)
      {
        id v22 = *(void **)(*(void *)(v19 + 56) + 8 * v20);
        swift_endAccess();
        id v23 = v22;
        swift_bridgeObjectRelease_n();

        id v17 = v22;
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();

    swift_beginAccess();
    uint64_t v24 = *a2;
    if (!*(void *)(*a2 + 16))
    {
      swift_endAccess();

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_100103580(v33, v13);
    if ((v26 & 1) == 0)
    {
      swift_endAccess();

      swift_bridgeObjectRelease_n();
      return;
    }
    id v17 = *(void **)(*(void *)(v24 + 56) + 8 * v25);
    swift_endAccess();
    id v23 = v17;
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_7:

    return;
  }
  id v23 = v17;
LABEL_24:
  id v27 = v23;
  if (*a4 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v28 = v27;
    ++*a4;
    [v27 peopleSuggesterRank];
    if (v29 == 0.0)
    {
      [v7 rank];
    }
    else
    {
      [v28 peopleSuggesterRank];
      double v32 = v31;
      [v7 rank];
      if (v30 >= v32) {
        double v30 = v32;
      }
    }
    [v28 setPeopleSuggesterRank:v30];
  }
}

uint64_t sub_1002BB34C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  void *v4 = v2;
  v4[1] = sub_1002BB3F4;
  return sub_1002B7EC0();
}

uint64_t sub_1002BB3F4(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

void sub_1002BB53C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict];
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16)
    || (uint64_t v2 = &v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray],
        swift_beginAccess(),
        *(void *)(*(void *)v2 + 16)))
  {
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1000F2248(v3, (uint64_t)qword_1016117D8);
    uint64_t v4 = v0;
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      v39[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v8 = *(void *)&v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      unint64_t v9 = *(void *)&v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain();
      sub_1000F2280(v8, v9, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "SearchFindMyFriendOperation: Creating person objects for query: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    if (v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_singularResults] == 1)
    {
      double v11 = &v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray];
      swift_beginAccess();
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        uint64_t v14 = &v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems];
        unint64_t v15 = (objc_class *)type metadata accessor for MapsAutocompletePerson();
        swift_bridgeObjectRetain();
        uint64_t v38 = v12;
        char v16 = (void **)(v12 + 40);
        do
        {
          uint64_t v19 = *(v16 - 1);
          unint64_t v20 = *v16;
          id v21 = objc_allocWithZone(v15);
          id v22 = v20;
          id v23 = v19;
          id v18 = (char *)sub_100326AB8(0, 0, 0, 0);
          uint64_t v24 = *(void **)&v18[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
          *(void *)&v18[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = v23;
          id v17 = (char *)v23;

          unint64_t v25 = *(void **)&v18[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo];
          *(void *)&v18[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = v20;
          id v26 = v22;

          id v27 = [objc_allocWithZone((Class)AutocompleteItem) initWithLocalCompletion:v18 sourceType:4 sourceSubtype:0 matchInfo:v26 v38];
          if (v27)
          {
            uint64_t v28 = v27;
            swift_beginAccess();
            double v29 = v28;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*(void *)v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v14 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();

            id v17 = v18;
            id v18 = v29;
          }
          v16 += 2;

          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      __chkstk_darwin(v10);
      uint64_t v30 = swift_bridgeObjectRetain();
      sub_1002BC58C(v30, sub_1002BC414);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1015CBD60 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_1000F2248(v31, (uint64_t)qword_1016117D8);
    double v32 = v0;
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      v39[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v36 = *(void *)&v32[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      unint64_t v37 = *(void *)&v32[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain();
      sub_1000F2280(v36, v37, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "SearchFindMyFriendOperation: did not find any handles or matching contacts for query: %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1002BBAC8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
  id v17 = (char *)sub_100326AB8(0, 0, 0, 0);
  unint64_t v9 = *(void **)&v17[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
  *(void *)&v17[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = a3;
  id v10 = a3;

  double v11 = *(void **)&v17[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo];
  *(void *)&v17[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = a4;
  id v12 = a4;

  id v13 = [objc_allocWithZone((Class)AutocompleteItem) initWithLocalCompletion:v17 sourceType:4 sourceSubtype:0 matchInfo:v12];
  if (v13)
  {
    uint64_t v14 = v13;
    unint64_t v15 = (void *)(a5 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
    swift_beginAccess();
    id v16 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
  }
}

void sub_1002BBC84()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 willChangeValueForKey:v1];

  *((unsigned char *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation) = 1;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 didChangeValueForKey:v2];

  NSString v3 = String._bridgeToObjectiveC()();
  [v0 willChangeValueForKey:v3];

  *((unsigned char *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation) = 0;
  NSString v4 = String._bridgeToObjectiveC()();
  [v0 didChangeValueForKey:v4];

  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_1016117D8);
  id v13 = v0;
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    id v10 = (char *)v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v13;

    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    sub_1000F2280(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SearchFindMyFriendOperation: marking operation:%@ as complete for query:%s", (uint8_t *)v8, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1002BC04C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 willChangeValueForKey:v1];

  *((unsigned char *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation) = 0;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 didChangeValueForKey:v2];

  NSString v3 = String._bridgeToObjectiveC()();
  [v0 willChangeValueForKey:v3];

  *((unsigned char *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation) = 1;
  NSString v4 = String._bridgeToObjectiveC()();
  [v0 didChangeValueForKey:v4];

  if (qword_1015CBD60 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_1016117D8);
  id v13 = v0;
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    id v10 = (char *)v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v13;

    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    unint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain();
    sub_1000F2280(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SearchFindMyFriendOperation: marking operation:%@ as complete for query:%s", (uint8_t *)v8, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1002BC414(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1002BBAC8(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1002BC41C(uint64_t a1, uint64_t a2)
{
  NSString v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100103580(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *NSString v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1003532E0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_1002CCAB8(v6, v9);
  *NSString v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1002BC504(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1002BC58C(uint64_t a1, void (*a2)(uint64_t, uint64_t, id, void *))
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v23) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v22 + 8 * v19);
    ++v7;
    if (!v20)
    {
      int64_t v7 = v19 + 1;
      if (v19 + 1 >= v23) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v22 + 8 * v7);
      if (!v20)
      {
        int64_t v7 = v19 + 2;
        if (v19 + 2 >= v23) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v22 + 8 * v7);
        if (!v20)
        {
          int64_t v7 = v19 + 3;
          if (v19 + 3 >= v23) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v22 + 8 * v7);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v20 - 1) & v20;
    unint64_t v9 = __clz(__rbit64(v20)) + (v7 << 6);
LABEL_5:
    uint64_t v10 = 16 * v9;
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = *(void *)(a1 + 56) + v10;
    id v16 = *(void **)v14;
    unint64_t v15 = *(void **)(v14 + 8);
    id v17 = v15;
    swift_bridgeObjectRetain();
    id v18 = v16;
    a2(v12, v13, v18, v15);

    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v23) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
    int64_t v7 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v7 >= v23) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v22 + 8 * v7);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1002BC77C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BC7BC()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10005056C;
  unint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015D9850 + dword_1015D9850);
  return v5(v2, v3);
}

uint64_t sub_1002BC870()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

const char *sub_1002BC8A8()
{
  return "peopleSuggesterRank";
}

id sub_1002BC8B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 peopleSuggesterRank];
  *a2 = v4;
  return result;
}

id sub_1002BC8E8(double *a1, id *a2)
{
  return [*a2 setPeopleSuggesterRank:*a1];
}

const char *sub_1002BC8FC()
{
  return "fractionOfMatch";
}

id sub_1002BC908@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 fractionOfMatch];
  *a2 = v4;
  return result;
}

uint64_t sub_1002BC93C()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002BC98C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  sub_1002BAA48(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1002BC998()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002BC9E0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100105268;
  *(_OWORD *)(v3 + 40) = v4;
  *(void *)(v3 + 32) = v2;
  return _swift_task_switch(sub_1002B17B4, 0, 0);
}

uint64_t sub_1002BCA94()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002BCB68(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100105268;
  return sub_1002B0E84(a1, v5, v6, v7, v8);
}

uint64_t sub_1002BCC64()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BCC9C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002BCCDC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100105268;
  return sub_1002B1D2C(a1, v5, v4);
}

uint64_t sub_1002BCD88()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002BCDC0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10005056C;
  v5[15] = a1;
  v5[16] = v4;
  return _swift_task_switch(sub_1002B6560, 0, 0);
}

id sub_1002BCE70()
{
  return sub_1002B6760();
}

void sub_1002BCE78(void *a1, void *a2)
{
  if (a1)
  {
  }
}

id sub_1002BCEB8(uint64_t a1, uint64_t a2, void *a3, int a4, int a5, void *a6)
{
  int v22 = a4;
  int v23 = a5;
  uint64_t v24 = type metadata accessor for CharacterSet();
  uint64_t v11 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_findFriendsTask] = 0;
  v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation] = 0;
  v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation] = 0;
  *(void *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems] = _swiftEmptyArrayStorage;
  uint64_t v14 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict;
  unint64_t v15 = v6;
  *(void *)&v6[v14] = sub_100116874((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray] = _swiftEmptyArrayStorage;
  id v16 = &v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
  void *v16 = a1;
  v16[1] = a2;
  *(void *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context] = a3;
  v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isOffline] = v22;
  v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_singularResults] = v23;
  *(void *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchFindMySession] = a6;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  id v17 = a6;
  swift_bridgeObjectRetain();
  id v18 = a3;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_100180324();
  uint64_t v19 = StringProtocol.components(separatedBy:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  swift_bridgeObjectRelease();
  *(void *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchTerms] = v19;

  MyFriendOperation = (objc_class *)type metadata accessor for SearchFindMyFriendOperation();
  v25.receiver = v15;
  v25.super_class = MyFriendOperation;
  return [super init];
}

uint64_t sub_1002BD0C8()
{
  return sub_1002B5D04();
}

Swift::Int sub_1002BD140()
{
  return sub_10011ED40();
}

uint64_t sub_1002BD160(void *a1, uint64_t a2, void *a3)
{
  return sub_10002138C(a1, a2, a3, (SEL *)&selRef_setSuggestionsDataProvider_);
}

uint64_t sub_1002BD16C@<X0>(uint64_t a1@<X8>)
{
  return sub_10010D06C(&qword_1015CBEF8, (uint64_t *)&unk_1015D73F0, (uint64_t)qword_101611B80, a1);
}

unint64_t sub_1002BD19C()
{
  unint64_t result = qword_1015D9950;
  if (!qword_1015D9950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9950);
  }
  return result;
}

unint64_t sub_1002BD1F0(uint64_t a1)
{
  unint64_t result = sub_1002BD218();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002BD218()
{
  unint64_t result = qword_1015D9990;
  if (!qword_1015D9990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9990);
  }
  return result;
}

unint64_t sub_1002BD284()
{
  unint64_t result = qword_1015D99F0;
  if (!qword_1015D99F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D99F0);
  }
  return result;
}

Swift::Int sub_1002BD2D8(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_100356204(v5);
  }
  Swift::Int result = sub_1002BDD8C(a1, a2);
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_1002BD35C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v18 = *(void **)(v2 + 16);
  uint64_t v19 = v18;
  uint64_t v17 = a1;
  swift_bridgeObjectRetain_n();
  sub_1002BD2D8((uint64_t (*)(uint64_t *, uint64_t *))sub_1002C16BC, (uint64_t)v16);
  sub_10019C1E4((uint64_t)&v19);
  if (v18[2])
  {
    uint64_t v4 = v18[5];
    uint64_t v5 = v18[7];
    uint64_t v14 = v18[6];
    uint64_t v15 = v18[4];
    uint64_t v6 = v18[9];
    uint64_t v13 = v18[8];
    uint64_t v8 = v18[10];
    uint64_t v7 = v18[11];
    uint64_t v10 = v18[12];
    uint64_t v9 = v18[13];
    uint64_t v11 = v18[14];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v13 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v10 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  uint64_t result = swift_release();
  *a2 = v15;
  a2[1] = v4;
  a2[2] = v14;
  a2[3] = v5;
  a2[4] = v13;
  a2[5] = v6;
  a2[6] = v8;
  a2[7] = v7;
  a2[8] = v10;
  a2[9] = v9;
  a2[10] = v11;
  return result;
}

uint64_t sub_1002BD4A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void **)(v1 + 64);
  [*(id *)(v1 + 24) muid];
  uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v10 = v5;
  v6._countAndFlagsBits = 95;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v3;
  v7._object = v4;
  String.append(_:)(v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9;
  a1[1] = v10;
  return result;
}

uint64_t sub_1002BD540(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_1002BF334((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1002BD59C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v16 = v1;
  Swift::UInt v2 = *(void *)(v1 + 16);
  Hasher._combine(_:)(v2);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      long long v4 = *(_OWORD *)(v3 + 16);
      v17[0] = *(_OWORD *)v3;
      v17[1] = v4;
      long long v5 = *(_OWORD *)(v3 + 32);
      long long v6 = *(_OWORD *)(v3 + 48);
      long long v7 = *(_OWORD *)(v3 + 64);
      uint64_t v18 = *(void *)(v3 + 80);
      v17[3] = v6;
      v17[4] = v7;
      v17[2] = v5;
      sub_100142CC4((uint64_t)v17);
      sub_10031BDF0();
      sub_100142D30((uint64_t)v17);
      v3 += 88;
      --v2;
    }
    while (v2);
    sub_10019C1E4((uint64_t)&v16);
  }
  Hasher._combine(_:)((Swift::UInt64)[*(id *)(v0 + 24) muid]);
  Hasher._combine(_:)(*(unsigned char *)(v0 + 32) & 1);
  Hasher._combine(_:)(*(unsigned char *)(v0 + 48) & 1);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v0 + 72) & 1);
  unint64_t v8 = *(void *)(v0 + 40);
  uint64_t v15 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_7;
    }
    return sub_10019C1E4((uint64_t)&v15);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v9 = result;
  if (!result) {
    return sub_10019C1E4((uint64_t)&v15);
  }
LABEL_7:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v12 = *(void **)(v8 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      id v13 = [v12 accessibilityText:v15, v16];
      if (v13)
      {
        uint64_t v14 = v13;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        Hasher._combine(_:)(0);
        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    return sub_10019C1E4((uint64_t)&v15);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1002BD808()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002BD84C()
{
  return Hasher._finalize()();
}

BOOL sub_1002BD888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  long long v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v53 = (char *)&v48 - v8;
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v9 - 8);
  uint64_t v51 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  BOOL v50 = (char *)&v48 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - v17;
  __chkstk_darwin(v19);
  uint64_t v55 = (uint64_t)&v48 - v20;
  __chkstk_darwin(v21);
  int v23 = (char *)&v48 - v22;
  __chkstk_darwin(v24);
  uint64_t v54 = (uint64_t)&v48 - v25;
  uint64_t v26 = *(void **)(a1 + 72);
  uint64_t v27 = *(void **)(a2 + 72);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v29 = [v26 serviceResumesAfterDate:isa];

  char v52 = v5;
  if (v29)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v30(v23, 0, 1, v4);
  }
  else
  {
    uint64_t v30 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v30(v23, 1, 1, v4);
  }
  uint64_t v31 = v54;
  sub_1002C16DC((uint64_t)v23, v54);
  Class v32 = Date._bridgeToObjectiveC()().super.isa;
  id v33 = [v27 serviceResumesAfterDate:v32];

  uint64_t v34 = v31;
  if (v33)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
  }
  unint64_t v37 = v52;
  uint64_t v36 = v53;
  v30(v18, v35, 1, v4);
  uint64_t v38 = (uint64_t)v18;
  uint64_t v39 = v55;
  sub_1002C16DC(v38, v55);
  sub_1001C100C(v34, (uint64_t)v15);
  uint64_t v40 = (unsigned int (*)(char *, uint64_t, uint64_t))v37[6];
  if (v40(v15, 1, v4) != 1)
  {
    uint64_t v41 = (void (*)(char *, char *, uint64_t))v37[4];
    v41(v36, v15, v4);
    uint64_t v15 = v50;
    sub_1001C100C(v39, (uint64_t)v50);
    if (v40(v15, 1, v4) != 1)
    {
      BOOL v45 = v49;
      v41(v49, v15, v4);
      BOOL v44 = Date.compare(_:)() == -1;
      id v46 = (void (*)(char *, uint64_t))v37[1];
      v46(v45, v4);
      v46(v36, v4);
      sub_1000FF2E0(v55, (uint64_t *)&unk_1015D9410);
      uint64_t v34 = v54;
      goto LABEL_15;
    }
    ((void (*)(char *, uint64_t))v37[1])(v36, v4);
    uint64_t v39 = v55;
    uint64_t v34 = v54;
  }
  sub_1000FF2E0((uint64_t)v15, (uint64_t *)&unk_1015D9410);
  unsigned int v42 = v40((char *)v34, 1, v4);
  uint64_t v43 = v51;
  sub_1002C16DC(v39, v51);
  if (v42 == 1 && v40((char *)v43, 1, v4) == 1)
  {
    sub_1000FF2E0(v43, (uint64_t *)&unk_1015D9410);
    BOOL v44 = 1;
  }
  else
  {
    sub_1000FF2E0(v43, (uint64_t *)&unk_1015D9410);
    BOOL v44 = v40((char *)v34, 1, v4) != 1;
  }
LABEL_15:
  sub_1000FF2E0(v34, (uint64_t *)&unk_1015D9410);
  return v44;
}

Swift::Int sub_1002BDD8C(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v179 = a2;
  Swift::Int v5 = v2[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v5);
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_138;
    }
    if (v5) {
      return sub_1002BEA20(0, v5, 1, a1);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 <= -2) {
    goto LABEL_147;
  }
  Swift::Int v143 = v5;
  Swift::Int v139 = result;
  char v137 = v2;
  if (v5 < 2)
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    uint64_t v140 = _swiftEmptyArrayStorage;
    if (v5 != 1)
    {
      unint64_t v55 = _swiftEmptyArrayStorage[2];
LABEL_102:
      if (v55 >= 2)
      {
        uint64_t v128 = *v137;
        do
        {
          unint64_t v129 = v55 - 2;
          if (v55 < 2) {
            goto LABEL_133;
          }
          if (!v128) {
            goto LABEL_146;
          }
          uint64_t v130 = *(void *)&v10[16 * v129 + 32];
          uint64_t v131 = *(void *)&v10[16 * v55 + 24];
          sub_1002BEC98((char *)(v128 + 88 * v130), (char *)(v128 + 88 * *(void *)&v10[16 * v55 + 16]), v128 + 88 * v131, __dst, a1);
          if (v4) {
            break;
          }
          if (v131 < v130) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_10035503C((uint64_t)v10);
          }
          if (v129 >= *((void *)v10 + 2)) {
            goto LABEL_135;
          }
          id v132 = &v10[16 * v129 + 32];
          *(void *)id v132 = v130;
          *((void *)v132 + 1) = v131;
          unint64_t v133 = *((void *)v10 + 2);
          if (v55 > v133) {
            goto LABEL_136;
          }
          memmove(&v10[16 * v55 + 16], &v10[16 * v55 + 32], 16 * (v133 - v55));
          *((void *)v10 + 2) = v133 - 1;
          unint64_t v55 = v133 - 1;
        }
        while (v133 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v140[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v9 + 16) = v8;
    uint64_t v140 = (void *)v9;
    __dst = (char *)(v9 + 32);
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *v2;
  uint64_t v138 = *v2 + 128;
  uint64_t v136 = *v2 + 80;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v13 = v143;
  uint64_t v156 = *v2;
  while (1)
  {
    Swift::Int v14 = v11;
    Swift::Int v15 = v11 + 1;
    Swift::Int v141 = v11;
    id v142 = v10;
    if (v11 + 1 < v13)
    {
      uint64_t v16 = (uint64_t *)(v12 + 88 * v15);
      uint64_t v17 = v16[1];
      uint64_t v18 = v16[2];
      uint64_t v20 = v16[5];
      uint64_t v19 = v16[6];
      uint64_t v22 = v16[9];
      uint64_t v21 = v16[10];
      uint64_t v170 = *v16;
      uint64_t v171 = v17;
      uint64_t v172 = v18;
      long long v173 = *(_OWORD *)(v16 + 3);
      uint64_t v174 = v20;
      uint64_t v175 = v19;
      long long v176 = *(_OWORD *)(v16 + 7);
      uint64_t v177 = v22;
      uint64_t v178 = v21;
      int v23 = (uint64_t *)(v12 + 88 * v11);
      uint64_t v24 = v23[1];
      uint64_t v25 = v23[2];
      uint64_t v157 = v4;
      uint64_t v27 = v23[5];
      uint64_t v26 = v23[6];
      uint64_t v29 = v23[9];
      uint64_t v28 = v23[10];
      uint64_t v161 = *v23;
      uint64_t v162 = v24;
      uint64_t v163 = v25;
      long long v164 = *(_OWORD *)(v23 + 3);
      uint64_t v165 = v27;
      uint64_t v166 = v26;
      long long v167 = *(_OWORD *)(v23 + 7);
      uint64_t v168 = v29;
      uint64_t v169 = v28;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v145 = a1(&v170, &v161);
      if (v157)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_115;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int v15 = v14 + 2;
      if (v14 + 2 < v143)
      {
        uint64_t v30 = v138 + 88 * v14;
        while (1)
        {
          Swift::Int v152 = v15;
          uint64_t v31 = *(void *)(v30 + 56);
          uint64_t v32 = *(void *)(v30 + 64);
          uint64_t v34 = *(void *)(v30 + 88);
          uint64_t v33 = *(void *)(v30 + 96);
          uint64_t v36 = *(void *)(v30 + 120);
          uint64_t v35 = *(void *)(v30 + 128);
          uint64_t v170 = *(void *)(v30 + 48);
          uint64_t v171 = v31;
          uint64_t v172 = v32;
          long long v173 = *(_OWORD *)(v30 + 72);
          uint64_t v174 = v34;
          uint64_t v175 = v33;
          long long v176 = *(_OWORD *)(v30 + 104);
          uint64_t v177 = v36;
          uint64_t v178 = v35;
          uint64_t v37 = *(void *)(v30 - 40);
          uint64_t v38 = *(void *)(v30 - 24);
          uint64_t v40 = *(void *)v30;
          uint64_t v39 = *(void *)(v30 + 8);
          uint64_t v42 = *(void *)(v30 + 32);
          uint64_t v41 = *(void *)(v30 + 40);
          uint64_t v162 = *(void *)(v30 - 32);
          uint64_t v163 = v38;
          long long v164 = *(_OWORD *)(v30 - 16);
          uint64_t v165 = v40;
          uint64_t v166 = v39;
          long long v167 = *(_OWORD *)(v30 + 16);
          uint64_t v168 = v42;
          uint64_t v169 = v41;
          uint64_t v161 = v37;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LODWORD(v31) = a1(&v170, &v161);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v145 ^ v31)) {
            break;
          }
          ++v15;
          v30 += 88;
          if (v143 == v152 + 1)
          {
            Swift::Int v15 = v143;
            break;
          }
        }
        Swift::Int v14 = v141;
      }
      uint64_t v12 = v156;
      uint64_t v4 = 0;
      uint64_t v10 = v142;
      if (v145)
      {
        if (v15 < v14) {
          goto LABEL_142;
        }
        if (v14 < v15)
        {
          uint64_t v43 = 88 * v15;
          Swift::Int v153 = v15;
          Swift::Int v44 = v14;
          Swift::Int v45 = v15;
          Swift::Int v46 = v44;
          uint64_t v47 = 88 * v44;
          do
          {
            if (v46 != --v45)
            {
              if (!v12) {
                goto LABEL_145;
              }
              uint64_t v48 = v12 + v43;
              uint64_t v49 = *(void *)(v12 + v47);
              uint64_t v50 = *(void *)(v12 + v47 + 8);
              uint64_t v51 = *(void *)(v12 + v47 + 40);
              uint64_t v150 = *(void *)(v12 + v47 + 32);
              uint64_t v158 = *(void *)(v12 + v47 + 80);
              long long v148 = *(_OWORD *)(v12 + v47 + 64);
              long long v146 = *(_OWORD *)(v12 + v47 + 16);
              long long v147 = *(_OWORD *)(v12 + v47 + 48);
              memmove((void *)(v12 + v47), (const void *)(v12 + v43 - 88), 0x58uLL);
              *(void *)(v48 - 88) = v49;
              *(void *)(v48 - 80) = v50;
              *(_OWORD *)(v48 - 72) = v146;
              *(void *)(v48 - 56) = v150;
              *(void *)(v48 - 48) = v51;
              *(_OWORD *)(v48 - 40) = v147;
              *(_OWORD *)(v48 - 24) = v148;
              uint64_t v12 = v156;
              *(void *)(v48 - 8) = v158;
              uint64_t v10 = v142;
            }
            ++v46;
            v43 -= 88;
            v47 += 88;
          }
          while (v46 < v45);
          Swift::Int v15 = v153;
          Swift::Int v14 = v141;
        }
      }
    }
    if (v15 >= v143) {
      goto LABEL_40;
    }
    if (__OFSUB__(v15, v14)) {
      goto LABEL_139;
    }
    if (v15 - v14 >= v139) {
      goto LABEL_40;
    }
    if (__OFADD__(v14, v139)) {
      goto LABEL_140;
    }
    Swift::Int v52 = v143;
    if (v14 + v139 < v143) {
      Swift::Int v52 = v14 + v139;
    }
    if (v52 < v14) {
      break;
    }
    if (v15 != v52)
    {
      uint64_t v159 = v4;
      os_log_type_t v103 = (void *)(v136 + 88 * v15);
      Swift::Int v134 = v52;
      do
      {
        uint64_t v104 = (uint64_t *)(v12 + 88 * v15);
        uint64_t v105 = *v104;
        uint64_t v106 = v104[1];
        uint64_t v107 = v104[2];
        uint64_t v108 = v104[3];
        uint64_t v109 = v104[4];
        uint64_t v110 = v104[5];
        uint64_t v111 = v104[6];
        long long v112 = *(_OWORD *)(v104 + 7);
        uint64_t v114 = v104[9];
        uint64_t v113 = v104[10];
        unint64_t v135 = v103;
        Swift::Int v155 = v15;
        while (1)
        {
          Swift::Int v144 = v14;
          uint64_t v170 = v105;
          uint64_t v171 = v106;
          uint64_t v172 = v107;
          *(void *)&long long v173 = v108;
          *((void *)&v173 + 1) = v109;
          uint64_t v174 = v110;
          long long v176 = v112;
          uint64_t v175 = v111;
          uint64_t v177 = v114;
          uint64_t v178 = v113;
          uint64_t v115 = (long long *)(v103 - 21);
          uint64_t v151 = *(v103 - 20);
          uint64_t v116 = *(v103 - 19);
          uint64_t v118 = *(v103 - 16);
          uint64_t v117 = *(v103 - 15);
          uint64_t v120 = *(v103 - 12);
          uint64_t v119 = *(v103 - 11);
          uint64_t v161 = *(v103 - 21);
          uint64_t v162 = v151;
          uint64_t v163 = v116;
          long long v164 = *((_OWORD *)v103 - 9);
          uint64_t v165 = v118;
          uint64_t v166 = v117;
          long long v167 = *((_OWORD *)v103 - 7);
          uint64_t v168 = v120;
          uint64_t v169 = v119;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v121 = a1(&v170, &v161);
          if (v159) {
            goto LABEL_114;
          }
          char v122 = v121;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v122 & 1) == 0) {
            break;
          }
          Swift::Int v123 = v155;
          uint64_t v12 = v156;
          if (!v156) {
            goto LABEL_144;
          }
          uint64_t v105 = *(v103 - 10);
          uint64_t v106 = *(v103 - 9);
          uint64_t v107 = *(v103 - 8);
          uint64_t v108 = *(v103 - 7);
          uint64_t v109 = *(v103 - 6);
          uint64_t v110 = *(v103 - 5);
          uint64_t v111 = *(v103 - 4);
          long long v112 = *(_OWORD *)(v103 - 3);
          uint64_t v114 = *(v103 - 1);
          uint64_t v113 = *v103;
          long long v124 = *(_OWORD *)(v103 - 15);
          *((_OWORD *)v103 - 3) = *(_OWORD *)(v103 - 17);
          *((_OWORD *)v103 - 2) = v124;
          *((_OWORD *)v103 - 1) = *(_OWORD *)(v103 - 13);
          void *v103 = *(v103 - 11);
          long long v125 = *v115;
          long long v126 = *(_OWORD *)(v103 - 19);
          *(v103 - 11) = v113;
          v103 -= 11;
          *(long long *)((char *)v115 + 88) = v125;
          *(long long *)((char *)v115 + 104) = v126;
          *(v103 - 10) = v105;
          *(v103 - 9) = v106;
          *(v103 - 8) = v107;
          *(v103 - 7) = v108;
          *(v103 - 6) = v109;
          *(v103 - 5) = v110;
          *(v103 - 4) = v111;
          *(_OWORD *)(v103 - 3) = v112;
          Swift::Int v14 = v144 + 1;
          *(v103 - 1) = v114;
          if (v155 == v144 + 1) {
            goto LABEL_98;
          }
        }
        Swift::Int v123 = v155;
        uint64_t v12 = v156;
LABEL_98:
        Swift::Int v15 = v123 + 1;
        os_log_type_t v103 = v135 + 11;
        Swift::Int v14 = v141;
      }
      while (v15 != v134);
      Swift::Int v15 = v134;
      uint64_t v4 = 0;
      uint64_t v10 = v142;
      if (v134 < v141) {
        goto LABEL_137;
      }
      goto LABEL_41;
    }
LABEL_40:
    if (v15 < v14) {
      goto LABEL_137;
    }
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_10035496C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v54 = *((void *)v10 + 2);
    unint64_t v53 = *((void *)v10 + 3);
    unint64_t v55 = v54 + 1;
    uint64_t v12 = v156;
    if (v54 >= v53 >> 1)
    {
      id v127 = sub_10035496C((char *)(v53 > 1), v54 + 1, 1, v10);
      uint64_t v12 = v156;
      uint64_t v10 = v127;
    }
    *((void *)v10 + 2) = v55;
    id v56 = v10 + 32;
    Class v57 = &v10[16 * v54 + 32];
    *(void *)Class v57 = v141;
    *((void *)v57 + 1) = v15;
    Swift::Int v154 = v15;
    if (v54)
    {
      while (1)
      {
        unint64_t v58 = v55 - 1;
        if (v55 >= 4)
        {
          id v63 = &v56[16 * v55];
          uint64_t v64 = *((void *)v63 - 8);
          uint64_t v65 = *((void *)v63 - 7);
          BOOL v69 = __OFSUB__(v65, v64);
          uint64_t v66 = v65 - v64;
          if (v69) {
            goto LABEL_122;
          }
          uint64_t v68 = *((void *)v63 - 6);
          uint64_t v67 = *((void *)v63 - 5);
          BOOL v69 = __OFSUB__(v67, v68);
          uint64_t v61 = v67 - v68;
          char v62 = v69;
          if (v69) {
            goto LABEL_123;
          }
          unint64_t v70 = v55 - 2;
          uint64_t v71 = &v56[16 * v55 - 32];
          uint64_t v73 = *(void *)v71;
          uint64_t v72 = *((void *)v71 + 1);
          BOOL v69 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          if (v69) {
            goto LABEL_125;
          }
          BOOL v69 = __OFADD__(v61, v74);
          uint64_t v75 = v61 + v74;
          if (v69) {
            goto LABEL_128;
          }
          if (v75 >= v66)
          {
            uint64_t v93 = &v56[16 * v58];
            uint64_t v95 = *(void *)v93;
            uint64_t v94 = *((void *)v93 + 1);
            BOOL v69 = __OFSUB__(v94, v95);
            uint64_t v96 = v94 - v95;
            if (v69) {
              goto LABEL_132;
            }
            BOOL v86 = v61 < v96;
            goto LABEL_77;
          }
        }
        else
        {
          if (v55 != 3)
          {
            uint64_t v87 = *((void *)v10 + 4);
            uint64_t v88 = *((void *)v10 + 5);
            BOOL v69 = __OFSUB__(v88, v87);
            uint64_t v80 = v88 - v87;
            char v81 = v69;
            goto LABEL_71;
          }
          uint64_t v60 = *((void *)v10 + 4);
          uint64_t v59 = *((void *)v10 + 5);
          BOOL v69 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          char v62 = v69;
        }
        if (v62) {
          goto LABEL_124;
        }
        unint64_t v70 = v55 - 2;
        uint64_t v76 = &v56[16 * v55 - 32];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v80 = v77 - v78;
        char v81 = v79;
        if (v79) {
          goto LABEL_127;
        }
        uint64_t v82 = &v56[16 * v58];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v69 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v69) {
          goto LABEL_130;
        }
        if (__OFADD__(v80, v85)) {
          goto LABEL_131;
        }
        if (v80 + v85 >= v61)
        {
          BOOL v86 = v61 < v85;
LABEL_77:
          if (v86) {
            unint64_t v58 = v70;
          }
          goto LABEL_79;
        }
LABEL_71:
        if (v81) {
          goto LABEL_126;
        }
        uint64_t v89 = &v56[16 * v58];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v69 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v69) {
          goto LABEL_129;
        }
        if (v92 < v80) {
          goto LABEL_88;
        }
LABEL_79:
        unint64_t v97 = v58 - 1;
        if (v58 - 1 >= v55)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!v12) {
          goto LABEL_143;
        }
        id v98 = &v56[16 * v97];
        uint64_t v99 = *(void *)v98;
        uint64_t v100 = &v56[16 * v58];
        uint64_t v101 = *((void *)v100 + 1);
        sub_1002BEC98((char *)(v12 + 88 * *(void *)v98), (char *)(v12 + 88 * *(void *)v100), v12 + 88 * v101, __dst, a1);
        if (v4) {
          goto LABEL_115;
        }
        if (v101 < v99) {
          goto LABEL_119;
        }
        if (v58 > *((void *)v10 + 2)) {
          goto LABEL_120;
        }
        *(void *)id v98 = v99;
        *(void *)&v56[16 * v97 + 8] = v101;
        unint64_t v102 = *((void *)v10 + 2);
        if (v58 >= v102) {
          goto LABEL_121;
        }
        unint64_t v55 = v102 - 1;
        memmove(&v56[16 * v58], v100 + 16, 16 * (v102 - 1 - v58));
        *((void *)v10 + 2) = v102 - 1;
        uint64_t v12 = v156;
        if (v102 <= 2) {
          goto LABEL_88;
        }
      }
    }
    unint64_t v55 = 1;
LABEL_88:
    Swift::Int v13 = v143;
    Swift::Int v11 = v154;
    if (v154 >= v143) {
      goto LABEL_102;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002BEA20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *))
{
  if (a3 != a2)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (void *)(*v4 + 88 * a3 + 80);
    uint64_t v32 = result;
    uint64_t v35 = *v4;
LABEL_4:
    uint64_t v7 = (uint64_t *)(v5 + 88 * a3);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = v7[2];
    uint64_t v11 = v7[3];
    uint64_t v12 = v7[4];
    uint64_t v13 = v7[5];
    uint64_t v14 = v7[6];
    long long v15 = *(_OWORD *)(v7 + 7);
    uint64_t v17 = v7[9];
    uint64_t v16 = v7[10];
    uint64_t v34 = v6;
    uint64_t v36 = a3;
    while (1)
    {
      uint64_t v38 = result;
      uint64_t v18 = *(v6 - 21);
      uint64_t v19 = *(v6 - 20);
      uint64_t v20 = (long long *)(v6 - 21);
      v46[0] = v8;
      v46[1] = v9;
      v46[2] = v10;
      v46[3] = v11;
      v46[4] = v12;
      uint64_t v46[5] = v13;
      v46[6] = v14;
      long long v47 = v15;
      uint64_t v48 = v17;
      uint64_t v49 = v16;
      uint64_t v21 = *(v6 - 19);
      uint64_t v23 = *(v6 - 16);
      uint64_t v22 = *(v6 - 15);
      uint64_t v25 = *(v6 - 12);
      uint64_t v24 = *(v6 - 11);
      v39[0] = v18;
      v39[1] = v19;
      v39[2] = v21;
      long long v40 = *((_OWORD *)v6 - 9);
      uint64_t v41 = v23;
      uint64_t v42 = v22;
      long long v43 = *((_OWORD *)v6 - 7);
      uint64_t v44 = v25;
      uint64_t v45 = v24;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v50;
      char v27 = a4(v46, v39);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      uint64_t v50 = v26;
      if (v26) {
        break;
      }
      if ((v27 & 1) == 0)
      {
        uint64_t v5 = v35;
        uint64_t v31 = v36;
LABEL_11:
        a3 = v31 + 1;
        uint64_t v6 = v34 + 11;
        Swift::Int result = v32;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v5 = v35;
      if (!v35)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = *(v6 - 10);
      uint64_t v9 = *(v6 - 9);
      uint64_t v10 = *(v6 - 8);
      uint64_t v11 = *(v6 - 7);
      uint64_t v12 = *(v6 - 6);
      uint64_t v13 = *(v6 - 5);
      uint64_t v14 = *(v6 - 4);
      long long v15 = *(_OWORD *)(v6 - 3);
      uint64_t v17 = *(v6 - 1);
      uint64_t v16 = *v6;
      long long v28 = *(_OWORD *)(v6 - 15);
      *((_OWORD *)v6 - 3) = *(_OWORD *)(v6 - 17);
      *((_OWORD *)v6 - 2) = v28;
      *((_OWORD *)v6 - 1) = *(_OWORD *)(v6 - 13);
      void *v6 = *(v6 - 11);
      long long v29 = *v20;
      long long v30 = *(_OWORD *)(v6 - 19);
      *(v6 - 11) = v16;
      v6 -= 11;
      *(long long *)((char *)v20 + 88) = v29;
      *(long long *)((char *)v20 + 104) = v30;
      *(v6 - 10) = v8;
      *(v6 - 9) = v9;
      *(v6 - 8) = v10;
      *(v6 - 7) = v11;
      *(v6 - 6) = v12;
      *(v6 - 5) = v13;
      *(v6 - 4) = v14;
      *(_OWORD *)(v6 - 3) = v15;
      Swift::Int result = v38 + 1;
      *(v6 - 1) = v17;
      uint64_t v31 = v36;
      if (v36 == v38 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1002BEC98(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = v5;
  uint64_t v7 = __dst;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 88;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 88;
  BOOL v86 = __dst;
  v87[0] = __src;
  if (v11 >= v13)
  {
    if (v12 > -88)
    {
      if (__dst != a2 || &a2[88 * v13] <= __dst) {
        memmove(__dst, a2, 88 * v13);
      }
      long long v30 = &v7[88 * v13];
      uint64_t v85 = v30;
      v87[0] = v8;
      if (v9 < v8 && v12 >= 88)
      {
        uint64_t v31 = (char *)(a3 - 88);
        uint64_t v32 = v8;
        uint64_t v65 = v9;
        while (1)
        {
          uint64_t v61 = v6;
          __dsta = v31;
          uint64_t v88 = v8;
          unint64_t v58 = v30;
          uint64_t v33 = *((void *)v30 - 11);
          uint64_t v34 = *((void *)v30 - 10);
          uint64_t v35 = v30 - 88;
          uint64_t v36 = *((void *)v30 - 9);
          uint64_t v37 = *((void *)v35 + 6);
          uint64_t v38 = *((void *)v35 + 5);
          uint64_t v40 = *((void *)v35 + 9);
          uint64_t v39 = *((void *)v35 + 10);
          long long v41 = *(_OWORD *)(v35 + 24);
          long long v42 = *(_OWORD *)(v35 + 56);
          uint64_t v76 = v33;
          uint64_t v77 = v34;
          uint64_t v78 = v36;
          long long v79 = v41;
          uint64_t v80 = v38;
          uint64_t v81 = v37;
          long long v82 = v42;
          uint64_t v83 = v40;
          uint64_t v84 = v39;
          uint64_t v43 = *((void *)v32 - 11);
          uint64_t v44 = *((void *)v32 - 10);
          v32 -= 88;
          uint64_t v45 = *((void *)v32 + 2);
          uint64_t v47 = *((void *)v32 + 5);
          uint64_t v46 = *((void *)v32 + 6);
          uint64_t v49 = *((void *)v32 + 9);
          uint64_t v48 = *((void *)v32 + 10);
          long long v50 = *(_OWORD *)(v32 + 24);
          long long v51 = *(_OWORD *)(v32 + 56);
          uint64_t v68 = v44;
          uint64_t v69 = v45;
          long long v70 = v50;
          uint64_t v71 = v47;
          uint64_t v72 = v46;
          long long v73 = v51;
          uint64_t v74 = v49;
          uint64_t v75 = v48;
          uint64_t v67 = v43;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v52 = a5(&v76, &v67);
          if (v61) {
            break;
          }
          char v53 = v52;
          unint64_t v54 = __dsta + 88;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v53)
          {
            unint64_t v55 = __dsta;
            if (v54 != v88 || __dsta >= v88) {
              memmove(__dsta, v32, 0x58uLL);
            }
            v87[0] = v32;
            uint64_t v6 = 0;
            unint64_t v56 = (unint64_t)v65;
            long long v30 = v58;
            if (v58 <= v7) {
              goto LABEL_44;
            }
          }
          else
          {
            uint64_t v85 = v35;
            unint64_t v55 = __dsta;
            if (v54 < v58 || __dsta >= v58)
            {
              memmove(__dsta, v35, 0x58uLL);
              uint64_t v32 = v88;
              long long v30 = v35;
              uint64_t v6 = 0;
            }
            else
            {
              uint64_t v6 = 0;
              if (v54 != v58) {
                memmove(__dsta, v35, 0x58uLL);
              }
              uint64_t v32 = v88;
              long long v30 = v35;
            }
            unint64_t v56 = (unint64_t)v65;
            if (v30 <= v7) {
              goto LABEL_44;
            }
          }
          uint64_t v31 = v55 - 88;
          uint64_t v8 = v32;
          if ((unint64_t)v32 <= v56) {
            goto LABEL_44;
          }
        }
LABEL_45:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100354C9C(v87, &v86, &v85);
        return 1;
      }
LABEL_44:
      sub_100354C9C(v87, &v86, &v85);
      return 1;
    }
  }
  else if (v10 > -88)
  {
    if (__dst != __src || &__src[88 * v11] <= __dst) {
      memmove(__dst, __src, 88 * v11);
    }
    uint64_t v59 = &v7[88 * v11];
    uint64_t v85 = v59;
    if ((unint64_t)v8 < a3 && v10 >= 88)
    {
      while (1)
      {
        uint64_t v64 = v9;
        uint64_t v14 = *((void *)v8 + 1);
        uint64_t v15 = *((void *)v8 + 2);
        uint64_t v17 = *((void *)v8 + 5);
        uint64_t v16 = *((void *)v8 + 6);
        uint64_t v19 = *((void *)v8 + 9);
        uint64_t v18 = *((void *)v8 + 10);
        uint64_t v76 = *(void *)v8;
        uint64_t v77 = v14;
        uint64_t v78 = v15;
        long long v79 = *(_OWORD *)(v8 + 24);
        uint64_t v80 = v17;
        uint64_t v81 = v16;
        uint64_t v88 = v8;
        long long v82 = *(_OWORD *)(v8 + 56);
        uint64_t v83 = v19;
        uint64_t v84 = v18;
        uint64_t v20 = *(void *)v7;
        uint64_t v21 = *((void *)v7 + 2);
        uint64_t v23 = *((void *)v7 + 5);
        uint64_t v22 = *((void *)v7 + 6);
        uint64_t v25 = *((void *)v7 + 9);
        uint64_t v24 = *((void *)v7 + 10);
        uint64_t v68 = *((void *)v7 + 1);
        uint64_t v69 = v21;
        long long v70 = *(_OWORD *)(v7 + 24);
        uint64_t v71 = v23;
        uint64_t v72 = v22;
        uint64_t v66 = v7;
        uint64_t v67 = v20;
        long long v73 = *(_OWORD *)(v7 + 56);
        uint64_t v74 = v25;
        uint64_t v75 = v24;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v26 = a5(&v76, &v67);
        if (v6) {
          goto LABEL_45;
        }
        char v27 = v26;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27)
        {
          long long v28 = v88 + 88;
          long long v29 = v64;
          if (v64 >= v88 && v64 < v28)
          {
            uint64_t v6 = 0;
            if (v64 != v88) {
              memmove(v64, v88, 0x58uLL);
            }
            goto LABEL_19;
          }
          memmove(v64, v88, 0x58uLL);
        }
        else
        {
          long long v29 = v64;
          long long v28 = v88;
          if (v64 != v7) {
            memmove(v64, v7, 0x58uLL);
          }
          v7 += 88;
          BOOL v86 = v66 + 88;
        }
        uint64_t v6 = 0;
LABEL_19:
        uint64_t v9 = v29 + 88;
        v87[0] = v9;
        if (v7 < v59)
        {
          uint64_t v8 = v28;
          if ((unint64_t)v28 < a3) {
            continue;
          }
        }
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002BF334(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    uint64_t v6 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return v6;
    }
  }
  if ((sub_10019D760(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) != 0)
  {
    return 0;
  }
  if (*(void *)(a1 + 56) != *(void *)(a2 + 56) || *(void *)(a1 + 64) != *(void *)(a2 + 64))
  {
    uint64_t v6 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return v6;
    }
  }
  if ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72))) {
    return 0;
  }
  unint64_t v7 = *(void *)(a1 + 40);
  unint64_t v303 = v7;
  id v8 = (id)(v7 >> 62);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    sub_10019C1E4((uint64_t)&v303);
  }
  else
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v10 = *(void *)(a2 + 40);
  unint64_t v302 = v10;
  int64_t v11 = (void *)(v10 >> 62);
  if (!(v10 >> 62))
  {
    unint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 == v12) {
      goto LABEL_17;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  sub_10019C1E4((uint64_t)&v302);
  if (v9 != v12) {
    return 0;
  }
LABEL_17:
  if (v8)
  {
    sub_1002ADF3C((uint64_t)&v303);
    sub_1002ADF3C((uint64_t)&v302);
    id v13 = (id)_CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    id v13 = *(id *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1002ADF3C((uint64_t)&v303);
    sub_1002ADF3C((uint64_t)&v302);
  }
  if (!v13) {
    goto LABEL_267;
  }
  uint64_t v14 = (void *)(v7 & 0xC000000000000001);
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v16 = v10 & 0xFFFFFFFFFFFFFF8;
    if (!v11)
    {
LABEL_24:
      uint64_t v17 = *(void *)(v16 + 16);
      goto LABEL_31;
    }
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_419:
      __break(1u);
      goto LABEL_420;
    }
    uint64_t v15 = *(void *)(v7 + 32);
    swift_unknownObjectRetain();
    uint64_t v16 = v10 & 0xFFFFFFFFFFFFFF8;
    if (!v11) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  sub_10019C1E4((uint64_t)&v302);
LABEL_31:
  if (!v17)
  {
LABEL_266:
    swift_unknownObjectRelease();
LABEL_267:
    uint64_t v6 = 1;
    goto LABEL_268;
  }
  unint64_t v300 = v10 & 0xC000000000000001;
  uint64_t v301 = v17;
  if ((v10 & 0xC000000000000001) != 0)
  {
    uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_426;
    }
    uint64_t v19 = *(void *)(v10 + 32);
    swift_unknownObjectRetain();
  }
  id v8 = (id)v15;
  id v20 = (id)v19;
  int64_t v11 = v20;
  if (v15 | v19)
  {
    if (v8) {
      BOOL v149 = v19 == 0;
    }
    else {
      BOOL v149 = 0;
    }
    char v150 = v149;
    if (v20) {
      BOOL v151 = v15 == 0;
    }
    else {
      BOOL v151 = 0;
    }
    if (v151
      || (v150 & 1) != 0
      || (unsigned int v152 = [v8 artworkSourceType],
          v152 != [v11 artworkSourceType])
      || (unsigned int v153 = [v8 artworkUseType],
          v153 != [v11 artworkUseType]))
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v6 = 0;
      goto LABEL_268;
    }
    uint64_t v154 = [v8 shieldDataSource];
    uint64_t v155 = [v11 shieldDataSource];
    id v299 = (id)v154;
    id v298 = (id)v155;
    if (!(v154 | v155))
    {
LABEL_283:
      unint64_t v285 = (unint64_t)v14;
      id v286 = v13;
      uint64_t v156 = [v8 iconDataSource];
      uint64_t v157 = [v11 iconDataSource];
      id v13 = (id)v156;
      id v158 = (id)v157;
      id v2 = v158;
      if (v156 | v157)
      {
        if (v13) {
          BOOL v169 = v157 == 0;
        }
        else {
          BOOL v169 = 0;
        }
        char v170 = v169;
        if (v158) {
          BOOL v171 = v156 == 0;
        }
        else {
          BOOL v171 = 0;
        }
        uint64_t v172 = v13;
        long long v173 = v158;
        if (v171) {
          goto LABEL_353;
        }
        uint64_t v172 = v13;
        long long v173 = v158;
        if (v170) {
          goto LABEL_353;
        }
        unsigned int v174 = [v13 iconType];
        unsigned int v175 = [v2 iconType];
        uint64_t v172 = v13;
        long long v173 = v2;
        if (v174 != v175) {
          goto LABEL_353;
        }
        unsigned int v176 = [v13 cartoID];
        unsigned int v177 = [v2 cartoID];
        uint64_t v172 = v13;
        long long v173 = v2;
        if (v176 != v177) {
          goto LABEL_353;
        }
        unsigned int v178 = [v13 defaultTransitType];
        unsigned int v179 = [v2 defaultTransitType];
        uint64_t v172 = v13;
        long long v173 = v2;
        if (v178 != v179) {
          goto LABEL_353;
        }
        unsigned int v180 = [v13 iconAttributeKey];
        unsigned int v181 = [v2 iconAttributeKey];
        uint64_t v172 = v13;
        long long v173 = v2;
        if (v180 != v181) {
          goto LABEL_353;
        }
        unsigned int v182 = [v13 iconAttributeValue];
        unsigned int v183 = [v2 iconAttributeValue];

        if (v182 != v183) {
          goto LABEL_354;
        }
      }
      id v261 = (void *)v7;
      uint64_t v262 = (void *)v10;
      uint64_t v159 = [v8 iconFallbackShieldDataSource];
      uint64_t v160 = [v11 iconFallbackShieldDataSource];
      id v297 = (id)v159;
      id v295 = (id)v160;
      if (!(v159 | v160)) {
        goto LABEL_285;
      }
      if (v297) {
        BOOL v185 = v160 == 0;
      }
      else {
        BOOL v185 = 0;
      }
      int v186 = v185;
      if (v295) {
        BOOL v187 = v159 == 0;
      }
      else {
        BOOL v187 = 0;
      }
      if (v187 || v186 || (id v188 = [v297 shieldType], v188 != objc_msgSend(v295, "shieldType")))
      {

        uint64_t v193 = v295;
      }
      else
      {
        os_log_type_t v189 = [v297 shieldText];
        if (!v189)
        {
          uint64_t v293 = [v295 shieldText];
          if (!v293)
          {
            uint64_t v293 = 0;
            int v292 = 0;
            goto LABEL_428;
          }
        }
        uint64_t v190 = [v297 shieldText];
        uint64_t v191 = [v295 shieldText];
        unint64_t v10 = v190;
        id v192 = (void *)v190;
        unint64_t v7 = v191;
        if (objc_msgSend(v192, "isEqualToString:"))
        {
          int v292 = 1;
LABEL_428:
          BOOL v222 = [v297 shieldColorString];
          if (v222
            || ([v295 shieldColorString], (id v287 = (id)objc_claimAutoreleasedReturnValue()) != 0))
          {
            id v223 = [v297 shieldColorString];
            uint64_t v224 = [v295 shieldColorString];
            LODWORD(v288) = [v223 isEqualToString:v224];

            if (v222)
            {

              if (!v292) {
                goto LABEL_433;
              }
              goto LABEL_432;
            }
          }
          else
          {
            id v287 = 0;
            LODWORD(v288) = 1;
          }

          if ((v292 & 1) == 0)
          {
LABEL_433:

            if (v189)
            {
            }
            else
            {
            }
            if (v288)
            {
LABEL_285:
              uint64_t v161 = [v8 textDataSource];
              uint64_t v17 = [v11 textDataSource];
              uint64_t v293 = (uint64_t)(id)v161;
              id v290 = (id)v17;
              if (!(v161 | v17))
              {
LABEL_286:
                unsigned int v162 = [v8 hasRoutingIncidentBadge];
                if (v162 != [v11 hasRoutingIncidentBadge])
                {
LABEL_287:
                  unsigned __int8 v163 = 0;
                  goto LABEL_520;
                }
                id v198 = [v8 accessibilityText];
                if (v198 || ([v11 accessibilityText], (uint64_t v17 = objc_claimAutoreleasedReturnValue()) != 0))
                {
                  uint64_t v199 = [v8 accessibilityText];
                  uint64_t v200 = [v11 accessibilityText];
                  unsigned __int8 v163 = [v199 isEqualToString:v200];

                  if (!v198) {
                    id v198 = (id)v17;
                  }
                  goto LABEL_519;
                }
LABEL_426:
                unsigned __int8 v163 = 1;
                id v198 = (id)v17;
                goto LABEL_519;
              }
              if (v293) {
                BOOL v194 = v17 == 0;
              }
              else {
                BOOL v194 = 0;
              }
              int v195 = v194;
              if (v290) {
                BOOL v196 = v161 == 0;
              }
              else {
                BOOL v196 = 0;
              }
              if (v196 || v195)
              {

                unsigned __int8 v163 = 0;
                id v198 = v290;
                goto LABEL_519;
              }
              uint64_t v197 = [(id)v293 text];
              uint64_t v17 = [v290 text];
              id v287 = (id)v197;
              uint64_t v288 = (uint64_t)(id)v17;
              if (!(v197 | v17))
              {

                goto LABEL_286;
              }
              if (v287) {
                BOOL v201 = v17 == 0;
              }
              else {
                BOOL v201 = 0;
              }
              char v202 = v201;
              if (v288) {
                BOOL v203 = v197 == 0;
              }
              else {
                BOOL v203 = 0;
              }
              if (v203 || (v202 & 1) != 0)
              {

                id v198 = (id)v288;
LABEL_518:
                unsigned __int8 v163 = 0;
                goto LABEL_519;
              }
              uint64_t v204 = [v287 formatStrings];
              uint64_t v205 = [(id)v288 formatStrings];
              id v283 = (id)v204;
              unint64_t v284 = (id)v205;
              id v206 = &stru_1012E1B48;
              if (v204 | v205)
              {
                if (v283) {
                  BOOL v225 = v205 == 0;
                }
                else {
                  BOOL v225 = 0;
                }
                char v226 = v225;
                if (v284) {
                  BOOL v227 = v204 == 0;
                }
                else {
                  BOOL v227 = 0;
                }
                if (v227) {
                  goto LABEL_461;
                }
                if (v226) {
                  goto LABEL_461;
                }
                id v228 = [v283 count];
                if (v228 != [v284 count]) {
                  goto LABEL_461;
                }
                long long v307 = 0u;
                long long v308 = 0u;
                long long v305 = 0u;
                long long v306 = 0u;
                id v229 = v283;
                id v230 = [v229 countByEnumeratingWithState:&v305 objects:v304 count:16];
                if (v230)
                {
                  id v231 = v230;
                  uint64_t v232 = 0;
                  uint64_t v282 = *(void *)v306;
                  while (2)
                  {
                    for (uint64_t i = 0; i != v231; uint64_t i = (char *)i + 1)
                    {
                      if (*(void *)v306 != v282) {
                        objc_enumerationMutation(v229);
                      }
                      uint64_t v234 = *(NSString **)(*((void *)&v305 + 1) + 8 * i);
                      uint64_t v235 = [v284 objectAtIndexedSubscript:(char *)i + v232];
                      LODWORD(v234) = sub_1002C1BE4(v235, v234, (NSString *)v235);

                      if (!v234)
                      {

                        goto LABEL_462;
                      }
                    }
                    id v231 = [v229 countByEnumeratingWithState:&v305 objects:v304 count:16];
                    v232 += (uint64_t)i;
                    if (v231) {
                      continue;
                    }
                    break;
                  }
                }
              }
              else
              {
              }
              uint64_t v207 = [v287 separators];
              uint64_t v208 = [(id)v288 separators];
              id v281 = (id)v207;
              id v198 = (id)v208;
              uint64_t v209 = &stru_1012E1B68;
              if (v207 | v208)
              {
                if (v281) {
                  BOOL v236 = v208 == 0;
                }
                else {
                  BOOL v236 = 0;
                }
                char v237 = v236;
                if (v198) {
                  BOOL v238 = v207 == 0;
                }
                else {
                  BOOL v238 = 0;
                }
                if (v238
                  || (v237 & 1) != 0
                  || (id v239 = [v281 count], v239 != objc_msgSend(v198, "count")))
                {

LABEL_517:
                  goto LABEL_518;
                }
                long long v307 = 0u;
                long long v308 = 0u;
                long long v305 = 0u;
                long long v306 = 0u;
                id objc = v281;
                id v240 = [objc countByEnumeratingWithState:&v305 objects:v304 count:16];
                if (v240)
                {
                  id v241 = v240;
                  uint64_t v242 = 0;
                  uint64_t v279 = *(void *)v306;
                  while (2)
                  {
                    for (j = 0; j != v241; j = (char *)j + 1)
                    {
                      if (*(void *)v306 != v279) {
                        objc_enumerationMutation(objc);
                      }
                      uint64_t v244 = *(NSString **)(*((void *)&v305 + 1) + 8 * (void)j);
                      v245 = [v198 objectAtIndexedSubscript:(char *)j + v242];
                      LODWORD(v244) = sub_1002C1BE4(v245, v244, (NSString *)v245);

                      if (!v244)
                      {

                        BOOL v257 = objc;
                        goto LABEL_516;
                      }
                    }
                    id v241 = [objc countByEnumeratingWithState:&v305 objects:v304 count:16];
                    v242 += (uint64_t)j;
                    if (v241) {
                      continue;
                    }
                    break;
                  }
                }
              }
              else
              {
              }
              uint64_t v210 = [v287 formatTokens];
              uint64_t v211 = [(id)v288 formatTokens];
              id objb = (id)v210;
              id v278 = (id)v211;
              id v212 = &stru_1012E1B88;
              if (!(v210 | v211))
              {

                goto LABEL_402;
              }
              if (objb) {
                BOOL v246 = v211 == 0;
              }
              else {
                BOOL v246 = 0;
              }
              char v247 = v246;
              if (v278) {
                BOOL v248 = v210 == 0;
              }
              else {
                BOOL v248 = 0;
              }
              if (!v248 && (v247 & 1) == 0)
              {
                id v249 = [objb count];
                if (v249 == [v278 count])
                {
                  long long v307 = 0u;
                  long long v308 = 0u;
                  long long v305 = 0u;
                  long long v306 = 0u;
                  id v269 = objb;
                  id v250 = [v269 countByEnumeratingWithState:&v305 objects:v304 count:16];
                  if (v250)
                  {
                    id v251 = v250;
                    uint64_t v252 = 0;
                    uint64_t v272 = *(void *)v306;
                    while (2)
                    {
                      for (k = 0; k != v251; k = (char *)k + 1)
                      {
                        if (*(void *)v306 != v272) {
                          objc_enumerationMutation(v269);
                        }
                        uint64_t v254 = *(GEOServerFormatToken **)(*((void *)&v305 + 1) + 8 * (void)k);
                        unint64_t v255 = [v278 objectAtIndexedSubscript:(char *)k + v252];
                        LODWORD(v254) = sub_1002C1BEC(v255, v254, (GEOServerFormatToken *)v255);

                        if (!v254)
                        {
                          BOOL v257 = v278;

                          uint64_t v256 = v269;
                          goto LABEL_510;
                        }
                      }
                      id v251 = [v269 countByEnumeratingWithState:&v305 objects:v304 count:16];
                      v252 += (uint64_t)k;
                      if (v251) {
                        continue;
                      }
                      break;
                    }
                  }

LABEL_402:
                  uint64_t v213 = [v287 alternativeString];
                  uint64_t v214 = [(id)v288 alternativeString];
                  uint64_t v215 = v213 | v214;
                  id v216 = (id)v213;
                  id v217 = (id)v214;
                  if (v215) {
                    unsigned __int8 v218 = [v216 isEqual:v217];
                  }
                  else {
                    unsigned __int8 v218 = 1;
                  }

                  uint64_t v17 = v288;
                  if ((v218 & 1) == 0) {
                    goto LABEL_287;
                  }
                  goto LABEL_286;
                }
              }
              uint64_t v256 = objb;

              BOOL v257 = v278;
LABEL_510:

LABEL_516:
              goto LABEL_517;
            }
            goto LABEL_352;
          }
LABEL_432:

          goto LABEL_433;
        }

        uint64_t v193 = (void *)v293;
        if (v189) {
          uint64_t v193 = v189;
        }
      }

LABEL_352:
      long long v173 = v295;
      uint64_t v172 = v297;
LABEL_353:

LABEL_354:
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      uint64_t v6 = 0;
      goto LABEL_268;
    }
    long long v164 = v298;
    if (v299) {
      BOOL v165 = v155 == 0;
    }
    else {
      BOOL v165 = 0;
    }
    int v166 = v165;
    if (v298) {
      BOOL v167 = v154 == 0;
    }
    else {
      BOOL v167 = 0;
    }
    if (v167
      || v166
      || (unint64_t v285 = v7 & 0xC000000000000001,
          id v286 = v13,
          id v168 = [v299 shieldType],
          v168 != [v298 shieldType]))
    {
    }
    else
    {
      unint64_t v12 = [v299 shieldText];
      if (!v12)
      {
        id v297 = [v298 shieldText];
        if (!v297)
        {
          id v297 = 0;
          LODWORD(v293) = 0;
          goto LABEL_405;
        }
      }
      id v2 = [v299 shieldText];
      id v13 = [v298 shieldText];
      if ([v2 isEqualToString:v13])
      {
        LODWORD(v293) = 1;
LABEL_405:
        unint64_t v219 = [v299 shieldColorString];
        if (v219 || ([v298 shieldColorString], (id v290 = (id)objc_claimAutoreleasedReturnValue()) != 0))
        {
          uint64_t v220 = [v299 shieldColorString];
          uint64_t v221 = [v298 shieldColorString];
          unsigned __int8 v296 = [v220 isEqualToString:v221];

          if (v219)
          {

            if (!v293) {
              goto LABEL_410;
            }
            goto LABEL_409;
          }
LABEL_421:

          if ((v293 & 1) == 0)
          {
LABEL_410:

            if (v12)
            {
            }
            else
            {
            }
            uint64_t v14 = (void *)v285;
            id v13 = v286;
            if (v296) {
              goto LABEL_283;
            }
LABEL_379:

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();

            uint64_t v6 = 0;
            goto LABEL_268;
          }
LABEL_409:

          goto LABEL_410;
        }
LABEL_420:
        id v290 = 0;
        unsigned __int8 v296 = 1;
        goto LABEL_421;
      }

      if (v12) {
        long long v164 = (void *)v12;
      }
      else {
        long long v164 = v297;
      }
    }

    goto LABEL_379;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  do
  {
    if (v13 == (id)1) {
      goto LABEL_267;
    }
    id v283 = (id)(v7 + 32);
    unint64_t v284 = (void *)(v7 & 0xFFFFFFFFFFFFFF8);
    uint64_t v277 = (void *)(v10 + 32);
    uint64_t v280 = v10 & 0xFFFFFFFFFFFFFF8;
    unint64_t v12 = 1;
    unint64_t v285 = (unint64_t)v14;
    id v286 = v13;
    while (1)
    {
      if (v14)
      {
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_45;
      }
      if (v12 >= v284[2]) {
        break;
      }
      uint64_t v21 = *((void *)v283 + v12);
      swift_unknownObjectRetain();
LABEL_45:
      id v2 = (id)(v12 + 1);
      if (__OFADD__(v12, 1)) {
        goto LABEL_419;
      }
      if (v12 == v301) {
        goto LABEL_266;
      }
      if (v300)
      {
        uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v12 >= *(void *)(v280 + 16)) {
          goto LABEL_460;
        }
        uint64_t v22 = v277[v12];
        swift_unknownObjectRetain();
      }
      int64_t v11 = (void *)(v21 | v22);
      id v23 = (id)v21;
      id v24 = (id)v22;
      id v8 = v24;
      if (!(v21 | v22))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_40;
      }
      if (v23) {
        BOOL v25 = v22 == 0;
      }
      else {
        BOOL v25 = 0;
      }
      char v26 = v25;
      if (v24) {
        BOOL v27 = v21 == 0;
      }
      else {
        BOOL v27 = 0;
      }
      if (v27
        || (v26 & 1) != 0
        || (unsigned int v28 = [v23 artworkSourceType],
            v28 != [v8 artworkSourceType])
        || (unsigned int v29 = [v23 artworkUseType],
            v29 != [v8 artworkUseType]))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_361;
      }
      id v297 = v2;
      uint64_t v30 = [v23 shieldDataSource];
      uint64_t v31 = [v8 shieldDataSource];
      id v32 = (id)v30;
      id v33 = (id)v31;
      id v298 = v23;
      id v299 = v32;
      id v295 = v33;
      if (v30 | v31)
      {
        if (v32) {
          BOOL v34 = v31 == 0;
        }
        else {
          BOOL v34 = 0;
        }
        int v35 = v34;
        if (v33) {
          BOOL v36 = v30 == 0;
        }
        else {
          BOOL v36 = 0;
        }
        uint64_t v37 = v33;
        if (v36 || v35 || (uint64_t v38 = v32, v39 = [v32 shieldType], v39 != objc_msgSend(v37, "shieldType")))
        {

LABEL_347:
          uint64_t v37 = v295;
          uint64_t v38 = v299;
LABEL_348:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          id v23 = v38;
          id v8 = v37;
LABEL_361:

          uint64_t v6 = 0;
          goto LABEL_268;
        }
        uint64_t v40 = [v32 shieldText];
        if (v40 || ([v37 shieldText], (uint64_t v288 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          id v32 = [v32 shieldText];
          uint64_t v14 = [v37 shieldText];
          if (([v32 isEqualToString:v14] & 1) == 0)
          {

            if (v40) {
              uint64_t v37 = v40;
            }
            else {
              uint64_t v37 = (void *)v288;
            }
            goto LABEL_347;
          }
          int v294 = 1;
        }
        else
        {
          uint64_t v288 = 0;
          int v294 = 0;
        }
        long long v41 = [v299 shieldColorString];
        if (v41 || ([v37 shieldColorString], (id v13 = (id)objc_claimAutoreleasedReturnValue()) != 0))
        {
          id v42 = v8;
          uint64_t v43 = [v299 shieldColorString];
          uint64_t v44 = v37;
          uint64_t v45 = (void *)v43;
          uint64_t v46 = [v44 shieldColorString];
          unsigned __int8 v291 = [v45 isEqualToString:v46];

          if (v41)
          {

            id v8 = v42;
            id v23 = v298;
            uint64_t v38 = v299;
            uint64_t v37 = v295;
            if (v294) {
              goto LABEL_86;
            }
            goto LABEL_87;
          }
          id v8 = v42;
          uint64_t v37 = v295;
          uint64_t v38 = v299;
        }
        else
        {
          unsigned __int8 v291 = 1;
        }

        id v23 = v298;
        if (v294)
        {
LABEL_86:
        }
LABEL_87:

        if (v40)
        {
        }
        else
        {
        }
        if ((v291 & 1) == 0) {
          goto LABEL_348;
        }
      }
      uint64_t v47 = [v23 iconDataSource];
      uint64_t v48 = [v8 iconDataSource];
      uint64_t v293 = (uint64_t)(id)v47;
      id v290 = (id)v48;
      id v2 = v297;
      if (v47 | v48)
      {
        if (v293) {
          BOOL v49 = v48 == 0;
        }
        else {
          BOOL v49 = 0;
        }
        char v50 = v49;
        long long v51 = v290;
        if (v290) {
          BOOL v52 = v47 == 0;
        }
        else {
          BOOL v52 = 0;
        }
        if (v52
          || (v50 & 1) != 0
          || (unsigned int v53 = [(id)v293 iconType], v53 != objc_msgSend(v290, "iconType"))|| (v54 = objc_msgSend((id)v293, "cartoID"), v54 != objc_msgSend(v290, "cartoID"))|| (v55 = objc_msgSend((id)v293, "defaultTransitType"), v55 != objc_msgSend(v290, "defaultTransitType"))|| (v56 = objc_msgSend((id)v293, "iconAttributeKey"), v56 != objc_msgSend(v290, "iconAttributeKey")))
        {
          id v60 = (id)v293;
          goto LABEL_359;
        }
        unsigned int v289 = [(id)v293 iconAttributeValue];
        unsigned int v57 = [v290 iconAttributeValue];

        if (v289 != v57) {
          goto LABEL_360;
        }
      }
      uint64_t v58 = [v23 iconFallbackShieldDataSource];
      uint64_t v59 = [v8 iconFallbackShieldDataSource];
      id v60 = (id)v58;
      id v61 = (id)v59;
      if (v58 | v59)
      {
        if (v60) {
          BOOL v62 = v59 == 0;
        }
        else {
          BOOL v62 = 0;
        }
        int v63 = v62;
        if (v61) {
          BOOL v64 = v58 == 0;
        }
        else {
          BOOL v64 = 0;
        }
        long long v51 = v61;
        if (v64 || v63 || (id v65 = [v60 shieldType], v65 != objc_msgSend(v51, "shieldType")))
        {

          uint64_t v184 = v51;
LABEL_358:

LABEL_359:
LABEL_360:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          id v8 = v290;
          id v23 = (id)v293;
          goto LABEL_361;
        }
        uint64_t v66 = [v60 shieldText];
        if (v66 || ([v51 shieldText], (uint64_t v264 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          id v65 = [v60 shieldText];
          id v23 = [v51 shieldText];
          if (([v65 isEqualToString:v23] & 1) == 0)
          {

            uint64_t v184 = v264;
            if (v66) {
              uint64_t v184 = v66;
            }
            id v23 = v298;
            goto LABEL_358;
          }
          int v270 = 1;
        }
        else
        {
          uint64_t v264 = 0;
          int v270 = 0;
        }
        uint64_t v67 = [v60 shieldColorString];
        if (v67
          || ([v51 shieldColorString], (uint64_t v263 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          uint64_t v265 = v66;
          id v267 = v8;
          uint64_t v68 = [v60 shieldColorString];
          uint64_t v69 = [v51 shieldColorString];
          unsigned __int8 obj = [v68 isEqualToString:v69];

          if (v67)
          {

            uint64_t v66 = v265;
            id v8 = v267;
            id v2 = v297;
            if (v270) {
              goto LABEL_129;
            }
            goto LABEL_130;
          }
          uint64_t v66 = v265;
          id v8 = v267;
          uint64_t v90 = v263;
        }
        else
        {
          uint64_t v90 = 0;
          unsigned __int8 obj = 1;
        }

        id v2 = v297;
        if (v270)
        {
LABEL_129:
        }
LABEL_130:
        id v23 = v298;

        if (v66)
        {
        }
        else
        {
        }
        id v61 = v51;
        if ((obj & 1) == 0) {
          goto LABEL_359;
        }
      }
      id v287 = v60;
      uint64_t v288 = (uint64_t)v61;
      uint64_t v70 = [v23 textDataSource];
      uint64_t v71 = [v8 textDataSource];
      id v72 = (id)v70;
      id v73 = (id)v71;
      uint64_t v74 = v73;
      if (v70 | v71)
      {
        if (v72) {
          BOOL v79 = v71 == 0;
        }
        else {
          BOOL v79 = 0;
        }
        int v80 = v79;
        if (v73) {
          BOOL v81 = v70 == 0;
        }
        else {
          BOOL v81 = 0;
        }
        uint64_t v77 = v73;
        if (v81 || v80)
        {
          id obja = v72;

          uint64_t v6 = 0;
          id v86 = v74;
LABEL_156:
          int64_t v11 = v298;
          uint64_t v78 = v287;
          goto LABEL_157;
        }
        uint64_t v82 = [v72 text];
        uint64_t v71 = [v74 text];
        id v83 = (id)v82;
        id v84 = (id)v71;
        if (v82 | v71)
        {
          if (v83) {
            BOOL v91 = v71 == 0;
          }
          else {
            BOOL v91 = 0;
          }
          char v92 = v91;
          uint64_t v93 = v84;
          if (v84) {
            BOOL v94 = v82 == 0;
          }
          else {
            BOOL v94 = 0;
          }
          id obja = v72;
          if (v94 || (v92 & 1) != 0)
          {

            uint64_t v6 = 0;
            id v86 = v93;
            goto LABEL_156;
          }
          v271 = v83;
          uint64_t v95 = [v83 formatStrings];
          uint64_t v96 = [v93 formatStrings];
          id v97 = (id)v95;
          id v266 = (id)v96;
          id v98 = &stru_1012E1B48;
          id v268 = v8;
          uint64_t v264 = v77;
          id v261 = (void *)v7;
          uint64_t v262 = (void *)v10;
          if (v95 | v96)
          {
            long long v112 = v93;
            if (v97) {
              BOOL v113 = v96 == 0;
            }
            else {
              BOOL v113 = 0;
            }
            char v114 = v113;
            id v86 = v266;
            if (v266) {
              BOOL v115 = v95 == 0;
            }
            else {
              BOOL v115 = 0;
            }
            if (v115 || (v114 & 1) != 0 || (id v116 = [v97 count], v116 != objc_msgSend(v266, "count")))
            {

LABEL_213:
              uint64_t v77 = v264;

              goto LABEL_265;
            }
            long long v307 = 0u;
            long long v308 = 0u;
            long long v305 = 0u;
            long long v306 = 0u;
            uint64_t v260 = v97;
            id v117 = v97;
            id v118 = [v117 countByEnumeratingWithState:&v305 objects:v304 count:16];
            if (v118)
            {
              id v119 = v118;
              uint64_t v120 = 0;
              uint64_t v121 = *(void *)v306;
              while (2)
              {
                for (m = 0; m != v119; m = (char *)m + 1)
                {
                  if (*(void *)v306 != v121) {
                    objc_enumerationMutation(v117);
                  }
                  Swift::Int v123 = *(NSString **)(*((void *)&v305 + 1) + 8 * (void)m);
                  long long v124 = [v266 objectAtIndexedSubscript:(char *)m + v120];
                  LODWORD(v123) = sub_1002C1BE4(v124, v123, (NSString *)v124);

                  if (!v123)
                  {

                    id v86 = v266;
                    id v97 = v260;
                    goto LABEL_213;
                  }
                }
                id v119 = [v117 countByEnumeratingWithState:&v305 objects:v304 count:16];
                v120 += (uint64_t)m;
                if (v119) {
                  continue;
                }
                break;
              }
            }

            uint64_t v93 = v112;
          }
          else
          {
            uint64_t v260 = v97;
          }
          uint64_t v99 = [v271 separators];
          uint64_t v263 = v93;
          uint64_t v100 = [v93 separators];
          id v101 = (id)v99;
          id v86 = (id)v100;
          unint64_t v102 = &stru_1012E1B68;
          unsigned int v259 = v101;
          if (v99 | v100)
          {
            if (v101) {
              BOOL v125 = v100 == 0;
            }
            else {
              BOOL v125 = 0;
            }
            char v126 = v125;
            if (v86) {
              BOOL v127 = v99 == 0;
            }
            else {
              BOOL v127 = 0;
            }
            if (v127 || (v126 & 1) != 0 || (id v128 = [v101 count], v128 != objc_msgSend(v86, "count")))
            {

LABEL_264:
              uint64_t v77 = v264;

LABEL_265:
              uint64_t v6 = 0;
              id v8 = v268;
              id v2 = v297;
              int64_t v11 = v298;
              uint64_t v78 = v287;
              unint64_t v7 = (unint64_t)v261;
              unint64_t v10 = (unint64_t)v262;
              goto LABEL_157;
            }
            long long v307 = 0u;
            long long v308 = 0u;
            long long v305 = 0u;
            long long v306 = 0u;
            id v129 = v101;
            id v130 = [v129 countByEnumeratingWithState:&v305 objects:v304 count:16];
            if (v130)
            {
              id v131 = v130;
              uint64_t v132 = 0;
              uint64_t v133 = *(void *)v306;
              while (2)
              {
                for (n = 0; n != v131; n = (char *)n + 1)
                {
                  if (*(void *)v306 != v133) {
                    objc_enumerationMutation(v129);
                  }
                  unint64_t v135 = *(NSString **)(*((void *)&v305 + 1) + 8 * (void)n);
                  uint64_t v136 = [v86 objectAtIndexedSubscript:(char *)n + v132];
                  LODWORD(v135) = sub_1002C1BE4(v136, v135, (NSString *)v136);

                  if (!v135)
                  {

                    goto LABEL_264;
                  }
                }
                id v131 = [v129 countByEnumeratingWithState:&v305 objects:v304 count:16];
                v132 += (uint64_t)n;
                if (v131) {
                  continue;
                }
                break;
              }
            }
          }
          else
          {
          }
          uint64_t v103 = [v271 formatTokens];
          uint64_t v104 = [v263 formatTokens];
          id v258 = (id)v103;
          id v105 = (id)v104;
          uint64_t v106 = &stru_1012E1B88;
          if (v103 | v104)
          {
            if (v258) {
              BOOL v137 = v104 == 0;
            }
            else {
              BOOL v137 = 0;
            }
            char v138 = v137;
            if (v105) {
              BOOL v139 = v103 == 0;
            }
            else {
              BOOL v139 = 0;
            }
            if (v139 || (v138 & 1) != 0 || (id v140 = [v258 count], v140 != objc_msgSend(v105, "count")))
            {

              goto LABEL_264;
            }
            long long v307 = 0u;
            long long v308 = 0u;
            long long v305 = 0u;
            long long v306 = 0u;
            id v141 = v258;
            id v142 = [v141 countByEnumeratingWithState:&v305 objects:v304 count:16];
            if (v142)
            {
              id v143 = v142;
              uint64_t v144 = 0;
              uint64_t v145 = *(void *)v306;
              while (2)
              {
                for (iuint64_t i = 0; ii != v143; iuint64_t i = (char *)ii + 1)
                {
                  if (*(void *)v306 != v145) {
                    objc_enumerationMutation(v141);
                  }
                  long long v147 = *(GEOServerFormatToken **)(*((void *)&v305 + 1) + 8 * (void)ii);
                  long long v148 = [v105 objectAtIndexedSubscript:(char *)ii + v144];
                  LODWORD(v147) = sub_1002C1BEC(v148, v147, (GEOServerFormatToken *)v148);

                  if (!v147)
                  {

                    goto LABEL_264;
                  }
                }
                id v143 = [v141 countByEnumeratingWithState:&v305 objects:v304 count:16];
                v144 += (uint64_t)ii;
                if (v143) {
                  continue;
                }
                break;
              }
            }
          }
          else
          {
          }
          uint64_t v107 = [v271 alternativeString];
          uint64_t v108 = [v263 alternativeString];
          uint64_t v109 = v107 | v108;
          uint64_t v71 = (uint64_t)(id)v107;
          id v110 = (id)v108;
          if (v109) {
            unsigned __int8 v111 = [(id)v71 isEqual:v110];
          }
          else {
            unsigned __int8 v111 = 1;
          }

          uint64_t v74 = v264;
          id v72 = obja;

          id v8 = v268;
          id v2 = v297;
          id v23 = v298;
          unint64_t v7 = (unint64_t)v261;
          unint64_t v10 = (unint64_t)v262;
          if ((v111 & 1) == 0)
          {
            uint64_t v6 = 0;
            int64_t v11 = v298;
            goto LABEL_137;
          }
        }
        else
        {
          uint64_t v85 = v84;

          uint64_t v74 = v77;
          id v23 = v298;
        }
      }
      unsigned int v75 = [v23 hasRoutingIncidentBadge];
      int64_t v11 = v23;
      if (v75 != [v8 hasRoutingIncidentBadge])
      {
        uint64_t v6 = 0;
LABEL_137:
        uint64_t v76 = v290;
        uint64_t v77 = v74;
        uint64_t v78 = v287;
        goto LABEL_158;
      }
      id obja = v72;
      id v86 = [v23 accessibilityText];
      if (v86 || ([v8 accessibilityText], (uint64_t v71 = objc_claimAutoreleasedReturnValue()) != 0))
      {
        uint64_t v87 = [v23 accessibilityText];
        [v8 accessibilityText];
        uint64_t v89 = v88 = v8;
        uint64_t v6 = (uint64_t)[v87 isEqualToString:v89];

        id v8 = v88;
        int64_t v11 = v298;
        uint64_t v77 = v74;
        uint64_t v78 = v287;
        if (!v86) {
          id v86 = (id)v71;
        }
      }
      else
      {
        uint64_t v6 = 1;
        uint64_t v77 = v74;
        uint64_t v78 = v287;
        id v86 = 0;
      }
LABEL_157:

      uint64_t v76 = v290;
      id v72 = obja;
LABEL_158:

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      uint64_t v14 = (void *)v285;
      id v13 = v286;
      if (!v6) {
        goto LABEL_268;
      }
LABEL_40:
      uint64_t v6 = 1;
      unint64_t v12 = (unint64_t)v2;
      if (v2 == v13) {
        goto LABEL_268;
      }
    }
    __break(1u);
LABEL_460:
    __break(1u);
LABEL_461:

LABEL_462:
    unsigned __int8 v163 = 0;
    id v198 = v284;
LABEL_519:

LABEL_520:
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    uint64_t v14 = (void *)v285;
    id v13 = v286;
    unint64_t v7 = (unint64_t)v261;
    unint64_t v10 = (unint64_t)v262;
  }
  while ((v163 & 1) != 0);
  uint64_t v6 = 0;
LABEL_268:
  sub_10019C1E4((uint64_t)&v303);
  sub_10019C1E4((uint64_t)&v302);
  return v6;
}

uint64_t destroy for NearbyTransitLinesSectionViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitLinesSectionViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitLinesSectionViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitLinesSectionViewModel()
{
  return &type metadata for NearbyTransitLinesSectionViewModel;
}

BOOL sub_1002C16BC(uint64_t a1, uint64_t a2)
{
  return sub_1002BD888(a1, a2);
}

uint64_t sub_1002C16DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002C1744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v39 = (char *)&v38 - v12;
  uint64_t v13 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v22 = *(void **)(a1 + 72);
  uint64_t v38 = a2;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v24 = [v22 serviceResumesAfterDate:isa];

  if (v24)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 0, 1, v25);
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v18, 1, 1, v26);
  }
  sub_1002C16DC((uint64_t)v18, (uint64_t)v21);
  id v27 = [v22 timeZone];
  if (v27)
  {
    unsigned int v28 = v27;
    static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

    unsigned int v29 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v29(v6, v10, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    uint64_t v31 = v39;
    if (v30 != 1)
    {
      v29(v39, v6, v7);
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    uint64_t v31 = v39;
  }
  static TimeZone.current.getter();
  sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015D9A00);
LABEL_9:
  sub_1001C100C((uint64_t)v21, (uint64_t)v15);
  uint64_t v32 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v32 - 8);
  Class v34 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v15, 1, v32) != 1)
  {
    Class v34 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v32);
  }
  Class v35 = Date._bridgeToObjectiveC()().super.isa;
  Class v36 = TimeZone._bridgeToObjectiveC()().super.isa;
  id v37 = (id)MKServiceGapDescription();

  if (v37)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v7);
    sub_1000FF2E0((uint64_t)v21, (uint64_t *)&unk_1015D9410);
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_1002C1BEC(id a1, GEOServerFormatToken *a2, GEOServerFormatToken *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a3;
  char v6 = GEOServerFormatTokenEqual();

  return v6;
}

unint64_t sub_1002C1C44()
{
  unint64_t result = qword_1015D9A10;
  if (!qword_1015D9A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9A10);
  }
  return result;
}

uint64_t sub_1002C1C98()
{
  long long v8 = *v0;
  long long v9 = *v0;
  sub_100183030((uint64_t)&v9);
  v1._countAndFlagsBits = 95;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  if (v0[3]) {
    uint64_t v2 = 1702195828;
  }
  else {
    uint64_t v2 = 0x65736C6166;
  }
  if (v0[3]) {
    unint64_t v3 = 0xE400000000000000;
  }
  else {
    unint64_t v3 = 0xE500000000000000;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1002C1D70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002C1C98();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002C1D98(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  _OWORD v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  _OWORD v8[2] = a2[2];
  v8[3] = v5;
  return sub_1002C2260((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1002C1DE4()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v13 = v1;
  Swift::UInt v2 = *(void *)(v1 + 16);
  Hasher._combine(_:)(v2);
  if (v2)
  {
    long long v3 = (_OWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v14[0] = *v3;
      long long v4 = v3[1];
      long long v5 = v3[2];
      long long v6 = v3[3];
      *(_OWORD *)&v15[9] = *(_OWORD *)((char *)v3 + 57);
      v14[2] = v5;
      *(_OWORD *)uint64_t v15 = v6;
      v14[1] = v4;
      sub_10019F20C((uint64_t)v14);
      sub_1002BD59C();
      sub_10019F274((uint64_t)v14);
      v3 += 5;
      --v2;
    }
    while (v2);
    sub_10019C1E4((uint64_t)&v13);
  }
  Hasher._combine(_:)(*(unsigned char *)(v0 + 48) & 1);
  unint64_t v7 = *(void *)(v0 + 40);
  uint64_t v12 = v7;
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_10;
    }
    return sub_10019C1E4((uint64_t)&v12);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v8 = result;
  if (!result) {
    return sub_10019C1E4((uint64_t)&v12);
  }
LABEL_10:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v11 = *(void **)(v7 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      Hasher._combine(_:)((Swift::UInt64)[v11 muid:v12, v13]);
      swift_unknownObjectRelease();
    }
    return sub_10019C1E4((uint64_t)&v12);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1002C1FD8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C201C()
{
  return Hasher._finalize()();
}

uint64_t (*sub_1002C2058(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  long long v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1002395FC(v6, a2, a3);
  return sub_1000810BC;
}

uint64_t (*sub_1002C20C0(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  long long v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10023967C(v6, a2, a3);
  return sub_1000810BC;
}

uint64_t (*sub_1002C2128(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  long long v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1002396FC(v6, a2, a3);
  return sub_1000810BC;
}

uint64_t (*sub_1002C2190(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  long long v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10023977C(v6, a2, a3);
  return sub_1000810BC;
}

uint64_t (*sub_1002C21F8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  long long v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100239804(v6, a2, a3);
  return sub_1000810BC;
}

uint64_t sub_1002C2260(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    uint64_t v7 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return v7;
    }
  }
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a2 + 24);
  if (!v8)
  {
    if (v9) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v9) {
    return 0;
  }
  BOOL v10 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v8 == v9;
  if (v10 || (uint64_t v7 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_15:
    if (((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0
      && (sub_10019E22C(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0)
    {
      unint64_t v11 = *(void *)(a1 + 40);
      unint64_t v202 = v11;
      unint64_t v12 = v11 >> 62;
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        sub_10019C1E4((uint64_t)&v202);
      }
      else
      {
        uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v201 = v14;
      unint64_t v15 = (unint64_t)v14 >> 62;
      if ((unint64_t)v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        sub_10019C1E4((uint64_t)&v201);
        if (v13 == v16)
        {
LABEL_21:
          if (v12)
          {
            sub_1002ADF3C((uint64_t)&v202);
            sub_1002ADF3C((uint64_t)&v201);
            uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          }
          else
          {
            uint64_t v17 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_1002ADF3C((uint64_t)&v202);
            sub_1002ADF3C((uint64_t)&v201);
          }
          if (!v17) {
            goto LABEL_139;
          }
          id v18 = (id)(v11 & 0xC000000000000001);
          if ((v11 & 0xC000000000000001) != 0)
          {
            uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v19 = v14 & 0xFFFFFFFFFFFFFF8;
            if (!v15)
            {
LABEL_28:
              uint64_t v20 = *(void *)(v19 + 16);
LABEL_38:
              if (v20)
              {
                unint64_t v199 = v14 & 0xC000000000000001;
                uint64_t v200 = v20;
                if ((v14 & 0xC000000000000001) == 0)
                {
                  if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
LABEL_228:
                    __break(1u);
LABEL_229:
                    __break(1u);
                    goto LABEL_230;
                  }
                  unint64_t v12 = *(void *)(v14 + 32);
                  swift_unknownObjectRetain();
LABEL_42:
                  uint64_t v2 = (uint64_t)(id)v16;
                  id v22 = (id)v12;
                  unint64_t v15 = (unint64_t)v22;
                  if (!(v16 | v12))
                  {
                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
LABEL_44:
                    if (v17 != 1)
                    {
                      uint64_t v184 = (void *)(v11 + 32);
                      id v185 = (id)(v11 & 0xFFFFFFFFFFFFFF8);
                      unsigned int v182 = (void *)(v14 + 32);
                      id v183 = (id)(v14 & 0xFFFFFFFFFFFFFF8);
                      unint64_t v15 = 1;
                      uint64_t v187 = v17;
                      unint64_t v188 = (unint64_t)v18;
                      while (1)
                      {
                        if (v18)
                        {
                          uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                          uint64_t v24 = v200;
                        }
                        else
                        {
                          uint64_t v24 = v200;
                          if (v15 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                            goto LABEL_228;
                          }
                          uint64_t v23 = v184[v15];
                          swift_unknownObjectRetain();
                        }
                        unint64_t v12 = v15 + 1;
                        if (__OFADD__(v15, 1))
                        {
                          __break(1u);
LABEL_204:
                          char v152 = 0;
                          if (v178) {
                            BOOL v154 = v17 == 0;
                          }
                          else {
                            BOOL v154 = 0;
                          }
                          char v155 = v154;
                          if (v179) {
                            BOOL v156 = v23 == 0;
                          }
                          else {
                            BOOL v156 = 0;
                          }
                          if (!v156 && (v155 & 1) == 0)
                          {
                            id v157 = [v178 count];
                            if (v157 == [v179 count])
                            {
                              long long v206 = 0u;
                              long long v207 = 0u;
                              long long v204 = 0u;
                              long long v205 = 0u;
                              id v171 = v178;
                              id v175 = [v171 countByEnumeratingWithState:&v204 objects:v203 count:16];
                              if (v175)
                              {
                                uint64_t v177 = 0;
                                uint64_t v173 = *(void *)v205;
                                while (2)
                                {
                                  for (uint64_t i = 0; i != v175; uint64_t i = (char *)i + 1)
                                  {
                                    if (*(void *)v205 != v173) {
                                      objc_enumerationMutation(v171);
                                    }
                                    uint64_t v159 = *(GEOTransitIncidentEntity **)(*((void *)&v204 + 1) + 8 * i);
                                    uint64_t v160 = [v179 objectAtIndexedSubscript:(char *)i + v177];
                                    LODWORD(v159) = sub_1002C3C40(v160, v159, (GEOTransitIncidentEntity *)v160);

                                    if (!v159)
                                    {
                                      char v152 = 0;
                                      goto LABEL_232;
                                    }
                                  }
                                  id v175 = [v171 countByEnumeratingWithState:&v204 objects:v203 count:16];
                                  v177 += (uint64_t)i;
                                  if (v175) {
                                    continue;
                                  }
                                  break;
                                }
                              }
                              char v152 = 1;
LABEL_232:

                              goto LABEL_193;
                            }
LABEL_230:
                            char v152 = 0;
                          }
LABEL_193:

                          goto LABEL_194;
                        }
                        if (v15 == v24) {
                          goto LABEL_138;
                        }
                        if (v199)
                        {
                          uint64_t v2 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                        }
                        else
                        {
                          if (v15 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                            goto LABEL_229;
                          }
                          uint64_t v2 = v182[v15];
                          swift_unknownObjectRetain();
                        }
                        id v3 = (id)v23;
                        id v25 = (id)v2;
                        uint64_t v26 = v25;
                        if (!(v23 | v2))
                        {
                          swift_unknownObjectRelease();
                          swift_unknownObjectRelease();
                          goto LABEL_47;
                        }
                        if (v3) {
                          BOOL v27 = v2 == 0;
                        }
                        else {
                          BOOL v27 = 0;
                        }
                        char v28 = v27;
                        if (v25) {
                          BOOL v29 = v23 == 0;
                        }
                        else {
                          BOOL v29 = 0;
                        }
                        if (v29 || (v28 & 1) != 0 || (id v30 = [v3 muid], v30 != objc_msgSend(v26, "muid")))
                        {
                          swift_unknownObjectRelease();
                          id v35 = v26;
LABEL_185:
                          swift_unknownObjectRelease();

                          uint64_t v7 = 0;
                          goto LABEL_140;
                        }
                        id v196 = (id)v12;
                        uint64_t v31 = [v3 title];
                        uint64_t v32 = [v26 title];
                        uint64_t v33 = v31 | v32;
                        id v34 = (id)v31;
                        id v35 = (id)v32;
                        if (v33)
                        {
                          unsigned int v36 = [v34 isEqual:v35];

                          if (!v36)
                          {

                            swift_unknownObjectRelease();
                            id v3 = v34;
                            goto LABEL_185;
                          }
                        }
                        uint64_t v197 = v35;
                        id v198 = v34;
                        uint64_t v37 = [v3 summary];
                        uint64_t v38 = [v26 summary];
                        uint64_t v39 = v37 | v38;
                        id v40 = (id)v37;
                        id v41 = (id)v38;
                        if (v39)
                        {
                          unsigned int v42 = [v40 isEqual:v41];

                          if (!v42)
                          {

LABEL_184:
                            swift_unknownObjectRelease();

                            id v35 = v197;
                            id v3 = v34;
                            goto LABEL_185;
                          }
                        }
                        id v194 = v40;
                        int v195 = v41;
                        uint64_t v43 = [v3 fullDescription];
                        uint64_t v44 = [v26 fullDescription];
                        uint64_t v45 = v43 | v44;
                        id v46 = (id)v43;
                        id v47 = (id)v44;
                        if (v45)
                        {
                          unsigned int v48 = [v46 isEqual:v47];

                          if (!v48)
                          {

                            goto LABEL_184;
                          }
                        }
                        id v192 = v47;
                        uint64_t v193 = v46;
                        uint64_t v49 = [v3 messageForRoutePlanning];
                        uint64_t v50 = [v26 messageForRoutePlanning];
                        uint64_t v51 = v49 | v50;
                        id v52 = (id)v49;
                        id v53 = (id)v50;
                        id v191 = v53;
                        if (v51)
                        {
                          unsigned int v54 = v53;
                          unsigned int v55 = [v52 isEqual:v53];

                          if (!v55)
                          {
                            BOOL v79 = v52;
                            unsigned int v60 = 0;
                            uint64_t v2 = v188;
                            uint64_t v87 = v34;
                            unint64_t v12 = (unint64_t)v196;
                            id v86 = v193;
                            goto LABEL_113;
                          }
                        }
                        uint64_t v56 = [v3 messageForRouteStepping];
                        uint64_t v57 = [v26 messageForRouteStepping];
                        uint64_t v58 = v56 | v57;
                        id v59 = (id)v56;
                        id v189 = v59;
                        id v190 = (id)v57;
                        if (!v58) {
                          break;
                        }
                        unsigned int v60 = [v59 isEqual:v190];

                        if (v60) {
                          break;
                        }
                        BOOL v79 = v52;
                        uint64_t v2 = v188;
                        uint64_t v87 = v34;
                        unint64_t v12 = (unint64_t)v196;
                        id v86 = v193;
LABEL_112:

LABEL_113:
                        swift_unknownObjectRelease();

                        swift_unknownObjectRelease();
                        uint64_t v17 = v187;
                        id v18 = (id)v2;
                        if (!v60) {
                          goto LABEL_202;
                        }
LABEL_47:
                        uint64_t v7 = 1;
                        unint64_t v15 = v12;
                        if (v12 == v17) {
                          goto LABEL_140;
                        }
                      }
                      uint64_t v61 = [v3 messageForNonRoutable];
                      uint64_t v62 = [v26 messageForNonRoutable];
                      id v186 = (id)v61;
                      id v63 = (id)v62;
                      unsigned int v181 = v63;
                      if (v61 | v62)
                      {
                        BOOL v64 = v63;
                        unsigned int v60 = [v186 isEqual:v63];

                        if (!v60)
                        {
                          BOOL v79 = v52;
                          uint64_t v2 = v188;
                          uint64_t v87 = v34;
                          unint64_t v12 = (unint64_t)v196;
                          id v86 = v193;
LABEL_111:

                          goto LABEL_112;
                        }
                      }
                      uint64_t v65 = [v3 startDate];
                      uint64_t v66 = [v26 startDate];
                      id v180 = (id)v65;
                      id v67 = (id)v66;
                      id v179 = v67;
                      if (v65 | v66)
                      {
                        uint64_t v68 = v67;
                        unsigned int v60 = [v180 isEqual:v67];

                        if (!v60)
                        {
                          BOOL v79 = v52;
                          uint64_t v2 = v188;
                          uint64_t v87 = v34;
                          unint64_t v12 = (unint64_t)v196;
                          id v86 = v193;
LABEL_110:

                          goto LABEL_111;
                        }
                      }
                      uint64_t v69 = [v3 endDate];
                      uint64_t v70 = [v26 endDate];
                      id v178 = (id)v69;
                      id v71 = (id)v70;
                      unsigned int v176 = v71;
                      if (v69 | v70
                        && (id v72 = v71,
                            unsigned int v60 = [v178 isEqual:v71],
                            v178,
                            v72,
                            !v60))
                      {
                        BOOL v79 = v52;
                      }
                      else
                      {
                        unsigned int v73 = [v3 iconType];
                        if (v73 == [v26 iconType])
                        {
                          uint64_t v74 = [v3 creationDate];
                          uint64_t v75 = [v26 creationDate];
                          id v76 = (id)v74;
                          id v77 = (id)v75;
                          uint64_t v172 = v77;
                          unsigned int v174 = v76;
                          if (v74 | v75)
                          {
                            uint64_t v78 = v77;
                            unsigned int v60 = [v76 isEqual:v77];

                            if (!v60)
                            {
                              BOOL v79 = v52;
                              uint64_t v2 = v188;
                              uint64_t v87 = v34;
                              unint64_t v12 = (unint64_t)v196;
                              id v86 = v193;
LABEL_108:

                              goto LABEL_109;
                            }
                          }
                          BOOL v79 = v52;
                          uint64_t v80 = [v3 lastUpdated];
                          uint64_t v81 = [v26 lastUpdated];
                          id v82 = (id)v80;
                          id v83 = (id)v81;
                          BOOL v169 = v83;
                          id v170 = v82;
                          if (v80 | v81)
                          {
                            id v84 = v83;
                            unsigned int v60 = [v82 isEqual:v83];

                            if (!v60)
                            {
                              uint64_t v2 = v188;
                              uint64_t v87 = v34;
                              id v86 = v193;
                              goto LABEL_107;
                            }
                          }
                          unsigned int v85 = [v3 isBlockingIncident];
                          uint64_t v2 = v188;
                          id v86 = v193;
                          if (v85 != [v26 isBlockingIncident])
                          {
                            unsigned int v60 = 0;
                            uint64_t v87 = v34;
LABEL_107:

                            unint64_t v12 = (unint64_t)v196;
                            goto LABEL_108;
                          }
                          uint64_t v88 = [v3 affectedEntities];
                          uint64_t v89 = [v26 affectedEntities];
                          uint64_t v164 = v88;
                          uint64_t v166 = v88 | v89;
                          id v168 = (id)v88;
                          id obj = (id)v89;
                          id v90 = (id)v89;
                          BOOL v91 = &stru_1012E1C38;
                          unsigned __int8 v163 = v90;
                          if (v166)
                          {
                            unsigned int v60 = 0;
                            if (v168) {
                              BOOL v92 = obj == 0;
                            }
                            else {
                              BOOL v92 = 0;
                            }
                            char v93 = v92;
                            if (v90) {
                              BOOL v94 = v164 == 0;
                            }
                            else {
                              BOOL v94 = 0;
                            }
                            if (!v94)
                            {
                              uint64_t v87 = v34;
                              if ((v93 & 1) == 0)
                              {
                                id v95 = [v168 count];
                                if (v95 == [v163 count])
                                {
                                  long long v206 = 0u;
                                  long long v207 = 0u;
                                  long long v204 = 0u;
                                  long long v205 = 0u;
                                  id obja = v168;
                                  id v96 = [obja countByEnumeratingWithState:&v204 objects:v203 count:16];
                                  if (v96)
                                  {
                                    id v97 = v96;
                                    uint64_t v165 = *(void *)v205;
                                    uint64_t v167 = 0;
LABEL_129:
                                    uint64_t v98 = 0;
                                    while (1)
                                    {
                                      if (*(void *)v205 != v165) {
                                        objc_enumerationMutation(obja);
                                      }
                                      uint64_t v99 = *(GEOTransitIncidentEntity **)(*((void *)&v204 + 1) + 8 * v98);
                                      uint64_t v100 = [v163 objectAtIndexedSubscript:v167 + v98];
                                      unsigned int v60 = sub_1002C3C40(v100, v99, (GEOTransitIncidentEntity *)v100);

                                      if (!v60) {
                                        break;
                                      }
                                      if (v97 == (id)++v98)
                                      {
                                        v167 += v98;
                                        id v97 = [obja countByEnumeratingWithState:&v204 objects:v203 count:16];
                                        if (v97) {
                                          goto LABEL_129;
                                        }
                                        goto LABEL_135;
                                      }
                                    }
                                  }
                                  else
                                  {
LABEL_135:
                                    unsigned int v60 = 1;
                                  }

                                  uint64_t v2 = v188;
                                  uint64_t v87 = v34;
                                  id v86 = v193;
                                }
                                else
                                {
                                  unsigned int v60 = 0;
                                }
                              }
                              goto LABEL_104;
                            }
                          }
                          else
                          {
                            unsigned int v60 = 1;
                          }
                          uint64_t v87 = v34;
LABEL_104:

                          goto LABEL_107;
                        }
                        BOOL v79 = v52;
                        unsigned int v60 = 0;
                      }
                      uint64_t v2 = v188;
                      uint64_t v87 = v34;
                      unint64_t v12 = (unint64_t)v196;
                      id v86 = v193;
LABEL_109:

                      goto LABEL_110;
                    }
                    goto LABEL_139;
                  }
                  if (v2) {
                    BOOL v101 = v12 == 0;
                  }
                  else {
                    BOOL v101 = 0;
                  }
                  char v102 = v101;
                  if (v22) {
                    BOOL v103 = v16 == 0;
                  }
                  else {
                    BOOL v103 = 0;
                  }
                  if (v103
                    || (v102 & 1) != 0
                    || (id v104 = [(id)v2 muid], v104 != objc_msgSend((id)v15, "muid")))
                  {

                    swift_unknownObjectRelease();
                    swift_unknownObjectRelease();
                    uint64_t v7 = 0;
                    goto LABEL_140;
                  }
                  uint64_t v105 = [(id)v2 title];
                  uint64_t v106 = [(id)v15 title];
                  uint64_t v107 = v105 | v106;
                  id v3 = (id)v105;
                  unint64_t v12 = (unint64_t)(id)v106;
                  if (!v107
                    || (uint64_t v7 = (uint64_t)[v3 isEqual:v12],
                        v3,
                        (id)v12,
                        v7))
                  {
                    uint64_t v187 = v17;
                    unint64_t v188 = v11 & 0xC000000000000001;
                    uint64_t v108 = [(id)v2 summary];
                    uint64_t v109 = [(id)v15 summary];
                    uint64_t v110 = v108 | v109;
                    id v18 = (id)v108;
                    id v111 = (id)v109;
                    if (!v110
                      || (uint64_t v7 = (uint64_t)[v18 isEqual:v111],
                          v18,
                          v111,
                          v7))
                    {
                      uint64_t v197 = v18;
                      id v198 = v111;
                      uint64_t v112 = [(id)v2 fullDescription];
                      uint64_t v113 = [(id)v15 fullDescription];
                      uint64_t v114 = v112 | v113;
                      id v18 = (id)v112;
                      id v111 = (id)v113;
                      if (!v114
                        || (uint64_t v7 = (uint64_t)[v18 isEqual:v111],
                            v18,
                            v111,
                            v7))
                      {
                        int v195 = v111;
                        uint64_t v115 = [(id)v2 messageForRoutePlanning];
                        uint64_t v116 = [(id)v15 messageForRoutePlanning];
                        uint64_t v117 = v115 | v116;
                        id v118 = (id)v115;
                        id v196 = (id)v116;
                        if (v117
                          && (unsigned int v119 = [v118 isEqual:v196],
                              v118,
                              v196,
                              !v119))
                        {
                          char v152 = 0;
                          uint64_t v17 = v187;
                        }
                        else
                        {
                          id v192 = v118;
                          uint64_t v120 = [(id)v2 messageForRouteStepping];
                          uint64_t v121 = [(id)v15 messageForRouteStepping];
                          uint64_t v122 = v120 | v121;
                          id v123 = (id)v120;
                          uint64_t v193 = v123;
                          id v194 = (id)v121;
                          if (v122
                            && (unsigned int v124 = [v123 isEqual:v194],
                                v123,
                                v194,
                                !v124))
                          {
                            char v152 = 0;
                            uint64_t v17 = v187;
                            id v118 = v192;
                          }
                          else
                          {
                            uint64_t v125 = [(id)v2 messageForNonRoutable];
                            uint64_t v126 = [(id)v15 messageForNonRoutable];
                            id v191 = (id)v125;
                            id v127 = (id)v126;
                            id v190 = v127;
                            if (v125 | v126
                              && (id v128 = v127,
                                  unsigned int v129 = [v191 isEqual:v127],
                                  v191,
                                  v128,
                                  !v129))
                            {
                              char v152 = 0;
                              uint64_t v17 = v187;
                              id v118 = v192;
                            }
                            else
                            {
                              uint64_t v130 = [(id)v2 startDate];
                              uint64_t v131 = [(id)v15 startDate];
                              id v189 = (id)v130;
                              id v132 = (id)v131;
                              id v186 = v132;
                              if (v130 | v131
                                && (uint64_t v133 = v132,
                                    unsigned int v134 = [v189 isEqual:v132],
                                    v189,
                                    v133,
                                    !v134))
                              {
                                char v152 = 0;
                                uint64_t v17 = v187;
                                id v118 = v192;
                              }
                              else
                              {
                                uint64_t v135 = [(id)v2 endDate];
                                uint64_t v136 = [(id)v15 endDate];
                                id v185 = (id)v135;
                                BOOL v137 = (id)v136;
                                uint64_t v184 = v137;
                                if ((!(v135 | v136)
                                   || (char v138 = v137,
                                       unsigned int v139 = [v185 isEqual:v137],
                                       v185,
                                       v138,
                                       v139))
                                  && (unsigned int v140 = [(id)v2 iconType],
                                      v140 == [(id)v15 iconType]))
                                {
                                  uint64_t v141 = [(id)v2 creationDate];
                                  uint64_t v142 = [(id)v15 creationDate];
                                  uint64_t v143 = v141 | v142;
                                  id v183 = (id)v141;
                                  id v144 = (id)v142;
                                  if (v143
                                    && (unsigned int v145 = [v183 isEqual:v144],
                                        v183,
                                        v144,
                                        !v145))
                                  {
                                    char v152 = 0;
                                  }
                                  else
                                  {
                                    unsigned int v181 = v144;
                                    uint64_t v146 = [(id)v2 lastUpdated];
                                    uint64_t v147 = [(id)v15 lastUpdated];
                                    unsigned int v182 = (id)v146;
                                    id v148 = (id)v147;
                                    id v180 = v148;
                                    if (!(v146 | v147)
                                      || (BOOL v149 = v148,
                                          unsigned int v150 = [v182 isEqual:v148],
                                          v182,
                                          v149,
                                          v150))
                                    {
                                      unsigned int v151 = [(id)v2 isBlockingIncident];
                                      if (v151 == [(id)v15 isBlockingIncident])
                                      {
                                        uint64_t v23 = [(id)v2 affectedEntities];
                                        uint64_t v17 = [(id)v15 affectedEntities];
                                        id v178 = (id)v23;
                                        id v179 = (id)v17;
                                        unsigned int v153 = &stru_1012E1C38;
                                        if (v23 | v17) {
                                          goto LABEL_204;
                                        }
                                        char v152 = 1;
                                        goto LABEL_193;
                                      }
                                    }
                                    char v152 = 0;
LABEL_194:

                                    id v144 = v181;
                                  }
                                }
                                else
                                {
                                  char v152 = 0;
                                }
                                uint64_t v17 = v187;
                                id v118 = v192;
                              }
                            }
                          }
                        }

                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();

                        id v18 = (id)v188;
                        if ((v152 & 1) == 0)
                        {
LABEL_202:
                          uint64_t v7 = 0;
                          goto LABEL_140;
                        }
                        goto LABEL_44;
                      }
                    }
                  }

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();

                  goto LABEL_140;
                }
LABEL_226:
                unint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                goto LABEL_42;
              }
LABEL_138:
              swift_unknownObjectRelease();
LABEL_139:
              uint64_t v7 = 1;
LABEL_140:
              sub_10019C1E4((uint64_t)&v202);
              sub_10019C1E4((uint64_t)&v201);
              return v7;
            }
          }
          else
          {
            if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_226;
            }
            uint64_t v16 = *(void *)(v11 + 32);
            swift_unknownObjectRetain();
            uint64_t v19 = v14 & 0xFFFFFFFFFFFFFF8;
            if (!v15) {
              goto LABEL_28;
            }
          }
          if (v14 < 0) {
            unint64_t v15 = v14;
          }
          else {
            unint64_t v15 = v19;
          }
          swift_bridgeObjectRetain();
          uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
          sub_10019C1E4((uint64_t)&v201);
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v13 == v16) {
          goto LABEL_21;
        }
      }
    }
    return 0;
  }
  return v7;
}

uint64_t sub_1002C34C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D9A20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DateComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = round((double)(unint64_t)a1 / 60.0);
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((uint64_t)v14 <= 1) {
    a1 = 1;
  }
  else {
    a1 = (uint64_t)v14;
  }
  double v15 = round((double)(unint64_t)a2 / 60.0);
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0) {
    goto LABEL_22;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  a2 = (uint64_t)v15;
  if (__OFSUB__((uint64_t)v15, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)v15 - a1 >= 2)
  {
    if (qword_1015CBD78 == -1)
    {
LABEL_13:
      v27._countAndFlagsBits = 0xD000000000000047;
      v27._object = (void *)0x8000000100F82F40;
      v16._object = (void *)0x8000000100F82F00;
      v16._countAndFlagsBits = 0xD000000000000034;
      v17._countAndFlagsBits = 0x25202D2064243125;
      v17._object = (void *)0xEF6E696D20642432;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)qword_101611820, v17, v27);
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_100F5CFA0;
      *(void *)(v18 + 56) = &type metadata for Int;
      *(void *)(v18 + 64) = &protocol witness table for Int;
      *(void *)(v18 + 32) = a1;
      *(void *)(v18 + 96) = &type metadata for Int;
      *(void *)(v18 + 104) = &protocol witness table for Int;
      *(void *)(v18 + 72) = a2;
      uint64_t v19 = String.init(format:_:)();
      swift_bridgeObjectRelease();
      return v19;
    }
LABEL_26:
    swift_once();
    goto LABEL_13;
  }
  id v20 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v20 setUnitsStyle:2];
  [v20 setAllowedUnits:64];
  uint64_t v21 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  uint64_t v22 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  DateComponents.minute.setter();
  Class isa = DateComponents._bridgeToObjectiveC()().super.isa;
  id v24 = [v20 stringFromDateComponents:isa];

  if (v24)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {

    uint64_t v19 = 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v19;
}

uint64_t destroy for NearbyTransitGroupViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitGroupViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitGroupViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitGroupViewModel()
{
  return &type metadata for NearbyTransitGroupViewModel;
}

BOOL sub_1002C3C40(id a1, GEOTransitIncidentEntity *a2, GEOTransitIncidentEntity *a3)
{
  unint64_t v5 = (unint64_t)a2 | (unint64_t)a3;
  long long v6 = a2;
  uint64_t v7 = a3;
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = v9;
  if (v5)
  {
    unsigned __int8 v11 = 0;
    if (v8) {
      BOOL v12 = a3 == 0;
    }
    else {
      BOOL v12 = 0;
    }
    char v13 = v12;
    if (v9) {
      BOOL v14 = a2 == 0;
    }
    else {
      BOOL v14 = 0;
    }
    if (!v14 && (v13 & 1) == 0)
    {
      id v15 = [(GEOTransitIncidentEntity *)v8 muid];
      if (v15 == [(GEOTransitIncidentEntity *)v10 muid]
        && (unsigned int v16 = [(GEOTransitIncidentEntity *)v8 hasNextStopIDs],
            v16 == [(GEOTransitIncidentEntity *)v10 hasNextStopIDs]))
      {
        uint64_t v17 = [(GEOTransitIncidentEntity *)v8 nextStopIDs];
        uint64_t v18 = [(GEOTransitIncidentEntity *)v10 nextStopIDs];
        uint64_t v19 = v17 | v18;
        id v20 = (id)v17;
        id v21 = (id)v18;
        if (v19) {
          unsigned __int8 v11 = [v20 isEqual:v21];
        }
        else {
          unsigned __int8 v11 = 1;
        }
      }
      else
      {
        unsigned __int8 v11 = 0;
      }
    }
  }
  else
  {
    unsigned __int8 v11 = 1;
  }

  return v11;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitTransitShields()
{
  return &type metadata for PlaceSummaryUnitTransitShields;
}

id sub_1002C3E64()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ServerEvaluationStatusMapsSync()) init];
  qword_101611B98 = (uint64_t)result;
  return result;
}

id sub_1002C3F30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServerEvaluationStatusMapsSync();
  return [super dealloc];
}

uint64_t type metadata accessor for ServerEvaluationStatusMapsSync()
{
  return self;
}

uint64_t sub_1002C3F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 161) = a8;
  *(unsigned char *)(v8 + 160) = a7;
  *(void *)(v8 + 96) = a5;
  *(void *)(v8 + 104) = a6;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 112) = v9;
  void *v9 = v8;
  v9[1] = sub_1002C403C;
  return _swift_task_switch(sub_1002C58F8, 0, 0);
}

uint64_t sub_1002C403C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C413C, 0, 0);
}

uint64_t sub_1002C413C()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    dispatch thunk of ServerEvaluationStatus.arpStatus.setter();
    dispatch thunk of ServerEvaluationStatus.reliabilityStatus.setter();
    type metadata accessor for MapsSyncStore();
    v0[16] = static MapsSyncStore.sharedStore.getter();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
    *(void *)(v2 + 32) = v1;
    uint64_t v15 = v2;
    specialized Array._endMutation()();
    v0[17] = v15;
    BOOL v14 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    id v3 = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[18] = v4;
    void *v4 = v0;
    v4[1] = sub_1002C4400;
    return v14(v15);
  }
  else
  {
    long long v6 = (void (*)(id))v0[12];
    if (v6)
    {
      if (qword_1015CBF08 != -1) {
        swift_once();
      }
      sub_1000FF33C(&qword_1015CC060);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v8;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = 0xD000000000000012;
      *(void *)(inited + 56) = 0x8000000100F83090;
      swift_bridgeObjectRetain();
      sub_1001160B4(inited);
      id v9 = objc_allocWithZone((Class)NSError);
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v9 initWithDomain:v10 code:-1 userInfo:isa];

      v6(v12);
    }
    char v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1002C4400()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_1002C4598;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 128);
    swift_bridgeObjectRelease();

    id v3 = sub_1002C4520;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002C4520()
{
  uint64_t v1 = (void (*)(void))v0[12];
  uint64_t v2 = (void *)v0[15];
  if (v1) {
    v1(0);
  }

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002C4598()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[15];
  uint64_t v3 = v0[12];
  swift_bridgeObjectRelease();

  uint64_t v4 = v0[19];
  if (v3)
  {
    uint64_t v5 = (void (*)(uint64_t))v0[12];
    swift_errorRetain();
    v5(v4);
    swift_errorRelease();
  }
  swift_errorRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002C47D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1002C4878;
  return _swift_task_switch(sub_1002C58F8, 0, 0);
}

uint64_t sub_1002C4878(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C4978, 0, 0);
}

uint64_t sub_1002C4978()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void (*)(void, void))v0[2];
  if (v1)
  {
    if (v2)
    {
      char v3 = dispatch thunk of ServerEvaluationStatus.arpStatus.getter();
      char v4 = dispatch thunk of ServerEvaluationStatus.reliabilityStatus.getter();
      v2(v3 & 1, v4 & 1);
    }
  }
  else if (v2)
  {
    v2(0, 0);
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1002C4BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 161) = a8;
  *(unsigned char *)(v8 + 160) = a7;
  *(void *)(v8 + 96) = a5;
  *(void *)(v8 + 104) = a6;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v8 + 112) = v9;
  void *v9 = v8;
  v9[1] = sub_1002C4C64;
  return _swift_task_switch(sub_1002C58F8, 0, 0);
}

uint64_t sub_1002C4C64(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C4D64, 0, 0);
}

uint64_t sub_1002C4D64()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    dispatch thunk of ServerEvaluationStatus.rapStatus.setter();
    dispatch thunk of ServerEvaluationStatus.reliabilityStatus.setter();
    type metadata accessor for MapsSyncStore();
    v0[16] = static MapsSyncStore.sharedStore.getter();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
    *(void *)(v2 + 32) = v1;
    uint64_t v15 = v2;
    specialized Array._endMutation()();
    v0[17] = v15;
    BOOL v14 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    id v3 = v1;
    char v4 = (void *)swift_task_alloc();
    v0[18] = v4;
    void *v4 = v0;
    v4[1] = sub_1002C5028;
    return v14(v15);
  }
  else
  {
    uint64_t v6 = (void (*)(id))v0[12];
    if (v6)
    {
      if (qword_1015CBF08 != -1) {
        swift_once();
      }
      sub_1000FF33C(&qword_1015CC060);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v8;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = 0xD000000000000012;
      *(void *)(inited + 56) = 0x8000000100F83090;
      swift_bridgeObjectRetain();
      sub_1001160B4(inited);
      id v9 = objc_allocWithZone((Class)NSError);
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v9 initWithDomain:v10 code:-1 userInfo:isa];

      v6(v12);
    }
    char v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1002C5028()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_1002C6820;
  }
  else
  {
    char v4 = *(void **)(v2 + 128);
    swift_bridgeObjectRelease();

    id v3 = sub_1002C680C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002C52D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1002C5380;
  return _swift_task_switch(sub_1002C58F8, 0, 0);
}

uint64_t sub_1002C5380(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C5480, 0, 0);
}

uint64_t sub_1002C5480()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void (*)(void, void))v0[2];
  if (v1)
  {
    if (v2)
    {
      char v3 = dispatch thunk of ServerEvaluationStatus.rapStatus.getter();
      char v4 = dispatch thunk of ServerEvaluationStatus.reliabilityStatus.getter();
      v2(v3 & 1, v4 & 1);
    }
  }
  else if (v2)
  {
    v2(0, 0);
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1002C56BC()
{
  return sub_1002C66CC(56);
}

uint64_t sub_1002C56C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100105268;
  return sub_1002C52D8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002C578C(char a1, char a2)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(v2 + 16) + 16))(*(void *)(v2 + 16), a1 & 1, a2 & 1);
}

uint64_t sub_1002C57AC()
{
  type metadata accessor for ServerEvaluationStatusMapsSync();
  sub_1000FF33C(&qword_1015D9A90);
  uint64_t v3 = String.init<A>(describing:)();
  uint64_t v4 = v0;
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6D6F44726F727245;
  v1._object = (void *)0xEB000000006E6961;
  String.append(_:)(v1);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1015D9A28 = v3;
  unk_1015D9A30 = v4;
  return result;
}

uint64_t sub_1002C583C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015D9A38);
  sub_1000F2248(v0, (uint64_t)qword_1015D9A38);
  type metadata accessor for ServerEvaluationStatusMapsSync();
  sub_1000FF33C(&qword_1015D9A90);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002C58DC()
{
  return _swift_task_switch(sub_1002C58F8, 0, 0);
}

uint64_t sub_1002C58F8()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  id v2 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 initWithKey:v3 ascending:0];

  *(void *)(v1 + 32) = v4;
  specialized Array._endMutation()();
  id v5 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v6 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[4] = v6;
  type metadata accessor for ServerEvaluationStatusRequest();
  v0[5] = ServerEvaluationStatusRequest.__allocating_init()();
  NSString v10 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of ServerEvaluationStatusRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of ServerEvaluationStatusRequest.fetch(options:));
  id v7 = v6;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1002C5A7C;
  return v10(v6);
}

uint64_t sub_1002C5A7C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1002C6088;
  }
  else
  {
    id v5 = *(void **)(v3 + 40);

    id v4 = sub_1002C5B9C;
  }
  return _swift_task_switch(v4, 0, 0);
}

id sub_1002C5B9C()
{
  unint64_t v1 = v0[7];
  v0[2] = v1;
  unint64_t v2 = v1 >> 62;
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_7:
    id v4 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_7;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    id v4 = *(id *)(v0[7] + 32);
  }
LABEL_8:
  v0[9] = v4;
  if (!v2)
  {
    unint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v6 <= 1) {
      goto LABEL_19;
    }
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_15;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease_n();
  if (v7 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      id result = (id)swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_15:
        if ((v1 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_33;
          }
          id result = *(id *)(v0[7] + 32);
          uint64_t v11 = result;
          if (!v2) {
            goto LABEL_18;
          }
          goto LABEL_25;
        }
LABEL_24:
        id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v11 = result;
        if (!v2)
        {
LABEL_18:
          uint64_t v12 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_26;
        }
LABEL_25:
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        id result = (id)swift_bridgeObjectRelease();
LABEL_26:
        if (v12)
        {
          sub_100348ED8(0, 1);

          type metadata accessor for MapsSyncStore();
          v0[10] = static MapsSyncStore.sharedStore.getter();
          unint64_t v16 = v0[2];
          if (!(v16 >> 62))
          {
            swift_bridgeObjectRetain();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            type metadata accessor for MapsSyncObject();
            uint64_t v17 = v16;
LABEL_29:
            v0[11] = v17;
            swift_bridgeObjectRelease();
            uint64_t v19 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                                  + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
            uint64_t v18 = (void *)swift_task_alloc();
            v0[12] = v18;
            *uint64_t v18 = v0;
            v18[1] = sub_1002C5F04;
            return (id)v19(v17);
          }
LABEL_33:
          type metadata accessor for MapsSyncObject();
          swift_bridgeObjectRetain();
          uint64_t v17 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
LABEL_36:
        __break(1u);
        return result;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_36;
  }
LABEL_19:
  char v13 = (void *)v0[4];
  swift_bridgeObjectRelease();

  uint64_t v14 = v0[9];
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return (id)v15(v14);
}

uint64_t sub_1002C5F04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1002C62A8;
  }
  else
  {
    id v4 = *(void **)(v2 + 80);
    swift_bridgeObjectRelease();

    uint64_t v3 = sub_1002C6024;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002C6024()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1002C6088()
{
  uint64_t v1 = *(void **)(v0 + 40);

  if (qword_1015CBF10 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000F2248(v2, (uint64_t)qword_1015D9A38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    log = v3;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v4, "FetchEvaluationStatus Error:%@", v5, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8(0);
}

uint64_t sub_1002C62A8()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 72);

  swift_bridgeObjectRelease();
  if (qword_1015CBF10 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_1015D9A38);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    log = v4;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v5, "FetchEvaluationStatus Error:%@", v6, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9(0);
}

uint64_t sub_1002C64D4()
{
  return sub_1002C66CC(58);
}

uint64_t sub_1002C64DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  char v10 = *(unsigned char *)(v1 + 57);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100105268;
  return sub_1002C4BB4(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1002C65BC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C65F4()
{
  return sub_1002C66CC(56);
}

uint64_t sub_1002C65FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100105268;
  return sub_1002C47D0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002C66C4()
{
  return sub_1002C66CC(58);
}

uint64_t sub_1002C66CC(uint64_t a1)
{
  swift_unknownObjectRelease();

  if (*(void *)(v1 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1002C6728(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  char v10 = *(unsigned char *)(v1 + 57);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10005056C;
  return sub_1002C3F8C(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1002C6824(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1002C689C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_100100830(0, &qword_1015D9B28);
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1002C6924()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for FeedbackCommunityIDManager()) init];
  qword_101611BA0 = (uint64_t)result;
  return result;
}

id sub_1002C6A40()
{
  return sub_1002C6B2C(type metadata accessor for FeedbackCommunityIDManager.Result);
}

id sub_1002C6B14()
{
  return sub_1002C6B2C(type metadata accessor for FeedbackCommunityIDManager);
}

id sub_1002C6B2C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for FeedbackCommunityIDManager()
{
  return self;
}

uint64_t type metadata accessor for FeedbackCommunityIDManager.Result()
{
  return self;
}

void sub_1002C6BBC(char a1, id a2, uint64_t a3, void (*a4)(id, void), uint64_t a5, uint64_t a6, char a7)
{
  if ((a1 & 1) == 0 || !a2) {
    goto LABEL_10;
  }
  id v12 = [a2 communityIdentifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if (qword_1015CBF20 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1000F2248(v24, (uint64_t)qword_101611BA8);
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      Swift::String v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)Swift::String v27 = 134217984;
      aBlock[0] = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Fetching latest community for muid: %llu", v27, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a4;
    *(void *)(v29 + 24) = a5;
    *(void *)(v29 + 32) = v28;
    *(unsigned char *)(v29 + 40) = a7 & 1;
    *(void *)(v29 + 48) = 1;
    type metadata accessor for MapsSyncQueryPredicate();
    sub_1000F4F24((uint64_t)a4);
    swift_retain();
    id v30 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
    uint64_t v31 = *(void **)(a6 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1002C8348;
    *(void *)(v32 + 24) = v29;
    aBlock[4] = (uint64_t)sub_1002C8C3C;
    aBlock[5] = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1002C8C40;
    aBlock[3] = (uint64_t)&unk_1012E20B0;
    uint64_t v33 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v31 fetchAllAvailableCommunityIDsWithPredicate:v30 completion:v33];
    _Block_release(v33);
    swift_release();
    swift_release();

    return;
  }
  if (qword_1015CBF20 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1000F2248(v16, (uint64_t)qword_101611BA8);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000F2280(v13, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Use original communityID:%s for muid: %llu", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a4)
    {
LABEL_8:
      uint64_t v20 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
      id v21 = (char *)objc_allocWithZone(v20);
      uint64_t v22 = (uint64_t *)&v21[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
      *uint64_t v22 = v13;
      v22[1] = v15;
      v34.receiver = v21;
      v34.super_class = v20;
      id v23 = [super init];
      a4(v23, 0);

      return;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (a4) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_1002C7278(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  if (!a2)
  {
    NSString v7 = 0;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  if (v6)
  {
LABEL_3:
    _OWORD v8[4] = v6;
    v8[5] = a4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    _OWORD v8[2] = sub_100033BC0;
    v8[3] = &unk_1012E1FC0;
    id v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
LABEL_4:
  [v4 fetchAuthenticationInfoForRAPReportWithReportID:v7 shouldIncreaseCount:1 completion:v6];
  _Block_release(v6);
}

void sub_1002C7438(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  char v9 = a3 & 1;
  if (a2)
  {
    char v10 = self;
    uint64_t v11 = String._bridgeToObjectiveC()();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(unsigned char *)(v13 + 24) = v9;
    *(void *)(v13 + 32) = a4;
    *(void *)(v13 + 40) = a5;
    uint64_t v24 = sub_1002C8D1C;
    uint64_t v25 = v13;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_1002C689C;
    id v23 = &unk_1012E1EA8;
    unint64_t v14 = _Block_copy(&v20);
    sub_1000F4F24(a4);
    swift_release();
    [v10 fetchRAPRecordsMatchingProblemId:v11 completion:v14];
    _Block_release(v14);
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a4;
    *(void *)(v16 + 24) = a5;
    *(void *)(v16 + 32) = v15;
    *(unsigned char *)(v16 + 40) = v9;
    *(void *)(v16 + 48) = 0;
    type metadata accessor for MapsSyncQueryPredicate();
    sub_1000F4F24(a4);
    swift_retain();
    uint64_t v11 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
    uint64_t v17 = *(void **)(v6 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_1002C8348;
    *(void *)(v18 + 24) = v16;
    uint64_t v24 = sub_1002C8C3C;
    uint64_t v25 = v18;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_1002C8C40;
    id v23 = &unk_1012E1E58;
    uint64_t v19 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    [v17 fetchAllAvailableCommunityIDsWithPredicate:v11 completion:v19];
    _Block_release(v19);
    swift_release();
    swift_release();
  }
}

void sub_1002C770C(unint64_t a1, uint64_t a2, char a3, void (*a4)(id, void), uint64_t a5)
{
  if (!a1) {
    goto LABEL_16;
  }
  uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_15;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v9 + 16))
    {
      __break(1u);
      return;
    }
    id v11 = *(id *)(a1 + 32);
  }
  id v30 = v11;
  swift_bridgeObjectRelease();
  id v12 = [v30 communityIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
    if (a4)
    {
      id v14 = [v30 communityIdentifier];
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      uint64_t v18 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
      uint64_t v19 = (char *)objc_allocWithZone(v18);
      uint64_t v20 = (uint64_t *)&v19[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
      *uint64_t v20 = v15;
      v20[1] = v17;
      v31.receiver = v19;
      v31.super_class = v18;
      id v21 = [super init];
      a4(v21, 0);
    }
    else
    {
    }
    return;
  }

LABEL_16:
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v23 = (char *)Strong;
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a4;
    *(void *)(v25 + 24) = a5;
    *(void *)(v25 + 32) = v24;
    *(unsigned char *)(v25 + 40) = a3 & 1;
    *(void *)(v25 + 48) = 0;
    type metadata accessor for MapsSyncQueryPredicate();
    sub_1000F4F24((uint64_t)a4);
    swift_retain();
    os_log_type_t v26 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
    Swift::String v27 = *(void **)&v23[OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache];
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_1002C8348;
    *(void *)(v28 + 24) = v25;
    aBlock[4] = sub_1002C8C3C;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002C8C40;
    aBlock[3] = &unk_1012E1F20;
    uint64_t v29 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v27 fetchAllAvailableCommunityIDsWithPredicate:v26 completion:v29];
    _Block_release(v29);

    swift_release();
    swift_release();
  }
}

uint64_t sub_1002C7B64()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C7B9C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002C7BD4(unint64_t a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5, char a6)
{
  if (a2)
  {
    uint64_t v8 = a2;
    if (qword_1015CBF20 != -1) {
LABEL_45:
    }
      swift_once();
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000F2248(v9, (uint64_t)qword_101611BA8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)id v12 = 138412290;
      swift_errorRetain();
      uint64_t v52 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v52;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "CommunityID fetch error: %@", v12, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a3) {
        return;
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      if (!a3) {
        return;
      }
    }
    uint64_t v24 = v8;
LABEL_21:
    a3(0, v24);
    return;
  }
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      uint64_t v47 = a4;
      unsigned int v48 = a3;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        if (v16) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v16)
        {
LABEL_10:
          a3 = (void (*)(id, uint64_t))(a1 & 0xC000000000000001);
          uint64_t v17 = 4;
          do
          {
            if (a3) {
              id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v18 = *(id *)(a1 + 8 * v17);
            }
            uint64_t v19 = v18;
            uint64_t v8 = v17 - 3;
            if (__OFADD__(v17 - 4, 1))
            {
              __break(1u);
              goto LABEL_45;
            }
            uint64_t v20 = dispatch thunk of CommunityID.communityIdentifier.getter();
            if (v21)
            {
              uint64_t v22 = v20;
              unint64_t v23 = v21;
              if (sub_1002C8694(v19))
              {
                swift_bridgeObjectRelease();
                if (a6) {
                  [*(id *)&Strong[OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache] increaseUsedCountWithMsCommunityID:v19 completion:0];
                }
                if (qword_1015CBF20 != -1) {
                  swift_once();
                }
                uint64_t v35 = type metadata accessor for Logger();
                sub_1000F2248(v35, (uint64_t)qword_101611BA8);
                swift_bridgeObjectRetain_n();
                unsigned int v36 = Logger.logObject.getter();
                os_log_type_t v37 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v36, v37))
                {
                  uint64_t v38 = swift_slowAlloc();
                  uint64_t v50 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v38 = 136315394;
                  swift_bridgeObjectRetain();
                  sub_1000F2280(v22, v23, &v50);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v38 + 12) = 2048;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  _os_log_impl((void *)&_mh_execute_header, v36, v37, "Fetched available communityID: %s for category:%ld", (uint8_t *)v38, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                if (v48)
                {
                  uint64_t v39 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
                  id v40 = (char *)objc_allocWithZone(v39);
                  id v41 = (uint64_t *)&v40[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
                  uint64_t *v41 = v22;
                  v41[1] = v23;
                  v51.receiver = v40;
                  v51.super_class = v39;
                  id v42 = [super init];
                  v48(v42, 0);
                }
                else
                {

                  swift_bridgeObjectRelease();
                }

                return;
              }
              swift_bridgeObjectRelease();
            }

            ++v17;
          }
          while (v8 != v16);
        }
      }
      swift_bridgeObjectRelease();
      if (qword_1015CBF20 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      sub_1000F2248(v43, (uint64_t)qword_101611BA8);
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v44, v45))
      {
        id v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "There's no available communityID, generate a new one", v46, 2u);
        swift_slowDealloc();
      }

      uint64_t v33 = (uint64_t)v48;
      uint64_t v34 = v47;
    }
    else
    {
      if (qword_1015CBF20 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_1000F2248(v29, (uint64_t)qword_101611BA8);
      id v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Fetched nil communityIDs, generate a new one", v32, 2u);
        swift_slowDealloc();
      }

      uint64_t v33 = (uint64_t)a3;
      uint64_t v34 = a4;
    }
    sub_1002C834C(v33, v34);

    return;
  }
  if (qword_1015CBF20 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_1000F2248(v25, (uint64_t)qword_101611BA8);
  os_log_type_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Self is nil, fetchcommunityID returned", v28, 2u);
    swift_slowDealloc();
  }

  if (a3)
  {
    uint64_t v24 = 0;
    goto LABEL_21;
  }
}

void sub_1002C834C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v10 = UUID.uuidString.getter();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (qword_1015CBF20 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1000F2248(v13, (uint64_t)qword_101611BA8);
  swift_bridgeObjectRetain_n();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v22[0] = a1;
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    v22[1] = sub_1000F2280(v10, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "generating a new communityID: %s", v16, 0xCu);
    swift_arrayDestroy();
    a1 = v22[0];
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v18 = *(void **)(v3 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache);
  NSString v19 = String._bridgeToObjectiveC()();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v10;
  v20[3] = v12;
  v20[4] = a1;
  v20[5] = a2;
  aBlock[4] = (uint64_t)sub_1002C922C;
  aBlock[5] = (uint64_t)v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002C8C40;
  aBlock[3] = (uint64_t)&unk_1012E1F70;
  unint64_t v21 = _Block_copy(aBlock);
  sub_1000F4F24(a1);
  swift_release();
  [v18 storeCommunityIDWithIdentifier:v19 completion:v21];
  _Block_release(v21);
}

uint64_t sub_1002C8694(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - v12;
  dispatch thunk of MapsSyncObject.createTime.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    static Date.now.getter();
    Date.timeIntervalSince1970.getter();
    double v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
    v16(v10, v7);
    Date.timeIntervalSince1970.getter();
    double v18 = v15 - v17;
    GEOConfigGetDouble();
    if (v18 < v19)
    {
LABEL_4:
      v16(v13, v7);
      return 1;
    }
    GEOConfigGetDouble();
    if (v21 >= v18)
    {
      uint64_t v31 = dispatch thunk of CommunityID.usedCount.getter();
      unint64_t UInteger = GEOConfigGetUInteger();
      if (v31 < 1 || UInteger >= v31) {
        goto LABEL_4;
      }
      if (qword_1015CBF20 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_1000F2248(v33, (uint64_t)qword_101611BA8);
      id v23 = a1;
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.info.getter();
      int v35 = v34;
      if (os_log_type_enabled(v24, v34))
      {
        LODWORD(v41) = v35;
        unsigned int v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        uint64_t v45 = v42;
        uint64_t v43 = v2;
        *(_DWORD *)unsigned int v36 = 136315138;
        uint64_t v37 = dispatch thunk of CommunityID.communityIdentifier.getter();
        if (v38)
        {
          unint64_t v39 = v38;
        }
        else
        {
          uint64_t v37 = 0;
          unint64_t v39 = 0xE000000000000000;
        }
        uint64_t v44 = sub_1000F2280(v37, v39, &v45);
        uint64_t v2 = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v41, "CommunityID: %s was expired because it reaches max submission count", v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_22;
      }
    }
    else
    {
      if (qword_1015CBF20 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_1000F2248(v22, (uint64_t)qword_101611BA8);
      id v23 = a1;
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.info.getter();
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        LODWORD(v42) = v26;
        os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v45 = v41;
        *(_DWORD *)os_log_type_t v27 = 136315138;
        uint64_t v28 = dispatch thunk of CommunityID.communityIdentifier.getter();
        if (v29)
        {
          unint64_t v30 = v29;
        }
        else
        {
          uint64_t v28 = 0;
          unint64_t v30 = 0xE000000000000000;
        }
        uint64_t v43 = v2;
        uint64_t v44 = sub_1000F2280(v28, v30, &v45);
        uint64_t v2 = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v42, "CommunityID: %s was expired because it reaches max rollover time", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
LABEL_22:
        swift_slowDealloc();

LABEL_24:
        [*(id *)(v2 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache) setExpiredWithMsCommunityID:v23 completion:0];
        v16(v13, v7);
        return 0;
      }
    }

    goto LABEL_24;
  }
  sub_1001C0FAC((uint64_t)v6);
  return 0;
}

uint64_t sub_1002C8C04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002C8C40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for CommunityID();
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C8CD4()
{
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002C8D1C(unint64_t a1)
{
  sub_1002C770C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void (**)(id, void))(v1 + 32), *(void *)(v1 + 40));
}

void sub_1002C8D30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(id, uint64_t))
{
  if (a2)
  {
    if (qword_1015CBF20 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000F2248(v9, (uint64_t)qword_101611BA8);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000F2280(a3, a4, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2112;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Fail to generate communityID: %s with error: %@", (uint8_t *)v12, 0x16u);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a5) {
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      if (!a5) {
        return;
      }
    }
    a5(0, a2);
    return;
  }
  if (qword_1015CBF20 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1000F2248(v14, (uint64_t)qword_101611BA8);
  swift_bridgeObjectRetain_n();
  double v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v15, v16))
  {

    swift_bridgeObjectRelease_n();
    if (!a5) {
      return;
    }
    goto LABEL_15;
  }
  double v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  *(_DWORD *)double v17 = 136315138;
  swift_bridgeObjectRetain();
  sub_1000F2280(a3, a4, &v23);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v15, v16, "communityID: %s was successfully generated!", v17, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (a5)
  {
LABEL_15:
    double v18 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
    double v19 = (char *)objc_allocWithZone(v18);
    uint64_t v20 = (uint64_t *)&v19[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
    *uint64_t v20 = a3;
    v20[1] = a4;
    v24.receiver = v19;
    v24.super_class = v18;
    swift_bridgeObjectRetain();
    [super init];
    a5(v21, 0);
  }
}

uint64_t sub_1002C9178()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_101611BA8);
  sub_1000F2248(v0, (uint64_t)qword_101611BA8);
  static Logger.subsystem.getter();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002C91E4()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002C922C(uint64_t a1, uint64_t a2)
{
  sub_1002C8D30(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(id, uint64_t))(v2 + 32));
}

uint64_t sub_1002C9238()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 49, 7);
}

void sub_1002C9280(char a1, void *a2)
{
  sub_1002C6BBC(a1, a2, *(void *)(v2 + 16), *(void (**)(id, void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48));
}

uint64_t sub_1002C9294()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1002C92DC(unint64_t a1, uint64_t a2)
{
  sub_1002C7BD4(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t sub_1002C92F0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1002C9360(void *a1, uint64_t a2, double *a3)
{
  id v5 = [objc_allocWithZone((Class)HomeActionFooterViewModel) init];
  [v5 setTopMargin:*a3];
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_4;
  }
  uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
  if (!v6)
  {
    LODWORD(v8) = 0;
    uint64_t v7 = 83;
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_4:
    uint64_t v6 = 0;
  }
  [v5 setDelegate:v6, v7, v8];
  swift_unknownObjectRelease();
  [a1 setViewModel:v5];
}

Swift::Int sub_1002C9460()
{
  Hasher.init(_seed:)();
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v5 + 1))
    {
      v7[0] = v4;
      v7[1] = v5;
      uint64_t v8 = v6;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v7);
      return Hasher._finalize()();
    }
  }
  else
  {
    uint64_t v6 = 0;
    long long v4 = 0u;
    long long v5 = 0u;
  }
  sub_10010A7C4((uint64_t)&v4);
  Swift::UInt Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease();
  }
  return Hasher._finalize()();
}

uint64_t sub_1002C9548@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBF28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D7408);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611BC0);
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

Swift::UInt sub_1002C95F8()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v4 + 1))
    {
      v6[0] = v3;
      v6[1] = v4;
      uint64_t v7 = v5;
      AnyHashable.hash(into:)();
      return sub_1000F351C((uint64_t)v6);
    }
  }
  else
  {
    uint64_t v5 = 0;
    long long v3 = 0u;
    long long v4 = 0u;
  }
  sub_10010A7C4((uint64_t)&v3);
  Swift::UInt result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    Hasher._combine(_:)(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Int sub_1002C96DC()
{
  Hasher.init(_seed:)();
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v5 + 1))
    {
      v7[0] = v4;
      v7[1] = v5;
      uint64_t v8 = v6;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v7);
      return Hasher._finalize()();
    }
  }
  else
  {
    uint64_t v6 = 0;
    long long v4 = 0u;
    long long v5 = 0u;
  }
  sub_10010A7C4((uint64_t)&v4);
  Swift::UInt Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease();
  }
  return Hasher._finalize()();
}

void *assignWithCopy for HomeListFooterCellModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

void *assignWithTake for HomeListFooterCellModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

void sub_1002C989C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  os_log_type_t v16 = (char *)&v35 - v15;
  if (a1)
  {
    uint64_t v17 = qword_1015CBD50;
    double v18 = a1;
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1000F2248(v19, (uint64_t)qword_1016117A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a5, v10);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      unsigned int v36 = v18;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v37 = a6;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v24 = URL.absoluteString.getter();
      uint64_t v38 = sub_1000F2280(v24, v25, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Place Summary] Finished fetching image at url %s.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      double v18 = v36;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }

    uint64_t v33 = v18;
    uint64_t v34 = Image.init(uiImage:)();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v39 = v34;
    swift_retain();
    static Published.subscript.setter();
  }
  else
  {
    if (qword_1015CBD50 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000F2248(v26, (uint64_t)qword_1016117A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, a5, v10);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      unsigned int v36 = (void *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v39 = v37;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v30 = URL.absoluteString.getter();
      uint64_t v38 = sub_1000F2280(v30, v31, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      *(_WORD *)(v29 + 12) = 2112;
      if (a4)
      {
        swift_errorRetain();
        uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v38 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        uint64_t v38 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v32 = 0;
      }
      void *v36 = v32;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[Place Summary] Couldn't fetch image at url: %s, error:%@", (uint8_t *)v29, 0x16u);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1002C9E24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v11 = a2;
  id v10 = a5;
  v9(a2, a3, a4, a5);
  swift_release();
}

void sub_1002C9EC8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  *(void *)&double v9 = __chkstk_darwin(v8 - 8).n128_u64[0];
  id v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = a1;
    uint64_t v13 = Image.init(uiImage:)();
    swift_getKeyPath();
    swift_getKeyPath();
    aBlock[0] = v13;
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock[0]) = 1;
    swift_retain();
    static Published.subscript.setter();
  }
  id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                              + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem), "_geoMapItem", v9));
  if (!v14)
  {
    __break(1u);
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
    goto LABEL_11;
  }
  id v15 = v14;
  sub_100100830(0, &qword_1015D9BC8);
  id v16 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithMapItem:v15];
  swift_unknownObjectRelease();
  id v17 = [v16 buildRoute];
  if (!v17)
  {
LABEL_8:

    return;
  }
  double v18 = v17;
  uint64_t v19 = self;
  id v20 = [v19 mainScreen];
  id v21 = [v20 traitCollection];

  id v22 = [v21 userInterfaceStyle];
  id v23 = [v18 uniqueRouteID];
  if (!v23) {
    goto LABEL_10;
  }
  uint64_t v24 = v23;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
  {
    BOOL v25 = v22 == (id)2;
    id v26 = [v19 mainScreen];
    [v26 scale];
    double v28 = v27;

    id v29 = objc_allocWithZone((Class)MURouteSnapshotKey);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v31 = [v29 initWithIdentifier:isa width:v25 height:100.0 scale:100.0 padding:v28 darkMode:10.0 10.0 10.0 10.0];

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    id v32 = [self sharedInstance];
    aBlock[4] = sub_1002CDC78;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002CA480;
    aBlock[3] = &unk_1012E2180;
    uint64_t v33 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v32 getSnapshotForKey:v31 route:v18 completion:v33];
    _Block_release(v33);

    id v16 = v32;
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
}

void sub_1002CA39C(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (!a1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v3 = a2;
      swift_retain();
      static Published.subscript.setter();
      id v4 = v3;
      Image.init(uiImage:)();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.setter();
    }
  }
}

void sub_1002CA480(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v6 = a2;
  id v7 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1002CA50C(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    id v3 = a1;
  }
  else
  {
    if (!a3) {
      return;
    }
    id v3 = a3;
  }
  id v4 = v3;
  Image.init(uiImage:)();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
}

uint64_t sub_1002CA5AC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = (void *)(a2 + 16);
    swift_beginAccess();
    id v4 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    return swift_endAccess();
  }
  return result;
}

void sub_1002CA64C(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)v100 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v107 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v107 + 64);
  __chkstk_darwin(v12);
  uint64_t v105 = (char *)v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)v100 - v15;
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  id v22 = (char *)v100 - v21;
  if (a1)
  {
    uint64_t v114 = v20;
    uint64_t v128 = v19;
    uint64_t v122 = v11;
    uint64_t v23 = swift_allocObject();
    unint64_t v24 = sub_100118590(_swiftEmptyArrayStorage);
    uint64_t v106 = v23;
    *(void *)(v23 + 16) = v24;
    uint64_t v113 = (uint64_t *)(v23 + 16);
    uint64_t v25 = qword_1015CBD50;
    swift_retain();
    if (v25 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    uint64_t v27 = sub_1000F2248(v26, (uint64_t)qword_1016117A8);
    swift_retain_n();
    uint64_t v119 = v27;
    double v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    BOOL v30 = os_log_type_enabled(v28, v29);
    uint64_t v123 = a1;
    uint64_t v120 = v8;
    BOOL v103 = v16;
    if (v30)
    {
      id v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v133 = swift_slowAlloc();
      *(_DWORD *)id v31 = 136315138;
      id v32 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                  + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem), "name"));
      if (v32)
      {
        uint64_t v33 = v32;
        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v36 = v35;
      }
      else
      {
        uint64_t v34 = 0;
        unint64_t v36 = 0xE000000000000000;
      }
      uint64_t aBlock = v34;
      uint64_t v135 = v36;
      uint64_t v41 = String.init<A>(_:)();
      uint64_t aBlock = sub_1000F2280(v41, v42, &v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a1 = v123;
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "[Place Summary] Starting to fetch images for %s", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v8 = v120;
    }
    else
    {

      swift_release_n();
    }
    id v43 = [*(id *)(a1 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem) _searchResultPhotoCarousel];
    if (!v43)
    {
      __break(1u);
      return;
    }
    uint64_t v44 = v43;
    sub_1000FF33C(&qword_1015D0DB8);
    unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = (uint64_t)v122;
    uint64_t v47 = v128;
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v48 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48)
      {
LABEL_19:
        id v131 = self;
        if (v48 >= 1)
        {
          uint64_t v50 = 0;
          uint64_t v118 = OBJC_IVAR____TtC4Maps27PlaceSummaryImageDownloader_photoCarouselImageCache;
          unint64_t v130 = v45 & 0xC000000000000001;
          unsigned int v129 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56);
          id v127 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
          unsigned int v124 = (id *)(v107 + 16);
          uint64_t v125 = (void **)(v107 + 32);
          uint64_t v115 = (void (**)(uint64_t, uint64_t))(v107 + 8);
          *(void *)&long long v49 = 136315138;
          long long v104 = v49;
          uint64_t v101 = v13 + 7;
          v100[2] = v136;
          objc_super v51 = &selRef_daVinciAtmosphereMaxHeight;
          v100[1] = (char *)&type metadata for Any + 8;
          double v52 = a2 / 3.0;
          unint64_t v117 = v45;
          uint64_t v116 = v48;
          char v102 = v22;
          while (1)
          {
            if (v130)
            {
              id v53 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              id v53 = *(NSObject **)(v45 + 8 * v50 + 32);
              swift_unknownObjectRetain();
            }
            id v54 = [v131 v51[269]:1];
            os_log_t v132 = v53;
            id v55 = -[NSObject bestPhotoForFrameSize:displayScale:options:](v53, "bestPhotoForFrameSize:displayScale:options:", v54, v52, v52, a3);

            if (v55)
            {
              id v56 = [v55 url];
              if (v56)
              {
                uint64_t v57 = v56;
                static URL._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v58 = 0;
              }
              else
              {
                uint64_t v58 = 1;
              }
              (*v129)(v8, v58, 1, v47);
              sub_1002CDD10((uint64_t)v8, v46);
              if ((*v127)(v46, 1, v47) != 1)
              {
                id v59 = *v125;
                ((void (*)(char *, uint64_t, uint64_t))*v125)(v22, v46, v47);
                unsigned int v60 = *(Class *)((char *)&v126->super.isa + v118);
                URL._bridgeToObjectiveC()(v126);
                uint64_t v62 = v61;
                id v63 = [v60 objectForKey:v61];

                if (v63)
                {
                  BOOL v64 = v113;
                  swift_beginAccess();
                  id v121 = v63;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v133 = *v64;
                  *BOOL v64 = 0x8000000000000000;
                  sub_100351C1C((uint64_t)v63, v50, isUniquelyReferenced_nonNull_native);
                  *BOOL v64 = v133;
                  swift_bridgeObjectRelease();
                  swift_endAccess();
                  uint64_t v66 = *v64;
                  swift_getKeyPath();
                  swift_getKeyPath();
                  uint64_t aBlock = v66;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  uint64_t v47 = v128;
                  static Published.subscript.setter();
                  id v67 = v22;
                  uint64_t v68 = v114;
                  ((void (*)(uint64_t, char *, uint64_t))*v124)(v114, v67, v47);
                  uint64_t v69 = Logger.logObject.getter();
                  os_log_type_t v70 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v69, v70))
                  {
                    uint64_t v71 = swift_slowAlloc();
                    uint64_t aBlock = swift_slowAlloc();
                    *(_DWORD *)uint64_t v71 = v104;
                    uint64_t v72 = URL.absoluteString.getter();
                    *(void *)(v71 + 4) = sub_1000F2280(v72, v73, &aBlock);
                    swift_bridgeObjectRelease();
                    uint64_t v74 = *v115;
                    (*v115)(v68, v128);
                    _os_log_impl((void *)&_mh_execute_header, v69, v70, "-- [Place Summary] Using cached image at url %s", (uint8_t *)v71, 0xCu);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    uint64_t v47 = v128;
                    swift_slowDealloc();
                    swift_unknownObjectRelease();

                    swift_unknownObjectRelease();
                    v74((uint64_t)v67, v47);
                    objc_super v51 = &selRef_daVinciAtmosphereMaxHeight;
                  }
                  else
                  {
                    swift_unknownObjectRelease();

                    unsigned int v85 = *v115;
                    (*v115)(v68, v47);
                    swift_unknownObjectRelease();

                    v85((uint64_t)v67, v47);
                  }
                  uint64_t v8 = v120;
                  uint64_t v46 = (uint64_t)v122;
                  id v22 = v67;
                  unint64_t v45 = v117;
                  uint64_t v48 = v116;
                }
                else
                {
                  id v121 = v59;
                  id v75 = *v124;
                  id v76 = v103;
                  ((void (*)(char *, char *, uint64_t))*v124)(v103, v22, v47);
                  id v77 = Logger.logObject.getter();
                  uint64_t v78 = v47;
                  os_log_type_t v79 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v77, v79))
                  {
                    uint64_t v80 = swift_slowAlloc();
                    uint64_t v81 = swift_slowAlloc();
                    id v112 = v75;
                    uint64_t aBlock = v81;
                    *(_DWORD *)uint64_t v80 = v104;
                    uint64_t v82 = URL.absoluteString.getter();
                    *(void *)(v80 + 4) = sub_1000F2280(v82, v83, &aBlock);
                    swift_bridgeObjectRelease();
                    id v84 = *v115;
                    uint64_t v108 = (unint64_t)v115 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
                    uint64_t v109 = v84;
                    v84((uint64_t)v76, v78);
                    _os_log_impl((void *)&_mh_execute_header, v77, v79, "- [Place Summary] Starting to fetch image at url %s", (uint8_t *)v80, 0xCu);
                    swift_arrayDestroy();
                    id v75 = v112;
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                    id v86 = *v115;
                    uint64_t v108 = (unint64_t)v115 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
                    uint64_t v109 = v86;
                    v86((uint64_t)v76, v78);
                  }

                  id v112 = [self sharedImageManager];
                  URL._bridgeToObjectiveC()(&v137);
                  id v111 = v87;
                  uint64_t v110 = swift_allocObject();
                  swift_unknownObjectWeakInit();
                  uint64_t v88 = v105;
                  ((void (*)(char *, char *, uint64_t))v75)(v105, v22, v78);
                  unint64_t v89 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
                  unint64_t v90 = (v101 + v89) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v91 = (v90 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v92 = (v91 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v93 = (v92 + 23) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v94 = (v93 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v95 = swift_allocObject();
                  ((void (*)(unint64_t, char *, uint64_t))v121)(v95 + v89, v88, v128);
                  *(void *)(v95 + v90) = v106;
                  *(void *)(v95 + v91) = v50;
                  id v96 = (double *)(v95 + v92);
                  double *v96 = v52;
                  v96[1] = v52;
                  *(void *)(v95 + v93) = v110;
                  id v22 = v102;
                  *(void *)(v95 + v94) = v123;
                  v136[2] = sub_1002CDE8C;
                  v136[3] = v95;
                  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
                  uint64_t v135 = 1107296256;
                  v136[0] = sub_1002C9E24;
                  v136[1] = &unk_1012E2220;
                  id v97 = _Block_copy(&aBlock);
                  swift_retain();
                  swift_retain();
                  uint64_t v47 = v128;
                  swift_release();
                  id v98 = v112;
                  uint64_t v99 = v111;
                  [v112 loadAppImageAtURL:v111 completionHandler:v97];
                  _Block_release(v97);
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();

                  v109((uint64_t)v22, v47);
                  uint64_t v8 = v120;
                  uint64_t v46 = (uint64_t)v122;
                  unint64_t v45 = v117;
                  uint64_t v48 = v116;
                  objc_super v51 = &selRef_daVinciAtmosphereMaxHeight;
                }
                goto LABEL_23;
              }
              swift_unknownObjectRelease();
            }
            else
            {
              (*v129)((char *)v46, 1, 1, v47);
            }
            swift_unknownObjectRelease();
            sub_1001F8698(v46);
LABEL_23:
            if (v48 == ++v50) {
              goto LABEL_43;
            }
          }
        }
        __break(1u);
        goto LABEL_45;
      }
    }
LABEL_43:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  if (qword_1015CBD50 != -1) {
LABEL_45:
  }
    swift_once();
  uint64_t v37 = type metadata accessor for Logger();
  sub_1000F2248(v37, (uint64_t)qword_1016117A8);
  os_log_t v132 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v132, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v132, v38, "[Place Summary] No view model to fetch photos for.", v39, 2u);
    swift_slowDealloc();
  }
  os_log_t v40 = v132;
}

void sub_1002CB4DC(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v84 = a9;
  uint64_t v85 = a7;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v79 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v79 - v25;
  unint64_t v83 = a8;
  uint64_t v27 = a8 + 2;
  if (a1)
  {
    uint64_t v81 = a10;
    id v28 = a1;
    [v28 size];
    uint64_t v82 = v28;
    if (v29 <= a2 && ([v28 size], v30 <= a3))
    {
      uint64_t v54 = v81 + 16;
      if (qword_1015CBD50 != -1) {
        swift_once();
      }
      uint64_t v55 = type metadata accessor for Logger();
      sub_1000F2248(v55, (uint64_t)qword_1016117A8);
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v85, v17);
      id v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = swift_slowAlloc();
        uint64_t v80 = v17;
        id v59 = (uint8_t *)v58;
        uint64_t v81 = swift_slowAlloc();
        aBlock[0] = v81;
        unint64_t v83 = (uint64_t *)v54;
        *(_DWORD *)id v59 = 136315138;
        v79[1] = v59 + 4;
        uint64_t v60 = URL.absoluteString.getter();
        uint64_t v88 = sub_1000F2280(v60, v61, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v80);
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "- [Place Summary] Finished fetching image at url %s", v59, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      }

      uint64_t v62 = v82;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        BOOL v64 = (void *)Strong;
        id v65 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27PlaceSummaryImageDownloader_photoCarouselImageCache);

        URL._bridgeToObjectiveC()(v66);
        uint64_t v62 = v82;
        uint64_t v68 = v67;
        [v65 setObject:v82 forKey:v67];
      }
      swift_beginAccess();
      id v69 = v62;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v87 = *v27;
      *uint64_t v27 = 0x8000000000000000;
      sub_100351C1C((uint64_t)a1, v84, isUniquelyReferenced_nonNull_native);
      *uint64_t v27 = v87;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_beginAccess();
      uint64_t v71 = *v27;
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v87 = v71;
      swift_retain();
      swift_bridgeObjectRetain();
      static Published.subscript.setter();
    }
    else
    {
      [v28 size];
      [v28 size];
      [v28 size];
      [v28 size];
      id v31 = (DataSource *)[v28 size];
      CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:)(v31, v32);
      double v34 = v33;
      double v36 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v23, v85, v17);
      unint64_t v37 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      unint64_t v38 = (v19 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v85 = a11;
      unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v42 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v42 + v37, v23, v17);
      id v43 = v82;
      *(void *)(v42 + v38) = v81;
      *(void *)(v42 + v39) = v43;
      uint64_t v44 = v84;
      *(void *)(v42 + v40) = v83;
      *(void *)(v42 + v41) = v44;
      *(void *)(v42 + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8)) = v85;
      aBlock[4] = (uint64_t)sub_1002CE078;
      aBlock[5] = v42;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001DA1FC;
      aBlock[3] = (uint64_t)&unk_1012E2270;
      unint64_t v45 = _Block_copy(aBlock);
      id v46 = v43;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v46 prepareThumbnailOfSize:v45 completionHandler:v34, v36];

      _Block_release(v45);
    }
  }
  else
  {
    unint64_t v83 = v27;
    if (qword_1015CBD50 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_1000F2248(v47, (uint64_t)qword_1016117A8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v26, v85, v17);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      aBlock[0] = v85;
      *(_DWORD *)uint64_t v50 = 136315394;
      uint64_t v51 = URL.absoluteString.getter();
      uint64_t v88 = sub_1000F2280(v51, v52, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
      *(_WORD *)(v50 + 12) = 2112;
      if (a6)
      {
        swift_errorRetain();
        uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v88 = v53;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        uint64_t v88 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v53 = 0;
      }
      *uint64_t v82 = v53;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "- [Place Summary] Couldn't carousel fetch image at url %s error:%@", (uint8_t *)v50, 0x16u);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v72 = v83;
    swift_beginAccess();
    unint64_t v73 = sub_1001EA66C(v84);
    if (v74)
    {
      unint64_t v75 = v73;
      char v76 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v77 = *v72;
      uint64_t v88 = *v72;
      uint64_t *v72 = 0x8000000000000000;
      if ((v76 & 1) == 0)
      {
        sub_10035313C();
        uint64_t v77 = v88;
      }
      uint64_t v78 = *(void **)(*(void *)(v77 + 56) + 8 * v75);
      sub_1002CC920(v75, v77);
      uint64_t *v72 = v77;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
  }
}

uint64_t sub_1002CBE24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v48 = a5;
  uint64_t v49 = a7;
  uint64_t v45 = a6;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  __chkstk_darwin(v8);
  unint64_t v52 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v50 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v44 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v40 - v15;
  if (qword_1015CBD50 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_1000F2248(v17, (uint64_t)qword_1016117A8);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18(v16, a2, v11);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = v13;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v43 = a2;
    aBlock[0] = v23;
    unint64_t v40 = v18;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v42 = v11;
    uint64_t v24 = URL.absoluteString.getter();
    uint64_t v56 = sub_1000F2280(v24, v25, aBlock);
    uint64_t v11 = v42;
    uint64_t v18 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "-- [Place Summary] Finished resizing image for url %s", v22, 0xCu);
    swift_arrayDestroy();
    a2 = v43;
    swift_slowDealloc();
    uint64_t v13 = v41;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }

  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v43 = static OS_dispatch_queue.main.getter();
  uint64_t v26 = v44;
  v18(v44, a2, v11);
  unint64_t v27 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  id v31 = v47;
  *(void *)(v30 + 16) = v46;
  *(void *)(v30 + 24) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v26, v11);
  uint64_t v32 = v49;
  *(void *)(v30 + v28) = v48;
  *(void *)(v30 + v29) = v45;
  *(void *)(v30 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)) = v32;
  aBlock[4] = (uint64_t)sub_1002CE24C;
  aBlock[5] = v30;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10008C380;
  aBlock[3] = (uint64_t)&unk_1012E22C0;
  double v33 = _Block_copy(aBlock);
  swift_retain();
  id v34 = v31;
  swift_retain();
  swift_retain();
  swift_release();
  double v35 = v50;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  double v36 = v52;
  uint64_t v37 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v38 = (void *)v43;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v35, v53);
}

uint64_t sub_1002CC3D0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    id v10 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27PlaceSummaryImageDownloader_photoCarouselImageCache);

    URL._bridgeToObjectiveC()(v11);
    uint64_t v13 = v12;
    [v10 setObject:a2 forKey:v12];
  }
  swift_beginAccess();
  id v14 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(a4 + 16);
  *(void *)(a4 + 16) = 0x8000000000000000;
  sub_100351C1C((uint64_t)a2, a5, isUniquelyReferenced_nonNull_native);
  *(void *)(a4 + 16) = v17;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return static Published.subscript.setter();
}

id sub_1002CC548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryImageDownloader();
  [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryImageDownloader()
{
  return self;
}

uint64_t sub_1002CC5B0@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002CC5C4()
{
  return sub_1002CC6F4();
}

uint64_t sub_1002CC5D8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002CC658()
{
  return static Published.subscript.setter();
}

uint64_t sub_1002CC6CC@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002CC6E0()
{
  return sub_1002CC6F4();
}

uint64_t sub_1002CC6F4()
{
  return static Published.subscript.setter();
}

void sub_1002CC76C(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            os_log_type_t v20 = (void *)(v19 + 8 * v3);
            uint64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *os_log_type_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1002CC920(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        Swift::Int v10 = (void *)(v9 + 8 * v6);
        uint64_t result = static Hasher._hash(seed:_:)();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            id v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *id v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1002CCAB8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *Swift::Int v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1002CCC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::Int v9 = (char *)&v26 - v8;
  if (qword_1015CBD50 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000F2248(v10, (uint64_t)qword_1016117A8);
  id v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v31(v9, a1, v4);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v6;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = a1;
    aBlock[0] = v15;
    uint64_t v29 = v4;
    uint64_t v30 = a2;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v16 = URL.absoluteString.getter();
    uint64_t v33 = sub_1000F2280(v16, v17, aBlock);
    uint64_t v4 = v29;
    a2 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Place Summary] Starting to fetch image at url %s.", v14, 0xCu);
    swift_arrayDestroy();
    a1 = v28;
    swift_slowDealloc();
    uint64_t v6 = v27;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }

  id v18 = [self sharedImageManager];
  URL._bridgeToObjectiveC()(v19);
  BOOL v21 = v20;
  uint64_t v22 = v32;
  v31(v32, a1, v4);
  unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v24 + v23, v22, v4);
  *(void *)(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = (uint64_t)sub_1002CE508;
  aBlock[5] = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002C9E24;
  aBlock[3] = (uint64_t)&unk_1012E23B0;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v18 loadAppImageAtURL:v21 completionHandler:v25];
  _Block_release(v25);
}

void sub_1002CD068(unint64_t a1)
{
  uint64_t v34 = type metadata accessor for URL();
  objc_super v2 = *(char **)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    if (a1 >> 62)
    {
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        unint64_t v36 = a1 & 0xC000000000000001;
        v28[1] = v38;
        id v31 = (void (**)(uint64_t, uint64_t))(v2 + 8);
        uint64_t v32 = (void (**)(char *, id *, uint64_t))(v2 + 32);
        uint64_t v8 = 4;
        uint64_t v35 = v7;
        uint64_t v29 = v4;
        unint64_t v30 = a1;
        while (1)
        {
          uint64_t v12 = v8 - 4;
          if (v36)
          {
            uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v14 = v8 - 3;
            if (__OFADD__(v12, 1)) {
              goto LABEL_19;
            }
          }
          else
          {
            uint64_t v13 = *(void *)(a1 + 8 * v8);
            swift_retain();
            uint64_t v14 = v8 - 3;
            if (__OFADD__(v12, 1))
            {
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
          }
          sub_1002CE3B8(v13 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v6);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              id v16 = *v6;
              objc_super v2 = (char *)Image.init(uiImage:)();
              swift_getKeyPath();
              swift_getKeyPath();
              aBlock[0] = v2;
              static Published.subscript.setter();
            }
            else
            {
              objc_super v2 = (char *)*v6;
              uint64_t v17 = swift_projectBox();
              uint64_t v19 = *(void **)v17;
              id v18 = *(void **)(v17 + 8);
              uint64_t v20 = self;
              id v21 = v18;
              id v22 = v19;
              id v23 = [v20 sharedCache];
              if (!v23)
              {
                __break(1u);
                return;
              }
              uint64_t v24 = v23;
              uint64_t v25 = swift_allocObject();
              *(void *)(v25 + 16) = v13;
              *(void *)(v25 + 24) = v18;
              v38[2] = sub_1002CE45C;
              v38[3] = v25;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              v38[0] = sub_1001DA1FC;
              v38[1] = &unk_1012E2360;
              uint64_t v26 = _Block_copy(aBlock);
              id v27 = v21;
              swift_retain();
              swift_release();
              [v24 getImageForSpec:v22 loadImageOnBackgroundQueue:0 completion:v26];
              _Block_release(v26);
              swift_release();

              swift_release();
              uint64_t v4 = v29;
              a1 = v30;
              uint64_t v7 = v35;
            }
          }
          else
          {
            uint64_t v9 = (uint64_t)v33;
            uint64_t v10 = v34;
            (*v32)(v33, v6, v34);
            sub_1002CCC90(v9, v13);
            swift_release();
            uint64_t v11 = v9;
            uint64_t v7 = v35;
            (*v31)(v11, v10);
          }
          ++v8;
          if (v14 == v7)
          {
            swift_bridgeObjectRelease();
            return;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1002CD490(uint64_t a1)
{
  uint64_t v32 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v32);
  id v31 = (void *)((char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1) {
    return;
  }
  uint64_t v3 = swift_allocObject();
  uint64_t v33 = v3;
  *(void *)(v3 + 16) = _swiftEmptyArrayStorage;
  uint64_t v28 = (uint64_t *)(v3 + 16);
  unint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC4Maps33PlaceSummaryStackedImageViewModel_imageSpecs);
  v27[1] = a1;
  if (v4 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_retain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    id v29 = self;
    unint64_t v30 = v4 & 0xC000000000000001;
    uint64_t v6 = 4;
    uint64_t v7 = v33;
    while (1)
    {
      id v8 = v30 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v4 + 8 * v6);
      uint64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v11 = [v29 sharedCache];
      if (!v11) {
        goto LABEL_28;
      }
      uint64_t v12 = v11;
      aBlock[4] = sub_1002CE2F4;
      aBlock[5] = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1001DA1FC;
      aBlock[3] = &unk_1012E2310;
      uint64_t v13 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v12 getImageForSpec:v9 loadImageOnBackgroundQueue:0 completion:v13];
      _Block_release(v13);

      ++v6;
      if (v10 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain_n();
    swift_retain();
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  uint64_t v14 = v28;
  swift_beginAccess();
  uint64_t v15 = *v14;
  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (v16) {
      goto LABEL_13;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v26 = _swiftEmptyArrayStorage;
LABEL_25:
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v35 = v26;
    swift_retain();
    static Published.subscript.setter();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_24;
  }
LABEL_13:
  uint64_t v35 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0) {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v18 = *(id *)(v15 + 8 * v17 + 32);
      }
      uint64_t v19 = v18;
      ++v17;
      uint64_t v20 = (uint64_t)v31;
      *id v31 = v18;
      swift_storeEnumTagMultiPayload();
      type metadata accessor for PlaceSummaryImageViewModel(0);
      uint64_t v21 = swift_allocObject();
      uint64_t v34 = 0;
      id v22 = v19;
      sub_1000FF33C((uint64_t *)&unk_1015D23C8);
      Published.init(initialValue:)();
      UUID.init()();
      sub_1002CE2FC(v20, v21 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type);
      uint64_t v23 = v21 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
      *(void *)uint64_t v23 = 0;
      *(unsigned char *)(v23 + 8) = 1;
      id v24 = v22;
      uint64_t v25 = Image.init(uiImage:)();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v34 = v25;
      swift_retain();
      static Published.subscript.setter();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v16 != v17);
    uint64_t v26 = v35;
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

id sub_1002CD954(id result)
{
  if (!result) {
    return result;
  }
  unint64_t v1 = (unint64_t)result;
  uint64_t v2 = self;
  swift_bridgeObjectRetain();
  id v3 = [v2 mainScreen];
  id v4 = [v3 traitCollection];

  id v16 = [v4 userInterfaceStyle];
  if (!(v1 >> 62))
  {
    uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_16:
    return (id)swift_bridgeObjectRelease();
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_16;
  }
LABEL_4:
  id v15 = self;
  for (uint64_t i = 4; ; ++i)
  {
    uint64_t v7 = i - 4;
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v9 = i - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(v1 + 8 * i);
      swift_retain();
      uint64_t v9 = i - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    id v10 = [objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec) init];
    [v10 setSize:4];
    id v11 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v8
                                                                + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem), "_styleAttributes"));
    [v10 setStyle:v11];

    [v10 setNightMode:v16 == (id)2];
    [v10 setTransparent:1];
    uint64_t result = [v15 sharedCache];
    if (!result) {
      break;
    }
    uint64_t v12 = result;
    aBlock[4] = sub_1002CDC70;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1001DA1FC;
    aBlock[3] = &unk_1012E2158;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = v10;
    swift_retain();
    swift_release();
    [v12 getImageForSpec:v14 loadImageOnBackgroundQueue:0 completion:v13];
    _Block_release(v13);
    swift_release();

    if (v9 == v5) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

void sub_1002CDC70(void *a1)
{
  sub_1002C9EC8(a1, v1);
}

void sub_1002CDC78(uint64_t a1, void *a2)
{
}

uint64_t sub_1002CDC80@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002CDCA8()
{
  return sub_1002CC6F4();
}

uint64_t sub_1002CDCD8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002CDD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CDD78()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002CDDB0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1002CDE8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1002CB4DC(a1, *(double *)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), a2, a3, a4, v4 + v10, *(uint64_t **)(v4 + v11), *(void *)(v4 + v12), *(void *)(v4 + ((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1002CDF8C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1002CE078(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + v5);
  unint64_t v10 = *(void **)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = *(void *)(v1 + v8);
  uint64_t v13 = *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002CBE24(a1, v1 + v4, v9, v10, v11, v12, v13);
}

uint64_t sub_1002CE144()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002CE24C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1002CC3D0(v4, v5, v0 + v2, v6, v7);
}

uint64_t sub_1002CE2F4(uint64_t a1)
{
  return sub_1002CA5AC(a1, v1);
}

uint64_t sub_1002CE2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CE360@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002CE388()
{
  return sub_1002CC6F4();
}

uint64_t sub_1002CE3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CE41C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002CE45C(void *a1)
{
  sub_1002CA50C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1002CE464()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1002CE508(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1002C989C(a1, a2, a3, a4, v4 + v10, v11);
}

id CuratedCollectionItemLibraryCoordinator.__allocating_init(initialMapItem:dataOperationsProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;
  v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_initialMapItem] = a1;
  *(void *)&v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_dataOperationsProvider] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return [super init];
}

id CuratedCollectionItemLibraryCoordinator.init(initialMapItem:dataOperationsProvider:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;
  v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_initialMapItem] = a1;
  *(void *)&v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_dataOperationsProvider] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CuratedCollectionItemLibraryCoordinator();
  return [super init];
}

uint64_t type metadata accessor for CuratedCollectionItemLibraryCoordinator()
{
  return self;
}

BOOL CuratedCollectionItemLibraryCoordinator.isPlaceInLibrary.getter()
{
  return (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary) & 1) != 0
      || *(void *)(v0 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) != 0;
}

uint64_t CuratedCollectionItemLibraryCoordinator.determineSavedState(completion:)(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_initialMapItem);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1002E65E0(v5, v6, a1, a2);
  swift_release();

  return swift_release();
}

uint64_t sub_1002CE8B8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002CE8F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
}

Swift::Void __swiftcall CuratedCollectionItemLibraryCoordinator.addPlaceToLibrary(refinedMapItem:)(MKMapItem refinedMapItem)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary) = 1;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_dataOperationsProvider);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = v3;
  uint64_t v6 = refinedMapItem.super.isa;
  swift_retain();
  sub_1002E61A0(v6, (uint64_t)sub_1002CEED8, v4, v5, v6, 0, 0, 0, 0);
  swift_release_n();
}

void sub_1002CEAB0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (unsigned char *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    v3[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
  }
}

Swift::Void __swiftcall CuratedCollectionItemLibraryCoordinator.deletePlaceFromLibrary(viewControllerForPresentingAlert:)(UIViewController viewControllerForPresentingAlert)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary);
  if (v2)
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1002DD9E0(v2, viewControllerForPresentingAlert.super.super.isa, (uint64_t)sub_1002CEEE0, v4);
    swift_unknownObjectRelease();
    swift_release_n();
  }
}

void sub_1002CEC5C(char a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if ((a1 & 1) != 0 || a2)
    {
    }
    else
    {
      *(void *)&Strong[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;

      swift_unknownObjectRelease();
    }
  }
}

void CuratedCollectionItemLibraryCoordinator.init()()
{
}

id CuratedCollectionItemLibraryCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CuratedCollectionItemLibraryCoordinator();
  return [super dealloc];
}

void sub_1002CEE38(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (unsigned char *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) = a1;
    swift_unknownObjectRetain();
    uint64_t v7 = swift_unknownObjectRelease();
    v6[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
    a3(v7);
  }
}

void sub_1002CEED8(uint64_t a1)
{
}

void sub_1002CEEE0(char a1, uint64_t a2)
{
}

uint64_t sub_1002CEEE8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1002CF050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  *(double *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth] = a9;
  *(double *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barWidth] = a10;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor] = a1;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_dotStrokeColor] = a2;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barHighlightColor] = a3;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barElapsedColor] = a4;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gradientColors] = a5;
  sub_1002D02D4(a6, (uint64_t)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_blendMode]);
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor] = a7;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_xAxisFont] = a8;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridColor] = a12;
  *(void *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridHighlightColor] = a13;
  *(double *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridLineWidth] = a11;
  v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle] = a14;
  v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition] = a15;
  v22.receiver = v15;
  v22.super_class = (Class)type metadata accessor for MapsElevationChartStyle();
  id v20 = [super init];
  sub_1002D033C(a6);
  return v20;
}

id sub_1002CF1A8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1A20);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)aBlock - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = self;
  id v4 = [v3 labelColor];
  id v5 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_1002CF440;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1002D039C;
  aBlock[3] = &unk_1012E24B8;
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = [v5 initWithDynamicProvider:v6];
  _Block_release(v6);
  swift_release();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100F5F0D0;
  id v9 = [v3 labelColor];
  id v10 = [v9 colorWithAlphaComponent:0.16];

  *(void *)(v8 + 32) = v10;
  id v11 = [v3 labelColor];
  id v12 = [v11 colorWithAlphaComponent:0.0];

  *(void *)(v8 + 40) = v12;
  aBlock[0] = v8;
  specialized Array._endMutation()();
  uint64_t v13 = aBlock[0];
  uint64_t v14 = type metadata accessor for BlendMode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 1, 1, v14);
  id v15 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle());
  id result = sub_1002CF050((uint64_t)v4, (uint64_t)v7, 0, 0, v13, (uint64_t)v2, 0, 0, 1.0, 3.0, 0.5, 0, 0, 5, 0);
  qword_101611BD8 = (uint64_t)result;
  return result;
}

id sub_1002CF440(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  objc_super v2 = self;
  uint64_t v3 = &selRef_secondarySystemGroupedBackgroundColor;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_systemWhiteColor;
  }
  id v4 = [v2 *v3];

  return v4;
}

id sub_1002CF4D0()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1A20);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = self;
  id v4 = [v3 secondaryLabelColor];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F5F0D0;
  id v6 = [v3 systemBlackColor];
  id v7 = [v6 colorWithAlphaComponent:0.16];

  *(void *)(v5 + 32) = v7;
  id v8 = [v3 systemBlackColor];
  id v9 = [v8 colorWithAlphaComponent:0.0];

  *(void *)(v5 + 40) = v9;
  uint64_t v15 = v5;
  specialized Array._endMutation()();
  uint64_t v10 = v15;
  uint64_t v11 = type metadata accessor for BlendMode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  id v12 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle());
  id result = sub_1002CF050((uint64_t)v4, 0, 0, 0, v10, (uint64_t)v2, 0, 0, 1.0, 2.0, 1.5, 0, 0, 4, 0);
  qword_101611BE0 = (uint64_t)result;
  return result;
}

id sub_1002CF6F0()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1A20);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self tertiaryLabelColor];
  uint64_t v4 = type metadata accessor for BlendMode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  id v5 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle());
  id result = sub_1002CF050((uint64_t)v3, 0, 0, 0, 0, (uint64_t)v2, 0, 0, 1.0, 2.0, 1.5, 0, 0, 0, 0);
  qword_101611BE8 = (uint64_t)result;
  return result;
}

id sub_1002CF838()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1A20);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = self;
  id v4 = [v3 systemTealColor];
  uint64_t v5 = type metadata accessor for BlendMode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  id v6 = [v3 secondaryLabelColor];
  id v7 = [v3 systemGray5Color];
  id v8 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle());
  id result = sub_1002CF050((uint64_t)v4, 0, 0, 0, 0, (uint64_t)v2, (uint64_t)v6, 0, 1.0, 2.0, 1.5, (uint64_t)v7, 0, 1, 0);
  qword_101611BF0 = (uint64_t)result;
  return result;
}

id sub_1002CF9D4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1A20);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = self;
  id v4 = [v3 systemTealColor];
  id v5 = [v3 systemTealColor];
  id v6 = [v5 colorWithAlphaComponent:0.5];

  uint64_t v7 = type metadata accessor for BlendMode();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  id v8 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.8 alpha:1.0];
  id v9 = [self systemFontOfSize:11.0 weight:UIFontWeightRegular];
  id v10 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.8 alpha:1.0];
  id v11 = [v3 whiteColor];
  id v12 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle());
  id result = sub_1002CF050((uint64_t)v4, 0, 0, (uint64_t)v6, 0, (uint64_t)v2, (uint64_t)v8, (uint64_t)v9, 1.0, 4.0, 1.5, (uint64_t)v10, (uint64_t)v11, 2, 1);
  qword_101611BF8 = (uint64_t)result;
  return result;
}

id sub_1002CFC14(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  id v5 = *a4;

  return v5;
}

void *sub_1002CFC84()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gradientColors);
  if (!v1) {
    goto LABEL_16;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v2 & 0x8000000000000000) == 0)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = 0;
        do
        {
          uint64_t v5 = v4 + 1;
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          Color.init(_:)();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        id v6 = (void **)(v1 + 32);
        do
        {
          uint64_t v7 = *v6++;
          id v8 = v7;
          Color.init(_:)();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          --v2;
        }
        while (v2);
      }
      return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_16:
    id result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id sub_1002CFE58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsElevationChartStyle();
  return [super dealloc];
}

uint64_t sub_1002CFF5C()
{
  return type metadata accessor for MapsElevationChartStyle();
}

uint64_t type metadata accessor for MapsElevationChartStyle()
{
  uint64_t result = qword_1015D9C78;
  if (!qword_1015D9C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002CFFB0()
{
  sub_1002D0090();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002D0090()
{
  if (!qword_1015D9C88)
  {
    type metadata accessor for BlendMode();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D9C88);
    }
  }
}

uint64_t getEnumTagSinglePayload for MapsElevationChartStyle.ContextStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MapsElevationChartStyle.ContextStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D0244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsElevationChartStyle.ContextStyle()
{
  return &type metadata for MapsElevationChartStyle.ContextStyle;
}

unint64_t sub_1002D0280()
{
  unint64_t result = qword_1015D9C90;
  if (!qword_1015D9C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9C90);
  }
  return result;
}

uint64_t sub_1002D02D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D1A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D033C(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D1A20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1002D039C(uint64_t a1, void *a2)
{
  int v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  swift_release();

  return v5;
}

id CarEVChargingAvailabilityViewController.__allocating_init(viewModal:)(void *a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC4Maps39CarEVChargingAvailabilityViewController_viewModal] = a1;
  v7.receiver = v3;
  v7.super_class = v1;
  id v4 = a1;
  id v5 = [super initWithNibName:0 bundle:0];
  swift_unknownObjectWeakAssign();

  return v5;
}

id CarEVChargingAvailabilityViewController.init(viewModal:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps39CarEVChargingAvailabilityViewController_viewModal] = a1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CarEVChargingAvailabilityViewController();
  id v3 = a1;
  [super initWithNibName:0 bundle:0];
  swift_unknownObjectWeakAssign();

  return v4;
}

uint64_t type metadata accessor for CarEVChargingAvailabilityViewController()
{
  return self;
}

Swift::Void __swiftcall CarEVChargingAvailabilityViewController.loadView()()
{
  type metadata accessor for CarEVChargingAvailabilityView();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v0 setView:v1];
}

uint64_t type metadata accessor for CarEVChargingAvailabilityView()
{
  return self;
}

Swift::Void __swiftcall CarEVChargingAvailabilityViewController.viewDidLoad()()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CarEVChargingAvailabilityViewController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for CarEVChargingAvailabilityView();
    if (swift_dynamicCastClass())
    {
      uint64_t v3 = swift_bridgeObjectRetain();
      sub_1002D07DC(v3);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1002D07DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v74 = a1;
  uint64_t v86 = sub_1000FF33C(&qword_1015CF9B8);
  uint64_t v79 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v85 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v84 = (char *)&v74 - v5;
  __chkstk_darwin(v6);
  unint64_t v83 = (char *)&v74 - v7;
  __chkstk_darwin(v8);
  uint64_t v96 = (uint64_t)&v74 - v9;
  uint64_t v10 = sub_1000FF33C(&qword_1015D9E30);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v78 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015D9E38);
  __chkstk_darwin(v13 - 8);
  uint64_t v88 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v74 - v16;
  id v17 = sub_1002D14CC();
  id v18 = [v17 arrangedSubviews];

  sub_100100830(0, (unint64_t *)&qword_1015CF000);
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v20) {
      goto LABEL_10;
    }
  }
  if (v20 < 1)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v21 = 0;
  do
  {
    if ((v19 & 0xC000000000000001) != 0) {
      id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v22 = *(id *)(v19 + 8 * v21 + 32);
    }
    uint64_t v23 = v22;
    ++v21;
    id v24 = sub_1002D14CC();
    [v24 _maps_removeArrangedSubview:v23];
  }
  while (v20 != v21);
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v76 = *(void *)(v74 + 16);
  if (v76)
  {
    uint64_t v75 = v74 + 32;
    unint64_t v92 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
    unint64_t v93 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    long long v82 = xmmword_100F5F0D0;
    id v27 = (uint64_t *)v87;
    uint64_t v26 = (unint64_t *)v88;
    uint64_t v80 = v10;
    uint64_t v81 = v2;
    while (2)
    {
      uint64_t v77 = v25;
      uint64_t v28 = v75 + 24 * v25;
      uint64_t v29 = *(void *)(v28 + 8);
      uint64_t v30 = *(void *)(v28 + 16);
      swift_bridgeObjectRetain();
      if (v29)
      {
        swift_bridgeObjectRetain();
        id v31 = sub_1002D2364();
        NSString v32 = String._bridgeToObjectiveC()();
        [v31 setText:v32];

        id v33 = sub_1002D14CC();
        [v33 addArrangedSubview:v31];

        id v34 = sub_1002D14CC();
        [v34 setCustomSpacing:v31 afterView:4.0];
      }
      ++v77;
      unint64_t v35 = *(void *)(v30 + 16);
      swift_bridgeObjectRetain();
      unint64_t v36 = 0;
      uint64_t v90 = v29;
      uint64_t v91 = v30;
      unint64_t v89 = v35;
      while (1)
      {
        if (v36 == v35)
        {
          uint64_t v37 = 1;
          unint64_t v38 = v35;
        }
        else
        {
          if (v36 >= *(void *)(v30 + 16))
          {
            __break(1u);
            goto LABEL_28;
          }
          unint64_t v38 = v36 + 1;
          uint64_t v39 = (uint64_t)&v78[*(int *)(v10 + 48)];
          sub_1002D28DC(v30+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ *(void *)(v79 + 72) * v36, v39);
          uint64_t v40 = (uint64_t)v26 + *(int *)(v10 + 48);
          unint64_t *v26 = v36;
          sub_100101750(v39, v40, &qword_1015CF9B8);
          uint64_t v37 = 0;
        }
        (*v93)(v26, v37, 1, v10);
        sub_100101750((uint64_t)v26, (uint64_t)v27, &qword_1015D9E38);
        if ((*v92)(v27, 1, v10) == 1) {
          break;
        }
        uint64_t v41 = *v27;
        unint64_t v94 = v38;
        uint64_t v95 = v41;
        uint64_t v42 = (char *)v27 + *(int *)(v10 + 48);
        uint64_t v43 = v86;
        uint64_t v44 = *(int *)(v86 + 48);
        uint64_t v45 = *(void **)&v42[v44];
        uint64_t v46 = type metadata accessor for AttributedString();
        uint64_t v47 = *(void *)(v46 - 8);
        uint64_t v48 = v96;
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
        uint64_t v50 = v83;
        v49(v83, v42, v46);
        *(void *)&v50[v44] = v45;
        uint64_t v51 = *(int *)(v43 + 48);
        v49((char *)v48, v50, v46);
        *(void *)(v48 + v51) = v45;
        uint64_t v52 = *(int *)(v43 + 48);
        uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        uint64_t v54 = (uint64_t)v84;
        v53(v84, v48, v46);
        *(void *)(v54 + v52) = v45;
        uint64_t v55 = *(int *)(v43 + 48);
        uint64_t v56 = v85;
        v53(v85, v48, v46);
        *(void *)&v56[v55] = v45;
        id v57 = objc_allocWithZone((Class)type metadata accessor for CarEVChargingRowView());
        id v58 = v45;
        id v59 = sub_1002D24D8(v54, v58);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v56, v46);
        [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v60 = sub_1002D14CC();
        [v60 addArrangedSubview:v59];

        uint64_t v61 = self;
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = v82;
        id v63 = [v59 leadingAnchor];
        id v64 = sub_1002D14CC();
        id v65 = [v64 leadingAnchor];

        id v66 = [v63 constraintEqualToAnchor:v65];
        *(void *)(v62 + 32) = v66;
        id v67 = [v59 trailingAnchor];
        id v68 = sub_1002D14CC();
        id v69 = [v68 trailingAnchor];

        id v70 = [v67 constraintEqualToAnchor:v69];
        *(void *)(v62 + 40) = v70;
        uint64_t v97 = v62;
        specialized Array._endMutation()();
        sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v72 = (void *)v61;
        uint64_t v30 = v91;
        [v72 activateConstraints:isa];

        if (v95 == *(void *)(v30 + 16) - 1)
        {
          id v73 = sub_1002D14CC();
          [v73 setCustomSpacing:v59 afterView:8.0];

          sub_1002D2944(v96);
        }
        else
        {
          sub_1002D2944(v96);
        }
        uint64_t v10 = v80;
        id v27 = (uint64_t *)v87;
        uint64_t v26 = (unint64_t *)v88;
        unint64_t v35 = v89;
        unint64_t v36 = v94;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v25 = v77;
      if (v77 != v76) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease();
  }
}

void CarEVChargingAvailabilityViewController.evChargingViewModelDidUpdate(_:)()
{
  id v2 = [v0 view];
  if (v2)
  {
    type metadata accessor for CarEVChargingAvailabilityView();
    if (swift_dynamicCastClass())
    {
      uint64_t v1 = swift_bridgeObjectRetain();
      sub_1002D07DC(v1);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

Swift::Void __swiftcall CarEVChargingAvailabilityViewController.configureForModalPresentation()()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    [v1 setDirectionalLayoutMargins:16.0, 16.0, 16.0, 16.0];
  }
  else
  {
    __break(1u);
  }
}

void CarEVChargingAvailabilityViewController.init(nibName:bundle:)()
{
}

id CarEVChargingAvailabilityViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarEVChargingAvailabilityViewController();
  return [super dealloc];
}

id sub_1002D14CC()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:1];
    [v4 setSpacing:2.0];
    [v4 setAlignment:1];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setLayoutMarginsRelativeArrangement:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1002D15A4()
{
  uint64_t v1 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F62DB0;
  id v3 = sub_1002D14CC();
  id v4 = [v3 leadingAnchor];

  id v5 = [v0 layoutMarginsGuide];
  id v6 = [v5 leadingAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6];
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1002D14CC();
  id v9 = [v8 topAnchor];

  id v10 = [v0 layoutMarginsGuide];
  id v11 = [v10 topAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11];
  *(void *)(v2 + 40) = v12;
  id v13 = sub_1002D14CC();
  id v14 = [v13 trailingAnchor];

  id v15 = [v0 layoutMarginsGuide];
  id v16 = [v15 trailingAnchor];

  id v17 = [v14 constraintEqualToAnchor:v16];
  *(void *)(v2 + 48) = v17;
  id v18 = sub_1002D14CC();
  id v19 = [v18 bottomAnchor];

  id v20 = [v0 layoutMarginsGuide];
  id v21 = [v20 bottomAnchor];

  id v22 = [v19 constraintLessThanOrEqualToAnchor:v21];
  *(void *)(v2 + 56) = v22;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 activateConstraints:isa];
}

id CarEVChargingAvailabilityView.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

void CarEVChargingAvailabilityView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1002D19E0()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v1];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v2) = 1148846080;
  [v0 setContentHuggingPriority:0 forAxis:v2];
  LODWORD(v3) = 1148846080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v3];
  id v4 = [self _mapsCar_fontForTextStyle:UIFontTextStyleCaption1 weight:UIFontWeightRegular];
  [v0 setFont:v4];

  id v5 = [self labelColor];
  [v0 setTextColor:v5];

  return v0;
}

id sub_1002D1B44(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1002D1BA4()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v1];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v2) = 1148846080;
  [v0 setContentHuggingPriority:0 forAxis:v2];
  LODWORD(v3) = 1148846080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v3];
  id v4 = [self _mapsCar_fontForTextStyle:UIFontTextStyleCaption1 weight:UIFontWeightRegular];
  [v0 setFont:v4];

  [v0 setTextAlignment:2];
  return v0;
}

void sub_1002D1CE4()
{
  id v31 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F6B7E0;
  id v2 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1002D19E0);
  id v3 = [v2 leadingAnchor];

  id v4 = [v0 leadingAnchor];
  id v5 = [v3 constraintEqualToAnchor:v4];

  *(void *)(v1 + 32) = v5;
  id v6 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1002D19E0);
  id v7 = [v6 topAnchor];

  id v8 = [v0 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v1 + 40) = v9;
  id v10 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1002D19E0);
  id v11 = [v10 bottomAnchor];

  id v12 = [v0 bottomAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v1 + 48) = v13;
  id v14 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1002D19E0);
  id v15 = [v14 trailingAnchor];

  id v16 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1002D1BA4);
  id v17 = [v16 leadingAnchor];

  id v18 = [v15 constraintLessThanOrEqualToAnchor:v17 constant:8.0];
  *(void *)(v1 + 56) = v18;
  id v19 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1002D1BA4);
  id v20 = [v19 trailingAnchor];

  id v21 = [v0 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v1 + 64) = v22;
  id v23 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1002D1BA4);
  id v24 = [v23 topAnchor];

  id v25 = [v0 topAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v1 + 72) = v26;
  id v27 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1002D1BA4);
  id v28 = [v27 bottomAnchor];

  id v29 = [v0 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v1 + 80) = v30;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v31 activateConstraints:isa];
}

uint64_t sub_1002D2268()
{
  return type metadata accessor for CarEVChargingRowView();
}

uint64_t type metadata accessor for CarEVChargingRowView()
{
  uint64_t result = qword_1015D9DA8;
  if (!qword_1015D9DA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002D22BC()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1002D2364()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v1];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v2) = 1148846080;
  [v0 setContentHuggingPriority:0 forAxis:v2];
  LODWORD(v3) = 1148846080;
  [v0 setContentCompressionResistancePriority:0 forAxis:v3];
  id v4 = [self _mapsCar_fontForTextStyle:UIFontTextStyleFootnote weight:UIFontWeightBold];
  [v0 setFont:v4];

  id v5 = [self labelColor];
  [v0 setTextColor:v5];

  [v0 setTextAlignment:0];
  return v0;
}

char *sub_1002D24D8(uint64_t a1, void *a2)
{
  double v3 = v2;
  uint64_t v23 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel] = 0;
  id v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v22(&v3[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_leadingText], a1, v7, v9);
  *(void *)&v3[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_trailingText] = a2;
  v24.receiver = v3;
  v24.super_class = ObjectType;
  id v12 = a2;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v13 setDirectionalLayoutMargins:0.0, 8.0, 0.0, 8.0];
  id v14 = (char *)v13;
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setAccessibilityIdentifier:v15];

  id v16 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1002D19E0);
  [v14 addSubview:v16];

  id v17 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1002D1BA4);
  [v14 addSubview:v17];

  sub_1002D1CE4();
  id v18 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1002D19E0);
  sub_100100830(0, (unint64_t *)&unk_1015CF9C0);
  ((void (*)(char *, char *, uint64_t))v22)(v11, &v14[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_leadingText], v7);
  id v19 = NSAttributedString.init(_:)();
  [v18 setAttributedText:v19];

  id v20 = sub_1002D1B44(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1002D1BA4);
  [v20 setAttributedText:*(void *)&v14[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_trailingText]];

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v23, v7);
  return v14;
}

id sub_1002D27EC()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView] = 0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  id v2 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityIdentifier:v3];

  [v2 setDirectionalLayoutMargins:NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing];
  id v4 = sub_1002D14CC();
  [v2 addSubview:v4];

  sub_1002D15A4();
  return v2;
}

uint64_t sub_1002D28DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CF9B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D2944(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CF9B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1002D29A8()
{
  unint64_t result = qword_1015D9EA0;
  if (!qword_1015D9EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EA0);
  }
  return result;
}

uint64_t sub_1002D29FC()
{
  return sub_1001010F8(&qword_1015D9EA8, &qword_1015D9EB0);
}

uint64_t sub_1002D2A38()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611C40);
  sub_1000F2248(v10, (uint64_t)qword_101611C40);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1002D2D10()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611C58);
  sub_1000F2248(v0, (uint64_t)qword_101611C58);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1002D2D74()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611C70);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611C70);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1002D2E2C()
{
  uint64_t result = swift_getKeyPath();
  qword_101611C88 = result;
  return result;
}

uint64_t sub_1002D2E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1002D2E78, 0, 0);
}

uint64_t sub_1002D2E78()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBF70 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611C88;
  *(void *)(v0 + 80) = qword_101611C88;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D9FB0, &qword_1015D9FB8);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_1002D2FD4;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_1002D2FD4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_1002D3128;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002D3128()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611C88;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_1002D3204()
{
  if (qword_1015CBF70 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1002D3264()
{
  unint64_t result = qword_1015D9EB8;
  if (!qword_1015D9EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EB8);
  }
  return result;
}

unint64_t sub_1002D32BC()
{
  unint64_t result = qword_1015D9EC0;
  if (!qword_1015D9EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EC0);
  }
  return result;
}

uint64_t sub_1002D3310()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1002D3344()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002D3394@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBF60, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611C58, a1);
}

uint64_t sub_1002D33CC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBF68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611C70);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_1002D3448(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1002D2E78, 0, 0);
}

uint64_t sub_1002D34FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002D4388();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1002D3524()
{
  return 0xD000000000000030;
}

unint64_t sub_1002D3544()
{
  unint64_t result = qword_1015D9ED0;
  if (!qword_1015D9ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9ED0);
  }
  return result;
}

unint64_t sub_1002D359C()
{
  unint64_t result = qword_1015D9ED8;
  if (!qword_1015D9ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9ED8);
  }
  return result;
}

unint64_t sub_1002D35F4()
{
  unint64_t result = qword_1015D9EE0;
  if (!qword_1015D9EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EE0);
  }
  return result;
}

unint64_t sub_1002D364C()
{
  unint64_t result = qword_1015D9EE8;
  if (!qword_1015D9EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EE8);
  }
  return result;
}

unint64_t sub_1002D36A4()
{
  unint64_t result = qword_1015D9EF0;
  if (!qword_1015D9EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EF0);
  }
  return result;
}

unint64_t sub_1002D36FC()
{
  unint64_t result = qword_1015D9EF8;
  if (!qword_1015D9EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9EF8);
  }
  return result;
}

uint64_t sub_1002D3750(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002D3770, 0, 0);
}

uint64_t sub_1002D3770()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 isModeDisabled:4];
  unsigned char *v1 = v2 ^ 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002D3844(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1002D3868, 0, 0);
}

uint64_t sub_1002D3868()
{
  char v1 = *(unsigned char *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  [v3 setMode:4 disabled:(v1 & 1) == 0];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1002D3974()
{
  unint64_t result = qword_1015D9F00;
  if (!qword_1015D9F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F00);
  }
  return result;
}

unint64_t sub_1002D39CC()
{
  unint64_t result = qword_1015D9F08;
  if (!qword_1015D9F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F08);
  }
  return result;
}

unint64_t sub_1002D3A24()
{
  unint64_t result = qword_1015D9F10;
  if (!qword_1015D9F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F10);
  }
  return result;
}

unint64_t sub_1002D3A7C()
{
  unint64_t result = qword_1015D9F18;
  if (!qword_1015D9F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F18);
  }
  return result;
}

uint64_t sub_1002D3AD0@<X0>(uint64_t *a1@<X8>)
{
  sub_1002D3D1C();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002D3B10@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBF58, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611C40, a1);
}

uint64_t sub_1002D3B48()
{
  return sub_1001010F8(&qword_1015D9F20, &qword_1015D9F28);
}

uint64_t sub_1002D3B84(uint64_t a1)
{
  unint64_t v2 = sub_1002D3544();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002D3BD4()
{
  unint64_t result = qword_1015D9F30;
  if (!qword_1015D9F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F30);
  }
  return result;
}

uint64_t sub_1002D3C28(uint64_t a1)
{
  unint64_t v2 = sub_1002D3D1C();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1002D3C74(uint64_t a1)
{
  unint64_t v2 = sub_1002D3A7C();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1002D3CC4()
{
  unint64_t result = qword_1015D9F38;
  if (!qword_1015D9F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F38);
  }
  return result;
}

unint64_t sub_1002D3D1C()
{
  unint64_t result = qword_1015D9F40[0];
  if (!qword_1015D9F40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D9F40);
  }
  return result;
}

uint64_t sub_1002D3D70(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1002D3E00, 0, 0);
}

uint64_t sub_1002D3E00()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D9EB0);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D9FB0, &qword_1015D9FB8);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002D3F10(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002D359C();
  void *v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1002D3FC4()
{
  unint64_t result = qword_1015D9F58;
  if (!qword_1015D9F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F58);
  }
  return result;
}

unint64_t sub_1002D401C()
{
  unint64_t result = qword_1015D9F60[0];
  if (!qword_1015D9F60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D9F60);
  }
  return result;
}

uint64_t sub_1002D4070(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002D359C();
  void *v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1002D4124(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1002D359C();
  void *v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1002D41D8()
{
  unint64_t result = qword_1015D9F78;
  if (!qword_1015D9F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F78);
  }
  return result;
}

unint64_t sub_1002D4230()
{
  unint64_t result = qword_1015D9F80;
  if (!qword_1015D9F80)
  {
    sub_10010118C(qword_1015D9F88);
    sub_1002D3A24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D9F80);
  }
  return result;
}

uint64_t sub_1002D42A4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002D36FC();
  void *v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransitPreferCommuterRailQuery()
{
  return &type metadata for TransitPreferCommuterRailQuery;
}

ValueMetadata *type metadata accessor for TransitPreferCommuterRailEntity.UpdateIntent_value()
{
  return &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for TransitPreferCommuterRailEntity()
{
  return &type metadata for TransitPreferCommuterRailEntity;
}

uint64_t sub_1002D4388()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  id v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D9FC0);
  LocalizedStringResource.init(stringLiteral:)();
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  id v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  id v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1002D3544();
  id v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1002D47C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

id PlaceNoteEditViewController.__allocating_init(note:)(uint64_t a1, unint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return PlaceNoteEditViewController.init(note:)(a1, a2);
}

uint64_t sub_1002D4818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a3)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  v4(a2, v5, v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1002D48A4(char a1, uint64_t a2, NSString a3, uint64_t a4)
{
  if (a3) {
    a3 = String._bridgeToObjectiveC()();
  }
  id v6 = a3;
  (*(void (**)(uint64_t, void))(a4 + 16))(a4, a1 & 1);
}

Swift::Int sub_1002D4910(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  Substring.init<A>(_:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  Substring.init<A>(_:)();
  uint64_t v15 = v14;
  Swift::Int result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    Swift::Int result = sub_10021C468(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    Swift::Int result = String.UTF8View._foreignDistance(from:to:)();
    Swift::Int v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    Swift::Int v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unsigned __int16 v33 = v20;
    Swift::Int v34 = v22;
    Swift::Int result = sub_10021C468(v33, a5, a6);
    Swift::Int v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unsigned __int16 v35 = v26;
    Swift::Int v36 = v22;
    Swift::Int result = sub_10021C468(v35, a5, a6);
    Swift::Int v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    Swift::Int v37 = v22;
    uint64_t v38 = String.UTF8View._foreignDistance(from:to:)();
    Swift::Int v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        Swift::Int result = HIBYTE(a4) & 0xF;
        Swift::Int v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        Swift::Int result = v40 & 0xFFFFFFFFFFFFLL;
        Swift::Int v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    Swift::Int v39 = v22;
    Swift::Int result = String.UTF8View._foreignCount()();
    Swift::Int v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      Swift::Int result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        String.reserveCapacity(_:)(result);
LABEL_25:
        String.subscript.getter();
        sub_1002D6F04();
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        String.append<A>(contentsOf:)();
        sub_1002D6D9C(a2, a5, a6);
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

void sub_1002D4C58()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8];
  if (v2)
  {
    uint64_t v3 = *(void *)v1 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(v2) & 0xF;
    }
    if (!v3)
    {
      *(void *)uint64_t v1 = 0;
      *((void *)v1 + 1) = 0;
      swift_bridgeObjectRelease();
    }
  }
  if ([v0 isViewLoaded])
  {
    id v4 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
    id v5 = [v4 trailingButton];

    [v5 setEnabled:*((void *)v1 + 1) != 0];
  }
}

uint64_t PlaceNoteEditViewController.dismissHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1000F4F24(*v1);
  return v2;
}

uint64_t PlaceNoteEditViewController.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t *v5 = a1;
  v5[1] = a2;
  return sub_10006C5D8(v6);
}

uint64_t (*PlaceNoteEditViewController.dismissHandler.modify())()
{
  return j__swift_endAccess;
}

id sub_1002D4FE8(uint64_t a1)
{
  id v2 = [self defaultModalCardHeaderConfiguration];
  id v3 = [objc_allocWithZone((Class)ModalCardHeaderView) initWithConfiguration:v2];

  [v3 setUseAdaptiveFont:1];
  id v4 = [v3 bottomHairline];
  [v4 setHidden:1];

  id v5 = [v3 leadingButton];
  NSString v6 = sub_100AEBD5C();
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v5 setTitle:v6 forState:0];

  id v7 = [v3 leadingButton];
  [v7 addTarget:a1 action:"cancelTapped" forControlEvents:64];

  id v8 = [v3 trailingButton];
  NSString v9 = sub_100AEBDC4();
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v8 setTitle:v9 forState:0];

  id v10 = [v3 trailingButton];
  [v10 addTarget:a1 action:"doneTapped" forControlEvents:64];

  return v3;
}

id sub_1002D51E8()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView);
  }
  else
  {
    id v4 = sub_1002505F0();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002D5248(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id PlaceNoteEditViewController.init(note:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_defaultPadding] = 0x4030000000000000;
  id v7 = &v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  id v8 = &v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView] = 0;
  if (a2) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v9 = 0;
  }
  if (a2) {
    unint64_t v10 = a2;
  }
  else {
    unint64_t v10 = 0xE000000000000000;
  }
  uint64_t v11 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    a1 = 0;
    a2 = 0;
  }
  uint64_t v13 = &v11[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_originalNote];
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = a2;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  v17.receiver = v11;
  v17.super_class = ObjectType;
  [super initWithNibName:0 bundle:0];
  id result = [v14 cardPresentationController];
  if (result)
  {
    uint64_t v16 = result;
    [result setTakesAvailableHeight:1];

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall PlaceNoteEditViewController.viewDidLoad()()
{
  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  id v3 = [self clearColor];
  [v2 setBackgroundColor:v3];

  id v4 = [v0 cardPresentationController];
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v5 = v4;
  [v4 setTakesAvailableHeight:1];

  id v6 = [v0 cardPresentationController];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v7 = v6;
  [v6 setPresentedModally:1];

  id v8 = [v0 cardPresentationController];
  if (!v8)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  [v8 setAllowsSwipeToDismiss:0];

  sub_1002D5670();
  sub_1002D5C78();
  if ([v0 isViewLoaded])
  {
    id v10 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
    id v11 = [v10 trailingButton];

    [v11 setEnabled:*(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8] != 0];
  }
}

void sub_1002D5670()
{
  id v1 = v0;
  id v2 = [v0 headerView];
  if (!v2) {
    return;
  }
  id v3 = v2;
  id v4 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
  uint64_t v42 = v3;
  [v3 addSubview:v4];

  id v5 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
  id v6 = &v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8];
  id v8 = self;
  uint64_t v9 = &selRef_addANoteTitle;
  if (v7) {
    uint64_t v9 = &selRef_editNoteTitle;
  }
  id v10 = [v8 *v9];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setTitle:v11];

  id v12 = [objc_allocWithZone((Class)FooterContaineeAction) init];
  uint64_t v13 = self;
  id v14 = v12;
  NSString v15 = [v13 deleteNoteButtonLabel];
  if (!v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v14 setTitle:v15];

  id v16 = v14;
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setGlyph:v17];

  [v16 setStyle:1];
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1002D6F90;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10025DB88;
  aBlock[3] = &unk_1012E2620;
  unint64_t v19 = _Block_copy(aBlock);
  swift_release();
  [v16 setActionBlock:v19];
  _Block_release(v19);
  id v20 = v16;
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityIdentifier:v21];

  id v22 = v20;
  NSString v23 = [v22 title];
  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v22 setAccessibilityLabel:v23];

  id v24 = [objc_allocWithZone((Class)MUActionGroupSectionView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  [v25 setAccessibilityIdentifier:v26];

  sub_1000FF33C(&qword_1015CD310);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100F5DFF0;
  *(void *)(v27 + 32) = v22;
  aBlock[0] = v27;
  specialized Array._endMutation()();
  id v28 = v22;
  sub_1000FF33C(&qword_1015DA048);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setViewModels:isa];

  id v30 = [self cardShadowSectionViewForContentView:v25 sectionHeaderViewModel:0];
  [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::Int v31 = *(void **)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView];
  *(void *)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView] = v30;
  id v32 = v30;

  id v33 = [v1 view];
  if (!v33)
  {
    __break(1u);
    goto LABEL_16;
  }
  Swift::Int v34 = v33;
  [v33 addSubview:v32];

  id v35 = [v1 view];
  if (!v35)
  {
LABEL_16:
    __break(1u);
    return;
  }
  Swift::Int v36 = v35;
  id v37 = sub_1002D51E8();
  [v36 addSubview:v37];

  id v38 = sub_1002D51E8();
  id v39 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  [v38 addSubview:v39];

  id v40 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
  if (*((void *)v6 + 1))
  {
    swift_bridgeObjectRetain();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v41 = 0;
  }
  [v40 setText:v41];
}

void sub_1002D5C78()
{
  id v1 = v0;
  Class v2 = (Class)[v0 headerView];
  if (!v2) {
    return;
  }
  id v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView];
  if (v3)
  {
    Class v103 = v2;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100F6BE00;
    id v5 = v3;
    id v6 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
    id v7 = [v6 leadingAnchor];

    id v8 = [(objc_class *)v103 leadingAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    *(void *)(v4 + 32) = v9;
    id v10 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
    id v11 = [v10 topAnchor];

    id v12 = [(objc_class *)v103 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    *(void *)(v4 + 40) = v13;
    id v14 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
    id v15 = [v14 trailingAnchor];

    id v16 = [(objc_class *)v103 trailingAnchor];
    id v17 = [v15 constraintEqualToAnchor:v16];

    *(void *)(v4 + 48) = v17;
    id v18 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1002D4FE8);
    id v19 = [v18 bottomAnchor];

    id v20 = [(objc_class *)v103 bottomAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v4 + 56) = v21;
    id v22 = [v5 leadingAnchor];
    id v23 = [v1 view];
    if (v23)
    {
      id v24 = v23;
      id v25 = [v23 leadingAnchor];

      id v26 = [v22 constraintEqualToAnchor:v25];
      *(void *)(v4 + 64) = v26;
      id v27 = [v5 bottomAnchor];
      id v28 = [v1 view];
      if (v28)
      {
        unint64_t v29 = v28;
        id v30 = [v28 layoutMarginsGuide];

        id v31 = [v30 bottomAnchor];
        id v32 = [v27 constraintEqualToAnchor:v31];

        *(void *)(v4 + 72) = v32;
        id v33 = [v5 trailingAnchor];
        id v34 = [v1 view];
        if (v34)
        {
          id v35 = v34;
          id v36 = [v34 trailingAnchor];

          id v37 = [v33 constraintEqualToAnchor:v36];
          *(void *)(v4 + 80) = v37;
          id v38 = sub_1002D51E8();
          id v39 = [v38 leadingAnchor];

          id v40 = [v1 view];
          if (v40)
          {
            NSString v41 = v40;
            id v102 = v5;
            id v42 = [v40 layoutMarginsGuide];

            id v43 = [v42 leadingAnchor];
            id v44 = [v39 constraintEqualToAnchor:v43];

            *(void *)(v4 + 88) = v44;
            id v45 = sub_1002D51E8();
            id v46 = [v45 topAnchor];

            id v47 = [(objc_class *)v103 bottomAnchor];
            id v48 = [v46 constraintEqualToAnchor:v47];

            *(void *)(v4 + 96) = v48;
            id v49 = sub_1002D51E8();
            id v50 = [v49 trailingAnchor];

            id v51 = [v1 view];
            if (v51)
            {
              uint64_t v52 = v51;
              id v101 = self;
              id v53 = [v52 layoutMarginsGuide];

              id v54 = [v53 trailingAnchor];
              id v55 = [v50 constraintEqualToAnchor:v54];

              *(void *)(v4 + 104) = v55;
              id v56 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
              id v57 = [v56 leadingAnchor];

              id v58 = sub_1002D51E8();
              id v59 = [v58 leadingAnchor];

              id v60 = [v57 constraintEqualToAnchor:v59];
              *(void *)(v4 + 112) = v60;
              id v61 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
              id v62 = [v61 topAnchor];

              id v63 = sub_1002D51E8();
              id v64 = [v63 topAnchor];

              id v65 = [v62 constraintEqualToAnchor:v64];
              *(void *)(v4 + 120) = v65;
              id v66 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
              id v67 = [v66 trailingAnchor];

              id v68 = sub_1002D51E8();
              id v69 = [v68 trailingAnchor];

              id v70 = [v67 constraintEqualToAnchor:v69];
              *(void *)(v4 + 128) = v70;
              id v71 = sub_1002D5248(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100250704);
              id v72 = [v71 bottomAnchor];

              id v73 = sub_1002D51E8();
              id v74 = [v73 bottomAnchor];

              id v75 = [v72 constraintEqualToAnchor:v74];
              *(void *)(v4 + 136) = v75;
              specialized Array._endMutation()();
              sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
              Class isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v101 activateConstraints:isa];

              id v77 = sub_1002D51E8();
              id v78 = [v77 bottomAnchor];

              id v79 = [v102 topAnchor];
              id v80 = [v78 constraintLessThanOrEqualToAnchor:v79 constant:-200.0];

              NSString v81 = String._bridgeToObjectiveC()();
              [v80 setIdentifier:v81];

              id v82 = [v1 view];
              if (v82)
              {
                unint64_t v83 = v82;
                id v84 = [v82 keyboardLayoutGuide];

                id v85 = [v84 topAnchor];
                id v86 = sub_1002D51E8();
                id v87 = [v86 bottomAnchor];

                id v88 = [v85 constraintEqualToAnchor:v87 constant:*(double *)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_defaultPadding]];
                NSString v89 = String._bridgeToObjectiveC()();
                [v88 setIdentifier:v89];

                LODWORD(v90) = 1132068864;
                [v88 setPriority:v90];
                id v91 = [v1 view];
                if (v91)
                {
                  unint64_t v92 = v91;
                  id v93 = [v91 keyboardLayoutGuide];

                  uint64_t v94 = swift_allocObject();
                  *(_OWORD *)(v94 + 16) = xmmword_100F5F0D0;
                  *(void *)(v94 + 32) = v88;
                  *(void *)(v94 + 40) = v80;
                  specialized Array._endMutation()();
                  id v95 = v88;
                  id v96 = v80;
                  Class v97 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v93 setConstraints:v97 activeWhenAwayFromEdge:1];

                  uint64_t v98 = swift_allocObject();
                  *(_OWORD *)(v98 + 16) = xmmword_100F5DFF0;
                  *(void *)(v98 + 32) = v96;
                  specialized Array._endMutation()();
                  id v99 = v96;
                  Class v100 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v101 activateConstraints:v100];

                  Class v2 = v100;
                  goto LABEL_11;
                }
LABEL_21:
                __break(1u);
                return;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
}

void sub_1002D682C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    Class v2 = (void (**)(uint64_t, void, void))(Strong
                                                       + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
    swift_beginAccess();
    id v3 = *v2;
    if (*v2)
    {
      swift_retain();
      v3(1, 0, 0);
      sub_10006C5D8((uint64_t)v3);
    }
  }
}

uint64_t sub_1002D6970()
{
  id v1 = (void (**)(BOOL, uint64_t, uint64_t))(v0
                                                    + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
  uint64_t result = swift_beginAccess();
  id v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_originalNote + 8);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8);
    char v7 = (v4 | v5) == 0;
    if (v4) {
      BOOL v8 = v5 == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      if (*(void *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_originalNote) == v6 && v4 == v5) {
        char v7 = 1;
      }
      else {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    sub_1000F4F24((uint64_t)v3);
    swift_bridgeObjectRetain();
    v3((v7 & 1) == 0, v6, v5);
    sub_10006C5D8((uint64_t)v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall PlaceNoteEditViewController.textViewDidChange(_:)(UITextView a1)
{
  id v2 = [(objc_class *)a1.super.super.super.super.isa text];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  char v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note);
  *char v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();

  sub_1002D4C58();
}

void PlaceNoteEditViewController.init(nibName:bundle:)()
{
}

unint64_t sub_1002D6D9C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

void sub_1002D6DE8()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_defaultPadding] = 0x4030000000000000;
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  id v2 = &v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for PlaceNoteEditViewController()
{
  return self;
}

uint64_t sub_1002D6ECC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1002D6F04()
{
  unint64_t result = qword_1015DA038;
  if (!qword_1015DA038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA038);
  }
  return result;
}

uint64_t sub_1002D6F58()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002D6F90()
{
}

id sub_1002D6FCC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryMetadata();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryMetadata()
{
  return self;
}

id sub_1002D7070(NSObject *a1)
{
  uint64_t v3 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v85 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  BOOL v8 = (char *)&v76 - v7;
  id v9 = v1;
  id v10 = [a1 layoutTemplatePairs];
  if (!v10)
  {

    goto LABEL_61;
  }
  id v82 = v9;
  uint64_t v83 = v4;
  id v11 = v10;
  NSArray.makeIterator()();
  id v81 = v11;

  unint64_t v87 = sub_10011ECA8();
  dispatch thunk of IteratorProtocol.next()();
  id v80 = a1;
  if (!v92)
  {
    id v86 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v33 = v83 + 8;
    id v79 = *(void (**)(char *, uint64_t))(v83 + 8);
    v79(v8, v3);
    if (qword_1015CBD50 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_1000F2248(v34, (uint64_t)qword_1016117A8);
    id v35 = v86;
    swift_bridgeObjectRetain_n();
    id v36 = v80;
    id v37 = Logger.logObject.getter();
    int v38 = static os_log_type_t.info.getter();
    BOOL v39 = os_log_type_enabled(v37, (os_log_type_t)v38);
    id v40 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
    NSString v41 = v82;
    uint64_t v83 = v33;
    id v84 = v36;
    if (v39)
    {
      int v77 = v38;
      id v80 = v37;
      id v42 = (_DWORD *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(void *)&v90[0] = v76;
      id v78 = v42;
      *id v42 = 136315394;
      int64_t v43 = v35[2];
      if (v43)
      {
        v89[0] = _swiftEmptyArrayStorage;
        sub_10025AEF4(0, v43, 0);
        uint64_t v44 = v89[0];
        id v45 = v35 + 6;
        do
        {
          id v46 = (void *)*(v45 - 1);
          *(void *)&long long v91 = 0;
          *((void *)&v91 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v47 = v46;
          _StringGuts.grow(_:)(18);
          swift_bridgeObjectRelease();
          *(void *)&long long v91 = 0xD000000000000010;
          *((void *)&v91 + 1) = 0x8000000100F83E00;
          v48._countAndFlagsBits = sub_10011E6E0();
          String.append(_:)(v48);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v49 = v91;
          v89[0] = v44;
          unint64_t v51 = *(void *)(v44 + 16);
          unint64_t v50 = *(void *)(v44 + 24);
          if (v51 >= v50 >> 1)
          {
            sub_10025AEF4(v50 > 1, v51 + 1, 1);
            uint64_t v44 = v89[0];
          }
          v45 += 3;
          *(void *)(v44 + 16) = v51 + 1;
          *(_OWORD *)(v44 + 16 * v51 + 32) = v49;
          --v43;
        }
        while (v43);
        NSString v41 = v82;
        id v36 = v84;
        id v40 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
      }
      uint64_t v52 = v78;
      uint64_t v53 = Array.description.getter();
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      *(void *)&long long v91 = sub_1000F2280(v53, v55, (uint64_t *)v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v52 + 6) = 2080;
      unsigned int v56 = [v36 v40[246] v76];
      unint64_t v57 = 0xE700000000000000;
      uint64_t v58 = 0x6E776F6E6B6E55;
      if (v56 == 2)
      {
        uint64_t v58 = 0x686372616553;
        unint64_t v57 = 0xE600000000000000;
      }
      BOOL v59 = v56 == 1;
      if (v56 == 1) {
        uint64_t v60 = 0x706D6F636F747541;
      }
      else {
        uint64_t v60 = v58;
      }
      if (v59) {
        unint64_t v61 = 0xEC0000006574656CLL;
      }
      else {
        unint64_t v61 = v57;
      }
      *(void *)&long long v91 = sub_1000F2280(v60, v61, (uint64_t *)v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      id v62 = v80;
      _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v77, "[Place Summary] Template pairs: %s, useCase: %s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v63 = [v36 dyanmicContextServerOverrides];
    id v64 = v63;
    if (v63)
    {
      id v80 = v63;
      NSArray.makeIterator()();
      dispatch thunk of IteratorProtocol.next()();
      if (v92)
      {
        id v65 = _swiftEmptyArrayStorage;
        do
        {
          sub_1000EFD84(&v91, v90);
          sub_1000F2354((uint64_t)v90, (uint64_t)v89);
          sub_100100830(0, &qword_1015DA098);
          swift_dynamicCast();
          id v67 = sub_1001CD454(v88);
          uint64_t v69 = v68;
          sub_1000FF22C((uint64_t)v90);
          if (v67)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v65 = sub_1001D0B94(0, v65[2] + 1, 1, v65);
            }
            unint64_t v71 = v65[2];
            unint64_t v70 = v65[3];
            if (v71 >= v70 >> 1) {
              id v65 = sub_1001D0B94((void *)(v70 > 1), v71 + 1, 1, v65);
            }
            v65[2] = v71 + 1;
            id v66 = &v65[2 * v71];
            v66[4] = v67;
            v66[5] = v69;
          }
          dispatch thunk of IteratorProtocol.next()();
        }
        while (v92);
      }
      else
      {
        id v65 = _swiftEmptyArrayStorage;
      }
      v79(v85, v3);

      NSString v41 = v82;
      id v36 = v84;
      id v40 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
    }
    else
    {
      id v65 = 0;
    }
    swift_getObjectType();

    unsigned int v72 = [v36 v40[246]];
    if (v72 == 2) {
      unsigned __int8 v73 = 2;
    }
    else {
      unsigned __int8 v73 = v72 == 1;
    }
    id v74 = sub_1002D7DB4(v73, (uint64_t)v86, (uint64_t)v65);

    id v75 = v74;
    if (v74)
    {

LABEL_62:
      swift_deallocPartialClassInstance();
      return v74;
    }
LABEL_61:
    swift_getObjectType();
    id v74 = 0;
    goto LABEL_62;
  }
  id v86 = _swiftEmptyArrayStorage;
  id v12 = (unint64_t *)&unk_1015DA0A0;
  id v13 = GEOPDPlaceSummaryResultLayoutTemplatePair_ptr;
  id v14 = &selRef_localizedStringForAvailableChargers_outOfTotal_radiowavesSymbolScale_;
  id v84 = ((char *)&type metadata for Any + 8);
  while (1)
  {
    sub_1000EFD84(&v91, v90);
    sub_1000F2354((uint64_t)v90, (uint64_t)v89);
    sub_100100830(0, v12);
    swift_dynamicCast();
    id v15 = v88;
    id v16 = [v88 v14[51]];
    if (!v16) {
      goto LABEL_5;
    }
    id v17 = v16;
    sub_100100830(0, (unint64_t *)&qword_1015D5D50);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id result = [v15 layoutTemplate];
    if (!result) {
      break;
    }
    id v20 = result;
    id v21 = sub_10011EA4C(result);

    if (!v21)
    {
      swift_bridgeObjectRelease();
LABEL_5:

      goto LABEL_6;
    }
    id v22 = v8;
    uint64_t v23 = v3;
    id v24 = v14;
    id v25 = v13;
    id v26 = v12;
    uint64_t v27 = sub_1001449CC(v15);
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }

    if (v28 > 0)
    {
      sub_1000FF22C((uint64_t)v90);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v29 = v86;
      }
      else {
        unint64_t v29 = sub_1001D0CA4(0, v86[2] + 1, 1, v86);
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        unint64_t v29 = sub_1001D0CA4((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      v29[2] = v31 + 1;
      id v86 = v29;
      id v32 = &v29[3 * v31];
      v32[4] = v18;
      v32[5] = v21;
      v32[6] = v27;
      id v12 = v26;
      id v13 = v25;
      id v14 = v24;
      uint64_t v3 = v23;
      BOOL v8 = v22;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v12 = v26;
    id v13 = v25;
    id v14 = v24;
    uint64_t v3 = v23;
    BOOL v8 = v22;
LABEL_6:
    sub_1000FF22C((uint64_t)v90);
LABEL_7:
    dispatch thunk of IteratorProtocol.next()();
    if (!v92) {
      goto LABEL_24;
    }
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryMetadata.UseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002D7B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryMetadata.UseCase()
{
  return &type metadata for PlaceSummaryMetadata.UseCase;
}

unint64_t sub_1002D7B74()
{
  unint64_t result = qword_1015DA090;
  if (!qword_1015DA090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA090);
  }
  return result;
}

void *sub_1002D7BC8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs);
  uint64_t v14 = *(void *)(v1 + 16);
  if (!v14) {
    return 0;
  }
  uint64_t v16 = v1 + 32;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  unint64_t v3 = 0;
  id v15 = result;
  do
  {
    if (v3 >= result[2]) {
      goto LABEL_23;
    }
    unsigned int v4 = *(char **)(v16 + 24 * v3 + 8);
    unint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      id v12 = v4;
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (v6)
      {
LABEL_7:
        uint64_t v8 = 4;
        while (1)
        {
          unint64_t result = (v5 & 0xC000000000000001) != 0
                 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                 : *(id *)(v5 + 8 * v8);
          id v9 = result;
          uint64_t v10 = v8 - 3;
          if (__OFADD__(v8 - 4, 1)) {
            break;
          }
          unsigned int v11 = [result containsPhotoCarouselUnit];

          if (v11)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v13 = 1;
            goto LABEL_18;
          }
          ++v8;
          if (v10 == v6) {
            goto LABEL_3;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v7 = v4;
      if (v6) {
        goto LABEL_7;
      }
    }
LABEL_3:
    ++v3;
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = v15;
  }
  while (v3 != v14);
  uint64_t v13 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  return (void *)v13;
}

id sub_1002D7DB4(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  int v6 = a1;
  uint64_t v7 = (objc_class *)type metadata accessor for PlaceSummaryMetadata();
  uint64_t v8 = objc_allocWithZone(v7);
  if (v6 && *(void *)(a2 + 16))
  {
    v8[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase] = a1;
    *(void *)&v8[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs] = a2;
    *(void *)&v8[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_serverOverrides] = a3;
    v10.receiver = v8;
    v10.super_class = v7;
    return [super init];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteType()
{
  return &type metadata for PlaceSummaryUnitHikeRouteType;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitCuratedGuides()
{
  return &type metadata for PlaceSummaryUnitCuratedGuides;
}

uint64_t sub_1002D7E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2
    && a1
    && *(void *)(a1 + 16)
    && (sub_1000F2354(a1 + 32, (uint64_t)v14), sub_100100830(0, &qword_1015CF128), (swift_dynamicCast() & 1) != 0))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v14[0] = v13;
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    sub_100100830(0, (unint64_t *)&qword_1015D9670);
    int v6 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.debug.getter();
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100F5CFA0;
    uint64_t v8 = *(void **)(a3 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier);
    *(void *)(v7 + 56) = sub_100100830(0, &qword_1015D6420);
    *(void *)(v7 + 64) = sub_1002D84E0();
    *(void *)(v7 + 32) = v8;
    v14[0] = a2;
    id v9 = v8;
    sub_1000FF33C(&qword_1015DA0D8);
    uint64_t v10 = Optional.debugDescription.getter();
    uint64_t v12 = v11;
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = sub_10011A750();
    *(void *)(v7 + 72) = v10;
    *(void *)(v7 + 80) = v12;
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
}

id sub_1002D80B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryMapItemDownloader();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryMapItemDownloader()
{
  return self;
}

uint64_t sub_1002D8108@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002D8188(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

unint64_t sub_1002D8200(unint64_t result)
{
  if (!result) {
    return result;
  }
  unint64_t v1 = result;
  if (!(result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_4;
    }
LABEL_19:
    return swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2) {
    goto LABEL_19;
  }
LABEL_4:
  uint64_t v3 = self;
  for (uint64_t i = 4; ; ++i)
  {
    uint64_t v6 = i - 4;
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v8 = i - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(v1 + 8 * i);
      swift_retain();
      uint64_t v8 = i - 3;
      if (__OFADD__(v6, 1))
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    uint64_t result = (unint64_t)[v3 sharedService];
    if (!result) {
      break;
    }
    id v9 = (void *)result;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100F5DFF0;
    uint64_t v11 = *(void **)(v7 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier);
    *(void *)(v10 + 32) = v11;
    aBlock[0] = v10;
    specialized Array._endMutation()();
    sub_100100830(0, &qword_1015D6420);
    id v12 = v11;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [v9 ticketForIdentifiers:isa traits:0];

    if (v14)
    {
      aBlock[4] = sub_1002D84D8;
      aBlock[5] = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10013844C;
      aBlock[3] = &unk_1012E2720;
      unint64_t v5 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v14 submitWithHandler:v5 networkActivity:0];
      _Block_release(v5);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
    if (v8 == v2) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002D84D8(uint64_t a1, uint64_t a2)
{
  return sub_1002D7E98(a1, a2, v2);
}

unint64_t sub_1002D84E0()
{
  unint64_t result = qword_1015DA0D0;
  if (!qword_1015DA0D0)
  {
    sub_100100830(255, &qword_1015D6420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA0D0);
  }
  return result;
}

uint64_t PlatformController.currentNavigationSession.getter()
{
  id v1 = [v0 sessionStack];
  sub_1000FF33C((uint64_t *)&unk_1015DA140);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62) {
    goto LABEL_21;
  }
  unint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
  {
LABEL_11:
    unint64_t v7 = 0;
    goto LABEL_13;
  }
  while (1)
  {
    while (__OFSUB__(v3--, 1))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
      unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_11;
      }
    }
    if ((v2 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
    if ((v3 & 0x8000000000000000) != 0) {
      goto LABEL_19;
    }
    if (v3 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_20;
    }
    swift_unknownObjectRetain();
LABEL_9:
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    uint64_t v6 = swift_unknownObjectRelease();
    if (v5) {
      break;
    }
    if (!v3) {
      goto LABEL_11;
    }
  }
  __chkstk_darwin(v6);
  unint64_t v9 = v3;
  sub_1002D885C(&v9, &v10);
  unint64_t v7 = v10;
LABEL_13:
  swift_bridgeObjectRelease();
  if (!v7) {
    return 0;
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

unint64_t sub_1002D8764(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
    return specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return swift_unknownObjectRetain();
  }
  __break(1u);
  return result;
}

void *sub_1002D87C0(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v6 = a3;
  uint64_t result = a1(&v7, &v6);
  if (!v4) {
    return (void *)v7;
  }
  return result;
}

unint64_t sub_1002D881C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t result = sub_1002D8764(*a1, *a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

unint64_t sub_1002D885C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1002D8764(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

void sub_1002D88A0()
{
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static LibraryItemsCountManager.shared;
  id v1 = objc_allocWithZone((Class)type metadata accessor for UserProfileLinkLibraryProvider());
  UserProfileLinkLibraryProvider.init(countsManager:)((char *)v0);
  static UserProfileLinkLibraryProvider.shared = v2;
}

void UserProfileLinkLibraryProvider.__allocating_init(countsManager:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  UserProfileLinkLibraryProvider.init(countsManager:)(a1);
}

uint64_t *UserProfileLinkLibraryProvider.shared.unsafeMutableAddressor()
{
  if (qword_1015CBF78 != -1) {
    swift_once();
  }
  return &static UserProfileLinkLibraryProvider.shared;
}

id static UserProfileLinkLibraryProvider.shared.getter()
{
  if (qword_1015CBF78 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static UserProfileLinkLibraryProvider.shared;

  return v0;
}

id UserProfileLinkLibraryProvider.observers.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_observers);
}

void UserProfileLinkLibraryProvider.init(countsManager:)(char *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_observers;
  id v6 = objc_allocWithZone((Class)GEOObserverHashTable);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 initWithProtocol:&OBJC_PROTOCOL___UserProfileLinkDataProvidingObserver queue:0];
  uint64_t v8 = &v7[OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_countsManager] = a1;
  unint64_t v9 = *(void **)&a1[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts];
  if (!v9)
  {
LABEL_7:
    id v19 = a1;
    uint64_t v18 = 0;
LABEL_9:
    *(void *)uint64_t v8 = v18;
    v8[8] = v9 == 0;

    v23.receiver = v7;
    v23.super_class = ObjectType;
    [super init];
    id v21 = *(void **)&a1[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers];
    id v22 = v20;
    [v21 registerObserver:v22];

    return;
  }
  unint64_t v10 = a1;
  uint64_t v11 = v9;
  char IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS();
  uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount];
  uint64_t v14 = *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
  if (IsEnabled_HikingiOS)
  {
    BOOL v15 = __OFADD__(v13, v14);
    uint64_t v16 = v13 + v14;
    if (!v15)
    {
      uint64_t v17 = *(void *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount];

      uint64_t v18 = v16 + v17;
      if (!__OFADD__(v16, v17)) {
        goto LABEL_9;
      }
      __break(1u);
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {

    uint64_t v18 = v13 + v14;
    if (!__OFADD__(v13, v14)) {
      goto LABEL_9;
    }
  }
  __break(1u);
}

void __swiftcall UserProfileLinkLibraryProvider.createUserProfileLink()(UserProfileLink *__return_ptr retstr)
{
  id v2 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleSubheadline];
  id v3 = [v2 fontDescriptorWithSymbolicTraits:2];

  if (!v3) {
    id v3 = [objc_allocWithZone((Class)UIFontDescriptor) init];
  }
  id v4 = [self fontWithDescriptor:v3 size:11.0];

  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self systemImageNamed:v5];

  if (v6)
  {
    id v7 = [self configurationWithFont:v4];
    id v8 = [v6 imageWithConfiguration:v7];
  }
  else
  {
    id v8 = 0;
  }
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v18._countAndFlagsBits = 0xD000000000000038;
  v18._object = (void *)0x8000000100F83F00;
  v9._countAndFlagsBits = 0x207972617262694CLL;
  v9._object = (void *)0xEE006E6F74747562;
  v10._countAndFlagsBits = 0x7972617262694CLL;
  v10._object = (void *)0xE700000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v18);
  id v11 = objc_allocWithZone((Class)UserProfileLink);
  id v12 = v8;
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithTitle:v13 icon:v12];

  [v14 setUserProfileLinkType:0];
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount + 8) & 1) == 0)
  {
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount);
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100F5CF70;
    *(void *)(v16 + 56) = &type metadata for Int;
    *(void *)(v16 + 64) = &protocol witness table for Int;
    *(void *)(v16 + 32) = v15;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setSubtitle:v17];
}

Swift::String __swiftcall UserProfileLinkLibraryProvider.retrieveSubtitleText()()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount + 8))
  {
    uint64_t v1 = 0;
    unint64_t v2 = 0xE000000000000000;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount);
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100F5CF70;
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = v3;
    uint64_t v1 = static String.localizedStringWithFormat(_:_:)();
    unint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v1;
  id v7 = (void *)v2;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1002D907C()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_observers), "allObservers"));
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    do
    {
      sub_1000F2354(v4, (uint64_t)v7);
      sub_1000FF33C(&qword_1015DA1F8);
      if (swift_dynamicCast())
      {
        if ([v6 respondsToSelector:"dataDidUpdateForUserProfileLinkType:"]) {
          [v6 dataDidUpdateForUserProfileLinkType:0];
        }
        swift_unknownObjectRelease();
      }
      v4 += 32;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void UserProfileLinkLibraryProvider.init()()
{
}

void _s4Maps30UserProfileLinkLibraryProviderC24libraryItemsCountManager_15didUpdateCountsyAA0ehiJ0C_AA0ehI0CtF_0()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_countsManager);
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount + 8);
  uint64_t v4 = OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts;
  unint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (!v5) {
    goto LABEL_7;
  }
  uint64_t v6 = *v1;
  id v7 = v5;
  int IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS();
  uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount];
  uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
  if (!IsEnabled_HikingiOS)
  {

    uint64_t v14 = v9 + v10;
    if (!__OFADD__(v9, v10)) {
      goto LABEL_10;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  BOOL v11 = __OFADD__(v9, v10);
  uint64_t v12 = v9 + v10;
  if (v11)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount];

  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_7:
    if (v3) {
      return;
    }
    uint64_t v15 = 0;
    char v16 = 1;
    goto LABEL_24;
  }
LABEL_10:
  if (v6 == v14) {
    char v17 = v3;
  }
  else {
    char v17 = 1;
  }
  if (v17)
  {
    uint64_t v15 = *(void **)(v2 + v4);
    if (!v15)
    {
      char v16 = 1;
LABEL_24:
      uint64_t *v1 = (uint64_t)v15;
      *((unsigned char *)v1 + 8) = v16;
      sub_1002D907C();
      return;
    }
    Swift::String v18 = v15;
    int v19 = MapsFeature_IsEnabled_HikingiOS();
    uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount];
    uint64_t v21 = *(void *)&v18[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
    if (!v19)
    {

      uint64_t v15 = (void *)(v20 + v21);
      if (!__OFADD__(v20, v21))
      {
LABEL_23:
        char v16 = 0;
        goto LABEL_24;
      }
LABEL_30:
      __break(1u);
      return;
    }
    BOOL v11 = __OFADD__(v20, v21);
    uint64_t v22 = v20 + v21;
    if (!v11)
    {
      uint64_t v23 = *(void *)&v18[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount];

      uint64_t v15 = (void *)(v22 + v23);
      if (__OFADD__(v22, v23))
      {
        __break(1u);
        return;
      }
      goto LABEL_23;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
}

uint64_t type metadata accessor for UserProfileLinkLibraryProvider()
{
  return self;
}

void sub_1002D95D4(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
  id v3 = [v2 publisherAttribution];
  if (!v3)
  {
    if (qword_1015CBD28 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000F2248(v6, (uint64_t)qword_101611730);
    id v7 = a1;
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      BOOL v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      id v12 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *BOOL v11 = v2;

      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Missing publisher attribution for : %@.", v10, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_9;
  }
  id v4 = [objc_allocWithZone((Class)MapsUIImagePublisherSpec) initWithIconIdentifier:[v3 iconIdentifier]];
  if (v4)
  {
    unint64_t v5 = v4;
    sub_1002DA808((uint64_t)v4, a1);
    swift_unknownObjectRelease();

LABEL_9:
    sub_1002D9B58(a1);
    return;
  }
  __break(1u);
}

void sub_1002D9804(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v19 = v10;
    uint64_t v20 = v9;
    sub_10010B3CC();
    id v13 = a1;
    uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = v13;
    aBlock[4] = sub_1002DAA10;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012E2860;
    char v16 = _Block_copy(aBlock);
    id v17 = v13;
    id v18 = a2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v20);
  }
}

uint64_t sub_1002D9AE0(void *a1, void *a2)
{
  id v3 = a2;
  Image.init(uiImage:)();
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = a1;
  return static Published.subscript.setter();
}

void sub_1002D9B58(char *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (!v10[0])
  {
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps35CuratedGuideViewModelDataDownloader_coverPhotoDownloader);
    uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    double v5 = sub_1001FEF28();
    double v6 = sub_1001FF02C();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    v10[4] = sub_1002DA7F8;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _OWORD v10[2] = sub_1002DA540;
    v10[3] = &unk_1012E2770;
    uint64_t v8 = _Block_copy(v10);
    uint64_t v9 = a1;
    swift_release();
    [v3 loadGradientCoverImageWithCuratedCollection:v4 size:0 contentSizeCategory:11 usingImageSource:v8 completion:v5, v6];
    _Block_release(v8);
  }
}

void sub_1002D9CD8(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0 && a1 && !a2)
  {
    sub_10010B3CC();
    id v32 = static OS_dispatch_queue.main.getter();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a1;
    aBlock[4] = sub_1002DA800;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012E27C0;
    id v18 = _Block_copy(aBlock);
    id v19 = a1;
    id v20 = a5;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10007FF04((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010113C((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v21 = v32;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    if (qword_1015CBD28 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1000F2248(v22, (uint64_t)qword_101611730);
    id v23 = a5;
    swift_errorRetain();
    id v24 = (char *)v23;
    swift_errorRetain();
    id v32 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412546;
      uint64_t v28 = *(void **)&v24[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
      aBlock[0] = v28;
      id v29 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v27 = v28;

      *(_WORD *)(v26 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        aBlock[0] = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v30 = 0;
      }
      v27[1] = v30;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v25, "Unable to download image for collection: %@. %@.", (uint8_t *)v26, 0x16u);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      unint64_t v31 = v32;
    }
  }
}

uint64_t sub_1002DA218(uint64_t result, void *a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)result;
    id v3 = a2;
    Image.init(uiImage:)();
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v2;
    return static Published.subscript.setter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002DA298()
{
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = OBJC_IVAR____TtC4Maps35CuratedGuideViewModelDataDownloader_coverPhotoDownloader;
  uint64_t v7 = self;
  uint64_t v8 = v0;
  *(void *)&v0[v6] = [v7 sharedInstance];
  uint64_t v12 = OBJC_IVAR____TtC4Maps35CuratedGuideViewModelDataDownloader_imageLoadingQueue;
  sub_10010B3CC();
  static DispatchQoS.userInitiated.getter();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_10007FF04((unint64_t *)&unk_1015D5E90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000FF33C((uint64_t *)&unk_1015D52D0);
  sub_10010113C((unint64_t *)&unk_1015D5EA0, (uint64_t *)&unk_1015D52D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)&v8[v12] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  uint64_t v9 = (objc_class *)type metadata accessor for CuratedGuideViewModelDataDownloader();
  v14.receiver = v8;
  v14.super_class = v9;
  return [super init];
}

void sub_1002DA540(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(void *, void *, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  id v11 = a2;
  id v10 = a3;
  v9(a2, a3, a4, a5);
  swift_release();
}

id sub_1002DA608()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CuratedGuideViewModelDataDownloader();
  return [super dealloc];
}

uint64_t type metadata accessor for CuratedGuideViewModelDataDownloader()
{
  return self;
}

uint64_t sub_1002DA6AC@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002DA6C0(uint64_t a1, void **a2)
{
  return sub_1002DA724(a1, a2);
}

uint64_t sub_1002DA6D4@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002DA6E8@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002DA710(uint64_t a1, void **a2)
{
  return sub_1002DA724(a1, a2);
}

uint64_t sub_1002DA724(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1002DA798(uint64_t a1, void **a2)
{
  return sub_1002DA724(a1, a2);
}

uint64_t sub_1002DA7C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002DA7F8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1002D9CD8(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1002DA800()
{
  return sub_1002DA218(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1002DA808(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (!v9[0])
  {
    id v4 = [self sharedCache];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a2;
      v9[4] = sub_1002DA9C8;
      v9[5] = v6;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 1107296256;
      v9[2] = sub_1001DA1FC;
      _OWORD v9[3] = &unk_1012E2810;
      uint64_t v7 = _Block_copy(v9);
      id v8 = a2;
      swift_release();
      [v5 getImageForSpec:a1 loadImageOnBackgroundQueue:1 completion:v7];
      _Block_release(v7);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1002DA978@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1002DA9A0(uint64_t a1, void **a2)
{
  return sub_1002DA724(a1, a2);
}

void sub_1002DA9C8(void *a1)
{
  sub_1002D9804(a1, *(void **)(v1 + 16));
}

uint64_t sub_1002DA9D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DAA10()
{
  return sub_1002D9AE0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1002DAA30(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
  swift_unknownObjectRetain();
  self;
  id v11 = (void *)swift_dynamicCastObjCClass();
  id v12 = v11;
  if (v11)
  {
    id v13 = [v11 type];
    uint64_t v53 = a2;
    if (v13 == (id)3)
    {
      id v15 = [v12 sort];
      if (v15)
      {
        char v16 = (uint64_t *)(a1 + v10[5]);
        if ((v16[2] & 1) == 0)
        {
          uint64_t v17 = (uint64_t *)(a1 + v10[8]);
          uint64_t v18 = *v17;
          if (*v17)
          {
            id v52 = v15;
            uint64_t v20 = *v16;
            id v19 = (void *)v16[1];
            id v21 = (id)v17[1];
            id v49 = (id)v17[2];
            unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
            uint64_t v22 = *(void *)(v18 + 16);
            id v50 = v19;
            uint64_t v51 = v20;
            if (v22)
            {
              id v47 = v21;
              uint64_t v48 = v3;
              uint64_t v23 = v18;
              uint64_t v24 = v18 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
              swift_bridgeObjectRetain();
              sub_10012FA94();
              uint64_t v25 = *(void *)(v7 + 72);
              uint64_t v46 = v23;
              swift_bridgeObjectRetain();
              do
              {
                sub_1002DCF3C(v24, (uint64_t)v9, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                swift_unknownObjectRetain();
                self;
                if (swift_dynamicCastObjCClass())
                {
                  sub_1002DCFA4((uint64_t)v9, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  }
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                }
                else
                {
                  swift_unknownObjectRelease();
                  sub_1002DCFA4((uint64_t)v9, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                }
                v24 += v25;
                --v22;
              }
              while (v22);
              swift_bridgeObjectRelease();
              id v21 = v47;
            }
            else
            {
              sub_10012FA94();
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRelease();
            if (v49) {
              id v35 = 0;
            }
            else {
              id v35 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v21];
            }
            id v36 = v35;
            id v37 = [v52 defaultSelectedElementIndex];
            id v38 = objc_allocWithZone((Class)GEOResultRefinementSort);
            NSString v39 = String._bridgeToObjectiveC()();
            sub_10012FB30();
            sub_100100830(0, &qword_1015D6650);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v41 = [v38 initWithDisplayName:v39 sorts:isa selectedElementIndex:v36 defaultSelectedElementIndex:v37];

            if (v41)
            {
              id v12 = [objc_allocWithZone((Class)GEOResultRefinement) initWithSort:v41];

              swift_unknownObjectRelease();
              goto LABEL_28;
            }

            swift_unknownObjectRelease();
            goto LABEL_27;
          }
        }
      }
      swift_unknownObjectRelease();
      id v12 = 0;
    }
    else if (v13 == (id)1)
    {
      uint64_t v14 = a1 + v10[10];
      if (*(unsigned char *)(v14 + 8)) {
        id v52 = 0;
      }
      else {
        id v52 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)v14];
      }
      id v26 = [v12 toggle];
      if (v26)
      {
        uint64_t v27 = v26;
        if ((*(unsigned char *)(a1 + v10[5] + 16) & 1) == 0)
        {
          LODWORD(v51) = *(unsigned __int8 *)(a1 + v10[6]);
          swift_bridgeObjectRetain();
          id v50 = [v27 metadata];
          id v49 = [v27 toggleType];
          LODWORD(v48) = [v27 evChargingConnectorType];
          id v47 = v52;
          LODWORD(v46) = [v27 selectionFromView];
          id v28 = [v27 refinementKey];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          unsigned int v45 = [v27 showAsSelected];
          id v29 = objc_allocWithZone((Class)GEOResultRefinementToggle);
          NSString v30 = String._bridgeToObjectiveC()();
          sub_10012FB30();
          NSString v31 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          LOBYTE(v43) = v45;
          LOBYTE(v42) = v46;
          id v32 = v50;
          uint64_t v33 = v47;
          id v34 = [v29 initWithDisplayName:v30 isSelected:v51 metadata:v50 toggleType:v49 evChargingConnectorType:v48 selectionSequenceNumber:v47 selectionFromView:v42 refinementKey:v31 showAsSelected:v43];

          if (v34)
          {
            id v12 = [objc_allocWithZone((Class)GEOResultRefinement) initWithToggle:v34];
            swift_unknownObjectRelease();

LABEL_28:
            a2 = v53;
            goto LABEL_29;
          }
        }
      }
      swift_unknownObjectRelease();

LABEL_27:
      id v12 = 0;
      goto LABEL_28;
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
LABEL_29:
  *a2 = v12;
}

unint64_t sub_1002DB130(void *a1)
{
  id v1 = [a1 sections];
  sub_1000FF33C((uint64_t *)&unk_1015D6620);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v2 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v6 = *(void **)(v2 + 8 * v4);
          swift_unknownObjectRetain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        id v12 = v6;
        sub_1002DB364(&v12, &v11);
        swift_unknownObjectRelease();
        if (v11)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        ++v4;
        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          unint64_t v8 = v13;
          goto LABEL_18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_18:
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    goto LABEL_20;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

void sub_1002DB364(id *a1@<X0>, void *a2@<X8>)
{
  id v2 = *a1;
  id v3 = [*a1 type];
  if (v3 == (id)2)
  {
    if (MapsFeature_IsEnabled_SearchAndDiscovery())
    {
      self;
      id v22 = (id)swift_dynamicCastObjCClass();
      if (!v22)
      {
LABEL_79:
        *a2 = v22;
        return;
      }
      swift_unknownObjectRetain();
      id v23 = sub_1002DC4E8(v22);
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = [v22 displayName];
        if (v25)
        {
          id v26 = v25;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v28 = v27;
        }
        else
        {
          uint64_t v28 = 0;
        }
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_100F5DFF0;
        *(void *)(v47 + 32) = v24;
        specialized Array._endMutation()();
        id v48 = v24;
        if (v28)
        {
          NSString v49 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v49 = 0;
        }
        id v50 = objc_allocWithZone((Class)GEOResultRefinementSection);
        sub_100100830(0, &qword_1015D5AC8);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v22 = [v50 initWithSectionHeader:v49 resultRefinements:isa];
        swift_unknownObjectRelease();

        goto LABEL_79;
      }
      goto LABEL_77;
    }
    goto LABEL_78;
  }
  if (v3 == (id)1)
  {
    self;
    uint64_t v29 = swift_dynamicCastObjCClass();
    if (v29)
    {
      NSString v30 = (void *)v29;
      swift_unknownObjectRetain();
      id v31 = [v30 elements];
      sub_100100830(0, &qword_1015D6640);
      unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        if (!v33) {
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v33) {
          goto LABEL_57;
        }
      }
      if (v33 < 1)
      {
        __break(1u);
        goto LABEL_81;
      }
      uint64_t v34 = 0;
      unint64_t v35 = v32 & 0xC000000000000001;
      unint64_t v96 = v32 & 0xC000000000000001;
      unint64_t v98 = v32;
      do
      {
        if (v35) {
          id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v36 = *(id *)(v32 + 8 * v34 + 32);
        }
        id v37 = v36;
        id v38 = [v36 data];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100100830(0, (unint64_t *)&unk_1015D6630);
        if (swift_dynamicCast())
        {
          id v39 = [v37 displayName];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          unsigned int v105 = [v37 isSelected];
          id v102 = [v107 metadata];
          id v100 = [v107 elementType];
          id v40 = [v107 evChargingConnectorType];
          id v41 = [v37 selectionSequenceNumber];
          id v42 = objc_allocWithZone((Class)GEOResultRefinementMultiSelectElement);
          uint64_t v43 = v33;
          NSString v44 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v45 = v40;
          unint64_t v32 = v98;
          id v46 = [v42 initWithDisplayName:v44 isSelected:v105 metadata:v102 elementType:v100 evChargingConnectorType:v45 selectionSequenceNumber:v41];

          uint64_t v33 = v43;
          unint64_t v35 = v96;

          if (v46)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        else
        {
        }
        ++v34;
      }
      while (v33 != v34);
LABEL_57:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v106 = [v30 clauseType] == (id)1;
      id v57 = [v30 displayName];
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;
      }
      else
      {
        uint64_t v59 = 0;
        uint64_t v61 = 0;
      }
      id v62 = [v30 maximumNumberOfSelectableElements];
      char v63 = [v30 showEqualWidthButtonsOnFilterView];
      id v64 = [v30 displayNameForMultiSelected];
      if (v64)
      {
        id v65 = v64;
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v67;
      }
      else
      {
        uint64_t v66 = 0;
        uint64_t v68 = 0;
      }
      id v69 = [v30 multiSelectIdentifier];
      if (v69)
      {
        unint64_t v70 = v69;
        uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v73 = v72;
      }
      else
      {
        uint64_t v71 = 0;
        uint64_t v73 = 0;
      }
      id v74 = objc_allocWithZone((Class)GEOResultRefinementMultiSelect);
      id v75 = sub_1002DC1B0(v59, v61, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v62, v106, v63, v66, v68, v71, v73);
      if (v75)
      {
        uint64_t v76 = v75;
        id v77 = [objc_allocWithZone((Class)GEOResultRefinement) initWithMultiSelect:v75];
        id v78 = [v30 displayName];
        if (v78)
        {
          id v79 = v78;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v81 = v80;
        }
        else
        {
          uint64_t v81 = 0;
        }
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = xmmword_100F5DFF0;
        *(void *)(v82 + 32) = v77;
        specialized Array._endMutation()();
        id v83 = v77;
        if (v81)
        {
          NSString v84 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v84 = 0;
        }
        id v85 = objc_allocWithZone((Class)GEOResultRefinementSection);
        sub_100100830(0, &qword_1015D5AC8);
        Class v86 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v22 = [v85 initWithSectionHeader:v84 resultRefinements:v86];

        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        id v22 = 0;
      }
      goto LABEL_79;
    }
LABEL_78:
    id v22 = 0;
    goto LABEL_79;
  }
  if (v3) {
    goto LABEL_78;
  }
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_78;
  }
  uint64_t v5 = (void *)v4;
  swift_unknownObjectRetain();
  id v6 = [v5 toggles];
  sub_100100830(0, &qword_1015DA270);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v90 = v2;
    if (v8) {
      goto LABEL_7;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v87) {
        goto LABEL_52;
      }
    }
    else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_52:
      id v52 = [v90 displayName];
      if (v52)
      {
        uint64_t v53 = v52;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v54 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v54 = 0;
      }
      id v55 = objc_allocWithZone((Class)GEOResultRefinementSection);
      sub_100100830(0, &qword_1015D5AC8);
      Class v56 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v22 = [v55 initWithSectionHeader:v54 resultRefinements:v56];
      swift_unknownObjectRelease();

      goto LABEL_79;
    }
    swift_bridgeObjectRelease();
LABEL_77:
    swift_unknownObjectRelease();
    goto LABEL_78;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  id v90 = v2;
  if (!v8) {
    goto LABEL_50;
  }
LABEL_7:
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = v7 & 0xC000000000000001;
    uint64_t v11 = &selRef_daVinciAtmosphereMaxHeight;
    uint64_t v92 = v8;
    id v93 = (id)v7;
    unint64_t v91 = v7 & 0xC000000000000001;
    do
    {
      if (v10) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v7 + 8 * v9 + 32);
      }
      unint64_t v13 = v12;
      id v14 = [v12 v11[50]];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100100830(0, &qword_1015DA278);
      if (swift_dynamicCast())
      {
        id v15 = [v13 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        unsigned int v104 = [v13 isSelected];
        id v103 = [v107 metadata];
        id v101 = [v107 toggleType];
        unsigned int v99 = [v107 evChargingConnectorType];
        id v97 = [v13 selectionSequenceNumber];
        unsigned __int8 v95 = [v107 selectionFromView];
        id v16 = [v107 refinementKey];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v16) = [v107 showAsSelected];
        id v17 = objc_allocWithZone((Class)GEOResultRefinementToggle);
        NSString v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        LOBYTE(v89) = (_BYTE)v16;
        LOBYTE(v88) = v95;
        id v20 = [v17 initWithDisplayName:v18 isSelected:v104 metadata:v103 toggleType:v101 evChargingConnectorType:v99 selectionSequenceNumber:v97 selectionFromView:v88 refinementKey:v19 showAsSelected:v89];

        if (v20)
        {
          id v21 = [objc_allocWithZone((Class)GEOResultRefinement) initWithToggle:v20];

          uint64_t v8 = v92;
          unint64_t v7 = (unint64_t)v93;
          unint64_t v10 = v91;
          uint64_t v11 = &selRef_daVinciAtmosphereMaxHeight;
          if (v21)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        else
        {

          uint64_t v8 = v92;
          unint64_t v7 = (unint64_t)v93;
          unint64_t v10 = v91;
          uint64_t v11 = &selRef_daVinciAtmosphereMaxHeight;
        }
      }
      else
      {
      }
      ++v9;
    }
    while (v8 != v9);
    goto LABEL_50;
  }
LABEL_81:
  __break(1u);
}

id sub_1002DC158()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GEORefinementsFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for GEORefinementsFactory()
{
  return self;
}

id sub_1002DC1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  sub_100100830(0, (unint64_t *)&unk_1015D6630);
  v16.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (!a8)
  {
    NSString v17 = 0;
    if (a10) {
      goto LABEL_6;
    }
LABEL_8:
    NSString v18 = 0;
    goto LABEL_9;
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a10) {
    goto LABEL_8;
  }
LABEL_6:
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_9:
  id v19 = [v10 initWithDisplayName:v15 multiSelect:v16.super.isa maximumNumberOfSelectElements:a4 clauseType:a5 showEqualWidthButtonsOnFilterView:a6 & 1 displayNameForMultiSelected:v17 multiSelectIdentifier:v18];

  return v19;
}

void *sub_1002DC2EC()
{
  uint64_t v0 = type metadata accessor for RefinementsBarButtonViewModel(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0 - 8);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v4 = v12;
  uint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v8 = *(void *)(v1 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1002DCF3C(v7, (uint64_t)v3, type metadata accessor for RefinementsBarButtonViewModel);
      sub_1002DAA30((uint64_t)v3, &v11);
      sub_1002DCFA4((uint64_t)v3, type metadata accessor for RefinementsBarButtonViewModel);
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)v12;
  }
  swift_bridgeObjectRelease();
  return v5;
}

id sub_1002DC4E8(void *a1)
{
  id v2 = [a1 openNow];
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  id v4 = [a1 openNow];
  if (!v4
    || (uint64_t v5 = v4,
        id v6 = [v4 data],
        v5,
        _bridgeAnyObjectToAny(_:)(),
        swift_unknownObjectRelease(),
        sub_100100830(0, &qword_1015DA278),
        (swift_dynamicCast() & 1) == 0))
  {

    return 0;
  }
  id v7 = [v44 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  unsigned int v43 = [v3 isSelected];
  id v42 = [v44 metadata];
  id v41 = [v44 toggleType];
  unsigned int v40 = [v44 evChargingConnectorType];
  id v8 = [v3 selectionSequenceNumber];
  unsigned __int8 v39 = [v44 selectionFromView];
  id v9 = [v44 refinementKey];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v9) = [v44 showAsSelected];
  uint64_t v10 = v3;
  id v11 = objc_allocWithZone((Class)GEOResultRefinementToggle);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LOBYTE(v38) = (_BYTE)v9;
  LOBYTE(v37) = v39;
  id v14 = [v11 initWithDisplayName:v12 isSelected:v43 metadata:v42 toggleType:v41 evChargingConnectorType:v40 selectionSequenceNumber:v8 selectionFromView:v37 refinementKey:v13 showAsSelected:v38];

  if (!v14)
  {

    return 0;
  }
  id v15 = [a1 openAt];
  if (!v15)
  {

LABEL_17:
    return 0;
  }
  NSArray v16 = v15;
  id v17 = [v15 data];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100100830(0, (unint64_t *)&unk_1015DA280);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_17;
  }
  id v18 = [v44 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  double v19 = 0.0;
  if (([v10 isSelected] & 1) == 0)
  {
    [v16 timeStamp];
    double v19 = v20;
  }
  id v21 = [v44 metadata];
  if ([v10 isSelected]) {
    id v22 = 0;
  }
  else {
    id v22 = [v16 isSelected];
  }
  id v25 = [v44 isNextDay];
  id v26 = objc_allocWithZone((Class)GEOResultRefinementTime);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v26 initWithDisplayName:v27 timeStamp:v21 metadata:v22 isSelected:v25 isNextDay:v19];

  if (v28)
  {
    id v29 = [a1 displayName];
    if (v29)
    {
      NSString v30 = v29;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v31 = v14;
      id v32 = v28;
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v34 = v14;
      id v35 = v28;
      NSString v33 = 0;
    }
    id v36 = [objc_allocWithZone((Class)GEOResultRefinementOpenOptions) initWithDisplayName:v33 openNow:v14 openAt:v28];

    if (v36)
    {
      id v23 = [objc_allocWithZone((Class)GEOResultRefinement) initWithOpenOptions:v36];

      return v23;
    }
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1002DCA6C(void *a1)
{
  uint64_t v1 = a1;
  id v2 = [a1 elements];
  sub_100100830(0, &qword_1015D6640);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v47 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v47 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v47) {
    goto LABEL_17;
  }
LABEL_3:
  if (v47 < 1)
  {
    __break(1u);
    return result;
  }
  id v42 = v1;
  uint64_t v5 = 0;
  unint64_t v6 = v3 & 0xC000000000000001;
  id v7 = &selRef_daVinciAtmosphereMaxHeight;
  unint64_t v43 = v3 & 0xC000000000000001;
  unint64_t v44 = v3;
  do
  {
    if (v6) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v3 + 8 * v5 + 32);
    }
    id v9 = v8;
    id v10 = [v8 v7[50]];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100100830(0, (unint64_t *)&unk_1015D6630);
    if (swift_dynamicCast())
    {
      id v11 = [v9 displayName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      unsigned int v46 = [v9 isSelected];
      id v12 = [v48 metadata];
      id v45 = [v48 elementType];
      NSString v13 = v7;
      id v14 = [v48 evChargingConnectorType];
      id v15 = [v9 selectionSequenceNumber];
      id v16 = objc_allocWithZone((Class)GEOResultRefinementMultiSelectElement);
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v18 = v14;
      id v7 = v13;
      id v19 = [v16 initWithDisplayName:v17 isSelected:v46 metadata:v12 elementType:v45 evChargingConnectorType:v18 selectionSequenceNumber:v15];

      unint64_t v6 = v43;
      unint64_t v3 = v44;
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    else
    {
    }
    ++v5;
  }
  while (v47 != v5);
  swift_bridgeObjectRelease();
  uint64_t v1 = v42;
LABEL_18:
  swift_bridgeObjectRelease();
  BOOL v20 = [v1 clauseType] == (id)1;
  id v21 = [v1 displayName];
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  id v26 = [v1 maximumNumberOfSelectableElements];
  char v27 = [v1 showEqualWidthButtonsOnFilterView];
  id v28 = [v1 displayNameForMultiSelected];
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  id v33 = [v1 multiSelectIdentifier];
  if (v33)
  {
    id v34 = v33;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v37 = 0;
  }
  id v38 = objc_allocWithZone((Class)GEOResultRefinementMultiSelect);
  id v39 = sub_1002DC1B0(v23, v25, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v26, v20, v27, v30, v32, v35, v37);
  if (!v39) {
    return 0;
  }
  unsigned int v40 = v39;
  id v41 = [objc_allocWithZone((Class)GEOResultRefinement) initWithMultiSelect:v39];

  return (uint64_t)v41;
}

uint64_t sub_1002DCF3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002DCFA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1002DD004()
{
}

id sub_1002DD014()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListFooterSectionController();
  return [super dealloc];
}

void sub_1002DD0DC(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  sub_1000F1C90((uint64_t)a1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v10);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v8 = a3;
  id v9 = a1;
  sub_1000F1BD8((uint64_t)v10);
  if (Strong)
  {
    [Strong *a4];

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

id sub_1002DD25C()
{
  if ((MapsFeature_IsEnabled_RAPCommunityID() & 1) == 0)
  {
    sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v10);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)v10);
    if (Strong)
    {
      [Strong homeDidTapReportAProblem];
      swift_unknownObjectRelease();
    }
  }
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration) _maps_mapsSceneDelegate];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 rapPresenter];

    LODWORD(v3) = [v4 presentOfflineAlertIfNecessaryWithCompletion:0];
    if (v3)
    {
      if (qword_1015CBD40 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1000F2248(v5, (uint64_t)qword_101611778);
      unint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        id v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "can't present RAP menu because Maps is offline", v8, 2u);
        swift_slowDealloc();
      }
    }
  }
  return [self captureRAPAction];
}

uint64_t sub_1002DD408()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002DD440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000FF2E0(a1, &qword_1015CD250);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1000FF33C(&qword_1015DA4F8);
  return swift_task_create();
}

id LibraryDataOperationsProvider.__allocating_init(mapsSyncStore:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return [super init];
}

void LibraryDataOperationsProvider.existingPlaceItem(forMapItem:completion:)(void *a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015CD250);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  id v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "_geoMapItem", v7))
  {
    swift_unknownObjectRetain();
    id v10 = [a1 _geoMapItemStorageForPersistence];
    id v11 = v10;
    id v38 = a2;
    uint64_t v39 = a3;
    if (v10)
    {
      id v12 = [v10 userValues];

      if (v12)
      {
        id v13 = [v12 name];

        if (v13)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
    id v16 = objc_allocWithZone(Predicate);
    NSString v17 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    id v18 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    id v19 = (objc_class *)type metadata accessor for MapsSyncRange();
    id v20 = objc_allocWithZone(v19);
    id v21 = v17;
    MapsSyncRange.init(offset:limit:)();
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    id v23 = objc_allocWithZone(Options);
    uint64_t v24 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_100F5F0D0;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v18;
    uint64_t v40 = v25;
    specialized Array._endMutation()();
    id v26 = objc_allocWithZone(Predicate);
    id v27 = v21;
    id v28 = v18;
    MapsSyncQueryPredicate.init(and:)();
    id v29 = objc_allocWithZone(v19);
    MapsSyncRange.init(offset:limit:)();
    id v30 = objc_allocWithZone(Options);
    uint64_t v31 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    uint64_t v32 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 1, 1, v32);
    id v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = v31;
    v33[5] = v24;
    uint64_t v34 = v39;
    v33[6] = v38;
    v33[7] = v34;
    id v35 = v31;
    id v36 = v24;
    swift_retain();
    sub_100042AF4((uint64_t)v9, (uint64_t)&unk_1015DA380, (uint64_t)v33);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    id v37 = sub_1002E5A18();
    a2(0, v37);
    id v14 = v37;
  }
}

uint64_t sub_1002DD9E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_super v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  id v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v5;
  v15[5] = a1;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a2;
  v15[9] = ObjectType;
  id v16 = v5;
  swift_unknownObjectRetain();
  sub_1000F4F24(a3);
  id v17 = a2;
  sub_100042AF4((uint64_t)v13, (uint64_t)&unk_1015DA570, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1002DDB28(uint64_t a1, NSString a2)
{
  type metadata accessor for CollectionPlaceItem();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    id v4 = (void *)v3;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    dispatch thunk of CollectionPlaceItem.placeItemNote.setter();
LABEL_7:
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
    *(void *)(v6 + 32) = v4;
    specialized Array._endMutation()();
    swift_unknownObjectRetain();
    dispatch thunk of MapsSyncStore.save(_:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  type metadata accessor for FavoriteItem();
  uint64_t v5 = swift_dynamicCastClass();
  if (v5)
  {
    id v4 = (void *)v5;
    swift_unknownObjectRetain();
    if (a2) {
      a2 = String._bridgeToObjectiveC()();
    }
    [v4 setPlaceItemNote:a2];

    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_1002DDC90()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x8000000100F84BA0;
  v0._object = (void *)0x8000000100F84B70;
  v1._countAndFlagsBits = 0x65766F6D6552;
  v1._object = (void *)0xE600000000000000;
  v4._countAndFlagsBits = 0xD000000000000017;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v4);
  uint64_t result = v3._countAndFlagsBits;
  xmmword_1015DA340 = (__int128)v3;
  return result;
}

uint64_t sub_1002DDD44()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x8000000100F84CA0;
  v0._object = (void *)0x8000000100F84C70;
  v1._countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  v4._countAndFlagsBits = 0xD000000000000017;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v4);
  uint64_t result = v3._countAndFlagsBits;
  xmmword_1015DA350 = (__int128)v3;
  return result;
}

uint64_t sub_1002DDDF8()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x8000000100F84B50;
  v0._object = (void *)0x8000000100F84B20;
  v1._countAndFlagsBits = 0x6C65636E6143;
  v1._object = (void *)0xE600000000000000;
  v4._countAndFlagsBits = 0xD000000000000017;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v4);
  uint64_t result = v3._countAndFlagsBits;
  xmmword_1015DA360 = (__int128)v3;
  return result;
}

id LibraryDataOperationsProvider.init(mapsSyncStore:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1002DE100(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v26 = a6;
  uint64_t v12 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CollectionPlaceItem();
  uint64_t v15 = MapsSyncObject.__allocating_init()();
  if (a3)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    [a1 setName:v16];
  }
  id v17 = [a1 name];
  if (v17)
  {
    id v18 = v17;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  dispatch thunk of CollectionPlaceItem.customName.setter();
  id v19 = [a1 _geoMapItem];
  if (v19)
  {
    id v20 = [self mapItemStorageForGEOMapItem:v19];
    dispatch thunk of CollectionPlaceItem.mapItemStorage.setter();
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRetain();
  dispatch thunk of CollectionPlaceItem.placeItemNote.setter();
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 1, 1, v21);
  id v22 = (void *)swift_allocObject();
  void v22[2] = 0;
  v22[3] = 0;
  v22[4] = v8;
  v22[5] = v15;
  v22[6] = v26;
  v22[7] = a7;
  id v23 = v8;
  swift_retain();
  sub_100042AF4((uint64_t)v14, (uint64_t)&unk_1015DA558, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_1002DE46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  _OWORD v7[3] = a4;
  _OWORD v7[4] = a5;
  return _swift_task_switch(sub_1002DE490, 0, 0);
}

uint64_t sub_1002DE490()
{
  Swift::String v1 = (void *)v0[4];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  *(void *)(v2 + 32) = v1;
  uint64_t v7 = v2;
  specialized Array._endMutation()();
  v0[7] = v7;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  id v3 = v1;
  Swift::String v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  void *v4 = v0;
  v4[1] = sub_1002DE59C;
  return v6(v7);
}

uint64_t sub_1002DE59C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002DE8B4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1002DE6B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002DE6B8()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 80) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002DE74C, v2, v1);
}

uint64_t sub_1002DE74C()
{
  uint64_t v1 = (void (*)(uint64_t, void))v0[5];
  uint64_t v2 = v0[4];
  swift_release();
  v1(v2, 0);
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002DE7CC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void (**)(void, uint64_t))(v0 + 40);
  swift_release();
  v2(0, v1);
  return _swift_task_switch(sub_1002DE854, 0, 0);
}

uint64_t sub_1002DE854()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002DE8B4()
{
  swift_bridgeObjectRelease();
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LibraryDataOperationsProvider: saveMapItem() Error saving :%@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  type metadata accessor for MainActor();
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002DE7CC, v8, v7);
}

uint64_t sub_1002DEAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[6] = a8;
  v8[7] = v14;
  _OWORD v8[4] = a6;
  v8[5] = a7;
  _OWORD v8[2] = a4;
  v8[3] = a5;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)&dword_1015DA3F8 + dword_1015DA3F8);
  uint64_t v10 = (void *)swift_task_alloc();
  v8[8] = v10;
  *uint64_t v10 = v8;
  v10[1] = sub_1002DEBA4;
  return v12(a5);
}

uint64_t sub_1002DEBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002DECA4, 0, 0);
}

uint64_t sub_1002DECA4()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002DED38, v2, v1);
}

uint64_t sub_1002DED38()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)v0[6];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  swift_release();
  sub_1002DEE00(v2, v1, v7, v6, v5, v4, v3);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1001E9C34, 0, 0);
}

void sub_1002DEE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a2)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v10._countAndFlagsBits = 0xD000000000000021;
    v35._countAndFlagsBits = 0xD00000000000003ELL;
    v35._object = (void *)0x8000000100F845E0;
    v10._object = (void *)0x8000000100F84590;
    v11._object = (void *)0x8000000100F845C0;
    v11._countAndFlagsBits = 0xD000000000000012;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v35);
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v28 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:0];

    if (qword_1015CBF80 != -1) {
      swift_once();
    }
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = a4;
    v15[4] = a5;
    v15[5] = a6;
    swift_unknownObjectRetain();
    sub_1000F4F24(a5);
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v33 = sub_1002E890C;
    uint64_t v34 = v15;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    uint64_t v31 = sub_10025DB88;
    uint64_t v32 = &unk_1012E2A80;
    id v17 = _Block_copy(&aBlock);
    swift_release();
    id v18 = self;
    id v19 = [v18 actionWithTitle:v16 style:2 handler:v17];
    _Block_release(v17);

    swift_release();
    [v28 addAction:v19];
    if (qword_1015CBF90 != -1) {
      swift_once();
    }
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a5;
    *(void *)(v20 + 24) = a6;
    sub_1000F4F24(a5);
    swift_bridgeObjectRetain();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v33 = sub_1002E5CA0;
    uint64_t v34 = (void *)v20;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    uint64_t v31 = sub_10025DB88;
    uint64_t v32 = &unk_1012E2AD0;
    id v22 = _Block_copy(&aBlock);
    swift_release();
    id v23 = [v18 actionWithTitle:v21 style:1 handler:v22];
    _Block_release(v22);

    [v28 addAction:v23];
    [a7 _maps_topMostPresentViewController:v28 animated:1 completion:0];
  }
  else
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
    *(void *)(inited + 32) = a4;
    uint64_t aBlock = (void **)inited;
    specialized Array._endMutation()();
    unint64_t v25 = (unint64_t)aBlock;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a5;
    *(void *)(v26 + 24) = a6;
    swift_unknownObjectRetain();
    sub_1000F4F24(a5);
    sub_1002DF408(v25, sub_1002E8890, v26);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1002DF2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
    *(void *)(inited + 32) = a3;
    unint64_t v12 = inited;
    specialized Array._endMutation()();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a4;
    *(void *)(v11 + 24) = a5;
    swift_unknownObjectRetain();
    sub_1000F4F24(a4);
    sub_1002DF408(v12, sub_1002E8890, v11);
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002DF408(unint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = result;
    if (!result) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_20;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) == 0)
  {
    uint64_t v20 = v3;
    type metadata accessor for MapsSyncObject();
    for (uint64_t i = 0; i != v11; ++i)
    {
      if (swift_dynamicCastClass())
      {
        swift_unknownObjectRetain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v20;
    goto LABEL_21;
  }
  for (uint64_t j = 0; j != v11; ++j)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    type metadata accessor for MapsSyncObject();
    if (swift_dynamicCastClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
LABEL_20:
  swift_bridgeObjectRelease();
LABEL_21:
  unint64_t v15 = v21;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19 > 0) {
      goto LABEL_23;
    }
  }
  else if (*(uint64_t *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_23:
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v10, 1, 1, v16);
    id v17 = (void *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    _OWORD v17[5] = v4;
    v17[6] = a2;
    v17[7] = a3;
    id v18 = v4;
    sub_1000F4F24((uint64_t)a2);
    sub_100042AF4((uint64_t)v10, (uint64_t)&unk_1015DA408, (uint64_t)v17);
    return swift_release();
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (a2) {
    return a2(0);
  }
  return result;
}

void sub_1002DF8F8(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

void sub_1002DF968(unint64_t a1, void *a2, void (*a3)(uint64_t, void, __n128), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = sub_1000FF33C(&qword_1015CD250);
  __n128 v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v22 == 1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      if (v15 == 1)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_7;
        }
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v16 = *(void *)(a1 + 32);
          swift_unknownObjectRetain();
LABEL_7:
          uint64_t v17 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
          id v18 = (void *)swift_allocObject();
          v18[2] = 0;
          v18[3] = 0;
          v18[4] = v5;
          v18[5] = v16;
          v18[6] = a3;
          v18[7] = a4;
          v18[8] = a2;
          v18[9] = ObjectType;
          id v19 = v5;
          swift_unknownObjectRetain();
          sub_1000F4F24((uint64_t)a3);
          id v20 = a2;
          sub_100042AF4((uint64_t)v14, (uint64_t)&unk_1015DA3F0, (uint64_t)v18);
          swift_release();
          swift_unknownObjectRelease();
          return;
        }
        __break(1u);
        goto LABEL_21;
      }
LABEL_10:
      id v42 = a2;
      if (qword_1015CBD78 == -1)
      {
LABEL_11:
        v23.super.Class isa = (Class)qword_101611820;
        v24._countAndFlagsBits = 0xD000000000000024;
        v49._countAndFlagsBits = 0xD000000000000037;
        v25._countAndFlagsBits = 0xD000000000000069;
        v49._object = (void *)0x8000000100F84490;
        v24._object = (void *)0x8000000100F843F0;
        v25._object = (void *)0x8000000100F84420;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)qword_101611820, v25, v49);
        v26._countAndFlagsBits = 0xD000000000000022;
        v50._countAndFlagsBits = 0xD000000000000046;
        v50._object = (void *)0x8000000100F84520;
        v26._object = (void *)0x8000000100F844D0;
        v27._object = (void *)0x8000000100F84500;
        v27._countAndFlagsBits = 0xD000000000000014;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, v23, v27, v50);
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v30 = [self alertControllerWithTitle:v28 message:v29 preferredStyle:0];

        if (qword_1015CBF80 != -1) {
          swift_once();
        }
        uint64_t v31 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v32 = (void *)swift_allocObject();
        v32[2] = v31;
        v32[3] = a1;
        v32[4] = a3;
        v32[5] = a4;
        swift_bridgeObjectRetain();
        sub_1000F4F24((uint64_t)a3);
        swift_bridgeObjectRetain();
        swift_retain();
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v47 = sub_1002E5C90;
        id v48 = v32;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        id v45 = sub_10025DB88;
        unsigned int v46 = &unk_1012E2990;
        uint64_t v34 = _Block_copy(&aBlock);
        swift_release();
        Swift::String v35 = self;
        id v36 = [v35 actionWithTitle:v33 style:2 handler:v34];
        _Block_release(v34);

        swift_release();
        [v30 addAction:v36];
        if (qword_1015CBF90 != -1) {
          swift_once();
        }
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = a3;
        *(void *)(v37 + 24) = a4;
        sub_1000F4F24((uint64_t)a3);
        swift_bridgeObjectRetain();
        NSString v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v47 = sub_1002E5CA0;
        id v48 = (void *)v37;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        id v45 = sub_10025DB88;
        unsigned int v46 = &unk_1012E29E0;
        uint64_t v39 = _Block_copy(&aBlock);
        swift_release();
        id v40 = [v35 actionWithTitle:v38 style:1 handler:v39];
        _Block_release(v39);

        [v30 addAction:v40];
        [v42 _maps_topMostPresentViewController:v30 animated:1 completion:0];

        return;
      }
LABEL_21:
      swift_once();
      goto LABEL_11;
    }
  }
  if (a3) {
    a3(1, 0, v12);
  }
}

void sub_1002DFFC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a4;
    *(void *)(v10 + 24) = a5;
    sub_1000F4F24(a4);
    sub_1002DF408(a3, sub_1002E8890, v10);
    swift_release();
  }
}

uint64_t sub_1002E0174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return _swift_task_switch(sub_1002E0198, 0, 0);
}

uint64_t sub_1002E0198()
{
  unint64_t v4 = *(void *)(v0 + 152);
  *(void *)(v0 + 136) = v4;
  uint64_t v5 = (objc_class *)(v0 + 136);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    *(void *)(v0 + 184) = v6;
    if (v6)
    {
LABEL_3:
      if (v6 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v7 = 0;
        while (1)
        {
          *(void *)(v0 + 192) = 0;
          *(void *)(v0 + 200) = v7;
          uint64_t v8 = *(void *)(v0 + 152);
          id v9 = (v8 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : *(id *)(v8 + 8 * v7 + 32);
          uint64_t v10 = v9;
          *(void *)(v0 + 208) = v9;
          type metadata accessor for FavoriteItem();
          uint64_t v11 = swift_dynamicCastClass();
          if (v11) {
            break;
          }
          id v12 = v10;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          uint64_t v7 = *(void *)(v0 + 200) + 1;
          if (v7 == *(void *)(v0 + 184)) {
            goto LABEL_19;
          }
        }
        uint64_t v6 = v11;
        uint64_t v5 = (objc_class *)type metadata accessor for MapsFavoriteItem();
        uint64_t v13 = objc_allocWithZone(v5);
        uint64_t v14 = &v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
        *uint64_t v14 = 0;
        v14[1] = 0;
        v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
        uint64_t v15 = &v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
        *uint64_t v15 = 0x6966654472657355;
        v15[1] = 0xEB0000000064656ELL;
        *(void *)&v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
        v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
        v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
        v13[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
        uint64_t v3 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
        uint64_t v16 = qword_1015CBCC0;
        id v2 = v10;
        uint64_t v1 = v13;
        if (v16 == -1) {
          goto LABEL_14;
        }
      }
      swift_once();
LABEL_14:
      v1[v3] = byte_101611638;
      *(void *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
      *(void *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v6;
      id v17 = v2;

      *(void *)(v0 + 120) = v1;
      *(void *)(v0 + 128) = v5;
      [v0 init];
      *(void *)(v0 + 248) = v18;

      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_1002E06FC;
      uint64_t v19 = swift_continuation_init();
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_100341328;
      *(void *)(v0 + 104) = &unk_1012E2B48;
      *(void *)(v0 + 112) = v19;
      [v18 deleteWithDeleteFromLibrary:1 completionHandler:v0 + 80];
      return _swift_continuation_await(v0 + 16);
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    *(void *)(v0 + 184) = v6;
    if (v6) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = (objc_class *)(v0 + 152);
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)v5;
  *(void *)(v0 + 216) = *(void *)v5;
  *(void *)(v0 + 224) = 0;
  NSBundle v23 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1002E05BC;
  return v23(v20);
}

uint64_t sub_1002E05BC()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    id v2 = sub_1002E1548;
  }
  else
  {
    id v2 = sub_1002E0BF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002E06FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 256) = v1;
  if (v1) {
    id v2 = sub_1002E0FEC;
  }
  else {
    id v2 = sub_1002E080C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002E080C()
{
  uint64_t v1 = *(void **)(v0 + 208);

  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200) + 1;
  if (v3 == *(void *)(v0 + 184))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v0 + 136);
    *(void *)(v0 + 216) = v4;
    *(void *)(v0 + 224) = v2;
    uint64_t v24 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v5;
    void *v5 = v0;
    v5[1] = sub_1002E05BC;
    return v24(v4);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 192) = v2;
      *(void *)(v0 + 200) = v3;
      uint64_t v7 = *(void *)(v0 + 152);
      id v8 = (v7 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v7 + 8 * v3 + 32);
      id v9 = v8;
      *(void *)(v0 + 208) = v8;
      type metadata accessor for FavoriteItem();
      uint64_t v10 = swift_dynamicCastClass();
      if (v10) {
        break;
      }
      id v11 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v3 = *(void *)(v0 + 200) + 1;
      if (v3 == *(void *)(v0 + 184)) {
        goto LABEL_2;
      }
    }
    uint64_t v12 = v10;
    uint64_t v13 = (objc_class *)type metadata accessor for MapsFavoriteItem();
    uint64_t v14 = objc_allocWithZone(v13);
    uint64_t v15 = &v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
    *uint64_t v15 = 0;
    v15[1] = 0;
    v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
    uint64_t v16 = &v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
    void *v16 = 0x6966654472657355;
    v16[1] = 0xEB0000000064656ELL;
    *(void *)&v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
    v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
    v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
    v14[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
    uint64_t v17 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
    uint64_t v18 = qword_1015CBCC0;
    id v19 = v9;
    uint64_t v20 = v14;
    if (v18 != -1) {
      swift_once();
    }
    v20[v17] = byte_101611638;
    *(void *)&v20[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
    *(void *)&v20[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v12;
    id v21 = v19;

    *(void *)(v0 + 120) = v20;
    *(void *)(v0 + 128) = v13;
    id v22 = [super init];
    *(void *)(v0 + 248) = v22;

    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_1002E06FC;
    uint64_t v23 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100341328;
    *(void *)(v0 + 104) = &unk_1012E2B48;
    *(void *)(v0 + 112) = v23;
    [v22 deleteWithDeleteFromLibrary:1 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
}

uint64_t sub_1002E0BF0()
{
  uint64_t v1 = v0[28];
  if (v1)
  {
    swift_errorRetain();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRelease();
    v0[34] = v1;
    if (qword_1015CBD30 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000F2248(v2, (uint64_t)qword_101611748);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      swift_errorRetain();
      uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
      v0[18] = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v6 = v7;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "LibraryDataOperationsProvider: deleteFromLibrary() Error deleting :%@", v5, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    type metadata accessor for MainActor();
    v0[35] = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    id v11 = sub_1002E0F0C;
  }
  else
  {
    type metadata accessor for MainActor();
    v0[33] = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v9;
    id v11 = sub_1002E0E84;
  }
  return _swift_task_switch(v11, v8, v10);
}

uint64_t sub_1002E0E84()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  if (v1) {
    (*(void (**)(void))(v0 + 168))(0);
  }
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1001E9C34, 0, 0);
}

uint64_t sub_1002E0F0C()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  if (v1) {
    (*(void (**)(void))(v0 + 168))(*(void *)(v0 + 272));
  }
  return _swift_task_switch(sub_1002E0F8C, 0, 0);
}

uint64_t sub_1002E0F8C()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E0FEC()
{
  uint64_t v1 = *(void **)(v0 + 248);
  swift_willThrow();

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000F2248(v2, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void **)(v0 + 208);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 4) = v9;
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "LibraryDataOperationsProvider: deleteFromLibrary() Error deleting favorite :%@", (uint8_t *)v7, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = *(void *)(v0 + 192);

  uint64_t v11 = *(void *)(v0 + 256);
  if (v10)
  {
    swift_errorRelease();
    uint64_t v11 = *(void *)(v0 + 192);
  }
  uint64_t v12 = *(void *)(v0 + 200) + 1;
  if (v12 == *(void *)(v0 + 184))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v0 + 136);
    *(void *)(v0 + 216) = v13;
    *(void *)(v0 + 224) = v11;
    NSString v33 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1002E05BC;
    return v33(v13);
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 192) = v11;
      *(void *)(v0 + 200) = v12;
      uint64_t v16 = *(void *)(v0 + 152);
      id v17 = (v16 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v16 + 8 * v12 + 32);
      uint64_t v18 = v17;
      *(void *)(v0 + 208) = v17;
      type metadata accessor for FavoriteItem();
      uint64_t v19 = swift_dynamicCastClass();
      if (v19) {
        break;
      }
      id v20 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v12 = *(void *)(v0 + 200) + 1;
      if (v12 == *(void *)(v0 + 184)) {
        goto LABEL_9;
      }
    }
    uint64_t v21 = v19;
    id v22 = (objc_class *)type metadata accessor for MapsFavoriteItem();
    uint64_t v23 = objc_allocWithZone(v22);
    uint64_t v24 = &v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
    *uint64_t v24 = 0;
    v24[1] = 0;
    v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
    uint64_t v25 = &v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
    *uint64_t v25 = 0x6966654472657355;
    v25[1] = 0xEB0000000064656ELL;
    *(void *)&v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
    v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
    v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
    v23[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
    uint64_t v26 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
    uint64_t v27 = qword_1015CBCC0;
    id v28 = v18;
    NSString v29 = v23;
    if (v27 != -1) {
      swift_once();
    }
    v29[v26] = byte_101611638;
    *(void *)&v29[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
    *(void *)&v29[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v21;
    id v30 = v28;

    *(void *)(v0 + 120) = v29;
    *(void *)(v0 + 128) = v22;
    [v0 init];
    *(void *)(v0 + 248) = v31;

    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_1002E06FC;
    uint64_t v32 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100341328;
    *(void *)(v0 + 104) = &unk_1012E2B48;
    *(void *)(v0 + 112) = v32;
    [v31 deleteWithDeleteFromLibrary:1 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
}

uint64_t sub_1002E1548()
{
  swift_errorRelease();
  v0[34] = v0[30];
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    BOOL v5 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LibraryDataOperationsProvider: deleteFromLibrary() Error deleting :%@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  type metadata accessor for MainActor();
  v0[35] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002E0F0C, v8, v7);
}

void sub_1002E1864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    v6[4] = a3;
    uint64_t v6[5] = a4;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    _OWORD v6[2] = sub_100341218;
    v6[3] = &unk_1012E2E88;
    BOOL v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    BOOL v5 = 0;
  }
  [self deleteRoute:a2 completion:v5];
  _Block_release(v5);
}

uint64_t sub_1002E1A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  _OWORD v7[3] = a4;
  _OWORD v7[4] = a5;
  return _swift_task_switch(sub_1002E1A34, 0, 0);
}

uint64_t sub_1002E1A34()
{
  uint64_t v1 = v0[3];
  type metadata accessor for FavoriteItemRequest();
  v0[7] = FavoriteItemRequest.__allocating_init()();
  os_log_type_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_1002E1AF8;
  return v4(v1);
}

uint64_t sub_1002E1AF8(uint64_t a1)
{
  uint64_t v3 = *v2;
  os_log_type_t v4 = *(void **)(*v2 + 56);
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();

  if (v1) {
    uint64_t v5 = sub_1002E2234;
  }
  else {
    uint64_t v5 = sub_1002E1C28;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002E1C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3[9];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    a1 = swift_bridgeObjectRelease();
    if (v9)
    {
LABEL_3:
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return _swift_task_switch(a1, a2, a3);
        }
        id v5 = *(id *)(v3[9] + 32);
      }
      swift_bridgeObjectRelease();
      v3[15] = v5;
      type metadata accessor for MainActor();
      swift_unknownObjectRetain();
      v3[16] = static MainActor.shared.getter();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v7;
      a1 = (uint64_t)sub_1002E2068;
      a2 = v6;
      a3 = v8;
      return _swift_task_switch(a1, a2, a3);
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v10 = v3[4];
  swift_bridgeObjectRelease();
  type metadata accessor for CollectionPlaceItemRequest();
  v3[11] = CollectionPlaceItemRequest.__allocating_init()();
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                        + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  uint64_t v11 = (void *)swift_task_alloc();
  v3[12] = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_1002E1DFC;
  return v13(v10);
}

uint64_t sub_1002E1DFC(uint64_t a1)
{
  uint64_t v3 = *v2;
  unint64_t v4 = *(void **)(*v2 + 88);
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();

  if (v1) {
    id v5 = sub_1002E245C;
  }
  else {
    id v5 = sub_1002E1F2C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002E1F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3[13];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    a1 = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v5 = 0;
    goto LABEL_9;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return _swift_task_switch(a1, a2, a3);
    }
    id v5 = *(id *)(v3[13] + 32);
  }
  swift_bridgeObjectRelease();
LABEL_9:
  v3[15] = v5;
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  v3[16] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v9 = v8;
  a1 = (uint64_t)sub_1002E2068;
  a2 = v7;
  a3 = v9;
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_1002E2068()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void (**)(uint64_t, void))(v0 + 40);
  swift_release();
  v2(v1, 0);
  return _swift_task_switch(sub_1002E20EC, 0, 0);
}

uint64_t sub_1002E20EC()
{
  swift_unknownObjectRelease_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E2150()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void (**)(void, uint64_t))(v0 + 40);
  swift_release();
  v2(0, v1);
  return _swift_task_switch(sub_1002E21D4, 0, 0);
}

uint64_t sub_1002E21D4()
{
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E2234()
{
  v0[17] = v0[10];
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LibraryDataOperationsProvider: existingPlaceItem() Error fetching :%@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  type metadata accessor for MainActor();
  v0[18] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002E2150, v8, v7);
}

uint64_t sub_1002E245C()
{
  v0[17] = v0[14];
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LibraryDataOperationsProvider: existingPlaceItem() Error fetching :%@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  type metadata accessor for MainActor();
  v0[18] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002E2150, v8, v7);
}

uint64_t sub_1002E2888(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)&dword_1015DA4B8 + dword_1015DA4B8);
  id v6 = a1;
  id v7 = a3;
  uint64_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1002E295C;
  return v10((uint64_t)v6);
}

uint64_t sub_1002E295C()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 24);
  id v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v7 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    Class isa = 0;
    uint64_t v9 = (void *)v7;
  }
  else
  {
    sub_1000FF33C(&qword_1015D6930);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    uint64_t v9 = isa;
  }
  uint64_t v10 = *(void (***)(void, void, void))(v3 + 32);
  ((void (**)(void, Class, uint64_t))v10)[2](v10, isa, v7);

  _Block_release(v10);
  uint64_t v11 = *(uint64_t (**)(void))(v6 + 8);
  return v11();
}

uint64_t sub_1002E2B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_1015DA4B8 + dword_1015DA4B8);
  uint64_t v9 = (void *)swift_task_alloc();
  v7[11] = v9;
  void *v9 = v7;
  v9[1] = sub_1002E2BC0;
  return v11(a5);
}

uint64_t sub_1002E2BC0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1002E32BC;
  }
  else {
    uint64_t v4 = sub_1002E2CD4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002E2CD4()
{
  unint64_t v1 = v0[12];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 >= 1)
  {
    if (qword_1015CBD30 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    v0[14] = sub_1000F2248(v3, (uint64_t)qword_101611748);
    swift_bridgeObjectRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    uint64_t v26 = v0;
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      v0[6] = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: updateSavedPlaceItems(): Found %ld matching items to update", v6, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_18:
        uint64_t result = self;
        if (v13 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = (void *)result;
        uint64_t v15 = 0;
        unint64_t v27 = v1 & 0xC000000000000001;
        uint64_t v16 = v0[12] + 32;
        do
        {
          if (v27)
          {
            uint64_t v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v18 = *(void **)(v16 + 8 * v15);
            swift_unknownObjectRetain();
          }
          id v19 = [v14 mapItemStorageForGEOMapItem:v0[9] v26];
          id v20 = v19;
          if (v19)
          {
            id v21 = v19;
            id v22 = [v18 mapItemStorage];
            if (v22)
            {
              uint64_t v23 = v22;
              id v17 = [v22 _clientAttributes];
            }
            else
            {
              id v17 = 0;
            }
            [v21 setClientAttributes:v17];

            uint64_t v0 = v26;
          }
          ++v15;
          [v18 setMapItemStorage:v20];

          swift_unknownObjectRelease();
        }
        while (v13 != v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if (v27)
        {
          for (uint64_t i = 0; i != v13; ++i)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            type metadata accessor for MapsSyncObject();
            if (swift_dynamicCastClass())
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }
        else
        {
          type metadata accessor for MapsSyncObject();
          do
          {
            if (swift_dynamicCastClass())
            {
              swift_unknownObjectRetain();
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v16 += 8;
            --v13;
          }
          while (v13);
        }
      }
    }
    swift_bridgeObjectRelease();
    v0[15] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    id v28 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                           + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    uint64_t v25 = (void *)swift_task_alloc();
    v0[16] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1002E34B8;
    return v28(_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease();
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000F2248(v7, (uint64_t)qword_101611748);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "LibraryDataOperationsProvider: updateSavedPlaceItems(): Found no matching items to update", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1002E32BC()
{
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LibraryDataOperationsProvider: updateSavedPlaceItems() Error :%@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002E34B8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002E3814;
  }
  else {
    uint64_t v2 = sub_1002E35CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002E35CC()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = *(id *)(v0 + 64);
  id v3 = v1;
  id v4 = v2;
  id v5 = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = *(void *)(v0 + 120);
  if (v8)
  {
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218496;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v12 = *(void **)(v0 + 80);
    uint64_t v13 = *(void **)(v0 + 64);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2048;
    id v14 = [v13 _muid];

    *(void *)(v0 + 32) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v10 + 22) = 2048;
    id v15 = [v12 _muid];

    *(void *)(v0 + 40) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LibraryDataOperationsProvider: updateSavedPlaceItems(): updated %ld items. Old id: %llu | New id:%llu", (uint8_t *)v10, 0x20u);
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 80);
    id v17 = *(void **)(v0 + 64);

    swift_bridgeObjectRelease_n();
  }

  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1002E3814()
{
  swift_bridgeObjectRelease();
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    *(_DWORD *)id v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LibraryDataOperationsProvider: updateSavedPlaceItems() Error :%@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002E3BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a1;
  *(void *)(v4 + 128) = a4;
  return _swift_task_switch(sub_1002E3BE0, 0, 0);
}

uint64_t sub_1002E3BE0()
{
  uint64_t v1 = (void *)v0[16];
  id v2 = objc_allocWithZone((Class)type metadata accessor for MapsFavoriteItem());
  id v3 = v1;
  id v4 = sub_10001C0CC(v3);
  v0[17] = v4;

  v0[2] = v0;
  v0[3] = sub_1002E3D00;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100341328;
  v0[13] = &unk_1012E2CB8;
  v0[14] = v5;
  [v4 deleteWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002E3D00()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    id v2 = sub_1002E3E80;
  }
  else {
    id v2 = sub_1002E3E10;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002E3E10()
{
  uint64_t v1 = *(void *)(v0 + 144);
  id v2 = *(BOOL **)(v0 + 120);

  BOOL *v2 = v1 != 0;
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002E3E80()
{
  swift_willThrow();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 144);
  id v2 = *(BOOL **)(v0 + 120);

  BOOL *v2 = v1 != 0;
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002E3F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 128) = a4;
  *(void *)(v5 + 136) = a5;
  return _swift_task_switch(sub_1002E3F84, 0, 0);
}

uint64_t sub_1002E3F84()
{
  uint64_t v1 = (void *)v0[16];
  id v2 = objc_allocWithZone((Class)type metadata accessor for MapsFavoriteItem());
  id v3 = sub_1003416D8(v1);
  v0[18] = v3;
  v0[2] = v0;
  v0[3] = sub_1002E409C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100341328;
  v0[13] = &unk_1012E2C50;
  v0[14] = v4;
  [v3 moveToBackWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002E409C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    id v2 = sub_1002E4450;
  }
  else {
    id v2 = sub_1002E41AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002E41AC()
{
  uint64_t v1 = v0[18];
  id v2 = (void *)v0[16];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5F0D0;
  *(void *)(v3 + 32) = v2;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  *(void *)(v3 + 40) = v4;
  uint64_t v10 = v3;
  specialized Array._endMutation()();
  v0[20] = v10;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  id v5 = v2;
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[21] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002E42D4;
  return v9(v10);
}

uint64_t sub_1002E42D4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1002E4658;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_1002E43F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002E43F0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E4450()
{
  uint64_t v1 = (void *)v0[18];
  swift_willThrow();

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000F2248(v2, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "LibraryDataOperationsProvider: saveAsFavorite() Error saving :%@", v5, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  BOOL v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002E4658()
{
  uint64_t v1 = (void *)v0[18];
  swift_bridgeObjectRelease();

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000F2248(v2, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "LibraryDataOperationsProvider: saveAsFavorite() Error saving :%@", v5, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  BOOL v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void LibraryDataOperationsProvider.init()()
{
}

id sub_1002E49F8(id a1, SEL a2)
{
  id v2 = a1;
  uint64_t v3 = (void *)dispatch thunk of CollectionPlaceItem.mapItemStorage.getter();
  if (v3
    && (os_log_type_t v4 = v3, v5 = [v3 _styleAttributes], v4, v5)
    || (id result = [self markerStyleAttributes],
        (id v5 = result) != 0))
  {

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id CollectionPlaceItem.styleAttributes.getter()
{
  uint64_t v0 = (void *)dispatch thunk of CollectionPlaceItem.mapItemStorage.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 _styleAttributes];

    if (v2) {
      return v2;
    }
  }
  id result = [self markerStyleAttributes];
  id v2 = result;
  if (result) {
    return v2;
  }
  __break(1u);
  return result;
}

id sub_1002E4B0C(id a1, SEL a2)
{
  id v2 = a1;
  id v3 = FavoriteItem.styleAttributes.getter();

  return v3;
}

id FavoriteItem.styleAttributes.getter()
{
  switch((unsigned __int16)dispatch thunk of FavoriteItem.type.getter())
  {
    case 0u:
    case 1u:
      uint64_t v0 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      if (!v0
        || (v1 = v0, id v2 = [v0 _styleAttributes],
                     v1,
                     !v2))
      {
        id v2 = [self markerStyleAttributes];
        if (!v2)
        {
          __break(1u);
          goto LABEL_6;
        }
      }
      return v2;
    case 2u:
LABEL_6:
      id v2 = [self homeStyleAttributes];
      if (!v2)
      {
        __break(1u);
        goto LABEL_8;
      }
      return v2;
    case 3u:
LABEL_8:
      id v2 = [self workStyleAttributes];
      if (!v2)
      {
        __break(1u);
        goto LABEL_10;
      }
      return v2;
    case 5u:
      goto LABEL_14;
    case 6u:
      goto LABEL_16;
    default:
LABEL_10:
      id v3 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      if (v3)
      {
        os_log_type_t v4 = v3;
        id v2 = [v3 _styleAttributes];

        if (v2) {
          return v2;
        }
      }
      id v2 = [self markerStyleAttributes];
      if (v2) {
        return v2;
      }
      __break(1u);
LABEL_14:
      id v2 = [self schoolStyleAttributes];
      if (v2) {
        return v2;
      }
      __break(1u);
LABEL_16:
      id v2 = [self nearbyTransitStyleAttributes];
      if (!v2)
      {
        __break(1u);
        JUMPOUT(0x1002E4D00);
      }
      return v2;
  }
}

MKMapItem_optional __swiftcall LibraryPlaceItemCompatible.createMapItemFromStorage()()
{
  id v1 = [v0 mapItemStorage];
  if (v1)
  {
    id v3 = v1;
    id v4 = [v0 customName];
    if (v4)
    {
      id v5 = v4;
      id v6 = [objc_allocWithZone((Class)GEOMapItemStorageUserValues) init];
      [v6 setName:v5];

      [v3 setUserValues:v6];
    }
    uint64_t v7 = (objc_class *)[self _itemWithGeoMapItem:v3];
  }
  else
  {
    uint64_t v7 = 0;
  }
  BOOL v8 = v7;
  result.value.super.Class isa = v8;
  result.is_nil = v2;
  return result;
}

uint64_t static CollectionPlaceItem.excludeShadowItemsPredicate.getter()
{
  type metadata accessor for MapsSyncQueryPredicate();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100F5CF70;
  *(void *)(v0 + 56) = &type metadata for Int16;
  *(void *)(v0 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v0 + 32) = 6;
  uint64_t v1 = static MapsSyncQueryPredicate.withFormat(_:_:)();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1002E5290(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_1015DA3F8 + dword_1015DA3F8);
  swift_unknownObjectRetain();
  id v6 = a3;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1002E5364;
  return v9(a1);
}

uint64_t sub_1002E5364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  id v5 = *(void **)(*v2 + 24);
  uint64_t v6 = *v2;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  BOOL v8 = *(void (***)(void, void))(v4 + 32);
  ((void (**)(void, NSString))v8)[2](v8, v7);

  _Block_release(v8);
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_1002E54EC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  id v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *id v3 = v2;
  v3[1] = sub_1002E55CC;
  return v5(v2 + 32);
}

uint64_t sub_1002E55CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  unsigned char *v2 = *(unsigned char *)(v1 + 32);
  id v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1002E56E0(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  MKMapItem_optional result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    MKMapItem_optional result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    MKMapItem_optional result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_100100830(0, (unint64_t *)&qword_1015D9240);
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1002E5884(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  MKMapItem_optional result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    MKMapItem_optional result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    MKMapItem_optional result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for Collection();
    Swift::Int v10 = 0;
    do
    {
      Swift::Int v11 = v10 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v10);
      Swift::Int v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

id sub_1002E5A18()
{
  sub_1000FF33C(&qword_1015CC060);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = 0xD000000000000011;
  *(void *)(inited + 56) = 0x8000000100F84CF0;
  sub_1001160B4(inited);
  id v2 = objc_allocWithZone((Class)NSError);
  NSString v3 = String._bridgeToObjectiveC()();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithDomain:v3 code:0 userInfo:isa];

  return v5;
}

uint64_t sub_1002E5B38()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100105268;
  *(_OWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_1002E1A34, 0, 0);
}

uint64_t type metadata accessor for LibraryDataOperationsProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for CollectionPlaceItem.MapsPredicate()
{
  return &type metadata for CollectionPlaceItem.MapsPredicate;
}

uint64_t type metadata accessor for MapsSyncPlaceItemMapStorageUpdater()
{
  return self;
}

uint64_t sub_1002E5C40()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E5C78()
{
  return sub_1002E88AC((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1002E5C90(uint64_t a1)
{
  sub_1002DFFC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1002E5CA8()
{
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v6;
  *(void *)uint64_t v6 = v1;
  *(void *)(v6 + 8) = sub_100105268;
  *(_OWORD *)(v6 + 48) = v7;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v2;
  Swift::Int v10 = (uint64_t (*)(uint64_t))((char *)&dword_1015DA3F8 + dword_1015DA3F8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 64) = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1002DEBA4;
  return v10(v2);
}

void sub_1002E5DBC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ([a1 _geoMapItem])
  {
    swift_unknownObjectRetain();
    id v7 = [a1 _geoMapItemStorageForPersistence];
    uint64_t v37 = v6;
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [v7 userValues];

      if (v9)
      {
        id v10 = [v9 name];

        if (v10)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
    id v16 = objc_allocWithZone(Predicate);
    id v17 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    uint64_t v18 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    id v19 = (objc_class *)type metadata accessor for MapsSyncRange();
    id v20 = objc_allocWithZone(v19);
    id v21 = v17;
    MapsSyncRange.init(offset:limit:)();
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    id v23 = objc_allocWithZone(Options);
    uint64_t v24 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_100F5F0D0;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v18;
    uint64_t v38 = v25;
    specialized Array._endMutation()();
    id v26 = objc_allocWithZone(Predicate);
    id v11 = v21;
    id v27 = v18;
    MapsSyncQueryPredicate.init(and:)();
    id v28 = objc_allocWithZone(v19);
    MapsSyncRange.init(offset:limit:)();
    id v29 = objc_allocWithZone(Options);
    id v30 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    uint64_t v31 = type metadata accessor for TaskPriority();
    uint64_t v32 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v37, 1, 1, v31);
    NSString v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = v30;
    v33[5] = v24;
    v33[6] = sub_1002EA43C;
    v33[7] = a2;
    id v34 = v30;
    id v35 = v24;
    swift_retain();
    sub_100042AF4(v32, (uint64_t)&unk_1015DA568, (uint64_t)v33);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    id v11 = sub_1002E5A18();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v13 = (void *)Strong;
      *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 0;
      id v14 = (void *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
      swift_beginAccess();
      *id v14 = 0;
      sub_100237F08();
      swift_release();

      id v11 = v13;
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1002E61A0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v17 - 8);
  uint64_t v53 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = (void *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a7;
  uint64_t v52 = a8;
  v19[8] = a8;
  v19[9] = a9;
  swift_bridgeObjectRetain();
  swift_retain();
  a4;
  id v20 = a5;
  swift_bridgeObjectRetain();
  id v21 = [a1 _geoMapItem];
  if (v21)
  {
    id v22 = v21;
    swift_unknownObjectRetain();
    id v23 = [a1 _geoMapItemStorageForPersistence];
    uint64_t v24 = v23;
    if (v23)
    {
      id v25 = [v23 userValues];

      if (v25)
      {
        id v26 = [v25 name];

        if (v26)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
    id v30 = objc_allocWithZone(Predicate);
    id v51 = v22;
    uint64_t v31 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    uint64_t v32 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    NSString v33 = (objc_class *)type metadata accessor for MapsSyncRange();
    id v34 = objc_allocWithZone(v33);
    id v35 = v31;
    MapsSyncRange.init(offset:limit:)();
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    id v37 = objc_allocWithZone(Options);
    uint64_t v38 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_100F5F0D0;
    *(void *)(v39 + 32) = v35;
    *(void *)(v39 + 40) = v32;
    uint64_t v54 = v39;
    specialized Array._endMutation()();
    id v40 = objc_allocWithZone(Predicate);
    id v41 = v35;
    id v42 = v32;
    MapsSyncQueryPredicate.init(and:)();
    id v43 = objc_allocWithZone(v33);
    MapsSyncRange.init(offset:limit:)();
    id v44 = objc_allocWithZone(Options);
    id v45 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    uint64_t v46 = type metadata accessor for TaskPriority();
    uint64_t v47 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v53, 1, 1, v46);
    id v48 = (void *)swift_allocObject();
    v48[2] = 0;
    v48[3] = 0;
    v48[4] = v45;
    v48[5] = v38;
    v48[6] = sub_1002EA2E4;
    v48[7] = v19;
    id v49 = v45;
    id v50 = v38;
    swift_retain();
    sub_100042AF4(v47, (uint64_t)&unk_1015DA548, (uint64_t)v48);

    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  else
  {
    id v27 = sub_1002E5A18();
    sub_1002DE100(v20, a6, a7, v52, a9, a2, a3);

    return swift_release();
  }
}

void sub_1002E65E0(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  swift_retain();
  swift_retain();
  if ([a1 _geoMapItem])
  {
    swift_unknownObjectRetain();
    id v12 = [a1 _geoMapItemStorageForPersistence];
    v41[0] = v10;
    if (v12)
    {
      uint64_t v13 = v12;
      id v14 = [v12 userValues];

      if (v14)
      {
        id v15 = [v14 name];

        if (v15)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
    id v21 = objc_allocWithZone(Predicate);
    id v22 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    id v23 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    uint64_t v24 = (objc_class *)type metadata accessor for MapsSyncRange();
    id v25 = objc_allocWithZone(v24);
    id v26 = v22;
    MapsSyncRange.init(offset:limit:)();
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    id v28 = objc_allocWithZone(Options);
    id v29 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100F5F0D0;
    *(void *)(v30 + 32) = v26;
    *(void *)(v30 + 40) = v23;
    v41[1] = v30;
    specialized Array._endMutation()();
    id v31 = objc_allocWithZone(Predicate);
    id v16 = v26;
    id v32 = v23;
    MapsSyncQueryPredicate.init(and:)();
    id v33 = objc_allocWithZone(v24);
    MapsSyncRange.init(offset:limit:)();
    id v34 = objc_allocWithZone(Options);
    id v35 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    uint64_t v36 = type metadata accessor for TaskPriority();
    uint64_t v37 = v41[0];
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v41[0], 1, 1, v36);
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = 0;
    v38[3] = 0;
    void v38[4] = v35;
    v38[5] = v29;
    v38[6] = sub_1002EA42C;
    v38[7] = v11;
    id v39 = v35;
    id v40 = v29;
    swift_retain();
    sub_100042AF4(v37, (uint64_t)&unk_1015DA560, (uint64_t)v38);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    id v16 = sub_1002E5A18();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = (unsigned char *)Strong;
      *(void *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) = 0;
      uint64_t v19 = swift_unknownObjectRelease();
      v18[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
      a3(v19);
      swift_release();

      id v16 = v18;
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1002E69E4(void *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  _Block_copy(a2);
  if ([a1 _geoMapItem])
  {
    swift_unknownObjectRetain();
    id v8 = [a1 _geoMapItemStorageForPersistence];
    v36[0] = v6;
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = [v8 userValues];

      if (v10)
      {
        id v11 = [v10 name];

        if (v11)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
    id v15 = objc_allocWithZone(Predicate);
    id v16 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    uint64_t v17 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    uint64_t v18 = (objc_class *)type metadata accessor for MapsSyncRange();
    id v19 = objc_allocWithZone(v18);
    id v20 = v16;
    MapsSyncRange.init(offset:limit:)();
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    id v22 = objc_allocWithZone(Options);
    id v23 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100F5F0D0;
    *(void *)(v24 + 32) = v20;
    *(void *)(v24 + 40) = v17;
    v36[1] = v24;
    specialized Array._endMutation()();
    id v25 = objc_allocWithZone(Predicate);
    id v26 = v20;
    id v27 = v17;
    MapsSyncQueryPredicate.init(and:)();
    id v28 = objc_allocWithZone(v18);
    MapsSyncRange.init(offset:limit:)();
    id v29 = objc_allocWithZone(Options);
    uint64_t v30 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    uint64_t v31 = type metadata accessor for TaskPriority();
    uint64_t v32 = v36[0];
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v36[0], 1, 1, v31);
    id v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = v30;
    v33[5] = v23;
    v33[6] = sub_1001DB674;
    v33[7] = v7;
    id v34 = v30;
    id v35 = v23;
    swift_retain();
    sub_100042AF4(v32, (uint64_t)&unk_1015DA528, (uint64_t)v33);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    id v12 = sub_1002E5A18();
    v36[0] = _convertErrorToNSError(_:)();
    a2[2](a2, 0, v36[0]);
    swift_release();

    uint64_t v13 = (void *)v36[0];
  }
}

uint64_t sub_1002E6DC4(uint64_t a1)
{
  v1[10] = a1;
  sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[13] = v2;
  v1[14] = *(void *)(v2 - 8);
  v1[15] = swift_task_alloc();
  return _swift_task_switch(sub_1002E6EC4, 0, 0);
}

uint64_t sub_1002E6EC4()
{
  uint64_t v1 = (void *)v0;
  id v2 = [*(id *)(v0 + 80) placeItemNote];
  *(void *)(v0 + 128) = v2;
  if (v2) {

  }
  type metadata accessor for FavoriteItem();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for CollectionPlaceItem();
    countAndFlagsBits = (void *)swift_dynamicCastClass();
    if (!countAndFlagsBits)
    {
LABEL_85:
      object = 0;
      goto LABEL_86;
    }
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v13 = v1[11];
    swift_unknownObjectRetain();
    dispatch thunk of CollectionPlaceItem.originalIdentifier.getter();
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11);
    sub_1000FF2E0(v13, (uint64_t *)&unk_1015D5DE0);
    BOOL v15 = v14 != 1 && (unsigned __int16)dispatch thunk of CollectionPlaceItem.type.getter() == 2;
    id v7 = countAndFlagsBits;
    BOOL v87 = v15;
    if (dispatch thunk of CollectionPlaceItem.type.getter())
    {
      if (qword_1015CBFC8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      long long v25 = static FavoriteCollectionHandler.title;
      swift_bridgeObjectRetain();
      uint64_t v9 = _swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1000FB364(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      }
      unint64_t v27 = v9[2];
      unint64_t v26 = v9[3];
      if (v27 >= v26 >> 1) {
        uint64_t v9 = sub_1000FB364((void *)(v26 > 1), v27 + 1, 1, v9);
      }
      v9[2] = v27 + 1;
      *(_OWORD *)&v9[2 * v27 + 4] = v25;
    }
    else
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    unint64_t v28 = dispatch thunk of CollectionItem.fetchCollections()();
    if (v9[2]) {
      uint64_t v29 = 2;
    }
    else {
      uint64_t v29 = 3;
    }
    uint64_t v30 = sub_1002E5884(v29, v28);
    unint64_t v32 = v31;
    uint64_t v34 = v33;
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    unint64_t v37 = (v36 >> 1) - v34;
    if (v36 >> 1 != v34)
    {
      if ((uint64_t)(v36 >> 1) <= v34)
      {
        __break(1u);
        goto LABEL_90;
      }
      id v64 = (id *)(v32 + 8 * v34);
      do
      {
        id v66 = *v64;
        uint64_t v67 = dispatch thunk of Collection.title.getter();
        if (v68)
        {
          uint64_t v69 = v67;
          uint64_t v70 = v68;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1000FB364(0, v9[2] + 1, 1, v9);
          }
          unint64_t v72 = v9[2];
          unint64_t v71 = v9[3];
          uint64_t v73 = v9;
          if (v72 >= v71 >> 1) {
            uint64_t v73 = sub_1000FB364((void *)(v71 > 1), v72 + 1, 1, v9);
          }
          v73[2] = v72 + 1;
          uint64_t v9 = v73;
          id v65 = &v73[2 * v72];
          v65[4] = v69;
          v65[5] = v70;
          swift_bridgeObjectRelease();
        }

        ++v64;
        --v37;
      }
      while (v37);
    }
    uint64_t v38 = v1[16];
    swift_unknownObjectRelease();

    int v8 = v87;
    if (v38) {
      char v39 = 1;
    }
    else {
      char v39 = v87;
    }
    if ((v39 & 1) == 0)
    {
      if (!v9[2])
      {
LABEL_84:

        swift_bridgeObjectRelease();
        countAndFlagsBits = 0;
        goto LABEL_85;
      }
      int v8 = 0;
    }
LABEL_32:
    id v40 = v9;
    int64_t v41 = v9[2];
    if (v41)
    {
      id v86 = v7;
      swift_bridgeObjectRetain();
      sub_10025AEF4(0, v41, 0);
      id v42 = v40 + 5;
      do
      {
        swift_bridgeObjectRetain();
        v1[5] = String._mapsui_quotedForLocale.getter();
        v1[6] = v43;
        v1[7] = 8237;
        id v44 = v1;
        v1[8] = 0xE200000000000000;
        uint64_t v89 = String.init<A>(_:)();
        uint64_t v90 = v45;
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v47 = _swiftEmptyArrayStorage[2];
        unint64_t v46 = _swiftEmptyArrayStorage[3];
        if (v47 >= v46 >> 1) {
          sub_10025AEF4(v46 > 1, v47 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v47 + 1;
        id v48 = &_swiftEmptyArrayStorage[2 * v47];
        v48[4] = v89;
        v48[5] = v90;
        v42 += 2;
        --v41;
        uint64_t v1 = v44;
      }
      while (v41);
      swift_bridgeObjectRelease();
      id v7 = v86;
    }
    uint64_t v9 = &type metadata for String;
    uint64_t v49 = v1[16];
    v1[9] = _swiftEmptyArrayStorage;
    sub_1000FF33C((uint64_t *)&unk_1015CE230);
    sub_10010B4F8();
    uint64_t v30 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v32 = v50;
    swift_bridgeObjectRelease();
    if (v49)
    {
      uint64_t v51 = HIBYTE(v32) & 0xF;
      if ((v32 & 0x2000000000000000) == 0) {
        uint64_t v51 = v30 & 0xFFFFFFFFFFFFLL;
      }
      if (v51)
      {
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v52.super.Class isa = (Class)qword_101611820;
        unint64_t v53 = 0xD00000000000002FLL;
        unint64_t v54 = 0xD00000000000004DLL;
        unint64_t v55 = 0xD000000000000063;
        unint64_t v84 = 0x8000000100F84AB0;
        unint64_t v56 = 0x8000000100F84A10;
        id v57 = "Removing place from your library will delete your attached note and remove it from these guides:\n%@";
        goto LABEL_52;
      }
    }
    uint64_t v58 = HIBYTE(v32) & 0xF;
    if (v8)
    {
      if ((v32 & 0x2000000000000000) != 0 ? HIBYTE(v32) & 0xF : v30 & 0xFFFFFFFFFFFFLL)
      {
        if (qword_1015CBD78 == -1)
        {
LABEL_51:
          v52.super.Class isa = (Class)qword_101611820;
          unint64_t v53 = 0xD000000000000030;
          unint64_t v54 = 0xD00000000000004ELL;
          unint64_t v55 = 0xD000000000000052;
          unint64_t v84 = 0x8000000100F849C0;
          unint64_t v56 = 0x8000000100F84920;
          id v57 = "Removing place from your library will unpin it and remove it from these guides:\n%@";
LABEL_52:
          unint64_t v60 = (unint64_t)(v57 - 32) | 0x8000000000000000;
LABEL_59:
          NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v53, (Swift::String_optional)0, v52, *(Swift::String *)&v55, *(Swift::String *)&v54);
          sub_1000FF33C((uint64_t *)&unk_1015D59C0);
          uint64_t v61 = swift_allocObject();
          *(_OWORD *)(v61 + 16) = xmmword_100F5CF70;
          *(void *)(v61 + 56) = v9;
          *(void *)(v61 + 64) = sub_10011A750();
          *(void *)(v61 + 32) = v30;
          *(void *)(v61 + 40) = v32;
          countAndFlagsBits = (void *)String.init(format:_:)();
          object = v62;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_86:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          id v83 = (uint64_t (*)(void *, void *))v1[1];
          return v83(countAndFlagsBits, object);
        }
LABEL_90:
        swift_once();
        goto LABEL_51;
      }
    }
    if ((v32 & 0x2000000000000000) == 0) {
      uint64_t v58 = v30 & 0xFFFFFFFFFFFFLL;
    }
    if (v58)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v52.super.Class isa = (Class)qword_101611820;
      unint64_t v53 = 0xD000000000000024;
      unint64_t v54 = 0xD00000000000003DLL;
      unint64_t v84 = 0x8000000100F846A0;
      unint64_t v56 = 0x8000000100F84620;
      unint64_t v60 = 0x8000000100F84650;
      unint64_t v55 = 0xD00000000000004ALL;
      goto LABEL_59;
    }
    swift_bridgeObjectRelease();
    uint64_t v74 = v1[16];
    if (v8)
    {
      if (v74)
      {
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v75.super.Class isa = (Class)qword_101611820;
        unint64_t v76 = 0xD00000000000002CLL;
        unint64_t v77 = 0xD00000000000004DLL;
        unint64_t v85 = 0x8000000100F848D0;
        unint64_t v78 = 0x8000000100F84850;
        unint64_t v79 = 0x8000000100F84880;
        unint64_t v80 = 0xD00000000000004ALL;
        goto LABEL_83;
      }
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v75.super.Class isa = (Class)qword_101611820;
      unint64_t v76 = 0xD000000000000021;
      unint64_t v77 = 0xD000000000000034;
      unint64_t v80 = 0xD00000000000003CLL;
      unint64_t v85 = 0x8000000100F84810;
      unint64_t v78 = 0x8000000100F847A0;
      uint64_t v81 = "Removing place from your library will also unpin it.";
LABEL_82:
      unint64_t v79 = (unint64_t)(v81 - 32) | 0x8000000000000000;
LABEL_83:
      Swift::String v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v76, (Swift::String_optional)0, v75, *(Swift::String *)&v77, *(Swift::String *)&v80);
      countAndFlagsBits = (void *)v82._countAndFlagsBits;
      object = v82._object;

      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
    if (v74)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v75.super.Class isa = (Class)qword_101611820;
      unint64_t v76 = 0xD000000000000020;
      unint64_t v80 = 0xD00000000000003FLL;
      unint64_t v77 = 0xD000000000000045;
      unint64_t v85 = 0x8000000100F84760;
      unint64_t v78 = 0x8000000100F846E0;
      uint64_t v81 = "Removing place from your library will also delete your attached note.";
      goto LABEL_82;
    }
    goto LABEL_84;
  }
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = v1[12];
  swift_unknownObjectRetain();
  dispatch thunk of MapsSyncObject.identifier.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    uint64_t v6 = v1[12];
    swift_unknownObjectRelease();
    sub_1000FF2E0(v6, (uint64_t *)&unk_1015D5DE0);
    id v7 = 0;
    int v8 = 1;
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_32;
  }
  (*(void (**)(void, void, void))(v1[14] + 32))(v1[15], v1[12], v1[13]);
  type metadata accessor for MapsSyncQueryPredicate();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100F5CF70;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  *(void *)(v16 + 56) = sub_100100830(0, &qword_1015DA418);
  *(void *)(v16 + 64) = sub_1002E8A6C();
  *(void *)(v16 + 32) = isa;
  uint64_t v18 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
  v1[17] = v18;
  swift_bridgeObjectRelease();
  type metadata accessor for CollectionPlaceItemRequest();
  v1[18] = CollectionPlaceItemRequest.__allocating_init()();
  id v19 = objc_allocWithZone((Class)type metadata accessor for MapsSyncRange());
  id v20 = v18;
  MapsSyncRange.init(offset:limit:)();
  id v21 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v22 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v1[19] = v22;
  uint64_t v88 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                        + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  id v23 = (void *)swift_task_alloc();
  v1[20] = v23;
  *id v23 = v1;
  v23[1] = sub_1002E7A10;
  return v88(v22);
}

uint64_t sub_1002E7A10(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 168) = a1;
  swift_task_dealloc();
  uint64_t v4 = *(void **)(v3 + 152);
  uint64_t v5 = *(void **)(v3 + 144);
  if (v1)
  {
    swift_errorRelease();

    uint64_t v6 = sub_1002E8370;
  }
  else
  {

    uint64_t v6 = sub_1002E7B74;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002E7B74()
{
  unint64_t v4 = v0[21];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_3;
    }
LABEL_30:
    uint64_t v34 = (void *)v0[17];
    uint64_t v36 = v0[14];
    uint64_t v35 = v0[15];
    uint64_t v37 = v0[13];
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    id v3 = 0;
    id v10 = _swiftEmptyArrayStorage;
    goto LABEL_31;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_30;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_63;
    }
    id v5 = *(id *)(v0[21] + 32);
  }
  uint64_t v6 = (void *)v0[17];
  uint64_t v8 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v9 = v0[13];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  id v3 = v5;
  if (dispatch thunk of CollectionPlaceItem.type.getter())
  {
    if (qword_1015CBFC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    long long v11 = static FavoriteCollectionHandler.title;
    swift_bridgeObjectRetain();
    id v10 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v10 = sub_1000FB364(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    }
    unint64_t v13 = v10[2];
    unint64_t v12 = v10[3];
    if (v13 >= v12 >> 1) {
      id v10 = sub_1000FB364((void *)(v12 > 1), v13 + 1, 1, v10);
    }
    _OWORD v10[2] = v13 + 1;
    *(_OWORD *)&v10[2 * v13 + 4] = v11;
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v14 = dispatch thunk of CollectionItem.fetchCollections()();
  if (v10[2]) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 3;
  }
  sub_1002E5884(v15, v14);
  uint64_t v17 = v16;
  int64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  int64_t v22 = (v21 >> 1) - v19;
  if (v21 >> 1 != v19)
  {
    if ((uint64_t)(v21 >> 1) <= v19)
    {
      __break(1u);
LABEL_65:
      swift_once();
      goto LABEL_53;
    }
    id v23 = (id *)(v17 + 8 * v19);
    do
    {
      id v25 = *v23;
      uint64_t v26 = dispatch thunk of Collection.title.getter();
      if (v27)
      {
        uint64_t v28 = v26;
        uint64_t v29 = v27;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v10 = sub_1000FB364(0, v10[2] + 1, 1, v10);
        }
        unint64_t v31 = v10[2];
        unint64_t v30 = v10[3];
        unint64_t v32 = v10;
        if (v31 >= v30 >> 1) {
          unint64_t v32 = sub_1000FB364((void *)(v30 > 1), v31 + 1, 1, v10);
        }
        v32[2] = v31 + 1;
        id v10 = v32;
        uint64_t v24 = &v32[2 * v31];
        v24[4] = v28;
        v24[5] = v29;
        swift_bridgeObjectRelease();
      }

      ++v23;
      --v22;
    }
    while (v22);
  }
  swift_unknownObjectRelease();

LABEL_31:
  uint64_t v38 = v10;
  int64_t v39 = v10[2];
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_10025AEF4(0, v39, 0);
    id v40 = v38 + 5;
    do
    {
      swift_bridgeObjectRetain();
      v0[5] = String._mapsui_quotedForLocale.getter();
      v0[6] = v41;
      v0[7] = 8237;
      v0[8] = 0xE200000000000000;
      uint64_t v71 = String.init<A>(_:)();
      uint64_t v72 = v42;
      String.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v44 = _swiftEmptyArrayStorage[2];
      unint64_t v43 = _swiftEmptyArrayStorage[3];
      if (v44 >= v43 >> 1) {
        sub_10025AEF4(v43 > 1, v44 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v44 + 1;
      uint64_t v45 = &_swiftEmptyArrayStorage[2 * v44];
      v45[4] = v71;
      v45[5] = v72;
      v40 += 2;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
  }
  id v2 = &type metadata for String;
  uint64_t v46 = v0[16];
  v0[9] = _swiftEmptyArrayStorage;
  sub_1000FF33C((uint64_t *)&unk_1015CE230);
  sub_10010B4F8();
  uint64_t v1 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v4 = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = HIBYTE(v4) & 0xF;
  if (v46)
  {
    if ((v4 & 0x2000000000000000) != 0 ? HIBYTE(v4) & 0xF : v1 & 0xFFFFFFFFFFFFLL)
    {
      if (qword_1015CBD78 == -1)
      {
LABEL_43:
        v50.super.Class isa = (Class)qword_101611820;
        unint64_t v51 = 0xD00000000000002FLL;
        unint64_t v52 = 0xD000000000000063;
        unint64_t v69 = 0x8000000100F84AB0;
        unint64_t v53 = 0x8000000100F84A10;
        unint64_t v54 = 0x8000000100F84A40;
        unint64_t v55 = 0xD00000000000004DLL;
LABEL_50:
        NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v51, (Swift::String_optional)0, v50, *(Swift::String *)&v52, *(Swift::String *)&v55);
        sub_1000FF33C((uint64_t *)&unk_1015D59C0);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_100F5CF70;
        *(void *)(v56 + 56) = v2;
        *(void *)(v56 + 64) = sub_10011A750();
        *(void *)(v56 + 32) = v1;
        *(void *)(v56 + 40) = v4;
        uint64_t countAndFlagsBits = String.init(format:_:)();
        object = v58;

        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
LABEL_63:
      swift_once();
      goto LABEL_43;
    }
  }
  int64_t v19 = 0xD00000000000004DLL;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v48 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v48)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v50.super.Class isa = (Class)qword_101611820;
    unint64_t v51 = 0xD000000000000030;
    unint64_t v55 = 0xD00000000000004ELL;
    unint64_t v52 = 0xD000000000000052;
    unint64_t v69 = 0x8000000100F849C0;
    unint64_t v53 = 0x8000000100F84920;
    unint64_t v54 = 0x8000000100F84960;
    goto LABEL_50;
  }
  swift_bridgeObjectRelease();
  if (!v0[16])
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v60.super.Class isa = (Class)qword_101611820;
    unint64_t v61 = 0xD000000000000021;
    unint64_t v65 = 0xD000000000000034;
    unint64_t v62 = 0xD00000000000003CLL;
    unint64_t v70 = 0x8000000100F84810;
    unint64_t v63 = 0x8000000100F847A0;
    unint64_t v64 = 0x8000000100F847D0;
    goto LABEL_57;
  }
  if (qword_1015CBD78 != -1) {
    goto LABEL_65;
  }
LABEL_53:
  v60.super.Class isa = (Class)qword_101611820;
  unint64_t v61 = v19 - 33;
  unint64_t v62 = v19 - 3;
  unint64_t v70 = 0x8000000100F848D0;
  unint64_t v63 = 0x8000000100F84850;
  unint64_t v64 = 0x8000000100F84880;
  unint64_t v65 = 0xD00000000000004DLL;
LABEL_57:
  Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v61, (Swift::String_optional)0, v60, *(Swift::String *)&v65, *(Swift::String *)&v62);
  uint64_t countAndFlagsBits = v66._countAndFlagsBits;
  object = v66._object;

LABEL_58:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v67 = (uint64_t (*)(uint64_t, void *))v0[1];
  return v67(countAndFlagsBits, object);
}

uint64_t sub_1002E8370()
{
  uint64_t v1 = v0;
  id v2 = (void *)v0[17];
  id v5 = v0 + 14;
  uint64_t v3 = v0[14];
  uint64_t v4 = v5[1];
  uint64_t v6 = v1[13];

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v6);
  int64_t v7 = _swiftEmptyArrayStorage[2];
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_10025AEF4(0, v7, 0);
    uint64_t v8 = &_swiftEmptyArrayStorage[5];
    do
    {
      swift_bridgeObjectRetain();
      v1[5] = String._mapsui_quotedForLocale.getter();
      v1[6] = v9;
      v1[7] = 8237;
      id v10 = v1;
      v1[8] = 0xE200000000000000;
      uint64_t v42 = String.init<A>(_:)();
      uint64_t v43 = v11;
      String.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_10025AEF4(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      unint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      void v14[4] = v42;
      v14[5] = v43;
      v8 += 2;
      --v7;
      uint64_t v1 = v10;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v1[16];
  v1[9] = _swiftEmptyArrayStorage;
  sub_1000FF33C((uint64_t *)&unk_1015CE230);
  sub_10010B4F8();
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if (v15)
  {
    if ((v18 & 0x2000000000000000) != 0 ? HIBYTE(v18) & 0xF : v16 & 0xFFFFFFFFFFFFLL)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v21.super.Class isa = (Class)qword_101611820;
      unint64_t v22 = 0xD00000000000002FLL;
      unint64_t v23 = 0xD000000000000063;
      unint64_t v40 = 0x8000000100F84AB0;
      unint64_t v24 = 0x8000000100F84A10;
      unint64_t v25 = 0x8000000100F84A40;
      unint64_t v26 = 0xD00000000000004DLL;
LABEL_21:
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, (Swift::String_optional)0, v21, *(Swift::String *)&v23, *(Swift::String *)&v26);
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_100F5CF70;
      *(void *)(v27 + 56) = &type metadata for String;
      *(void *)(v27 + 64) = sub_10011A750();
      *(void *)(v27 + 32) = v16;
      *(void *)(v27 + 40) = v18;
      uint64_t countAndFlagsBits = String.init(format:_:)();
      object = v29;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v21.super.Class isa = (Class)qword_101611820;
    unint64_t v22 = 0xD000000000000030;
    unint64_t v26 = 0xD00000000000004ELL;
    unint64_t v23 = 0xD000000000000052;
    unint64_t v40 = 0x8000000100F849C0;
    unint64_t v24 = 0x8000000100F84920;
    unint64_t v25 = 0x8000000100F84960;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  if (v1[16])
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v31.super.Class isa = (Class)qword_101611820;
    unint64_t v32 = 0xD00000000000002CLL;
    unint64_t v33 = 0xD00000000000004ALL;
    unint64_t v41 = 0x8000000100F848D0;
    unint64_t v34 = 0x8000000100F84850;
    unint64_t v35 = 0x8000000100F84880;
    unint64_t v36 = 0xD00000000000004DLL;
  }
  else
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v31.super.Class isa = (Class)qword_101611820;
    unint64_t v32 = 0xD000000000000021;
    unint64_t v36 = 0xD000000000000034;
    unint64_t v33 = 0xD00000000000003CLL;
    unint64_t v41 = 0x8000000100F84810;
    unint64_t v34 = 0x8000000100F847A0;
    unint64_t v35 = 0x8000000100F847D0;
  }
  Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v32, (Swift::String_optional)0, v31, *(Swift::String *)&v36, *(Swift::String *)&v33);
  uint64_t countAndFlagsBits = v37._countAndFlagsBits;
  object = v37._object;
LABEL_30:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(uint64_t, void *))v1[1];
  return v38(countAndFlagsBits, object);
}

uint64_t sub_1002E8894()
{
  return sub_1002E88AC((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1002E88AC(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  if (*(void *)(v1 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v1, 48, 7);
}

void sub_1002E890C(uint64_t a1)
{
  sub_1002DF2FC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1002E891C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, void))(v0 + 16);
  if (v1) {
    return v1(1, 0);
  }
  return result;
}

uint64_t sub_1002E8958()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002E89B0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10005056C;
  *(void *)(v4 + 168) = v2;
  *(void *)(v4 + 176) = v3;
  *(_OWORD *)(v4 + 152) = v5;
  return _swift_task_switch(sub_1002E0198, 0, 0);
}

unint64_t sub_1002E8A6C()
{
  unint64_t result = qword_1015DA420;
  if (!qword_1015DA420)
  {
    sub_100100830(255, &qword_1015DA418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA420);
  }
  return result;
}

uint64_t sub_1002E8AD8(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(void, uint64_t))(v1 + 16);
  if (v2) {
    return v2(0, result);
  }
  return result;
}

uint64_t sub_1002E8B10()
{
  swift_unknownObjectRelease();
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002E8B58()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100105268;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_1015DA428 + dword_1015DA428);
  return v6(v2, v3, v4);
}

uint64_t sub_1002E8C18()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_100105268;
  *(void *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 64) = v7;
  *(void *)(v4 + 56) = v2;
  uint64_t v8 = (uint64_t (*)(void))((char *)&dword_1015DA4B8 + dword_1015DA4B8);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 88) = v5;
  void *v5 = v4;
  v5[1] = sub_1002E2BC0;
  return v8(v7);
}

void sub_1002E8D30(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = [a1 userProvidedName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = String.count.getter();
  swift_bridgeObjectRelease();
  uint64_t v9 = &selRef_routeName;
  if (v8 > 0) {
    uint64_t v9 = &selRef_userProvidedName;
  }
  id v10 = [a1 *v9];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v11._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v36._uint64_t countAndFlagsBits = 0xD000000000000042;
  v36._object = (void *)0x8000000100F84C20;
  v12._object = (void *)0x8000000100F84BC0;
  v11._object = (void *)0x8000000100F84BF0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000022;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v36);
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100F5CF70;
  uint64_t v14 = String._mapsui_quotedForLocale.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_10011A750();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self alertControllerWithTitle:v17 message:0 preferredStyle:0];

  if (qword_1015CBF88 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a3;
  v19[4] = a4;
  swift_bridgeObjectRetain();
  id v20 = a1;
  sub_1000F4F24(a3);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v34 = sub_1002EA14C;
  unint64_t v35 = v19;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  unint64_t v32 = sub_10025DB88;
  unint64_t v33 = &unk_1012E2E10;
  unint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  unint64_t v23 = self;
  id v24 = [v23 actionWithTitle:v21 style:2 handler:v22];
  _Block_release(v22);

  [v18 addAction:v24];
  if (qword_1015CBF90 != -1) {
    swift_once();
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  sub_1000F4F24(a3);
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v34 = sub_1002EA15C;
  unint64_t v35 = (void *)v25;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  unint64_t v32 = sub_10025DB88;
  unint64_t v33 = &unk_1012E2E60;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_release();
  id v28 = [v23 actionWithTitle:v26 style:1 handler:v27];
  _Block_release(v27);

  [v18 addAction:v28];
  [a2 _maps_topMostPresentViewController:v18 animated:1 completion:0];
}

uint64_t sub_1002E9204(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1002E9224, 0, 0);
}

uint64_t sub_1002E9224()
{
  id v1 = [*(id *)(v0 + 16) _geoMapItem];
  *(void *)(v0 + 24) = v1;
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 16);
    swift_unknownObjectRetain();
    id v3 = [v2 _geoMapItemStorageForPersistence];
    uint64_t v4 = v3;
    if (v3)
    {
      id v5 = [v3 userValues];

      if (v5)
      {
        id v6 = [v5 name];

        if (v6)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate();
    id v10 = objc_allocWithZone(Predicate);
    Swift::String v11 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    *(void *)(v0 + 32) = v11;
    Swift::String v12 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    *(void *)(v0 + 40) = v12;
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    id v14 = objc_allocWithZone(Options);
    id v15 = v11;
    *(void *)(v0 + 48) = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100F5F0D0;
    *(void *)(v16 + 32) = v15;
    *(void *)(v16 + 40) = v12;
    specialized Array._endMutation()();
    id v17 = objc_allocWithZone(Predicate);
    id v18 = v15;
    id v19 = v12;
    MapsSyncQueryPredicate.init(and:)();
    id v20 = objc_allocWithZone(Options);
    NSString v21 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    *(void *)(v0 + 56) = v21;
    type metadata accessor for FavoriteItemRequest();
    *(void *)(v0 + 64) = FavoriteItemRequest.__allocating_init()();
    id v24 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                         + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
    id v22 = v21;
    unint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_1002E94FC;
    return v24(v21);
  }
  else
  {
    sub_1002E5A18();
    swift_willThrow();
    id v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1002E94FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002E9994;
  }
  else
  {
    id v5 = *(void **)(v3 + 64);

    uint64_t v4 = sub_1002E961C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002E961C()
{
  uint64_t v1 = (void *)v0[6];
  type metadata accessor for CollectionPlaceItemRequest();
  v0[12] = CollectionPlaceItemRequest.__allocating_init()();
  id v5 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                      + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002E96EC;
  return v5(v1);
}

uint64_t sub_1002E96EC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002E9A2C;
  }
  else
  {
    id v5 = *(void **)(v3 + 96);

    uint64_t v4 = sub_1002E9810;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002E9810()
{
  if (v0[10] >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D6930);
    uint64_t v1 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    uint64_t v1 = v0[10];
  }
  unint64_t v2 = v0[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v2 >> 62)
  {
    sub_1000FF33C(&qword_1015D6930);
    unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    unint64_t v3 = v0[14];
  }
  id v5 = (void *)v0[6];
  uint64_t v4 = (void *)v0[7];
  uint64_t v7 = (void *)v0[4];
  uint64_t v6 = (void *)v0[5];
  swift_bridgeObjectRelease();
  sub_10024BDD8(v3);

  swift_unknownObjectRelease();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v1);
}

uint64_t sub_1002E9994()
{
  unint64_t v2 = (void *)v0[7];
  uint64_t v1 = (void *)v0[8];
  uint64_t v4 = (void *)v0[5];
  unint64_t v3 = (void *)v0[6];
  id v5 = (void *)v0[4];

  swift_unknownObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002E9A2C()
{
  uint64_t v1 = (void *)v0[12];
  unint64_t v3 = (void *)v0[6];
  unint64_t v2 = (void *)v0[7];
  id v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002E9ADC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002E9B24()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100105268;
  *(_OWORD *)(v2 + 128) = v3;
  return _swift_task_switch(sub_1002E3F84, 0, 0);
}

uint64_t sub_1002E9BD0(void *a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  _OWORD v7[3] = 0;
  _OWORD v7[4] = a1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  id v9 = a1;
  if (v8 == 1)
  {
    sub_1000FF2E0((uint64_t)v4, &qword_1015CD250);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1015DA4E0;
  *(void *)(v13 + 24) = v7;
  sub_1000FF33C(&qword_1015DA4F8);
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1002E9E18()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002E9E58(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100105268;
  v5[15] = a1;
  v5[16] = v4;
  return _swift_task_switch(sub_1002E3BE0, 0, 0);
}

uint64_t sub_1002E9F08(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100105268;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1015DA4E8 + dword_1015DA4E8);
  return v6(a1, v4);
}

uint64_t sub_1002E9FC4()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002EA00C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100105268;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_1015DA508 + dword_1015DA508);
  return v6(v2, v3, v4);
}

uint64_t sub_1002EA0C8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EA104()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1002EA14C(uint64_t a1)
{
  sub_1002E1864(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002EA15C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(0);
  }
  return result;
}

void sub_1002EA190(char a1, uint64_t a2)
{
  sub_1002DF8F8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1002EA19C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002EA1D4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10005056C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1015DA4E8 + dword_1015DA4E8);
  return v6(a1, v4);
}

uint64_t sub_1002EA28C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1002EA2E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  if (a1) {
    return v3(a1, 0);
  }
  else {
    return sub_1002DE100(*(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), (uint64_t)v3, v4);
  }
}

uint64_t sub_1002EA33C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100105268;
  *(_OWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_1002DE490, 0, 0);
}

uint64_t sub_1002EA3EC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1002EA42C(uint64_t a1, uint64_t a2)
{
  sub_1002CE8F0(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24));
}

void sub_1002EA43C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1002EA448()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002EA49C()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1002EA544(char a1, void *a2, void *a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1000FF33C(&qword_1015CD250);
  *(void *)&double v11 = __chkstk_darwin(v10 - 8).n128_u64[0];
  uint64_t v13 = (char *)v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      id v19 = [a3 _muid];
      uint64_t v20 = *(unsigned int *)(v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo);
      if (v19)
      {
        *(void *)&long long v90 = v19;
        dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v22 = v21;
      }
      else
      {
        uint64_t v22 = 0;
      }
      id v53 = [self sharedService];
      if (v53)
      {
        unint64_t v54 = v53;
        if (v22)
        {
          NSString v55 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v55 = 0;
        }
        [v54 captureUserAction:473 onTarget:v20 eventValue:v55];

        type metadata accessor for FavoriteItem();
        uint64_t v59 = swift_dynamicCastClass();
        if (v59)
        {
          NSBundle v60 = (void *)v59;
          swift_unknownObjectRetain();
          sub_1002E9BD0(v60);
          swift_unknownObjectRelease();
        }
        return;
      }
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    case 2:
      id v23 = [objc_allocWithZone((Class)SearchResult) initWithMapItem:a3];
      if (!v23) {
        return;
      }
      v88[0] = v23;
      id v24 = [v23 unknownContact];
      if (v24)
      {
        uint64_t v25 = v24;
        id v26 = [self shareItemWithSearchResult:v88[0] contact:v24 includePrintActivity:1];
        uint64_t v27 = v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v28 = *(void *)(v27 + 8);
          uint64_t ObjectType = swift_getObjectType();
          unint64_t v30 = *(void (**)(uint64_t, void, void, uint64_t, uint64_t))(v28 + 24);
          uint64_t v31 = swift_unknownObjectRetain();
          v30(v31, 0, 0, ObjectType, v28);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      goto LABEL_18;
    case 3:
      id v32 = [self sharedHelper];
      v88[0] = [v32 alertControllerForAttemptedAddNote];

      uint64_t v33 = v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!v88[0])
      {
        if (Strong)
        {
          uint64_t v47 = *(void *)(v33 + 8);
          id v48 = [a4 placeItemNote];
          if (v48)
          {
            uint64_t v49 = v48;
            v88[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v51 = v50;
          }
          else
          {
            v88[0] = 0;
            uint64_t v51 = 0;
          }
          uint64_t v77 = swift_getObjectType();
          id v78 = [a3 _muid];
          uint64_t v79 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = v79;
          *(void *)(v80 + 24) = a4;
          uint64_t v81 = *(void (**)(void, uint64_t, id, void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))(v47 + 16);
          swift_unknownObjectRetain();
          swift_retain();
          v81(v88[0], v51, v78, sub_1002EC278, v80, v77, v47);
          swift_release();
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        return;
      }
      if (!Strong) {
        goto LABEL_18;
      }
      uint64_t v35 = *(void *)(v33 + 8);
      uint64_t v36 = swift_getObjectType();
      Swift::String v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v36, v35);
      goto LABEL_17;
    case 4:
      id v38 = [self sharedHelper];
      v88[0] = [v38 alertControllerForAttemptedAddCollection];

      if (v88[0]) {
        goto LABEL_15;
      }
      id v52 = [objc_allocWithZone((Class)CollectionAddOrRemoveSession) initWithMapItem:a3];
      [v52 setAnalyticsTarget:*(unsigned int *)(v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo)];
      if ([a2 sender])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v89, 0, sizeof(v89));
      }
      sub_10011896C((uint64_t)v89, (uint64_t)&v90);
      if (*((void *)&v91 + 1))
      {
        sub_1002EC1F8();
        if (swift_dynamicCast()) {
          unint64_t v65 = (void *)v88[1];
        }
        else {
          unint64_t v65 = 0;
        }
      }
      else
      {
        sub_1001189D4((uint64_t)&v90);
        unint64_t v65 = 0;
      }
      uint64_t v66 = v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v67 = *(void *)(v66 + 8);
        if (v65)
        {
          *((void *)&v91 + 1) = sub_1002EC1F8();
          *(void *)&long long v90 = v65;
        }
        else
        {
          long long v90 = 0u;
          long long v91 = 0u;
        }
        uint64_t v82 = swift_getObjectType();
        double y = CGRectNull.origin.y;
        double width = CGRectNull.size.width;
        double height = CGRectNull.size.height;
        id v86 = *(void (**)(id, long long *, uint64_t, uint64_t, double, double, double, double))(v67 + 32);
        id v87 = v65;
        v86(v52, &v90, v82, v67, CGRectNull.origin.x, y, width, height);

        swift_unknownObjectRelease();
        sub_1001189D4((uint64_t)&v90);
      }
      else
      {
      }
      return;
    case 5:
      id v43 = [a3 _muid];
      uint64_t v44 = *(unsigned int *)(v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo);
      if (v43)
      {
        *(void *)&long long v90 = v43;
        dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v46 = v45;
      }
      else
      {
        uint64_t v46 = 0;
      }
      id v56 = [self sharedService];
      if (!v56) {
        goto LABEL_68;
      }
      id v57 = v56;
      if (v46)
      {
        NSString v58 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v58 = 0;
      }
      [v57 captureUserAction:477 onTarget:v44 eventValue:v58];

      uint64_t v61 = v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v62 = *(void *)(v61 + 8);
        uint64_t v63 = swift_getObjectType();
        unint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v63, v62);
        swift_unknownObjectRelease();
        sub_1002DD9E0((uint64_t)a4, v64, 0, 0);
      }
      return;
    default:
      id v14 = [self sharedHelper];
      v88[0] = [v14 alertControllerForAttemptedAddShortcut];

      if (v88[0])
      {
LABEL_15:
        uint64_t v39 = v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v40 = *(void *)(v39 + 8);
          uint64_t v41 = swift_getObjectType();
          Swift::String v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v41, v40);
LABEL_17:
          swift_unknownObjectRelease();
          [v37 _maps_topMostPresentViewController:v88[0] animated:1 completion:0];
        }
LABEL_18:
        uint64_t v42 = (void *)v88[0];
      }
      else
      {
        id v15 = [a3 _muid];
        uint64_t v16 = *(unsigned int *)(v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo);
        if (v15)
        {
          *(void *)&long long v90 = v15;
          dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v18 = v17;
        }
        else
        {
          uint64_t v18 = 0;
        }
        id v68 = [self sharedService];
        if (!v68)
        {
LABEL_69:
          __break(1u);
          JUMPOUT(0x1002EAF6CLL);
        }
        unint64_t v69 = v68;
        if (v18)
        {
          NSString v70 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v70 = 0;
        }
        [v69 captureUserAction:475 onTarget:v16 eventValue:v70];

        type metadata accessor for CollectionPlaceItem();
        uint64_t v71 = swift_dynamicCastClass();
        if (v71)
        {
          uint64_t v72 = v71;
          uint64_t v73 = *(void **)(v5 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider);
          uint64_t v74 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v13, 1, 1, v74);
          NSBundle v75 = (void *)swift_allocObject();
          v75[2] = 0;
          v75[3] = 0;
          v75[4] = v72;
          v75[5] = v73;
          swift_unknownObjectRetain_n();
          id v76 = v73;
          sub_100042AF4((uint64_t)v13, (uint64_t)&unk_1015DA4D0, (uint64_t)v75);
          swift_unknownObjectRelease();
          swift_release();
        }
      }
      return;
  }
}

void sub_1002EAF84(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider);
    sub_1002DDB28(a1, a2);
  }
}

void sub_1002EB01C(char a1, void *a2)
{
  switch(a1)
  {
    case 1:
      uint64_t v7 = v2 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v8 = *(void *)(v7 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, ObjectType, v8);
        goto LABEL_13;
      }
      break;
    case 2:
      uint64_t v10 = v2 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v11 = *(void *)(v10 + 8);
        uint64_t v12 = swift_getObjectType();
        uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
        swift_unknownObjectRelease();
        sub_1002E8D30(a2, v13, 0, 0);
        id v14 = [self sharedService];
        if (!v14)
        {
          __break(1u);
          JUMPOUT(0x1002EB2A8);
        }
        id v15 = v14;
        [a2 mapItemMuid];
        dispatch thunk of CustomStringConvertible.description.getter();
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v15 captureUserAction:479 onTarget:137 eventValue:v16];
      }
      break;
    case 3:
      uint64_t v17 = v2 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v18 = *(void *)(v17 + 8);
        uint64_t v19 = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v18 + 56))(a2, v19, v18);
        goto LABEL_13;
      }
      break;
    case 4:
      uint64_t v20 = v2 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v21 = *(void *)(v20 + 8);
        uint64_t v22 = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v21 + 64))(a2, v22, v21);
        goto LABEL_13;
      }
      break;
    default:
      uint64_t v4 = v2 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v5 = *(void *)(v4 + 8);
        uint64_t v6 = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v5 + 40))(a2, v6, v5);
LABEL_13:
        swift_unknownObjectRelease();
      }
      break;
  }
}

id LibraryCellActionHandlingUICoordination<>.viewControllerForPresentingAlert.getter()
{
  return v0;
}

void sub_1002EB340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = a1;
    v13[4] = a2;
    uint64_t v13[5] = a3;
    v13[6] = a4;
    v13[7] = a5;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_unknownObjectRetain_n();
    if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v5))
    {
      id v14 = sub_1002F74E0();
      [v14 dismissViewControllerAnimated:1 completion:0];

      sub_1002EB6D0(v12, a1, a2, a3, a4, a5);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      swift_release();
    }
    else
    {
      id v15 = &v5[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
      uint64_t v16 = *(void *)&v5[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
      *(void *)id v15 = 0;
      *((void *)v15 + 1) = 0;
      sub_10006C5D8(v16);
      id v17 = sub_1002F74E0();
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v18;
      v19[3] = sub_1002EB7C8;
      v19[4] = v13;
      aBlock[4] = sub_1002EC1EC;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10008C380;
      aBlock[3] = &unk_1012E3210;
      uint64_t v20 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v17 dismissViewControllerAnimated:1 completion:v20];
      _Block_release(v20);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      swift_release();
    }
  }
}

uint64_t LibraryCellActionHandlingUICoordination<>.presentNoteEditor(initialText:placeMUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(a6, a8);
  if (result)
  {
    uint64_t v16 = result;
    id v17 = (void *)swift_allocObject();
    v17[2] = v16;
    v17[3] = a1;
    v17[4] = a2;
    _OWORD v17[5] = a3;
    v17[6] = a4;
    v17[7] = a5;
    uint64_t v18 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(a8 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    v18(sub_1002EB7C8, v17, a6, a8);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1002EB6D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3) {
    NSString v10 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v10 = 0;
  }
  v12[4] = a5;
  v12[5] = a6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_1002EB7CC;
  v12[3] = &unk_1012E32D8;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  [a1 presentEditNoteViewControllerWithInitialText:v10 libraryAccessProvider:0 placeMUID:a4 completion:v11];
  _Block_release(v11);
}

uint64_t sub_1002EB7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  swift_retain();
  v2(v3, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1002EB848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    if (a2)
    {
      aBlock[4] = a2;
      aBlock[5] = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10008C380;
      aBlock[3] = a5;
      uint64_t v12 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v12 = 0;
    }
    [v11 viewController:v5 doShareSheetForShareItem:a1 completion:v12];
    swift_unknownObjectRelease();
    _Block_release(v12);
  }
}

void LibraryCellActionHandlingUICoordination<>.presentShareSheet(_:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    if (a2)
    {
      v12[4] = a2;
      v12[5] = a3;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      void v12[2] = sub_10008C380;
      v12[3] = &unk_1012E3108;
      a2 = _Block_copy(v12);
      swift_retain();
      swift_release();
    }
    [v11 viewController:v6 doShareSheetForShareItem:a1 completion:a2];
    swift_unknownObjectRelease();
    _Block_release(a2);
  }
}

uint64_t sub_1002EBA4C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v14 = (void *)result;
    sub_10011D518(a2, (uint64_t)v23);
    uint64_t v15 = v24;
    if (v24)
    {
      uint64_t v16 = sub_1000FF380(v23, v24);
      uint64_t v17 = *(void *)(v15 - 8);
      __n128 v18 = __chkstk_darwin(v16);
      uint64_t v20 = (char *)&v23[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
      uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      sub_1000FF22C((uint64_t)v23);
    }
    else
    {
      uint64_t v21 = 0;
    }
    [v14 viewController:v6 pickCollectionWithSession:a1 sourceView:v21 sourceRect:a3];
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t LibraryCellActionHandlingUICoordination<>.presentAddToGuideFlow(saveSession:sourceView:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 8))(a3, a9);
  if (result)
  {
    uint64_t v17 = (void *)result;
    sub_10011D518(a2, (uint64_t)v25);
    uint64_t v18 = v26;
    if (v26)
    {
      uint64_t v19 = sub_1000FF380(v25, v26);
      uint64_t v20 = *(void *)(v18 - 8);
      __n128 v21 = __chkstk_darwin(v19);
      id v23 = (char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v20 + 16))(v23, v21);
      uint64_t v24 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
      sub_1000FF22C((uint64_t)v25);
    }
    else
    {
      uint64_t v24 = 0;
    }
    [v17 viewController:v9 pickCollectionWithSession:a1 sourceView:a4 sourceRect:a5];
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void *LibraryCellActionHandlingUICoordination<>.startDirections(routeData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EBDE4(a1, a2, a3, a4, (SEL *)&selRef_viewController_startDirectionsToRouteData_);
}

void *LibraryCellActionHandlingUICoordination<>.editRoute(routeData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EBDE4(a1, a2, a3, a4, (SEL *)&selRef_viewController_editRoute_);
}

void *LibraryCellActionHandlingUICoordination<>.showOfflineRegion(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EBDE4(a1, a2, a3, a4, (SEL *)&selRef_viewController_showOfflineRegionForRouteData_);
}

void *LibraryCellActionHandlingUICoordination<>.downloadOfflineRegion(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002EBDE4(a1, a2, a3, a4, (SEL *)&selRef_viewController_downloadOfflineRegionForRouteData_);
}

void *sub_1002EBDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a2, a4);
  if (result)
  {
    [result *a5:v5, a1];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for LibraryCellActionHandler()
{
  return self;
}

ValueMetadata *type metadata accessor for LibraryCellActionHandler.AnalyticsInfo()
{
  return &type metadata for LibraryCellActionHandler.AnalyticsInfo;
}

uint64_t sub_1002EBE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v11 = (void *)swift_unknownObjectRetain();
    sub_1002EB6D0(v11, a1, a2, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease_n();
  }
  return result;
}

void sub_1002EBF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1002EBF94(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1002EBA4C(a1, a2, a3, a4, a5, a6);
}

void *sub_1002EBFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_startDirectionsToRouteData_);
}

void *sub_1002EBFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_editRoute_);
}

void *sub_1002EBFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_showOfflineRegionForRouteData_);
}

void *sub_1002EBFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_downloadOfflineRegionForRouteData_);
}

void sub_1002EC008(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1002EC030(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1002EBA4C(a1, a2, a3, a4, a5, a6);
}

void *sub_1002EC050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_startDirectionsToRouteData_);
}

void *sub_1002EC064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_editRoute_);
}

void *sub_1002EC078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_showOfflineRegionForRouteData_);
}

void *sub_1002EC08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002EC0A0(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_downloadOfflineRegionForRouteData_);
}

void *sub_1002EC0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result *a5:v5, a1];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002EC11C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1002EC164()
{
  sub_1002EB6D0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1002EC174()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EC1AC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1002EC1EC()
{
  sub_1002FBBC0(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void (**)(void))(v0 + 32));
}

unint64_t sub_1002EC1F8()
{
  unint64_t result = qword_1015CF000;
  if (!qword_1015CF000)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CF000);
  }
  return result;
}

uint64_t sub_1002EC238()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002EC278(uint64_t a1, void *a2)
{
}

uint64_t sub_1002EC280()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t LibraryViewController.actionDelegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t LibraryViewController.actionDelegate.setter()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager);
  if (v2)
  {
    *(void *)(*(void *)(v2 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration)
              + OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
              + 8) = &protocol witness table for LibraryViewController;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

void (*LibraryViewController.actionDelegate.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_1002EC518;
}

void sub_1002EC518(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = v3[4];
    swift_endAccess();
    swift_unknownObjectRelease();
    uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager);
    if (v5)
    {
      *(void *)(*(void *)(v5 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration)
                + OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
                + 8) = &protocol witness table for LibraryViewController;
      swift_unknownObjectWeakAssign();
    }
  }

  free(v3);
}

id sub_1002EC5E0()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView];
  }
  else
  {
    id v4 = sub_1002EC644(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002EC644(void *a1)
{
  id result = [a1 view];
  if (result)
  {
    uint64_t v2 = result;
    [result bounds];
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;

    id v11 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
    id v12 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v11 collectionViewLayout:v4];

    uint64_t v13 = self;
    id v14 = v12;
    id v15 = [v13 clearColor];
    [v14 setBackgroundColor:v15];

    id v16 = [v14 layer];
    [v16 setAllowsGroupOpacity:0];

    [v14 _mapsui_resetLayoutMarginsWithPreservesSuperview:1];
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall LibraryViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v85.receiver = v0;
  v85.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_18;
  }
  double v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setAccessibilityIdentifier:v4];

  id v5 = [v1 cardPresentationController];
  if (!v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v6 = v5;
  [v5 setTakesAvailableHeight:1];

  id v7 = [v1 cardPresentationController];
  if (!v7)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  double v8 = v7;
  [v7 setPresentedModally:1];

  id v9 = [objc_allocWithZone((Class)ContainerHeaderView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setAccessibilityIdentifier:v10];

  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setDelegate:v1];
  [v9 setHeaderSize:2];
  [v9 setHairLineAlpha:0.0];
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v86._uint64_t countAndFlagsBits = 0xD000000000000015;
  v11._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v86._object = (void *)0x8000000100F84DD0;
  v11._object = (void *)0x8000000100F84DB0;
  v12._uint64_t countAndFlagsBits = 0x7972617262694CLL;
  v12._object = (void *)0xE700000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_101611820, v12, v86);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setTitle:v13];

  id v14 = [v1 headerView];
  if (!v14) {
    goto LABEL_20;
  }
  id v15 = v14;
  [v14 addSubview:v9];

  sub_1000FF33C(&qword_1015CD310);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100F62DB0;
  id v17 = [v9 topAnchor];
  id v18 = [v1 headerView];
  if (!v18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v19 = v18;
  id v20 = [v18 topAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v16 + 32) = v21;
  id v22 = [v9 leadingAnchor];
  id v23 = [v1 headerView];
  if (!v23)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v24 = v23;
  id v25 = [v23 leadingAnchor];

  id v26 = [v22 constraintEqualToAnchor:v25];
  *(void *)(v16 + 40) = v26;
  id v27 = [v9 trailingAnchor];
  id v28 = [v1 headerView];
  if (!v28)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v29 = v28;
  id v30 = [v28 trailingAnchor];

  id v31 = [v27 constraintEqualToAnchor:v30];
  *(void *)(v16 + 48) = v31;
  id v32 = [v9 bottomAnchor];
  id v33 = [v1 headerView];
  if (!v33)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v34 = v33;
  uint64_t v35 = self;
  id v36 = [v34 bottomAnchor];

  id v37 = [v32 constraintEqualToAnchor:v36];
  *(void *)(v16 + 56) = v37;
  uint64_t v84 = v16;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];

  id v39 = [v1 view];
  if (!v39)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v40 = v39;
  id v41 = sub_1002EC5E0();
  [v40 addSubview:v41];

  id v42 = sub_1002EC5E0();
  [v42 setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_100F62DB0;
  id v44 = sub_1002EC5E0();
  id v45 = [v44 topAnchor];

  id v46 = [v1 headerView];
  if (!v46)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v47 = v46;
  id v48 = [v46 bottomAnchor];

  id v49 = [v45 constraintEqualToAnchor:v48];
  *(void *)(v43 + 32) = v49;
  id v50 = sub_1002EC5E0();
  id v51 = [v50 leadingAnchor];

  id v52 = [v1 view];
  if (!v52)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v53 = v52;
  id v54 = [v52 leadingAnchor];

  id v55 = [v51 constraintEqualToAnchor:v54];
  *(void *)(v43 + 40) = v55;
  id v56 = sub_1002EC5E0();
  id v57 = [v56 trailingAnchor];

  id v58 = [v1 view];
  if (!v58)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v59 = v58;
  id v60 = [v58 trailingAnchor];

  id v61 = [v57 constraintEqualToAnchor:v60];
  *(void *)(v43 + 48) = v61;
  id v62 = sub_1002EC5E0();
  id v63 = [v62 bottomAnchor];

  id v64 = [v1 view];
  if (v64)
  {
    unint64_t v65 = v64;
    id v66 = [v64 bottomAnchor];

    id v67 = [v63 constraintEqualToAnchor:v66];
    *(void *)(v43 + 56) = v67;
    uint64_t v84 = v43;
    specialized Array._endMutation()();
    Class v68 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 activateConstraints:v68];

    id v69 = sub_1002EC5E0();
    NSString v70 = (objc_class *)type metadata accessor for LibraryHomeCollectionViewManagerConfiguration();
    uint64_t v71 = (char *)objc_allocWithZone(v70);
    *(void *)&v71[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
                  + 8] = 0;
    swift_unknownObjectWeakInit();
    *(void *)&v71[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_collectionView] = v69;
    v83.receiver = v71;
    v83.super_class = v70;
    uint64_t v72 = (char *)[super init];
    *(void *)&v72[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
                  + 8] = &protocol witness table for LibraryViewController;
    swift_unknownObjectWeakAssign();
    id v73 = objc_allocWithZone((Class)type metadata accessor for LibraryHomeCollectionViewManager());
    uint64_t v74 = v72;
    NSBundle v75 = sub_1003075D0(v74);
    id v76 = *(void **)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager];
    *(void *)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager] = v75;
    uint64_t v77 = v75;

    id v78 = sub_1002EC5E0();
    id v79 = sub_100306788();
    [v78 setDataSource:v79];

    id v80 = sub_1002EC5E0();
    [v80 setDelegate:v1];

    id v81 = sub_1002EC5E0();
    id v82 = sub_100306830();
    [v81 setCollectionViewLayout:v82];

    [self captureUserAction:21 target:137 value:0];
    return;
  }
LABEL_29:
  __break(1u);
}

id LibraryViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager] = 0;
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  [super initWithNibName:v7 bundle:a3];

  return v8;
}

id LibraryViewController.init(coder:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  [super initWithCoder:a1];

  return v4;
}

id LibraryViewController.headerViewButtonTapped(_:buttonType:)(uint64_t a1)
{
  return [v1 handleDismissAction:a1];
}

void LibraryViewController.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2)
{
  id v37 = a1;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  objc_super v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBD40 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000F2248(v11, (uint64_t)qword_101611778);
  Swift::String v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v38 = a2;
  v12(v10, a2, v7);
  NSString v13 = v2;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = v5;
    uint64_t v17 = v16;
    uint64_t v34 = swift_slowAlloc();
    v42[0] = v34;
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_getObjectType();
    uint64_t v18 = _typeName(_:qualified:)();
    *(void *)&v41[0] = sub_1000F2280(v18, v19, v42);
    uint64_t v36 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    sub_100260390();
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&v41[0] = sub_1000F2280(v20, v21, v42);
    uint64_t v4 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s did select item at index path: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v35;
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v37 deselectItemAtIndexPath:isa animated:1];

  id v23 = *(void **)&v13[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager];
  uint64_t v24 = v39;
  if (v23)
  {
    id v25 = v23;
    id v26 = sub_100306788();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    uint64_t v27 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    unint64_t v28 = IndexPath.section.getter();
    if ((v28 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v28 < *(void *)(v27 + 16))
    {
      int v29 = *(unsigned __int8 *)(v27 + v28 + 32);
      swift_bridgeObjectRelease();
      LOBYTE(v42[0]) = v29;
      uint64_t v30 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
      unint64_t v31 = IndexPath.item.getter();
      if ((v31 & 0x8000000000000000) == 0)
      {
        if (v31 < *(void *)(v30 + 16))
        {
          sub_1002EE3C8(v30 + 40 * v31 + 32, (uint64_t)v41);
          swift_bridgeObjectRelease();
          sub_100101314(v41, (uint64_t)v42);
          if (v29)
          {
            if (v29 == 1)
            {
              sub_1000FF4D4((uint64_t)v42, (uint64_t)v41);
              sub_1000FF33C(&qword_1015DA648);
              type metadata accessor for LibraryListSavedItemCellModel();
              if (swift_dynamicCast())
              {
                id v32 = v40;
                sub_1002EDC0C((uint64_t)v40);
              }
            }
          }
          else
          {
            sub_1000FF4D4((uint64_t)v42, (uint64_t)v41);
            sub_1000FF33C(&qword_1015DA648);
            if (swift_dynamicCast()) {
              sub_1002EDA24((char)v40);
            }
          }

          sub_1000FF22C((uint64_t)v42);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
          return;
        }
LABEL_22:
        __break(1u);
        return;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_21;
  }
}

void sub_1002EDA24(char a1)
{
  switch(a1)
  {
    case 1:
      swift_beginAccess();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong viewControllerShowLibraryPlacesView:v1];
        goto LABEL_8;
      }
      break;
    case 2:
      swift_beginAccess();
      uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v4)
      {
        [v4 viewControllerShowCollections:v1];
        goto LABEL_8;
      }
      break;
    case 3:
      uint64_t v5 = self;
      uint64_t v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _OWORD v8[4] = sub_1002EE48C;
      v8[5] = v6;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      _OWORD v8[2] = sub_1002EE148;
      v8[3] = &unk_1012E33B0;
      uint64_t v7 = _Block_copy(v8);
      swift_release();
      [v5 fetchSavedRoutesWithType:1 completion:v7];
      _Block_release(v7);
      break;
    default:
      swift_beginAccess();
      id v2 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v2)
      {
        [v2 viewControllerShowMyShortcuts:v1];
LABEL_8:
        swift_unknownObjectRelease();
      }
      break;
  }
}

void sub_1002EDC0C(uint64_t a1)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item);
  if (!*(unsigned char *)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16))
  {
    id v8 = v2;
    id v9 = [objc_allocWithZone((Class)SearchResult) initWithMapItem:v8];
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v11 = [Strong mapSelectionManager];
      swift_unknownObjectRelease();
      [v11 injectAndSelectSearchResult:v9];
    }
    Swift::String v12 = self;
    id v13 = [v12 sharedService];
    if (v13)
    {
      id v14 = v13;
      id v23 = [v8 _muid];
      dispatch thunk of CustomStringConvertible.description.getter();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v14 captureUserAction:478 onTarget:137 eventValue:v15 v23];

      id v16 = [v12 sharedService];
      if (v16)
      {
        uint64_t v17 = v16;
        [v16 captureUserAction:2007 onTarget:0 eventValue:0];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 8);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16) != 1)
  {
    swift_beginAccess();
    uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
    id v19 = v2;
    if (v18)
    {
      [v18 viewController:v1 enterRouteCreationWith:v19];
      swift_unknownObjectRelease();
    }
    id v20 = [self sharedService];
    if (v20)
    {
      unint64_t v21 = v20;
      id v24 = [v19 mapItemMuid];
      dispatch thunk of CustomStringConvertible.description.getter();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v21 captureUserAction:480 onTarget:137 eventValue:v22 v24];

      uint64_t v5 = v2;
      uint64_t v6 = v3;
      char v7 = 2;
      goto LABEL_14;
    }
LABEL_18:
    __break(1u);
    return;
  }
  swift_beginAccess();
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v4) {
    return;
  }
  [v4 viewController:v1 showCollection:v2];
  swift_unknownObjectRelease();
  uint64_t v5 = v2;
  uint64_t v6 = v3;
  char v7 = 1;
LABEL_14:
  sub_1002EE494(v5, v6, v7);
}

void sub_1002EE038(Class isa, Class a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    swift_beginAccess();
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      if (isa)
      {
        sub_100259420((unint64_t)isa);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      if (a2)
      {
        sub_100259420((unint64_t)a2);
        a2 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      [v6 presentRouteLibraryWithAvailableRoutes:isa unavailableRoutes:a2];

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1002EE148(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = a2;
  char v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100100830(0, (unint64_t *)&unk_1015DA6E0);
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a3)
  {
    sub_100100830(0, (unint64_t *)&unk_1015DA6E0);
    a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002EE340(void *a1, uint64_t a2, SEL *a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    id v7 = a1;
    [v6 *a3:v7];

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002EE3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D6F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LibraryViewController()
{
  return self;
}

uint64_t sub_1002EE454()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002EE48C(Class isa, Class a2)
{
}

void sub_1002EE494(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
  }
  else if (!a3)
  {

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1002EE500(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100356D7C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1002F1908(v6);
  return specialized ContiguousArray._endMutation()();
}

void *sub_1002EE57C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = _swiftEmptyArrayStorage;
  v0[4] = 0;
  swift_unknownObjectWeakInit();
  sub_100028D98();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5CF90;
  *(void *)(v6 + 32) = type metadata accessor for FavoriteItem();
  *(void *)(v6 + 40) = type metadata accessor for CollectionPlaceItem();
  *(void *)(v6 + 48) = type metadata accessor for Collection();
  *(void *)(v6 + 56) = type metadata accessor for CachedCuratedCollection();
  *(void *)(v6 + 64) = type metadata accessor for UserRoute();
  *(void *)(v6 + 72) = type metadata accessor for CuratedCollection();
  v1[5] = v6;
  type metadata accessor for MapsSyncStore();
  id v7 = (void *)static MapsSyncStore.sharedStore.getter();
  swift_retain();
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  swift_release();
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  id v9 = (void *)swift_allocObject();
  v9[2] = 0;
  _OWORD v9[3] = 0;
  v9[4] = v1;
  v9[5] = v2;
  swift_retain();
  sub_100042AF4((uint64_t)v5, (uint64_t)&unk_1015DA7C0, (uint64_t)v9);
  swift_release();
  return v1;
}

Swift::Void __swiftcall LibraryRecentsDataProvider.storeDidChange(types:)(Swift::OpaquePointer types)
{
  uint64_t v2 = *v1;
  uint64_t v3 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  _OWORD v7[3] = 0;
  _OWORD v7[4] = v1;
  v7[5] = v2;
  swift_retain();
  sub_100042AF4((uint64_t)v5, (uint64_t)&unk_1015DA6F8, (uint64_t)v7);
  swift_release();
}

uint64_t LibraryRecentsDataProvider.deinit()
{
  uint64_t v1 = v0;
  type metadata accessor for MapsSyncStore();
  uint64_t v2 = (void *)static MapsSyncStore.sharedStore.getter();
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  swift_bridgeObjectRelease();
  sub_100123CE4(v1 + 24);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t LibraryRecentsDataProvider.__deallocating_deinit()
{
  uint64_t v1 = v0;
  type metadata accessor for MapsSyncStore();
  uint64_t v2 = (void *)static MapsSyncStore.sharedStore.getter();
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  swift_bridgeObjectRelease();
  sub_100123CE4(v1 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1002EE960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  sub_1000FF33C((uint64_t *)&unk_1015D9410);
  *(void *)(v4 + 40) = swift_task_alloc();
  return _swift_task_switch(sub_1002EE9F4, 0, 0);
}

uint64_t sub_1002EE9F4()
{
  v0[6] = type metadata accessor for MapsSyncQueryPredicate();
  v0[7] = sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5CF70;
  *(void *)(v1 + 56) = &type metadata for Int16;
  *(void *)(v1 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v1 + 32) = 6;
  static MapsSyncQueryPredicate.withFormat(_:_:)();
  swift_bridgeObjectRelease();
  v0[8] = sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithKey:v4 ascending:0];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  uint64_t v6 = (objc_class *)type metadata accessor for MapsSyncRange();
  v0[9] = v6;
  id v7 = objc_allocWithZone(v6);
  MapsSyncRange.init(offset:limit:)();
  Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
  v0[10] = Options;
  id v9 = objc_allocWithZone(Options);
  objc_super v10 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[11] = v10;
  type metadata accessor for CollectionPlaceItemRequest();
  v0[12] = CollectionPlaceItemRequest.__allocating_init()();
  id v14 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  id v11 = v10;
  Swift::String v12 = (void *)swift_task_alloc();
  v0[13] = v12;
  *Swift::String v12 = v0;
  v12[1] = sub_1002EEC30;
  return v14(v10);
}

uint64_t sub_1002EEC30(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    NSString v4 = sub_1002F0AD0;
  }
  else
  {
    id v5 = *(void **)(v3 + 96);

    NSString v4 = sub_1002EED50;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002EED50()
{
  uint64_t v2 = (objc_class *)v0[9];
  uint64_t v1 = (objc_class *)v0[10];
  static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
  id v4 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithKey:v5 ascending:0];

  *(void *)(v3 + 32) = v6;
  specialized Array._endMutation()();
  id v7 = objc_allocWithZone(v2);
  MapsSyncRange.init(offset:limit:)();
  id v8 = objc_allocWithZone(v1);
  id v9 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[16] = v9;
  type metadata accessor for FavoriteItemRequest();
  v0[17] = FavoriteItemRequest.__allocating_init()();
  id v13 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
  id v10 = v9;
  id v11 = (void *)swift_task_alloc();
  v0[18] = v11;
  *id v11 = v0;
  v11[1] = sub_1002EEF10;
  return v13(v9);
}

uint64_t sub_1002EEF10(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1002F0CE4;
  }
  else
  {
    NSString v5 = *(void **)(v3 + 136);

    id v4 = sub_1002EF030;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_1002EF030()
{
  uint64_t v1 = (objc_class *)v0[9];
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithKey:v4 ascending:0];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  v0[21] = v2;
  id v6 = objc_allocWithZone(v1);
  uint64_t v7 = (void *)MapsSyncRange.init(offset:limit:)();
  v0[22] = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100F5CF70;
  id v9 = objc_allocWithZone((Class)NSUUID);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 initWithUUIDString:v10];

  if (v11)
  {
    Swift::String v12 = (objc_class *)v0[10];
    *(void *)(v8 + 56) = sub_100100830(0, &qword_1015DA418);
    *(void *)(v8 + 64) = sub_1002E8A6C();
    *(void *)(v8 + 32) = v11;
    id v13 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
    v0[23] = v13;
    swift_bridgeObjectRelease();
    objc_allocWithZone(v12);
    id v14 = v13;
    swift_bridgeObjectRetain();
    id v15 = v7;
    id v16 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    v0[24] = v16;
    type metadata accessor for CollectionRequest();
    v0[25] = CollectionRequest.__allocating_init()();
    id v19 = (void (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionRequest.fetch(options:)
                                      + async function pointer to dispatch thunk of CollectionRequest.fetch(options:));
    id v17 = v16;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[26] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1002EF2C8;
    v19(v16);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002EF2C8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 216) = a1;
  *(void *)(v3 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    NSString v4 = sub_1002F0F08;
  }
  else
  {
    id v5 = *(void **)(v3 + 200);

    NSString v4 = sub_1002EF3E8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002EF3E8()
{
  uint64_t v1 = *(void **)(v0 + 176);
  id v2 = objc_allocWithZone(*(Class *)(v0 + 80));
  id v3 = v1;
  NSString v4 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  *(void *)(v0 + 232) = v4;
  type metadata accessor for CuratedCollectionRequest();
  *(void *)(v0 + 240) = CuratedCollectionRequest.__allocating_init()();
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_1015DA7B8 + dword_1015DA7B8);
  id v5 = v4;
  id v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v6;
  void *v6 = v0;
  v6[1] = sub_1002EF4E0;
  return v8((uint64_t)v4);
}

uint64_t sub_1002EF4E0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    NSString v4 = sub_1002EFE78;
  }
  else
  {
    id v5 = *(void **)(v3 + 240);

    NSString v4 = sub_1002EF600;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002EF600()
{
  id v57 = v0;
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    uint64_t v1 = (void *)v0[22];
    id v2 = (objc_class *)v0[10];
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100F5DFF0;
    id v4 = objc_allocWithZone((Class)NSSortDescriptor);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [v4 initWithKey:v5 ascending:0];

    *(void *)(v3 + 32) = v6;
    v56[0] = v3;
    specialized Array._endMutation()();
    objc_allocWithZone(v2);
    id v7 = v1;
    uint64_t v8 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    v0[34] = v8;
    type metadata accessor for UserRouteRequest();
    v0[35] = UserRouteRequest.__allocating_init()();
    id v55 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of UserRouteRequest.fetch(options:)
                                         + async function pointer to dispatch thunk of UserRouteRequest.fetch(options:));
    id v9 = v8;
    NSString v10 = (void *)swift_task_alloc();
    v0[36] = v10;
    *NSString v10 = v0;
    v10[1] = sub_1002F00D0;
    return v55(v8);
  }
  uint64_t v12 = v0[33];
  if (v0[14] >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v13 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    uint64_t v13 = v0[14];
  }
  unint64_t v14 = v0[19];
  swift_bridgeObjectRelease();
  if (v14 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v15 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v15 = v0[19];
  }
  unint64_t v16 = v0[27];
  swift_bridgeObjectRelease();
  v56[0] = v13;
  sub_10024C02C(v15);
  uint64_t v17 = v13;
  if (v16 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v18 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v18 = v0[27];
  }
  unint64_t v19 = v0[32];
  swift_bridgeObjectRelease();
  v56[0] = v17;
  sub_10024C02C(v18);
  if (v19 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v20 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v20 = v0[32];
  }
  swift_bridgeObjectRelease();
  sub_10024C02C(v20);
  BOOL v21 = v17;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    NSString v22 = (void *)_bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    NSString v22 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v56[0] = v17;
  uint64_t v23 = (uint64_t)v56;
  sub_10024C02C((unint64_t)v22);
  uint64_t v24 = v56[0];
  v56[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v24 >> 62)
  {
    if (v24 < 0) {
      uint64_t v23 = v24;
    }
    else {
      uint64_t v23 = v24 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    if (v25) {
      goto LABEL_17;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_39;
  }
  uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v25) {
    goto LABEL_38;
  }
LABEL_17:
  if (v25 < 1)
  {
    __break(1u);
    goto LABEL_73;
  }
  for (uint64_t i = 0; i != v25; ++i)
  {
    if ((v24 & 0xC000000000000001) != 0) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v24 + 8 * i + 32);
    }
    unint64_t v28 = v27;
    uint64_t v29 = v0[5];
    dispatch thunk of MapsSyncObject.createTime.getter();
    uint64_t v30 = type metadata accessor for Date();
    int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30);
    sub_1001C0FAC(v29);
    if (v31 == 1)
    {
    }
    else
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = v56[0];
LABEL_39:
  swift_bridgeObjectRelease();
  if (v32 < 0 || (v32 & 0x4000000000000000) != 0)
  {
    unint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v33 = (uint64_t)sub_10034EE54(v52);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v56[0] = v33;
  sub_1002EE500(v56);
  v0[39] = v12;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v56[0];
    BOOL v21 = v56[0] < 0 || (v56[0] & 0x4000000000000000) != 0;
    if (!v21)
    {
      if (*(uint64_t *)(v56[0] + 16) >= 15) {
        unint64_t v34 = 15;
      }
      else {
        unint64_t v34 = *(void *)(v56[0] + 16);
      }
      goto LABEL_53;
    }
LABEL_73:
    swift_bridgeObjectRetain();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v49 = swift_release();
    if (v39 < 0)
    {
      __break(1u);
      return _swift_task_switch(v49, v50, v51);
    }
    if (v53 >= 15) {
      uint64_t v54 = 15;
    }
    else {
      uint64_t v54 = v53;
    }
    if (v53 >= 0) {
      unint64_t v34 = v54;
    }
    else {
      unint64_t v34 = 15;
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v41 < (uint64_t)v34)
    {
      __break(1u);
      goto LABEL_82;
    }
LABEL_53:
    if ((v23 & 0xC000000000000001) != 0 && v34)
    {
      type metadata accessor for MapsSyncObject();
      Swift::Int v35 = 0;
      do
      {
        Swift::Int v36 = v35 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v35);
        Swift::Int v35 = v36;
      }
      while (v34 != v36);
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      unint64_t v34 = v42;
      swift_release_n();
      uint64_t v23 = v37;
      if (v34)
      {
LABEL_62:
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_unknownObjectRetain_n();
        id v44 = (void *)swift_dynamicCastClass();
        if (!v44)
        {
          swift_unknownObjectRelease();
          id v44 = _swiftEmptyArrayStorage;
        }
        uint64_t v45 = v44[2];
        swift_release();
        if (!__OFSUB__(v34 >> 1, v41))
        {
          if (v45 == (v34 >> 1) - v41)
          {
            uint64_t v43 = (void *)swift_dynamicCastClass();
            if (!v43)
            {
              swift_unknownObjectRelease();
              uint64_t v43 = _swiftEmptyArrayStorage;
            }
            goto LABEL_68;
          }
          goto LABEL_83;
        }
LABEL_82:
        __break(1u);
LABEL_83:
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v41 = 0;
      uint64_t v39 = v23 + 32;
      unint64_t v34 = (2 * v34) | 1;
      if (v34) {
        goto LABEL_62;
      }
    }
    uint64_t v43 = sub_10034ECA8(v23, v39, v41, v34);
LABEL_68:
    v0[40] = v43;
    swift_unknownObjectRelease();
    swift_weakInit();
    type metadata accessor for MainActor();
    v0[41] = static MainActor.shared.getter();
    uint64_t v46 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v48 = v47;
    uint64_t v49 = (uint64_t)sub_1002F09A0;
    uint64_t v50 = v46;
    uint64_t v51 = v48;
    return _swift_task_switch(v49, v50, v51);
  }
  return swift_release();
}

uint64_t sub_1002EFE78()
{
  id v2 = (void *)v0[23];
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = (void *)v0[22];
  id v4 = (void *)v0[16];
  NSString v5 = (void *)v0[11];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v7 = (void *)v0[29];
  id v6 = (void *)v0[30];

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000F2248(v8, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)id v11 = 138412290;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Library Home: Error Fetching Recets: %@", v11, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1002F00D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 296) = v1;
  swift_task_dealloc();
  NSString v5 = *(void **)(v4 + 280);

  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v6 = sub_1002F115C;
  }
  else
  {
    *(void *)(v4 + 304) = a1;
    id v6 = sub_1002F0264;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002F0264()
{
  uint64_t v49 = v0;
  uint64_t v2 = v0[37];
  unint64_t v1 = v0[38];
  uint64_t v3 = (void *)v0[34];
  swift_retain();
  unint64_t v4 = (unint64_t)sub_1002F2B9C(v1);
  swift_release();
  swift_bridgeObjectRelease();

  if (v0[14] >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v5 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    uint64_t v5 = v0[14];
  }
  unint64_t v6 = v0[19];
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v7 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v7 = v0[19];
  }
  unint64_t v8 = v0[27];
  swift_bridgeObjectRelease();
  v48[0] = v5;
  sub_10024C02C(v7);
  uint64_t v9 = v5;
  if (v8 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v10 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v10 = v0[27];
  }
  unint64_t v11 = v0[32];
  swift_bridgeObjectRelease();
  v48[0] = v9;
  sub_10024C02C(v10);
  if (v11 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v12 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v12 = v0[32];
  }
  swift_bridgeObjectRelease();
  sub_10024C02C(v12);
  BOOL v13 = v9;
  if (v4 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    unint64_t v14 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    unint64_t v14 = v4;
  }
  swift_bridgeObjectRelease();
  v48[0] = v9;
  uint64_t v15 = (uint64_t)v48;
  sub_10024C02C(v14);
  uint64_t v16 = v48[0];
  v48[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v15 = v16;
    }
    else {
      uint64_t v15 = v16 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (v17) {
      goto LABEL_13;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v24 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_35;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_34;
  }
LABEL_13:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_69;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(v16 + 8 * i + 32);
    }
    unint64_t v20 = v19;
    uint64_t v21 = v0[5];
    dispatch thunk of MapsSyncObject.createTime.getter();
    uint64_t v22 = type metadata accessor for Date();
    int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22);
    sub_1001C0FAC(v21);
    if (v23 == 1)
    {
    }
    else
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v48[0];
LABEL_35:
  swift_bridgeObjectRelease();
  if (v24 < 0 || (v24 & 0x4000000000000000) != 0)
  {
    unint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v25 = (uint64_t)sub_10034EE54(v45);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v48[0] = v25;
  sub_1002EE500(v48);
  v0[39] = v2;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = v48[0];
    BOOL v13 = v48[0] < 0 || (v48[0] & 0x4000000000000000) != 0;
    if (!v13)
    {
      if (*(uint64_t *)(v48[0] + 16) >= 15) {
        unint64_t v27 = 15;
      }
      else {
        unint64_t v27 = *(void *)(v48[0] + 16);
      }
      goto LABEL_49;
    }
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v42 = swift_release();
    if (v32 < 0)
    {
      __break(1u);
      return _swift_task_switch(v42, v43, v44);
    }
    if (v46 >= 15) {
      uint64_t v47 = 15;
    }
    else {
      uint64_t v47 = v46;
    }
    if (v46 >= 0) {
      unint64_t v27 = v47;
    }
    else {
      unint64_t v27 = 15;
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v34 < (uint64_t)v27)
    {
      __break(1u);
      goto LABEL_78;
    }
LABEL_49:
    if ((v15 & 0xC000000000000001) != 0 && v27)
    {
      type metadata accessor for MapsSyncObject();
      Swift::Int v28 = 0;
      do
      {
        Swift::Int v29 = v28 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v28);
        Swift::Int v28 = v29;
      }
      while (v27 != v29);
    }
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      unint64_t v27 = v35;
      swift_release_n();
      uint64_t v15 = v30;
      if (v27)
      {
LABEL_58:
        type metadata accessor for __ContiguousArrayStorageBase();
        swift_unknownObjectRetain_n();
        uint64_t v37 = (void *)swift_dynamicCastClass();
        if (!v37)
        {
          swift_unknownObjectRelease();
          uint64_t v37 = _swiftEmptyArrayStorage;
        }
        uint64_t v38 = v37[2];
        swift_release();
        if (!__OFSUB__(v27 >> 1, v34))
        {
          if (v38 == (v27 >> 1) - v34)
          {
            Swift::Int v36 = (void *)swift_dynamicCastClass();
            if (!v36)
            {
              swift_unknownObjectRelease();
              Swift::Int v36 = _swiftEmptyArrayStorage;
            }
            goto LABEL_64;
          }
          goto LABEL_79;
        }
LABEL_78:
        __break(1u);
LABEL_79:
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v34 = 0;
      uint64_t v32 = v15 + 32;
      unint64_t v27 = (2 * v27) | 1;
      if (v27) {
        goto LABEL_58;
      }
    }
    Swift::Int v36 = sub_10034ECA8(v15, v32, v34, v27);
LABEL_64:
    v0[40] = v36;
    swift_unknownObjectRelease();
    swift_weakInit();
    type metadata accessor for MainActor();
    v0[41] = static MainActor.shared.getter();
    uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v41 = v40;
    uint64_t v42 = (uint64_t)sub_1002F09A0;
    uint64_t v43 = v39;
    uint64_t v44 = v41;
    return _swift_task_switch(v42, v43, v44);
  }
  return swift_release();
}

uint64_t sub_1002F09A0()
{
  uint64_t v1 = *(void *)(v0 + 320);
  swift_release();
  sub_1002F145C(v0 + 24, v1);
  swift_release();
  swift_weakDestroy();
  return _swift_task_switch(sub_1002F0A34, 0, 0);
}

uint64_t sub_1002F0A34()
{
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void **)(v0 + 192);
  unint64_t v4 = *(void **)(v0 + 176);
  uint64_t v5 = *(void **)(v0 + 128);

  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002F0AD0()
{
  uint64_t v2 = (void *)v0[11];
  uint64_t v1 = (void *)v0[12];

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    unint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Library Home: Error Fetching Recets: %@", v6, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1002F0CE4()
{
  uint64_t v1 = (void *)v0[11];
  swift_bridgeObjectRelease();

  uint64_t v3 = (void *)v0[16];
  uint64_t v2 = (void *)v0[17];

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000F2248(v4, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Library Home: Error Fetching Recets: %@", v7, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1002F0F08()
{
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 128);
  uint64_t v3 = *(void **)(v0 + 88);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  os_log_type_t v5 = *(void **)(v0 + 192);
  uint64_t v4 = *(void **)(v0 + 200);

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000F2248(v6, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Library Home: Error Fetching Recets: %@", v9, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1002F115C()
{
  uint64_t v1 = *(void **)(v0 + 272);
  uint64_t v2 = *(void **)(v0 + 232);
  uint64_t v3 = *(void **)(v0 + 192);

  uint64_t v4 = *(void **)(v0 + 184);
  os_log_type_t v5 = *(void **)(v0 + 128);

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000F2248(v6, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Library Home: Error Fetching Recets: %@", v9, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1002F139C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_100105268;
  return sub_1002EE960(a1, v4, v5, v6);
}

uint64_t sub_1002F145C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 16) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100307B5C();
      id v8 = sub_100306788();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t LibraryRecentsDataProvider.storeSubscriptionTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryRecentsDataProvider.storeSubscriptionTypes.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*LibraryRecentsDataProvider.storeSubscriptionTypes.modify())()
{
  return j__swift_endAccess;
}

uint64_t type metadata accessor for LibraryRecentsDataProvider()
{
  return self;
}

void sub_1002F1908(uint64_t *a1)
{
  uint64_t v3 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v155 = (char *)&v133 - v7;
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v133 - v9;
  __chkstk_darwin(v11);
  id v148 = (char *)&v133 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v133 - v14;
  __chkstk_darwin(v16);
  unsigned int v140 = (char *)&v133 - v17;
  Swift::Int v18 = a1[1];
  Swift::Int v19 = _minimumMergeRunLength(_:)(v18);
  if (v19 >= v18)
  {
    if (v18 < 0) {
      goto LABEL_136;
    }
    if (v18) {
      sub_1002F23B0(0, v18, 1, a1);
    }
    return;
  }
  if (v18 >= 0) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  if (v18 < -1) {
    goto LABEL_150;
  }
  uint64_t v150 = v1;
  unsigned int v151 = v5;
  Swift::Int v139 = v19;
  unsigned int v145 = (char *)v18;
  unsigned int v134 = a1;
  if (v18 < 2)
  {
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
    uint64_t v156 = (uint64_t)_swiftEmptyArrayStorage;
    BOOL v149 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v18 != 1)
    {
      unint64_t v29 = _swiftEmptyArrayStorage[2];
LABEL_102:
      if (v29 >= 2)
      {
        uint64_t v126 = *v134;
        do
        {
          unint64_t v127 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_131;
          }
          if (!v126) {
            goto LABEL_147;
          }
          uint64_t v128 = *(void *)&v24[16 * v127 + 32];
          uint64_t v129 = *(void *)&v24[16 * v29 + 24];
          uint64_t v130 = v150;
          sub_1002F25FC((void **)(v126 + 8 * v128), (id *)(v126 + 8 * *(void *)&v24[16 * v29 + 16]), v126 + 8 * v129, v149);
          uint64_t v150 = v130;
          if (v130) {
            break;
          }
          if (v129 < v128) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v24 = sub_10035503C((uint64_t)v24);
          }
          if (v127 >= *((void *)v24 + 2)) {
            goto LABEL_133;
          }
          id v131 = &v24[16 * v127 + 32];
          *(void *)id v131 = v128;
          *((void *)v131 + 1) = v129;
          unint64_t v132 = *((void *)v24 + 2);
          if (v29 > v132) {
            goto LABEL_134;
          }
          memmove(&v24[16 * v29 + 16], &v24[16 * v29 + 32], 16 * (v132 - v29));
          *((void *)v24 + 2) = v132 - 1;
          unint64_t v29 = v132 - 1;
        }
        while (v132 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v21 = a1;
    uint64_t v22 = v20 >> 1;
    type metadata accessor for MapsSyncObject();
    uint64_t v23 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
    a1 = v21;
    BOOL v149 = (void **)((v23 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v156 = v23;
  }
  uint64_t v25 = 0;
  uint64_t v26 = *a1;
  uint64_t v27 = *a1 + 16;
  uint64_t v135 = *a1 - 8;
  uint64_t v136 = v27;
  uint64_t v24 = (char *)_swiftEmptyArrayStorage;
  uint64_t v146 = v10;
  Swift::Int v28 = v145;
  uint64_t v152 = v26;
  char v138 = v15;
  while (1)
  {
    uint64_t v30 = v25;
    uint64_t v31 = v25 + 1;
    id v144 = v25;
    if ((uint64_t)(v25 + 1) < (uint64_t)v28)
    {
      uint64_t v32 = *(void **)(v26 + 8 * (void)v25);
      uint64_t v33 = (char *)*(id *)(v26 + 8 * (void)v31);
      id v34 = v32;
      unint64_t v35 = v140;
      unsigned int v153 = v33;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v36 = type metadata accessor for Date();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = *(char **)(v37 + 48);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v38)(v35, 1, v36) == 1) {
        goto LABEL_148;
      }
      uint64_t v39 = v138;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v147 = v37 + 48;
      uint64_t v143 = v38;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v38)(v39, 1, v36) == 1) {
        goto LABEL_149;
      }
      uint64_t v40 = v140;
      LODWORD(v154) = static Date.> infix(_:_:)();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
      v41(v39, v36);
      uint64_t v141 = v41;
      uint64_t v142 = v37 + 8;
      v41(v40, v36);

      uint64_t v30 = v144;
      uint64_t v31 = v144 + 2;
      if ((uint64_t)(v144 + 2) < (uint64_t)v145)
      {
        NSURL v137 = v24;
        uint64_t v42 = (id *)(v136 + 8 * (void)v144);
        while (1)
        {
          unsigned int v153 = v31;
          uint64_t v43 = *(v42 - 1);
          id v44 = *v42;
          id v45 = v43;
          uint64_t v46 = v148;
          dispatch thunk of MapsSyncObject.createTime.getter();
          uint64_t v47 = v46;
          uint64_t v48 = v143;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v143)(v47, 1, v36) == 1) {
            goto LABEL_144;
          }
          dispatch thunk of MapsSyncObject.createTime.getter();
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v48)(v10, 1, v36) == 1) {
            goto LABEL_145;
          }
          uint64_t v49 = v148;
          int v50 = static Date.> infix(_:_:)();
          uint64_t v51 = v141;
          v141(v10, v36);
          v51(v49, v36);

          if ((v154 ^ v50)) {
            break;
          }
          uint64_t v31 = v153 + 1;
          ++v42;
          if (v145 == v153 + 1)
          {
            uint64_t v30 = v144;
            uint64_t v31 = v145;
            uint64_t v24 = v137;
            goto LABEL_26;
          }
        }
        uint64_t v31 = v153;
        uint64_t v24 = v137;
        uint64_t v30 = v144;
      }
LABEL_26:
      uint64_t v26 = v152;
      if (v154)
      {
        if ((uint64_t)v31 < (uint64_t)v30) {
          goto LABEL_137;
        }
        if ((uint64_t)v30 < (uint64_t)v31)
        {
          unint64_t v52 = (uint64_t *)(v135 + 8 * (void)v31);
          uint64_t v53 = v31;
          uint64_t v54 = v30;
          id v55 = (uint64_t *)(v152 + 8 * (void)v30);
          do
          {
            if (v54 != --v53)
            {
              if (!v26) {
                goto LABEL_146;
              }
              uint64_t v56 = *v55;
              *id v55 = *v52;
              *unint64_t v52 = v56;
            }
            ++v54;
            --v52;
            ++v55;
          }
          while ((uint64_t)v54 < (uint64_t)v53);
        }
      }
    }
    if ((uint64_t)v31 < (uint64_t)v145)
    {
      if (__OFSUB__(v31, v30)) {
        goto LABEL_135;
      }
      if (v31 - v30 < v139) {
        break;
      }
    }
LABEL_54:
    if ((uint64_t)v31 < (uint64_t)v30) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = sub_10035496C(0, *((void *)v24 + 2) + 1, 1, v24);
    }
    unint64_t v76 = *((void *)v24 + 2);
    unint64_t v75 = *((void *)v24 + 3);
    unint64_t v29 = v76 + 1;
    uint64_t v26 = v152;
    if (v76 >= v75 >> 1)
    {
      uint64_t v125 = sub_10035496C((char *)(v75 > 1), v76 + 1, 1, v24);
      uint64_t v26 = v152;
      uint64_t v24 = v125;
    }
    *((void *)v24 + 2) = v29;
    uint64_t v77 = v24 + 32;
    id v78 = &v24[16 * v76 + 32];
    *(void *)id v78 = v30;
    *((void *)v78 + 1) = v31;
    unsigned int v153 = v31;
    if (v76)
    {
      while (1)
      {
        unint64_t v79 = v29 - 1;
        if (v29 >= 4)
        {
          uint64_t v84 = &v77[16 * v29];
          uint64_t v85 = *((void *)v84 - 8);
          uint64_t v86 = *((void *)v84 - 7);
          BOOL v90 = __OFSUB__(v86, v85);
          uint64_t v87 = v86 - v85;
          if (v90) {
            goto LABEL_119;
          }
          uint64_t v89 = *((void *)v84 - 6);
          uint64_t v88 = *((void *)v84 - 5);
          BOOL v90 = __OFSUB__(v88, v89);
          uint64_t v82 = v88 - v89;
          char v83 = v90;
          if (v90) {
            goto LABEL_120;
          }
          unint64_t v91 = v29 - 2;
          uint64_t v92 = &v77[16 * v29 - 32];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v90 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v90) {
            goto LABEL_122;
          }
          BOOL v90 = __OFADD__(v82, v95);
          uint64_t v96 = v82 + v95;
          if (v90) {
            goto LABEL_125;
          }
          if (v96 >= v87)
          {
            uint64_t v114 = &v77[16 * v79];
            uint64_t v116 = *(void *)v114;
            uint64_t v115 = *((void *)v114 + 1);
            BOOL v90 = __OFSUB__(v115, v116);
            uint64_t v117 = v115 - v116;
            if (v90) {
              goto LABEL_129;
            }
            BOOL v107 = v82 < v117;
            goto LABEL_91;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v108 = *((void *)v24 + 4);
            uint64_t v109 = *((void *)v24 + 5);
            BOOL v90 = __OFSUB__(v109, v108);
            uint64_t v101 = v109 - v108;
            char v102 = v90;
            goto LABEL_85;
          }
          uint64_t v81 = *((void *)v24 + 4);
          uint64_t v80 = *((void *)v24 + 5);
          BOOL v90 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          char v83 = v90;
        }
        if (v83) {
          goto LABEL_121;
        }
        unint64_t v91 = v29 - 2;
        id v97 = &v77[16 * v29 - 32];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v100 = __OFSUB__(v98, v99);
        uint64_t v101 = v98 - v99;
        char v102 = v100;
        if (v100) {
          goto LABEL_124;
        }
        id v103 = &v77[16 * v79];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v90 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v90) {
          goto LABEL_127;
        }
        if (__OFADD__(v101, v106)) {
          goto LABEL_128;
        }
        if (v101 + v106 >= v82)
        {
          BOOL v107 = v82 < v106;
LABEL_91:
          if (v107) {
            unint64_t v79 = v91;
          }
          goto LABEL_93;
        }
LABEL_85:
        if (v102) {
          goto LABEL_123;
        }
        uint64_t v110 = &v77[16 * v79];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v90 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v90) {
          goto LABEL_126;
        }
        if (v113 < v101) {
          goto LABEL_14;
        }
LABEL_93:
        unint64_t v118 = v79 - 1;
        if (v79 - 1 >= v29)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v26) {
          goto LABEL_143;
        }
        uint64_t v119 = &v77[16 * v118];
        uint64_t v120 = *(void *)v119;
        id v121 = &v77[16 * v79];
        uint64_t v122 = *((void *)v121 + 1);
        uint64_t v123 = v150;
        sub_1002F25FC((void **)(v26 + 8 * *(void *)v119), (id *)(v26 + 8 * *(void *)v121), v26 + 8 * v122, v149);
        uint64_t v150 = v123;
        if (v123) {
          goto LABEL_113;
        }
        if (v122 < v120) {
          goto LABEL_116;
        }
        if (v79 > *((void *)v24 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v119 = v120;
        *(void *)&v77[16 * v118 + 8] = v122;
        unint64_t v124 = *((void *)v24 + 2);
        if (v79 >= v124) {
          goto LABEL_118;
        }
        unint64_t v29 = v124 - 1;
        memmove(&v77[16 * v79], v121 + 16, 16 * (v124 - 1 - v79));
        *((void *)v24 + 2) = v124 - 1;
        unint64_t v10 = v146;
        uint64_t v26 = v152;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_14:
    Swift::Int v28 = v145;
    uint64_t v25 = v153;
    if ((uint64_t)v153 >= (uint64_t)v145) {
      goto LABEL_102;
    }
  }
  if (__OFADD__(v30, v139)) {
    goto LABEL_138;
  }
  id v57 = v145;
  if ((uint64_t)&v30[v139] < (uint64_t)v145) {
    id v57 = &v30[v139];
  }
  if ((uint64_t)v57 >= (uint64_t)v30)
  {
    if (v31 != v57)
    {
      NSURL v137 = v24;
      uint64_t v58 = v135 + 8 * (void)v31;
      uint64_t v143 = v57;
      do
      {
        id v60 = *(void **)(v26 + 8 * (void)v31);
        id v61 = v30;
        uint64_t v147 = v58;
        uint64_t v62 = v58;
        unsigned int v153 = v31;
        while (1)
        {
          BOOL v154 = v61;
          id v63 = *(void **)v62;
          id v64 = v60;
          id v65 = v63;
          id v66 = v155;
          dispatch thunk of MapsSyncObject.createTime.getter();
          uint64_t v67 = type metadata accessor for Date();
          uint64_t v68 = *(void *)(v67 - 8);
          id v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
          if (v69(v66, 1, v67) == 1) {
            goto LABEL_140;
          }
          NSString v70 = v151;
          dispatch thunk of MapsSyncObject.createTime.getter();
          if (v69(v70, 1, v67) == 1) {
            goto LABEL_141;
          }
          uint64_t v71 = v155;
          char v72 = static Date.> infix(_:_:)();
          id v73 = *(void (**)(char *, uint64_t))(v68 + 8);
          v73(v70, v67);
          v73(v71, v67);

          if ((v72 & 1) == 0) {
            break;
          }
          uint64_t v26 = v152;
          uint64_t v59 = v153;
          if (!v152) {
            goto LABEL_142;
          }
          uint64_t v74 = *(void **)v62;
          id v60 = *(void **)(v62 + 8);
          *(void *)uint64_t v62 = v60;
          *(void *)(v62 + 8) = v74;
          v62 -= 8;
          id v61 = v154 + 1;
          if (v59 == v154 + 1) {
            goto LABEL_45;
          }
        }
        uint64_t v26 = v152;
        uint64_t v59 = v153;
LABEL_45:
        uint64_t v31 = v59 + 1;
        uint64_t v58 = v147 + 8;
        uint64_t v30 = v144;
      }
      while (v31 != v143);
      uint64_t v31 = v143;
      uint64_t v24 = v137;
      unint64_t v10 = v146;
    }
    goto LABEL_54;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002F23B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v28 = a1;
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v34 = (char *)&v26 - v11;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v30 = *a4;
    uint64_t v12 = v30 + 8 * a3 - 8;
    uint64_t v13 = v34;
LABEL_5:
    uint64_t v14 = *(void **)(v30 + 8 * a3);
    uint64_t v31 = a3;
    uint64_t v32 = v28;
    uint64_t v29 = v12;
    while (1)
    {
      uint64_t v15 = *(void **)v12;
      id v16 = v14;
      id v17 = v15;
      id v33 = v16;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v13, 1, v18) == 1) {
        break;
      }
      dispatch thunk of MapsSyncObject.createTime.getter();
      if (v20(v9, 1, v18) == 1) {
        goto LABEL_13;
      }
      uint64_t v21 = v34;
      char v22 = static Date.> infix(_:_:)();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v19 + 8);
      v23(v9, v18);
      v23(v21, v18);

      uint64_t v24 = v31;
      if (v22)
      {
        if (!v30) {
          goto LABEL_14;
        }
        uint64_t v25 = *(void **)v12;
        uint64_t v14 = *(void **)(v12 + 8);
        *(void *)uint64_t v12 = v14;
        *(void *)(v12 + 8) = v25;
        v12 -= 8;
        if (v24 != ++v32) {
          continue;
        }
      }
      a3 = v24 + 1;
      uint64_t v12 = v29 + 8;
      if (a3 == v27) {
        return;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
}

uint64_t sub_1002F25FC(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v8 - 8);
  __chkstk_darwin(v9);
  id v60 = (void **)((char *)&v54 - v10);
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v54 - v12;
  __chkstk_darwin(v13);
  id v61 = (id *)((char *)&v54 - v15);
  uint64_t v16 = (char *)a2 - (char *)a1;
  uint64_t v17 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v17 = (char *)a2 - (char *)a1;
  }
  uint64_t v18 = v17 >> 3;
  unint64_t v59 = a3;
  uint64_t v19 = a3 - (void)a2;
  uint64_t v20 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v20 = a3 - (void)a2;
  }
  uint64_t v21 = v20 >> 3;
  id v66 = a1;
  id v65 = a4;
  if (v18 >= v20 >> 3)
  {
    uint64_t v56 = v14;
    if (v19 >= -7)
    {
      if (a4 != a2 || &a2[v21] <= a4) {
        memmove(a4, a2, 8 * v21);
      }
      uint64_t v37 = &a4[v21];
      id v64 = v37;
      id v66 = a2;
      if (v19 >= 8 && a1 < a2)
      {
        uint64_t v38 = (id *)(v59 - 8);
        uint64_t v39 = a2;
        id v55 = a4;
        uint64_t v62 = a1;
        while (1)
        {
          id v61 = v38;
          id v63 = a2;
          unint64_t v59 = (unint64_t)v37;
          uint64_t v40 = v37 - 1;
          uint64_t v41 = *--v39;
          uint64_t v42 = *(v37 - 1);
          id v43 = v41;
          id v44 = v60;
          uint64_t v58 = v42;
          dispatch thunk of MapsSyncObject.createTime.getter();
          uint64_t v45 = type metadata accessor for Date();
          uint64_t v46 = *(void *)(v45 - 8);
          uint64_t v47 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v46 + 48);
          if (v47(v44, 1, v45) == 1) {
            break;
          }
          uint64_t v48 = v56;
          dispatch thunk of MapsSyncObject.createTime.getter();
          if (v47(v48, 1, v45) == 1) {
            goto LABEL_50;
          }
          uint64_t v49 = v60;
          id v57 = v61 + 1;
          char v50 = static Date.> infix(_:_:)();
          uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
          v51((uint64_t)v48, v45);
          v51((uint64_t)v49, v45);

          if (v50)
          {
            uint64_t v37 = (void **)v59;
            unint64_t v52 = v61;
            if (v57 != v63 || v61 >= v63) {
              *id v61 = *v39;
            }
            id v66 = v39;
          }
          else
          {
            id v64 = v40;
            unint64_t v52 = v61;
            if ((unint64_t)v57 < v59 || (unint64_t)v61 >= v59 || v57 != (id *)v59) {
              *id v61 = *v40;
            }
            uint64_t v39 = v63;
            uint64_t v37 = v40;
          }
          if (v37 > v55)
          {
            uint64_t v38 = v52 - 1;
            a2 = v39;
            if (v39 > v62) {
              continue;
            }
          }
          goto LABEL_46;
        }
        __break(1u);
        goto LABEL_48;
      }
LABEL_46:
      sub_100354BDC(&v66, &v65, &v64);
      return 1;
    }
  }
  else if (v16 >= -7)
  {
    if (a4 != a1 || &a1[v18] <= a4) {
      memmove(a4, a1, 8 * v18);
    }
    id v60 = &a4[v18];
    id v64 = v60;
    if (v16 >= 8 && (unint64_t)a2 < v59)
    {
      while (1)
      {
        uint64_t v62 = a1;
        id v63 = a2;
        char v22 = a4;
        uint64_t v23 = *a4;
        id v24 = *a2;
        id v25 = v23;
        uint64_t v26 = v61;
        dispatch thunk of MapsSyncObject.createTime.getter();
        uint64_t v27 = type metadata accessor for Date();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(unsigned int (**)(id *, uint64_t, uint64_t))(v28 + 48);
        if (v29(v26, 1, v27) == 1) {
          break;
        }
        uint64_t v30 = (id *)v58;
        dispatch thunk of MapsSyncObject.createTime.getter();
        if (v29(v30, 1, v27) == 1) {
          goto LABEL_49;
        }
        uint64_t v31 = v61;
        char v32 = static Date.> infix(_:_:)();
        id v33 = *(void (**)(char *, uint64_t))(v28 + 8);
        v33((char *)v30, v27);
        v33((char *)v31, v27);

        if (v32)
        {
          id v34 = v62;
          unint64_t v35 = v63 + 1;
          a4 = v22;
          if (v62 < v63 || v62 >= v35 || v62 != v63) {
            *uint64_t v62 = *v63;
          }
        }
        else
        {
          id v34 = v62;
          uint64_t v36 = v63;
          if (v62 != v22) {
            *uint64_t v62 = *v22;
          }
          a4 = v22 + 1;
          id v65 = v22 + 1;
          unint64_t v35 = v36;
        }
        a1 = v34 + 1;
        id v66 = a1;
        if (a4 < v60)
        {
          a2 = v35;
          if ((unint64_t)v35 < v59) {
            continue;
          }
        }
        goto LABEL_46;
      }
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    goto LABEL_46;
  }
LABEL_51:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1002F2B9C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_16;
        }
        id v7 = [self routeDataForMapsSyncUserRoute:v4];
        if (v7
          && (uint64_t v8 = v7,
              unsigned __int8 v9 = [v7 isAvailableForCurrentCountry],
              v8,
              (v9 & 1) != 0))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v3;
        if (v6 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002F2D18(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_1000FF33C((uint64_t *)&unk_1015D9410);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1002F2DAC, 0, 0);
}

uint64_t sub_1002F2DAC()
{
  type metadata accessor for CuratedCollectionRequest();
  v0[4] = CuratedCollectionRequest.__allocating_init()();
  id v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CuratedCollectionRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CuratedCollectionRequest.fetch(options:));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_1002F2E6C;
  uint64_t v2 = v0[2];
  return v4(v2);
}

uint64_t sub_1002F2E6C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1002F3638;
  }
  else
  {

    id v4 = sub_1002F2F88;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002F2F88()
{
  uint64_t v1 = v0;
  unint64_t v2 = v0[6];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    v0[8] = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v0[8] = v3;
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = type metadata accessor for MapsSyncQueryPredicate();
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  unint64_t v6 = v2 & 0xC000000000000001;
  uint64_t v18 = v0[6] + 32;
  do
  {
    if (v6) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v18 + 8 * v5);
    }
    uint64_t v8 = v7;
    sub_1000FF33C((uint64_t *)&unk_1015D4740);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100F5CFA0;
    id v10 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:dispatch thunk of CuratedCollection.curatedCollectionIdentifier.getter()];
    uint64_t v11 = sub_100100830(0, (unint64_t *)&qword_1015D9680);
    *(void *)(v9 + 56) = v11;
    *(void *)(v9 + 32) = v10;
    id v12 = [objc_allocWithZone((Class)NSNumber) initWithInt:dispatch thunk of CuratedCollection.resultProviderIdentifier.getter()];
    *(void *)(v9 + 88) = v11;
    *(void *)(v9 + 64) = v12;
    static MapsSyncQueryPredicate.queryPredicate(format:argumentArray:)();
    swift_bridgeObjectRelease();

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    ++v5;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  while (v3 != v5);
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
LABEL_14:
  id v13 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryPredicate());
  MapsSyncQueryPredicate.init(or:)();
  id v14 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
  uint64_t v15 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v1[9] = v15;
  type metadata accessor for CachedCuratedCollectionRequest();
  v1[10] = CachedCuratedCollectionRequest.__allocating_init()();
  uint64_t v19 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CachedCuratedCollectionRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CachedCuratedCollectionRequest.fetch(options:));
  id v16 = v15;
  uint64_t v17 = (void *)swift_task_alloc();
  v1[11] = v17;
  *uint64_t v17 = v1;
  v17[1] = sub_1002F32D0;
  return v19(v15);
}

uint64_t sub_1002F32D0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1002F36A4;
  }
  else
  {
    uint64_t v5 = *(void **)(v3 + 80);

    id v4 = sub_1002F33F0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002F33F0()
{
  if (v0[8])
  {
    unint64_t v1 = v0[12];
    if (v1 >> 62) {
      goto LABEL_34;
    }
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = v0[12];
LABEL_4:
    unint64_t v4 = 0;
    uint64_t v5 = v0[6];
    uint64_t v25 = v5 & 0xFFFFFFFFFFFFFF8;
    unint64_t v26 = v5 & 0xC000000000000001;
    uint64_t v24 = v5 + 32;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t v7 = v3 + 32;
    while (1)
    {
      if (v26)
      {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v25 + 16)) {
          goto LABEL_33;
        }
        id v11 = *(id *)(v24 + 8 * v4);
      }
      id v12 = v11;
      if (__OFADD__(v4++, 1))
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v3 = v0[12];
        goto LABEL_4;
      }
      if (!v2) {
        goto LABEL_8;
      }
      uint64_t v14 = 0;
      while (1)
      {
        id v15 = v6 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v7 + 8 * v14);
        id v16 = v15;
        uint64_t v17 = dispatch thunk of CachedCuratedCollection.curatedCollectionIdentifier.getter();
        unint64_t v1 = (unint64_t)v12;
        if (v17 == dispatch thunk of CuratedCollection.curatedCollectionIdentifier.getter()) {
          break;
        }

        uint64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_25:
        ++v14;
        if (v19 == v2) {
          goto LABEL_8;
        }
      }
      int v18 = dispatch thunk of CachedCuratedCollection.resultProviderIdentifier.getter();
      unint64_t v1 = dispatch thunk of CuratedCollection.resultProviderIdentifier.getter();

      if (v18 != v1) {
        break;
      }
      if (v6) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v7 + 8 * v14);
      }
      uint64_t v9 = v8;
      id v10 = v12;
      dispatch thunk of MapsSyncObject.createTime.getter();

      dispatch thunk of MapsSyncObject.createTime.setter();
LABEL_8:
      unint64_t v1 = v0[8];

      if (v4 == v1) {
        goto LABEL_28;
      }
    }
    uint64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_28:
  uint64_t v20 = (void *)v0[9];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v22 = v0[12];
  return v21(v22);
}

uint64_t sub_1002F3638()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F36A4()
{
  unint64_t v1 = *(void **)(v0 + 80);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002F3730()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002F3770(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10005056C;
  return sub_1002EE960(a1, v4, v5, v6);
}

uint64_t type metadata accessor for LibraryPlacesCollectionViewManagerConfiguration()
{
  return self;
}

id sub_1002F3914()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource);
  }
  else
  {
    uint64_t v4 = v0;
    if (qword_1015CBFA8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1000FF33C(&qword_1015DA8B8);
    sub_1000F2248(v5, (uint64_t)qword_101611CB8);
    if (qword_1015CBFB8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1000FF33C(&qword_1015DA8C0);
    sub_1000F2248(v6, (uint64_t)qword_101611CD8);
    uint64_t v7 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration)
                  + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    objc_allocWithZone((Class)sub_1000FF33C(&qword_1015DA8C8));
    id v8 = v7;
    uint64_t v9 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    id v10 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1002F3A80()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = objc_allocWithZone((Class)type metadata accessor for HomeListCompositionalLayout());
    v11[4] = sub_1002F6494;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100080538;
    v11[3] = &unk_1012E34D8;
    uint64_t v6 = _Block_copy(v11);
    swift_retain();
    id v7 = [v5 initWithSectionProvider:v6];
    _Block_release(v6);
    swift_release();
    swift_release();
    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_1002F3BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v7 = (void *)Strong;
  uint64_t v8 = sub_1002F3C48(a1, a2, a3);

  return v8;
}

uint64_t sub_1002F3C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[1] = a1;
  uint64_t v5 = sub_1000FF33C(&qword_1015DA8C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015DA8B8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4D4(a3, (uint64_t)&v21);
  sub_1000FF33C(&qword_1015DA648);
  type metadata accessor for LibraryListSavedItemCellModel();
  if (!swift_dynamicCast()) {
    return 0;
  }
  id v13 = (void *)v20[2];
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType))
  {
    if (qword_1015CBFB8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1000F2248(v5, (uint64_t)qword_101611CD8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
    uint64_t v21 = v13;
    sub_100100830(0, (unint64_t *)&unk_1015DA8D0);
    id v15 = v13;
    uint64_t v16 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    if (qword_1015CBFA8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1000F2248(v9, (uint64_t)qword_101611CB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
    uint64_t v21 = v13;
    sub_100100830(0, &qword_1015D67E8);
    id v18 = v13;
    uint64_t v16 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v16;
}

void *sub_1002F3F88(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v4 = (void *)Strong;
  uint64_t v5 = sub_1002F649C(a2, 0);

  return v5;
}

id sub_1002F3FFC()
{
  uint64_t v0 = self;
  id v1 = [v0 fractionalWidthDimension:0.5];
  id v2 = [v0 fractionalHeightDimension:1.0];
  uint64_t v3 = self;
  id v4 = [v3 sizeWithWidthDimension:v1 heightDimension:v2];

  id v5 = [self itemWithLayoutSize:v4];
  [v5 setContentInsets:16.0, 16.0, 16.0, 16.0];
  id v6 = [v0 fractionalWidthDimension:1.0];
  id v7 = [v0 absoluteDimension:240.0];
  id v8 = [v3 sizeWithWidthDimension:v6 heightDimension:v7];

  uint64_t v9 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100F5DFF0;
  *(void *)(v10 + 32) = v5;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015D4330);
  id v11 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v9 horizontalGroupWithLayoutSize:v8 subitems:isa];

  id v14 = [self sectionWithGroup:v13];
  id v15 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayout) initWithSection:v14];

  return v15;
}

char *sub_1002F4274(void *a1, char a2, char a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout] = 0;
  uint64_t v12 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_gridLayout;
  id v13 = v4;
  *(void *)&v4[v12] = sub_1002F3FFC();
  *(void *)&v13[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration] = a1;
  type metadata accessor for LibraryPlacesDataProvider();
  swift_allocObject();
  id v14 = a1;
  *(void *)&v13[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider] = sub_1002FF8B8(a2);
  type metadata accessor for MapsSyncStore();
  uint64_t v15 = static MapsSyncStore.sharedStore.getter();
  uint64_t v16 = (objc_class *)type metadata accessor for LibraryDataOperationsProvider();
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = v15;
  v44.receiver = v17;
  v44.super_class = v16;
  [super init];
  *(void *)&v13[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_libraryDataOperationsProvider] = v18;
  uint64_t v19 = (objc_class *)type metadata accessor for LibraryCellActionHandler();
  uint64_t v20 = (char *)objc_allocWithZone(v19);
  *(void *)&v20[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v20[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider] = v18;
  *(_DWORD *)&v20[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo] = 140;
  v43.receiver = v20;
  v43.super_class = v19;
  id v21 = v18;
  *(void *)&v13[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cellActionHandler] = [v43 init];
  v13[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_sortType] = a2;
  v13[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType] = a3 & 1;

  v42.receiver = v13;
  v42.super_class = ObjectType;
  id v22 = [super init];
  uint64_t v23 = qword_1015CBFA8;
  uint64_t v24 = (char *)v22;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1000FF33C(&qword_1015DA8B8);
  sub_1000F2248(v25, (uint64_t)qword_101611CB8);
  if (qword_1015CBFB8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1000FF33C(&qword_1015DA8C0);
  sub_1000F2248(v26, (uint64_t)qword_101611CD8);
  uint64_t v27 = *(void *)&v24[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cellActionHandler];
  uint64_t v28 = v14;
  uint64_t v29 = &v14[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
  swift_unknownObjectWeakLoadStrong();
  *(void *)(v27 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator + 8) = *((void *)v29 + 1);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider];
  *(void *)(v30 + 32) = &off_1012E3450;
  swift_unknownObjectWeakAssign();
  unint64_t v31 = *(void *)(v30 + 16);
  if (v31 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v38 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v31 = v38;
  }
  else
  {
    uint64_t v32 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    if (swift_dynamicCastMetatype() || (uint64_t v36 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = v32 + 32;
      while (swift_dynamicCastClass())
      {
        v37 += 8;
        if (!--v36) {
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v31 = v32 | 1;
    }
  }
  id v33 = (unint64_t *)&v24[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems];
  swift_beginAccess();
  unint64_t *v33 = v31;
  swift_bridgeObjectRelease();
  sub_1002F4728();
  id v34 = sub_1002F3914();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
  return v24;
}

uint64_t sub_1002F4728()
{
  sub_1000FF33C(&qword_1015D6F20);
  sub_1002F63F8();
  sub_1001010F8((unint64_t *)&qword_1015DA8A8, &qword_1015D6F20);
  NSDiffableDataSourceSnapshot.init()();
  sub_1000FF33C((uint64_t *)&unk_1015DA638);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1012D80F0);
  swift_beginAccess();
  id v1 = v0;
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_1002F5820(v2);
  swift_bridgeObjectRelease();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t v16 = v3;
  uint64_t result = sub_10025B054(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    unint64_t v7 = v3;
    unint64_t v8 = v3 & 0xC000000000000001;
    do
    {
      if (v8) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v7 + 8 * v6 + 32);
      }
      id v10 = v9;
      uint64_t v11 = type metadata accessor for LibraryListSavedItemCellModel();
      uint64_t v12 = sub_1002F644C((unint64_t *)&qword_1015DA8B0, (void (*)(uint64_t))type metadata accessor for LibraryListSavedItemCellModel);
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1)
      {
        sub_10025B054(v13 > 1, v14 + 1, 1);
        unint64_t v7 = v16;
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[5 * v14];
      void v15[4] = v10;
      *(_OWORD *)(v15 + 5) = v17;
      v15[7] = v11;
      v15[8] = v12;
    }
    while (v4 != v6);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

id sub_1002F49D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration];
  uint64_t v9 = OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView;
  id result = [*(id *)(v8 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView) indexPathsForSelectedItems];
  if (result)
  {
    uint64_t v11 = result;
    type metadata accessor for IndexPath();
    uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v12 = [*(id *)(v8 + v9) indexPathsForSelectedItems];
    if (v12)
    {
      unint64_t v13 = v12;
      uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v15 = v4;
      unint64_t v16 = sub_1002F5BFC(v14, (uint64_t)v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v16 = _swiftEmptyArrayStorage;
    }
    uint64_t v17 = v16[2];
    if (v17)
    {
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v18 = 40;
      do
      {
        swift_unknownObjectRetain();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v18 += 16;
        --v17;
      }
      while (v17);
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    void v20[3] = a2;
    v20[4] = a3;
    v20[5] = v21;
    swift_retain();
    swift_retain();
    sub_1002DF968((unint64_t)_swiftEmptyArrayStorage, a1, (void (*)(uint64_t, void, __n128))sub_1002F5814, (uint64_t)v20);
    swift_bridgeObjectRelease();
    swift_release();
    return (id)swift_release();
  }
  return result;
}

void sub_1002F4C54(char a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  id v61 = a4;
  uint64_t v62 = a6;
  uint64_t v60 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v9 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for IndexSet();
  uint64_t v58 = *(void *)(v19 - 8);
  uint64_t v59 = v19;
  __chkstk_darwin(v19);
  uint64_t v56 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v57 = (char *)&v51 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = (void *)Strong;
    if ((a1 & 1) != 0 || a2)
    {
      v61();
    }
    else
    {
      unint64_t v52 = (void *)Strong;
      int64_t v25 = *(void *)(v62 + 16);
      uint64_t v26 = _swiftEmptyArrayStorage;
      uint64_t v54 = v11;
      uint64_t v55 = v9;
      uint64_t v53 = a5;
      if (v25)
      {
        uint64_t v51 = v14;
        id v66 = _swiftEmptyArrayStorage;
        sub_10025B074(0, v25, 0);
        uint64_t v27 = v16 + 16;
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
        uint64_t v29 = v62 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
        uint64_t v63 = *(void *)(v27 + 56);
        id v64 = v28;
        uint64_t v65 = v27;
        uint64_t v30 = (void (**)(char *, uint64_t))(v27 - 8);
        do
        {
          v64(v18, v29, v15);
          uint64_t v31 = IndexPath.item.getter();
          (*v30)(v18, v15);
          uint64_t v26 = v66;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10025B074(0, v26[2] + 1, 1);
            uint64_t v26 = v66;
          }
          unint64_t v33 = v26[2];
          unint64_t v32 = v26[3];
          if (v33 >= v32 >> 1)
          {
            sub_10025B074(v32 > 1, v33 + 1, 1);
            uint64_t v26 = v66;
          }
          v26[2] = v33 + 1;
          v26[v33 + 4] = v31;
          v29 += v63;
          --v25;
        }
        while (v25);
        uint64_t v35 = v59;
        uint64_t v34 = v60;
        uint64_t v14 = v51;
      }
      else
      {
        uint64_t v35 = v59;
        uint64_t v34 = v60;
      }
      sub_1002F644C(&qword_1015DA888, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      uint64_t v36 = v56;
      dispatch thunk of SetAlgebra.init()();
      uint64_t v37 = v26[2];
      if (v37)
      {
        uint64_t v38 = v26 + 4;
        do
        {
          uint64_t v39 = *v38++;
          uint64_t v67 = v39;
          dispatch thunk of SetAlgebra.insert(_:)();
          --v37;
        }
        while (v37);
      }
      swift_bridgeObjectRelease();
      uint64_t v41 = v57;
      uint64_t v40 = v58;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v36, v35);
      objc_super v42 = v52;
      swift_beginAccess();
      sub_1000FF33C(&qword_1015D68E0);
      sub_1001010F8(&qword_1015DA890, &qword_1015D68E0);
      sub_1001010F8(&qword_1015DA898, &qword_1015D68E0);
      RangeReplaceableCollection<>.remove(atOffsets:)();
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v35);
      id v43 = sub_1002F3914();
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      id v44 = v42;
      uint64_t v45 = sub_1002F6080(v62, (uint64_t)v44);

      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v45);
      swift_bridgeObjectRelease();
      id v46 = sub_1002F3914();
      uint64_t v48 = v54;
      uint64_t v47 = v55;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v14, v34);
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v61;
      *(void *)(v49 + 24) = v53;
      swift_retain();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

      swift_release();
      char v50 = *(void (**)(char *, uint64_t))(v47 + 8);
      v50(v48, v34);
      v50(v14, v34);
    }
  }
}

void sub_1002F525C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration];
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView) indexPathsForSelectedItems];
  if (v2)
  {
    unint64_t v3 = v2;
    type metadata accessor for IndexPath();
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v5 = v0;
    uint64_t v6 = sub_1002F5BFC(v4, (uint64_t)v5);
    swift_bridgeObjectRelease();

    if (v6[2])
    {
LABEL_3:
      id v12 = [objc_allocWithZone((Class)CollectionAddOrRemoveSession) init];
      uint64_t v7 = v6[2];
      if (v7)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = 4;
        do
        {
          [v12 addSelectedObject:v6[v8]];
          v8 += 2;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v9 = v1 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v10 = *(void *)(v9 + 8);
        uint64_t ObjectType = swift_getObjectType();
        memset(v13, 0, sizeof(v13));
        (*(void (**)(id, _OWORD *, uint64_t, uint64_t, double, double, double, double))(v10 + 32))(v12, v13, ObjectType, v10, 0.0, 0.0, 0.0, 0.0);

        swift_unknownObjectRelease();
        sub_1000FF2E0((uint64_t)v13, (uint64_t *)&unk_1015CD260);
      }
      else
      {
      }
      return;
    }
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_1002F5458(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) == 1
    && (a1 & 1) == 0)
  {
    unint64_t v9 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                   + 16);
    if (v9 >> 62)
    {
      type metadata accessor for MapsSyncObject();
      swift_bridgeObjectRetain();
      uint64_t v15 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v9 = v15;
    }
    else
    {
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MapsSyncObject();
      if (swift_dynamicCastMetatype() || (uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = v4;
        uint64_t v14 = v10 + 32;
        while (swift_dynamicCastClass())
        {
          v14 += 8;
          if (!--v13)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v16;
            goto LABEL_6;
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v9 = v10 | 1;
        uint64_t v4 = v16;
      }
    }
LABEL_6:
    uint64_t v11 = (unint64_t *)(v2 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems);
    swift_beginAccess();
    *uint64_t v11 = v9;
    swift_bridgeObjectRelease();
    sub_1002F4728();
    id v12 = sub_1002F3914();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(unsigned char *)(v2 + v8) = a1 & 1;
}

uint64_t type metadata accessor for LibraryPlacesCollectionViewManager()
{
  return self;
}

uint64_t sub_1002F5794()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F57CC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002F5814(char a1, uint64_t a2)
{
  sub_1002F4C54(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

void *sub_1002F5820(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v39 = v1 & 0xC000000000000001;
      for (uint64_t i = 4; ; ++i)
      {
        if (v39) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v1 + 8 * i);
        }
        uint64_t v6 = v5;
        uint64_t v4 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        uint64_t v7 = (objc_class *)type metadata accessor for LibraryListSavedItemCellModel();
        uint64_t v8 = (char *)objc_allocWithZone(v7);
        uint64_t v9 = (uint64_t)&v8[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler];
        *(void *)&v8[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler + 8] = 0;
        swift_unknownObjectWeakInit();
        uint64_t v41 = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        uint64_t v10 = swift_dynamicCastObjCProtocolConditional();
        if (v10)
        {
          uint64_t v11 = v10;
          id v12 = v7;
          unint64_t v13 = v1;
          swift_getObjectType();
          id v14 = v6;
          uint64_t v15 = v8;
          unint64_t v16 = (unint64_t)LibraryPlaceItemCompatible.createMapItemFromStorage()();
          if (v16)
          {
            id v17 = (id)v16;
            char v18 = 0;
            unint64_t v1 = v13;
            uint64_t v7 = v12;
            uint64_t v4 = i - 3;
            goto LABEL_19;
          }

          unint64_t v1 = v13;
          uint64_t v4 = i - 3;
        }
        else
        {
          type metadata accessor for Collection();
          uint64_t v19 = swift_dynamicCastClass();
          if (v19)
          {
            uint64_t v20 = v19;
            uint64_t v21 = self;
            id v22 = v6;
            uint64_t v23 = v8;
            id v24 = [v21 collectionWithMapsSyncCollection:v20];
            goto LABEL_18;
          }
          type metadata accessor for CachedCuratedCollection();
          uint64_t v25 = swift_dynamicCastClass();
          if (v25)
          {
            uint64_t v26 = v25;
            uint64_t v27 = self;
            id v28 = v6;
            uint64_t v29 = v8;
            id v24 = [v27 collectionWithMapsSyncCachedCuratedCollection:v26];
LABEL_18:
            id v17 = v24;
            uint64_t v11 = 0;
            char v18 = 1;
LABEL_19:
            uint64_t v30 = &v8[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
            *(void *)uint64_t v30 = v17;
            *((void *)v30 + 1) = v11;
            v30[16] = v18;
            sub_1002F601C(v17, v11, v18);

            v40.receiver = v8;
            v40.super_class = v7;
            uint64_t v31 = (char *)[super init];

            sub_1002EE494(v17, v11, v18);
            *(void *)&v31[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler + 8] = &off_1012E3158;
            swift_unknownObjectWeakAssign();

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            goto LABEL_6;
          }
          type metadata accessor for UserRoute();
          uint64_t v32 = swift_dynamicCastClass();
          if (v32)
          {
            uint64_t v33 = v32;
            uint64_t v34 = self;
            id v35 = v6;
            uint64_t v36 = v8;
            id v17 = [v34 routeDataForMapsSyncUserRoute:v33];
            uint64_t v11 = 0;
            char v18 = 2;
            goto LABEL_19;
          }
          uint64_t v37 = v8;
        }
        sub_100123CE4(v9);

        swift_deallocPartialClassInstance();
LABEL_6:
        if (v4 == v2)
        {
          swift_bridgeObjectRelease();
          return (void *)v42;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1002F5BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v35 = v2;
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    id v44 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v41 = *(void *)(v12 + 56);
    unint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    unint64_t v39 = (void (**)(char *, uint64_t))(v12 - 8);
    objc_super v40 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v34 = a1;
    swift_bridgeObjectRetain();
    uint64_t v38 = _swiftEmptyArrayStorage;
    id v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    unint64_t v33 = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v36 = v12;
    uint64_t v37 = v7;
    while (1)
    {
      v44(v10, v14, v4);
      uint64_t v15 = *v43;
      (*v43)(v10, 0, 1, v4);
      if ((*v42)(v10, 1, v4) == 1) {
        goto LABEL_18;
      }
      (*v40)(v7, v10, v4);
      id v16 = sub_1002F3914();
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

      if (*((void *)&v47 + 1))
      {
        v49[0] = v46;
        v49[1] = v47;
        uint64_t v50 = v48;
        sub_100101314(v49, (uint64_t)&v46);
        sub_1000FF33C(&qword_1015DA648);
        type metadata accessor for LibraryListSavedItemCellModel();
        if (swift_dynamicCast())
        {
          id v17 = v51;
          char v18 = *(void **)&v51[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
          uint64_t v19 = *(void *)&v51[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 8];
          int v20 = v51[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16];
          sub_1002F601C(v18, v19, v51[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16]);

          if (!v20)
          {
            (*v39)(v37, v4);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v38 = sub_1001D0DCC(0, v38[2] + 1, 1, v38);
            }
            uint64_t v21 = v18;
            uint64_t v22 = v19;
            uint64_t v7 = v37;
            unint64_t v24 = v38[2];
            unint64_t v23 = v38[3];
            unint64_t v25 = v24 + 1;
            if (v24 >= v23 >> 1)
            {
              unint64_t v32 = v24 + 1;
              id v28 = sub_1001D0DCC((void *)(v23 > 1), v24 + 1, 1, v38);
              unint64_t v25 = v32;
              uint64_t v38 = v28;
            }
            uint64_t v26 = v38;
            v38[2] = v25;
            uint64_t v27 = &v26[2 * v24];
            v27[4] = v21;
            v27[5] = v22;
            goto LABEL_10;
          }
          sub_1002EE494(v18, v19, v20);
          uint64_t v7 = v37;
        }
      }
      else
      {
        sub_1000FF2E0((uint64_t)&v46, &qword_1015DA880);
      }
      (*v39)(v7, v4);
LABEL_10:
      v14 += v41;
      if (!--v11)
      {
        v15(v10, 1, 1, v4);
        goto LABEL_18;
      }
    }
  }
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  uint64_t v38 = _swiftEmptyArrayStorage;
  v29(v10, 1, 1, v4);
LABEL_18:
  swift_bridgeObjectRelease();
  return v38;
}

id sub_1002F601C(id result, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
    return result;
  }
  else if (!a3)
  {
    id v4 = result;
    return (id)swift_unknownObjectRetain();
  }
  return result;
}

void *sub_1002F6080(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v25[1] = a1;
    v25[2] = v2;
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v31 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v28 = *(void *)(v12 + 56);
    uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v26 = (void (**)(char *, uint64_t))(v12 - 8);
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    uint64_t v15 = _swiftEmptyArrayStorage;
    uint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    v25[0] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    void v25[3] = v12;
    while (1)
    {
      v31(v10, v14, v4);
      id v16 = *v30;
      (*v30)(v10, 0, 1, v4);
      if ((*v29)(v10, 1, v4) == 1) {
        break;
      }
      (*v27)(v7, v10, v4);
      id v17 = sub_1002F3914();
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

      (*v26)(v7, v4);
      if (*((void *)&v36 + 1))
      {
        long long v32 = v35;
        long long v33 = v36;
        uint64_t v34 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_1001D0EDC(0, v15[2] + 1, 1, v15);
        }
        unint64_t v19 = v15[2];
        unint64_t v18 = v15[3];
        if (v19 >= v18 >> 1) {
          uint64_t v15 = sub_1001D0EDC((void *)(v18 > 1), v19 + 1, 1, v15);
        }
        v15[2] = v19 + 1;
        int v20 = &v15[5 * v19];
        long long v21 = v32;
        long long v22 = v33;
        v20[8] = v34;
        *((_OWORD *)v20 + 2) = v21;
        *((_OWORD *)v20 + 3) = v22;
      }
      else
      {
        sub_1000FF2E0((uint64_t)&v35, &qword_1015DA880);
      }
      v14 += v28;
      if (!--v11)
      {
        v16(v10, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    uint64_t v15 = _swiftEmptyArrayStorage;
    v23(v10, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1002F63C0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1002F63F8()
{
  unint64_t result = qword_1015DA8A0;
  if (!qword_1015DA8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA8A0);
  }
  return result;
}

uint64_t sub_1002F644C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1002F6494(uint64_t a1, uint64_t a2)
{
  return sub_1002F3F88(a1, a2);
}

void *sub_1002F649C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v4 + 104))(v6, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v3, v9);
  UICollectionLayoutListConfiguration.init(appearance:)();
  id v12 = [self clearColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  UICollectionLayoutListConfiguration.headerTopPadding.setter();
  sub_1000F4F24(a2);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  sub_100100830(0, (unint64_t *)&unk_1015D14E0);
  unint64_t v13 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  [v13 contentInsets];
  [v13 setContentInsets:0.0];
  [v13 contentInsets];
  [v13 setContentInsets:];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v13;
}

uint64_t sub_1002F66D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002F3BC0(a1, a2, a3);
}

uint64_t sub_1002F66E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_1002F66EC(uint64_t a1, Class isa, uint64_t a3)
{
  sub_1000FF27C(a1, (uint64_t)v14, (uint64_t *)&unk_1015CD260);
  uint64_t v5 = v15;
  if (!v15)
  {
    uint64_t v11 = 0;
    if (!isa) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v6 = sub_1000FF380(v14, v15);
  uint64_t v7 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_1000FF22C((uint64_t)v14);
  if (isa)
  {
LABEL_3:
    sub_100100830(0, &qword_1015DAA20);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
LABEL_4:
  id v12 = (id)(*(uint64_t (**)(uint64_t, uint64_t, Class))(a3 + 16))(a3, v11, isa);
  swift_unknownObjectRelease();

  return v12;
}

uint64_t LibraryPlacesViewController.actionDelegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t LibraryPlacesViewController.actionDelegate.setter()
{
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
  if (v2)
  {
    *(void *)(*(void *)(v2 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration)
              + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
              + 8) = &protocol witness table for LibraryPlacesViewController;
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

void (*LibraryPlacesViewController.actionDelegate.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_1002F6AB8;
}

void sub_1002F6AB8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = v3[4];
    swift_endAccess();
    swift_unknownObjectRelease();
    uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v5)
    {
      *(void *)(*(void *)(v5 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration)
                + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
                + 8) = &protocol witness table for LibraryPlacesViewController;
      swift_unknownObjectWeakAssign();
    }
  }

  free(v3);
}

id sub_1002F6B80()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UINavigationBar) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v4 standardAppearance];
    [v5 configureWithTransparentBackground];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1002F6C44()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem];
  }
  else
  {
    if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0)) {
      swift_bridgeObjectRetain();
    }
    id v4 = objc_allocWithZone((Class)UINavigationItem);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithTitle:v5];

    id v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1002F6D1C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton);
  }
  else
  {
    uint64_t v4 = sub_1002F6D98();
    id v6 = sub_100255C3C(v4, v5);
    swift_release();
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

UIMenu (*sub_1002F6D98())()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider);
  if (v2)
  {
    id v3 = *(UIMenu (**)())(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = *v1;
    id v3 = sub_1002FD8C0;
    uint64_t *v1 = (uint64_t)sub_1002FD8C0;
    v1[1] = v4;
    swift_retain();
    sub_10006C5D8(v5);
  }
  sub_1000F4F24(v2);
  return v3;
}

id sub_1002F6E54()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton);
  }
  else
  {
    id v4 = sub_1002562EC();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002F6EC4(uint64_t *a1, void *a2, uint64_t (*a3)(uint64_t, void))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = (void *)a3(v3, *a2);
    id v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    uint64_t v5 = 0;
  }
  id v9 = v5;
  return v6;
}

id sub_1002F6F2C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v0 action:"exitEditingMode"];
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v4];

    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1002F6FEC()
{
  BOOL v1 = -[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0);
  sub_1000FF33C(&qword_1015CD310);
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100F5F0D0;
    *(void *)(v2 + 32) = sub_1002F6D1C();
    *(void *)(v2 + 40) = sub_1002F6EC4(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton, &selRef_addLibraryItem, (uint64_t (*)(uint64_t, void))sub_10025541C);
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100F5E000;
    *(void *)(v2 + 32) = sub_1002F6EC4(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___dismissButtonIOS, &selRef_dismissTapped, (uint64_t (*)(uint64_t, void))sub_100255FE4);
    *(void *)(v2 + 40) = sub_1002F6D1C();
    *(void *)(v2 + 48) = sub_1002F6EC4(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton, &selRef_addLibraryItem, (uint64_t (*)(uint64_t, void))sub_10025541C);
  }
  specialized Array._endMutation()();
  return v2;
}

UIMenu sub_1002F723C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v1 = (void *)Strong;
    preferredElementSize = sub_1002F72E4();
  }
  else
  {
    preferredElementSize = _swiftEmptyArrayStorage;
  }
  sub_100100830(0, (unint64_t *)&unk_1015DAA00);
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v6.value.super.Class isa = 0;
  v6.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v3, (Swift::String_optional)0, v6, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v5);
}

void *sub_1002F72E4()
{
  BOOL v1 = v0;
  id v2 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  unsigned int v3 = [v2 isEditing];

  if (v3)
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100F5DFF0;
    *(void *)(v4 + 32) = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionModeMenu, (uint64_t (*)(uint64_t))sub_1002FAAB4);
    UIImage_optional v6 = (void *)v4;
  }
  else
  {
    UIImage_optional v6 = _swiftEmptyArrayStorage;
    if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v1))
    {
      sub_1002FA324();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_1002FA5B8();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    sub_1002FA774();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  }
  specialized Array._endMutation()();
  return v6;
}

id sub_1002F74E0()
{
  return sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
}

id sub_1002F7500(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UISearchController) initWithSearchResultsController:0];
  id v3 = [v2 searchBar];
  [v3 setReturnKeyType:9];

  [v2 setSearchResultsUpdater:a1];
  [v2 setObscuresBackgroundDuringPresentation:0];
  [v2 setHidesNavigationBarDuringPresentation:0];
  [v2 setAutomaticallyShowsCancelButton:1];
  id v4 = v2;
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setAccessibilityIdentifier:v5];

  id v6 = [v4 searchBar];
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v7._uint64_t countAndFlagsBits = 0xD000000000000028;
  v11._uint64_t countAndFlagsBits = 0xD000000000000042;
  v11._object = (void *)0x8000000100F85A90;
  v7._object = (void *)0x8000000100F85A40;
  v8._object = (void *)0x8000000100F85A70;
  v8._uint64_t countAndFlagsBits = 0xD000000000000013;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_101611820, v8, v11);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setPlaceholder:v9];

  return v4;
}

id sub_1002F76F0(void *a1)
{
  id result = [a1 view];
  if (result)
  {
    id v2 = result;
    [result bounds];
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;

    id v11 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
    id v12 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v11 collectionViewLayout:v4];

    unint64_t v13 = self;
    id v14 = v12;
    id v15 = [v13 clearColor];
    [v14 setBackgroundColor:v15];

    id v16 = [v14 layer];
    [v16 setAllowsGroupOpacity:0];

    [v14 setAllowsSelectionDuringEditing:0];
    [v14 setAllowsMultipleSelectionDuringEditing:1];
    [v14 _mapsui_resetLayoutMarginsWithPreservesSuperview:1];
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1002F7874(uint64_t a1)
{
  type metadata accessor for EmptyStateView();
  id v2 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self _systemImageNamed:v3];

  double v5 = *(void **)&v2[OBJC_IVAR____TtC4Maps14EmptyStateView_image];
  *(void *)&v2[OBJC_IVAR____TtC4Maps14EmptyStateView_image] = v4;
  id v6 = v4;
  sub_1002A5000((uint64_t)v5);

  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v7._uint64_t countAndFlagsBits = 0xD000000000000020;
  v23._uint64_t countAndFlagsBits = 0xD000000000000058;
  v23._object = (void *)0x8000000100F85B30;
  v7._object = (void *)0x8000000100F85AE0;
  v8._object = (void *)0x8000000100F85B10;
  v8._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_101611820, v8, v23);
  double v9 = *(void **)&v2[OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel];
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v10];

  v11._uint64_t countAndFlagsBits = 0xD000000000000022;
  v12._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v24._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
  v24._object = (void *)0x8000000100F85BF0;
  v11._object = (void *)0x8000000100F85B90;
  v12._object = (void *)0x8000000100F85BC0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_101611820, v12, v24);
  unint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel];
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v14];

  v15._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v25._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v25._object = (void *)0x8000000100F85C70;
  v15._object = (void *)0x8000000100F85C40;
  v16._uint64_t countAndFlagsBits = 0x6C50206120646441;
  v16._object = (void *)0xEB00000000656361;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)qword_101611820, v16, v25);
  id v17 = objc_allocWithZone((Class)MapsAddButton);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithTitle:v18];

  [v19 addTarget:a1 action:"addLibraryItem" forControlEvents:64];
  int v20 = *(void **)&v2[OBJC_IVAR____TtC4Maps14EmptyStateView_button];
  *(void *)&v2[OBJC_IVAR____TtC4Maps14EmptyStateView_button] = v19;
  id v21 = v19;
  sub_1002A521C(v20);

  return v2;
}

id LibraryPlacesViewController.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  [*(id *)(*(void *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_countsManager]+ OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers) unregisterObserver:v0];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return [super dealloc];
}

Swift::Void __swiftcall LibraryPlacesViewController.viewDidLoad()()
{
  BOOL v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1000FF33C(&qword_1015CD250);
  *(void *)&double v4 = __chkstk_darwin(v3 - 8).n128_u64[0];
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21.receiver = v1;
  v21.super_class = ObjectType;
  [super viewDidLoad:v4];
  id v7 = [v1 cardPresentationController];
  if (!v7)
  {
    __break(1u);
    goto LABEL_10;
  }
  Swift::String v8 = v7;
  [v7 setTakesAvailableHeight:1];

  id v9 = [v1 cardPresentationController];
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  NSString v10 = v9;
  [v9 setPresentedModally:1];

  id v11 = [v1 view];
  if (!v11)
  {
LABEL_11:
    __break(1u);
    return;
  }
  Swift::String v12 = v11;
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 setAccessibilityIdentifier:v13];

  sub_1002F8134();
  sub_1002F8694();
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  type metadata accessor for MainActor();
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  sub_1002DD440((uint64_t)v6, (uint64_t)&unk_1015DA908, v16);
  swift_release();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100F5CF70;
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(static LibraryItemsCountManager.shared
                  + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (v18) {
    uint64_t v18 = *(void *)(v18 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  }
  *(void *)(v17 + 56) = &type metadata for Int;
  *(void *)(v17 + 64) = &protocol witness table for Int;
  *(void *)(v17 + 32) = v18;
  String.init(format:_:)();
  id v19 = self;
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 captureUserAction:21 target:140 value:v20];

  _s4Maps27LibraryPlacesViewControllerC24libraryItemsCountManager_15didUpdateCountsyAA0bghI0C_AA0bgH0CtF_0();
  [*(id *)(*(void *)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_countsManager]+ OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers) registerObserver:v1];
}

void sub_1002F8134()
{
  BOOL v1 = v0;
  BOOL v2 = -[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0);
  id v3 = sub_1002F6C44();
  if (v2)
  {
    Class isa = sub_100255FE4((uint64_t)v0, (uint64_t)"dismissTapped");
    uint64_t v5 = &selRef_setLeftBarButtonItem_;
  }
  else
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
    *(void *)(v6 + 32) = sub_1002F6E54();
    uint64_t v40 = v6;
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&unk_1015DAA10);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v5 = &selRef_setLeftBarButtonItems_;
  }
  [v3 *v5];

  id v7 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
  [v7 setActive:1];

  id v8 = sub_1002F6C44();
  id v9 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
  [v8 setSearchController:v9];

  id v10 = sub_1002F6C44();
  [v10 setHidesSearchBarWhenScrolling:0];

  id v11 = sub_1002F6B80();
  id v12 = sub_1002F6C44();
  [v11 pushNavigationItem:v12 animated:0];

  id v13 = [v1 headerView];
  if (!v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v14 = v13;
  id v15 = sub_1002F6B80();
  [v14 addSubview:v15];

  id v16 = sub_1002F6C44();
  sub_1002F6FEC();
  sub_100100830(0, (unint64_t *)&unk_1015DAA10);
  Class v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setRightBarButtonItems:v17];

  id v18 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
  id v19 = [v18 searchBar];

  [v19 _setOverrideContentInsets:10 forRectEdges:0.0, 16.0, 0.0, 16.0];
  id v20 = [v1 contentView];
  if (!v20)
  {
LABEL_11:
    __break(1u);
    return;
  }
  objc_super v21 = v20;
  id v22 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  [v21 addSubview:v22];

  id v23 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v24 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  Swift::String v25 = (objc_class *)type metadata accessor for LibraryPlacesCollectionViewManagerConfiguration();
  uint64_t v26 = (char *)objc_allocWithZone(v25);
  *(void *)&v26[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
                + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v26[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView] = v24;
  v39.receiver = v26;
  v39.super_class = v25;
  uint64_t v27 = (char *)[super init];
  *(void *)&v27[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator
                + 8] = &protocol witness table for LibraryPlacesViewController;
  swift_unknownObjectWeakAssign();
  LOBYTE(v26) = v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType];
  char v28 = v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType];
  objc_allocWithZone((Class)type metadata accessor for LibraryPlacesCollectionViewManager());
  uint64_t v29 = v27;
  uint64_t v30 = sub_1002F4274(v29, v28, (char)v26);
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
  *(void *)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager] = v30;
  long long v32 = v30;

  id v33 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  id v34 = sub_1002F3914();
  [v33 setDataSource:v34];

  id v35 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  if (v32[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType]) {
    id v36 = *(id *)&v32[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_gridLayout];
  }
  else {
    id v36 = sub_1002F3A80();
  }
  uint64_t v37 = v36;
  [v35 setCollectionViewLayout:v36];

  id v38 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  [v38 setDelegate:v1];
}

void sub_1002F8694()
{
  id v1 = [v0 contentView];
  if (!v1) {
    return;
  }
  BOOL v2 = v1;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F5E870;
  id v4 = sub_1002F6B80();
  id v5 = [v4 topAnchor];

  id v6 = [v0 headerView];
  if (!v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v7 = v6;
  id v8 = [v6 topAnchor];

  id v9 = [v5 constraintEqualToAnchor:v8 constant:4.0];
  *(void *)(v3 + 32) = v9;
  id v10 = sub_1002F6B80();
  id v11 = [v10 leadingAnchor];

  id v12 = [v0 headerView];
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v13 = v12;
  id v14 = [v12 leadingAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v3 + 40) = v15;
  id v16 = sub_1002F6B80();
  id v17 = [v16 trailingAnchor];

  id v18 = [v0 headerView];
  if (!v18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v19 = v18;
  id v20 = [v18 trailingAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v3 + 48) = v21;
  id v22 = sub_1002F6B80();
  id v23 = [v22 bottomAnchor];

  id v24 = [v0 headerView];
  if (!v24)
  {
LABEL_13:
    __break(1u);
    return;
  }
  Swift::String v25 = v24;
  id v44 = self;
  id v26 = [v25 bottomAnchor];

  id v27 = [v23 constraintEqualToAnchor:v26];
  *(void *)(v3 + 56) = v27;
  id v28 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  id v29 = [v28 topAnchor];

  id v30 = [v2 topAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v3 + 64) = v31;
  id v32 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  id v33 = [v32 leadingAnchor];

  id v34 = [v2 leadingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v3 + 72) = v35;
  id v36 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  id v37 = [v36 trailingAnchor];

  id v38 = [v2 trailingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v3 + 80) = v39;
  id v40 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  id v41 = [v40 bottomAnchor];

  id v42 = [v2 bottomAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v3 + 88) = v43;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v44 activateConstraints:isa];
}

void _s4Maps27LibraryPlacesViewControllerC24libraryItemsCountManager_15didUpdateCountsyAA0bghI0C_AA0bgH0CtF_0()
{
  uint64_t v1 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_countsManager]
                 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (!v1) {
    return;
  }
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  id v3 = [v0 contentView];
  if (!v3) {
    return;
  }
  id v39 = v3;
  id v4 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
  id v5 = [v4 superview];

  id v6 = v39;
  if ((v2 == 0) != (v5 != 0))
  {
    if (v2)
    {
      if (v5)
      {
        id v7 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
        [v7 removeFromSuperview];

        id v8 = sub_1002F6EC4(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton, &selRef_addLibraryItem, (uint64_t (*)(uint64_t, void))sub_10025541C);
        [v8 setHidden:0];

        id v9 = sub_1002F6D1C();
        [v9 setHidden:0];

        id v10 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
        id v11 = [v10 searchBar];

        [v11 setHidden:0];
        id v12 = sub_1002F6B80();
        [v12 layoutIfNeeded];

        id v13 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
        [v13 setHidden:0 v39, v41];
LABEL_10:

        id v6 = v40;
      }
    }
    else if (!v5)
    {
      id v14 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
      id v15 = [v14 searchBar];

      [v15 setHidden:1];
      id v16 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
      [v16 setHidden:1];

      id v17 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
      [v39 addSubview:v17];

      id v18 = self;
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_100F62DB0;
      id v20 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
      id v21 = [v20 centerXAnchor];

      id v22 = [v39 centerXAnchor];
      id v23 = [v21 constraintEqualToAnchor:v22];

      *(void *)(v19 + 32) = v23;
      id v24 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
      id v25 = [v24 centerYAnchor];

      id v26 = [v39 safeAreaLayoutGuide];
      id v27 = [v26 centerYAnchor];

      id v28 = [v25 constraintEqualToAnchor:v27];
      *(void *)(v19 + 40) = v28;
      id v29 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
      id v30 = [v29 leadingAnchor];

      id v31 = [v39 leadingAnchor];
      id v32 = [v30 constraintGreaterThanOrEqualToAnchor:v31 constant:16.0];

      *(void *)(v19 + 48) = v32;
      id v33 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView, (uint64_t (*)(uint64_t))sub_1002F7874);
      id v34 = [v33 trailingAnchor];

      id v35 = [v39 trailingAnchor];
      id v36 = [v34 constraintLessThanOrEqualToAnchor:v35 constant:16.0];

      *(void *)(v19 + 56) = v36;
      specialized Array._endMutation()();
      sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 activateConstraints:isa];

      id v38 = sub_1002F6EC4(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton, &selRef_addLibraryItem, (uint64_t (*)(uint64_t, void))sub_10025541C);
      [v38 setHidden:1];

      id v13 = sub_1002F6D1C();
      [v13 setHidden:1 v39, v19];
      goto LABEL_10;
    }
  }
}

Swift::Void __swiftcall LibraryPlacesViewController.willBecomeCurrent(_:)(Swift::Bool a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  [super willBecomeCurrent:a1];
  id v3 = self;
  id v4 = [v3 defaultCenter];
  [v4 addObserver:v1 selector:"keyboardDidAppear" name:UIKeyboardDidShowNotification object:0];

  id v5 = [v3 defaultCenter];
  [v5 addObserver:v1 selector:"keyboardDidDismiss" name:UIKeyboardDidHideNotification object:0];
}

Swift::Void __swiftcall LibraryPlacesViewController.didResignCurrent()()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  [super didResignCurrent];
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0 name:UIKeyboardDidShowNotification object:0];

  id v3 = [v1 defaultCenter];
  [v3 removeObserver:v0 name:UIKeyboardDidHideNotification object:0];
}

uint64_t sub_1002F94E4(uint64_t a1)
{
  v1[2] = a1;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_1002F957C, v3, v2);
}

uint64_t sub_1002F957C()
{
  type metadata accessor for MapsSyncService();
  *(void *)(v0 + 48) = static MapsSyncService.shared.getter();
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MapsSyncService.prepareLibrary()
                         + async function pointer to dispatch thunk of MapsSyncService.prepareLibrary());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_1002F9634;
  return v3();
}

uint64_t sub_1002F9634()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 48);
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();

  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v2 + 32);
    uint64_t v5 = *(void *)(v2 + 40);
    objc_super v6 = sub_1002FDA00;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 32);
    uint64_t v5 = *(void *)(v2 + 40);
    objc_super v6 = sub_1002F9774;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1002F9774()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (BOOL *)v0[2];
  swift_release();
  BOOL *v2 = v1 != 0;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1002F991C(char a1)
{
  int v2 = a1 & 1;
  if ((((v2 == 0) ^ *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType)) & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType) = v2;
    uint64_t v3 = *(unsigned char **)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v3)
    {
      v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType] = v2;
      uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration];
      uint64_t v5 = OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView;
      objc_super v6 = *(void **)(v4 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView);
      id v14 = v3;
      if (v2)
      {
        id v10 = *(void **)&v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_gridLayout];
        id v11 = v3;
        id v12 = v6;
        id v9 = v10;
      }
      else
      {
        id v7 = v3;
        id v8 = v6;
        id v9 = sub_1002F3A80();
      }
      id v13 = v9;
      [v6 setCollectionViewLayout:v9 animated:0];

      [*(id *)(v4 + v5) reloadData];
    }
  }
}

void sub_1002F9A3C()
{
  if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0))
  {
    uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (v1) {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) = 1;
    }
    id v2 = sub_1002F6C44();
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v17._uint64_t countAndFlagsBits = 0xD000000000000053;
    v17._object = (void *)0x8000000100F855A0;
    v3._object = (void *)0x8000000100F85580;
    v3._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v4._uint64_t countAndFlagsBits = 0x50207463656C6553;
    v4._object = (void *)0xED0000736563616CLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v17);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setTitle:v5];

    id v6 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
    [v6 setEditing:1];

    id v7 = sub_1002F6C44();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100F5DFF0;
    *(void *)(v8 + 32) = sub_1002F6D1C();
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&unk_1015DAA10);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 setRightBarButtonItems:isa];

    id v10 = sub_1002F6C44();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
    *(void *)(v11 + 32) = sub_1002F6F2C();
    specialized Array._endMutation()();
    Class v12 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v10 setLeftBarButtonItems:v12];

    id v13 = sub_1002F6D1C();
    [v13 setEnabled:0];

    id v14 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
    id v15 = [v14 searchBar];

    [v15 setEnabled:0];
  }
}

void sub_1002F9D70()
{
  uint64_t v1 = v0;
  if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0))
  {
    id v2 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
    [v2 setEditing:0];

    id v3 = sub_1002F6C44();
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 setTitle:v4];

    id v5 = sub_1002F6C44();
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
    *(void *)(v6 + 32) = sub_1002F6E54();
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&unk_1015DAA10);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 setLeftBarButtonItems:isa];

    id v8 = sub_1002F6C44();
    sub_1002F6FEC();
    Class v9 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 setRightBarButtonItems:v9];

    id v10 = sub_1002F6D1C();
    [v10 setEnabled:(v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion] & 1) == 0];

    id v11 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
    id v12 = [v11 searchBar];

    [v12 setEnabled:1];
    id v13 = *(void **)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (v13)
    {
      id v14 = v13;
      sub_1002F5458(0);
    }
  }
}

id sub_1002FA030()
{
  id result = [self sharedService];
  if (result)
  {
    id v2 = result;
    [result captureUserAction:469 onTarget:140 eventValue:0];

    swift_beginAccess();
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result viewControllerShowAddItemsFromACToLibraryView:v0];
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s4Maps27LibraryPlacesViewControllerC010collectionD0_17didDeselectItemAtySo012UICollectionD0C_10Foundation9IndexPathVtF_0()
{
  id v1 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0);
  unsigned int v2 = [v1 isEditing];

  if (v2)
  {
    char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion);
    id v9 = sub_1002F6D1C();
    if ((v3 & 1) != 0
      || (id v4 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1002F76F0), v5 = [v4 indexPathsForSelectedItems], v4, !v5))
    {
      BOOL v8 = 0;
    }
    else
    {
      type metadata accessor for IndexPath();
      uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v7 = *(void *)(v6 + 16);
      swift_bridgeObjectRelease();
      BOOL v8 = v7 != 0;
    }
    [v9 setEnabled:v8];
  }
}

void sub_1002FA260()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion) = 0;
    sub_1002F9D70();
  }
}

id sub_1002FA2C0(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

objc_class *sub_1002FA324()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100100830(0, &qword_1015DA9F8);
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v5._uint64_t countAndFlagsBits = 0xD000000000000017;
    v19._uint64_t countAndFlagsBits = 0xD000000000000040;
    v19._object = (void *)0x8000000100F854F0;
    v5._object = (void *)0x8000000100F854D0;
    v6._uint64_t countAndFlagsBits = 0x7463656C6553;
    v6._object = (void *)0xE600000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)qword_101611820, v6, v19);
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [self systemImageNamed:v7];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v9 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 setAccessibilityIdentifier:v10];

    sub_100100830(0, (unint64_t *)&unk_1015DAA00);
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
    *(void *)(v11 + 32) = v9;
    UIMenuElementSize preferredElementSize = v11;
    specialized Array._endMutation()();
    v12._uint64_t countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v18.value.super.Class isa = 0;
    v18.is_nil = 0;
    v13.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v18, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
    id v14 = *(void **)(v4 + v1);
    *(UIMenu *)(v4 + v1) = v13;
    uint64_t v3 = v13.super.super.isa;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

UIMenu sub_1002FA5B8()
{
  id v1 = v0;
  UIMenuElementSize v2 = (UIMenuElementSize)sub_1002FD424((uint64_t)&off_1012D8118, (uint64_t)v1);

  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v10._uint64_t countAndFlagsBits = 0xD000000000000050;
  v10._object = (void *)0x8000000100F858E0;
  v3._object = (void *)0x8000000100F858C0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v4._uint64_t countAndFlagsBits = 2003134806;
  v4._object = (void *)0xE400000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v10);
  if ((unint64_t)v2 >> 62)
  {
    sub_100100830(0, &qword_1015DAA20);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100100830(0, &qword_1015DAA20);
    UIMenuElementSize preferredElementSize = v2;
  }
  swift_bridgeObjectRelease();
  sub_100100830(0, (unint64_t *)&unk_1015DAA00);
  v9.value.super.Class isa = 0;
  v9.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v5, (Swift::String_optional)0, v9, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v8);
}

UIMenu sub_1002FA774()
{
  sub_1000FF33C(&qword_1015D4148);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CFA0;
  *(_WORD *)(inited + 32) = 2;
  id v2 = [self sharedLocationManager];
  if (!v2) {
    __break(1u);
  }
  Swift::String v3 = v2;
  unsigned int v4 = [v2 isAuthorizedForPreciseLocation];

  if (v4)
  {
    Swift::String v5 = sub_1001D1000((void *)1, 3, 1, (void *)inited);
    v5[2] = 3;
    *((unsigned char *)v5 + 34) = 1;
  }
  id v6 = v0;
  uint64_t v7 = swift_bridgeObjectRetain();
  UIMenuElementSize v8 = (UIMenuElementSize)sub_1002FD510(v7, (uint64_t)v6);
  swift_bridgeObjectRelease_n();

  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v16._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v16._object = (void *)0x8000000100F85750;
  v9._object = (void *)0x8000000100F85730;
  v9._uint64_t countAndFlagsBits = 0xD000000000000018;
  v10._uint64_t countAndFlagsBits = 0x79622074726F53;
  v10._object = (void *)0xE700000000000000;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v16);
  if ((unint64_t)v8 >> 62)
  {
    sub_100100830(0, &qword_1015DAA20);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100100830(0, &qword_1015DAA20);
    UIMenuElementSize preferredElementSize = v8;
  }
  swift_bridgeObjectRelease();
  sub_100100830(0, (unint64_t *)&unk_1015DAA00);
  v15.value.super.Class isa = 0;
  v15.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v15, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v14);
}

UIMenu sub_1002FAAB4()
{
  sub_100100830(0, &qword_1015DA9F8);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v0._uint64_t countAndFlagsBits = 0xD000000000000018;
  v19._uint64_t countAndFlagsBits = 0xD000000000000023;
  v19._object = (void *)0x8000000100F85640;
  v0._object = (void *)0x8000000100F85620;
  v1._uint64_t countAndFlagsBits = 0x61206F7420646441;
  v1._object = (void *)0xEE00656469754720;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v19);
  NSString v2 = String._bridgeToObjectiveC()();
  Swift::String v3 = self;
  id v4 = [v3 systemImageNamed:v2];

  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v6 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setAccessibilityIdentifier:v7];

  v8._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v20._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v20._object = (void *)0x8000000100F856D0;
  v8._object = (void *)0x8000000100F85690;
  v9._object = (void *)0x8000000100F856B0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000013;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)qword_101611820, v9, v20);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v3 systemImageNamed:v10];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 setAccessibilityIdentifier:v13];

  sub_100100830(0, (unint64_t *)&unk_1015DAA00);
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100F5F0D0;
  *(void *)(v14 + 32) = v6;
  *(void *)(v14 + 40) = v12;
  UIMenuElementSize preferredElementSize = v14;
  specialized Array._endMutation()();
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v18.value.super.Class isa = 0;
  v18.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v18, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)2);
}

void sub_1002FAE74()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v1 = (void *)Strong;
    NSString v2 = *(void **)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v2)
    {
      id v3 = v2;
      sub_1002F525C();

      Swift::String v1 = v3;
    }
  }
}

void sub_1002FAEE8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v1 = (char *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion) = 1;
    _s4Maps27LibraryPlacesViewControllerC010collectionD0_17didDeselectItemAtySo012UICollectionD0C_10Foundation9IndexPathVtF_0();
    NSString v2 = *(void **)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (v2)
    {
      uint64_t v3 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v4 = v2;
      swift_retain();
      sub_1002F49D4(v1, (uint64_t)sub_1002FD8D8, v3);

      swift_release_n();
    }
    else
    {
    }
  }
}

void sub_1002FB060()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v1 = (void *)Strong;
    sub_1002F9A3C();
  }
}

void sub_1002FB0B4(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  char v5 = *a1;
  sub_1002FB2F0(*a1);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [self systemImageNamed:v6];

  uint64_t v8 = (v5 ^ ~*(unsigned char *)(a2
                                                         + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType)) & 1;
  sub_100100830(0, &qword_1015DA9F8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 24) = v5;
  uint64_t v14 = v10;
  id v11 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = sub_1002FB46C(*(unsigned char *)(a2 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType));
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAccessibilityIdentifier:v13];

  *a3 = v11;
}

uint64_t sub_1002FB2F0(char a1)
{
  if (a1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v1.super.Class isa = (Class)qword_101611820;
    unint64_t v2 = 0xD000000000000037;
    unint64_t v8 = 0x8000000100F85980;
    unint64_t v3 = 0x8000000100F85960;
    unint64_t v4 = 0xD000000000000015;
    uint64_t v5 = 1684632135;
  }
  else
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v1.super.Class isa = (Class)qword_101611820;
    unint64_t v2 = 0xD000000000000037;
    unint64_t v8 = 0x8000000100F859E0;
    unint64_t v3 = 0x8000000100F859C0;
    unint64_t v4 = 0xD000000000000015;
    uint64_t v5 = 1953720652;
  }
  unint64_t v6 = 0xE400000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v2)._countAndFlagsBits;
}

void sub_1002FB410(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1002F991C(a3 & 1);
  }
}

uint64_t sub_1002FB46C(char a1)
{
  if (!a1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v1.super.Class isa = (Class)qword_101611820;
    unint64_t v3 = 0xD000000000000030;
    unint64_t v8 = 0x8000000100F85880;
    unint64_t v4 = 0x8000000100F85860;
    unint64_t v2 = 0xD000000000000015;
    uint64_t v5 = 1701667150;
    goto LABEL_12;
  }
  if (a1 != 1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v1.super.Class isa = (Class)qword_101611820;
    unint64_t v3 = 0xD00000000000002FLL;
    unint64_t v8 = 0x8000000100F857D0;
    unint64_t v4 = 0x8000000100F857B0;
    unint64_t v2 = 0xD000000000000015;
    uint64_t v5 = 1702125892;
LABEL_12:
    unint64_t v6 = 0xE400000000000000;
    return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
  }
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v1.super.Class isa = (Class)qword_101611820;
  unint64_t v2 = 0xD000000000000019;
  unint64_t v3 = 0xD000000000000034;
  unint64_t v8 = 0x8000000100F85820;
  unint64_t v4 = 0x8000000100F85800;
  uint64_t v5 = 0x65636E6174736944;
  unint64_t v6 = 0xE800000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
}

void sub_1002FB630(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v5 = *a1;
  sub_1002FB46C(*a1);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [self systemImageNamed:v6];

  BOOL v8 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType) == v5;
  sub_100100830(0, &qword_1015DA9F8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 24) = v5;
  uint64_t v14 = v10;
  id v11 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = sub_1002FB46C(v5);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAccessibilityIdentifier:v13];

  *a3 = v11;
}

void sub_1002FB878(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v5 = (void *)Strong;
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType) != a3)
    {
      *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType) = a3;
      NSString v6 = *(unsigned char **)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
      if (v6)
      {
        v6[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_sortType] = a3;
        id v7 = v6;
        sub_1002FF614(a3);

        int v5 = v7;
      }
    }
  }
}

void sub_1002FB940()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_isKeyboardPresented) = 0;
  NSBundle v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish);
  unint64_t v2 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_10006C5D8((uint64_t)v2);
    uint64_t v4 = *v1;
    uint64_t *v1 = 0;
    v1[1] = 0;
    sub_10006C5D8(v4);
  }
}

void LibraryPlacesViewController.prepareForNoteEditorPresentation(completion:)(void (*a1)(void), uint64_t a2)
{
  if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v2))
  {
    id v5 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
    [v5 dismissViewControllerAnimated:1 completion:0];

    a1();
  }
  else
  {
    NSString v6 = &v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
    uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
    *(void *)NSString v6 = 0;
    *((void *)v6 + 1) = 0;
    sub_10006C5D8(v7);
    id v8 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v10 = (void *)swift_allocObject();
    _OWORD v10[2] = v9;
    v10[3] = a1;
    v10[4] = a2;
    v12[4] = sub_1002EC1EC;
    v12[5] = v10;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_10008C380;
    v12[3] = &unk_1012E3578;
    id v11 = _Block_copy(v12);
    swift_retain();
    swift_release();
    [v8 dismissViewControllerAnimated:1 completion:v11];
    _Block_release(v11);
  }
}

void sub_1002FBBC0(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v6 = Strong;
    id v7 = [Strong view];
    if (v7)
    {
      id v8 = v7;
      [v7 endEditing:1];

      if (v6[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_isKeyboardPresented])
      {
        uint64_t v9 = (void (**)(void))&v6[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
        uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
        void *v9 = a2;
        v9[1] = a3;
        sub_10006C5D8(v10);
        swift_retain();
      }
      else
      {
        a2();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

id LibraryPlacesViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager] = 0;
  v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType] = 2;
  v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType] = 0;
  v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer] = 0;
  uint64_t v8 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_countsManager;
  uint64_t v9 = qword_1015CBF98;
  uint64_t v10 = v4;
  if (v9 != -1) {
    swift_once();
  }
  id v11 = (void *)static LibraryItemsCountManager.shared;
  *(void *)&v4[v8] = static LibraryItemsCountManager.shared;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___dismissButtonIOS] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton] = 0;
  Swift::String v12 = &v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider];
  *Swift::String v12 = 0;
  v12[1] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView] = 0;
  NSString v13 = (Swift::String *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_placesTitle];
  uint64_t v14 = qword_1015CBD78;
  id v15 = v11;
  if (v14 != -1) {
    swift_once();
  }
  v23._uint64_t countAndFlagsBits = 0xD000000000000024;
  v23._object = (void *)0x8000000100F74390;
  v16._object = (void *)0x8000000100F74370;
  v16._uint64_t countAndFlagsBits = 0xD000000000000014;
  v17._uint64_t countAndFlagsBits = 0x736563616C50;
  v17._object = (void *)0xE600000000000000;
  *NSString v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)qword_101611820, v17, v23);
  v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_isKeyboardPresented] = 0;
  UIImage_optional v18 = &v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
  *UIImage_optional v18 = 0;
  v18[1] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionModeMenu] = 0;
  *(void *)&v10[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu] = 0;

  if (a2)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  v22.receiver = v10;
  v22.super_class = ObjectType;
  id v20 = [super initWithNibName:v19 bundle:a3];

  return v20;
}

id LibraryPlacesViewController.init(coder:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager] = 0;
  v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType] = 2;
  v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType] = 0;
  v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer] = 0;
  uint64_t v5 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_countsManager;
  uint64_t v6 = qword_1015CBF98;
  id v7 = v2;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)static LibraryItemsCountManager.shared;
  *(void *)&v2[v5] = static LibraryItemsCountManager.shared;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___dismissButtonIOS] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton] = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider];
  void *v9 = 0;
  v9[1] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___emptyStateView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_placesTitle;
  uint64_t v11 = qword_1015CBD78;
  id v12 = v8;
  if (v11 != -1) {
    swift_once();
  }
  v19._uint64_t countAndFlagsBits = 0xD000000000000024;
  v19._object = (void *)0x8000000100F74390;
  v13._object = (void *)0x8000000100F74370;
  v13._uint64_t countAndFlagsBits = 0xD000000000000014;
  v14._uint64_t countAndFlagsBits = 0x736563616C50;
  v14._object = (void *)0xE600000000000000;
  *(Swift::String *)&v7[v10] = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)qword_101611820, v14, v19);
  v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_isKeyboardPresented] = 0;
  id v15 = &v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
  *id v15 = 0;
  v15[1] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionModeMenu] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu] = 0;

  v18.receiver = v7;
  v18.super_class = ObjectType;
  [super initWithCoder:a1];

  return v16;
}

Swift::Void __swiftcall LibraryPlacesViewController.updateSearchResults(for:)(UISearchController a1)
{
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2);
  id v32 = (uint64_t *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  id v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v34 = (char *)&v31 - v7;
  uint64_t v31 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  id v12 = [(objc_class *)a1.super.super.super.isa searchBar];
  id v13 = [v12 text];

  if (v13)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v17 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer;
  if (*(void *)(v39 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
  }
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v39;
  swift_unknownObjectWeakInit();
  id v20 = (void *)swift_allocObject();
  v20[2] = v18;
  void v20[3] = v14;
  v20[4] = v16;
  aBlock[4] = sub_1002FD13C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E35C8;
  _Block_copy(aBlock);
  id v40 = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  swift_retain();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  uint64_t v21 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  swift_release();
  *(void *)(v19 + v17) = v21;
  swift_retain();
  swift_release();
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v22 = v31;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v31);
  Swift::String v23 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  id v24 = v33;
  static DispatchTime.now()();
  id v25 = v32;
  *id v32 = 200;
  uint64_t v27 = v35;
  uint64_t v26 = v36;
  (*(void (**)(void *, void, uint64_t))(v35 + 104))(v25, enum case for DispatchTimeInterval.milliseconds(_:), v36);
  id v28 = v34;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v27 + 8))(v25, v26);
  uint64_t v29 = v38;
  id v30 = *(void (**)(char *, uint64_t))(v37 + 8);
  v30(v24, v38);
  OS_dispatch_queue.asyncAfter(deadline:execute:)();
  swift_release();

  v30(v28, v29);
}

void sub_1002FC7BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = *(void **)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v7)
    {
      id v8 = v7;

      sub_1002FF428(a2, a3);
      uint64_t v6 = v8;
    }
  }
}

void LibraryPlacesViewController.collectionView(_:didSelectItemAt:)(void *a1, char **a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, "isEditing", v8))
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [a1 deselectItemAtIndexPath:isa animated:1];

    id v12 = *(void **)&v3[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (!v12) {
      return;
    }
    id v13 = v12;
    id v14 = sub_1002F3914();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    uint64_t v15 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    uint64_t v16 = a2;
    unint64_t v17 = IndexPath.section.getter();
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < v15[2])
    {
      int v18 = *((unsigned __int8 *)v15 + v17 + 32);
      swift_bridgeObjectRelease();
      v34[0] = v18;
      uint64_t v15 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
      uint64_t v16 = a2;
      unint64_t v19 = IndexPath.item.getter();
      if ((v19 & 0x8000000000000000) == 0)
      {
        if (v19 < v15[2])
        {
          sub_1000FF27C((uint64_t)&v15[5 * v19 + 4], (uint64_t)v33, &qword_1015D6F20);
          swift_bridgeObjectRelease();
          sub_100101314(v33, (uint64_t)v34);
          if (v18 != 2) {
            goto LABEL_22;
          }
          sub_1000FF4D4((uint64_t)v34, (uint64_t)v33);
          sub_1000FF33C(&qword_1015DA648);
          type metadata accessor for LibraryListSavedItemCellModel();
          if (!swift_dynamicCast()) {
            goto LABEL_22;
          }
          uint64_t v15 = v32;
          if (v32[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16])
          {

LABEL_22:
            sub_1000FF22C((uint64_t)v34);
            (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
            return;
          }
          id v20 = (char **)*(id *)&v32[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
          id v21 = [objc_allocWithZone((Class)SearchResult) initWithMapItem:v20];
          swift_beginAccess();
          uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            id v23 = [Strong mapSelectionManager];
            swift_unknownObjectRelease();
            [v23 injectAndSelectSearchResult:v21];
          }
          id v31 = v21;
          id v24 = self;
          id v25 = [v24 sharedService];
          if (v25)
          {
            uint64_t v26 = v25;
            a2 = v20;
            id v32 = (char *)[v20 _muid];
            dispatch thunk of CustomStringConvertible.description.getter();
            NSString v27 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v16 = &selRef_buttonWithDelegate_;
            [v26 captureUserAction:478 onTarget:140 eventValue:v27];

            id v28 = (char *)[v24 sharedService];
            if (v28)
            {
              uint64_t v3 = v28;
              if (qword_1015CBF98 == -1)
              {
LABEL_19:
                uint64_t v29 = *(char **)(static LibraryItemsCountManager.shared
                               + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
                if (v29) {
                  uint64_t v29 = *(char **)&v29[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
                }
                id v32 = v29;
                dispatch thunk of CustomStringConvertible.description.getter();
                NSString v30 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v3 v16[346] : 2007 : 0 : v30];

                id v13 = v30;
                goto LABEL_22;
              }
LABEL_28:
              swift_once();
              goto LABEL_19;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          return;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    __break(1u);
    goto LABEL_26;
  }

  _s4Maps27LibraryPlacesViewControllerC010collectionD0_17didDeselectItemAtySo012UICollectionD0C_10Foundation9IndexPathVtF_0();
}

uint64_t sub_1002FCFF0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FD028(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100105268;
  return sub_1002F94E4(a1);
}

uint64_t sub_1002FD0D4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FD10C()
{
  return sub_1002FD868((void (*)(void))&_swift_release);
}

uint64_t sub_1002FD124()
{
  return sub_1002FD868((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1002FD13C()
{
  sub_1002FC7BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for LibraryPlacesViewController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LibraryPlacesViewLayoutType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002FD238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPlacesViewLayoutType()
{
  return &type metadata for LibraryPlacesViewLayoutType;
}

unsigned char *storeEnumTagSinglePayload for LibraryPlacesViewSortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002FD33CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryPlacesViewSortType()
{
  return &type metadata for LibraryPlacesViewSortType;
}

unint64_t sub_1002FD378()
{
  unint64_t result = qword_1015DA9E8;
  if (!qword_1015DA9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA9E8);
  }
  return result;
}

unint64_t sub_1002FD3D0()
{
  unint64_t result = qword_1015DA9F0;
  if (!qword_1015DA9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA9F0);
  }
  return result;
}

void *sub_1002FD424(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    for (uint64_t i = (char *)(a1 + 32); ; ++i)
    {
      char v9 = *i;
      sub_1002FB0B4(&v9, a2, &v10);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v5) {
        return v11;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

void *sub_1002FD510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    id v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    double v8 = (char *)(a1 + 32);
    while (1)
    {
      char v9 = *v8++;
      char v10 = v9;
      sub_1002FB630(&v10, a2, &v11);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v5) {
        return v12;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

void sub_1002FD5F8(char *a1, void (**a2)(void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  _Block_copy(a2);
  if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(a1))
  {
    id v5 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
    [v5 dismissViewControllerAnimated:1 completion:0];

    a2[2](a2);
    swift_release();
  }
  else
  {
    unsigned int v6 = &a1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_noteEditorPrePresentationDidFinish];
    *(void *)unsigned int v6 = 0;
    *((void *)v6 + 1) = 0;
    sub_10006C5D8(v7);
    id v8 = sub_1002FA2C0(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1002F7500);
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v10 = (void *)swift_allocObject();
    _OWORD v10[2] = v9;
    v10[3] = sub_1002FD840;
    v10[4] = v4;
    v12[4] = sub_1002FD9FC;
    v12[5] = v10;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_10008C380;
    v12[3] = &unk_1012E37C0;
    uint64_t v11 = _Block_copy(v12);
    swift_retain();
    swift_release();
    [v8 dismissViewControllerAnimated:1 completion:v11];
    _Block_release(v11);
    swift_release();
  }
}

uint64_t sub_1002FD808()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FD840()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1002FD850()
{
  return sub_1002FD868((void (*)(void))&_swift_release);
}

uint64_t sub_1002FD868(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

void sub_1002FD8B8()
{
}

UIMenu sub_1002FD8C0()
{
  return sub_1002F723C();
}

void sub_1002FD8C8()
{
}

void sub_1002FD8D0()
{
}

void sub_1002FD8D8()
{
}

uint64_t sub_1002FD8E0()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1002FD918(uint64_t a1)
{
  sub_1002FB878(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_1002FD924(uint64_t a1)
{
  sub_1002FB410(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1002FD930(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10005056C;
  return sub_1002F94E4(a1);
}

uint64_t *LibraryItemsCountManager.shared.unsafeMutableAddressor()
{
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  return &static LibraryItemsCountManager.shared;
}

uint64_t sub_1002FDA50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1002FDC68()
{
  int IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  uint64_t result = v2 + v3;
  BOOL v5 = __OFADD__(v2, v3);
  if (IsEnabled_HikingiOS)
  {
    if (v5)
    {
      __break(1u);
      goto LABEL_12;
    }
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
    BOOL v7 = __OFADD__(result, v6);
    result += v6;
    if (!v7) {
      return result;
    }
    __break(1u);
  }
  if (v5) {
LABEL_12:
  }
    __break(1u);
  return result;
}

id sub_1002FDD38()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedItemsCount);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
  BOOL v5 = (objc_class *)type metadata accessor for LibraryItemsCount();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount] = v1;
  *(void *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedItemsCount] = v2;
  *(void *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount] = v3;
  *(void *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount] = v4;
  v8.receiver = v6;
  v8.super_class = v5;
  return [super init];
}

void LibraryItemsCount.init()()
{
}

id LibraryItemsCount.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryItemsCount();
  return [super dealloc];
}

id static LibraryItemsCountManager.shared.getter()
{
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static LibraryItemsCountManager.shared;

  return v0;
}

void sub_1002FDFD4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) & 1) == 0)
    {
      *(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) = 1;
      sub_100023BFC();
    }
  }
}

id LibraryItemsCountManager.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken];
  if (v2)
  {
    uint64_t v3 = self;
    swift_unknownObjectRetain();
    id v4 = [v3 defaultCenter];
    [v4 removeObserver:v2];
    swift_unknownObjectRelease();
  }
  type metadata accessor for MapsSyncStore();
  BOOL v5 = (void *)static MapsSyncStore.sharedStore.getter();
  id v6 = v1;
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for LibraryItemsCountManager();
  return [super dealloc];
}

id LibraryItemsCountManager.registerObserver(_:)(uint64_t a1)
{
  swift_getObjectType();

  return sub_1002FEC5C(a1, v1);
}

id LibraryItemsCountManager.unregisterObserver(_:)(uint64_t a1)
{
  swift_getObjectType();

  return sub_1002FEC78(a1, v1);
}

void sub_1002FE254(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  id v8 = a1;
  a4(a3, v8, ObjectType);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall LibraryItemsCountManager.setNeedsRefresh()()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) = 1;
    sub_100023BFC();
  }
}

uint64_t sub_1002FE368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  return _swift_task_switch(sub_1000363B0, 0, 0);
}

uint64_t sub_1002FE388()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void **)(v0 + 88);

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    BOOL v7 = (void *)swift_slowAlloc();
    *(_DWORD *)id v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error fetching anaytics Counts: %@", v6, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1002FE5A4()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 64);

  uint64_t v3 = *(void **)(v0 + 168);
  uint64_t v4 = *(void **)(v0 + 160);

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error fetching anaytics Counts: %@", v8, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1002FE7CC()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 64);

  uint64_t v3 = *(void **)(v0 + 208);
  uint64_t v4 = *(void **)(v0 + 160);

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error fetching anaytics Counts: %@", v8, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t LibraryItemsCountManager.storeSubscriptionTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryItemsCountManager.storeSubscriptionTypes.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_storeSubscriptionTypes);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*LibraryItemsCountManager.storeSubscriptionTypes.modify())()
{
  return j__swift_endAccess;
}

id sub_1002FEC5C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers) registerObserver:a1];
}

id sub_1002FEC78(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers) unregisterObserver:a1];
}

uint64_t sub_1002FEC94()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002FECCC()
{
}

uint64_t sub_1002FECD8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002FED10()
{
  return _swift_task_switch(sub_100010C6C, 0, 0);
}

uint64_t sub_1002FED2C()
{
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error Fetching Counts: %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

uint64_t sub_1002FEF2C()
{
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error Fetching Counts: %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

uint64_t sub_1002FF12C()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = (void *)v0[14];

  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error Fetching Counts: %@", v6, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9(0);
}

Swift::Int sub_1002FF340(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_100356218(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_100300F20(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1002FF3AC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100356D7C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10030169C(v6);
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1002FF428(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2[8])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  if (a2) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v9 = 0;
  }
  if (a2) {
    unint64_t v10 = a2;
  }
  else {
    unint64_t v10 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = 0;
    a2 = 0;
  }
  v2[6] = a1;
  v2[7] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v12 = *((unsigned char *)v2 + 40);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  *(unsigned char *)(v14 + 48) = v12;
  *(void *)(v14 + 56) = v2;
  *(void *)(v14 + 64) = v5;
  swift_retain();
  v2[8] = sub_100042AF4((uint64_t)v8, (uint64_t)&unk_1015DABD0, v14);
  return swift_release();
}

void sub_1002FF614(unsigned __int8 a1)
{
  uint64_t v3 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(v1 + 40) != a1)
  {
    *(unsigned char *)(v1 + 40) = a1;
    unint64_t v7 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1003050B4(a1, v7);
    swift_bridgeObjectRelease();
    *(void *)(v1 + 16) = v8;
    swift_bridgeObjectRelease();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = Strong;
      if (*(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) == 1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        unint64_t v11 = *(void *)(*(void *)(Strong
                                    + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                        + 16);
        if (v11 >> 62)
        {
          type metadata accessor for MapsSyncObject();
          swift_bridgeObjectRetain();
          uint64_t v17 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
          unint64_t v11 = v17;
        }
        else
        {
          uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          type metadata accessor for MapsSyncObject();
          if (swift_dynamicCastMetatype() || (uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
          {
LABEL_9:
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v16 = v12 + 32;
            while (swift_dynamicCastClass())
            {
              v16 += 8;
              if (!--v15) {
                goto LABEL_9;
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v11 = v12 | 1;
          }
        }
        uint64_t v13 = (unint64_t *)(v10 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems);
        swift_beginAccess();
        *uint64_t v13 = v11;
        swift_bridgeObjectRelease();
        sub_1002F4728();
        id v14 = sub_1002F3914();
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_1002FF8B8(char a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  sub_100028D98();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100F5CFA0;
  *(void *)(v4 + 32) = type metadata accessor for FavoriteItem();
  *(void *)(v4 + 40) = type metadata accessor for CollectionPlaceItem();
  *(void *)(v2 + 72) = v4;
  *(unsigned char *)(v2 + 40) = a1;
  type metadata accessor for MapsSyncStore();
  uint64_t v5 = (void *)static MapsSyncStore.sharedStore.getter();
  swift_retain();
  dispatch thunk of MapsSyncStore.subscribe(_:)();

  swift_release();
  uint64_t v6 = *(void *)(v2 + 48);
  unint64_t v7 = *(void *)(v2 + 56);
  swift_bridgeObjectRetain();
  sub_1002FF428(v6, v7);
  swift_bridgeObjectRelease();
  return v2;
}

Swift::Void __swiftcall LibraryPlacesDataProvider.storeDidChange(types:)(Swift::OpaquePointer types)
{
  uint64_t v2 = *(void *)(v1 + 48);
  unint64_t v3 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  sub_1002FF428(v2, v3);

  swift_bridgeObjectRelease();
}

uint64_t LibraryPlacesDataProvider.deinit()
{
  uint64_t v1 = v0;
  type metadata accessor for MapsSyncStore();
  uint64_t v2 = (void *)static MapsSyncStore.sharedStore.getter();
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  if (*(void *)(v1 + 64))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  swift_bridgeObjectRelease();
  sub_100123CE4(v1 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t LibraryPlacesDataProvider.__deallocating_deinit()
{
  LibraryPlacesDataProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1002FFAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = a7;
  *(unsigned char *)(v7 + 136) = a6;
  *(void *)(v7 + 48) = a4;
  uint64_t v11 = type metadata accessor for CancellationError();
  *(void *)(v7 + 72) = v11;
  *(void *)(v7 + 80) = *(void *)(v11 - 8);
  *(void *)(v7 + 88) = swift_task_alloc();
  id v14 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1015DABD8 + dword_1015DABD8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 96) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1002FFBFC;
  return v14(a4, a5, a6);
}

uint64_t sub_1002FFBFC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100300198;
  }
  else {
    uint64_t v4 = sub_1002FFD10;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002FFD10()
{
  id v21 = v0;
  uint64_t v1 = v0[14];
  static Task<>.checkCancellation()();
  v0[15] = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    v0[2] = v1;
    swift_errorRetain();
    sub_1000FF33C(&qword_1015D98E0);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
      if (qword_1015CBD30 != -1) {
        swift_once();
      }
      unint64_t v2 = v0[7];
      uint64_t v3 = type metadata accessor for Logger();
      sub_1000F2248(v3, (uint64_t)qword_101611748);
      swift_bridgeObjectRetain_n();
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v7 = v0[6];
        uint64_t v6 = v0[7];
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315138;
        if (v6) {
          uint64_t v9 = v7;
        }
        else {
          uint64_t v9 = 7104878;
        }
        if (v6) {
          unint64_t v10 = v2;
        }
        else {
          unint64_t v10 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        v0[4] = sub_1000F2280(v9, v10, &v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Query Processing was cancelled for searchTerm: %s", v8, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_20;
      }
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      if (qword_1015CBD30 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_1000F2248(v13, (uint64_t)qword_101611748);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v4, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        unint64_t v19 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 138412290;
        swift_errorRetain();
        uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
        v0[3] = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v19 = v16;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v4, v14, "LibraryPlacesDataProvider error fetching search results: %@", v15, 0xCu);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
LABEL_20:
        swift_slowDealloc();

        swift_errorRelease();
LABEL_24:
        swift_task_dealloc();
        uint64_t v17 = (uint64_t (*)(void))v0[1];
        return v17();
      }
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }

    goto LABEL_24;
  }
  swift_weakInit();
  type metadata accessor for MainActor();
  v0[16] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100300584, v12, v11);
}

uint64_t sub_100300198()
{
  uint64_t v18 = v0;
  v0[2] = v0[14];
  swift_errorRetain();
  sub_1000FF33C(&qword_1015D98E0);
  if (swift_dynamicCast())
  {
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    if (qword_1015CBD30 != -1) {
      swift_once();
    }
    unint64_t v1 = v0[7];
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000F2248(v2, (uint64_t)qword_101611748);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v6 = v0[6];
      uint64_t v5 = v0[7];
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      if (v5) {
        uint64_t v8 = v6;
      }
      else {
        uint64_t v8 = 7104878;
      }
      if (v5) {
        unint64_t v9 = v1;
      }
      else {
        unint64_t v9 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      v0[4] = sub_1000F2280(v8, v9, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Query Processing was cancelled for searchTerm: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_16;
    }
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_1015CBD30 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000F2248(v10, (uint64_t)qword_101611748);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      v0[3] = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v11, "LibraryPlacesDataProvider error fetching search results: %@", v12, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_16:
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_20;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }

LABEL_20:
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100300584()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 136);
  swift_release();
  sub_10030069C(v0 + 40, v3, v2, v4, v1);
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  return _swift_task_switch(sub_10030063C, 0, 0);
}

uint64_t sub_10030063C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10030069C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = *(void *)(result + 56);
    if (a3)
    {
      if (!v15
        || (*(void *)(result + 48) != a2 || v15 != a3) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        return swift_release();
      }
    }
    else if (v15)
    {
      return swift_release();
    }
    if (*(unsigned __int8 *)(v14 + 40) == a4)
    {
      *(void *)(v14 + 16) = a5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v17 = Strong;
        if (*(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode))
        {
LABEL_26:
          swift_release();
          return swift_unknownObjectRelease();
        }
        unint64_t v18 = *(void *)(*(void *)(Strong
                                    + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                        + 16);
        if (v18 >> 62)
        {
          type metadata accessor for MapsSyncObject();
          swift_bridgeObjectRetain();
          uint64_t v19 = _bridgeCocoaArray<A>(_:)();
        }
        else
        {
          swift_bridgeObjectRetain_n();
          uint64_t v28 = v18 & 0xFFFFFFFFFFFFFF8;
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          uint64_t v19 = v18;
          type metadata accessor for MapsSyncObject();
          if (!swift_dynamicCastMetatype())
          {
            uint64_t v27 = v18;
            uint64_t v21 = v28;
            uint64_t v22 = *(void *)(v28 + 16);
            if (v22)
            {
              uint64_t v26 = v17;
              uint64_t v23 = v28 + 32;
              while (swift_dynamicCastClass())
              {
                v23 += 8;
                if (!--v22)
                {
                  uint64_t v20 = v27;
                  swift_bridgeObjectRelease();
                  goto LABEL_24;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v20 = v21 | 1;
LABEL_24:
              uint64_t v17 = v26;
            }
            else
            {
              uint64_t v20 = v27;
              swift_bridgeObjectRelease();
            }
            goto LABEL_25;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = v19;
LABEL_25:
        id v24 = (uint64_t *)(v17 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems);
        swift_beginAccess();
        *id v24 = v20;
        swift_bridgeObjectRelease();
        sub_1002F4728();
        id v25 = sub_1002F3914();
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        goto LABEL_26;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1003009A8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1003009D8(a1, a2, a3, (void (*)(void))&type metadata accessor for CollectionPlaceItem);
}

uint64_t sub_1003009C0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1003009D8(a1, a2, a3, (void (*)(void))&type metadata accessor for FavoriteItem);
}

uint64_t sub_1003009D8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000FF33C(&qword_1015D98E0);
    uint64_t v6 = swift_allocError();
    *uint64_t v7 = a3;
    id v8 = a3;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  else
  {
    a4(0);
    **(void **)(*(void *)(v4 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

BOOL sub_100300AA8(id *a1, void **a2, uint64_t a3)
{
  id v4 = *a1;
  uint64_t v5 = *a2;
  id v6 = [*a1 latitude];
  id v7 = [v4 longitude];
  id v8 = [v5 latitude];
  id v9 = [v5 longitude];
  uint64_t v10 = v9;
  if (v6)
  {
    if (v7)
    {
      if (v8)
      {
        if (v9)
        {
          id v11 = v6;
          id v12 = v7;
          id v13 = v8;
          id v14 = v10;
          [v11 doubleValue];
          double v16 = v15;
          [v12 doubleValue];
          id v18 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v16 longitude:v17];
          [v18 distanceFromLocation:a3];
          double v20 = v19;

          [v13 doubleValue];
          double v22 = v21;
          [v14 doubleValue];
          id v24 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v22 longitude:v23];
          [v24 distanceFromLocation:a3];
          double v26 = v25;

          return v20 < v26;
        }
      }
      else
      {
      }
      return 1;
    }
    else
    {

      return 0;
    }
  }
  else
  {

    return 0;
  }
}

uint64_t LibraryPlacesDataProvider.storeSubscriptionTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LibraryPlacesDataProvider.storeSubscriptionTypes.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*LibraryPlacesDataProvider.storeSubscriptionTypes.modify())()
{
  return j__swift_endAccess;
}

uint64_t type metadata accessor for LibraryPlacesDataProvider()
{
  return self;
}

Swift::Int sub_100300F20(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_134;
    }
    if (v3) {
      return sub_100302604(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_142;
  }
  Swift::Int v94 = result;
  unint64_t v91 = a1;
  if (v3 < 2)
  {
    id v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      id v11 = (char *)_swiftEmptyArrayStorage;
LABEL_99:
      uint64_t v93 = v8;
      if (v12 >= 2)
      {
        uint64_t v85 = *v91;
        do
        {
          unint64_t v86 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_129;
          }
          if (!v85) {
            goto LABEL_141;
          }
          uint64_t v87 = *(void *)&v11[16 * v86 + 32];
          uint64_t v88 = *(void *)&v11[16 * v12 + 24];
          sub_100302B70((char *)(v85 + 24 * v87), (char *)(v85 + 24 * *(void *)&v11[16 * v12 + 16]), v85 + 24 * v88, __dst);
          if (v1) {
            break;
          }
          if (v88 < v87) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v11 = sub_10035503C((uint64_t)v11);
          }
          if (v86 >= *((void *)v11 + 2)) {
            goto LABEL_131;
          }
          uint64_t v89 = &v11[16 * v86 + 32];
          *(void *)uint64_t v89 = v87;
          *((void *)v89 + 1) = v88;
          unint64_t v90 = *((void *)v11 + 2);
          if (v12 > v90) {
            goto LABEL_132;
          }
          memmove(&v11[16 * v12 + 16], &v11[16 * v12 + 32], 16 * (v90 - v12));
          *((void *)v11 + 2) = v90 - 1;
          unint64_t v12 = v90 - 1;
        }
        while (v90 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      v93[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v93 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1000FF33C((uint64_t *)&unk_1015D6F30);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v93 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v92 = *a1 + 64;
  id v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v95 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    Swift::Int v96 = v13;
    if (v9 < v3)
    {
      sub_100180324();
      uint64_t v14 = StringProtocol.localizedStandardCompare<A>(_:)();
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v15 = v92 + 24 * v13;
        while ((v14 == -1) != (StringProtocol.localizedStandardCompare<A>(_:)() != -1))
        {
          v15 += 24;
          ++v9;
          Swift::Int v3 = v95;
          if (v95 == v9)
          {
            Swift::Int v9 = v95;
            goto LABEL_23;
          }
        }
        Swift::Int v3 = v95;
      }
LABEL_23:
      if (v14 == -1)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          uint64_t v16 = 24 * v9;
          uint64_t v17 = 24 * v13;
          Swift::Int v18 = v9;
          Swift::Int v19 = v13;
          do
          {
            if (v19 != --v18)
            {
              if (!v10) {
                goto LABEL_140;
              }
              uint64_t v20 = v10 + v17;
              uint64_t v21 = v10 + v16;
              long long v22 = *(_OWORD *)(v10 + v17);
              uint64_t v23 = *(void *)(v10 + v17 + 16);
              uint64_t v24 = *(void *)(v10 + v16 - 8);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)(v10 + v16 - 24);
              *(void *)(v20 + 16) = v24;
              *(_OWORD *)(v21 - 24) = v22;
              *(void *)(v21 - 8) = v23;
            }
            ++v19;
            v16 -= 24;
            v17 += 24;
          }
          while (v19 < v18);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_49;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_133;
    }
    if (v9 - v13 >= v94) {
      goto LABEL_49;
    }
    if (__OFADD__(v13, v94)) {
      goto LABEL_135;
    }
    Swift::Int v25 = v13 + v94 >= v3 ? v3 : v13 + v94;
    if (v25 < v13) {
      break;
    }
    if (v9 != v25)
    {
      sub_100180324();
      double v26 = (uint64_t *)(v10 + 24 * v9);
      do
      {
        uint64_t v27 = v26;
        do
        {
          if (StringProtocol.localizedStandardCompare<A>(_:)() != -1) {
            break;
          }
          if (!v10) {
            goto LABEL_138;
          }
          uint64_t v29 = *v27;
          uint64_t v28 = v27[1];
          uint64_t v30 = v27[2];
          *(_OWORD *)uint64_t v27 = *(_OWORD *)(v27 - 3);
          void v27[2] = *(v27 - 1);
          *(v27 - 2) = v28;
          *(v27 - 1) = v30;
          *(v27 - 3) = v29;
          v27 -= 3;
          ++v13;
        }
        while (v9 != v13);
        ++v9;
        v26 += 3;
        Swift::Int v13 = v96;
      }
      while (v9 != v25);
      Swift::Int v9 = v25;
    }
LABEL_49:
    if (v9 < v13) {
      goto LABEL_128;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_10035496C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v32 = *((void *)v11 + 2);
    unint64_t v31 = *((void *)v11 + 3);
    unint64_t v12 = v32 + 1;
    if (v32 >= v31 >> 1) {
      id v11 = sub_10035496C((char *)(v31 > 1), v32 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v33 = v11 + 32;
    id v34 = &v11[16 * v32 + 32];
    *(void *)id v34 = v13;
    *((void *)v34 + 1) = v9;
    if (v32)
    {
      Swift::Int v97 = v9;
      while (1)
      {
        unint64_t v35 = v12 - 1;
        if (v12 >= 4)
        {
          id v40 = &v33[16 * v12];
          uint64_t v41 = *((void *)v40 - 8);
          uint64_t v42 = *((void *)v40 - 7);
          BOOL v46 = __OFSUB__(v42, v41);
          uint64_t v43 = v42 - v41;
          if (v46) {
            goto LABEL_117;
          }
          uint64_t v45 = *((void *)v40 - 6);
          uint64_t v44 = *((void *)v40 - 5);
          BOOL v46 = __OFSUB__(v44, v45);
          uint64_t v38 = v44 - v45;
          char v39 = v46;
          if (v46) {
            goto LABEL_118;
          }
          unint64_t v47 = v12 - 2;
          uint64_t v48 = &v33[16 * v12 - 32];
          uint64_t v50 = *(void *)v48;
          uint64_t v49 = *((void *)v48 + 1);
          BOOL v46 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          if (v46) {
            goto LABEL_120;
          }
          BOOL v46 = __OFADD__(v38, v51);
          uint64_t v52 = v38 + v51;
          if (v46) {
            goto LABEL_123;
          }
          if (v52 >= v43)
          {
            NSString v70 = &v33[16 * v35];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            BOOL v46 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v46) {
              goto LABEL_127;
            }
            BOOL v63 = v38 < v73;
            goto LABEL_87;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v64 = *((void *)v11 + 4);
            uint64_t v65 = *((void *)v11 + 5);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
            goto LABEL_81;
          }
          uint64_t v37 = *((void *)v11 + 4);
          uint64_t v36 = *((void *)v11 + 5);
          BOOL v46 = __OFSUB__(v36, v37);
          uint64_t v38 = v36 - v37;
          char v39 = v46;
        }
        if (v39) {
          goto LABEL_119;
        }
        unint64_t v47 = v12 - 2;
        uint64_t v53 = &v33[16 * v12 - 32];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v56 = __OFSUB__(v54, v55);
        uint64_t v57 = v54 - v55;
        char v58 = v56;
        if (v56) {
          goto LABEL_122;
        }
        uint64_t v59 = &v33[16 * v35];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v46 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v46) {
          goto LABEL_125;
        }
        if (__OFADD__(v57, v62)) {
          goto LABEL_126;
        }
        if (v57 + v62 >= v38)
        {
          BOOL v63 = v38 < v62;
LABEL_87:
          if (v63) {
            unint64_t v35 = v47;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v58) {
          goto LABEL_121;
        }
        id v66 = &v33[16 * v35];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v46 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v46) {
          goto LABEL_124;
        }
        if (v69 < v57) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v74 = v35 - 1;
        if (v35 - 1 >= v12)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v10) {
          goto LABEL_139;
        }
        unint64_t v75 = v11;
        uint64_t v76 = v10;
        uint64_t v77 = &v33[16 * v74];
        uint64_t v78 = *(void *)v77;
        unint64_t v79 = v33;
        unint64_t v80 = v35;
        uint64_t v81 = &v33[16 * v35];
        uint64_t v82 = *((void *)v81 + 1);
        uint64_t v83 = v76;
        sub_100302B70((char *)(v76 + 24 * *(void *)v77), (char *)(v76 + 24 * *(void *)v81), v76 + 24 * v82, __dst);
        if (v1) {
          goto LABEL_110;
        }
        if (v82 < v78) {
          goto LABEL_114;
        }
        if (v80 > *((void *)v75 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v77 = v78;
        *(void *)&v79[16 * v74 + 8] = v82;
        unint64_t v84 = *((void *)v75 + 2);
        if (v80 >= v84) {
          goto LABEL_116;
        }
        id v11 = v75;
        unint64_t v12 = v84 - 1;
        memmove(v81, v81 + 16, 16 * (v84 - 1 - v80));
        id v33 = v79;
        *((void *)v75 + 2) = v84 - 1;
        uint64_t v10 = v83;
        Swift::Int v9 = v97;
        if (v84 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v95;
    if (v9 >= v95)
    {
      id v8 = v93;
      goto LABEL_99;
    }
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10030169C(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v201 = (char *)&v179 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v202 = (char *)&v179 - v6;
  uint64_t v207 = sub_1000FF33C(&qword_1015DABC0);
  __chkstk_darwin(v207);
  id v8 = (char *)&v179 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v179 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v179 - v13;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v206 = (char *)&v179 - v19;
  __chkstk_darwin(v20);
  long long v205 = (char *)&v179 - v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v179 - v23;
  __chkstk_darwin(v25);
  id v192 = (char *)&v179 - v26;
  __chkstk_darwin(v27);
  id v191 = (char *)&v179 - v28;
  __chkstk_darwin(v29);
  uint64_t v183 = (uint64_t)&v179 - v30;
  __chkstk_darwin(v31);
  id v186 = (char *)&v179 - v32;
  __chkstk_darwin(v33);
  id v185 = (char *)&v179 - v34;
  unint64_t v188 = a1;
  Swift::Int v35 = a1[1];
  Swift::Int v36 = _minimumMergeRunLength(_:)(v35);
  if (v36 >= v35)
  {
    if (v35 < 0) {
      goto LABEL_152;
    }
    if (v35) {
      sub_100302710(0, v35, 1, v188);
    }
    return;
  }
  if (v35 >= 0) {
    uint64_t v37 = v35;
  }
  else {
    uint64_t v37 = v35 + 1;
  }
  if (v35 < -1) {
    goto LABEL_161;
  }
  Swift::Int v38 = v36;
  uint64_t v187 = v14;
  unint64_t v199 = v17;
  id v189 = v24;
  if (v35 < 2)
  {
    uint64_t v41 = (char *)_swiftEmptyArrayStorage;
    uint64_t v212 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v197 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v35 != 1)
    {
      unint64_t v44 = _swiftEmptyArrayStorage[2];
LABEL_117:
      uint64_t v165 = v198;
      if (v44 >= 2)
      {
        uint64_t v166 = *v188;
        do
        {
          unint64_t v167 = v44 - 2;
          if (v44 < 2) {
            goto LABEL_147;
          }
          if (!v166) {
            goto LABEL_159;
          }
          unint64_t v168 = v44 - 1;
          uint64_t v169 = (uint64_t)v41;
          uint64_t v170 = *(void *)&v41[16 * v167 + 32];
          uint64_t v171 = *(void *)&v41[16 * v44 + 24];
          sub_100302E98((void **)(v166 + 8 * v170), (void **)(v166 + 8 * *(void *)&v41[16 * v44 + 16]), (void **)(v166 + 8 * v171), v197);
          if (v165) {
            break;
          }
          if (v171 < v170) {
            goto LABEL_148;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v172 = (char *)v169;
          }
          else {
            uint64_t v172 = sub_10035503C(v169);
          }
          if (v167 >= *((void *)v172 + 2)) {
            goto LABEL_149;
          }
          uint64_t v173 = v172 + 32;
          unsigned int v174 = &v172[16 * v167 + 32];
          *(void *)unsigned int v174 = v170;
          *((void *)v174 + 1) = v171;
          unint64_t v175 = *((void *)v172 + 2);
          if (v44 > v175) {
            goto LABEL_150;
          }
          unsigned int v176 = &v173[16 * v44];
          size_t v177 = 16 * (v175 - v44);
          id v178 = v172;
          memmove(&v173[16 * v168], v176, v177);
          uint64_t v41 = v178;
          *((void *)v178 + 2) = v175 - 1;
          unint64_t v44 = v175 - 1;
        }
        while (v175 > 2);
      }
LABEL_130:
      swift_bridgeObjectRelease();
      *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v39 = v37 >> 1;
    sub_1000FF33C(&qword_1015D6918);
    uint64_t v40 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) = v39;
    uint64_t v197 = (void **)((v40 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v212 = v40;
  }
  Swift::Int v182 = v38;
  Swift::Int v42 = 0;
  uint64_t v43 = *v188;
  uint64_t v208 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v200 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  BOOL v203 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v181 = v43 + 16;
  uint64_t v180 = v43 - 8;
  uint64_t v41 = (char *)_swiftEmptyArrayStorage;
  id v196 = v11;
  uint64_t v211 = v2;
  Swift::Int v193 = v35;
  uint64_t v209 = v43;
LABEL_15:
  Swift::Int v45 = v42;
  Swift::Int v46 = v42 + 1;
  Swift::Int v194 = v45;
  if (v46 < v35)
  {
    uint64_t v184 = v41;
    unint64_t v47 = *(void **)(v43 + 8 * v45);
    id v48 = *(id *)(v43 + 8 * v46);
    id v49 = v47;
    uint64_t v50 = (uint64_t)v185;
    dispatch thunk of MapsSyncObject.createTime.getter();
    uint64_t v51 = (uint64_t)v186;
    dispatch thunk of MapsSyncObject.createTime.getter();
    uint64_t v52 = (uint64_t)v187;
    uint64_t v53 = (uint64_t)&v187[*(int *)(v207 + 48)];
    sub_1002C16DC(v50, (uint64_t)v187);
    sub_1002C16DC(v51, v53);
    uint64_t v54 = *v208;
    unsigned int v55 = (*v208)(v52, 1, v2);
    id v190 = v54;
    if (v55 == 1)
    {
      sub_1001C0FAC(v53);
      LODWORD(v195) = 1;
    }
    else
    {
      uint64_t v56 = v52;
      uint64_t v57 = v183;
      sub_1001C100C(v56, v183);
      if (v54(v53, 1, v2) == 1)
      {
        (*v203)(v57, v2);
        if (v54(v53, 1, v2) != 1) {
          goto LABEL_160;
        }
        LODWORD(v195) = 0;
      }
      else
      {
        uint64_t v58 = v57;
        uint64_t v59 = *v200;
        uint64_t v60 = v202;
        (*v200)(v202, v58, v2);
        uint64_t v61 = v201;
        v59(v201, v53, v2);
        LODWORD(v195) = static Date.> infix(_:_:)();
        uint64_t v62 = *v203;
        (*v203)((uint64_t)v61, v2);
        BOOL v63 = v60;
        id v11 = v196;
        v62((uint64_t)v63, v2);
      }
    }
    Swift::Int v35 = v193;
    Swift::Int v45 = v194;
    sub_1001C0FAC((uint64_t)v187);

    Swift::Int v46 = v45 + 2;
    if (v45 + 2 < v35)
    {
      uint64_t v64 = (id *)(v181 + 8 * v45);
      uint64_t v65 = v190;
      while (1)
      {
        Swift::Int v210 = v46;
        id v66 = *(v64 - 1);
        id v67 = *v64;
        id v68 = v66;
        uint64_t v69 = (uint64_t)v191;
        id v204 = v67;
        dispatch thunk of MapsSyncObject.createTime.getter();
        uint64_t v70 = (uint64_t)v192;
        dispatch thunk of MapsSyncObject.createTime.getter();
        uint64_t v71 = (uint64_t)&v11[*(int *)(v207 + 48)];
        sub_1002C16DC(v69, (uint64_t)v11);
        sub_1002C16DC(v70, v71);
        if (v65((uint64_t)v11, 1, v2) == 1)
        {
          sub_1001C0FAC(v71);
          int v72 = 1;
        }
        else
        {
          uint64_t v73 = (uint64_t)v189;
          sub_1001C100C((uint64_t)v11, (uint64_t)v189);
          if (v65(v71, 1, v2) == 1)
          {
            (*v203)(v73, v2);
            if (v65(v71, 1, v2) != 1) {
              goto LABEL_160;
            }
            int v72 = 0;
          }
          else
          {
            unint64_t v74 = *v200;
            unint64_t v75 = v202;
            (*v200)(v202, v73, v2);
            uint64_t v76 = v201;
            v74(v201, v71, v2);
            int v72 = static Date.> infix(_:_:)();
            uint64_t v77 = *v203;
            (*v203)((uint64_t)v76, v2);
            v77((uint64_t)v75, v2);
            uint64_t v65 = v190;
            id v11 = v196;
          }
        }
        id v78 = v204;
        sub_1001C0FAC((uint64_t)v11);

        if ((v195 ^ v72)) {
          break;
        }
        Swift::Int v46 = v210 + 1;
        ++v64;
        if (v193 == v210 + 1)
        {
          Swift::Int v35 = v193;
          Swift::Int v46 = v193;
          goto LABEL_34;
        }
      }
      Swift::Int v35 = v193;
      Swift::Int v46 = v210;
LABEL_34:
      Swift::Int v45 = v194;
    }
    uint64_t v41 = v184;
    uint64_t v43 = v209;
    if (v195)
    {
      if (v46 < v45) {
        goto LABEL_153;
      }
      if (v45 < v46)
      {
        unint64_t v79 = (uint64_t *)(v180 + 8 * v46);
        Swift::Int v80 = v46;
        Swift::Int v81 = v45;
        uint64_t v82 = (uint64_t *)(v209 + 8 * v45);
        do
        {
          if (v81 != --v80)
          {
            if (!v43) {
              goto LABEL_158;
            }
            uint64_t v83 = *v82;
            *uint64_t v82 = *v79;
            *unint64_t v79 = v83;
          }
          ++v81;
          --v79;
          ++v82;
        }
        while (v81 < v80);
      }
    }
  }
  if (v46 >= v35) {
    goto LABEL_66;
  }
  if (__OFSUB__(v46, v45)) {
    goto LABEL_151;
  }
  if (v46 - v45 >= v182) {
    goto LABEL_66;
  }
  if (__OFADD__(v45, v182)) {
    goto LABEL_154;
  }
  if (v45 + v182 >= v35) {
    Swift::Int v84 = v35;
  }
  else {
    Swift::Int v84 = v45 + v182;
  }
  if (v84 >= v45)
  {
    if (v46 == v84) {
      goto LABEL_66;
    }
    uint64_t v184 = v41;
    uint64_t v85 = v180 + 8 * v46;
    id v190 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v84;
LABEL_55:
    uint64_t v87 = *(void **)(v43 + 8 * v46);
    Swift::Int v88 = v45;
    uint64_t v195 = v85;
    Swift::Int v210 = v46;
    while (1)
    {
      uint64_t v89 = *(void **)v85;
      id v90 = v87;
      id v91 = v89;
      uint64_t v92 = (uint64_t)v205;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v93 = (uint64_t)v206;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v94 = (uint64_t)&v8[*(int *)(v207 + 48)];
      sub_1002C16DC(v92, (uint64_t)v8);
      sub_1002C16DC(v93, v94);
      Swift::Int v95 = *v208;
      Swift::Int v96 = v8;
      uint64_t v97 = (uint64_t)v8;
      uint64_t v98 = v211;
      if ((*v208)((uint64_t)v96, 1, v211) == 1)
      {
        sub_1001C0FAC(v94);
        sub_1001C0FAC(v97);

        id v8 = (char *)v97;
      }
      else
      {
        id v204 = v91;
        uint64_t v99 = v97;
        uint64_t v100 = v97;
        uint64_t v101 = (uint64_t)v199;
        sub_1001C100C(v100, (uint64_t)v199);
        if (v95(v94, 1, v98) == 1)
        {
          (*v203)(v101, v98);
          if (v95(v94, 1, v98) != 1) {
            goto LABEL_160;
          }
          id v8 = (char *)v99;
          sub_1001C0FAC(v99);

LABEL_53:
          uint64_t v43 = v209;
          Swift::Int v86 = v210;
LABEL_54:
          Swift::Int v46 = v86 + 1;
          Swift::Int v45 = v194;
          uint64_t v85 = v195 + 8;
          if ((unsigned int (*)(uint64_t, uint64_t, uint64_t))v46 != v190) {
            goto LABEL_55;
          }
          Swift::Int v46 = (Swift::Int)v190;
          id v11 = v196;
          uint64_t v41 = v184;
          uint64_t v2 = v211;
LABEL_66:
          if (v46 < v45) {
            goto LABEL_146;
          }
          uint64_t v108 = v41;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          Swift::Int v210 = v46;
          if (isUniquelyReferenced_nonNull_native) {
            uint64_t v41 = v108;
          }
          else {
            uint64_t v41 = sub_10035496C(0, *((void *)v108 + 2) + 1, 1, v108);
          }
          unint64_t v111 = *((void *)v41 + 2);
          unint64_t v110 = *((void *)v41 + 3);
          unint64_t v44 = v111 + 1;
          uint64_t v43 = v209;
          if (v111 >= v110 >> 1)
          {
            uint64_t v164 = sub_10035496C((char *)(v110 > 1), v111 + 1, 1, v41);
            uint64_t v43 = v209;
            uint64_t v41 = v164;
          }
          *((void *)v41 + 2) = v44;
          uint64_t v112 = v41 + 32;
          uint64_t v113 = &v41[16 * v111 + 32];
          Swift::Int v114 = v210;
          *(void *)uint64_t v113 = v194;
          *((void *)v113 + 1) = v114;
          if (v111)
          {
LABEL_72:
            unint64_t v115 = v44 - 1;
            if (v44 >= 4)
            {
              uint64_t v120 = &v112[16 * v44];
              uint64_t v121 = *((void *)v120 - 8);
              uint64_t v122 = *((void *)v120 - 7);
              BOOL v126 = __OFSUB__(v122, v121);
              uint64_t v123 = v122 - v121;
              if (v126) {
                goto LABEL_135;
              }
              uint64_t v125 = *((void *)v120 - 6);
              uint64_t v124 = *((void *)v120 - 5);
              BOOL v126 = __OFSUB__(v124, v125);
              uint64_t v118 = v124 - v125;
              char v119 = v126;
              if (v126) {
                goto LABEL_136;
              }
              unint64_t v127 = v44 - 2;
              uint64_t v128 = &v112[16 * v44 - 32];
              uint64_t v130 = *(void *)v128;
              uint64_t v129 = *((void *)v128 + 1);
              BOOL v126 = __OFSUB__(v129, v130);
              uint64_t v131 = v129 - v130;
              if (v126) {
                goto LABEL_138;
              }
              BOOL v126 = __OFADD__(v118, v131);
              uint64_t v132 = v118 + v131;
              if (v126) {
                goto LABEL_141;
              }
              if (v132 >= v123)
              {
                uint64_t v150 = &v112[16 * v115];
                uint64_t v152 = *(void *)v150;
                uint64_t v151 = *((void *)v150 + 1);
                BOOL v126 = __OFSUB__(v151, v152);
                uint64_t v153 = v151 - v152;
                if (v126) {
                  goto LABEL_145;
                }
                BOOL v143 = v118 < v153;
              }
              else
              {
LABEL_85:
                if (v119) {
                  goto LABEL_137;
                }
                unint64_t v127 = v44 - 2;
                uint64_t v133 = &v112[16 * v44 - 32];
                uint64_t v135 = *(void *)v133;
                uint64_t v134 = *((void *)v133 + 1);
                BOOL v136 = __OFSUB__(v134, v135);
                uint64_t v137 = v134 - v135;
                char v138 = v136;
                if (v136) {
                  goto LABEL_140;
                }
                Swift::Int v139 = &v112[16 * v115];
                uint64_t v141 = *(void *)v139;
                uint64_t v140 = *((void *)v139 + 1);
                BOOL v126 = __OFSUB__(v140, v141);
                uint64_t v142 = v140 - v141;
                if (v126) {
                  goto LABEL_143;
                }
                if (__OFADD__(v137, v142)) {
                  goto LABEL_144;
                }
                if (v137 + v142 < v118) {
                  goto LABEL_97;
                }
                BOOL v143 = v118 < v142;
              }
              if (v143) {
                unint64_t v115 = v127;
              }
            }
            else
            {
              if (v44 == 3)
              {
                uint64_t v117 = *((void *)v41 + 4);
                uint64_t v116 = *((void *)v41 + 5);
                BOOL v126 = __OFSUB__(v116, v117);
                uint64_t v118 = v116 - v117;
                char v119 = v126;
                goto LABEL_85;
              }
              uint64_t v144 = *((void *)v41 + 4);
              uint64_t v145 = *((void *)v41 + 5);
              BOOL v126 = __OFSUB__(v145, v144);
              uint64_t v137 = v145 - v144;
              char v138 = v126;
LABEL_97:
              if (v138) {
                goto LABEL_139;
              }
              uint64_t v146 = &v112[16 * v115];
              uint64_t v148 = *(void *)v146;
              uint64_t v147 = *((void *)v146 + 1);
              BOOL v126 = __OFSUB__(v147, v148);
              uint64_t v149 = v147 - v148;
              if (v126) {
                goto LABEL_142;
              }
              if (v149 < v137) {
                goto LABEL_14;
              }
            }
            unint64_t v154 = v115 - 1;
            if (v115 - 1 >= v44)
            {
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              break;
            }
            if (!v43) {
              goto LABEL_157;
            }
            char v155 = v41;
            uint64_t v156 = &v112[16 * v154];
            id v157 = v112;
            uint64_t v158 = *(void *)v156;
            uint64_t v159 = v157;
            uint64_t v160 = &v157[16 * v115];
            uint64_t v161 = *((void *)v160 + 1);
            uint64_t v162 = v198;
            sub_100302E98((void **)(v43 + 8 * *(void *)v156), (void **)(v43 + 8 * *(void *)v160), (void **)(v43 + 8 * v161), v197);
            uint64_t v198 = v162;
            if (v162) {
              goto LABEL_130;
            }
            if (v161 < v158) {
              goto LABEL_132;
            }
            if (v115 > *((void *)v155 + 2)) {
              goto LABEL_133;
            }
            *(void *)uint64_t v156 = v158;
            *(void *)&v159[16 * v154 + 8] = v161;
            unint64_t v163 = *((void *)v155 + 2);
            if (v115 >= v163) {
              goto LABEL_134;
            }
            uint64_t v112 = v159;
            unint64_t v44 = v163 - 1;
            memmove(v160, v160 + 16, 16 * (v163 - 1 - v115));
            uint64_t v41 = v155;
            *((void *)v155 + 2) = v163 - 1;
            BOOL v143 = v163 > 2;
            id v11 = v196;
            uint64_t v2 = v211;
            uint64_t v43 = v209;
            if (!v143) {
              goto LABEL_14;
            }
            goto LABEL_72;
          }
          unint64_t v44 = 1;
LABEL_14:
          Swift::Int v35 = v193;
          Swift::Int v42 = v210;
          if (v210 >= v193) {
            goto LABEL_117;
          }
          goto LABEL_15;
        }
        char v102 = *v200;
        id v103 = v202;
        (*v200)(v202, v101, v211);
        uint64_t v104 = v201;
        v102(v201, v94, v211);
        char v105 = static Date.> infix(_:_:)();
        uint64_t v106 = *v203;
        (*v203)((uint64_t)v104, v211);
        v106((uint64_t)v103, v211);
        sub_1001C0FAC(v99);

        id v8 = (char *)v99;
        if ((v105 & 1) == 0) {
          goto LABEL_53;
        }
      }
      uint64_t v43 = v209;
      if (!v209) {
        goto LABEL_156;
      }
      BOOL v107 = *(void **)v85;
      uint64_t v87 = *(void **)(v85 + 8);
      *(void *)uint64_t v85 = v87;
      *(void *)(v85 + 8) = v107;
      v85 -= 8;
      ++v88;
      Swift::Int v86 = v210;
      if (v210 == v88) {
        goto LABEL_54;
      }
    }
  }
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
LABEL_161:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100302604(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v13 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    sub_100180324();
    uint64_t v7 = (uint64_t *)(v6 + 24 * v4);
LABEL_5:
    uint64_t v8 = v13;
    uint64_t v9 = v7;
    while (1)
    {
      Swift::Int result = StringProtocol.localizedStandardCompare<A>(_:)();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v7 += 3;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      uint64_t v12 = v9[2];
      *(_OWORD *)uint64_t v9 = *(_OWORD *)(v9 - 3);
      v9[2] = *(v9 - 1);
      *(v9 - 2) = v10;
      *(v9 - 1) = v12;
      *(v9 - 3) = v11;
      v9 -= 3;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_100302710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a1;
  uint64_t v61 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v50 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v49 = (char *)&v44 - v10;
  uint64_t v56 = sub_1000FF33C(&qword_1015DABC0);
  __chkstk_darwin(v56);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v13 - 8);
  uint64_t v52 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v58 = (char *)&v44 - v16;
  __chkstk_darwin(v17);
  uint64_t v57 = (char *)&v44 - v18;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *a4;
    unsigned int v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    id v48 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    uint64_t v51 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v59 = v19;
    uint64_t v20 = v19 + 8 * a3 - 8;
LABEL_5:
    uint64_t v21 = *(void **)(v59 + 8 * a3);
    uint64_t v22 = v46;
    uint64_t v47 = v20;
    uint64_t v23 = (uint64_t)v52;
    uint64_t v60 = a3;
    while (1)
    {
      uint64_t v24 = *(void **)v20;
      id v25 = v21;
      id v26 = v24;
      uint64_t v27 = (uint64_t)v57;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v28 = (uint64_t)v58;
      dispatch thunk of MapsSyncObject.createTime.getter();
      uint64_t v29 = (uint64_t)&v12[*(int *)(v56 + 48)];
      sub_1002C16DC(v27, (uint64_t)v12);
      sub_1002C16DC(v28, v29);
      uint64_t v30 = *v55;
      if ((*v55)(v12, 1, v61) == 1)
      {
        sub_1001C0FAC(v29);
        sub_1001C0FAC((uint64_t)v12);

        uint64_t v31 = v60;
      }
      else
      {
        id v53 = v25;
        id v54 = v26;
        sub_1001C100C((uint64_t)v12, v23);
        if (v30((char *)v29, 1, v61) == 1)
        {
          uint64_t v43 = v61;
          (*v51)(v23, v61);
          if (v30((char *)v29, 1, v43) != 1) {
            goto LABEL_16;
          }
          sub_1001C0FAC((uint64_t)v12);

          uint64_t v31 = v60;
LABEL_4:
          a3 = v31 + 1;
          uint64_t v20 = v47 + 8;
          if (a3 == v45) {
            return;
          }
          goto LABEL_5;
        }
        uint64_t v32 = v49;
        uint64_t v33 = *v48;
        uint64_t v34 = v61;
        (*v48)(v49, v23, v61);
        Swift::Int v35 = v12;
        uint64_t v36 = v34;
        uint64_t v37 = v50;
        v33(v50, v29, v36);
        char v38 = static Date.> infix(_:_:)();
        uint64_t v39 = *v51;
        uint64_t v40 = v37;
        uint64_t v41 = v36;
        uint64_t v12 = v35;
        uint64_t v23 = (uint64_t)v52;
        (*v51)((uint64_t)v40, v41);
        v39((uint64_t)v32, v41);
        sub_1001C0FAC((uint64_t)v12);

        uint64_t v31 = v60;
        if ((v38 & 1) == 0) {
          goto LABEL_4;
        }
      }
      if (!v59) {
        break;
      }
      Swift::Int v42 = *(void **)v20;
      uint64_t v21 = *(void **)(v20 + 8);
      *(void *)uint64_t v20 = v21;
      *(void *)(v20 + 8) = v42;
      v20 -= 8;
      if (v31 == ++v22) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_16:
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
}

uint64_t sub_100302B70(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  id v26 = __src;
  id v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v17 = &v4[24 * v11];
      uint64_t v24 = v17;
      id v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        sub_100180324();
        unint64_t v18 = a3 - 24;
        do
        {
          uint64_t v19 = (char *)(v18 + 24);
          if (StringProtocol.localizedStandardCompare<A>(_:)() == -1)
          {
            uint64_t v21 = v6 - 24;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              long long v22 = *(_OWORD *)v21;
              *(void *)(v18 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v18 = v22;
            }
            id v26 = v6 - 24;
            if (v21 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v24 = v17 - 24;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              long long v20 = *(_OWORD *)(v17 - 24);
              *(void *)(v18 + 16) = *((void *)v17 - 1);
              *(_OWORD *)unint64_t v18 = v20;
            }
            uint64_t v21 = v6;
            v17 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          v18 -= 24;
          uint64_t v6 = v21;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_100354D70((void **)&v26, &v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    uint64_t v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      sub_100180324();
      uint64_t v13 = v4;
      while (1)
      {
        if (StringProtocol.localizedStandardCompare<A>(_:)() == -1)
        {
          uint64_t v15 = v6 + 24;
          uint64_t v14 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v4 = v13 + 24;
          uint64_t v14 = v13;
          uint64_t v15 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 24;
          }
        }
        long long v16 = *(_OWORD *)v14;
        *((void *)v7 + 2) = *((void *)v14 + 2);
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        id v25 = v4;
        id v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100302E98(void **a1, void **a2, void **a3, void **a4)
{
  uint64_t v102 = type metadata accessor for Date();
  uint64_t v94 = *(id **)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v92 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v91 = (char *)&v87 - v10;
  uint64_t v11 = sub_1000FF33C(&qword_1015DABC0);
  __chkstk_darwin(v11);
  unint64_t v97 = (unint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v87 - v14);
  uint64_t v16 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v16 - 8);
  id v90 = (void (**)(char *, char *, uint64_t))((char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  Swift::Int v96 = (void (**)(uint64_t, uint64_t))((char *)&v87 - v19);
  __chkstk_darwin(v20);
  Swift::Int v95 = (char *)&v87 - v21;
  __chkstk_darwin(v22);
  uint64_t v93 = (char *)&v87 - v23;
  __chkstk_darwin(v24);
  uint64_t v99 = (char *)&v87 - v25;
  __chkstk_darwin(v26);
  uint64_t v27 = a4;
  uint64_t v98 = (char *)&v87 - v28;
  uint64_t v29 = (char *)a2 - (char *)a1;
  uint64_t v30 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v30 = (char *)a2 - (char *)a1;
  }
  uint64_t v31 = v30 >> 3;
  uint64_t v32 = a2;
  uint64_t v100 = a3;
  uint64_t v101 = v11;
  uint64_t v33 = (char *)a3 - (char *)a2;
  uint64_t v34 = v33 / 8;
  BOOL v107 = a1;
  uint64_t v106 = v27;
  uint64_t v104 = v27;
  if (v30 >> 3 < v33 / 8)
  {
    if (v29 < -7) {
      goto LABEL_56;
    }
    uint64_t v35 = (uint64_t)v93;
    if (v27 != a1 || &a1[v31] <= v27)
    {
      memmove(v27, a1, 8 * v31);
      uint64_t v27 = v104;
    }
    unint64_t v97 = (unint64_t)&v27[v31];
    unint64_t v105 = v97;
    if (v29 >= 8)
    {
      uint64_t v36 = v32;
      if (v32 < v100)
      {
        uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 6);
        uint64_t v89 = v15;
        id v90 = (void (**)(char *, char *, uint64_t))(v94 + 4);
        Swift::Int v96 = (void (**)(uint64_t, uint64_t))(v94 + 1);
        while (1)
        {
          id v103 = a1;
          uint64_t v104 = v27;
          char v38 = *v27;
          id v39 = *v36;
          id v40 = v38;
          uint64_t v41 = (uint64_t)v98;
          dispatch thunk of MapsSyncObject.createTime.getter();
          uint64_t v42 = (uint64_t)v99;
          dispatch thunk of MapsSyncObject.createTime.getter();
          uint64_t v43 = (uint64_t)v15 + *(int *)(v101 + 48);
          sub_1002C16DC(v41, (uint64_t)v15);
          sub_1002C16DC(v42, v43);
          uint64_t v44 = *v37;
          uint64_t v45 = v102;
          if ((*v37)((char *)v15, 1, v102) == 1)
          {
            sub_1001C0FAC(v43);
            sub_1001C0FAC((uint64_t)v15);

            uint64_t v46 = v103;
          }
          else
          {
            sub_1001C100C((uint64_t)v15, v35);
            if (v44((char *)v43, 1, v45) == 1)
            {
              (*v96)(v35, v45);
              if (v44((char *)v43, 1, v45) != 1) {
                goto LABEL_55;
              }
              sub_1001C0FAC((uint64_t)v15);

              uint64_t v46 = v103;
LABEL_22:
              id v54 = v104;
              if (v46 != v104) {
                *uint64_t v46 = *v104;
              }
              uint64_t v27 = v54 + 1;
              uint64_t v106 = v27;
              uint64_t v47 = v36;
              goto LABEL_25;
            }
            id v48 = v91;
            id v49 = *v90;
            (*v90)(v91, v93, v45);
            uint64_t v94 = v36;
            uint64_t v50 = v92;
            v49(v92, (char *)v43, v45);
            uint64_t v15 = v89;
            LODWORD(v95) = static Date.> infix(_:_:)();
            uint64_t v51 = *v96;
            uint64_t v52 = v50;
            uint64_t v36 = v94;
            (*v96)((uint64_t)v52, v45);
            id v53 = v48;
            uint64_t v35 = (uint64_t)v93;
            v51((uint64_t)v53, v45);
            sub_1001C0FAC((uint64_t)v15);

            uint64_t v46 = v103;
            if ((v95 & 1) == 0) {
              goto LABEL_22;
            }
          }
          uint64_t v47 = v36 + 1;
          if (v46 < v36 || v46 >= v47 || v46 != v36) {
            *uint64_t v46 = *v36;
          }
          uint64_t v27 = v104;
LABEL_25:
          a1 = v46 + 1;
          BOOL v107 = a1;
          if ((unint64_t)v27 < v97)
          {
            uint64_t v36 = v47;
            if (v47 < v100) {
              continue;
            }
          }
          break;
        }
      }
    }
LABEL_54:
    sub_100354E40((void **)&v107, (const void **)&v106, &v105);
    return 1;
  }
  if (v33 < -7) {
    goto LABEL_56;
  }
  unsigned int v55 = v32;
  if (v27 != v32 || &v32[v34] <= v27)
  {
    memmove(v27, v32, 8 * v34);
    uint64_t v27 = v104;
  }
  uint64_t v56 = &v27[v34];
  unint64_t v105 = (unint64_t)v56;
  BOOL v107 = v32;
  if (v33 < 8 || a1 >= v32) {
    goto LABEL_54;
  }
  uint64_t v57 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v94 + 6);
  Swift::Int v88 = (void (**)(char *, void *, uint64_t))(v94 + 4);
  uint64_t v93 = (char *)(v94 + 1);
  uint64_t v58 = v100 - 1;
  uint64_t v59 = v32;
  id v103 = a1;
  while (1)
  {
    uint64_t v100 = v56;
    uint64_t v61 = *--v56;
    uint64_t v60 = v61;
    uint64_t v62 = *--v59;
    BOOL v63 = v60;
    uint64_t v64 = v62;
    uint64_t v65 = (uint64_t)v95;
    uint64_t v99 = v63;
    dispatch thunk of MapsSyncObject.createTime.getter();
    uint64_t v66 = (uint64_t)v96;
    uint64_t v98 = v64;
    dispatch thunk of MapsSyncObject.createTime.getter();
    id v67 = v57;
    unint64_t v68 = v97;
    uint64_t v69 = v97 + *(int *)(v101 + 48);
    sub_1002C16DC(v65, v97);
    sub_1002C16DC(v66, v69);
    uint64_t v70 = *v67;
    uint64_t v71 = v102;
    if ((*v67)(v68, 1, v102) != 1) {
      break;
    }
    sub_1001C0FAC(v69);
    char v72 = 1;
    unint64_t v73 = (unint64_t)v103;
    uint64_t v74 = v68;
LABEL_44:
    uint64_t v57 = v67;
LABEL_45:
    uint64_t v83 = v58 + 1;
    sub_1001C0FAC(v74);

    if (v72)
    {
      Swift::Int v84 = v104;
      uint64_t v56 = v100;
      if (v83 != v55 || v58 >= v55) {
        *uint64_t v58 = *v59;
      }
      BOOL v107 = v59;
      if (v56 <= v84) {
        goto LABEL_54;
      }
    }
    else
    {
      unint64_t v105 = (unint64_t)v56;
      uint64_t v85 = v104;
      if (v83 < v100 || v58 >= v100 || v83 != v100) {
        *uint64_t v58 = *v56;
      }
      uint64_t v59 = v55;
      if (v56 <= v85) {
        goto LABEL_54;
      }
    }
    --v58;
    unsigned int v55 = v59;
    if ((unint64_t)v59 <= v73) {
      goto LABEL_54;
    }
  }
  uint64_t v75 = v68;
  uint64_t v76 = v90;
  sub_1001C100C(v75, (uint64_t)v90);
  if (v70(v69, 1, v71) != 1)
  {
    uint64_t v89 = v56;
    uint64_t v77 = *v88;
    uint64_t v94 = v55;
    id v78 = v91;
    v77(v91, v76, v71);
    unint64_t v79 = v92;
    v77(v92, (void *)v69, v71);
    uint64_t v56 = v89;
    char v72 = static Date.> infix(_:_:)();
    Swift::Int v80 = v79;
    Swift::Int v81 = *(void (**)(char *, uint64_t))v93;
    (*(void (**)(char *, uint64_t))v93)(v80, v71);
    uint64_t v82 = v78;
    unsigned int v55 = v94;
    v81(v82, v71);
    unint64_t v73 = (unint64_t)v103;
    uint64_t v74 = v97;
    goto LABEL_44;
  }
  (*(void (**)(void (**)(char *, char *, uint64_t), uint64_t))v93)(v76, v71);
  if (v70(v69, 1, v71) == 1)
  {
    uint64_t v57 = v67;
    char v72 = 0;
    unint64_t v73 = (unint64_t)v103;
    uint64_t v74 = v97;
    goto LABEL_45;
  }
LABEL_55:
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
LABEL_56:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100303750(void **a1, void **__src, unint64_t a3, void **__dst, void *a5)
{
  uint64_t v5 = __dst;
  uint64_t v6 = (char *)__src - (char *)a1;
  uint64_t v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v7 = (char *)__src - (char *)a1;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v10 = a3 - (void)__src;
  }
  uint64_t v11 = v10 >> 3;
  unint64_t v79 = __dst;
  Swift::Int v80 = a1;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7) {
      goto LABEL_62;
    }
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v37 = &v5[v11];
    id v78 = v37;
    Swift::Int v80 = __src;
    if (a1 >= __src || v9 < 8)
    {
LABEL_61:
      sub_100354E40((void **)&v80, (const void **)&v79, &v78);
      return 1;
    }
    char v38 = __src;
    id v39 = (void **)(a3 - 8);
    id v40 = v38;
    while (1)
    {
      uint64_t v76 = v37;
      uint64_t v77 = v38;
      uint64_t v41 = v37 - 1;
      uint64_t v42 = *(v40 - 1);
      unint64_t v73 = (char *)(v40 - 1);
      id v43 = *(v37 - 1);
      id v44 = v42;
      id v45 = [v43 latitude];
      id v46 = [v43 longitude];
      id v47 = [v44 latitude];
      id v48 = [v44 longitude];
      id v49 = v48;
      if (!v45) {
        goto LABEL_47;
      }
      if (!v46)
      {
        id v46 = v45;
LABEL_47:

        BOOL v63 = v39 + 1;
        uint64_t v37 = v76;
LABEL_48:
        id v78 = v41;
        if (v63 < v37 || v39 >= v37 || v63 != v37) {
          *id v39 = *v41;
        }
        id v40 = v77;
        uint64_t v37 = v41;
        goto LABEL_59;
      }
      if (!v47) {
        goto LABEL_54;
      }
      if (!v48) {
        break;
      }
      id v66 = v45;
      id v65 = v46;
      id v50 = v47;
      id v68 = v49;
      [v66 doubleValue];
      double v52 = v51;
      [v65 doubleValue];
      id v54 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v52 longitude:v53];
      [v54 distanceFromLocation:a5];
      double v56 = v55;

      [v50 doubleValue];
      double v58 = v57;
      [v68 doubleValue];
      id v60 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v58 longitude:v59];
      [v60 distanceFromLocation:a5];
      double v62 = v61;

      BOOL v63 = v39 + 1;
      uint64_t v37 = v76;
      if (v56 >= v62) {
        goto LABEL_48;
      }
LABEL_55:
      id v40 = (void **)v73;
      if (v63 != v77 || v39 >= v77) {
        *id v39 = *(void **)v73;
      }
      Swift::Int v80 = (void **)v73;
LABEL_59:
      if (v40 > a1)
      {
        --v39;
        char v38 = v40;
        if (v37 > v5) {
          continue;
        }
      }
      goto LABEL_61;
    }
    id v49 = v47;
LABEL_54:

    BOOL v63 = v39 + 1;
    uint64_t v37 = v76;
    goto LABEL_55;
  }
  if (v6 >= -7)
  {
    uint64_t v12 = __src;
    if (__dst != a1 || &a1[v8] <= __dst) {
      memmove(__dst, a1, 8 * v8);
    }
    uint64_t v74 = &v5[v8];
    id v78 = v74;
    if ((unint64_t)v12 < a3 && v6 >= 8)
    {
      uint64_t v13 = a1;
      while (1)
      {
        uint64_t v14 = *v5;
        id v15 = *v12;
        id v16 = v14;
        id v17 = [v15 latitude];
        id v18 = [v15 longitude];
        id v19 = [v16 latitude];
        id v20 = [v16 longitude];
        uint64_t v21 = v20;
        if (!v17) {
          goto LABEL_22;
        }
        if (!v18) {
          break;
        }
        if (!v19) {
          goto LABEL_25;
        }
        if (!v20)
        {
          uint64_t v21 = v19;
LABEL_25:

LABEL_26:
          uint64_t v35 = v12 + 1;
          if (v13 < v12 || v13 >= v35 || v13 != v12) {
            *uint64_t v13 = *v12;
          }
          goto LABEL_30;
        }
        id __srcb = v17;
        id v69 = v18;
        id v22 = v19;
        id v72 = v21;
        [__srcb doubleValue];
        double v24 = v23;
        [v69 doubleValue];
        id v26 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v24 longitude:v25];
        [v26 distanceFromLocation:a5];
        double v28 = v27;

        [v22 doubleValue];
        double v30 = v29;
        [v72 doubleValue];
        id v32 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v30 longitude:v31];
        [v32 distanceFromLocation:a5];
        double v34 = v33;

        if (v28 < v34) {
          goto LABEL_26;
        }
        if (v13 != v5) {
          goto LABEL_19;
        }
LABEL_20:
        unint64_t v79 = ++v5;
        uint64_t v35 = v12;
LABEL_30:
        ++v13;
        if (v5 < v74)
        {
          uint64_t v12 = v35;
          if ((unint64_t)v35 < a3) {
            continue;
          }
        }
        Swift::Int v80 = v13;
        goto LABEL_61;
      }
      id v18 = v17;
LABEL_22:

      if (v13 == v5) {
        goto LABEL_20;
      }
LABEL_19:
      *uint64_t v13 = *v5;
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_62:

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100303E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v38 = a3;
  if (a3 != a2)
  {
    uint64_t v37 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_7:
    uint64_t v7 = *(void **)(v37 + 8 * v38);
    uint64_t v8 = a1;
    uint64_t v32 = v5;
    while (1)
    {
      uint64_t v9 = *(void **)v5;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 latitude];
      id v6 = [v10 longitude];
      id v13 = [v11 latitude];
      id v14 = [v11 longitude];
      id v15 = v14;
      if (!v12) {
        goto LABEL_5;
      }
      if (!v6)
      {
        id v6 = v12;
LABEL_5:

LABEL_6:
        uint64_t v5 = v32 + 8;
        if (++v38 == a2) {
          return;
        }
        goto LABEL_7;
      }
      if (!v13) {
        goto LABEL_15;
      }
      if (!v14) {
        break;
      }
      id v36 = v12;
      id v34 = v6;
      id v35 = v13;
      id v16 = v15;
      [v36 doubleValue];
      double v18 = v17;
      [v34 doubleValue];
      id v20 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v18 longitude:v19];
      [v20 distanceFromLocation:a5];
      double v22 = v21;

      [v35 doubleValue];
      double v24 = v23;
      [v16 doubleValue];
      id v26 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v24 longitude:v25];
      [v26 distanceFromLocation:a5];
      double v28 = v27;

      if (v22 >= v28) {
        goto LABEL_6;
      }
LABEL_16:
      if (!v37)
      {
        __break(1u);
        return;
      }
      double v29 = *(void **)v5;
      uint64_t v7 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v7;
      *(void *)(v5 + 8) = v29;
      v5 -= 8;
      if (v38 == ++v8) {
        goto LABEL_6;
      }
    }
    id v15 = v13;
LABEL_15:

    goto LABEL_16;
  }
}

void sub_1003040D0(uint64_t *a1, void *a2)
{
  uint64_t v3 = v2;
  Swift::Int v5 = a1[1];
  id v156 = a2;
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_161;
    }
    if (v5)
    {
      id v11 = v156;
      sub_100303E04(0, v5, 1, a1, (uint64_t)v11);
    }
    else
    {
    }
    return;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_169;
  }
  Swift::Int v8 = v6;
  Swift::Int v153 = v5;
  BOOL v143 = a1;
  if (v5 < 2)
  {
    Swift::Int v12 = v5;
    id v13 = (char *)_swiftEmptyArrayStorage;
    uint64_t v170 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v12 != 1)
    {
      unint64_t v84 = _swiftEmptyArrayStorage[2];
LABEL_125:
      uint64_t v151 = (uint64_t)v13;
      if (v84 >= 2)
      {
        uint64_t v134 = *v143;
        uint64_t v163 = *v143;
        do
        {
          unint64_t v135 = v84 - 2;
          if (v84 < 2) {
            goto LABEL_155;
          }
          if (!v134) {
            goto LABEL_168;
          }
          uint64_t v136 = *(void *)(v151 + 32 + 16 * v135);
          uint64_t v137 = *(void *)(v151 + 32 + 16 * (v84 - 1) + 8);
          char v138 = (void **)(v134 + 8 * v136);
          __srcc = (void **)(v134 + 8 * *(void *)(v151 + 32 + 16 * (v84 - 1)));
          unint64_t v139 = v134 + 8 * v137;
          id v23 = v156;
          sub_100303750(v138, __srcc, v139, __dst, v23);
          if (v3) {
            goto LABEL_121;
          }

          if (v137 < v136) {
            goto LABEL_157;
          }
          uint64_t v140 = (char *)v151;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v140 = sub_10035503C(v151);
          }
          if (v135 >= *((void *)v140 + 2)) {
            goto LABEL_158;
          }
          uint64_t v141 = &v140[16 * v135 + 32];
          *(void *)uint64_t v141 = v136;
          *((void *)v141 + 1) = v137;
          unint64_t v142 = *((void *)v140 + 2);
          if (v84 > v142) {
            goto LABEL_159;
          }
          memmove(&v140[16 * v84 + 16], &v140[16 * v84 + 32], 16 * (v142 - v84));
          uint64_t v151 = (uint64_t)v140;
          *((void *)v140 + 2) = v142 - 1;
          unint64_t v84 = v142 - 1;
          uint64_t v134 = v163;
        }
        while (v142 > 2);
      }
      swift_bridgeObjectRelease();
      goto LABEL_137;
    }
  }
  else
  {
    uint64_t v9 = v7 >> 1;
    sub_1000FF33C(&qword_1015D6918);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    __dst = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v170 = v10;
  }
  Swift::Int v146 = v8;
  id v14 = 0;
  uint64_t v15 = *a1;
  uint64_t v144 = *a1 - 8;
  id v13 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v16 = v153;
  uint64_t v162 = *a1;
  while (1)
  {
    double v17 = v14;
    double v18 = v14 + 1;
    uint64_t v152 = v14;
    if ((uint64_t)(v14 + 1) >= v16)
    {
      Swift::Int v25 = (Swift::Int)(v14 + 1);
      Swift::Int v49 = v146;
      goto LABEL_45;
    }
    uint64_t v148 = v13;
    double v19 = *(void **)(v15 + 8 * (void)v18);
    id v20 = v14;
    unint64_t v168 = *(void **)(v15 + 8 * (void)v14);
    double v21 = v168;
    id v169 = v19;
    id v22 = v19;
    id v23 = v21;
    BOOL __src = sub_100300AA8(&v169, &v168, (uint64_t)v156);
    if (v3)
    {
      swift_bridgeObjectRelease();

LABEL_122:
LABEL_137:
      *(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();

      swift_bridgeObjectRelease();
      return;
    }

    Swift::Int v24 = (Swift::Int)(v20 + 2);
    Swift::Int v25 = (Swift::Int)(v20 + 2);
    id v13 = v148;
    if ((uint64_t)(v20 + 2) >= v153) {
      goto LABEL_35;
    }
    while (1)
    {
      while (1)
      {
        while (1)
        {
          id v26 = *(void **)(v15 + 8 * (void)v18);
          id v27 = *(id *)(v15 + 8 * v24);
          id v28 = v26;
          id v29 = [v27 latitude];
          id v30 = [v27 longitude];
          id v31 = [v28 latitude];
          id v32 = [v28 longitude];
          double v33 = v32;
          if (!v29) {
            goto LABEL_24;
          }
          if (v30) {
            break;
          }
          id v30 = v29;
LABEL_24:

          if (__src)
          {
            Swift::Int v25 = v24;
            uint64_t v15 = v162;
            goto LABEL_36;
          }
          Swift::Int v25 = v24 + 1;
          double v18 = (char *)v24;
          Swift::Int v24 = v25;
          uint64_t v15 = v162;
          if (v25 >= v153) {
            goto LABEL_43;
          }
        }
        if (!v31) {
          goto LABEL_28;
        }
        if (v32) {
          break;
        }
        double v33 = v31;
LABEL_28:

        if (!__src)
        {
          Swift::Int v25 = v24;
          uint64_t v3 = 0;
          Swift::Int v49 = v146;
          uint64_t v15 = v162;
          double v17 = v152;
          goto LABEL_45;
        }
        Swift::Int v25 = v24 + 1;
        double v18 = (char *)v24;
        Swift::Int v24 = v25;
        uint64_t v15 = v162;
        if (v25 >= v153) {
          goto LABEL_36;
        }
      }
      id v34 = v29;
      id v159 = v30;
      id v35 = v31;
      id v36 = v33;
      [v34 doubleValue];
      double v38 = v37;
      [v159 doubleValue];
      id v40 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v38 longitude:v39];
      [v40 distanceFromLocation:v156];
      double v42 = v41;

      [v35 doubleValue];
      double v44 = v43;
      [v36 doubleValue];
      id v46 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v44 longitude:v45];
      [v46 distanceFromLocation:v156];
      double v48 = v47;

      if (((__src ^ (v42 >= v48)) & 1) == 0) {
        break;
      }
      Swift::Int v25 = v24 + 1;
      double v18 = (char *)v24;
      Swift::Int v24 = v25;
      id v13 = v148;
      uint64_t v15 = v162;
      if (v25 >= v153) {
        goto LABEL_35;
      }
    }
    Swift::Int v25 = v24;
    id v13 = v148;
    uint64_t v15 = v162;
LABEL_35:
    if (!__src)
    {
LABEL_43:
      uint64_t v3 = 0;
      Swift::Int v49 = v146;
      double v17 = v152;
      goto LABEL_45;
    }
LABEL_36:
    double v17 = v152;
    if (v25 < (uint64_t)v152) {
      goto LABEL_164;
    }
    if ((uint64_t)v152 < v25)
    {
      uint64_t v3 = 0;
      id v50 = (uint64_t *)(v144 + 8 * v25);
      double v51 = (char *)v25;
      double v52 = v152;
      double v53 = (uint64_t *)(v15 + 8 * (void)v152);
      Swift::Int v49 = v146;
      while (1)
      {
        if (v52 != --v51)
        {
          if (!v15) {
            goto LABEL_167;
          }
          uint64_t v54 = *v53;
          *double v53 = *v50;
          *id v50 = v54;
        }
        ++v52;
        --v50;
        ++v53;
        if ((uint64_t)v52 >= (uint64_t)v51) {
          goto LABEL_45;
        }
      }
    }
    uint64_t v3 = 0;
    Swift::Int v49 = v146;
LABEL_45:
    if (v25 >= v153) {
      goto LABEL_70;
    }
    if (__OFSUB__(v25, v17)) {
      goto LABEL_160;
    }
    if (v25 - (uint64_t)v17 >= v49) {
      goto LABEL_70;
    }
    if (__OFADD__(v17, v49)) {
      goto LABEL_162;
    }
    double v55 = (char *)v153;
    if ((uint64_t)&v17[v49] < v153) {
      double v55 = &v17[v49];
    }
    if ((uint64_t)v55 < (uint64_t)v17) {
      break;
    }
    if ((char *)v25 == v55) {
      goto LABEL_70;
    }
    uint64_t v147 = v55;
    uint64_t v149 = v13;
    uint64_t v145 = v3;
    uint64_t v56 = v144 + 8 * v25;
    while (2)
    {
      double v58 = *(void **)(v15 + 8 * v25);
      uint64_t v155 = v56;
      while (2)
      {
        __srca = v17;
        uint64_t v59 = v15;
        id v60 = *(void **)v56;
        id v61 = v58;
        id v62 = v60;
        id v63 = [v61 latitude];
        id v57 = [v61 longitude];
        id v64 = [v62 latitude];
        id v65 = [v62 longitude];
        id v66 = v65;
        if (v63)
        {
          if (!v57)
          {
            id v57 = v63;
            break;
          }
          if (v64)
          {
            if (v65)
            {
              id v160 = v63;
              id v67 = v57;
              id v68 = v64;
              id v157 = v66;
              [v160 doubleValue];
              double v70 = v69;
              [v67 doubleValue];
              id v72 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v70 longitude:v71];
              [v72 distanceFromLocation:v156];
              double v74 = v73;

              [v68 doubleValue];
              double v76 = v75;
              [v157 doubleValue];
              id v78 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v76 longitude:v77];
              [v78 distanceFromLocation:v156];
              double v80 = v79;

              uint64_t v15 = v162;
              if (v74 >= v80) {
                goto LABEL_56;
              }
LABEL_66:
              if (!v15) {
                goto LABEL_165;
              }
              Swift::Int v81 = *(void **)v56;
              double v58 = *(void **)(v56 + 8);
              *(void *)uint64_t v56 = v58;
              *(void *)(v56 + 8) = v81;
              v56 -= 8;
              double v17 = __srca + 1;
              if ((char *)v25 == __srca + 1) {
                goto LABEL_56;
              }
              continue;
            }
            id v66 = v64;
          }

          uint64_t v15 = v59;
          goto LABEL_66;
        }
        break;
      }

      uint64_t v15 = v59;
LABEL_56:
      ++v25;
      uint64_t v56 = v155 + 8;
      double v17 = v152;
      if ((char *)v25 != v147) {
        continue;
      }
      break;
    }
    Swift::Int v25 = (Swift::Int)v147;
    uint64_t v3 = v145;
    id v13 = v149;
LABEL_70:
    if (v25 < (uint64_t)v17) {
      goto LABEL_156;
    }
    Swift::Int v150 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v13 = sub_10035496C(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v83 = *((void *)v13 + 2);
    unint64_t v82 = *((void *)v13 + 3);
    unint64_t v84 = v83 + 1;
    if (v83 >= v82 >> 1) {
      id v13 = sub_10035496C((char *)(v82 > 1), v83 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v84;
    uint64_t v85 = v13 + 32;
    Swift::Int v86 = &v13[16 * v83 + 32];
    *(void *)Swift::Int v86 = v152;
    *((void *)v86 + 1) = v25;
    if (v83)
    {
      id __srcb = v13 + 32;
      while (1)
      {
        unint64_t v87 = v84 - 1;
        if (v84 >= 4)
        {
          uint64_t v92 = &v85[16 * v84];
          uint64_t v93 = *((void *)v92 - 8);
          uint64_t v94 = *((void *)v92 - 7);
          BOOL v98 = __OFSUB__(v94, v93);
          uint64_t v95 = v94 - v93;
          if (v98) {
            goto LABEL_144;
          }
          uint64_t v97 = *((void *)v92 - 6);
          uint64_t v96 = *((void *)v92 - 5);
          BOOL v98 = __OFSUB__(v96, v97);
          uint64_t v90 = v96 - v97;
          char v91 = v98;
          if (v98) {
            goto LABEL_145;
          }
          unint64_t v99 = v84 - 2;
          uint64_t v100 = &v85[16 * v84 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v98 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v98) {
            goto LABEL_147;
          }
          BOOL v98 = __OFADD__(v90, v103);
          uint64_t v104 = v90 + v103;
          if (v98) {
            goto LABEL_150;
          }
          if (v104 >= v95)
          {
            uint64_t v122 = &v85[16 * v87];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v98 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v98) {
              goto LABEL_154;
            }
            BOOL v115 = v90 < v125;
            goto LABEL_108;
          }
        }
        else
        {
          if (v84 != 3)
          {
            uint64_t v116 = *((void *)v13 + 4);
            uint64_t v117 = *((void *)v13 + 5);
            BOOL v98 = __OFSUB__(v117, v116);
            uint64_t v109 = v117 - v116;
            char v110 = v98;
            goto LABEL_102;
          }
          uint64_t v89 = *((void *)v13 + 4);
          uint64_t v88 = *((void *)v13 + 5);
          BOOL v98 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          char v91 = v98;
        }
        if (v91) {
          goto LABEL_146;
        }
        unint64_t v99 = v84 - 2;
        unint64_t v105 = &v85[16 * v84 - 32];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v108 = __OFSUB__(v106, v107);
        uint64_t v109 = v106 - v107;
        char v110 = v108;
        if (v108) {
          goto LABEL_149;
        }
        unint64_t v111 = &v85[16 * v87];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v98 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v98) {
          goto LABEL_152;
        }
        if (__OFADD__(v109, v114)) {
          goto LABEL_153;
        }
        if (v109 + v114 >= v90)
        {
          BOOL v115 = v90 < v114;
LABEL_108:
          if (v115) {
            unint64_t v87 = v99;
          }
          goto LABEL_110;
        }
LABEL_102:
        if (v110) {
          goto LABEL_148;
        }
        uint64_t v118 = &v85[16 * v87];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v98 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v98) {
          goto LABEL_151;
        }
        if (v121 < v109) {
          goto LABEL_119;
        }
LABEL_110:
        unint64_t v126 = v87 - 1;
        if (v87 - 1 >= v84)
        {
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (!v162) {
          goto LABEL_166;
        }
        unint64_t v127 = v13;
        uint64_t v128 = &v85[16 * v126];
        uint64_t v129 = *(void *)v128;
        unint64_t v130 = v87;
        uint64_t v131 = &v85[16 * v87];
        uint64_t v132 = *((void *)v131 + 1);
        uint64_t v158 = (void **)(v162 + 8 * *(void *)v131);
        uint64_t v161 = (void **)(v162 + 8 * *(void *)v128);
        id v23 = v156;
        sub_100303750(v161, v158, v162 + 8 * v132, __dst, v23);
        if (v3)
        {
LABEL_121:
          swift_bridgeObjectRelease();
          goto LABEL_122;
        }

        if (v132 < v129) {
          goto LABEL_141;
        }
        if (v130 > *((void *)v127 + 2)) {
          goto LABEL_142;
        }
        id v13 = v127;
        *(void *)uint64_t v128 = v129;
        *(void *)&__srcb[16 * v126 + 8] = v132;
        unint64_t v133 = *((void *)v127 + 2);
        if (v130 >= v133) {
          goto LABEL_143;
        }
        unint64_t v84 = v133 - 1;
        memmove(v131, v131 + 16, 16 * (v133 - 1 - v130));
        uint64_t v15 = v162;
        uint64_t v85 = __srcb;
        *((void *)v127 + 2) = v133 - 1;
        if (v133 <= 2) {
          goto LABEL_119;
        }
      }
    }
    unint64_t v84 = 1;
LABEL_119:
    Swift::Int v16 = v153;
    id v14 = (char *)v150;
    if (v150 >= v153) {
      goto LABEL_125;
    }
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:

  __break(1u);
LABEL_166:

  __break(1u);
LABEL_167:

  __break(1u);
LABEL_168:

  __break(1u);
LABEL_169:

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100304D54(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v3 = sub_100356D7C(v3);
    *a1 = v3;
  }
  uint64_t v6 = *(void *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  id v7 = v4;
  sub_1003040D0(v8, v7);

  specialized ContiguousArray._endMutation()();
}

uint64_t sub_100304DF4(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    id v28 = _swiftEmptyArrayStorage;
    sub_10025B09C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    unint64_t v27 = v1 & 0xC000000000000001;
    Swift::Int v5 = v28;
    unint64_t v6 = v1;
    do
    {
      if (v27) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v1 + 8 * v4 + 32);
      }
      Swift::Int v8 = v7;
      swift_getObjectType();
      id v9 = v8;
      id v10 = [v9 customName];
      if (v10 || (id v10 = [v9 mapItemName]) != 0)
      {
        id v11 = v10;
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v14 = v13;
      }
      else
      {
        double v18 = (void *)LibraryPlaceItemCompatible.createMapItemFromStorage()();
        if (v18
          && (double v19 = v18, v20 = [v18 name], v19, v20))
        {
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v14 = v21;
        }
        else
        {

          uint64_t v12 = 0;
          unint64_t v14 = 0xE000000000000000;
        }
      }
      id v28 = v5;
      unint64_t v16 = v5[2];
      unint64_t v15 = v5[3];
      if (v16 >= v15 >> 1)
      {
        sub_10025B09C(v15 > 1, v16 + 1, 1);
        Swift::Int v5 = v28;
      }
      ++v4;
      uint64_t v5[2] = v16 + 1;
      double v17 = &v5[3 * v16];
      v17[4] = v9;
      _OWORD v17[5] = v12;
      v17[6] = v14;
      unint64_t v1 = v6;
    }
    while (v2 != v4);
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    Swift::Int v5 = _swiftEmptyArrayStorage;
  }
  id v28 = v5;
  swift_bridgeObjectRetain();
  sub_1002FF340(&v28);
  swift_bridgeObjectRelease();
  id v22 = v28;
  uint64_t v23 = v28[2];
  if (v23)
  {
    id v28 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v24 = 4;
    do
    {
      id v25 = (id)v22[v24];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v24 += 3;
      --v23;
    }
    while (v23);
    uint64_t v3 = v28;
  }
  swift_release();
  return (uint64_t)v3;
}

uint64_t sub_1003050B4(char a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a1)
  {
    if (a1 != 1)
    {
      if ((a2 & 0x8000000000000000) != 0 || (a2 & 0x4000000000000000) != 0)
      {
        unint64_t v15 = swift_bridgeObjectRetain();
        uint64_t v12 = (uint64_t)sub_10034EE6C(v15);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
      uint64_t v18 = v12;
      sub_1002FF3AC(&v18);
      return v18;
    }
    id v3 = [self sharedLocationManager];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 lastLocation];

      if (v5)
      {
        [v5 coordinate];
        if (v7 >= -180.0 && v7 <= 180.0 && v6 >= -90.0 && v6 <= 90.0)
        {
          if ((v2 & 0x8000000000000000) != 0 || (v2 & 0x4000000000000000) != 0)
          {
            id v16 = v5;
            unint64_t v17 = swift_bridgeObjectRetain();
            uint64_t v13 = (uint64_t)sub_10034EE6C(v17);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8;
            id v14 = v5;
            swift_bridgeObjectRetain();
          }
          uint64_t v18 = v13;
          sub_100304D54(&v18, v5);

          return v18;
        }
      }
      swift_bridgeObjectRetain();
      return v2;
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    return sub_100304DF4(a2);
  }
  return result;
}

uint64_t sub_10030528C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003052D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 48);
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_10005056C;
  return sub_1002FFAD4(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1003053B0(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 472) = a3;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = a2;
  return _swift_task_switch(sub_1003053D4, 0, 0);
}

uint64_t sub_1003053D4()
{
  static Task<>.checkCancellation()();
  v0[36] = 0;
  uint64_t v1 = v0[35];
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithKey:v4 ascending:0];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  v0[37] = v2;
  type metadata accessor for CollectionPlaceItemRequest();
  uint64_t v6 = (void *)CollectionPlaceItemRequest.__allocating_init()();
  v0[38] = v6;
  type metadata accessor for FavoriteItemRequest();
  v0[39] = FavoriteItemRequest.__allocating_init()();
  if (v1)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    v0[40] = v7;
    v0[41] = sub_100306664();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    v0[42] = isa;
    v0[10] = v0;
    v0[15] = v0 + 28;
    v0[11] = sub_100305728;
    uint64_t v9 = swift_continuation_init();
    v0[23] = _NSConcreteStackBlock;
    v0[24] = 0x40000000;
    v0[25] = sub_1003009A8;
    v0[26] = &unk_1012E39A0;
    v0[27] = v9;
    [v6 fetchWithSearchTerm:v7 sortDescriptors:isa range:0 completionHandler:v0 + 23];
    return _swift_continuation_await(v0 + 10);
  }
  else
  {
    v0[48] = type metadata accessor for MapsSyncQueryPredicate();
    static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions();
    v0[49] = Options;
    objc_allocWithZone(Options);
    swift_bridgeObjectRetain();
    id v11 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    v0[50] = v11;
    v0[51] = FavoriteItemRequest.__allocating_init()();
    unint64_t v15 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                         + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
    id v12 = v11;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[52] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100305D90;
    return v15(v11);
  }
}

uint64_t sub_100305728()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 344) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100306450;
  }
  else
  {
    uint64_t v2 = sub_100305840;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100305840()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[39];
  id v3 = (void *)v0[40];
  v0[44] = v0[28];

  NSString v4 = String._bridgeToObjectiveC()();
  v0[45] = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v0[46] = isa;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 29;
  v0[3] = sub_1003059B0;
  uint64_t v6 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_1003009C0;
  v0[21] = &unk_1012E39B8;
  v0[22] = v6;
  [v2 fetchWithSearchTerm:v4 sortDescriptors:isa range:0 completionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003059B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 376) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1003064DC;
  }
  else
  {
    uint64_t v2 = sub_100305AC8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100305AC8()
{
  uint64_t v1 = *(void **)(v0 + 360);
  unint64_t v2 = *(void *)(v0 + 232);

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D6918);
    uint64_t v18 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
    unint64_t v2 = v18;
  }
  else
  {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000FF33C(&qword_1015D6918);
    if (swift_dynamicCastMetatype() || (uint64_t v14 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = v3 + 32;
      while (1)
      {
        *(void *)(v0 + 256) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional()) {
          break;
        }
        v15 += 8;
        if (!--v14) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v2 = v3 | 1;
    }
  }
  unint64_t v4 = *(void *)(v0 + 352);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D6918);
    unint64_t v6 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000FF33C(&qword_1015D6918);
    if (swift_dynamicCastMetatype() || (uint64_t v16 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      unint64_t v6 = *(void *)(v0 + 352);
    }
    else
    {
      uint64_t v17 = v5 + 32;
      while (1)
      {
        *(void *)(v0 + 264) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional()) {
          break;
        }
        v17 += 8;
        if (!--v16) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v6 = v5 | 1;
    }
  }
  sub_10024C068(v6);
  uint64_t v7 = *(void *)(v0 + 288);
  static Task<>.checkCancellation()();
  uint64_t v8 = *(void **)(v0 + 304);
  uint64_t v9 = *(void **)(v0 + 312);
  if (v7)
  {
    swift_bridgeObjectRelease();

    id v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v12 = sub_1003050B4(*(unsigned char *)(v0 + 472), v2);
    swift_bridgeObjectRelease();

    uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v13(v12);
  }
}

uint64_t sub_100305D90(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 424) = a1;
  *(void *)(v4 + 432) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void **)(v3 + 408);

  if (v1)
  {
    swift_bridgeObjectRelease();
    unint64_t v6 = sub_100306568;
  }
  else
  {
    unint64_t v6 = sub_100305F00;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100305F00()
{
  uint64_t v1 = (objc_class *)v0[49];
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5CF70;
  *(void *)(v2 + 56) = &type metadata for Int16;
  *(void *)(v2 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v2 + 32) = 6;
  static MapsSyncQueryPredicate.withFormat(_:_:)();
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone(v1);
  uint64_t v4 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
  v0[55] = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[56] = v5;
  void *v5 = v0;
  v5[1] = sub_100306054;
  return v7(v4);
}

uint64_t sub_100306054(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 456) = a1;
  *(void *)(v3 + 464) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1003065D8;
  }
  else {
    uint64_t v4 = sub_100306168;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100306168()
{
  unint64_t v1 = *(void *)(v0 + 424);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D6918);
    unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000FF33C(&qword_1015D6918);
    if (swift_dynamicCastMetatype() || (uint64_t v16 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      unint64_t v3 = *(void *)(v0 + 424);
    }
    else
    {
      uint64_t v17 = v2 + 32;
      while (1)
      {
        *(void *)(v0 + 248) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional()) {
          break;
        }
        v17 += 8;
        if (!--v16) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v3 = v2 | 1;
    }
  }
  unint64_t v4 = *(void *)(v0 + 456);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000FF33C(&qword_1015D6918);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000FF33C(&qword_1015D6918);
    if (!swift_dynamicCastMetatype())
    {
      uint64_t v18 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18)
      {
        uint64_t v19 = v5 + 32;
        do
        {
          *(void *)(v0 + 240) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
          if (!swift_dynamicCastObjCProtocolConditional()) {
            break;
          }
          v19 += 8;
          --v18;
        }
        while (v18);
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = *(void **)(v0 + 440);
  uint64_t v7 = *(void **)(v0 + 400);
  swift_bridgeObjectRetain();
  unint64_t v8 = swift_bridgeObjectRetain();
  sub_10024C068(v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 464);
  static Task<>.checkCancellation()();
  id v10 = *(void **)(v0 + 304);
  id v11 = *(void **)(v0 + 312);
  if (v9)
  {
    swift_bridgeObjectRelease();

    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v14 = sub_1003050B4(*(unsigned char *)(v0 + 472), v3);
    swift_bridgeObjectRelease();

    uint64_t v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v15(v14);
  }
}

uint64_t sub_100306450()
{
  unint64_t v1 = (void *)v0[42];
  unint64_t v3 = (void *)v0[39];
  uint64_t v2 = (void *)v0[40];
  unint64_t v4 = (void *)v0[38];
  swift_willThrow();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1003064DC()
{
  unint64_t v1 = (void *)v0[46];
  uint64_t v2 = (void *)v0[45];
  unint64_t v4 = (void *)v0[38];
  unint64_t v3 = (void *)v0[39];
  swift_willThrow();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100306568()
{
  unint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void **)(v0 + 312);

  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1003065D8()
{
  unint64_t v1 = *(void **)(v0 + 400);
  unint64_t v3 = *(void **)(v0 + 304);
  uint64_t v2 = *(void **)(v0 + 312);

  swift_bridgeObjectRelease();
  unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_100306664()
{
  unint64_t result = qword_1015DABE0;
  if (!qword_1015DABE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015DABE0);
  }
  return result;
}

uint64_t type metadata accessor for LibraryHomeCollectionViewManagerConfiguration()
{
  return self;
}

id sub_100306788()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource);
  }
  else
  {
    id v4 = sub_100306970(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100306830()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v5 = objc_allocWithZone((Class)type metadata accessor for HomeListCompositionalLayout());
    v11[4] = sub_100308940;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100080538;
    v11[3] = &unk_1012E3A08;
    id v6 = _Block_copy(v11);
    swift_retain();
    id v7 = [v5 initWithSectionProvider:v6];
    _Block_release(v6);
    swift_release();
    swift_release();
    unint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_100306970(uint64_t a1)
{
  if (qword_1015CBFA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015DAC80);
  sub_1000F2248(v2, (uint64_t)qword_101611CA0);
  if (qword_1015CBFA8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1000FF33C(&qword_1015DA8B8);
  sub_1000F2248(v3, (uint64_t)qword_101611CB8);
  if (qword_1015CBD70 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  sub_1000F2248(v4, (uint64_t)qword_101611808);
  id v5 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration)
                + OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_collectionView);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v6 = objc_allocWithZone((Class)sub_1000FF33C(&qword_1015DA8C8));
  id v7 = v5;
  unint64_t v8 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v9 = v8;
  swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

  swift_release();
  return v9;
}

uint64_t sub_100306B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v7 = (void *)Strong;
  uint64_t v8 = sub_100308364(a1, a2, a3);

  return v8;
}

void *sub_100306BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v7 = (void *)Strong;
  uint64_t v8 = sub_100306C6C(a1, a2, a3);

  return v8;
}

void *sub_100306C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v4 = sub_1000FF33C(&qword_1015DAC88);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_100306788(v10);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  unint64_t v15 = IndexPath.section.getter();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v15 >= *(void *)(v14 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = 0xD000000000000011;
  int v16 = *(unsigned __int8 *)(v14 + v15 + 32);
  swift_bridgeObjectRelease();
  if (v16 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return 0;
    }
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v29 && v18 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0) {
    return 0;
  }
LABEL_10:
  if (qword_1015CBD70 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v20 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  uint64_t v21 = sub_1000F2248(v20, (uint64_t)qword_101611808);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v21 + *(int *)(v20 + 40), v4);
  sub_100100830(0, (unint64_t *)&qword_1015D64D8);
  id v22 = (void *)UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v23._uint64_t countAndFlagsBits = v8 + 12;
  v30._uint64_t countAndFlagsBits = v8 + 22;
  v30._object = (void *)0x8000000100F860E0;
  v23._object = (void *)0x8000000100F860C0;
  v24._uint64_t countAndFlagsBits = 0x796C746E65636552;
  v24._object = (void *)0xEE00646564644120;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)qword_101611820, v24, v30);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 setTitle:v25, v28];

  [v22 setShowsBottomHairline:0];
  NSString v26 = String._bridgeToObjectiveC()();
  [v22 setAccessibilityIdentifiersWithBaseString:v26];

  return v22;
}

uint64_t sub_1003070D4(unint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v5 = (void *)Strong;
  uint64_t v6 = sub_10030715C(a1, a2, 0, 0);

  return v6;
}

uint64_t sub_10030715C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  __chkstk_darwin(v6);
  Swift::String v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  uint64_t v34 = v13;
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = sub_100306788();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v21 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(v21 + 16) > a1)
  {
    int v23 = *(unsigned __int8 *)(v21 + a1 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v8);
    UICollectionLayoutListConfiguration.init(appearance:)();
    id v24 = [self clearColor];
    UICollectionLayoutListConfiguration.backgroundColor.setter();
    UICollectionLayoutListConfiguration.headerTopPadding.setter();
    sub_1000F4F24(a3);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
    if (v23)
    {
      uint64_t v25 = v34;
      if (v23 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = v33;
        goto LABEL_9;
      }
      uint64_t v26 = v33;
    }
    else
    {
      uint64_t v26 = v33;
      uint64_t v25 = v34;
    }
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
LABEL_10:
      sub_100100830(0, (unint64_t *)&unk_1015D14E0);
      uint64_t v28 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
      [v28 contentInsets];
      [v28 setContentInsets:0.0];
      [v28 contentInsets];
      [v28 setContentInsets:];
      (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v26);
      return (uint64_t)v28;
    }
LABEL_9:
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v32);
    UICollectionLayoutListConfiguration.headerMode.setter();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_1003075D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v29 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v5 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout] = 0;
  *(void *)&v2[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration] = a1;
  type metadata accessor for LibraryRecentsDataProvider();
  swift_allocObject();
  uint64_t v8 = v2;
  uint64_t v9 = a1;
  *(void *)&v8[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_recentsDataProvider] = sub_1002EE57C();
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)static LibraryItemsCountManager.shared;
  *(void *)&v8[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_countsManager] = static LibraryItemsCountManager.shared;
  type metadata accessor for MapsSyncStore();
  id v11 = v10;
  uint64_t v12 = static MapsSyncStore.sharedStore.getter();
  uint64_t v13 = (objc_class *)type metadata accessor for LibraryDataOperationsProvider();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  *(void *)&v14[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = v12;
  v32.receiver = v14;
  v32.super_class = v13;
  id v15 = [super init];
  uint64_t v16 = (objc_class *)type metadata accessor for LibraryCellActionHandler();
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider] = v15;
  *(_DWORD *)&v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo] = 137;
  v31.receiver = v17;
  v31.super_class = v16;
  *(void *)&v8[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_cellActionHandler] = [v31 init];

  v30.receiver = v8;
  v30.super_class = ObjectType;
  uint64_t v18 = (char *)[super init];
  char v19 = *(void **)(*(void *)&v18[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_countsManager]
                 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers);
  id v20 = v18;
  [v19 registerObserver:v20];
  if (qword_1015CBFA0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1000FF33C(&qword_1015DAC80);
  sub_1000F2248(v21, (uint64_t)qword_101611CA0);
  if (qword_1015CBFA8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1000FF33C(&qword_1015DA8B8);
  sub_1000F2248(v22, (uint64_t)qword_101611CB8);
  if (qword_1015CBD70 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1000FF33C((uint64_t *)&unk_1015D73C0);
  sub_1000F2248(v23, (uint64_t)qword_101611808);
  uint64_t v24 = *(void *)&v20[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_cellActionHandler];
  uint64_t v25 = &v9[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
  swift_unknownObjectWeakLoadStrong();
  *(void *)(v24 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator + 8) = *((void *)v25 + 1);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  *(void *)(*(void *)&v20[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_recentsDataProvider] + 32) = &off_1012E39D0;
  swift_unknownObjectWeakAssign();
  sub_100307B5C();
  id v26 = sub_100306788();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
  return v20;
}

id sub_1003079E4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  [*(id *)(*(void *)&v0[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_countsManager]+ OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers) unregisterObserver:v0];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_100307B5C()
{
  sub_1000FF33C(&qword_1015D6F20);
  sub_1002F63F8();
  sub_100308800();
  NSDiffableDataSourceSnapshot.init()();
  sub_1000FF33C((uint64_t *)&unk_1015DA638);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1012D8078);
  int IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS();
  uint64_t v2 = (int64_t *)&unk_1012D80B0;
  if (!IsEnabled_HikingiOS) {
    uint64_t v2 = (int64_t *)&unk_1012D80D8;
  }
  int64_t v3 = *v2;
  if (*v2)
  {
    int v4 = IsEnabled_HikingiOS;
    sub_10025B054(0, v3, 0);
    if (v4) {
      uint64_t v5 = &off_1012D80A0;
    }
    else {
      uint64_t v5 = &off_1012D80C8;
    }
    uint64_t v6 = (char *)(v5 + 4);
    unint64_t v7 = sub_10030885C();
    unint64_t v8 = _swiftEmptyArrayStorage[2];
    uint64_t v9 = 40 * v8 + 64;
    do
    {
      char v11 = *v6++;
      char v10 = v11;
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      unint64_t v13 = v8 + 1;
      if (v8 >= v12 >> 1) {
        sub_10025B054(v12 > 1, v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13;
      uint64_t v14 = (void *)((char *)_swiftEmptyArrayStorage + v9);
      *((unsigned char *)v14 - 32) = v10;
      *(v14 - 2) = *(void *)&v31[15];
      *(v14 - 1) = (unint64_t)&type metadata for LibraryListSavedItemsManagementSectionCellModel;
      *(_OWORD *)((char *)v14 - 31) = *(_OWORD *)v31;
      *uint64_t v14 = v7;
      v9 += 40;
      unint64_t v8 = v13;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  v31[0] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  id v15 = v0;
  unint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = (unint64_t)sub_100307F88(v16);
  swift_bridgeObjectRelease();

  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_13;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_23;
  }
LABEL_13:
  unint64_t v30 = v17;
  uint64_t result = sub_10025B054(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = 0;
    unint64_t v21 = v17;
    unint64_t v22 = v17 & 0xC000000000000001;
    do
    {
      if (v22) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(v21 + 8 * v20 + 32);
      }
      id v24 = v23;
      uint64_t v25 = type metadata accessor for LibraryListSavedItemCellModel();
      unint64_t v26 = sub_1003088B0();
      unint64_t v28 = _swiftEmptyArrayStorage[2];
      unint64_t v27 = _swiftEmptyArrayStorage[3];
      if (v28 >= v27 >> 1)
      {
        sub_10025B054(v27 > 1, v28 + 1, 1);
        unint64_t v21 = v30;
      }
      ++v20;
      _swiftEmptyArrayStorage[2] = v28 + 1;
      uint64_t v29 = &_swiftEmptyArrayStorage[5 * v28];
      v29[4] = v24;
      *(_OWORD *)(v29 + 5) = *(_OWORD *)v31;
      v29[7] = v25;
      v29[8] = v26;
    }
    while (v18 != v20);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LibraryHomeCollectionViewManager()
{
  return self;
}

void *sub_100307F88(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unint64_t v39 = v1 & 0xC000000000000001;
      for (uint64_t i = 4; ; ++i)
      {
        if (v39) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(v1 + 8 * i);
        }
        uint64_t v6 = v5;
        uint64_t v4 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        unint64_t v7 = (objc_class *)type metadata accessor for LibraryListSavedItemCellModel();
        unint64_t v8 = (char *)objc_allocWithZone(v7);
        uint64_t v9 = (uint64_t)&v8[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler];
        *(void *)&v8[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler + 8] = 0;
        swift_unknownObjectWeakInit();
        double v41 = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        uint64_t v10 = swift_dynamicCastObjCProtocolConditional();
        if (v10)
        {
          uint64_t v11 = v10;
          unint64_t v12 = v7;
          unint64_t v13 = v1;
          swift_getObjectType();
          id v14 = v6;
          id v15 = v8;
          unint64_t v16 = (unint64_t)LibraryPlaceItemCompatible.createMapItemFromStorage()();
          if (v16)
          {
            id v17 = (id)v16;
            char v18 = 0;
            unint64_t v1 = v13;
            unint64_t v7 = v12;
            uint64_t v4 = i - 3;
            goto LABEL_19;
          }

          unint64_t v1 = v13;
          uint64_t v4 = i - 3;
        }
        else
        {
          type metadata accessor for Collection();
          uint64_t v19 = swift_dynamicCastClass();
          if (v19)
          {
            uint64_t v20 = v19;
            unint64_t v21 = self;
            id v22 = v6;
            id v23 = v8;
            id v24 = [v21 collectionWithMapsSyncCollection:v20];
            goto LABEL_18;
          }
          type metadata accessor for CachedCuratedCollection();
          uint64_t v25 = swift_dynamicCastClass();
          if (v25)
          {
            uint64_t v26 = v25;
            unint64_t v27 = self;
            id v28 = v6;
            uint64_t v29 = v8;
            id v24 = [v27 collectionWithMapsSyncCachedCuratedCollection:v26];
LABEL_18:
            id v17 = v24;
            uint64_t v11 = 0;
            char v18 = 1;
LABEL_19:
            unint64_t v30 = &v8[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
            *(void *)unint64_t v30 = v17;
            *((void *)v30 + 1) = v11;
            v30[16] = v18;
            sub_1002F601C(v17, v11, v18);

            v40.receiver = v8;
            v40.super_class = v7;
            objc_super v31 = (char *)[v40 init];

            sub_1002EE494(v17, v11, v18);
            *(void *)&v31[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler + 8] = &off_1012E3158;
            swift_unknownObjectWeakAssign();

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            goto LABEL_6;
          }
          type metadata accessor for UserRoute();
          uint64_t v32 = swift_dynamicCastClass();
          if (v32)
          {
            uint64_t v33 = v32;
            uint64_t v34 = self;
            id v35 = v6;
            uint64_t v36 = v8;
            id v17 = [v34 routeDataForMapsSyncUserRoute:v33];
            uint64_t v11 = 0;
            char v18 = 2;
            goto LABEL_19;
          }
          double v37 = v8;
        }
        sub_100123CE4(v9);

        swift_deallocPartialClassInstance();
LABEL_6:
        if (v4 == v2)
        {
          swift_bridgeObjectRelease();
          return (void *)v42;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100308364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DA8B8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015DAC80);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF4D4(a3, (uint64_t)v20);
  sub_1000FF33C(&qword_1015DA648);
  if (swift_dynamicCast())
  {
    char v12 = (char)v19;
    if (qword_1015CBFA0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1000F2248(v8, (uint64_t)qword_101611CA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v13, v8);
    LOBYTE(v20[0]) = v12;
    sub_100100830(0, (unint64_t *)&qword_1015DAC90);
    uint64_t v14 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    sub_1000FF4D4(a3, (uint64_t)v20);
    type metadata accessor for LibraryListSavedItemCellModel();
    if (swift_dynamicCast())
    {
      id v15 = v19;
      if (qword_1015CBFA8 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1000F2248(v4, (uint64_t)qword_101611CB8);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
      v20[0] = v15;
      sub_100100830(0, &qword_1015D67E8);
      id v17 = v15;
      uint64_t v14 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      return 0;
    }
  }
  return v14;
}

uint64_t sub_1003086AC()
{
  uint64_t v0 = sub_1000FF33C((uint64_t *)&unk_1015DA638);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v4 = sub_100306788();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  id v5 = sub_100306788();
  sub_1000FF33C(&qword_1015DA8C8);
  if (swift_dynamicCastClass())
  {
    v8[15] = 0;
    uint64_t v6 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v6);
    swift_bridgeObjectRelease();
    dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_100308800()
{
  unint64_t result = qword_1015DA8A8;
  if (!qword_1015DA8A8)
  {
    sub_10010118C(&qword_1015D6F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA8A8);
  }
  return result;
}

unint64_t sub_10030885C()
{
  unint64_t result = qword_1015DAC78;
  if (!qword_1015DAC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAC78);
  }
  return result;
}

unint64_t sub_1003088B0()
{
  unint64_t result = qword_1015DA8B0;
  if (!qword_1015DA8B0)
  {
    type metadata accessor for LibraryListSavedItemCellModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DA8B0);
  }
  return result;
}

uint64_t sub_100308908()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100308940(unint64_t a1, uint64_t a2)
{
  return sub_1003070D4(a1, a2);
}

uint64_t sub_100308948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100306B50(a1, a2, a3);
}

void *sub_100308950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100306BD4(a1, a2, a3);
}

uint64_t sub_100308958(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1936615792;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 1936615792;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1667329136;
      goto LABEL_5;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1684632935;
      goto LABEL_5;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v6 = 1953853298;
LABEL_5:
      unint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x736500000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1667329136;
      goto LABEL_12;
    case 2:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v2 = 0x736564697567;
      goto LABEL_9;
    case 3:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 1953853298;
LABEL_12:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x736500000000)) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_15;
      }
LABEL_13:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_15:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_100308AAC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0x8000000100F74240;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v4 = 0xD000000000000019;
    }
    else {
      unint64_t v4 = 0xD000000000000011;
    }
    if (v3 == 1) {
      unint64_t v5 = 0x8000000100F74260;
    }
    else {
      unint64_t v5 = 0x8000000100F74280;
    }
    int v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1) {
        unint64_t v7 = 0xD000000000000019;
      }
      else {
        unint64_t v7 = 0xD000000000000011;
      }
      if (v6 == 1) {
        unint64_t v2 = 0x8000000100F74260;
      }
      else {
        unint64_t v2 = 0x8000000100F74280;
      }
      if (v4 != v7) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xD00000000000001BLL;
    unint64_t v5 = 0x8000000100F74240;
    int v6 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  if (v4 != 0xD00000000000001BLL)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100308BB0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x74736574736166;
  }
  else {
    uint64_t v3 = 0x74736574726F6873;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x74736574736166;
  }
  else {
    uint64_t v5 = 0x74736574726F6873;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100308C58(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2 = 0x6F53656D756C6F76;
  unint64_t v3 = 0xEA00000000007466;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6F4E656D756C6F76;
    }
    else {
      uint64_t v5 = 0x6F4C656D756C6F76;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC0000006C616D72;
    }
    else {
      unint64_t v6 = 0xEA00000000006475;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6F53656D756C6F76;
  unint64_t v6 = 0xEA00000000007466;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v2 = 0x6F4E656D756C6F76;
    }
    else {
      uint64_t v2 = 0x6F4C656D756C6F76;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xEC0000006C616D72;
    }
    else {
      unint64_t v3 = 0xEA00000000006475;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100308D7C(char a1, char a2)
{
  if (*(void *)&aDriving_5[8 * a1] == *(void *)&aDriving_5[8 * a2]) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

Swift::Int sub_100308DE4()
{
  return Hasher._finalize()();
}

uint64_t sub_100308E90()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100308F24()
{
  return Hasher._finalize()();
}

unint64_t sub_100308FCC(char a1)
{
  if (!a1) {
    return 0xD00000000000001BLL;
  }
  if (a1 == 1) {
    return 0xD000000000000019;
  }
  return 0xD000000000000011;
}

uint64_t sub_10030902C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100308AAC(*a1, *a2);
}

Swift::Int sub_100309038()
{
  return sub_100308DE4();
}

uint64_t sub_100309040()
{
  return sub_100308E90();
}

Swift::Int sub_100309048()
{
  return sub_100308F24();
}

unint64_t sub_100309050@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10030C928(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100309080@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100308FCC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1003090AC()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015DAC80);
  sub_10003D64C(v0, qword_101611CA0);
  sub_1000F2248(v0, (uint64_t)qword_101611CA0);
  sub_100100830(0, (unint64_t *)&qword_1015DAC90);
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t sub_10030913C(void *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  uint64_t v77 = *(void *)(v5 - 8);
  uint64_t v78 = v5;
  __chkstk_darwin(v5);
  double v74 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v73 = (char *)&v72 - v8;
  uint64_t v9 = sub_1000FF33C(&qword_1015CE288);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v12 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char)*a3;
  double v75 = (void (*)(char *, uint64_t))*a3;
  uint64_t v79 = 0;
  unint64_t v80 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  uint64_t v79 = 0xD000000000000014;
  unint64_t v80 = 0x8000000100F866B0;
  v20._uint64_t countAndFlagsBits = *(void *)&aPinned[8 * v19];
  v20._object = (void *)0xE600000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 setAccessibilityIdentifier:v21];

  sub_1000FF33C(&qword_1015CE290);
  type metadata accessor for UICellAccessory();
  uint64_t v22 = swift_allocObject();
  long long v72 = xmmword_100F5CF70;
  *(_OWORD *)(v22 + 16) = xmmword_100F5CF70;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for UICellAccessory.DisplayedState.always(_:), v15);
  uint64_t v23 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
  static UICellAccessory.disclosureIndicator(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v76);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  id v24 = v73;
  UICollectionViewListCell.accessories.setter();
  uint64_t v76 = (uint64_t)a1;
  UICollectionViewListCell.defaultContentConfiguration()();
  UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter();
  uint64_t v25 = v74;
  static UIListContentConfiguration.valueCell()();
  uint64_t v27 = v77;
  uint64_t v26 = v78;
  id v28 = *(void (**)(char *, uint64_t))(v77 + 8);
  v28(v24, v78);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
  UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter();
  uint64_t v29 = (void (*)(uint64_t *, void))UIListContentConfiguration.directionalLayoutMargins.modify();
  *(void *)(v30 + 8) = 0x4030000000000000;
  v29(&v79, 0);
  if (qword_1015CBF98 != -1) {
    swift_once();
  }
  objc_super v31 = (void *)static LibraryItemsCountManager.shared;
  id v32 = objc_allocWithZone((Class)type metadata accessor for HomeListLibraryCountsDataProvider());
  uint64_t v33 = (char *)sub_100033468(v31);
  id v34 = [self configurationWithWeight:5];
  id v35 = v34;
  switch((unint64_t)v75)
  {
    case 1uLL:
      id v47 = v34;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [self _systemImageNamed:v48 withConfiguration:v47];

      UIListContentConfiguration.image.setter();
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v39.super.Class isa = (Class)qword_101611820;
      v84._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      v84._object = (void *)0x8000000100F868C0;
      v50._object = (void *)0x8000000100F868A0;
      v50._uint64_t countAndFlagsBits = 0xD000000000000015;
      v51._uint64_t countAndFlagsBits = 0x736563616C50;
      v51._object = (void *)0xE600000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)qword_101611820, v51, v84);
      UIListContentConfiguration.text.setter();
      uint64_t v52 = *(void *)(*(void *)&v33[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_countsManager]
                      + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
      if (v52)
      {
        double v75 = v28;
        uint64_t v43 = *(void *)(v52 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
        unint64_t v44 = 0xD000000000000019;
        unint64_t v45 = 0xD000000000000044;
        id v46 = "Secondary label with count for button that links to a list of places";
        goto LABEL_20;
      }
      break;
    case 2uLL:
      id v53 = v34;
      NSString v54 = String._bridgeToObjectiveC()();
      id v55 = [self systemImageNamed:v54 withConfiguration:v53];

      UIListContentConfiguration.image.setter();
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v39.super.Class isa = (Class)qword_101611820;
      v85._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      v85._object = (void *)0x8000000100F86800;
      v56._object = (void *)0x8000000100F867E0;
      v56._uint64_t countAndFlagsBits = 0xD000000000000015;
      v57._uint64_t countAndFlagsBits = 0x736564697547;
      v57._object = (void *)0xE600000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)qword_101611820, v57, v85);
      UIListContentConfiguration.text.setter();
      uint64_t v58 = *(void *)(*(void *)&v33[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_countsManager]
                      + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
      if (v58)
      {
        double v75 = v28;
        uint64_t v43 = *(void *)(v58 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
        unint64_t v44 = 0xD000000000000019;
        unint64_t v45 = 0xD000000000000044;
        id v46 = "Secondary label with count for button that links to a list of guides";
        goto LABEL_20;
      }
      break;
    case 3uLL:
      id v59 = v34;
      NSString v60 = String._bridgeToObjectiveC()();
      id v61 = [self _systemImageNamed:v60 withConfiguration:v59];

      UIListContentConfiguration.image.setter();
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v39.super.Class isa = (Class)qword_101611820;
      v86._uint64_t countAndFlagsBits = 0xD000000000000035;
      v86._object = (void *)0x8000000100F86730;
      v62._object = (void *)0x8000000100F86710;
      v62._uint64_t countAndFlagsBits = 0xD000000000000015;
      v63._uint64_t countAndFlagsBits = 0x736574756F52;
      v63._object = (void *)0xE600000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v62, (Swift::String_optional)0, (NSBundle)qword_101611820, v63, v86);
      UIListContentConfiguration.text.setter();
      uint64_t v64 = *(void *)(*(void *)&v33[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_countsManager]
                      + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
      if (v64)
      {
        double v75 = v28;
        uint64_t v43 = *(void *)(v64 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
        unint64_t v44 = 0xD000000000000019;
        unint64_t v45 = 0xD00000000000004ALL;
        id v46 = "Secondary label with count for button that links to a list of saved routes";
        goto LABEL_20;
      }
      break;
    default:
      id v36 = v34;
      NSString v37 = String._bridgeToObjectiveC()();
      id v38 = [self systemImageNamed:v37 withConfiguration:v36];

      UIListContentConfiguration.image.setter();
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v39.super.Class isa = (Class)qword_101611820;
      v83._uint64_t countAndFlagsBits = 0xD000000000000036;
      v83._object = (void *)0x8000000100F86960;
      v40._object = (void *)0x8000000100F86940;
      v40._uint64_t countAndFlagsBits = 0xD000000000000015;
      v41._uint64_t countAndFlagsBits = 0x64656E6E6950;
      v41._object = (void *)0xE600000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)qword_101611820, v41, v83);
      UIListContentConfiguration.text.setter();
      uint64_t v42 = *(void *)(*(void *)&v33[OBJC_IVAR____TtC4Maps33HomeListLibraryCountsDataProvider_countsManager]
                      + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
      if (v42)
      {
        double v75 = v28;
        uint64_t v43 = *(void *)(v42 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedItemsCount);
        unint64_t v44 = 0xD000000000000019;
        unint64_t v45 = 0xD00000000000004BLL;
        id v46 = "Secondary label with count for button that links to a list of pinned places";
LABEL_20:
        unint64_t v71 = (unint64_t)(v46 - 32) | 0x8000000000000000;
        unint64_t v65 = 0x8000000100F86770;
        v66._uint64_t countAndFlagsBits = 6581285;
        v66._object = (void *)0xE300000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v44, (Swift::String_optional)0, v39, v66, *(Swift::String *)&v45);
        sub_1000FF33C((uint64_t *)&unk_1015D59C0);
        uint64_t v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = v72;
        *(void *)(v67 + 56) = &type metadata for Int;
        *(void *)(v67 + 64) = &protocol witness table for Int;
        *(void *)(v67 + 32) = v43;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        UIListContentConfiguration.secondaryText.setter();
        id v28 = v75;
      }
      break;
  }
  uint64_t v68 = v78;
  uint64_t v81 = v78;
  unint64_t v82 = &protocol witness table for UIListContentConfiguration;
  double v69 = sub_100100B1C(&v79);
  (*(void (**)(uint64_t *, char *, uint64_t))(v77 + 16))(v69, v24, v68);
  UICollectionViewCell.contentConfiguration.setter();

  return ((uint64_t (*)(char *, uint64_t))v28)(v24, v68);
}

uint64_t sub_100309CC8(unsigned __int8 *a1, char *a2)
{
  return sub_100308958(*a1, *a2);
}

Swift::Int sub_100309CD4()
{
  return Hasher._finalize()();
}

uint64_t sub_100309D94()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100309E3C()
{
  return Hasher._finalize()();
}

unint64_t sub_100309EF8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10030C974(*a1);
  *a2 = result;
  return result;
}

void sub_100309F28(void *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1936615792;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x736563616C70;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 1684632935;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 1953853298;
LABEL_6:
      *a1 = v4 & 0xFFFF0000FFFFFFFFLL | 0x736500000000;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_100309FA8()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015DA8B8);
  sub_10003D64C(v0, qword_101611CB8);
  sub_1000F2248(v0, (uint64_t)qword_101611CB8);
  sub_100100830(0, &qword_1015D67E8);
  type metadata accessor for LibraryListSavedItemCellModel();
  return UICollectionView.CellRegistration.init(handler:)();
}

void sub_10030A03C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a3 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  uint64_t v6 = *(void **)v4;
  uint64_t v5 = *(void **)(v4 + 8);
  int v7 = *(unsigned __int8 *)(v4 + 16);
  if (v7)
  {
    if (v7 == 1)
    {
      [a1 setViewModel:[self cellModelForCollection:v6]];
      swift_unknownObjectRelease();
      uint64_t v8 = v6;
      uint64_t v9 = (uint64_t)v5;
      char v10 = 1;
    }
    else
    {
      [a1 setViewModel:sub_10030A340(v6)];
      swift_unknownObjectRelease();
      uint64_t v8 = v6;
      uint64_t v9 = (uint64_t)v5;
      char v10 = 2;
    }
    sub_1002EE494(v8, v9, v10);
  }
  else
  {
    id v11 = v6;
    swift_unknownObjectRetain();
    [a1 setViewModel:sub_10030A190((uint64_t)v11, v5)];

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
}

id sub_10030A190(uint64_t a1, void *a2)
{
  id v4 = sub_10030A7BC(a2);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = self;
  id v7 = [a2 customName];
  id v8 = [a2 styleAttributes];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10030C9F8;
  *(void *)(v9 + 24) = v5;
  v13[4] = sub_10030CA4C;
  uint64_t v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_10030B8E4;
  v13[3] = &unk_1012E3C30;
  char v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  id v11 = [v6 libraryCellModelForMapItem:a1 customName:v7 styleAttributes:v8 thirdLineViewModel:v4 menuProvider:v10];

  swift_release();
  _Block_release(v10);

  return v11;
}

id sub_10030A340(void *a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v3 = [a1 userProvidedNotes];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    id v8 = [a1 userProvidedNotes];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String._mapsui_quotedForLocale.getter();
    swift_bridgeObjectRelease();
    id v9 = objc_allocWithZone((Class)PlaceContextViewModel);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [v9 initWithLibraryContextForPlaceNote:v10];
  }
  else
  {
    id v11 = 0;
  }
  uint64_t v12 = self;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10030C9F8;
  *(void *)(v13 + 24) = v2;
  v17[4] = sub_10030CA4C;
  _OWORD v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10030B8E4;
  v17[3] = &unk_1012E3E10;
  uint64_t v14 = _Block_copy(v17);
  swift_retain();
  swift_release();
  id v15 = [v12 cellModelForRouteData:a1 thirdLineViewModel:v11 menuProvider:v14];
  _Block_release(v14);
  swift_release();

  return v15;
}

id sub_10030A568()
{
  id v0 = [objc_allocWithZone((Class)MUPlaceTileCellConfiguration) init];
  [v0 setShowIcon:0];
  [v0 setShowCuratedPhoto:1];
  [v0 setVariant:0];
  id result = [v0 setShowSelectionControlWhileEditing:1];
  qword_101611CD0 = (uint64_t)v0;
  return result;
}

uint64_t sub_10030A5F4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015DA8C0);
  sub_10003D64C(v0, qword_101611CD8);
  sub_1000F2248(v0, (uint64_t)qword_101611CD8);
  sub_100100830(0, (unint64_t *)&unk_1015DA8D0);
  type metadata accessor for LibraryListSavedItemCellModel();
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t sub_10030A688(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3 = *a3 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  if (!*(unsigned char *)(v3 + 16))
  {
    uint64_t v4 = (void *)result;
    id v5 = *(id *)v3;
    swift_unknownObjectRetain();
    [v4 _setCornerRadius:10.0];
    [v4 setClipsToBounds:1];
    if (qword_1015CBFB0 != -1) {
      swift_once();
    }
    [v4 setCellConfiguration:qword_101611CD0];
    id v6 = [objc_allocWithZone((Class)MUPlatterView) init];
    [v4 setBackgroundView:v6];

    [v4 setViewModel:v5];
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_10030A7BC(void *a1)
{
  id v1 = [a1 placeItemNote];
  if (v1)
  {
    uint64_t v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String._mapsui_nilIfEmpty.getter();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    if (v4)
    {
      String._mapsui_quotedForLocale.getter();
      swift_bridgeObjectRelease();
      id v5 = objc_allocWithZone((Class)PlaceContextViewModel);
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v7 = [v5 initWithLibraryContextForPlaceNote:v6];

      return v7;
    }
  }
  type metadata accessor for FavoriteItem();
  if (swift_dynamicCastClass()) {
    return [objc_allocWithZone((Class)PlaceContextViewModel) initWithLibraryContextForPinnedItem];
  }
  type metadata accessor for CollectionPlaceItem();
  id v7 = (id)swift_dynamicCastClass();
  if (!v7) {
    return v7;
  }
  swift_unknownObjectRetain();
  if (dispatch thunk of CollectionPlaceItem.type.getter())
  {
    if (qword_1015CBFC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v16 = objc_allocWithZone((Class)PlaceContextViewModel);
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v7 = [v16 initWithLibraryContextForUserCollectionName:v17];
    swift_unknownObjectRelease();

    return v7;
  }
  unint64_t v9 = dispatch thunk of CollectionItem.fetchCollections()();
  unint64_t v10 = v9;
  if (!(v9 >> 62))
  {
    id result = *(id *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_11;
    }
LABEL_21:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_21;
  }
LABEL_11:
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_14:
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    dispatch thunk of Collection.title.getter();
    id v7 = v13;
    if (v13)
    {
      id v14 = objc_allocWithZone((Class)PlaceContextViewModel);
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v7 = [v14 initWithLibraryContextForUserCollectionName:v15];
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    return v7;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(v10 + 32);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

UIMenu *sub_10030AAA8()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16))
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16) == 1)
    {
      return (UIMenu *)_swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000FF33C(&qword_1015CD310);
      uint64_t value_8 = swift_allocObject();
      *(_OWORD *)(value_8 + 16) = xmmword_100F5E000;
      sub_100100830(0, &qword_1015DA9F8);
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v9._uint64_t countAndFlagsBits = 0xD000000000000014;
      v94._uint64_t countAndFlagsBits = 0xD000000000000036;
      v94._object = (void *)0x8000000100F861E0;
      v9._object = (void *)0x8000000100F861C0;
      v10._uint64_t countAndFlagsBits = 0x6F69746365726944;
      v10._object = (void *)0xEA0000000000736ELL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v94);
      NSString v11 = String._bridgeToObjectiveC()();
      uint64_t v12 = self;
      id v13 = [v12 systemImageNamed:v11];

      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v14;
      *(unsigned char *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = v1;
      id v16 = v1;
      uint64_t v84 = v15;
      id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v18 = String._bridgeToObjectiveC()();
      [v17 setAccessibilityIdentifier:v18];

      *(void *)(value_8 + 32) = v17;
      *(void *)(value_8 + 40) = sub_10030BE40();
      sub_100100830(0, (unint64_t *)&unk_1015DAA00);
      UIMenuElementSize preferredElementSize = swift_allocObject();
      *(_OWORD *)(preferredElementSize + 16) = xmmword_100F5F0D0;
      v20._uint64_t countAndFlagsBits = 0xD000000000000010;
      v21._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v95._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
      v95._object = (void *)0x8000000100F862C0;
      v21._object = (void *)0x8000000100F86280;
      v20._object = (void *)0x8000000100F862A0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)qword_101611820, v20, v95);
      NSString v22 = String._bridgeToObjectiveC()();
      uint64_t v23 = v12;
      id v24 = [v12 systemImageNamed:v22];

      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      *(unsigned char *)(v26 + 24) = 1;
      *(void *)(v26 + 32) = v16;
      id v27 = v16;
      uint64_t v85 = v26;
      id v28 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v29 = String._bridgeToObjectiveC()();
      [v28 setAccessibilityIdentifier:v29];

      *(void *)(preferredElementSize + 32) = v28;
      v30._uint64_t countAndFlagsBits = 0xD000000000000016;
      v96._uint64_t countAndFlagsBits = 0xD000000000000028;
      v96._object = (void *)0x8000000100F86350;
      v30._object = (void *)0x8000000100F86330;
      v31._uint64_t countAndFlagsBits = 0x52206574656C6544;
      v31._object = (void *)0xEC0000006574756FLL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)qword_101611820, v31, v96);
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = [v23 systemImageNamed:v32];

      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      *(unsigned char *)(v35 + 24) = 2;
      *(void *)(v35 + 32) = v27;
      id v36 = v27;
      id v37 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v38 = String._bridgeToObjectiveC()();
      [v37 setAccessibilityIdentifier:v38];

      *(void *)(preferredElementSize + 40) = v37;
      specialized Array._endMutation()();
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v92.value.super.Class isa = 0;
      v92.is_nil = 0;
      *(UIMenu *)(value_8 + 48) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v92, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)2);
      specialized Array._endMutation()();
      return (UIMenu *)value_8;
    }
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 8);
    type metadata accessor for CollectionPlaceItem();
    swift_unknownObjectRetain();
    uint64_t v4 = swift_dynamicCastClass();
    id v5 = [v3 placeItemNote];
    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v8 = v7;

      id v5 = (id)(v6 & 0xFFFFFFFFFFFFLL);
    }
    else
    {
      unint64_t v8 = 0xE000000000000000;
    }
    char v40 = v4 != 0;
    swift_bridgeObjectRelease();
    uint64_t v41 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v41 = (uint64_t)v5;
    }
    uint64_t v89 = v41;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_100F5E000;
    value_8a = (UIMenu *)v42;
    *(void *)(v42 + 32) = sub_10030BAAC(v40);
    sub_100100830(0, &qword_1015DA9F8);
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v97._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v97._object = (void *)0x8000000100F863A0;
    v43._uint64_t countAndFlagsBits = 0x7972617262694C5BLL;
    v43._object = (void *)0xEF6572616853205DLL;
    v44._uint64_t countAndFlagsBits = 0x6572616853;
    v44._object = (void *)0xE500000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)qword_101611820, v44, v97);
    NSString v45 = String._bridgeToObjectiveC()();
    id v87 = self;
    id v46 = [v87 systemImageNamed:v45];

    uint64_t v47 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v47;
    *(unsigned char *)(v48 + 24) = 2;
    *(void *)(v48 + 32) = v1;
    *(void *)(v48 + 40) = v3;
    id v49 = v1;
    swift_unknownObjectRetain();
    uint64_t v86 = v48;
    id v50 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v51 = String._bridgeToObjectiveC()();
    [v50 setAccessibilityIdentifier:v51];

    value_8a[5].super.super.Class isa = (Class)v50;
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100F5E000;
    uint64_t v53 = v52;
    UIMenuElementSize v88 = v52;
    v54._uint64_t countAndFlagsBits = 0xD000000000000018;
    swift__stringd._object = (void *)0x8000000100F85640;
    v54._object = (void *)0x8000000100F85620;
    v55._uint64_t countAndFlagsBits = 0x61206F7420646441;
    v55._object = (void *)0xEE00656469754720;
    swift__stringd._uint64_t countAndFlagsBits = 0xD000000000000023;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)qword_101611820, v55, swift__stringd);
    NSString v56 = String._bridgeToObjectiveC()();
    id v57 = [v87 systemImageNamed:v56];

    uint64_t v58 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v58;
    *(unsigned char *)(v59 + 24) = 4;
    *(void *)(v59 + 32) = v49;
    *(void *)(v59 + 40) = v3;
    id v60 = v49;
    swift_unknownObjectRetain();
    id v61 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v62 = String._bridgeToObjectiveC()();
    [v61 setAccessibilityIdentifier:v62];

    *(void *)(v53 + 32) = v61;
    Swift::String v63 = self;
    uint64_t v64 = &selRef_addANoteTitle;
    if (v89) {
      uint64_t v64 = &selRef_editNoteTitle;
    }
    id v65 = [v63 *v64];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100100830(0, (unint64_t *)&unk_1015DAA00);
    NSString v66 = String._bridgeToObjectiveC()();
    id v67 = [v87 systemImageNamed:v66];

    uint64_t v68 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v68;
    *(unsigned char *)(v69 + 24) = 3;
    *(void *)(v69 + 32) = v60;
    *(void *)(v69 + 40) = v3;
    id v70 = v60;
    swift_unknownObjectRetain();
    id v71 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v72 = String._bridgeToObjectiveC()();
    [v71 setAccessibilityIdentifier:v72];

    *(void *)(v88 + 40) = v71;
    v73._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v99._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v99._object = (void *)0x8000000100F856D0;
    v73._object = (void *)0x8000000100F85690;
    v74._object = (void *)0x8000000100F856B0;
    v74._uint64_t countAndFlagsBits = 0xD000000000000013;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)qword_101611820, v74, v99);
    NSString v75 = String._bridgeToObjectiveC()();
    id v76 = [v87 systemImageNamed:v75];

    uint64_t v77 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v77;
    *(unsigned char *)(v78 + 24) = 5;
    *(void *)(v78 + 32) = v70;
    *(void *)(v78 + 40) = v3;
    id v79 = v70;
    swift_unknownObjectRetain();
    id v80 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v81 = String._bridgeToObjectiveC()();
    [v80 setAccessibilityIdentifier:v81];

    *(void *)(v88 + 48) = v80;
    specialized Array._endMutation()();
    v82._uint64_t countAndFlagsBits = 0;
    v82._object = (void *)0xE000000000000000;
    v93.value.super.Class isa = 0;
    v93.is_nil = 0;
    value_8a[6].super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v82, (Swift::String_optional)0, v93, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v88, (Swift::OpaquePointer)2).super.super.isa;
    specialized Array._endMutation()();
    uint64_t v2 = value_8a;
    swift_unknownObjectRelease();
  }
  return v2;
}

id sub_10030B8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *, uint64_t))(a1 + 32);
  _OWORD v7[3] = swift_getObjectType();
  v7[0] = a2;
  sub_100100830(0, &qword_1015DAA20);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  swift_unknownObjectRetain();
  id v5 = (void *)v3(v7, v4);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000FF22C((uint64_t)v7);

  return v5;
}

objc_class *sub_10030B9A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    UIMenuElementSize preferredElementSize = sub_10030AAA8();
  }
  else
  {
    UIMenuElementSize preferredElementSize = (UIMenu *)_swiftEmptyArrayStorage;
  }
  sub_100100830(0, (unint64_t *)&unk_1015DAA00);
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v8.value.super.Class isa = 0;
  v8.is_nil = 0;
  uint64_t v4 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v3, (Swift::String_optional)0, v8, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v7).super.super.isa;
  NSString v5 = String._bridgeToObjectiveC()();
  [(objc_class *)v4 setAccessibilityIdentifier:v5];

  [(objc_class *)v4 setPreferredElementSize:1];
  return v4;
}

id sub_10030BAAC(char a1)
{
  if (a1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v24._uint64_t countAndFlagsBits = 0xD000000000000036;
    v24._object = (void *)0x8000000100F864D0;
    v3._uint64_t countAndFlagsBits = 0x7972617262694C5BLL;
    v3._object = (void *)0xED00006E6950205DLL;
    v4._uint64_t countAndFlagsBits = 7235920;
    v4._object = (void *)0xE300000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v24);
    uint64_t v5 = 0;
  }
  else
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v25._uint64_t countAndFlagsBits = 0xD000000000000040;
    v25._object = (void *)0x8000000100F86460;
    v6._uint64_t countAndFlagsBits = 0x7972617262694C5BLL;
    v6._object = (void *)0xEF6E69706E55205DLL;
    v7._uint64_t countAndFlagsBits = 0x6E69706E55;
    v7._object = (void *)0xE500000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)qword_101611820, v7, v25);
    uint64_t v5 = 2;
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self systemImageNamed:v8];

  uint64_t v10 = v1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16))
  {
    NSString v11 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v14 = *(void **)v10;
    uint64_t v13 = *(void *)(v10 + 8);
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v15;
    *(unsigned char *)(v12 + 24) = (a1 & 1) == 0;
    *(void *)(v12 + 32) = v14;
    *(void *)(v12 + 40) = v13;
    id v16 = v14;
    swift_unknownObjectRetain();
    NSString v11 = (Swift::Void (__swiftcall *)(DataSource *__struct_ptr, Swift::OpaquePointer))sub_10030CB84;
  }
  sub_100100830(0, &qword_1015DA9F8);
  uint64_t v23 = v12;
  id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  if (a1) {
    uint64_t v18 = 7235920;
  }
  else {
    uint64_t v18 = 0x6E69706E55;
  }
  if (a1) {
    unint64_t v19 = 0xE300000000000000;
  }
  else {
    unint64_t v19 = 0xE500000000000000;
  }
  unint64_t v20 = v19;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setAccessibilityIdentifier:v21];

  return v17;
}

uint64_t sub_10030BE40()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16) == 2)
  {
    id v2 = *(id *)v1;
    uint64_t v3 = *(void *)(v1 + 8);
    id v4 = *(id *)v1;
    id v5 = [v4 _maps_existingOfflineSubscription];

    sub_100100830(0, &qword_1015DA9F8);
    if (v5)
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v6._uint64_t countAndFlagsBits = 0xD000000000000023;
      v24._uint64_t countAndFlagsBits = 0xD000000000000064;
      v24._object = (void *)0x8000000100F86610;
      v6._object = (void *)0x8000000100F865E0;
      v7._uint64_t countAndFlagsBits = 0x656E696C66664FLL;
      v7._object = (void *)0xE700000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)qword_101611820, v7, v24);
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [self systemImageNamed:v8];

      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v10;
      *(unsigned char *)(v11 + 24) = 3;
      *(void *)(v11 + 32) = v4;
      id v12 = v4;
      uint64_t v23 = v11;
      id v13 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
    else
    {
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v15._uint64_t countAndFlagsBits = 0xD000000000000027;
      v25._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
      v25._object = (void *)0x8000000100F86540;
      v15._object = (void *)0x8000000100F86510;
      v16._uint64_t countAndFlagsBits = 0x64616F6C6E776F44;
      v16._object = (void *)0xE800000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)qword_101611820, v16, v25);
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [self systemImageNamed:v17];

      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(unsigned char *)(v20 + 24) = 4;
      *(void *)(v20 + 32) = v4;
      id v21 = v4;
      uint64_t v23 = v20;
      id v13 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
    NSString v22 = String._bridgeToObjectiveC()();
    [v13 setAccessibilityIdentifier:v22];

    sub_1002EE494(v2, v3, 2);
    return (uint64_t)v13;
  }
  else
  {
    sub_100100830(0, &qword_1015DA9F8);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
}

uint64_t type metadata accessor for LibraryListSavedItemCellModel()
{
  return self;
}

void destroy for LibraryListSavedItemCellModel.ItemType(uint64_t a1)
{
}

uint64_t _s4Maps29LibraryListSavedItemCellModelC8ItemTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1002F601C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LibraryListSavedItemCellModel.ItemType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1002F601C(*(id *)a2, v4, v5);
  Swift::String v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1002EE494(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LibraryListSavedItemCellModel.ItemType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1002EE494(v4, v5, v6);
  return a1;
}

uint64_t sub_10030C428(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryListSavedItemCellModel.ItemType()
{
  return &type metadata for LibraryListSavedItemCellModel.ItemType;
}

unsigned char *storeEnumTagSinglePayload for LibraryListSavedItemsManagementSectionCellModel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10030C50CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryListSavedItemsManagementSectionCellModel()
{
  return &type metadata for LibraryListSavedItemsManagementSectionCellModel;
}

unsigned char *storeEnumTagSinglePayload for LibraryListSectionIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10030C610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryListSectionIdentifier()
{
  return &type metadata for LibraryListSectionIdentifier;
}

unint64_t sub_10030C64C()
{
  unint64_t result = qword_1015DACD0;
  if (!qword_1015DACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DACD0);
  }
  return result;
}

unint64_t sub_10030C6A0(uint64_t a1)
{
  unint64_t result = sub_10030C6C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10030C6C8()
{
  unint64_t result = qword_1015DACF8;
  if (!qword_1015DACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DACF8);
  }
  return result;
}

unint64_t sub_10030C720()
{
  unint64_t result = qword_1015DAD00;
  if (!qword_1015DAD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAD00);
  }
  return result;
}

unint64_t sub_10030C774(uint64_t a1)
{
  unint64_t result = sub_10030C79C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10030C79C()
{
  unint64_t result = qword_1015DAD28;
  if (!qword_1015DAD28)
  {
    type metadata accessor for LibraryListSavedItemCellModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAD28);
  }
  return result;
}

void sub_10030C7F0(void *a1, uint64_t a2, char a3, void *a4, void *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    uint64_t v11 = swift_unknownObjectWeakLoadStrong();

    if (v11)
    {
      sub_1002EA544(a3, a1, a4, a5);
      swift_unknownObjectRelease();
    }
  }
}

void sub_10030C898(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();

    if (v8)
    {
      sub_1002EB01C(a3, a4);
      swift_unknownObjectRelease();
    }
  }
}

unint64_t sub_10030C928(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012D8140, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_10030C974(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012D81A8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10030C9C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

objc_class *sub_10030C9F8()
{
  return sub_10030B9A8();
}

uint64_t sub_10030CA14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10030CA54(uint64_t a1)
{
  sub_10030C898(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_10030CA70(void *a1)
{
  sub_10030C7F0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10030CA90()
{
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10030CAE0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10030CB20(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(uint64_t (**)(unsigned char *, uint64_t))(v2 + 16);
  sub_1000F2354(a1, (uint64_t)v7);
  uint64_t v5 = v4(v7, a2);
  sub_1001189D4((uint64_t)v7);
  return v5;
}

uint64_t sub_10030CD10(int a1, void *aBlock)
{
  v2[2] = _Block_copy(aBlock);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  v2[3] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1015DAD78 + dword_1015DAD78);
  unsigned int v6 = (void *)swift_task_alloc();
  v2[4] = v6;
  void *v6 = v2;
  v6[1] = sub_10030CDE0;
  return v8(v3, v5);
}

uint64_t sub_10030CDE0(void *a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_10030CF30(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Friend();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Handle();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  uint64_t v61 = v8;
  *(void *)&double v9 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a2 emailAddresses];
  id v12 = (void (*)(void, void))sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v55 = v5;
  uint64_t v56 = v4;
  uint64_t v53 = v12;
  id v54 = (id)a2;
  uint64_t v57 = a1;
  if (v14)
  {
    NSString v62 = _swiftEmptyArrayStorage;
    sub_10025AEF4(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v15 = 0;
    Swift::String v16 = v62;
    do
    {
      if ((v13 & 0xC000000000000001) != 0) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v13 + 8 * v15 + 32);
      }
      id v18 = v17;
      id v19 = [v17 value];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      NSString v62 = v16;
      unint64_t v24 = v16[2];
      unint64_t v23 = v16[3];
      if (v24 >= v23 >> 1)
      {
        sub_10025AEF4(v23 > 1, v24 + 1, 1);
        Swift::String v16 = v62;
      }
      ++v15;
      v16[2] = v24 + 1;
      Swift::String v25 = &v16[2 * v24];
      void v25[4] = v20;
      v25[5] = v22;
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    uint64_t v5 = v55;
    uint64_t v4 = v56;
  }
  else
  {
    swift_bridgeObjectRelease();
    Swift::String v16 = _swiftEmptyArrayStorage;
  }
  uint64_t v26 = v59;
  uint64_t v27 = v57;
  Friend.handle.getter();
  uint64_t v28 = Handle.identifier.getter();
  uint64_t v30 = v29;
  id v12 = *(void (**)(void, void))(v61 + 8);
  v61 += 8;
  v12(v26, v60);
  LOBYTE(v28) = sub_1002780A8(v28, v30, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v58, v27, v4);
  if (v28)
  {
    char v31 = 1;
LABEL_32:
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
    return v31 & 1;
  }
  id v32 = [v54 phoneNumbers];
  a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(a2 >> 62))
  {
    uint64_t v33 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v52 = (void (*)(char *, uint64_t))v12;
    if (v33) {
      goto LABEL_18;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    id v36 = _swiftEmptyArrayStorage;
LABEL_31:
    uint64_t v47 = v59;
    Friend.handle.getter();
    uint64_t v48 = Handle.identifier.getter();
    uint64_t v50 = v49;
    v52(v47, v60);
    char v31 = sub_1002780A8(v48, v50, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
LABEL_29:
  swift_bridgeObjectRetain();
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v52 = (void (*)(char *, uint64_t))v12;
  if (!v33) {
    goto LABEL_30;
  }
LABEL_18:
  NSString v62 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10025AEF4(0, v33 & ~(v33 >> 63), 0);
  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = 0;
    id v36 = v62;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v37 = *(id *)(a2 + 8 * v35 + 32);
      }
      NSString v38 = v37;
      id v39 = [v37 value];
      id v40 = [v39 stringValue];

      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v42;

      NSString v62 = v36;
      unint64_t v45 = v36[2];
      unint64_t v44 = v36[3];
      if (v45 >= v44 >> 1)
      {
        sub_10025AEF4(v44 > 1, v45 + 1, 1);
        id v36 = v62;
      }
      ++v35;
      void v36[2] = v45 + 1;
      id v46 = &v36[2 * v45];
      v46[4] = v41;
      uint64_t v46[5] = v43;
    }
    while (v33 != v35);
    swift_bridgeObjectRelease();
    uint64_t v5 = v55;
    uint64_t v4 = v56;
    uint64_t v14 = (uint64_t)v58;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_10030D600(void *a1, void *aBlock)
{
  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  uint64_t v7 = (uint64_t (*)(id))((char *)&dword_1015DAD40 + dword_1015DAD40);
  id v4 = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_100239C60;
  return v7(v4);
}

uint64_t sub_10030D6CC()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100105268;
  uint64_t v5 = (uint64_t (*)(void *, void *))((char *)&dword_1015DAD30 + dword_1015DAD30);
  return v5(v2, v3);
}

uint64_t sub_10030D780()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_101611CF0);
  sub_1000F2248(v0, (uint64_t)qword_101611CF0);
  return Logger.init(subsystem:category:)();
}

unint64_t sub_10030D804(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000FF33C(&qword_1015DAD80);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10030D918(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10030D918(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10030D990(a1, a2, v4);
}

unint64_t sub_10030D990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_10030DAE0(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  sub_1000FF33C(&qword_1015D9920);
  v2[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Location();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ClientOrigin();
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v2[21] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  v2[22] = v5;
  v2[23] = *(void *)(v5 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return _swift_task_switch(sub_10030DCD4, 0, 0);
}

uint64_t sub_10030DCD4()
{
  uint64_t v29 = v0;
  if (qword_1015CBFC0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[13].unint64_t receiver = (id)sub_1000F2248(v1, (uint64_t)qword_101611CF0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t receiver = (unint64_t)v0[6].receiver;
  if (v4)
  {
    uint64_t super_class = (uint64_t)v0[5].super_class;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[5].unint64_t receiver = (id)sub_1000F2280(super_class, receiver, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Will build MapsAutoCompletePerson for Find My handle identifier %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  Class v8 = v0[12].super_class;
  id v9 = v0[11].receiver;
  Class v10 = v0[11].super_class;
  Class v11 = v0[9].super_class;
  id v26 = v0[10].receiver;
  id v27 = v0[9].receiver;
  MyHandle = (objc_class *)type metadata accessor for MapsFindMyHandle();
  id v13 = objc_allocWithZone(MyHandle);
  swift_bridgeObjectRetain();
  id v14 = v13;
  sub_10030D804((uint64_t)_swiftEmptyArrayStorage);
  Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)();
  (*((void (**)(uint64_t, Class, id))v10 + 4))((uint64_t)v14 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v8, v9);

  v0[1].unint64_t receiver = v14;
  v0[1].uint64_t super_class = MyHandle;
  uint64_t v15 = (objc_class *)[v0 + 1 init];
  uint64_t v16 = OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle;
  v0[13].uint64_t super_class = v15;
  v0[14].unint64_t receiver = (id)v16;
  Swift::String v25 = (char *)v15 + v16;
  id v17 = (objc_class *)*((void *)v10 + 2);
  v0[14].uint64_t super_class = v17;
  v0[15].unint64_t receiver = (id)(((unint64_t)v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
  ((void (*)(Class))v17)(v8);
  id v18 = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
  id v19 = (char *)objc_allocWithZone(v18);
  UUID.init()();
  ((void (*)(char *, Class, id))v17)(&v19[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v8, v9);

  v0[2].unint64_t receiver = v19;
  v0[2].uint64_t super_class = v18;
  v0[15].uint64_t super_class = (Class)[v0 + 2 init];
  uint64_t v20 = (void (*)(void, void))*((void *)v10 + 1);
  Class v10 = (Class)((char *)v10 + 8);
  v0[16].unint64_t receiver = v20;
  v0[16].uint64_t super_class = (Class)((unint64_t)v10 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
  v20(v8, v9);
  (*((void (**)(id, void, id))v11 + 13))(v26, enum case for ClientOrigin.other(_:), v27);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[17].unint64_t receiver = (id)Session.init(_:)();
  sub_1000FF33C(&qword_1015D4850);
  unint64_t v21 = (*((unsigned __int8 *)v10 + 72) + 32) & ~(unint64_t)*((unsigned __int8 *)v10 + 72);
  uint64_t v22 = swift_allocObject();
  v0[17].uint64_t super_class = (Class)v22;
  *(_OWORD *)(v22 + 16) = xmmword_100F5CF70;
  ((void (*)(unint64_t, char *, id))v17)(v22 + v21, v25, v9);
  unint64_t v23 = (void *)swift_task_alloc();
  v0[18].unint64_t receiver = v23;
  *unint64_t v23 = v0;
  v23[1] = sub_10030E14C;
  return Session.locations(for:reverseGeocode:)(v22, 0);
}

uint64_t sub_10030E14C(uint64_t a1)
{
  *(void *)(*(void *)v2 + 296) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_errorRelease();
    os_log_type_t v3 = sub_10030E73C;
  }
  else
  {
    os_log_type_t v3 = sub_10030E288;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030E288()
{
  uint64_t v1 = *(void *)(v0 + 296);
  (*(void (**)(void, void, void))(v0 + 232))(*(void *)(v0 + 192), *(void *)(v0 + 216) + *(void *)(v0 + 224), *(void *)(v0 + 176));
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1001EA9E0(*(void *)(v0 + 192)), (v3 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 120) + 16))(*(void *)(v0 + 104), *(void *)(*(void *)(v0 + 296) + 56) + *(void *)(*(void *)(v0 + 120) + 72) * v2, *(void *)(v0 + 112));
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, v4, 1, v8);
  swift_bridgeObjectRelease();
  v5(v6, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    sub_1000FF2E0(*(void *)(v0 + 104), &qword_1015D9920);
    Class v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    id v14 = *(void **)(v0 + 248);
    uint64_t v15 = *(void **)(v0 + 216);
    if (v13)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to get location from Find My", v16, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    id v42 = 0;
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 104), *(void *)(v0 + 112));
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Got location from Find My", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = *(void **)(v0 + 248);
    unint64_t v45 = *(void **)(v0 + 216);
    uint64_t v22 = *(char **)(v0 + 128);
    unint64_t v21 = *(char **)(v0 + 136);
    id v46 = v21;
    uint64_t v24 = *(void *)(v0 + 112);
    uint64_t v23 = *(void *)(v0 + 120);

    Swift::String v25 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v25(v22, (uint64_t)v21, v24);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    id v27 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()();
    v25(&v27[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], (uint64_t)v22, v24);

    *(void *)(v0 + 48) = v27;
    *(void *)(v0 + 56) = MyLocation;
    id v28 = [super init];
    uint64_t v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v29(v22, v24);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    char v31 = (char *)objc_allocWithZone(MyLocationHandle);
    uint64_t v32 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(void *)&v31[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(void *)&v31[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v20;
    uint64_t v33 = *(void **)&v31[v32];
    *(void *)&v31[v32] = v28;
    id v34 = v20;
    id v35 = v28;
    id v36 = v34;
    id v37 = v35;

    *(void *)(v0 + 64) = v31;
    *(void *)(v0 + 72) = MyLocationHandle;
    [v0 init];

    id v39 = sub_10023F6AC();
    id v40 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    id v41 = v38;
    id v42 = sub_100326AB8(v39, 0, v38, 0);

    swift_release();
    v29(v46, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(id))(v0 + 8);
  return v43(v42);
}

uint64_t sub_10030E73C()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[27];
  if (v3)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to get location from Find My", v6, 2u);
    swift_slowDealloc();
    swift_release();

    uint64_t v5 = v1;
  }
  else
  {

    swift_release();
    uint64_t v4 = v1;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7(0);
}

uint64_t sub_10030E890(uint64_t a1)
{
  v1[10] = a1;
  sub_1000FF33C(&qword_1015D9920);
  v1[11] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Location();
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Handle();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  sub_1000FF33C(&qword_1015DAD48);
  v1[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Friend();
  v1[21] = v4;
  v1[22] = *(void *)(v4 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  sub_1000FF33C(&qword_1015DAD50);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ClientOrigin();
  v1[28] = v5;
  v1[29] = *(void *)(v5 - 8);
  v1[30] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v1[31] = swift_task_alloc();
  return _swift_task_switch(sub_10030EB6C, 0, 0);
}

uint64_t sub_10030EB6C()
{
  if (qword_1015CBFC0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = type metadata accessor for Logger();
  v0[32] = sub_1000F2248(v2, (uint64_t)qword_101611CF0);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[10];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    v0[9] = v7;
    id v9 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v18 = v7;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Will build MapsAutoCompletePerson for contact %@", v8, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v10 = v0[27];
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[10];
  (*(void (**)(void, void, void))(v0[29] + 104))(v0[30], enum case for ClientOrigin.other(_:), v0[28]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[33] = Session.init(_:)();
  id v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v0[34] = v14;
  v0[35] = (v12 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v14(v10, 1, 1, v11);
  uint64_t v15 = swift_task_alloc();
  v0[36] = v15;
  *(void *)(v15 + 16) = v13;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[37] = v16;
  void *v16 = v0;
  v16[1] = sub_10030EE3C;
  return Session.friendsSharingLocationsWithMe(filter:)(sub_10031010C, v15);
}

uint64_t sub_10030EE3C(uint64_t a1)
{
  *(void *)(*(void *)v2 + 304) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    swift_task_dealloc();
    id v3 = sub_10030FC50;
  }
  else
  {
    swift_task_dealloc();
    id v3 = sub_10030EF8C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030EF8C()
{
  uint64_t v47 = v0;
  uint64_t v1 = v0[38];
  if (*(void *)(v1 + 16))
  {
    (*(void (**)(void, unint64_t, void))(v0[22] + 16))(v0[20], v1 + ((*(unsigned __int8 *)(v0[22] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[22] + 80)), v0[21]);
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 1;
  }
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[20];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, v2, 1, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_1000FF2E0(v0[20], &qword_1015DAD48);
  }
  else
  {
    uint64_t v7 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v8 = v0[21];
    uint64_t v9 = v0[22];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v6, v0[20], v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v14 = v0[22];
    uint64_t v13 = v0[23];
    if (v12)
    {
      uint64_t v15 = v0[19];
      uint64_t v16 = v0[17];
      uint64_t v42 = v0[16];
      loga = v10;
      uint64_t v43 = v0[21];
      id v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)id v17 = 136315138;
      Friend.handle.getter();
      uint64_t v18 = Handle.identifier.getter();
      unint64_t v20 = v19;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v42);
      v0[8] = sub_1000F2280(v18, v20, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v21(v13, v43);
      uint64_t v10 = loga;
      _os_log_impl((void *)&_mh_execute_header, loga, v11, "Found matching Find My handle %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v21(v0[23], v0[21]);
    }

    uint64_t v22 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[34];
    uint64_t v24 = v0[26];
    uint64_t v23 = v0[27];
    uint64_t v25 = v0[24];
    uint64_t v26 = v0[21];
    uint64_t v27 = v0[16];
    Friend.handle.getter();
    v21(v25, v26);
    sub_1000FF2E0(v23, &qword_1015DAD50);
    v22(v24, 0, 1, v27);
    sub_10031017C(v24, v23);
  }
  uint64_t v28 = v0[25];
  uint64_t v29 = v0[16];
  uint64_t v30 = v0[17];
  sub_100310114(v0[27], v28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    sub_1000FF2E0(v0[25], &qword_1015DAD50);
    char v31 = (void *)v0[10];
    objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    id v32 = v31;
    os_log_t log = (os_log_t)sub_100326AB8(v31, 0, 0, 0);

    swift_release();
    sub_1000FF2E0(v0[27], &qword_1015DAD50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(os_log_t))v0[1];
    return v33(log);
  }
  else
  {
    uint64_t v36 = v0[17];
    uint64_t v35 = v0[18];
    uint64_t v37 = v0[16];
    (*(void (**)(uint64_t, void, uint64_t))(v36 + 32))(v35, v0[25], v37);
    sub_1000FF33C(&qword_1015D4850);
    unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v39 = swift_allocObject();
    v0[39] = v39;
    *(_OWORD *)(v39 + 16) = xmmword_100F5CF70;
    id v40 = *(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 16);
    v0[40] = v40;
    v0[41] = (v36 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v40(v39 + v38, v35, v37);
    id v41 = (void *)swift_task_alloc();
    v0[42] = v41;
    void *v41 = v0;
    v41[1] = sub_10030F528;
    return Session.locations(for:reverseGeocode:)(v39, 0);
  }
}

uint64_t sub_10030F528(uint64_t a1)
{
  *(void *)(*(void *)v2 + 344) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v3 = sub_10030FF14;
  }
  else
  {
    uint64_t v3 = sub_10030F664;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030F664()
{
  if (*(void *)(*(void *)(v0 + 344) + 16) && (unint64_t v1 = sub_1001EA9E0(*(void *)(v0 + 144)), (v2 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 104) + 16))(*(void *)(v0 + 88), *(void *)(*(void *)(v0 + 344) + 56) + *(void *)(*(void *)(v0 + 104) + 72) * v1, *(void *)(v0 + 96));
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    sub_1000FF2E0(*(void *)(v0 + 88), &qword_1015D9920);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 128);
    if (v9)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to get location from Find My", v13, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    uint64_t v14 = *(void **)(v0 + 80);
    objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    id v15 = v14;
    uint64_t v53 = (objc_super *)sub_100326AB8(v14, 0, 0, 0);

    swift_release();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 88), *(void *)(v0 + 96));
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Got location from Find My", v18, 2u);
      swift_slowDealloc();
    }
    unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 144);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v51 = v20;
    uint64_t v22 = *(void *)(v0 + 128);
    uint64_t v54 = *(void *)(v0 + 136);
    uint64_t v23 = *(void *)(v0 + 120);
    uint64_t v47 = v23;
    uint64_t v45 = *(void *)(v0 + 112);
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v52 = *(void *)(v0 + 96);
    uint64_t v50 = *(void **)(v0 + 80);

    v19(v21, v20, v22);
    MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    uint64_t v26 = (char *)objc_allocWithZone(MyHandle);
    UUID.init()();
    uint64_t v48 = v22;
    v19((uint64_t)&v26[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v21, v22);

    *(void *)(v0 + 16) = v26;
    *(void *)(v0 + 24) = MyHandle;
    id v46 = [super init];
    uint64_t v49 = *(objc_super **)(v54 + 8);
    ((void (*)(uint64_t, uint64_t))v49)(v21, v22);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    v27(v45, v23, v52);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    uint64_t v29 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()();
    v27((uint64_t)&v29[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v45, v52);

    *(void *)(v0 + 32) = v29;
    *(void *)(v0 + 40) = MyLocation;
    [v0 initWith];
    char v31 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v31(v45, v52);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    uint64_t v33 = (char *)objc_allocWithZone(MyLocationHandle);
    uint64_t v34 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(void *)&v33[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(void *)&v33[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v46;
    uint64_t v35 = *(void **)&v33[v34];
    *(void *)&v33[v34] = v30;
    id v36 = v46;
    id v37 = v30;
    id v38 = v36;
    id v39 = v37;

    *(void *)(v0 + 48) = v33;
    *(void *)(v0 + 56) = MyLocationHandle;
    [v0 init];

    objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    id v41 = v50;
    id v42 = v40;
    uint64_t v53 = (objc_super *)sub_100326AB8(v50, 0, v40, 0);

    swift_release();
    v31(v47, v52);
    ((void (*)(uint64_t, uint64_t))v49)(v51, v48);
  }
  sub_1000FF2E0(*(void *)(v0 + 216), &qword_1015DAD50);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(objc_super *))(v0 + 8);
  return v43(v53);
}

uint64_t sub_10030FC50()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  sub_100310114(v0[27], v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000FF2E0(v0[25], &qword_1015DAD50);
    uint64_t v4 = (void *)v0[10];
    id v5 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    id v6 = v4;
    id v16 = sub_100326AB8(v4, 0, 0, 0);
    swift_release();

    sub_1000FF2E0(v0[27], &qword_1015DAD50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(id))v0[1];
    return v7(v16);
  }
  else
  {
    uint64_t v10 = v0[17];
    uint64_t v9 = v0[18];
    uint64_t v11 = v0[16];
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 32))(v9, v0[25], v11);
    sub_1000FF33C(&qword_1015D4850);
    unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v13 = swift_allocObject();
    v0[39] = v13;
    *(_OWORD *)(v13 + 16) = xmmword_100F5CF70;
    uint64_t v14 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16);
    v0[40] = v14;
    v0[41] = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v14(v13 + v12, v9, v11);
    id v15 = (void *)swift_task_alloc();
    v0[42] = v15;
    *id v15 = v0;
    v15[1] = sub_10030F528;
    return Session.locations(for:reverseGeocode:)(v13, 0);
  }
}

uint64_t sub_10030FF14()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v5 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v6 = v0[16];
  if (v3)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to get location from Find My", v7, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  os_log_type_t v8 = (void *)v0[10];
  id v9 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
  id v10 = v8;
  id v13 = sub_100326AB8(v8, 0, 0, 0);

  swift_release();
  sub_1000FF2E0(v0[27], &qword_1015DAD50);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(id))v0[1];
  return v11(v13);
}

uint64_t sub_10031010C(uint64_t a1)
{
  return sub_10030CF30(a1, *(void *)(v1 + 16));
}

uint64_t sub_100310114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DAD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031017C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DAD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003101E8()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100310228()
{
  uint64_t v2 = *(void *)(v0 + 16);
  BOOL v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10005056C;
  uint64_t v5 = (uint64_t (*)(int, void *))((char *)&dword_1015DAD58 + dword_1015DAD58);
  return v5(v2, v3);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitName()
{
  return &type metadata for PlaceSummaryUnitName;
}

long long *FavoriteCollectionHandler.title.unsafeMutableAddressor()
{
  if (qword_1015CBFC8 != -1) {
    swift_once();
  }
  return &static FavoriteCollectionHandler.title;
}

void *FavoriteCollectionHandler.FavoriteCollectionIdentifier.unsafeMutableAddressor()
{
  return &static FavoriteCollectionHandler.FavoriteCollectionIdentifier;
}

unint64_t FavoriteCollectionHandler.identifier.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_100310368()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v0._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v4._object = (void *)0x8000000100F86D40;
  v0._object = (void *)0x8000000100F86D20;
  v1._uint64_t countAndFlagsBits = 0x657469726F766146;
  v1._object = (void *)0xE900000000000073;
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v4);
  uint64_t result = v3._countAndFlagsBits;
  static FavoriteCollectionHandler.title = (__int128)v3;
  return result;
}

uint64_t _s4Maps25FavoriteCollectionHandlerC5titleSSvgZ_0()
{
  if (qword_1015CBFC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = static FavoriteCollectionHandler.title;
  swift_bridgeObjectRetain();
  return v0;
}

id FavoriteCollectionHandler._glyphImage.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self systemImageNamed:v4];

    if (v5)
    {
      id v3 = [v5 imageWithRenderingMode:2];
    }
    else
    {
      id v3 = 0;
    }
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v7 = v3;
    sub_10010B3BC(v6);
  }
  sub_1000F41B8(v2);
  return v3;
}

void FavoriteCollectionHandler._glyphImage.setter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage);
  *(void *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage) = a1;
  sub_10010B3BC(v2);
}

void (*FavoriteCollectionHandler._glyphImage.modify(id *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = FavoriteCollectionHandler._glyphImage.getter();
  return sub_1003108B4;
}

void sub_1003108B4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  NSString v4 = *(void **)(v3 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage);
  *(void *)(v3 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage) = *(void *)a1;
  if (a2)
  {
    id v5 = v2;
    sub_10010B3BC(v4);
  }
  else
  {
    sub_10010B3BC(v4);
  }
}

uint64_t FavoriteCollectionHandler.canShare.getter()
{
  uint64_t result = GEOConfigGetBOOL();
  if (result) {
    return [v0 isEmpty] ^ 1;
  }
  return result;
}

uint64_t FavoriteCollectionHandler.sharingURL.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 sharingURLFromContainedMapItems];
  if (v3)
  {
    NSString v4 = v3;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

BOOL FavoriteCollectionHandler.beingModified.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount) > 0;
}

id FavoriteCollectionHandler.__deallocating_deinit()
{
  uint64_t v1 = v0;
  type metadata accessor for MapsSyncStore();
  uint64_t v2 = (void *)static MapsSyncStore.sharedStore.getter();
  id v3 = v1;
  dispatch thunk of MapsSyncStore.unsubscribe(_:)();

  v5.unint64_t receiver = v3;
  v5.uint64_t super_class = (Class)type metadata accessor for FavoriteCollectionHandler();
  return [super dealloc];
}

Swift::Bool __swiftcall FavoriteCollectionHandler.contains(_:)(MKMapItem a1)
{
  v6.unint64_t receiver = v1;
  v6.uint64_t super_class = (Class)type metadata accessor for FavoriteCollectionHandler();
  [v6 itemForMapItem:a1.super.isa];
  id v4 = v3;
  if (v3) {

  }
  return v4 != 0;
}

uint64_t FavoriteCollectionHandler.add(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v30 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100315AEC;
  *(void *)(v12 + 24) = v11;
  id v40 = sub_10010B938;
  id v41 = (void *)v12;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  id v38 = sub_10010B988;
  id v39 = &unk_1012E3FA8;
  id v13 = _Block_copy(&aBlock);
  id v14 = v3;
  swift_retain();
  swift_release();
  id v15 = v10;
  id v16 = v13;
  uint64_t v17 = v15;
  label = dispatch_queue_get_label(v17);
  unint64_t v19 = dispatch_queue_get_label(0);
  if (label == v19)
  {

LABEL_7:
    v16[2](v16);
    goto LABEL_10;
  }
  if (label && v19)
  {
    int v20 = strcmp(label, v19);

    if (!v20) {
      goto LABEL_7;
    }
  }
  else
  {
  }
  dispatch_sync(v17, v16);
LABEL_10:

  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v26 = v31;
    v25[2] = v30;
    void v25[3] = v14;
    uint64_t v27 = v32;
    void v25[4] = v26;
    v25[5] = v27;
    id v40 = sub_100315B04;
    id v41 = v25;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v37 = 1107296256;
    id v38 = sub_10008C380;
    id v39 = &unk_1012E3FF8;
    uint64_t v28 = _Block_copy(&aBlock);
    id v29 = v14;
    swift_bridgeObjectRetain();
    sub_1000F4F24(v26);
    swift_release();
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10010B9B0();
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010B554();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  }
  return result;
}

void sub_100311390(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v137 = a4;
  char v138 = a3;
  unint64_t v139 = a2;
  uint64_t v5 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v5 - 8);
  uint64_t v136 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v151 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v134 = (char *)&v130 - v13;
  __chkstk_darwin(v14);
  uint64_t v132 = (char *)&v130 - v15;
  __chkstk_darwin(v16);
  unint64_t v130 = (char *)&v130 - v17;
  uint64_t v152 = type metadata accessor for UUID();
  __chkstk_darwin(v152);
  uint64_t v147 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v133 = (char *)&v130 - v20;
  __chkstk_darwin(v21);
  unint64_t v135 = (char *)&v130 - v23;
  uint64_t v25 = a1 + 56;
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v26 = 1 << *(unsigned char *)(a1 + 32);
  unint64_t v158 = (unint64_t)_swiftEmptyArrayStorage;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & v24;
  int64_t v156 = (unint64_t)(v26 + 63) >> 6;
  Swift::Int v146 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v149 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v22 + 32);
  uint64_t v131 = (void (**)(char *, char *, uint64_t))(v22 + 16);
  BOOL v143 = (void (**)(char *, uint64_t))(v22 + 8);
  swift_bridgeObjectRetain();
  int64_t v29 = 0;
  uint64_t v148 = 0;
  long long v142 = xmmword_100F5CF70;
  unint64_t v141 = 0x8000000100F86D00;
  uint64_t v154 = a1 + 56;
  uint64_t v155 = a1;
  uint64_t v140 = v9;
  while (1)
  {
    if (v28)
    {
      unint64_t v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v31 = v30 | (v29 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v29++, 1))
    {
      __break(1u);
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    if (v29 >= v156) {
      goto LABEL_92;
    }
    unint64_t v33 = *(void *)(v25 + 8 * v29);
    if (!v33) {
      break;
    }
LABEL_18:
    unint64_t v28 = (v33 - 1) & v33;
    unint64_t v31 = __clz(__rbit64(v33)) + (v29 << 6);
LABEL_19:
    sub_10010A768(*(void *)(a1 + 48) + 40 * v31, (uint64_t)aBlock);
    v35.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_1000F351C((uint64_t)aBlock);
    self;
    id v36 = (void *)swift_dynamicCastObjCClass();
    if (v36 && (uint64_t v37 = v36, (v38 = [v36 _geoMapItem]) != 0))
    {
      id v39 = [self mapItemStorageForGEOMapItem:v38];
      if (v39)
      {
        id v40 = v39;
        id v41 = [self existingCollectionItemForMapItem:v37 error:0];
        if (v41)
        {
          id v42 = v41;
          if ((dispatch thunk of CollectionPlaceItem.type.getter() & 1) == 0)
          {
            int v43 = dispatch thunk of CollectionPlaceItem.type.getter() | 1;
            id v44 = [(id)swift_unknownObjectRetain() _clientAttributes];
            if (v44
              && (uint64_t v45 = v44,
                  LODWORD(v153) = v43,
                  id v46 = [v44 mapsSyncAttributes],
                  v45,
                  v46)
              && (id v47 = [v46 mapsSyncObjectType],
                  v46,
                  v47))
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v48 = (NSString *)String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              Class v49 = NSClassFromString(v48);
              swift_unknownObjectRelease();

              if (v49)
              {
                uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
                if (ObjCClassMetadata == type metadata accessor for FavoriteItem())
                {
                  id v96 = [(id)swift_unknownObjectRetain() _clientAttributes];
                  if (v96
                    && (Swift::String v97 = v96,
                        id v98 = [v96 mapsSyncAttributes],
                        v97,
                        v98)
                    && (id v99 = [v98 mapsSyncIdentifier],
                        v98,
                        v99))
                  {
                    static String._unconditionallyBridgeFromObjectiveC(_:)();

                    uint64_t v100 = v130;
                    UUID.init(uuidString:)();
                    uint64_t v101 = (uint64_t)v100;
                    swift_bridgeObjectRelease();
                    uint64_t v102 = v152;
                  }
                  else
                  {
                    uint64_t v101 = (uint64_t)v130;
                    uint64_t v102 = v152;
                    (*v146)(v130, 1, 1, v152);
                  }
                  swift_unknownObjectRelease();
                  if ((*v149)(v101, 1, v102) == 1)
                  {
                    sub_1001CD2E0(v101);
                  }
                  else
                  {
                    (*v144)(v135, v101, v102);
                    unint64_t v105 = v132;
                    (*v131)(v132, v135, v102);
                    (*v146)(v105, 0, 1, v102);
                    dispatch thunk of CollectionPlaceItem.originalIdentifier.setter();
                    (*v143)(v135, v102);
                  }
                }
              }
            }
            else
            {
              swift_unknownObjectRelease();
            }
            dispatch thunk of CollectionPlaceItem.type.setter();
            id v91 = v42;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            goto LABEL_68;
          }

          swift_unknownObjectRelease();
        }
        else
        {
          type metadata accessor for CollectionPlaceItem();
          id v51 = (id)MapsSyncObject.__allocating_init()();
          id v153 = v40;
          dispatch thunk of CollectionPlaceItem.mapItemStorage.setter();
          dispatch thunk of CollectionPlaceItem.type.getter();
          id v52 = [(id)swift_unknownObjectRetain() _clientAttributes];
          if (v52
            && (uint64_t v53 = v52,
                id v54 = [v52 mapsSyncAttributes],
                v53,
                v54)
            && (id v55 = [v54 mapsSyncObjectType], v54,
                                                                                                   v55))
          {
            id v150 = v51;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v56 = (NSString *)String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            Class v57 = NSClassFromString(v56);
            swift_unknownObjectRelease();

            if (v57)
            {
              uint64_t v58 = swift_getObjCClassMetadata();
              uint64_t v59 = type metadata accessor for FavoriteItem();
              id v51 = v150;
              if (v58 == v59)
              {
                id v60 = [(id)swift_unknownObjectRetain() _clientAttributes];
                if (v60
                  && (uint64_t v61 = v60,
                      id v62 = [v60 mapsSyncAttributes],
                      v61,
                      v62)
                  && (id v63 = [v62 mapsSyncIdentifier],
                      v62,
                      v63))
                {
                  static String._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v64 = (uint64_t)v134;
                  UUID.init(uuidString:)();
                  swift_bridgeObjectRelease();
                  uint64_t v65 = v152;
                }
                else
                {
                  uint64_t v64 = (uint64_t)v134;
                  uint64_t v65 = v152;
                  (*v146)(v134, 1, 1, v152);
                }
                swift_unknownObjectRelease();
                if ((*v149)(v64, 1, v65) == 1)
                {
                  sub_1001CD2E0(v64);
                  id v51 = v150;
                }
                else
                {
                  uint64_t v103 = v133;
                  (*v144)(v133, v64, v65);
                  uint64_t v104 = v132;
                  (*v131)(v132, v103, v65);
                  (*v146)(v104, 0, 1, v65);
                  id v51 = v150;
                  dispatch thunk of CollectionPlaceItem.originalIdentifier.setter();
                  (*v143)(v133, v65);
                }
              }
            }
            else
            {
              id v51 = v150;
            }
          }
          else
          {
            swift_unknownObjectRelease();
          }
          dispatch thunk of CollectionPlaceItem.type.setter();
          id v66 = [v37 name];
          if (v66)
          {
            id v67 = v66;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          uint64_t v68 = (uint64_t)v151;
          dispatch thunk of CollectionPlaceItem.customName.setter();
          id v69 = [(id)swift_unknownObjectRetain() _clientAttributes];
          if (v69
            && (id v70 = v69,
                id v71 = [v69 mapsSyncAttributes],
                v70,
                v71)
            && (id v72 = [v71 mapsSyncIdentifier], v71,
                                                                                                   v72))
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            UUID.init(uuidString:)();
            uint64_t v68 = (uint64_t)v151;
            swift_bridgeObjectRelease();
            uint64_t v73 = v152;
          }
          else
          {
            uint64_t v73 = v152;
            (*v146)((char *)v68, 1, 1, v152);
          }
          swift_unknownObjectRelease();
          if ((*v149)(v68, 1, v73) != 1)
          {
            id v150 = v51;
            (*v144)(v147, v68, v73);
            type metadata accessor for MapsSyncQueryPredicate();
            sub_1000FF33C((uint64_t *)&unk_1015D59C0);
            uint64_t v74 = swift_allocObject();
            *(_OWORD *)(v74 + 16) = v142;
            Class isa = UUID._bridgeToObjectiveC()().super.isa;
            *(void *)(v74 + 56) = sub_100100830(0, &qword_1015DA418);
            *(void *)(v74 + 64) = sub_1002E8A6C();
            *(void *)(v74 + 32) = isa;
            id v76 = NSPredicate.init(format:_:)();
            id v77 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
            id v78 = v76;
            id v79 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
            type metadata accessor for FavoriteItemRequest();
            id v80 = (void *)FavoriteItemRequest.__allocating_init()();
            id v81 = v79;
            uint64_t v82 = v148;
            uint64_t v83 = dispatch thunk of FavoriteItemRequest.fetchSync(options:)();
            id v145 = v78;
            if (v82)
            {
              swift_errorRelease();

              uint64_t v148 = 0;
              uint64_t v84 = v140;
              goto LABEL_58;
            }
            unint64_t v92 = v83;
            uint64_t v148 = 0;

            uint64_t v84 = v140;
            if (!(v92 >> 62))
            {
              if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_71;
              }
LABEL_90:
              swift_bridgeObjectRelease();
LABEL_58:
              uint64_t v85 = v152;
              goto LABEL_59;
            }
            swift_bridgeObjectRetain();
            uint64_t v106 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v106) {
              goto LABEL_90;
            }
LABEL_71:
            if ((v92 & 0xC000000000000001) != 0)
            {
              id v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_113;
              }
              id v93 = *(id *)(v92 + 32);
            }
            Swift::String v94 = v93;
            swift_bridgeObjectRelease();
            uint64_t v85 = v152;
            if (v94)
            {
              id v87 = v150;
              id v95 = v150;
              id v89 = v94;
              dispatch thunk of MapsSyncObject.createTime.getter();
            }
            else
            {
LABEL_59:
              uint64_t v86 = type metadata accessor for Date();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v84, 1, 1, v86);
              id v87 = v150;
              id v88 = v150;
              id v89 = 0;
            }
            id v51 = v87;
            dispatch thunk of MapsSyncObject.createTime.setter();

            (*v143)(v147, v85);
            goto LABEL_61;
          }
          sub_1001CD2E0(v68);
LABEL_61:
          id v90 = v51;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

LABEL_68:
          swift_unknownObjectRelease();
          uint64_t v25 = v154;
          a1 = v155;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
  int64_t v34 = v29 + 1;
  if (v29 + 1 >= v156) {
    goto LABEL_92;
  }
  unint64_t v33 = *(void *)(v25 + 8 * v34);
  if (v33) {
    goto LABEL_17;
  }
  int64_t v34 = v29 + 2;
  if (v29 + 2 >= v156) {
    goto LABEL_92;
  }
  unint64_t v33 = *(void *)(v25 + 8 * v34);
  if (v33)
  {
LABEL_17:
    int64_t v29 = v34;
    goto LABEL_18;
  }
  int64_t v34 = v29 + 3;
  if (v29 + 3 < v156)
  {
    unint64_t v33 = *(void *)(v25 + 8 * v34);
    if (!v33)
    {
      while (1)
      {
        int64_t v29 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          goto LABEL_110;
        }
        if (v29 >= v156) {
          goto LABEL_92;
        }
        unint64_t v33 = *(void *)(v25 + 8 * v29);
        ++v34;
        if (v33) {
          goto LABEL_18;
        }
      }
    }
    goto LABEL_17;
  }
LABEL_92:
  swift_release();
  if (!(v158 >> 62))
  {
    uint64_t v107 = *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_94;
  }
LABEL_111:
  swift_bridgeObjectRetain();
  uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_94:
  BOOL v108 = v139;
  if (v107 > 0)
  {
    uint64_t v109 = type metadata accessor for TaskPriority();
    uint64_t v110 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v136, 1, 1, v109);
    type metadata accessor for MainActor();
    id v111 = v108;
    uint64_t v112 = v138;
    uint64_t v113 = v137;
    sub_1000F4F24((uint64_t)v138);
    uint64_t v114 = static MainActor.shared.getter();
    unint64_t v115 = v158;
    uint64_t v116 = (void *)swift_allocObject();
    v116[2] = v114;
    v116[3] = &protocol witness table for MainActor;
    v116[4] = v115;
    v116[5] = v111;
    v116[6] = v112;
    v116[7] = v113;
    sub_100042AF4(v110, (uint64_t)&unk_1015DADF8, (uint64_t)v116);
    swift_release();
    return;
  }
  swift_bridgeObjectRelease();
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v117 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v118 = swift_allocObject();
  *(void *)(v118 + 16) = v108;
  uint64_t v119 = swift_allocObject();
  *(void *)(v119 + 16) = sub_100315DC0;
  *(void *)(v119 + 24) = v118;
  aBlock[4] = sub_100315FB0;
  aBlock[5] = v119;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010B988;
  aBlock[3] = &unk_1012E42F0;
  uint64_t v120 = _Block_copy(aBlock);
  id v121 = v108;
  swift_retain();
  swift_release();
  id v122 = v117;
  uint64_t v123 = v120;
  uint64_t v124 = v122;
  label = dispatch_queue_get_label(v124);
  unint64_t v126 = dispatch_queue_get_label(0);
  if (label == v126)
  {

    goto LABEL_102;
  }
  if (label && v126)
  {
    int v127 = strcmp(label, v126);

    if (!v127)
    {
LABEL_102:
      v123[2](v123);
      goto LABEL_105;
    }
  }
  else
  {
  }
  dispatch_sync(v124, v123);
LABEL_105:

  _Block_release(v123);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
LABEL_113:
    __break(1u);
    return;
  }
  if (v138) {
    v138(0);
  }
}

uint64_t sub_100312620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = type metadata accessor for MainActor();
  v7[10] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[11] = v9;
  v7[12] = v8;
  return _swift_task_switch(sub_1003126C0, v9, v8);
}

uint64_t sub_1003126C0()
{
  type metadata accessor for MapsSyncStore();
  v0[13] = static MapsSyncStore.sharedStore.getter();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  void *v1 = v0;
  v1[1] = sub_100312780;
  uint64_t v2 = v0[5];
  return v4(v2);
}

uint64_t sub_100312780()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100312A88;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_10031289C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10031289C()
{
  swift_unknownObjectWeakInit();
  return _swift_task_switch(sub_100312908, 0, 0);
}

uint64_t sub_100312908()
{
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100312994, v2, v1);
}

uint64_t sub_100312994()
{
  uint64_t v1 = (void (*)(void))v0[7];
  swift_release();
  sub_100312E18((uint64_t)(v0 + 4), v1);
  swift_unknownObjectWeakDestroy();
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return _swift_task_switch(sub_100312A28, v2, v3);
}

uint64_t sub_100312A28()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100312A88()
{
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FavoriteCollectionHandler: Error saving added items: %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_unknownObjectWeakInit();
  return _swift_task_switch(sub_100312C94, 0, 0);
}

uint64_t sub_100312C94()
{
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100312D20, v2, v1);
}

uint64_t sub_100312D20()
{
  uint64_t v1 = (void (*)(id))v0[7];
  swift_release();
  sub_1003130DC((uint64_t)(v0 + 2), v1);
  swift_unknownObjectWeakDestroy();
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return _swift_task_switch(sub_100312DB0, v2, v3);
}

uint64_t sub_100312DB0()
{
  swift_errorRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100312E18(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = (void *)Strong;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v5 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100315DC0;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_100315FB0;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010B988;
  aBlock[3] = &unk_1012E4390;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  id v9 = v4;
  swift_release();
  id v10 = v5;
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  label = dispatch_queue_get_label(v12);
  uint64_t v14 = dispatch_queue_get_label(0);
  if (label == v14)
  {

LABEL_8:
    v11[2](v11);
    goto LABEL_11;
  }
  if (label && v14)
  {
    int v15 = strcmp(label, v14);

    if (!v15) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  dispatch_sync(v12, v11);
LABEL_11:

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = swift_bridgeObjectRetain();
    sub_10010A1AC(v18);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 rebuildContent:isa];

    if (a2) {
      a2(0);
    }
  }
}

void sub_1003130DC(uint64_t a1, void (*a2)(id))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = (void *)Strong;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v5 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100315DC0;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_100315FB0;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010B988;
  aBlock[3] = &unk_1012E4408;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  id v9 = v4;
  swift_release();
  id v10 = v5;
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  label = dispatch_queue_get_label(v12);
  uint64_t v14 = dispatch_queue_get_label(0);
  if (label == v14)
  {

LABEL_8:
    v11[2](v11);
    goto LABEL_11;
  }
  if (label && v14)
  {
    int v15 = strcmp(label, v14);

    if (!v15) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  dispatch_sync(v12, v11);
LABEL_11:

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      unint64_t v18 = self;
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [v18 GEOErrorWithCode:0 reason:v19];

      a2(v20);
    }
  }
}

uint64_t FavoriteCollectionHandler.remove(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v19 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a1;
  v13[3] = v3;
  v13[4] = a2;
  uint64_t v13[5] = a3;
  aBlock[4] = sub_100315B64;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012E4048;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v15 = v3;
  sub_1000F4F24(a2);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v16 = (void *)v19;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_100313738(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v56 = a4;
  Class v57 = (void (*)(id))a3;
  uint64_t v6 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v6 - 8);
  id v55 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v61 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v58 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_23;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v17 >= v12) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v58 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v58 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v58 + 8 * v13);
        if (!v18) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_23:
    sub_10010A768(*(void *)(a1 + 48) + 40 * v16, (uint64_t)aBlock);
    Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_1000F351C((uint64_t)aBlock);
    self;
    uint64_t v20 = swift_dynamicCastObjCClass();
    if (!v20) {
      goto LABEL_6;
    }
    uint64_t v21 = v20;
    uint64_t v22 = (objc_class *)type metadata accessor for FavoriteCollectionHandler();
    v60.unint64_t receiver = a2;
    v60.uint64_t super_class = v22;
    id v23 = [super itemForMapItem:v21];

    if (v23)
    {
      type metadata accessor for CollectionPlaceItem();
      swift_unknownObjectRetain();
      if (swift_dynamicCastClass() && (dispatch thunk of CollectionPlaceItem.type.getter() & 1) != 0)
      {
        id v23 = v23;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }

      Class isa = (Class)v23;
LABEL_6:
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_29:
    swift_release();
    if (v61 >> 62) {
      goto LABEL_51;
    }
    if (*(uint64_t *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0) {
      goto LABEL_31;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    id v42 = v57;
    if (v57)
    {
      int v43 = self;
      NSString v44 = String._bridgeToObjectiveC()();
      id v45 = [v43 GEOErrorWithCode:0 reason:v44];

      v42(v45);
    }
    return;
  }
  unint64_t v18 = *(void *)(v58 + 8 * v19);
  if (v18)
  {
    int64_t v13 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v12) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v58 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  swift_bridgeObjectRetain();
  uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v41 <= 0) {
    goto LABEL_52;
  }
LABEL_31:
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_100315AEC;
  *(void *)(v26 + 24) = v25;
  aBlock[4] = sub_100315FB0;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010B988;
  aBlock[3] = &unk_1012E4160;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = a2;
  swift_retain();
  swift_release();
  id v29 = v24;
  unint64_t v30 = v27;
  unint64_t v31 = v29;
  label = dispatch_queue_get_label(v31);
  unint64_t v33 = dispatch_queue_get_label(0);
  if (label == v33)
  {

    goto LABEL_37;
  }
  if (label && v33)
  {
    int v34 = strcmp(label, v33);

    if (!v34)
    {
LABEL_37:
      v30[2](v30);
      goto LABEL_40;
    }
  }
  else
  {
  }
  dispatch_sync(v31, v30);
LABEL_40:

  _Block_release(v30);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = v61;
    if (!(v61 >> 62))
    {
      uint64_t v37 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v37) {
        goto LABEL_43;
      }
LABEL_56:
      swift_bridgeObjectRelease();
      uint64_t v46 = type metadata accessor for TaskPriority();
      uint64_t v47 = (uint64_t)v55;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v55, 1, 1, v46);
      type metadata accessor for MainActor();
      id v48 = v28;
      uint64_t v49 = v56;
      uint64_t v50 = (uint64_t)v57;
      sub_1000F4F24((uint64_t)v57);
      uint64_t v51 = static MainActor.shared.getter();
      unint64_t v52 = v61;
      uint64_t v53 = (void *)swift_allocObject();
      v53[2] = v51;
      v53[3] = &protocol witness table for MainActor;
      v53[4] = v52;
      v53[5] = v48;
      v53[6] = v50;
      v53[7] = v49;
      sub_100042AF4(v47, (uint64_t)&unk_1015DADE8, (uint64_t)v53);
      swift_release();
      return;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  if (!v37) {
    goto LABEL_56;
  }
LABEL_43:
  if (v37 >= 1)
  {
    for (uint64_t i = 0; i != v37; ++i)
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v39 = *(id *)(v26 + 8 * i + 32);
      }
      id v40 = v39;
      dispatch thunk of CollectionPlaceItem.type.setter();
    }
    goto LABEL_56;
  }
  __break(1u);
}

uint64_t sub_100313E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = type metadata accessor for MainActor();
  v7[10] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[11] = v9;
  v7[12] = v8;
  return _swift_task_switch(sub_100313EA8, v9, v8);
}

uint64_t sub_100313EA8()
{
  unint64_t v1 = v0[5];
  type metadata accessor for MapsSyncStore();
  v0[13] = static MapsSyncStore.sharedStore.getter();
  if (v1 >> 62)
  {
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v2 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for MapsSyncObject();
    uint64_t v2 = v0[5];
  }
  v0[14] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100313FE0;
  return v5(v2);
}

uint64_t sub_100313FE0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100314290;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100314104;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100314104()
{
  swift_unknownObjectWeakInit();
  return _swift_task_switch(sub_100314170, 0, 0);
}

uint64_t sub_100314170()
{
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003141FC, v2, v1);
}

uint64_t sub_1003141FC()
{
  uint64_t v1 = (void (*)(void))v0[7];
  swift_release();
  sub_100314628((uint64_t)(v0 + 4), v1);
  swift_unknownObjectWeakDestroy();
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return _swift_task_switch(sub_100312A28, v2, v3);
}

uint64_t sub_100314290()
{
  swift_bridgeObjectRelease();
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FavoriteCollectionHandler: Error removing items: %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_unknownObjectWeakInit();
  return _swift_task_switch(sub_1003144A4, 0, 0);
}

uint64_t sub_1003144A4()
{
  *(void *)(v0 + 144) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100314530, v2, v1);
}

uint64_t sub_100314530()
{
  uint64_t v1 = (void (*)(id))v0[7];
  swift_release();
  sub_1003148EC((uint64_t)(v0 + 2), v1);
  swift_unknownObjectWeakDestroy();
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  return _swift_task_switch(sub_1003145C0, v2, v3);
}

uint64_t sub_1003145C0()
{
  swift_errorRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100314628(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = (void *)Strong;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v5 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100315DC0;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_100315FB0;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010B988;
  aBlock[3] = &unk_1012E4200;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  id v9 = v4;
  swift_release();
  id v10 = v5;
  uint64_t v11 = v8;
  int64_t v12 = v10;
  label = dispatch_queue_get_label(v12);
  uint64_t v14 = dispatch_queue_get_label(0);
  if (label == v14)
  {

LABEL_8:
    v11[2](v11);
    goto LABEL_11;
  }
  if (label && v14)
  {
    int v15 = strcmp(label, v14);

    if (!v15) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  dispatch_sync(v12, v11);
LABEL_11:

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    unint64_t v18 = swift_bridgeObjectRetain();
    sub_10010A1AC(v18);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 rebuildContent:isa];

    if (a2) {
      a2(0);
    }
  }
}

void sub_1003148EC(uint64_t a1, void (*a2)(id))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = (void *)Strong;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  uint64_t v5 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100315DC0;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_100315FB0;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010B988;
  aBlock[3] = &unk_1012E4278;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  id v9 = v4;
  swift_release();
  id v10 = v5;
  uint64_t v11 = v8;
  int64_t v12 = v10;
  label = dispatch_queue_get_label(v12);
  uint64_t v14 = dispatch_queue_get_label(0);
  if (label == v14)
  {

LABEL_8:
    v11[2](v11);
    goto LABEL_11;
  }
  if (label && v14)
  {
    int v15 = strcmp(label, v14);

    if (!v15) {
      goto LABEL_8;
    }
  }
  else
  {
  }
  dispatch_sync(v12, v11);
LABEL_11:

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      unint64_t v18 = self;
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [v18 GEOErrorWithCode:0 reason:v19];

      a2(v20);
    }
  }
}

void FavoriteCollectionHandler.updateTitle(_:for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5)
{
  uint64_t v9 = sub_1000FF33C(&qword_1015CD250);
  *(void *)&double v10 = __chkstk_darwin(v9 - 8).n128_u64[0];
  int64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [v5 itemForMapItem:a3 v10];
  if (v13)
  {
    id v14 = v13;
    swift_bridgeObjectRetain();
    dispatch thunk of CollectionPlaceItem.customName.setter();
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    unint64_t v16 = (void *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = v14;
    v16[5] = a4;
    v16[6] = a5;
    sub_1000F4F24((uint64_t)a4);
    sub_100042AF4((uint64_t)v12, (uint64_t)&unk_1015DADB0, (uint64_t)v16);
    swift_release();
  }
  else if (a4)
  {
    int64_t v17 = self;
    NSString v18 = String._bridgeToObjectiveC()();
    id v21 = [v17 GEOErrorWithCode:0 reason:v18];

    a4(v21);
    NSString v19 = v21;
  }
}

uint64_t sub_100314E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  uint64_t v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_100314EB4, 0, 0);
}

uint64_t sub_100314EB4()
{
  uint64_t v1 = (void *)v0[3];
  type metadata accessor for MapsSyncStore();
  v0[6] = static MapsSyncStore.sharedStore.getter();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100F5DFF0;
  *(void *)(v2 + 32) = v1;
  uint64_t v7 = v2;
  specialized Array._endMutation()();
  v0[7] = v7;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  void *v4 = v0;
  v4[1] = sub_100314FCC;
  return v6(v7);
}

uint64_t sub_100314FCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v3 = sub_100315278;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 48);
    swift_bridgeObjectRelease();

    id v3 = sub_1003150EC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003150EC()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 80) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100315180, v2, v1);
}

uint64_t sub_100315180()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  if (v1) {
    (*(void (**)(void))(v0 + 32))(0);
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003151F8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  if (v1) {
    (*(void (**)(void))(v0 + 32))(*(void *)(v0 + 72));
  }
  return _swift_task_switch(sub_1002DE854, 0, 0);
}

uint64_t sub_100315278()
{
  swift_bridgeObjectRelease();
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FavoriteCollectionHandler: Error editing item name: %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  type metadata accessor for MainActor();
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003151F8, v8, v7);
}

uint64_t FavoriteCollectionHandler.storeSubscriptionTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FavoriteCollectionHandler.storeSubscriptionTypes.setter(uint64_t a1)
{
  os_log_type_t v3 = (void *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes);
  swift_beginAccess();
  *os_log_type_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FavoriteCollectionHandler.storeSubscriptionTypes.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_100315790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 24) = a4;
  *(void *)(v5 + 32) = a5;
  return _swift_task_switch(sub_10000A9EC, 0, 0);
}

uint64_t sub_1003157B0()
{
  if (qword_1015CBD30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_101611748);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FavoriteCollectionHandler: Error fetching contents: %@", v4, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

id FavoriteCollectionHandler.__allocating_init(collection:)(uint64_t a1)
{
  id v2 = [objc_allocWithZone(v1) initWithCollection:a1];
  swift_unknownObjectRelease();
  return v2;
}

void FavoriteCollectionHandler.init(collection:)()
{
}

uint64_t sub_100315AB4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100315AF0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100315B04()
{
  sub_100311390(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100315B14()
{
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100315B64()
{
  sub_100313738(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100315B70()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100315BC0()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10005056C;
  *(void *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v5;
  return _swift_task_switch(sub_100314EB4, 0, 0);
}

uint64_t sub_100315C7C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100315CB4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3) {
    __break(1u);
  }
  else {
    *(void *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount) = v4;
  }
}

uint64_t sub_100315CD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100315CEC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100105268;
  return sub_100313E08(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100315DC4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100315DD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100315DE4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100315DF8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100315E50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100105268;
  return sub_100312620(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100315F24()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100315F34()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount);
  BOOL v3 = __OFSUB__(v2, 1);
  uint64_t v4 = v2 - 1;
  if (v3) {
    __break(1u);
  }
  else {
    *(void *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount) = v4;
  }
}

uint64_t sub_100315F58()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100315F68()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_1003161F4()
{
  v2.unint64_t receiver = v0;
  v2.uint64_t super_class = (Class)type metadata accessor for EVChargerUtility();
  return [super dealloc];
}

uint64_t type metadata accessor for EVChargerUtility()
{
  return self;
}

uint64_t sub_10031624C(uint64_t a1, uint64_t a2, int a3, char a4)
{
  switch(a3)
  {
    case 2:
      if (a4)
      {
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v12._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
        v21._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
        v21._object = (void *)0x8000000100F86E60;
        v12._object = (void *)0x8000000100F86E30;
        v13._uint64_t countAndFlagsBits = 0x6C69617661206F6ELL;
        v13._object = (void *)0xEF7974696C696261;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_101611820, v13, v21);
        uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
        goto LABEL_17;
      }
      if (qword_1015CBD78 == -1) {
        goto LABEL_16;
      }
LABEL_15:
      swift_once();
LABEL_16:
      uint64_t v15 = (void *)qword_101611820;
      NSString v16 = String._bridgeToObjectiveC()();
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_100F5CFA0;
      *(void *)(v19 + 56) = &type metadata for UInt;
      *(void *)(v19 + 64) = &protocol witness table for UInt;
      *(void *)(v19 + 32) = a1;
      *(void *)(v19 + 96) = &type metadata for UInt;
      *(void *)(v19 + 104) = &protocol witness table for UInt;
      *(void *)(v19 + 72) = a2;
      uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
LABEL_17:
      swift_bridgeObjectRelease();
      return v11;
    case 1:
      if (qword_1015CBD78 == -1) {
        goto LABEL_16;
      }
      goto LABEL_15;
    case 0:
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      uint64_t v6 = (void *)qword_101611820;
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_100F5CF70;
      *(void *)(v10 + 56) = &type metadata for UInt;
      *(void *)(v10 + 64) = &protocol witness table for UInt;
      *(void *)(v10 + 32) = a2;
      uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_17;
  }
  sub_100316694();
  id v14 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  return 0;
}

unint64_t sub_100316694()
{
  unint64_t result = qword_1015D9670;
  if (!qword_1015D9670)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D9670);
  }
  return result;
}

uint64_t sub_1003166D4(void *a1, char a2)
{
  id v4 = [self sharedSearchVirtualGarageManager];
  id v5 = [v4 virtualGarage];

  if (v5)
  {
    id v6 = [self getRealTimeEVChargerInfo:v5 charger:a1];
    uint64_t v7 = (uint64_t)[v6 total];
    uint64_t v8 = (uint64_t)[v6 available];
    int v9 = [v6 status];
    if (v8 < 0 || v7 < 0)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      uint64_t v10 = sub_10031624C(v8, v7, v9, a2 & 1);

      return v10;
    }
  }
  else
  {
    id v12 = [a1 totalEVChargers];
    id v13 = [a1 availableEVChargers];
    int v14 = [a1 _realTimePlugAvailabilityStatus];
    return sub_10031624C((uint64_t)v13, (uint64_t)v12, v14, a2 & 1);
  }
  return result;
}

uint64_t sub_1003168A0(uint64_t a1)
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  objc_super v2 = (void *)qword_101611820;
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5CF70;
  *(void *)(v6 + 56) = &type metadata for Int;
  *(void *)(v6 + 64) = &protocol witness table for Int;
  *(void *)(v6 + 32) = a1;
  uint64_t v7 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1003169F8(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100316A20(uint64_t a1, void *a2)
{
  NSString v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100316A88(uint64_t a1, uint64_t a2)
{
  NSString v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100316ADC()
{
  uint64_t v0 = sub_100316B00();
  BOOL v1 = __OFADD__(v0, 1);
  uint64_t result = v0 + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100316B00()
{
  BOOL v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController____lazy_storage___maxNumberOfCollections);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController____lazy_storage___maxNumberOfCollections
                + 8) != 1)
    return *(void *)v1;
  uint64_t result = GEOConfigGetUInteger();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)BOOL v1 = result;
    v1[8] = 0;
  }
  return result;
}

id sub_100316B60@<X0>(void *a1@<X8>)
{
  a1[3] = type metadata accessor for HomeListCollectionsSectionController();
  a1[4] = &off_1012E4458;
  *a1 = v3;

  return v3;
}

void *sub_100316BB4(char a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v6 = [*(id *)(v4 + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController_collectionsDataProvider) collections];
  sub_100100830(0, (unint64_t *)&qword_1015D9240);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      if (v8 < 1)
      {
        __break(1u);
        goto LABEL_39;
      }
      char v28 = a2;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      unint64_t v32 = v7 & 0xC000000000000001;
      unint64_t v30 = v7;
      while (1)
      {
        id v11 = v32 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v7 + 8 * v10 + 32);
        id v12 = v11;
        id v13 = [v11 _maps_diffableDataSourceIdentifier];
        if (v13)
        {
          int v14 = v13;
          id v15 = sub_1000FB03C();
          id v16 = [v15 identifierPathByAppendingIdentifier:v14];

          if (v16) {
            break;
          }
        }

LABEL_6:
        if (v8 == ++v10)
        {
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0) {
            return _swiftEmptyArrayStorage;
          }
LABEL_35:
          id v26 = [self addToCollection];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          {
LABEL_36:
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            return _swiftEmptyArrayStorage;
          }
LABEL_39:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          goto LABEL_36;
        }
      }
      NSString v17 = (uint64_t *)(v4 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
      swift_beginAccess();
      uint64_t v18 = *v17;
      if ((*v17 & 0xC000000000000001) != 0)
      {
        id v19 = v16;
        swift_bridgeObjectRetain();
        if (!__CocoaDictionary.lookup(_:)())
        {

          swift_bridgeObjectRelease();
          unint64_t v7 = v30;
          goto LABEL_25;
        }
        sub_100100830(0, (unint64_t *)&unk_1015DC230);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v20 = v33;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        unint64_t v7 = v30;
        if (!v33) {
          goto LABEL_25;
        }
      }
      else
      {
        if (!*(void *)(v18 + 16)) {
          goto LABEL_25;
        }
        id v21 = v16;
        swift_bridgeObjectRetain();
        unint64_t v22 = sub_1001EA990((uint64_t)v21);
        if ((v23 & 1) == 0)
        {

          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        id v20 = *(id *)(*(void *)(v18 + 56) + 8 * v22);

        swift_bridgeObjectRelease();
        if (!v20)
        {
LABEL_25:
          if (v9 < a3)
          {
            id v25 = v12;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            ++v9;
            goto LABEL_6;
          }

          goto LABEL_30;
        }
      }

      if (a1)
      {
        id v24 = v12;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

LABEL_30:
        goto LABEL_6;
      }
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  if (a2) {
    goto LABEL_35;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10031702C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  sub_1000F1C90(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)&v32);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)&v32);
  if (!Strong)
  {
    long long v36 = 0u;
    long long v37 = 0u;
    long long aBlock = 0u;
    goto LABEL_13;
  }
  sub_10025DE18(&aBlock);
  swift_unknownObjectRelease();
  if (!(void)aBlock)
  {
LABEL_13:
    sub_1000FF2E0((uint64_t)&aBlock, &qword_1015D68C0);
    return _swiftEmptyArrayStorage;
  }
  v38[0] = aBlock;
  v38[1] = v36;
  v38[2] = v37;
  sub_1000FF27C((uint64_t)v38 + 8, (uint64_t)&aBlock, (uint64_t *)&unk_1015D6960);
  sub_100101314(&aBlock, (uint64_t)&v32);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1000FFC8C((uint64_t)v38);
    return _swiftEmptyArrayStorage;
  }
  unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
  id v7 = (id)aBlock;
  uint64_t v8 = &off_100F5C000;
  if ([v7 canDelete])
  {
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    sub_1000FF3F0((uint64_t)v38, (uint64_t)&v32);
    unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    id v10 = v7;
    unint64_t v11 = (v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v30;
    *(void *)(v12 + 24) = v10;
    unint64_t v13 = v12 + v9;
    uint64_t v8 = &off_100F5C000;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13, (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    int v14 = (_OWORD *)(v12 + v11);
    id v7 = v10;
    long long v15 = v33;
    *int v14 = v32;
    v14[1] = v15;
    v14[2] = v34;
    *(void *)&long long v37 = sub_100319A9C;
    *((void *)&v37 + 1) = v12;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v36 = sub_10033153C;
    *((void *)&v36 + 1) = &unk_1012E4700;
    id v16 = _Block_copy(&aBlock);
    id v17 = v7;
    swift_release();
    id v18 = sub_100B7E834(v16);
    _Block_release(v16);
    id v19 = v18;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
      uint64_t v30 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if ([v7 canShare])
  {
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000FF3F0((uint64_t)v38, (uint64_t)&v32);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = v7;
    long long v23 = v33;
    *(_OWORD *)(v22 + 32) = v32;
    *(_OWORD *)(v22 + 48) = v23;
    *(_OWORD *)(v22 + 64) = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    *(void *)&long long v37 = sub_100319918;
    *((void *)&v37 + 1) = v22;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *((void *)v8 + 502);
    *(void *)&long long v36 = sub_10033153C;
    *((void *)&v36 + 1) = &unk_1012E46B0;
    id v24 = _Block_copy(&aBlock);
    id v25 = v7;
    swift_release();
    id v26 = sub_100B7EA98(v24);
    _Block_release(v24);
    id v27 = v26;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    sub_1000FFC8C((uint64_t)v38);
  }
  else
  {
    sub_1000FFC8C((uint64_t)v38);
  }
  return (void *)v31;
}

void sub_10031759C(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5, uint64_t *a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    sub_100317704(a4, a5, a6, a1, a2);
  }
}

void sub_10031762C(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v11 = (void *)Strong;
    sub_100318080(a4, a5, a1);
  }
  swift_beginAccess();
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    unint64_t v13 = (void *)v12;
    sub_1003196A0(a4, a6, 2037, 2008, 2082, 2096);
  }
}

void sub_100317704(objc_class *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v59 = a5;
  uint64_t v58 = a4;
  objc_super v60 = a3;
  Class v55 = a1;
  uint64_t v7 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v12;
  __chkstk_darwin(v14);
  id v16 = (char *)&v53 - v15;
  id v17 = (void **)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000F1C90((uint64_t)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], (uint64_t)v63);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v63);
  Class v57 = v5;
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_9:
    sub_1000FF2E0((uint64_t)v9, &qword_1015D4B40);
    id v29 = 0;
    goto LABEL_10;
  }
  uint64_t v54 = v13;
  uint64_t v19 = v11;
  uint64_t v20 = a2;
  uint64_t v21 = v10;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v22 = v5;
  }
  else {
    uint64_t v22 = 0;
  }
  if (!v22)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v23 = *v60;
  id v24 = v5;
  id v25 = sub_1000806A8();
  v63[0] = v23;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  swift_unknownObjectRelease();

  uint64_t v11 = v19;
  uint64_t v10 = v21;
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v21);
  a2 = v20;
  unint64_t v13 = v54;
  if (v26 == 1) {
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  id v27 = *v17;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v29 = [v27 cellForItemAtIndexPath:isa];

  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
LABEL_10:
  sub_1000F1C90((uint64_t)v17, (uint64_t)v63);
  uint64_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v63);
  if (v30
    && (id v31 = [v30 homeDeleteDelegate],
        swift_unknownObjectRelease(),
        v31))
  {
    uint64_t v32 = v11;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100F5DFF0;
    Class v34 = v55;
    *(void *)(v33 + 32) = v55;
    *(void *)&v62[0] = v33;
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&qword_1015D9240);
    NSObject v35 = v34;
    Class v55 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    if (v29)
    {
      [v29 bounds];
      double v37 = v36;
      double v39 = v38;
      double v41 = v40;
      double v43 = v42;
    }
    else
    {
      double v41 = 0.0;
      double v43 = 0.0;
      double v37 = 0.0;
      double v39 = 0.0;
    }
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000FF3F0((uint64_t)v60, (uint64_t)v62);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v13, a2, v10);
    uint64_t v45 = v10;
    unint64_t v46 = (*(unsigned __int8 *)(v32 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v44;
    *(void *)(v47 + 24) = v35;
    long long v48 = v62[1];
    *(_OWORD *)(v47 + 32) = v62[0];
    *(_OWORD *)(v47 + 48) = v48;
    *(_OWORD *)(v47 + 64) = v62[2];
    uint64_t v49 = v59;
    *(void *)(v47 + 80) = v58;
    *(void *)(v47 + 88) = v49;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v47 + v46, v13, v45);
    aBlock[4] = sub_100319624;
    aBlock[5] = v47;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100316A88;
    aBlock[3] = &unk_1012E4660;
    uint64_t v50 = _Block_copy(aBlock);
    uint64_t v51 = v35;
    swift_retain();
    swift_release();
    Class v52 = v55;
    [v31 confirmDeleteCollections:v55 sourceView:v29 sourceRect:v50 completion:v37, v39, v41, v43];
    swift_unknownObjectRelease();

    _Block_release(v50);
  }
  else
  {
  }
}

void sub_100317D24(char a1, uint64_t a2, void *a3, void **a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v13 = (void *)Strong;
      sub_100317E10(a3, a4, (uint64_t)a5, a6);
    }
    swift_beginAccess();
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    if (v14)
    {
      uint64_t v15 = (void *)v14;
      sub_1003196A0(a3, a7, 2038, 2009, 2081, 2088);
    }
  }
  else
  {
    a5(0);
  }
}

void sub_100317E10(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)sub_10033C60C(a2, a3, a4);
  sub_1000FF33C(&qword_1015CD310);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
  *(void *)(inited + 32) = v5;
  aBlock[0] = inited;
  specialized Array._endMutation()();
  id v7 = v5;
  sub_10033BBE8(aBlock[0]);
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100319508;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = (unint64_t)sub_100319510;
  aBlock[5] = v10;
  aBlock[0] = (unint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (unint64_t)sub_100316A20;
  aBlock[3] = (unint64_t)&unk_1012E4610;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v7;
  swift_release();
  [a1 deleteCollection:v11];
  _Block_release(v11);
}

void sub_100317FB0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = (void *)Strong;
      sub_1000FF33C(&qword_1015CD310);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
      *(void *)(inited + 32) = a3;
      unint64_t v8 = inited;
      specialized Array._endMutation()();
      swift_errorRetain();
      id v7 = a3;
      sub_10033C4E0(v8);
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100318080(void *a1, uint64_t *a2, void (*a3)(uint64_t, __n128))
{
  uint64_t v7 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(1, v12);
  uint64_t v15 = (void **)&v3[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000F1C90((uint64_t)&v3[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], (uint64_t)aBlock);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)aBlock);
  if (Strong)
  {
    double v37 = v15;
    id v17 = a1;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      id v18 = v3;
    }
    else {
      id v18 = 0;
    }
    if (!v18)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    uint64_t v19 = *a2;
    uint64_t v20 = v3;
    id v21 = sub_1000806A8();
    aBlock[0] = v19;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
    swift_unknownObjectRelease();

    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    a1 = v17;
    uint64_t v15 = v37;
    if (v22 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      uint64_t v23 = *v15;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v25 = [v23 cellForItemAtIndexPath:isa];

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_1000FF2E0((uint64_t)v9, &qword_1015D4B40);
  id v25 = 0;
LABEL_10:
  self;
  uint64_t v26 = swift_dynamicCastObjCClass();
  if (v26)
  {
    id v27 = (void *)v26;
    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v29 = (void *)swift_allocObject();
    v29[2] = a1;
    v29[3] = v28;
    v29[4] = v25;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_10031945C;
    *(void *)(v30 + 24) = v29;
    aBlock[4] = sub_1003194A0;
    aBlock[5] = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100318A20;
    aBlock[3] = &unk_1012E4570;
    id v31 = _Block_copy(aBlock);
    id v32 = v25;
    id v33 = a1;
    swift_release();
    [v27 retrieveGeoCollectionWithRefinedItems:v31];

    _Block_release(v31);
  }
  else
  {
    sub_1000F1C90((uint64_t)v15, (uint64_t)aBlock);
    Class v34 = (void *)swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)aBlock);
    if (v34)
    {
      id v35 = [v34 homeShareDelegate];
      swift_unknownObjectRelease();
      if (v35)
      {
        _OWORD v38[4] = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
        v38[5] = 0;
        v38[0] = _NSConcreteStackBlock;
        v38[1] = 1107296256;
        v38[2] = sub_10008C380;
        v38[3] = &unk_1012E44F8;
        double v36 = _Block_copy(v38);
        [v35 shareCollection:a1 sourceView:v25 completion:v36];
        swift_unknownObjectRelease();
        _Block_release(v36);
      }
    }
  }
}

void sub_100318590(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (!a2 || !a1) {
    goto LABEL_11;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14 < 1) {
      goto LABEL_11;
    }
  }
  else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_11;
  }
  if (!a3)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      sub_1000F1C90(Strong + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v28);

      uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
      sub_1000F1BD8((uint64_t)v28);
      if (v11)
      {
        id v12 = [v11 homeShareDelegate];
        swift_unknownObjectRelease();
        if (v12)
        {
          aBlock[4] = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
          aBlock[5] = 0;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          void aBlock[2] = sub_10008C380;
          aBlock[3] = &unk_1012E4598;
          uint64_t v13 = _Block_copy(aBlock);
          [v12 shareCollection:a4 sourceView:a6 completion:v13];
          swift_unknownObjectRelease();
          _Block_release(v13);
        }
      }
    }
    return;
  }
LABEL_11:
  if (qword_1015CBD40 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000F2248(v15, (uint64_t)qword_101611778);
  id v16 = a4;
  swift_errorRetain();
  id v17 = v16;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    id v21 = [v17 identifier];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;

    aBlock[0] = sub_1000F2280(v22, v24, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2112;
    if (a3)
    {
      swift_errorRetain();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      aBlock[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v25 = 0;
    }
    *uint64_t v20 = v25;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v18, "Failed to resolve curated collection with id: %s error: %@", (uint8_t *)v19, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_100318A20(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = *(void (**)(id, uint64_t, id))(a1 + 32);
  sub_100100830(0, &qword_1015CF128);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v6(v9, v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_100318AE4()
{
}

id sub_100318AF4()
{
  v2.unint64_t receiver = v0;
  v2.uint64_t super_class = (Class)type metadata accessor for HomeListCollectionsSectionController();
  return [super dealloc];
}

uint64_t type metadata accessor for HomeListCollectionsSectionController()
{
  return self;
}

uint64_t sub_100318B5C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = (unint64_t)sub_100316BB4(0, 0, 0x7FFFFFFFFFFFFFFFLL);
  if (v3 >> 62) {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100316B00();
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  char v6 = v5 < v4;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v12._uint64_t countAndFlagsBits = 0xD000000000000035;
  v12._object = (void *)0x8000000100F769D0;
  v7._object = (void *)0x8000000100F86F10;
  v8._uint64_t countAndFlagsBits = 0x656469754720794DLL;
  v8._object = (void *)0xE900000000000073;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_101611820, v8, v12);
  swift_unknownObjectRetain();

  return sub_10002A018(v9._countAndFlagsBits, (uint64_t)v9._object, 0, v6, v1, (uint64_t)&off_1012E4478, 0xD000000000000013, 0x8000000100F86F30, a1);
}

id sub_100318CD0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = (void *)Strong;
    sub_10031702C(a1);
  }
  sub_100100830(0, (unint64_t *)&unk_1015DBA50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [self configurationWithActions:isa];

  return v5;
}

uint64_t sub_100318D9C()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F5DFF0;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController_collectionsDataProvider);
  *(void *)(v1 + 32) = v2;
  uint64_t v5 = v1;
  specialized Array._endMutation()();
  id v3 = v2;
  return v5;
}

void *sub_100318E18()
{
  uint64_t v1 = sub_100316B00();
  objc_super v2 = sub_100316BB4(1, 1, v1);
  id v3 = v0;
  uint64_t v4 = sub_100319178((unint64_t)v2);
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_100318E88(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v3 = sub_1000F4A4C(a1, (uint64_t)sub_100319170, v2);
  swift_release_n();
  return v3;
}

uint64_t sub_100318F10()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v3);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = sub_1000F1BD8((uint64_t)v3);
  if (Strong)
  {
    [Strong homeSectionHeaderButtonTapped:3];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100318F84()
{
  sub_100318B5C((uint64_t)v10);
  if (!v11)
  {
    Swift::String v7 = &qword_1015DC240;
    Swift::String v8 = v10;
    return sub_1000FF2E0((uint64_t)v8, v7);
  }
  sub_1000FF27C((uint64_t)&v12, (uint64_t)v9, (uint64_t *)&unk_1015D4350);
  sub_1001D4730((uint64_t)v10);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    Swift::String v7 = (uint64_t *)&unk_1015D4350;
    Swift::String v8 = v9;
    return sub_1000FF2E0((uint64_t)v8, v7);
  }
  uint64_t v1 = Strong;
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    sub_1000FF2E0((uint64_t)v9, (uint64_t *)&unk_1015D4350);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1003190B4()
{
  sub_100318B5C((uint64_t)v2);
  if (v2[1])
  {
    uint64_t v0 = v3;
    sub_1001D4730((uint64_t)v2);
  }
  else
  {
    sub_1000FF2E0((uint64_t)v2, &qword_1015DC240);
    return 0;
  }
  return v0;
}

uint64_t sub_100319114()
{
  return sub_100318F84();
}

uint64_t sub_100319138()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100319170(uint64_t a1)
{
  return sub_100318CD0(a1);
}

void *sub_100319178(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      unsigned __int8 v3 = _swiftEmptyArrayStorage;
      for (uint64_t i = 4; ; ++i)
      {
        unint64_t v23 = v3;
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(a1 + 8 * i);
        }
        char v6 = v5;
        uint64_t v7 = i - 3;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        uint64_t v8 = v2;
        id v9 = [v5 _maps_diffableDataSourceIdentifier];
        if (v9)
        {
          uint64_t v10 = v9;
          id v11 = sub_1000FB03C();
          id v12 = [v11 identifierPathByAppendingIdentifier:v10];

          if (v12) {
            break;
          }
        }
        long long v21 = 0u;
        long long v22 = 0u;
        long long v20 = 0u;

        uint64_t v2 = v8;
        if ((void)v20) {
          goto LABEL_14;
        }
        sub_1000FF2E0((uint64_t)&v20, &qword_1015D68C0);
        unsigned __int8 v3 = v23;
LABEL_5:
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
      }
      *(void *)&long long v22 = &type metadata for HomeListCollectionHandlerCellModel;
      *((void *)&v22 + 1) = sub_1003193C0();
      *(void *)&long long v20 = v12;
      *((void *)&v20 + 1) = v6;
      uint64_t v2 = v8;
LABEL_14:
      long long v17 = v20;
      long long v18 = v21;
      long long v19 = v22;
      unsigned __int8 v3 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned __int8 v3 = sub_1000F9638(0, v3[2] + 1, 1, v3);
      }
      unint64_t v14 = v3[2];
      unint64_t v13 = v3[3];
      if (v14 >= v13 >> 1) {
        unsigned __int8 v3 = sub_1000F9638((void *)(v13 > 1), v14 + 1, 1, v3);
      }
      v3[2] = v14 + 1;
      uint64_t v15 = &v3[6 * v14];
      v15[3] = v18;
      void v15[4] = v19;
      v15[2] = v17;
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1003193C0()
{
  unint64_t result = qword_1015DAE70;
  if (!qword_1015DAE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAE70);
  }
  return result;
}

uint64_t sub_100319414()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10031945C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_100318590(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_100319468()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003194A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1003194C8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100319508(uint64_t a1)
{
  sub_100317FB0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100319510()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100319538()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  sub_1000FF22C(v0 + 40);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100319624(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 24);
  uint64_t v6 = *(void (**)(void))(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100317D24(a1, v4, v5, (void **)(v1 + 32), v6, v7, v8);
}

id sub_1003196A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = self;
  [v11 captureUserAction:a3 target:8 value:0];
  [v11 captureUserAction:a4 target:8 value:0];
  id result = [a1 handlerType];
  if (result == (id)4)
  {
    uint64_t v18 = IndexPath.item.getter();
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v18;
      unint64_t v14 = self;
      unint64_t v13 = "captureCuratedCollectionAction:withCollectionHandler:verticalIndex:";
      uint64_t v15 = a6;
      uint64_t v16 = (uint64_t)a1;
      uint64_t v17 = v19;
      return [v14 v13:v15:v16:v17];
    }
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (!result)
  {
    unint64_t v13 = "captureUserAction:target:value:";
    unint64_t v14 = v11;
    uint64_t v15 = a5;
    uint64_t v16 = 8;
    uint64_t v17 = 0;
    return [v14 v13:v15, v16, v17];
  }
  return result;
}

uint64_t sub_100319834()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  sub_1000FF22C(v0 + 40);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100319918(void (*a1)(uint64_t, __n128), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = (void *)v2[3];
  uint64_t v8 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10031762C(a1, a2, v6, v7, v2 + 4, v8);
}

uint64_t sub_1003199A0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_1000FF22C(v0 + v6 + 8);

  return _swift_deallocObject(v0, v6 + 48, v5);
}

void sub_100319A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(objc_class **)(v2 + 24);
  id v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10031759C(a1, a2, v7, v8, v2 + v6, v9);
}

void sub_100319B7C(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  id v4 = [a1 featureDiscoveryView];
  [v4 setModel:v3];
}

uint64_t sub_100319BE0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBFD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D73E0);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611D18);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_100319C90()
{
  unint64_t result = qword_1015DAE78;
  if (!qword_1015DAE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAE78);
  }
  return result;
}

unint64_t sub_100319CE4(uint64_t a1)
{
  unint64_t result = sub_100319D0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100319D0C()
{
  unint64_t result = qword_1015DAEB8;
  if (!qword_1015DAEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAEB8);
  }
  return result;
}

unint64_t sub_100319D64()
{
  unint64_t result = qword_1015DAEC8;
  if (!qword_1015DAEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAEC8);
  }
  return result;
}

uint64_t sub_100319DB8()
{
  return sub_1001010F8(&qword_1015DAED0, &qword_1015DAED8);
}

uint64_t sub_100319DF4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611D30);
  sub_1000F2248(v10, (uint64_t)qword_101611D30);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10031A0CC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611D48);
  sub_1000F2248(v0, (uint64_t)qword_101611D48);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10031A130()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611D60);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611D60);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10031A1E8()
{
  uint64_t result = swift_getKeyPath();
  qword_101611D78 = result;
  return result;
}

uint64_t sub_10031A210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10031A234, 0, 0);
}

uint64_t sub_10031A234()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBFF0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611D78;
  *(void *)(v0 + 80) = qword_101611D78;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015DAFD8, &qword_1015DAFE0);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10031A390;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10031A390()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10031A4E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10031A4E4()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611D78;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10031A5C0()
{
  if (qword_1015CBFF0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10031A620()
{
  unint64_t result = qword_1015DAEE0;
  if (!qword_1015DAEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAEE0);
  }
  return result;
}

unint64_t sub_10031A678()
{
  unint64_t result = qword_1015DAEE8;
  if (!qword_1015DAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAEE8);
  }
  return result;
}

uint64_t sub_10031A6CC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10031A700()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10031A750@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBFE0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611D48, a1);
}

uint64_t sub_10031A788@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBFE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611D60);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10031A804(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10031A234, 0, 0);
}

uint64_t sub_10031A8B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10031B734();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10031A8E0()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_10031A900()
{
  unint64_t result = qword_1015DAEF8;
  if (!qword_1015DAEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAEF8);
  }
  return result;
}

unint64_t sub_10031A958()
{
  unint64_t result = qword_1015DAF00;
  if (!qword_1015DAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF00);
  }
  return result;
}

unint64_t sub_10031A9B0()
{
  unint64_t result = qword_1015DAF08;
  if (!qword_1015DAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF08);
  }
  return result;
}

unint64_t sub_10031AA08()
{
  unint64_t result = qword_1015DAF10;
  if (!qword_1015DAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF10);
  }
  return result;
}

unint64_t sub_10031AA60()
{
  unint64_t result = qword_1015DAF18;
  if (!qword_1015DAF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF18);
  }
  return result;
}

unint64_t sub_10031AAB8()
{
  unint64_t result = qword_1015DAF20;
  if (!qword_1015DAF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF20);
  }
  return result;
}

uint64_t sub_10031AB0C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10031AB2C, 0, 0);
}

uint64_t sub_10031AB2C()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)CyclePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidBusyRoads];
  unsigned char *v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10031ABF8(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10031AC1C, 0, 0);
}

uint64_t sub_10031AC1C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)CyclePreferences) initWithDefaults:v2];

  [v3 setAvoidBusyRoads:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10031AD20()
{
  unint64_t result = qword_1015DAF28;
  if (!qword_1015DAF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF28);
  }
  return result;
}

unint64_t sub_10031AD78()
{
  unint64_t result = qword_1015DAF30;
  if (!qword_1015DAF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF30);
  }
  return result;
}

unint64_t sub_10031ADD0()
{
  unint64_t result = qword_1015DAF38;
  if (!qword_1015DAF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF38);
  }
  return result;
}

unint64_t sub_10031AE28()
{
  unint64_t result = qword_1015DAF40;
  if (!qword_1015DAF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF40);
  }
  return result;
}

uint64_t sub_10031AE7C@<X0>(uint64_t *a1@<X8>)
{
  sub_10031B0C8();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10031AEBC@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBFD8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611D30, a1);
}

uint64_t sub_10031AEF4()
{
  return sub_1001010F8(&qword_1015DAF48, &qword_1015DAF50);
}

uint64_t sub_10031AF30(uint64_t a1)
{
  unint64_t v2 = sub_10031A900();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10031AF80()
{
  unint64_t result = qword_1015DAF58;
  if (!qword_1015DAF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF58);
  }
  return result;
}

uint64_t sub_10031AFD4(uint64_t a1)
{
  unint64_t v2 = sub_10031B0C8();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10031B020(uint64_t a1)
{
  unint64_t v2 = sub_10031AE28();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10031B070()
{
  unint64_t result = qword_1015DAF60;
  if (!qword_1015DAF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF60);
  }
  return result;
}

unint64_t sub_10031B0C8()
{
  unint64_t result = qword_1015DAF68[0];
  if (!qword_1015DAF68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015DAF68);
  }
  return result;
}

uint64_t sub_10031B11C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10031B1AC, 0, 0);
}

uint64_t sub_10031B1AC()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015DAED8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015DAFD8, &qword_1015DAFE0);
  uint64_t *v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10031B2BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10031A958();
  void *v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10031B370()
{
  unint64_t result = qword_1015DAF80;
  if (!qword_1015DAF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAF80);
  }
  return result;
}

unint64_t sub_10031B3C8()
{
  unint64_t result = qword_1015DAF88[0];
  if (!qword_1015DAF88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015DAF88);
  }
  return result;
}

uint64_t sub_10031B41C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10031A958();
  void *v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10031B4D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10031A958();
  void *v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10031B584()
{
  unint64_t result = qword_1015DAFA0;
  if (!qword_1015DAFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAFA0);
  }
  return result;
}

unint64_t sub_10031B5DC()
{
  unint64_t result = qword_1015DAFA8;
  if (!qword_1015DAFA8)
  {
    sub_10010118C(qword_1015DAFB0);
    sub_10031ADD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DAFA8);
  }
  return result;
}

uint64_t sub_10031B650(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10031AAB8();
  void *v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInCyclingQuery()
{
  return &type metadata for AvoidBusyRoadsInCyclingQuery;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInCyclingEntity()
{
  return &type metadata for AvoidBusyRoadsInCyclingEntity;
}

uint64_t sub_10031B734()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015DAFE8);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10031A900();
  uint64_t v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_10031BB74@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikingDifficulty()
{
  return &type metadata for PlaceSummaryUnitHikingDifficulty;
}

unint64_t sub_10031BB94()
{
  unint64_t result = qword_1015DB000;
  if (!qword_1015DB000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB000);
  }
  return result;
}

uint64_t sub_10031BBE8()
{
  uint64_t v1 = (void *)v0[9];
  id v2 = [v1 displayName];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = *v0;
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = v4;
  sub_100101750((uint64_t)(v0 + 6), (uint64_t)v12, &qword_1015D0E70);
  sub_100101750((uint64_t)v12, (uint64_t)&v13, &qword_1015D0E70);
  uint64_t v5 = v14;
  if (v14)
  {
    uint64_t v6 = v13;
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = v6;
    v7._object = v5;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    uint64_t v11 = v4;
  }
  [v1 stopId];
  v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 2108704;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10031BD30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10031BBE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10031BD84(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  void v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  _OWORD v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return (unint64_t)sub_10031C098((uint64_t)v7, v9) & 1;
}

void sub_10031BDF0()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 24))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(void *)(v0 + 64));
  Hasher._combine(_:)(*(void *)(v0 + 80));
  id v1 = [*(id *)(v0 + 72) departures];
  if (!v1) {
    return;
  }
  long long v2 = v1;
  sub_1000FF33C((uint64_t *)&unk_1015DB008);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_10:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v6 = *(void **)(v3 + 8 * i + 32);
          swift_unknownObjectRetain();
        }
        Hasher._combine(_:)((Swift::UInt64)[v6 tripIdentifier]);
        swift_unknownObjectRelease();
      }
    }
  }

  swift_bridgeObjectRelease();
}

Swift::Int sub_10031C018()
{
  return Hasher._finalize()();
}

Swift::Int sub_10031C05C()
{
  return Hasher._finalize()();
}

id sub_10031C098(uint64_t a1, void *a2)
{
  if (*(void *)a1 != *a2 || *(void *)(a1 + 8) != a2[1])
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 16) == a2[2] && v7 == v8;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), id result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if (*(void *)(a1 + 32) != a2[4] || *(void *)(a1 + 40) != a2[5])
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id result = 0;
      if ((v11 & 1) == 0) {
        return result;
      }
    }
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v13 = a2[7];
    if (v12)
    {
      if (v13)
      {
        if (*(void *)(a1 + 48) != a2[6] || v12 != v13)
        {
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          id result = 0;
          if ((v14 & 1) == 0) {
            return result;
          }
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          id result = 0;
          if ((v15 & 1) == 0) {
            return result;
          }
        }
        goto LABEL_26;
      }
    }
    else if (!v13)
    {
LABEL_26:
      if (*(void *)(a1 + 64) == a2[8] && *(void *)(a1 + 80) == a2[10]) {
        return [*(id *)(a1 + 72) isEqual:a2[9]];
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_10031C218(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v44 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v48 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v40 - v10;
  __chkstk_darwin(v11);
  unint64_t v46 = (char *)&v40 - v12;
  if (!a1) {
    return 0;
  }
  unint64_t v43 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v13 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v13) {
    goto LABEL_24;
  }
LABEL_4:
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  unint64_t v16 = v43;
  unint64_t v17 = v43 & 0xC000000000000001;
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v44 + 32);
  uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  double v42 = (void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v40 = a2;
  uint64_t v41 = v44 + 8;
  uint64_t v50 = (char *)_swiftEmptyArrayStorage;
  uint64_t v18 = &selRef_initWithWaypointRequests_routeLoadingTaskFactory_traits_;
  do
  {
    if (v17)
    {
      uint64_t v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v19 = *(void **)(v16 + 8 * v15 + 32);
      swift_unknownObjectRetain();
    }
    if (objc_msgSend(v19, v18[350], v40, v41))
    {
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
    id v20 = [v19 departureDate];
    if (!v20)
    {
      (*v49)(v6, 1, 1, v7);
LABEL_20:
      swift_unknownObjectRelease();
      sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015D9410);
      goto LABEL_7;
    }
    long long v21 = v20;
    uint64_t v22 = v7;
    unint64_t v23 = v18;
    uint64_t v24 = v13;
    unint64_t v25 = v17;
    uint64_t v26 = v47;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    unsigned int v27 = *v51;
    uint64_t v28 = v26;
    unint64_t v17 = v25;
    uint64_t v13 = v24;
    uint64_t v18 = v23;
    uint64_t v7 = v22;
    (*v51)(v6, v28, v22);
    (*v49)(v6, 0, 1, v22);
    if ((*v45)(v6, 1, v22) == 1) {
      goto LABEL_20;
    }
    uint64_t v29 = v46;
    v27(v46, v6, v7);
    (*v42)(v48, v29, v7);
    uint64_t v30 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v50 = (char *)sub_1001CF650(0, *((void *)v50 + 2) + 1, 1, (unint64_t)v50);
    }
    unint64_t v32 = *((void *)v50 + 2);
    unint64_t v31 = *((void *)v50 + 3);
    if (v32 >= v31 >> 1) {
      uint64_t v50 = (char *)sub_1001CF650(v31 > 1, v32 + 1, 1, (unint64_t)v50);
    }
    uint64_t v33 = v50;
    *((void *)v50 + 2) = v32 + 1;
    uint64_t v34 = v44;
    v30(&v33[((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v44 + 72) * v32], v48, v7);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v46, v7);
    unint64_t v16 = v43;
LABEL_7:
    ++v15;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  id v35 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v37 = Date._bridgeToObjectiveC()().super.isa;
  id v38 = [v35 _stringForCountdownDepartures:isa referenceDate:v37 isShowingNoConnectionEmDash:0];

  if (v38)
  {
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v39;
  }
  return 0;
}

uint64_t sub_10031C700(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v72 = a4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v70 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v68 - v11;
  uint64_t v13 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v68 - v17;
  __chkstk_darwin(v19);
  long long v21 = (char *)&v68 - v20;
  *(void *)&double v23 = __chkstk_darwin(v22).n128_u64[0];
  unint64_t v25 = (char *)&v68 - v24;
  id v73 = a1;
  unint64_t v26 = sub_10031DE90([a1 departureTimeDisplayStyle:v23]);
  if (v26 >= 2)
  {
    uint64_t v71 = a3;
    if (v26 != 2)
    {
      unint64_t v38 = v26;
      if (qword_1015CBD38 != -1) {
        swift_once();
      }
      uint64_t v39 = type metadata accessor for Logger();
      sub_1000F2248(v39, (uint64_t)qword_101611760);
      id v28 = v73;
      swift_unknownObjectRetain_n();
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v74 = v38;
        uint64_t v75 = v43;
        *(_DWORD *)uint64_t v42 = 134218242;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v42 + 12) = 2080;
        id v44 = [v28 description];
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v47 = v46;

        id v28 = v73;
        uint64_t v74 = sub_1000F2280(v45, v47, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unknown departureTimeDisplayStyle %lu for departureSequence %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      uint64_t v27 = 0;
LABEL_28:
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v57 = [v28 frequencyToDescribeAtDate:isa];

      if (v57)
      {
        swift_bridgeObjectRelease();
        id v58 = [self _navigation_formattedDescriptionForFrequency:v57];
        if (v58)
        {
          uint64_t v59 = v58;
          uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();

          swift_unknownObjectRelease();
          return v27;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        Class v60 = Date._bridgeToObjectiveC()().super.isa;
        Class v61 = TimeZone._bridgeToObjectiveC()().super.isa;
        id v62 = [v28 operatingHoursForDate:v60 inTimeZone:v61];

        if (!v62) {
          return v27;
        }
        swift_bridgeObjectRelease();
        sub_1000FF33C(&qword_1015DB018);
        static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v63 = self;
        Class v64 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        Class v65 = TimeZone._bridgeToObjectiveC()().super.isa;
        id v66 = [v63 _navigation_formattedStringForOperatingHours:v64 timeZone:v65];

        if (v66)
        {
          uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();

          return v27;
        }
      }
      return 0;
    }
    Class v30 = Date._bridgeToObjectiveC()().super.isa;
    id v31 = [v73 firstDepartureOnOrAfterDate:v30];

    if (!v31) {
      goto LABEL_27;
    }
    id v32 = [v31 scheduledDepartureDate];
    if (v32)
    {
      uint64_t v33 = v32;
      id v69 = v31;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v34 = v8;
      id v35 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v35(v21, v12, v7);
      double v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
      v36(v21, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v21, 1, v7) != 1)
      {
        v35(v25, v21, v7);
        v36(v25, 0, 1, v7);
        Class v37 = v70;
LABEL_21:
        sub_1000FF27C((uint64_t)v25, (uint64_t)v15, (uint64_t *)&unk_1015D9410);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v15, 1, v7) == 1)
        {
          sub_1000FF2E0((uint64_t)v25, (uint64_t *)&unk_1015D9410);
          swift_unknownObjectRelease();
          uint64_t v51 = (uint64_t)v15;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v15, v7);
          Class v52 = self;
          Class v53 = Date._bridgeToObjectiveC()().super.isa;
          Class v54 = TimeZone._bridgeToObjectiveC()().super.isa;
          id v55 = [v52 _navigation_localizedTimestampStringForDepartureArrivalDate:v53 inTimeZone:v54 canIncludeDate:0 showTimeZone:0 useShortFormat:0];

          if (v55)
          {
            uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();

            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v7);
            sub_1000FF2E0((uint64_t)v25, (uint64_t *)&unk_1015D9410);
            return v27;
          }
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v7);
          uint64_t v51 = (uint64_t)v25;
        }
        sub_1000FF2E0(v51, (uint64_t *)&unk_1015D9410);
LABEL_27:
        uint64_t v27 = 0;
        id v28 = v73;
        goto LABEL_28;
      }
      id v31 = v69;
      Class v37 = v70;
    }
    else
    {
      uint64_t v34 = v8;
      double v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v36(v21, 1, 1, v7);
      Class v37 = v70;
    }
    id v48 = [v31 departureDate];
    if (v48)
    {
      uint64_t v49 = v48;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v50 = 1;
    }
    v36(v18, v50, 1, v7);
    sub_100101750((uint64_t)v18, (uint64_t)v25, (uint64_t *)&unk_1015D9410);
    sub_1000FF2E0((uint64_t)v21, (uint64_t *)&unk_1015D9410);
    goto LABEL_21;
  }
  uint64_t v27 = sub_10031C218(a2, a3);
  id v28 = v73;
  if (!v29) {
    goto LABEL_28;
  }
  return v27;
}

id sub_10031CF5C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  id v48 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TimeZone();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  sub_1000FF27C(a2, (uint64_t)v15, (uint64_t *)&unk_1015D9A00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000FF2E0((uint64_t)v15, (uint64_t *)&unk_1015D9A00);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  uint64_t v20 = (char *)[(id)swift_unknownObjectRetain() liveStatus];
  if ((unint64_t)(v20 - 3) > 2)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_10:
    swift_unknownObjectRelease();
    return 0;
  }
  long long v21 = v20;
  id v22 = [a1 liveStatusString];
  if (!v22)
  {
    id v39 = [a1 departureDate];
    if (v39)
    {
      uint64_t v40 = v39;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      os_log_type_t v41 = v48;
      unint64_t v47 = (void (*)(char *, char *, uint64_t))v48[4];
      v47(v6, v9, v7);
      ((void (*)(char *, void, uint64_t, uint64_t))v41[7])(v6, 0, 1, v7);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v41[6])(v6, 1, v7) != 1)
      {
        v47(v12, v6, v7);
        uint64_t v42 = self;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        Class v44 = TimeZone._bridgeToObjectiveC()().super.isa;
        id v45 = [v42 _stringFromTimestampDate:isa departureTimeZone:v44];

        id v46 = [self _navigation_formattedDescriptionForLiveStatus:v21 updatedDepartureTimeString:v45];
        if (v46)
        {
          uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();

          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          uint64_t v38 = 0;
        }
        ((void (*)(char *, uint64_t))v48[1])(v12, v7);
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48[7])(v6, 1, 1, v7);
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_1000FF2E0((uint64_t)v6, (uint64_t *)&unk_1015D9410);
    return 0;
  }
  id v23 = v22;
  MKFormattedStringOptionsMakeDefault();
  char v24 = v49[0];
  uint64_t v25 = v50;
  char v26 = v51;
  char v27 = v52;
  char v28 = v53;
  uint64_t v29 = v54;
  id v30 = objc_allocWithZone((Class)MKServerFormattedStringParameters);
  v49[0] = v24;
  uint64_t v50 = v25;
  char v51 = v26;
  char v52 = v27;
  char v53 = v28;
  uint64_t v54 = v29;
  id v31 = [v30 initWithOptions:v49 variableOverrides:0];
  id v32 = [objc_allocWithZone((Class)MKServerFormattedString) initWithGeoServerString:v23 parameters:v31];
  sub_1000EFC40((uint64_t)_swiftEmptyArrayStorage);
  Class v33 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v34 = [v32 multiPartAttributedStringWithAttributes:v33];

  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    swift_unknownObjectRelease();

    goto LABEL_10;
  }
  id v48 = v31;
  id result = [v34 attributedString];
  if (result)
  {
    double v36 = result;
    id v37 = [result string];

    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
LABEL_22:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return (id)v38;
  }
  __break(1u);
  return result;
}

id sub_10031D5CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v89 = a3;
  uint64_t v86 = a4;
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v79 - v10;
  __chkstk_darwin(v12);
  id v88 = (char *)&v79 - v13;
  uint64_t v14 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v14 - 8);
  uint64_t v83 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v79 - v17;
  uint64_t v19 = type metadata accessor for TimeZone();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v79 - v24;
  uint64_t v90 = a2;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v27 = [a1 departuresValidForDate:isa];

  if (v27)
  {
    sub_1000FF33C((uint64_t *)&unk_1015DB008);
    unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v28 = 0;
  }
  id v29 = [a1 timeZone];
  unint64_t v92 = v25;
  uint64_t v87 = v19;
  if (!v29)
  {
    uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v82(v18, 1, 1, v19);
LABEL_8:
    static TimeZone.current.getter();
    sub_1000FF2E0((uint64_t)v18, (uint64_t *)&unk_1015D9A00);
    goto LABEL_10;
  }
  id v30 = v29;
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  id v31 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v31(v18, v22, v19);
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v82(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    goto LABEL_8;
  }
  v31(v92, v18, v19);
LABEL_10:
  uint64_t v32 = v90;
  Class v33 = Date._bridgeToObjectiveC()().super.isa;
  Class v34 = TimeZone._bridgeToObjectiveC()().super.isa;
  id v35 = a1;
  unsigned int v36 = [a1 isValidForDate:v33 inTimeZone:v34];

  id v91 = v35;
  if (!v36)
  {
    swift_bridgeObjectRelease();
    Class v42 = Date._bridgeToObjectiveC()().super.isa;
    id v43 = [v35 serviceResumesAfterDate:v42];

    uint64_t v81 = v20;
    if (v43)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v44 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 0, 1, v44);
    }
    else
    {
      uint64_t v44 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v11, 1, 1, v44);
    }
    uint64_t v45 = (uint64_t)v11;
    uint64_t v46 = (uint64_t)v88;
    sub_100101750(v45, (uint64_t)v88, (uint64_t *)&unk_1015D9410);
    sub_1000FF27C(v46, (uint64_t)v8, (uint64_t *)&unk_1015D9410);
    type metadata accessor for Date();
    uint64_t v47 = *(void *)(v44 - 8);
    Class v48 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v8, 1, v44) != 1)
    {
      Class v48 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v44);
    }
    Class v49 = Date._bridgeToObjectiveC()().super.isa;
    Class v50 = TimeZone._bridgeToObjectiveC()().super.isa;
    id v51 = (id)MKServiceGapDescription();

    if (v51)
    {
      uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;
    }
    else
    {
      uint64_t v85 = 0;
      uint64_t v53 = 0;
    }
    uint64_t v84 = v53;
    id result = [v91 displayName];
    if (result)
    {
      uint64_t v54 = result;
      uint64_t v83 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v56 = v55;

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v32, v44);
      sub_1000FF2E0((uint64_t)v88, (uint64_t *)&unk_1015D9410);
      uint64_t v57 = 0;
      id v58 = 0;
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      unint64_t v61 = 0xE000000000000000;
      uint64_t v62 = v87;
      uint64_t v63 = v81;
      uint64_t v64 = (uint64_t)v92;
      uint64_t v65 = v84;
LABEL_50:
      id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v64, v62);
      id v77 = v86;
      *uint64_t v86 = v57;
      v77[1] = v60;
      v77[2] = (uint64_t)v58;
      v77[3] = v61;
      v77[4] = (uint64_t)v83;
      v77[5] = v56;
      v77[6] = v85;
      v77[7] = v65;
      uint64_t v78 = (uint64_t)v91;
      v77[8] = v59;
      v77[9] = v78;
      v77[10] = v89;
      return result;
    }
    goto LABEL_53;
  }
  if (!v28)
  {
    uint64_t v40 = 0;
    id v37 = v91;
LABEL_32:
    id v66 = [v37 displayName];
    if (!v66)
    {
      uint64_t v80 = 0;
      unint64_t v56 = 0;
LABEL_36:
      if (v89 == 4 && (id v68 = [v37 originName]) != 0)
      {
        id v69 = v68;
        uint64_t v63 = v20;
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v71 = v70;
      }
      else
      {
        uint64_t v63 = v20;
        uint64_t v85 = 0;
        uint64_t v71 = 0;
      }
      uint64_t v57 = sub_10031C700(v37, v28, v90, (uint64_t)v92);
      unint64_t v60 = v72;
      swift_bridgeObjectRelease();
      uint64_t v84 = v71;
      if (v40) {
        id v88 = (char *)[v40 liveStatus];
      }
      else {
        id v88 = 0;
      }
      uint64_t v73 = (uint64_t)v83;
      uint64_t v64 = (uint64_t)v92;
      uint64_t v62 = v87;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v83, v92, v87);
      v82((char *)v73, 0, 1, v62);
      id v58 = sub_10031CF5C(v40, v73);
      unint64_t v61 = v74;
      sub_1000FF2E0(v73, (uint64_t *)&unk_1015D9A00);
      if (!v60)
      {
        uint64_t v57 = 0;
        unint64_t v60 = 0xE000000000000000;
      }
      swift_unknownObjectRelease();
      uint64_t v75 = (char *)v80;
      if (!v56) {
        uint64_t v75 = 0;
      }
      uint64_t v83 = v75;
      if (!v56) {
        unint64_t v56 = 0xE000000000000000;
      }
      uint64_t v76 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8))(v90, v76);
      uint64_t v65 = v84;
      uint64_t v59 = (uint64_t)v88;
      goto LABEL_50;
    }
    id v41 = v66;
LABEL_34:
    uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v56 = v67;

    goto LABEL_36;
  }
  id v37 = v91;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
  uint64_t v38 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v38)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v40 = 0;
    goto LABEL_32;
  }
LABEL_14:
  if ((v28 & 0xC000000000000001) != 0)
  {
    uint64_t v40 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
    swift_bridgeObjectRelease();
    id v41 = [v40 displayName];
    if (v41) {
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v40 = *(void **)(v28 + 32);
    swift_unknownObjectRetain();
    goto LABEL_17;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_10031DE90(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 3) {
    return 1;
  }
  else {
    return qword_100F6D188[a1 - 2];
  }
}

uint64_t destroy for NearbyTransitDeparturesViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void *initializeWithCopy for NearbyTransitDeparturesViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for NearbyTransitDeparturesViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = a2[10];
  return a1;
}

void *assignWithTake for NearbyTransitDeparturesViewModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_unknownObjectRelease();
  a1[10] = a2[10];
  return a1;
}

ValueMetadata *type metadata accessor for NearbyTransitDeparturesViewModel()
{
  return &type metadata for NearbyTransitDeparturesViewModel;
}

uint64_t sub_10031E0F8(void *a1, char a2, uint64_t a3, char a4, char *a5, uint64_t a6, double a7)
{
  uint64_t v32 = a6;
  uint64_t v30 = a3;
  id v31 = a5;
  uint64_t v11 = type metadata accessor for MapsElevationChart();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = sub_1000FF33C(&qword_1015DB048);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_6;
  }
  id v24 = a1;
  if (!objc_msgSend(v24, "isValid", v30))
  {

LABEL_6:
    id v27 = objc_allocWithZone((Class)sub_1000FF33C(&qword_1015DB050));
    return UIHostingController.init(rootView:)();
  }
  sub_10031E40C((unint64_t)v24, a2 & 1, a4 & 1, v31, v32, (uint64_t)v19, a7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1000FF2E0((uint64_t)v19, &qword_1015DB048);
    id v25 = objc_allocWithZone((Class)sub_1000FF33C(&qword_1015DB050));
    uint64_t v26 = UIHostingController.init(rootView:)();
  }
  else
  {
    sub_100320E20((uint64_t)v19, (uint64_t)v23, type metadata accessor for MapsElevationChartViewModel);
    sub_100320D58((uint64_t)v23, (uint64_t)v16, type metadata accessor for MapsElevationChartViewModel);
    *(void *)&v16[*(int *)(v11 + 20)] = 0x4024000000000000;
    id v29 = objc_allocWithZone((Class)sub_1000FF33C(&qword_1015DB058));
    sub_100320D58((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
    uint64_t v26 = UIHostingController.init(rootView:)();
    sub_100320DC0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MapsElevationChart);

    sub_100320DC0((uint64_t)v23, type metadata accessor for MapsElevationChartViewModel);
  }
  return v26;
}

void sub_10031E40C(unint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v118 = a5;
  uint64_t v131 = a4;
  uint64_t v126 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  char v138 = (uint64_t *)((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v15 = *(void **)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v115 = (char *)&v109 - v19;
  __chkstk_darwin(v20);
  uint64_t v114 = (char *)&v109 - v21;
  __chkstk_darwin(v22);
  uint64_t v129 = (char *)&v109 - v23;
  __chkstk_darwin(v24);
  uint64_t v128 = (char *)&v109 - v25;
  __chkstk_darwin(v26);
  int v127 = (char *)&v109 - v27;
  __chkstk_darwin(v28);
  uint64_t v124 = (char *)&v109 - v29;
  __chkstk_darwin(v30);
  uint64_t v123 = (char *)&v109 - v31;
  __chkstk_darwin(v32);
  unint64_t v135 = (char *)&v109 - v33;
  __chkstk_darwin(v34);
  uint64_t v116 = (char *)&v109 - v35;
  id v36 = [self standardUserDefaults];
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v36 objectForKey:v37];

  if (v38)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v145, 0, sizeof(v145));
  }
  sub_10011896C((uint64_t)v145, (uint64_t)v146);
  sub_10011D518((uint64_t)v146, (uint64_t)&v143);
  if (!v144)
  {
    sub_1000FF2E0((uint64_t)&v143, (uint64_t *)&unk_1015CD260);
LABEL_19:
    sub_10031F748((void *)a1, a2 & 1, a3 & 1, v131, v118, a6, a7);
    sub_1000FF2E0((uint64_t)v146, (uint64_t *)&unk_1015CD260);
    return;
  }
  sub_1000EFD84(&v143, v145);
  sub_1000F2354((uint64_t)v145, (uint64_t)&v143);
  sub_100100830(0, (unint64_t *)&qword_1015D9680);
  swift_dynamicCast();
  id v39 = v142;
  unsigned int v40 = [v142 BOOLValue];

  if (!v40)
  {
    sub_1000FF22C((uint64_t)v145);
    goto LABEL_19;
  }
  id v41 = [(id)a1 points];
  if (!v41)
  {
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  Class v42 = v41;
  int v113 = a2;
  *(void *)&long long v143 = 0;
  uint64_t v122 = sub_100100830(0, &qword_1015DB060);
  static Array._forceBridgeFromObjectiveC(_:result:)();
  unint64_t v43 = v143;
  if ((void)v143)
  {

    uint64_t v44 = v43 & 0xFFFFFFFFFFFFFF8;
    if (v43 >> 62) {
      goto LABEL_96;
    }
    uint64_t v45 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v45) {
      goto LABEL_97;
    }
LABEL_10:
    unint64_t v46 = v45 - 1;
    if (!__OFSUB__(v45, 1))
    {
      uint64_t v112 = (void *)a1;
      a1 = v43 & 0xC000000000000001;
      if ((v43 & 0xC000000000000001) != 0) {
        goto LABEL_99;
      }
      if ((v46 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v46 < *(void *)(v44 + 16))
      {
        id v47 = *(id *)(v43 + 8 * v46 + 32);
        goto LABEL_15;
      }
      __break(1u);
LABEL_102:
      if (v17 < 0) {
        unint64_t v43 = v17;
      }
      else {
        unint64_t v43 = v17 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      if (v58) {
        goto LABEL_26;
      }
LABEL_106:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_107:
      uint64_t v59 = (void (*)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_29;
    }
    while (1)
    {
      __break(1u);
LABEL_99:
      id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_15:
      Class v48 = v47;
      swift_bridgeObjectRelease();
      unsigned int v49 = [v48 offsetM];

      if (a1)
      {
        swift_bridgeObjectRetain();
        id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(void *)(v44 + 16)) {
          goto LABEL_109;
        }
        id v50 = *(id *)(v43 + 32);
      }
      id v51 = v116;
      double v52 = (double)v49;
      unsigned int v53 = [v50 offsetM];

      double v54 = v52 - (double)v53;
      unint64_t v55 = sub_10058DB6C(v54, *(double *)&v131[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth]+ *(double *)&v131[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barWidth], a7);
      double v7 = v54 / (double)v55;
      id v137 = self;
      id v56 = [v137 meters];
      uint64_t v132 = sub_100100830(0, (unint64_t *)&qword_1015D19E8);
      Measurement.init(value:unit:)();
      if (!v55) {
        goto LABEL_85;
      }
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      unint64_t v43 = (unint64_t)sub_10058D218(isa, v55);

      sub_1000FF33C(&qword_1015DB068);
      uint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v44 = *(void *)(v45 + 16);
      if (!v44)
      {
LABEL_85:
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v15[1])(v51, v14);
        sub_1000FF22C((uint64_t)v145);
        sub_1000FF2E0((uint64_t)v146, (uint64_t *)&unk_1015CD260);
        uint64_t v108 = type metadata accessor for MapsElevationChartViewModel(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(a6, 1, 1, v108);
        return;
      }
      uint64_t v110 = v17;
      unsigned int v111 = a3;
      uint64_t v17 = *(void *)(v45 + 32);
      if ((unint64_t)v17 >> 62) {
        goto LABEL_102;
      }
      uint64_t v58 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v58) {
        goto LABEL_106;
      }
LABEL_26:
      unint64_t v43 = (v17 & 0xC000000000000001) == 0;
      uint64_t v109 = a6;
      if ((v17 & 0xC000000000000001) != 0) {
        goto LABEL_107;
      }
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      uint64_t v59 = (void (*)(char *, uint64_t))*(id *)(v17 + 32);
LABEL_29:
      unint64_t v141 = v59;
      swift_bridgeObjectRelease();
      uint64_t v121 = OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition;
      BOOL v60 = __OFSUB__(v58, 1);
      unint64_t v61 = v58 - 1;
      a1 = v60;
      swift_bridgeObjectRetain();
      if (a1)
      {
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
      }
      else
      {
        a6 = 0;
        a3 = 0;
        uint64_t v136 = (void (**)(char *, uint64_t, uint64_t))(v15 + 2);
        unint64_t v130 = (void (**)(char *, uint64_t))(v15 + 1);
        uint64_t v120 = v44 - 1;
        uint64_t v15 = _swiftEmptyArrayStorage;
        uint64_t v119 = v45;
        while (1)
        {
          uint64_t v139 = a6;
          if (v43)
          {
            a1 = (unint64_t)v135;
            if ((v61 & 0x8000000000000000) != 0) {
              goto LABEL_87;
            }
            if (v61 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_88;
            }
            uint64_t v140 = (void (*)(char *, uint64_t))*(id *)(v17 + 8 * v61 + 32);
          }
          else
          {
            uint64_t v140 = (void (*)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
            a1 = (unint64_t)v135;
          }
          unsigned int v133 = a3;
          swift_bridgeObjectRelease();
          id v62 = [objc_allocWithZone((Class)GEOPoint) init];
          if (!v62) {
            goto LABEL_110;
          }
          uint64_t v44 = (uint64_t)v62;
          uint64_t v63 = v141;
          unint64_t v43 = (unint64_t)[v141 offsetM];
          a3 = [v140 offsetM];
          unsigned int v64 = [v63 offsetM];
          unsigned int v65 = a3 - v64;
          if (a3 < v64) {
            break;
          }
          if (__CFADD__(v43, v65 >> 1)) {
            goto LABEL_90;
          }
          [(id)v44 setOffsetM:v43 + (v65 >> 1)];
          unint64_t v43 = (unint64_t)Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          double v66 = sub_10058CED4((void *)v43);

          double v67 = v66 / v7;
          if ((~COERCE__INT64(v66 / v7) & 0x7FF0000000000000) == 0) {
            goto LABEL_91;
          }
          if (v67 <= -2147483650.0) {
            goto LABEL_92;
          }
          if (v67 >= 2147483650.0) {
            goto LABEL_93;
          }
          [(id)v44 setElevationCm:(int)v67];
          [(id)v44 offsetM];
          id v68 = [v137 meters];
          Measurement.init(value:unit:)();
          id v69 = *v136;
          BOOL v70 = v131[v121] == 1;
          uint64_t v134 = *v136;
          if (v70)
          {
            uint64_t v117 = v15;
            unint64_t v71 = a1;
            unint64_t v72 = v123;
            uint64_t v73 = v69;
            v69(v123, v71, v14);
            unint64_t v74 = v124;
            static Measurement<>.+ infix(_:_:)();
            sub_100206258();
            uint64_t v75 = v118;
            LOBYTE(v71) = dispatch thunk of static Comparable.< infix(_:_:)();
            v73(v127, v75, v14);
            v73(v128, (uint64_t)v72, v14);
            v73(v129, (uint64_t)v74, v14);
            if ((v71 & 1) != 0 || v139)
            {
              id v77 = v127;
              char v78 = dispatch thunk of static Comparable.< infix(_:_:)();
              uint64_t v79 = v114;
              uint64_t v80 = (void (*)(char *, char *, uint64_t))v134;
              v134(v114, (uint64_t)v77, v14);
              uint64_t v81 = v115;
              v80(v115, v129, v14);
              unsigned int v82 = v133;
              if (v78) {
                int v83 = 0;
              }
              else {
                int v83 = static Measurement.< infix<A, B>(_:_:)();
              }
              a1 = (unint64_t)v135;
              a6 = v139;
              uint64_t v84 = *v130;
              (*v130)(v81, v14);
              v84(v79, v14);
              v84(v129, v14);
              v84(v128, v14);
              v84(v127, v14);
              v84(v124, v14);
              v84(v123, v14);
              a3 = v83 | v82;
              uint64_t v15 = v117;
            }
            else
            {
              uint64_t v76 = *v130;
              (*v130)(v129, v14);
              v76(v128, v14);
              v76(v127, v14);
              v76(v124, v14);
              v76(v123, v14);
              a3 = 1;
              a1 = (unint64_t)v135;
              uint64_t v15 = v117;
              a6 = v139;
            }
            id v69 = v134;
          }
          else
          {
            a3 = v133;
            a6 = v139;
          }
          uint64_t v85 = v126;
          uint64_t v86 = v138;
          v69((char *)v138 + *(int *)(v126 + 20), a1, v14);
          [(id)v44 elevationCm];
          id v87 = [v137 centimeters];
          Measurement.init(value:unit:)();
          *uint64_t v86 = a6;
          *((unsigned char *)v86 + *(int *)(v85 + 28)) = (a3 & 1) == 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v15 = (void *)sub_1001D0870(0, v15[2] + 1, 1, (unint64_t)v15);
          }
          unint64_t v43 = v15[2];
          unint64_t v88 = v15[3];
          uint64_t v17 = v43 + 1;
          if (v43 >= v88 >> 1) {
            uint64_t v15 = (void *)sub_1001D0870(v88 > 1, v43 + 1, 1, (unint64_t)v15);
          }
          v15[2] = v17;
          sub_100320E20((uint64_t)v138, (uint64_t)v15+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v43, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);

          uint64_t v89 = *v130;
          (*v130)((char *)a1, v14);
          if (v120 == a6)
          {
            swift_bridgeObjectRelease();
            if (v113) {
              id v91 = &selRef_meters;
            }
            else {
              id v91 = &selRef_feet;
            }
            if (v113) {
              unint64_t v92 = &selRef_kilometers;
            }
            else {
              unint64_t v92 = &selRef_miles;
            }
            id v93 = sub_100320E88(v112, v113 & 1);
            uint64_t v95 = v94;
            uint64_t v140 = v97;
            unint64_t v141 = v96;
            id v98 = *v91;
            id v99 = v137;
            id v100 = [v137 v98];
            id v101 = [v99 *v92];
            uint64_t v102 = v110;
            v134((char *)v110, v118, v14);
            uint64_t v103 = swift_allocObject();
            uint64_t v104 = v131;
            *(void *)(v103 + 16) = v131;
            *(unsigned char *)(v103 + 24) = v111 & 1;
            unint64_t v105 = v104;
            uint64_t v106 = v109;
            sub_100202714((uint64_t)v15, v100, v101, v102, (uint64_t)v93, v95, v141, v140, v109, a7, 100.0, v105, 0, 0, 1u, (uint64_t)sub_100321354, v103);
            v89(v116, v14);
            sub_1000FF22C((uint64_t)v145);
            sub_1000FF2E0((uint64_t)v146, (uint64_t *)&unk_1015CD260);
            uint64_t v107 = type metadata accessor for MapsElevationChartViewModel(0);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 0, 1, v107);
            return;
          }
          uint64_t v45 = v119;
          if ((unint64_t)(a6 + 1) >= *(void *)(v119 + 16)) {
            goto LABEL_94;
          }
          uint64_t v17 = *(void *)(v119 + 8 * a6 + 40);
          if ((unint64_t)v17 >> 62)
          {
            if (v17 < 0) {
              unint64_t v43 = *(void *)(v119 + 8 * a6 + 40);
            }
            else {
              unint64_t v43 = v17 & 0xFFFFFFFFFFFFFF8;
            }
            swift_bridgeObjectRetain_n();
            uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v58) {
              goto LABEL_106;
            }
          }
          else
          {
            uint64_t v58 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            if (!v58) {
              goto LABEL_106;
            }
          }
          unint64_t v43 = (v17 & 0xC000000000000001) == 0;
          if ((v17 & 0xC000000000000001) != 0)
          {
            uint64_t v90 = (void (*)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_95;
            }
            uint64_t v90 = (void (*)(char *, uint64_t))*(id *)(v17 + 32);
          }
          unint64_t v141 = v90;
          swift_bridgeObjectRelease();
          BOOL v60 = __OFSUB__(v58, 1);
          unint64_t v61 = v58 - 1;
          uint64_t v44 = v60;
          swift_bridgeObjectRetain();
          ++a6;
          if (v44) {
            goto LABEL_86;
          }
        }
      }
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      swift_bridgeObjectRetain();
      uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
      if (v45) {
        goto LABEL_10;
      }
LABEL_97:
      swift_bridgeObjectRelease();
      __break(1u);
    }
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
LABEL_112:
  __break(1u);
}

id sub_10031F748@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v176 = a5;
  unint64_t v175 = a4;
  int v172 = a2;
  uint64_t v170 = a6;
  uint64_t v187 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v12 = (char *)&v164 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_1000FF33C(&qword_1015DB070);
  long long v206 = *(void (**)(char *, uint64_t))(v203 - 8);
  __chkstk_darwin(v203);
  id v204 = (void (*)(char *, uint64_t))((char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  unint64_t v202 = (char *)&v164 - v15;
  uint64_t v207 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v16 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v18 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v188 = (char *)&v164 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v164 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v164 - v25;
  __chkstk_darwin(v27);
  id v192 = (char *)&v164 - v28;
  __chkstk_darwin(v29);
  id v191 = (char *)&v164 - v30;
  __chkstk_darwin(v31);
  id v190 = (char *)&v164 - v32;
  __chkstk_darwin(v33);
  id v185 = (char *)&v164 - v34;
  __chkstk_darwin(v35);
  uint64_t v184 = (char *)&v164 - v36;
  __chkstk_darwin(v37);
  Swift::Int v194 = (char *)&v164 - v38;
  *(void *)&double v40 = __chkstk_darwin(v39).n128_u64[0];
  Swift::Int v182 = (char *)&v164 - v41;
  unint64_t v168 = a1;
  id result = [a1 points];
  if (!result)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  unint64_t v43 = result;
  unint64_t v208 = 0;
  sub_100100830(0, &qword_1015DB060);
  id result = (id)static Array._forceBridgeFromObjectiveC(_:result:)();
  unint64_t v44 = v208;
  if (!v208)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  unsigned int v174 = v26;
  uint64_t v183 = v12;

  if (!(v44 >> 62))
  {
    uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v45) {
      goto LABEL_5;
    }
LABEL_61:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
  if (!v45) {
    goto LABEL_61;
  }
LABEL_5:
  unint64_t v46 = v45 - 1;
  if (__OFSUB__(v45, 1))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v173 = v23;
  uint64_t v23 = (char *)(v44 & 0xC000000000000001);
  int v167 = a3;
  uint64_t v166 = v18;
  if ((v44 & 0xC000000000000001) == 0)
  {
    if ((v46 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v46 < *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v47 = *(id *)(v44 + 8 * v46 + 32);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_66;
  }
LABEL_63:
  id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
  Class v48 = v47;
  swift_bridgeObjectRelease();
  unsigned int v49 = [v48 offsetM];

  if (v23)
  {
    swift_bridgeObjectRetain();
    id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_67:
      __break(1u);
LABEL_68:
      swift_bridgeObjectRetain();
      uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v68 >= 1) {
        goto LABEL_32;
      }
LABEL_69:
      (*(void (**)(char *, uint64_t))(v16 + 8))(v182, v207);
      swift_bridgeObjectRelease();

      uint64_t v161 = type metadata accessor for MapsElevationChartViewModel(0);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 56))(v170, 1, 1, v161);
    }
    id v50 = *(id *)(v44 + 32);
  }
  double v51 = (double)v49;
  unsigned int v52 = [v50 offsetM];

  double v53 = *(double *)&v175[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth]
      + *(double *)&v175[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barWidth];
  unint64_t v54 = sub_10058DB6C(v51 - (double)v52, v53, a7);
  unint64_t v7 = self;
  id v55 = [(id)v7 meters];
  uint64_t v205 = sub_100100830(0, (unint64_t *)&qword_1015D19E8);
  Measurement.init(value:unit:)();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v57 = sub_10058D874(isa, v54, v53);

  sub_100100830(0, &qword_1015DB078);
  uint64_t v189 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v58 = &selRef_feet;
  if (v172)
  {
    uint64_t v58 = &selRef_meters;
    uint64_t v59 = &selRef_kilometers;
  }
  else
  {
    uint64_t v59 = &selRef_miles;
  }
  id v171 = [(id)v7 *v58];
  BOOL v60 = *v59;
  id v165 = (id)v7;
  id v61 = [(id)v7 v60];
  if (v45 < 1)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  id v169 = v61;
  uint64_t v62 = 0;
  double v63 = INFINITY;
  double v64 = -INFINITY;
  unint64_t v7 = v189;
  do
  {
    if (v23) {
      id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v66 = *(id *)(v44 + 8 * v62 + 32);
    }
    double v67 = v66;
    if (v63 > (double)(int)[v66 elevationCm]) {
      double v63 = (double)(int)[v67 elevationCm];
    }
    if (v64 < (double)(int)[v67 elevationCm])
    {
      int v65 = [v67 elevationCm];

      double v64 = (double)v65;
    }
    else
    {
    }
    ++v62;
  }
  while (v45 != v62);
  swift_bridgeObjectRelease();
  if ((~*(void *)&v63 & 0x7FF0000000000000) == 0 || (~*(void *)&v64 & 0x7FF0000000000000) == 0) {
    goto LABEL_69;
  }
  if (v7 >> 62) {
    goto LABEL_68;
  }
  uint64_t v68 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v68 < 1) {
    goto LABEL_69;
  }
LABEL_32:
  int v69 = 0;
  BOOL v70 = 0;
  int v180 = v175[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition];
  unint64_t v179 = v7 & 0xC000000000000001;
  uint64_t v201 = (char *)v206 + 8;
  uint64_t v197 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  Swift::Int v193 = (void (**)(char *, uint64_t))(v16 + 8);
  id v178 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  unint64_t v71 = _swiftEmptyArrayStorage;
  unint64_t v72 = v194;
  uint64_t v181 = v68;
  do
  {
    long long v206 = v70;
    uint64_t v200 = v71;
    int v195 = v69;
    if (v179) {
      id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v73 = *(id *)(v7 + 8 * (void)v70 + 32);
    }
    unint64_t v74 = v73;
    id v75 = [v73 offsetMeasurement];
    uint64_t v76 = sub_100100830(0, (unint64_t *)&unk_1015DB080);
    uint64_t v77 = (uint64_t)v202;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v78 = v203;
    Measurement.value.getter();
    uint64_t v79 = *(void (**)(void, uint64_t))v201;
    (*(void (**)(uint64_t, uint64_t))v201)(v77, v78);
    id v80 = [v74 offsetMeasurement];
    uint64_t v81 = v204;
    uint64_t v199 = v76;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)();

    Measurement.unit.getter();
    uint64_t v198 = v79;
    v79(v81, v78);
    self;
    swift_dynamicCastObjCClassUnconditional();
    Measurement.init(value:unit:)();
    unsigned int v82 = *v197;
    id v196 = *v197;
    if (v180)
    {
      size_t v177 = v74;
      int v83 = v184;
      uint64_t v84 = v207;
      uint64_t v85 = v82;
      v82(v184, (uint64_t)v72, v207);
      uint64_t v86 = v185;
      static Measurement<>.+ infix(_:_:)();
      sub_100206258();
      uint64_t v87 = v176;
      char v88 = dispatch thunk of static Comparable.< infix(_:_:)();
      v85(v190, v87, v84);
      v85(v191, (uint64_t)v83, v84);
      v85(v192, (uint64_t)v86, v84);
      if ((v88 & 1) != 0 || v206)
      {
        id v91 = v190;
        uint64_t v92 = v207;
        char v93 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v94 = v174;
        uint64_t v95 = (void (*)(char *, char *, uint64_t))v196;
        v196(v174, (uint64_t)v91, v92);
        id v96 = v173;
        v95(v173, v192, v92);
        if (v93) {
          int v97 = 0;
        }
        else {
          int v97 = static Measurement.< infix<A, B>(_:_:)();
        }
        id v98 = v94;
        unint64_t v72 = v194;
        unint64_t v74 = v177;
        id v99 = *v193;
        uint64_t v100 = v207;
        (*v193)(v96, v207);
        v99(v98, v100);
        v99(v192, v100);
        v99(v191, v100);
        v99(v190, v100);
        v99(v185, v100);
        v99(v184, v100);
        int v69 = v97 | v195;
        unsigned int v82 = v196;
      }
      else
      {
        uint64_t v89 = *v193;
        uint64_t v90 = v207;
        (*v193)(v192, v207);
        v89(v191, v90);
        v89(v190, v90);
        v89(v185, v90);
        v89(v184, v90);
        int v69 = 1;
        unint64_t v72 = v194;
        unsigned int v82 = v196;
        unint64_t v74 = v177;
      }
    }
    else
    {
      int v69 = v195;
    }
    id v101 = v188;
    uint64_t v102 = v207;
    v82(v188, (uint64_t)v72, v207);
    id v103 = [v74 elevationMeasurement];
    uint64_t v104 = (uint64_t)v202;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v105 = v203;
    Measurement.value.getter();
    uint64_t v106 = v198;
    v198(v104, v105);
    uint64_t v107 = v102;
    id v108 = [v74 elevationMeasurement];
    uint64_t v109 = v204;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)();

    Measurement.unit.getter();
    v106(v109, v105);
    self;
    swift_dynamicCastObjCClassUnconditional();
    uint64_t v110 = v187;
    unsigned int v111 = v183;
    Measurement.init(value:unit:)();
    uint64_t v112 = v206;
    *(void *)unsigned int v111 = v206;
    (*v178)(&v111[*(int *)(v110 + 20)], v101, v107);
    v111[*(int *)(v110 + 28)] = (v69 & 1) == 0;
    unint64_t v71 = v200;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v71 = (void *)sub_1001D0870(0, v71[2] + 1, 1, (unint64_t)v71);
    }
    int v113 = (void (*)(char *, uint64_t))v181;
    unint64_t v115 = v71[2];
    unint64_t v114 = v71[3];
    unint64_t v7 = v189;
    if (v115 >= v114 >> 1) {
      unint64_t v71 = (void *)sub_1001D0870(v114 > 1, v115 + 1, 1, (unint64_t)v71);
    }
    BOOL v70 = (void (*)(char *, uint64_t))((char *)v112 + 1);
    v71[2] = v115 + 1;
    sub_100320E20((uint64_t)v111, (uint64_t)v71+ ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80))+ *(void *)(v186 + 72) * v115, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);

    unint64_t v72 = v194;
    uint64_t v116 = *v193;
    (*v193)(v194, v207);
  }
  while (v113 != v70);
  swift_bridgeObjectRelease();
  uint64_t v117 = v168;
  uint64_t v118 = (char *)sub_100320E88(v168, v172 & 1);
  uint64_t v120 = v119;
  uint64_t v122 = v121;
  uint64_t v124 = v123;
  if (GEOConfigGetBOOL())
  {
    uint64_t v125 = (uint64_t)v188;
    uint64_t v126 = v207;
    v196(v188, v176, v207);
    uint64_t v127 = swift_allocObject();
    uint64_t v128 = v175;
    *(void *)(v127 + 16) = v175;
    *(unsigned char *)(v127 + 24) = v167 & 1;
    id v129 = v128;
    uint64_t v162 = v127;
    uint64_t v130 = v170;
    sub_100202714((uint64_t)v71, v171, v169, v125, (uint64_t)v118, v120, v122, v124, v170, a7, 100.0, v129, 0, 0, 1u, (uint64_t)sub_100321354, v162);
    uint64_t v131 = v182;
    uint64_t v132 = v126;
LABEL_59:
    v116(v131, v132);
    uint64_t v160 = type metadata accessor for MapsElevationChartViewModel(0);
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v130, 0, 1, v160);
  }
  unint64_t v202 = v118;
  uint64_t v203 = v120;
  id v204 = v122;
  long long v206 = v124;
  uint64_t v200 = v71;
  unsigned int v133 = [v117 hasMinimumVisibleElevationRange];
  uint64_t v134 = (uint64_t)v188;
  if (!v133 || (GEOConfigGetBOOL() & 1) != 0)
  {
    GEOConfigGetDouble();
    id v135 = v165;
    id v136 = [v165 meters];
    id v137 = v166;
    Measurement.init(value:unit:)();
    uint64_t v138 = v207;
    Measurement<>.converted(to:)();
    v116(v137, v138);
    Measurement.value.getter();
    double v140 = v139;
    v116((char *)v134, v138);
    id v141 = [v135 centimeters];
    Measurement.init(value:unit:)();
    Measurement<>.converted(to:)();
    v116(v137, v138);
    Measurement.value.getter();
    double v143 = v142;
    v116((char *)v134, v138);
    double v144 = v140 + v143;
    id v145 = [v135 centimeters];
    Measurement.init(value:unit:)();
    Measurement<>.converted(to:)();
    v116(v137, v138);
    Measurement.value.getter();
    double v147 = v146;
    v116((char *)v134, v138);
    double v148 = v147 - v140;
LABEL_57:
    id result = (id)((uint64_t (*)(uint64_t, uint64_t, uint64_t))v196)(v134, v176, v207);
    if (v144 <= v148)
    {
      uint64_t v157 = swift_allocObject();
      unint64_t v158 = v175;
      *(void *)(v157 + 16) = v175;
      *(unsigned char *)(v157 + 24) = v167 & 1;
      id v159 = v158;
      uint64_t v163 = v157;
      uint64_t v130 = v170;
      sub_100202714((uint64_t)v200, v171, v169, v134, (uint64_t)v202, v203, v204, v206, v170, a7, 100.0, v159, *(uint64_t *)&v144, *(uint64_t *)&v148, 0, (uint64_t)sub_100321318, v163);
      uint64_t v131 = v182;
      uint64_t v132 = v207;
      goto LABEL_59;
    }
    __break(1u);
    goto LABEL_71;
  }
  id result = [v117 minimumVisibleElevationRange];
  if (result)
  {
    uint64_t v149 = result;
    [result lowerBoundCm];
    id v150 = v165;
    id v151 = [v165 centimeters];
    uint64_t v152 = v166;
    Measurement.init(value:unit:)();
    uint64_t v134 = (uint64_t)v188;
    uint64_t v153 = v207;
    Measurement<>.converted(to:)();
    v116(v152, v153);
    Measurement.value.getter();
    double v144 = v154;
    v116((char *)v134, v153);
    [v149 upperBoundCm];
    id v155 = [v150 centimeters];
    Measurement.init(value:unit:)();
    Measurement<>.converted(to:)();
    v116(v152, v153);
    Measurement.value.getter();
    double v148 = v156;

    v116((char *)v134, v153);
    goto LABEL_57;
  }
LABEL_73:
  __break(1u);
  return result;
}

id sub_100320D00()
{
  v2.unint64_t receiver = v0;
  v2.uint64_t super_class = (Class)type metadata accessor for MapsElevationGraphViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for MapsElevationGraphViewController()
{
  return self;
}

uint64_t sub_100320D58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100320DC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100320E20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_100320E88(void *a1, char a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  id v11 = [objc_allocWithZone((Class)NSLengthFormatter) init];
  id result = [v11 numberFormatter];
  if (result)
  {
    uint64_t v13 = result;
    [result setMaximumFractionDigits:1];

    [v11 setUnitStyle:2];
    uint64_t v14 = self;
    if (a2) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = 1282;
    }
    uint64_t v30 = v15;
    uint64_t v16 = &selRef_feet;
    if (a2) {
      uint64_t v16 = &selRef_meters;
    }
    id v31 = [v14 *v16];
    [a1 sumElevationGainCm];
    id v32 = self;
    id v17 = [v32 meters];
    sub_100100830(0, (unint64_t *)&qword_1015D19E8);
    Measurement.init(value:unit:)();
    Measurement<>.converted(to:)();
    id v29 = v11;
    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v7, v4);
    Measurement.value.getter();
    double v20 = v19;
    v18(v10, v4);
    id v21 = [v11 stringFromValue:v15 unit:ceil(v20)];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t countAndFlagsBits = String.uppercased()()._countAndFlagsBits;
    swift_bridgeObjectRelease();
    [a1 sumElevationLossCm];
    id v22 = [v32 meters];
    Measurement.init(value:unit:)();
    uint64_t v23 = v31;
    Measurement<>.converted(to:)();
    v18(v7, v4);
    Measurement.value.getter();
    double v25 = v24;
    v18(v10, v4);
    id v26 = v29;
    id v27 = [v29 stringFromValue:v30 unit:ceil(v25)];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.uppercased()();
    swift_bridgeObjectRelease();
    return (id)countAndFlagsBits;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100321244()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10032127C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(void *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barHighlightColor);
  if (v5)
  {
    if (a4) {
      return v5;
    }
    return *(void *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  }
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition) != 1) {
    return *(void *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  }
  uint64_t v5 = *(void *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barElapsedColor);
  if (!v5
    || (*(unsigned char *)(a1 + *(int *)(type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0) + 28)) & 1) == 0)
  {
    return *(void *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  }
  return v5;
}

id sub_100321318(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_10032127C(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));

  return v3;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHighlightExtra()
{
  return &type metadata for PlaceSummaryUnitHighlightExtra;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitInUserLibrary()
{
  return &type metadata for PlaceSummaryUnitInUserLibrary;
}

void sub_100321378()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath));
}

id sub_100321388()
{
  v2.unint64_t receiver = v0;
  v2.uint64_t super_class = (Class)type metadata accessor for HomeListCuratedCollectionsSectionController();
  return [super dealloc];
}

uint64_t sub_100321644()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100321684(char a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = (void *)Strong;
  id v4 = sub_100321E90();
  id v5 = [v3 searchPinsManager];
  if (!v5)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v6 = v5;
  id v22 = [v5 singleSearchResultItemSource];

  if (v22)
  {
    if (!v4)
    {
LABEL_11:
      sub_100100830(0, &qword_1015CF700);
      v15.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v22 setSearchResults:v15.super.isa];
LABEL_19:

      uint64_t v16 = v22;
      goto LABEL_20;
    }
    id v7 = [v4 identifier];
    if (!v7) {
      goto LABEL_17;
    }
    uint64_t v8 = v7;
    id v9 = [v3 mapSelectionManager];
    if (!v9)
    {
LABEL_25:
      __break(1u);
      return;
    }
    uint64_t v10 = v9;
    id v11 = [v9 labelMarker];

    if (v11)
    {
      id v12 = [v11 identifier];
      if (v12)
      {
        uint64_t v13 = v12;
        sub_100100830(0, (unint64_t *)&qword_1015CE490);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14)
        {

          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
    else
    {
      id v11 = v8;
    }

LABEL_17:
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_100F5DFF0;
    *(void *)(v17 + 32) = v4;
    specialized Array._endMutation()();
    sub_100100830(0, &qword_1015CF700);
    id v18 = v4;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 setSearchResults:isa];

    id v20 = [v3 mapSelectionManager];
    if (v20)
    {
      id v21 = v20;
      v15.super.Class isa = (Class)v18;
      [v21 selectSearchResult:v15.super.isa animated:a1 & 1];

      goto LABEL_19;
    }
    goto LABEL_24;
  }

  uint64_t v16 = v4;
LABEL_20:
}

void sub_100321964(void *a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration);
  *(void *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration) = a1;
  uint64_t v3 = a1;

  id v4 = [self sharedService];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v4 defaultTraits];

    id v7 = *(void **)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_newTraits);
    *(void *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_newTraits) = v6;

    [*(id *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController) setPlaceCardItem:*(void *)&v3[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] withHistory:v3[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory]];
    sub_100321684(1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for PlaceCardContextConfiguration()
{
  return self;
}

id sub_100321CE0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  [*(id *)&v0[OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController] resetState];
  v3.unint64_t receiver = v0;
  v3.uint64_t super_class = ObjectType;
  return [super dealloc];
}

id sub_100321E90()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration;
  if (([*(id *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem) isCurrentLocation] & 1) == 0)
  {
    id v2 = [*(id *)(*(void *)(v0 + v1) + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem) searchResult];
    if (v2) {
      return v2;
    }
    id v4 = [*(id *)(*(void *)(v0 + v1) + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem) mapItem];
    if (v4)
    {
      id v5 = v4;
      if (([v4 isCurrentLocation] & 1) == 0)
      {
        id v2 = [objc_allocWithZone((Class)SearchResult) initWithMapItem:v5];

        return v2;
      }
    }
  }
  return 0;
}

uint64_t type metadata accessor for PlaceCardContext()
{
  return self;
}

id sub_100322024(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = self;
  id v5 = v1;
  id result = [v4 sharedService];
  if (result)
  {
    id v7 = result;
    uint64_t v8 = OBJC_IVAR____TtC4Maps16PlaceCardContext_newTraits;
    id v9 = [result defaultTraits];

    *(void *)&v5[v8] = v9;
    *(void *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_displayedViewMode] = -1;
    swift_unknownObjectWeakInit();
    *(void *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController] = 0;
    *(void *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration] = a1;
    id v10 = objc_allocWithZone((Class)PlaceCardViewController);
    id v11 = a1;
    id result = [v10 initWithVisualEffectDisabled:1];
    if (result)
    {
      *(void *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController] = result;

      v12.unint64_t receiver = v5;
      v12.uint64_t super_class = ObjectType;
      return [super init];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall UIView.annotateViewForAvoidTolls()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015D1530);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015D1640, &qword_1015D1648);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidTollsEntity;
  v4[4] = sub_100189378();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidTollsEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

Swift::Void __swiftcall UIView.annotateViewForAvoidHighways()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015D76E0);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015D77E0, &qword_1015D77E8);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidHighwaysEntity;
  v4[4] = sub_1002692C8();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidHighwaysEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

Swift::Void __swiftcall UIView.annotateViewForAvoidHillsInWalking()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015D39C8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015D3AC8, &qword_1015D3AD0);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidHillsInWalkingEntity;
  v4[4] = sub_1001C249C();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidHillsInWalkingEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

Swift::Void __swiftcall UIView.annotateViewForAvoidBusyRoadsInWalking()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015D8F40);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015D9040, &qword_1015D9048);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidBusyRoadsInWalkingEntity;
  v4[4] = sub_10029D2D8();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidBusyRoadsInWalkingEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

Swift::Void __swiftcall UIView.annoateViewForAvoidStairs()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015D94B0);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015D95B0, &qword_1015D95B8);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidStairsEntity;
  v4[4] = sub_1002A800C();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidStairsEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

Swift::Void __swiftcall UIView.annotateViewForAvoidHillsInCycling()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015D7AC8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015D7BC8, &qword_1015D7BD0);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidHillsInCyclingEntity;
  v4[4] = sub_10026F230();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidHillsInCyclingEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

Swift::Void __swiftcall UIView.annotateViewForAvoidBusyRoadsInCycling()()
{
  uint64_t v0 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v1 - 8);
  sub_1000FF33C(&qword_1015DAED8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1003235B0(&qword_1015DAFD8, &qword_1015DAFE0);
  uint64_t v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  v4[3] = &type metadata for AvoidBusyRoadsInCyclingEntity;
  v4[4] = sub_10031A900();
  v4[0] = v2;
  sub_1000FF380(v4, (uint64_t)&type metadata for AvoidBusyRoadsInCyclingEntity);
  swift_retain_n();
  sub_1002AE15C();
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
  swift_retain();
  objc_super v3 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
  UIView.annotate(with:)();

  sub_1000FF22C((uint64_t)v4);
  swift_release_n();
}

void UIView.annotateViewForTransitPreferenceMode(mode:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppEntityVisualState();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v3 - 8);
  switch(a1)
  {
    case 1:
      sub_1000FF33C(&qword_1015D5330);
      LocalizedStringResource.init(stringLiteral:)();
      sub_1003235B0(&qword_1015D5430, &qword_1015D5438);
      uint64_t v4 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
      id v5 = &type metadata for TransitPreferBusEntity;
      id v9 = &type metadata for TransitPreferBusEntity;
      unint64_t v6 = sub_1001FA080();
      goto LABEL_6;
    case 2:
      sub_1000FF33C(&qword_1015D6268);
      LocalizedStringResource.init(stringLiteral:)();
      sub_1003235B0(&qword_1015D6368, &qword_1015D6370);
      uint64_t v4 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
      id v5 = &type metadata for TransitPreferSubwayEntity;
      id v9 = &type metadata for TransitPreferSubwayEntity;
      unint64_t v6 = sub_10023CF44();
      goto LABEL_6;
    case 4:
      sub_1000FF33C(&qword_1015D9EB0);
      LocalizedStringResource.init(stringLiteral:)();
      sub_1003235B0(&qword_1015D9FB0, &qword_1015D9FB8);
      uint64_t v4 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
      id v5 = &type metadata for TransitPreferCommuterRailEntity;
      id v9 = &type metadata for TransitPreferCommuterRailEntity;
      unint64_t v6 = sub_1002D3544();
      goto LABEL_6;
    case 8:
      sub_1000FF33C(&qword_1015DB198);
      LocalizedStringResource.init(stringLiteral:)();
      sub_1003235B0(&qword_1015DB1A0, &qword_1015DB1A8);
      uint64_t v4 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
      id v5 = &type metadata for TransitPreferFerryEntity;
      id v9 = &type metadata for TransitPreferFerryEntity;
      unint64_t v6 = sub_10032355C();
LABEL_6:
      unint64_t v10 = v6;
      v8[0] = v4;
      sub_1000FF380(v8, (uint64_t)v5);
      swift_retain_n();
      sub_1002AE15C();
      objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation());
      swift_retain();
      id v7 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)();
      UIView.annotate(with:)();

      sub_1000FF22C((uint64_t)v8);
      swift_release_n();
      break;
    default:
      return;
  }
}

unint64_t sub_10032355C()
{
  unint64_t result = qword_1015DB1B0;
  if (!qword_1015DB1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB1B0);
  }
  return result;
}

uint64_t sub_1003235B0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003237A4()
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  sub_100326F70((unint64_t *)&qword_1015DB2E8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 0x3A656C646E61680ALL;
  v1._object = (void *)0xE900000000000020;
  String.append(_:)(v1);
  type metadata accessor for Handle();
  sub_100326F70(&qword_1015DB2F8, (void (*)(uint64_t))&type metadata accessor for Handle);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0x3A64692D7370616DLL;
}

id sub_100323938()
{
  return sub_100323E30(0, (uint64_t (*)(void))type metadata accessor for SearchFindMyHandle);
}

uint64_t sub_10032397C()
{
  return type metadata accessor for SearchFindMyHandle(0);
}

uint64_t type metadata accessor for SearchFindMyHandle(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015DB1E0);
}

uint64_t sub_1003239A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100323F8C(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Handle);
}

uint64_t sub_100323A4C(uint64_t a1, void *a2, uint64_t (*a3)(char *, uint64_t))
{
  swift_getObjectType();
  sub_10011D518(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_1001189D4((uint64_t)v10);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v7 = 0;
    return v7 & 1;
  }
  char v7 = a3(&v9[*a2], v3 + *a2);

  return v7 & 1;
}

uint64_t sub_100323B24(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(char *, uint64_t))
{
  if (a3)
  {
    id v8 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    id v9 = a1;
  }
  char v10 = sub_100323A4C((uint64_t)v12, a4, a5);

  sub_1001189D4((uint64_t)v12);
  return v10 & 1;
}

id sub_100323C0C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_100323C7C()
{
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  sub_100326F70((unint64_t *)&qword_1015DB2E8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 0x6F697461636F6C0ALL;
  v1._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v1);
  type metadata accessor for Location();
  sub_100326F70(&qword_1015DB2F0, (void (*)(uint64_t))&type metadata accessor for Location);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return 0x3A64692D7370616DLL;
}

id sub_100323E14()
{
  return sub_100323E30(0, (uint64_t (*)(void))type metadata accessor for SearchFindMyLocation);
}

id sub_100323E30(uint64_t a1, uint64_t (*a2)(void))
{
  v4.unint64_t receiver = v2;
  v4.uint64_t super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100323E90(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void), void *a5)
{
  uint64_t v7 = a1 + *a3;
  uint64_t v8 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + *a5;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_100323F4C()
{
  return type metadata accessor for SearchFindMyLocation(0);
}

uint64_t type metadata accessor for SearchFindMyLocation(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015DB218);
}

uint64_t sub_100323F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100323F8C(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Location);
}

uint64_t sub_100323F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v6 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10032417C()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
  id v3 = [v2 description];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  v7._uint64_t countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x6F697461636F6C0ALL;
  v8._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v8);
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location);
  sub_1000FF33C(&qword_1015DB2E0);
  v10._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return 0x203A656C646E6168;
}

id sub_100324354(uint64_t a1)
{
  return sub_100323E30(a1, type metadata accessor for MapsFindMyLocationHandle);
}

uint64_t type metadata accessor for MapsFindMyLocationHandle()
{
  return self;
}

id sub_10032458C()
{
  id result = [self _mapkit_sharedLocationContactIdentifer];
  if (result)
  {
    uint64_t v1 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id result = (id)String.init<A>(_:)();
    qword_101611D80 = (uint64_t)result;
    *(void *)algn_101611D88 = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100324794()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (!v1)
  {
    unint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
    if (!v6) {
      return 0;
    }
    id v7 = v6;
    Handle.prettyName.getter();
    if (!v8) {
      Handle.identifier.getter();
    }
    NSString v5 = String._bridgeToObjectiveC()();

    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v2 = self;
  id v3 = v1;
  id result = [v2 stringFromContact:v3 style:0];
  if (result || (id result = [v3 givenName]) != 0)
  {
    NSString v5 = result;

    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003248A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0x65736C6166;
  _StringGuts.grow(_:)(89);
  v3._uint64_t countAndFlagsBits = 0x6C646E6148736168;
  v3._object = (void *)0xEB00000000203A65;
  String.append(_:)(v3);
  uint64_t v4 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (v5) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (v5) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x61636F4C7361680ALL;
  v9._object = (void *)0xEE00203A6E6F6974;
  String.append(_:)(v9);
  uint64_t v10 = *(void *)(v0 + v4);
  if (v10 && *(void *)(v10 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location))
  {
    unint64_t v11 = 0xE400000000000000;
    uint64_t v12 = 1702195828;
  }
  else
  {
    unint64_t v11 = 0xE500000000000000;
    uint64_t v12 = 0x65736C6166;
  }
  unint64_t v13 = v11;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0x746E6F437361680ALL;
  v14._object = (void *)0xED0000203A746361;
  String.append(_:)(v14);
  uint64_t v15 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (v16) {
    uint64_t v17 = 1702195828;
  }
  else {
    uint64_t v17 = 0x65736C6166;
  }
  if (v16) {
    unint64_t v18 = 0xE400000000000000;
  }
  else {
    unint64_t v18 = 0xE500000000000000;
  }
  unint64_t v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = 0xD000000000000016;
  v20._object = (void *)0x8000000100F87BD0;
  String.append(_:)(v20);
  id v21 = *(void **)(v0 + v15);
  if (!v21) {
    goto LABEL_22;
  }
  id v22 = [v21 postalAddresses];
  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v24 > 0)
  {
    double v25 = (void *)0xE400000000000000;
    uint64_t v2 = 1702195828;
  }
  else
  {
LABEL_22:
    double v25 = (void *)0xE500000000000000;
  }
  v26._uint64_t countAndFlagsBits = v2;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._object = (void *)0x8000000100F87BF0;
  v27._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v27);
  uint64_t v28 = *(void **)(v1 + v15);
  if (v28)
  {
    id v29 = [v28 identifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1000FF33C(&qword_1015D0E70);
  v30._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  return 0;
}

id sub_100324BF0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (!v1) {
    return 0;
  }
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
  uint64_t v3 = Handle.identifier.getter();
  uint64_t v5 = v4;

  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  id v7 = objc_allocWithZone((Class)NSURL);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithString:v8];

  return v9;
}

void sub_100324D44()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (!v2) {
    return;
  }
  id v3 = [v2 phoneNumbers];
  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    id v5 = *(id *)(v4 + 32);
  }
  Swift::String v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = [v6 value];

  id v8 = [v7 unformattedInternationalStringValue];
  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    _StringGuts.grow(_:)(121);
    v12._object = (void *)0x8000000100F87B10;
    v12._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    String.append(_:)(v12);
    v13._uint64_t countAndFlagsBits = v9;
    v13._object = v11;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 0xD000000000000049;
    v14._object = (void *)0x8000000100F87B40;
    String.append(_:)(v14);
    id v15 = objc_allocWithZone((Class)NSURL);
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 initWithString:v16];

    return;
  }
LABEL_11:
  unint64_t v18 = *(void **)(v0 + v1);
  if (!v18) {
    return;
  }
  id v19 = [v18 emailAddresses];
  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_14;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_14:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v20 = *(id *)(v4 + 32);
  }
  id v21 = v20;
  swift_bridgeObjectRelease();
  id v22 = [v21 value];

  if (v22)
  {
    _StringGuts.grow(_:)(121);
    v23._object = (void *)0x8000000100F87B10;
    v23._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    String.append(_:)(v23);
    id v24 = [v22 description];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v27 = v26;

    v28._uint64_t countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v29._uint64_t countAndFlagsBits = 0xD000000000000049;
    v29._object = (void *)0x8000000100F87B40;
    String.append(_:)(v29);
    id v30 = objc_allocWithZone((Class)NSURL);
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 initWithString:v31];
  }
}

uint64_t sub_1003251D0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (!v1) {
    return 0;
  }
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
  Handle.identifier.getter();

  swift_bridgeObjectRelease();
  uint64_t result = (uint64_t)sub_100324BF0();
  if (result)
  {

    return 1;
  }
  return result;
}

uint64_t sub_100325258(char a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (v10 && *(void *)(v10 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location))
  {
    Location.timestamp.getter();
    Date.init()();
    Date.init(timeIntervalSince1970:)();
    Date.timeIntervalSince(_:)();
    if (v11 >= 60.0)
    {
      NSString v16 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_dateFormatter);
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      Class v18 = Date._bridgeToObjectiveC()().super.isa;
      id v19 = [v16 localizedStringForDate:isa relativeToDate:v18];

      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v20 = *(void (**)(char *, uint64_t))(v4 + 8);
      v20(v6, v3);
      v20(v9, v3);
      return v14;
    }
    Swift::String v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v6, v3);
    v12(v9, v3);
    if (a1) {
      uint64_t v13 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowForPin;
    }
    else {
      uint64_t v13 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowString;
    }
  }
  else
  {
    uint64_t v13 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString;
  }
  uint64_t v14 = *(void *)(v1 + v13);
  swift_bridgeObjectRetain();
  return v14;
}

NSString sub_10032554C()
{
  if (sub_100325258(0) == *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString)
    && v1 == *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_100F5CF70;
      uint64_t v5 = sub_100325258(0);
      uint64_t v7 = v6;
      *(void *)(v4 + 56) = &type metadata for String;
      *(void *)(v4 + 64) = sub_10011A750();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v7;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      return v8;
    }
  }

  return String._bridgeToObjectiveC()();
}

unint64_t sub_1003256AC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = __chkstk_darwin(v1).n128_u64[0];
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (v6)
  {
    id v7 = *(id *)(v6 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
    uint64_t v8 = Handle.identifier.getter();
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
    if (!v10)
    {
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      unint64_t v19 = 0xD00000000000001BLL;
      unint64_t v20 = 0x8000000100F87AF0;
      UUID.init()();
      uint64_t v15 = UUID.uuidString.getter();
      uint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      v18._uint64_t countAndFlagsBits = v15;
      v18._object = v17;
      String.append(_:)(v18);
      goto LABEL_6;
    }
    id v7 = [v10 identifier:v3];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v11 = v8;
  Swift::String v12 = v9;

  unint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v19 = 0xD000000000000017;
  unint64_t v20 = 0x8000000100F87AD0;
  v13._uint64_t countAndFlagsBits = v11;
  v13._object = v12;
  String.append(_:)(v13);
LABEL_6:
  swift_bridgeObjectRelease();
  return v19;
}

id sub_100325894(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (!v4)
  {
    id v6 = [objc_allocWithZone((Class)CNMutableContact) init];
    uint64_t v14 = sub_10032554C();
    id v20 = [a1 _cnPostalAddress];
    if (!v20)
    {

      id v6 = *(id *)(v1 + v3);
      id v30 = v6;
      return v6;
    }
    id v5 = v20;
    unint64_t v19 = self;
    if (qword_1015CBFF8 == -1) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
  id v5 = v4;
  [v5 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100100830(0, &qword_1015D9948);
  swift_dynamicCast();
  id v6 = v33;
  NSString v7 = sub_10032554C();
  id v8 = [a1 _cnPostalAddress];
  if (!v8)
  {

    return v6;
  }
  uint64_t v9 = v8;
  uint64_t v10 = self;
  if (qword_1015CBFF8 != -1) {
    swift_once();
  }
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 entryWithIdentifier:v11 label:v7 value:v9];

  id v13 = [v33 postalAddresses];
  uint64_t v14 = (void *)sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v16)
  {
    id v17 = v12;
    id v27 = [v33 postalAddresses];
    uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_21;
  }
  id v17 = v12;
  id v18 = [v33 postalAddresses];
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v19 >> 62)
    || (swift_bridgeObjectRetain(),
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(),
        swift_bridgeObjectRelease(),
        (v32 & 0x8000000000000000) == 0))
  {
    sub_100348BCC(0, 0, (uint64_t)v17);
LABEL_21:
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v33 setPostalAddresses:isa];

    return v6;
  }
  __break(1u);
LABEL_27:
  swift_once();
LABEL_12:
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [(id)v19 entryWithIdentifier:v21 label:v14 value:v5];

  id v23 = v22;
  id v24 = [v6 postalAddresses];
  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class v26 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setPostalAddresses:v26];

  [v6 copy];
  _bridgeAnyObjectToAny(_:)();

  swift_unknownObjectRelease();
  sub_100100830(0, (unint64_t *)&unk_1015D98C0);
  if (swift_dynamicCast()) {
    return v33;
  }
  else {
    return 0;
  }
}

id sub_100325E60(void *a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100325F78(a1, v10, v11, a3, a4, a5);
      id v13 = v12;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 4:
      if (!a5) {
        goto LABEL_5;
      }
      id v14 = a5;
      id v15 = sub_100325894(v14);

      id result = v15;
      break;
    default:
LABEL_5:
      id v13 = *(void **)(v5 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
      id v17 = v13;
LABEL_6:
      id result = v13;
      break;
  }
  return result;
}

void sub_100325F78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v7 = v6;
  id v8 = *(void **)&v6[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
  if (!v8) {
    return;
  }
  id v13 = v8;
  [v13 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100100830(0, &qword_1015D9948);
  swift_dynamicCast();
  id v14 = [a1 _cnPostalAddress];
  if (v14)
  {
    id v15 = v14;
    uint64_t v45 = v13;
    id v16 = objc_allocWithZone((Class)CNLabeledValue);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v15;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v46 = [v16 initWithIdentifier:v18 label:v19 value:v17];

    id v20 = [v47 postalAddresses];
    NSString v21 = (char **)sub_1000FF33C((uint64_t *)&unk_1015DC510);
    unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    id v13 = &selRef_setPolygons_;
    if (v23)
    {
      id v24 = [v47 postalAddresses];
      unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      sub_1003268F8(v25, a4, a5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v47 setPostalAddresses:isa];
    }
    id v27 = v46;
    id v28 = [v47 postalAddresses];
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v43 < 0)
      {
        __break(1u);
LABEL_25:
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    sub_100348BCC(0, 0, (uint64_t)v27);
    Class v30 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v47 setPostalAddresses:v30];

    id v13 = v45;
  }
  if (!a6)
  {

    return;
  }
  id v27 = a6;
  id v31 = [v27 _cnPostalAddress];
  if (!v31)
  {

    return;
  }
  uint64_t v32 = v31;
  NSString v33 = sub_10032554C();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v34 = objc_allocWithZone((Class)CNLabeledValue);
  id v7 = v32;
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v29 = (unint64_t)[v34 initWithLabel:v35 value:v7];

  NSString v21 = &selRef_placeCard_wantsToPresentEVAvailability_;
  id v36 = [v47 postalAddresses];
  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62) {
    goto LABEL_25;
  }
  uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
  swift_bridgeObjectRelease();
  if (!v38)
  {

    goto LABEL_21;
  }
  id v39 = (id)v29;
  id v40 = [v47 v21[283]];
  unint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v44 >= 1) {
      goto LABEL_16;
    }
  }
  else if (*(uint64_t *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_16:
    sub_100348BCC(1, 1, (uint64_t)v39);
    Class v42 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v47 setPostalAddresses:v42];

LABEL_21:
    return;
  }
  __break(1u);
}

void sub_1003265A0(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo);
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo);
  id v7 = (objc_class *)type metadata accessor for MapsAutocompletePerson();
  id v8 = objc_allocWithZone(v7);
  id v13 = v6;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = sub_100326AB8(v3, v4, v5, v6);

  a1[3] = v7;
  *a1 = v12;
}

id sub_1003267F0(uint64_t a1)
{
  return sub_100323E30(a1, type metadata accessor for MapsAutocompletePerson);
}

uint64_t type metadata accessor for MapsAutocompletePerson()
{
  return self;
}

void *sub_1003268F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_20;
        }
        uint64_t v10 = v5;
        id v11 = [v7 identifier];
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v16)
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        ++v6;
        uint64_t v5 = v10;
        if (v9 == v10) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

id sub_100326AB8(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  *(void *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = 0;
  uint64_t v7 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo;
  *(void *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = 0;
  uint64_t v8 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle;
  *(void *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = 0;
  uint64_t v9 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo;
  *(void *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo] = 0;
  v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_placeSummaryShowsStackedIconsAndLabels] = 1;
  uint64_t v10 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_dateFormatter;
  id v11 = objc_allocWithZone((Class)NSRelativeDateTimeFormatter);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationString;
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v14.super.Class isa = (Class)qword_101611820;
  v15._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v39._uint64_t countAndFlagsBits = 0xD000000000000058;
  v39._object = (void *)0x8000000100F878F0;
  v15._object = (void *)0x8000000100F878C0;
  v16._uint64_t countAndFlagsBits = 0x6E6F697461636F4CLL;
  v16._object = (void *)0xEB00000000402520;
  *(Swift::String *)&v12[v13] = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)qword_101611820, v16, v39);
  id v17 = (Swift::String *)&v12[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowString];
  v18._uint64_t countAndFlagsBits = 0xD000000000000017;
  v40._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v40._object = (void *)0x8000000100F87970;
  v18._object = (void *)0x8000000100F87950;
  v19._uint64_t countAndFlagsBits = 0x776F4E207473754ALL;
  v19._object = (void *)0xE800000000000000;
  *id v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, v14, v19, v40);
  id v20 = (Swift::String *)&v12[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowForPin];
  v21._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v41._uint64_t countAndFlagsBits = 0xD000000000000075;
  v41._object = (void *)0x8000000100F879D0;
  v21._object = (void *)0x8000000100F879B0;
  v22._uint64_t countAndFlagsBits = 0x776F4E207473754ALL;
  v22._object = (void *)0xE800000000000000;
  *id v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, v14, v22, v41);
  uint64_t v23 = (Swift::String *)&v12[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString];
  v42._uint64_t countAndFlagsBits = 0xD000000000000020;
  v24._uint64_t countAndFlagsBits = 0xD000000000000022;
  v42._object = (void *)0x8000000100F87AA0;
  v24._object = (void *)0x8000000100F87A50;
  v25._object = (void *)0x8000000100F87A80;
  v25._uint64_t countAndFlagsBits = 0xD000000000000011;
  *uint64_t v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, v14, v25, v42);
  Class v26 = *(void **)&v4[v6];
  *(void *)&v4[v6] = a1;
  id v27 = a1;

  id v28 = *(void **)&v4[v7];
  *(void *)&v4[v7] = a2;
  id v29 = a2;

  Class v30 = *(void **)&v4[v8];
  *(void *)&v4[v8] = a3;
  id v31 = a3;

  uint64_t v32 = *(void **)&v4[v9];
  *(void *)&v4[v9] = a4;
  id v33 = a4;

  v38.unint64_t receiver = v12;
  v38.uint64_t super_class = (Class)type metadata accessor for MapsAutocompletePerson();
  return [super init];
}

BOOL sub_100326DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    sub_100100830(0, (unint64_t *)&unk_1015D98C0);
    id v6 = v5;
    id v7 = v4;
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo);
  uint64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo);
  if (v9)
  {
    if (!v10) {
      return 0;
    }
    sub_100100830(0, &qword_1015DB2D8);
    id v11 = v10;
    id v12 = v9;
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  NSBundle v14 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  Swift::String v15 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (!v14)
  {
    if (!v15) {
      goto LABEL_14;
    }
    return 0;
  }
  if (!v15) {
    return 0;
  }
  type metadata accessor for MapsFindMyLocationHandle();
  id v16 = v15;
  id v17 = v14;
  char v18 = static NSObject.== infix(_:_:)();

  if ((v18 & 1) == 0) {
    return 0;
  }
LABEL_14:
  unint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo);
  unint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo);
  BOOL result = (v19 | v20) == 0;
  if (v19) {
    BOOL v22 = v20 == 0;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22)
  {
    sub_100100830(0, &qword_1015DB2D8);
    id v23 = (id)v20;
    id v24 = (id)v19;
    char v25 = static NSObject.== infix(_:_:)();

    return v25 & 1;
  }
  return result;
}

uint64_t sub_100326F70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteDuration()
{
  return &type metadata for PlaceSummaryUnitHikeRouteDuration;
}

ValueMetadata *type metadata accessor for NearbyTransitTeachableMomentAnimation()
{
  return &type metadata for NearbyTransitTeachableMomentAnimation;
}

uint64_t sub_100326FD8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100326FF4()
{
  qword_101611DB0 = 0x4078000000000000;
}

void sub_100327004(void *a1@<X8>)
{
  *a1 = &off_1012D8228;
}

uint64_t sub_100327014@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D4F18);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000FF33C(&qword_1015D4F20);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015DB340);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015DB320);
  __chkstk_darwin(v13);
  Swift::String v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000FF33C(&qword_1015DB368);
  uint64_t v16 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  char v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  uint64_t *v5 = static Alignment.leading.getter();
  v5[1] = v19;
  uint64_t v20 = sub_1000FF33C(&qword_1015DB370);
  sub_100327418((char)a1, (uint64_t)v5 + *(int *)(v20 + 44));
  static Alignment.center.getter();
  sub_1001F128C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0);
  sub_1000FF2E0((uint64_t)v5, &qword_1015D4F18);
  uint64_t v21 = static SafeAreaRegions.all.getter();
  LOBYTE(a1) = static Edge.Set.all.getter();
  sub_1000FF27C((uint64_t)v8, (uint64_t)v12, &qword_1015D4F20);
  BOOL v22 = &v12[*(int *)(v10 + 44)];
  *(void *)BOOL v22 = v21;
  v22[8] = (char)a1;
  sub_1000FF2E0((uint64_t)v8, &qword_1015D4F20);
  sub_1000FF27C((uint64_t)v12, (uint64_t)v15, &qword_1015DB340);
  id v23 = &v15[*(int *)(v13 + 36)];
  *(void *)id v23 = 0;
  *((_WORD *)v23 + 4) = 1;
  sub_1000FF2E0((uint64_t)v12, &qword_1015DB340);
  sub_1000FF33C(&qword_1015DB328);
  sub_100328DFC(&qword_1015DB330, &qword_1015DB320, (void (*)(void))sub_100328DCC);
  uint64_t v24 = type metadata accessor for EmptyVisualEffect();
  unint64_t v25 = sub_100328F18();
  uint64_t v31 = v24;
  unint64_t v32 = v25;
  swift_getOpaqueTypeConformance2();
  View.visualEffect<A>(_:)();
  sub_1000FF2E0((uint64_t)v15, &qword_1015DB320);
  uint64_t v27 = v29;
  uint64_t v26 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v30, v18, v29);
  *(_WORD *)(v26 + *(int *)(sub_1000FF33C(&qword_1015DB300) + 36)) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v27);
}

uint64_t sub_100327418@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  int v53 = a1 & 1;
  uint64_t v4 = sub_1000FF33C(&qword_1015DB378);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = sub_1000FF33C(&qword_1015DB380);
  __chkstk_darwin(v47);
  char v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000FF33C(&qword_1015DB388);
  __chkstk_darwin(v46);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v49 = (char *)sub_1000FF33C(&qword_1015DB390);
  __chkstk_darwin(v49);
  uint64_t v44 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v18 = sub_1000FF33C(&qword_1015D8DB0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = Image.init(systemName:)();
  uint64_t v21 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v51 = static Font.system(size:weight:design:)();
  sub_1000FF2E0((uint64_t)v20, &qword_1015D8DB0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = static Color.yellow.getter();
  uint64_t v22 = swift_getKeyPath();
  static UnitPoint.center.getter();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  if (a1)
  {
    static Animation.spring(response:dampingFraction:blendDuration:)();
    uint64_t v45 = Animation.delay(_:)();
    double v28 = 1.0;
    uint64_t v27 = 0x405A000000000000;
  }
  else
  {
    uint64_t v27 = 0;
    static Animation.spring(response:dampingFraction:blendDuration:)();
    uint64_t v45 = Animation.delay(_:)();
    double v28 = 0.0;
  }
  swift_release();
  uint64_t *v6 = static Alignment.leading.getter();
  v6[1] = v29;
  uint64_t v30 = sub_1000FF33C(&qword_1015DB398);
  sub_1003279F0((uint64_t)v6 + *(int *)(v30 + 44));
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000FF27C((uint64_t)v6, (uint64_t)v8, &qword_1015DB378);
  uint64_t v31 = &v8[*(int *)(v47 + 36)];
  long long v32 = v55;
  *(_OWORD *)uint64_t v31 = v54;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v56;
  sub_1000FF2E0((uint64_t)v6, &qword_1015DB378);
  sub_1000FF27C((uint64_t)v8, (uint64_t)v10, &qword_1015DB380);
  id v33 = (uint64_t *)&v10[*(int *)(v46 + 36)];
  uint64_t *v33 = v27;
  v33[1] = 0;
  sub_1000FF2E0((uint64_t)v8, &qword_1015DB380);
  char v34 = v53;
  if (v53)
  {
    static Animation.spring(response:dampingFraction:blendDuration:)();
    uint64_t v36 = Animation.delay(_:)();
    double v35 = 1.0;
  }
  else
  {
    double v35 = 0.0;
    static Animation.spring(response:dampingFraction:blendDuration:)();
    uint64_t v36 = Animation.delay(_:)();
  }
  swift_release();
  sub_1000FF27C((uint64_t)v10, (uint64_t)v14, &qword_1015DB388);
  unint64_t v37 = &v14[*((int *)v49 + 9)];
  *(void *)unint64_t v37 = v36;
  v37[8] = v34;
  sub_1000FF2E0((uint64_t)v10, &qword_1015DB388);
  sub_100101750((uint64_t)v14, (uint64_t)v17, &qword_1015DB390);
  uint64_t v38 = v44;
  sub_1000FF27C((uint64_t)v17, v44, &qword_1015DB390);
  uint64_t v39 = v51;
  uint64_t v40 = KeyPath;
  *(void *)a2 = v52;
  *(void *)(a2 + 8) = v40;
  *(void *)(a2 + 16) = v39;
  *(void *)(a2 + 24) = v22;
  unsigned int v49 = v17;
  *(void *)(a2 + 32) = v48;
  *(double *)(a2 + 40) = v35;
  *(double *)(a2 + 48) = v35;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v26;
  *(double *)(a2 + 72) = v28;
  *(void *)(a2 + 80) = v45;
  *(unsigned char *)(a2 + 88) = v34;
  uint64_t v41 = sub_1000FF33C(&qword_1015DB3A0);
  sub_1000FF27C(v38, a2 + *(int *)(v41 + 48), &qword_1015DB390);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000FF2E0((uint64_t)v49, &qword_1015DB390);
  sub_1000FF2E0(v38, &qword_1015DB390);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1003279F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = sub_1000FF33C(&qword_1015DB3A8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015DB3B0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = type metadata accessor for RoundedRectangle();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (_OWORD *)((char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000FF33C(&qword_1015D09E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v21 = (char *)v14 + *(int *)(v12 + 28);
  uint64_t v22 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v23 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #20.0 }
  *uint64_t v14 = _Q0;
  uint64_t v29 = static Color.yellow.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_100275A58((uint64_t)v14, (uint64_t)v17);
  uint64_t v30 = &v17[*(int *)(sub_1000FF33C(&qword_1015D0A08) + 36)];
  long long v31 = v52;
  *(_OWORD *)uint64_t v30 = v51;
  *((_OWORD *)v30 + 1) = v31;
  *((void *)v30 + 4) = v53;
  uint64_t v32 = sub_1000FF33C(&qword_1015D0A10);
  *(void *)&v17[*(int *)(v32 + 52)] = v29;
  *(_WORD *)&v17[*(int *)(v32 + 56)] = 256;
  uint64_t v33 = static Alignment.center.getter();
  uint64_t v35 = v34;
  uint64_t v36 = (uint64_t *)&v17[*(int *)(sub_1000FF33C(&qword_1015D0A18) + 36)];
  uint64_t *v36 = v33;
  v36[1] = v35;
  sub_100275ABC((uint64_t)v14);
  sub_100101750((uint64_t)v17, (uint64_t)v20, &qword_1015D09E0);
  *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v37 = sub_1000FF33C(&qword_1015DB3B8);
  sub_100327DE4((uint64_t)&v3[*(int *)(v37 + 44)]);
  LOBYTE(v33) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_1000FF27C((uint64_t)v3, (uint64_t)v7, &qword_1015DB3A8);
  uint64_t v46 = &v7[*(int *)(v5 + 44)];
  *uint64_t v46 = v33;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  sub_1000FF2E0((uint64_t)v3, &qword_1015DB3A8);
  sub_100101750((uint64_t)v7, (uint64_t)v10, &qword_1015DB3B0);
  sub_1000FF27C((uint64_t)v20, (uint64_t)v17, &qword_1015D09E0);
  sub_1000FF27C((uint64_t)v10, (uint64_t)v7, &qword_1015DB3B0);
  uint64_t v47 = v50;
  sub_1000FF27C((uint64_t)v17, v50, &qword_1015D09E0);
  uint64_t v48 = sub_1000FF33C(&qword_1015DB3C0);
  sub_1000FF27C((uint64_t)v7, v47 + *(int *)(v48 + 48), &qword_1015DB3B0);
  sub_1000FF2E0((uint64_t)v10, &qword_1015DB3B0);
  sub_1000FF2E0((uint64_t)v20, &qword_1015D09E0);
  sub_1000FF2E0((uint64_t)v7, &qword_1015DB3B0);
  return sub_1000FF2E0((uint64_t)v17, &qword_1015D09E0);
}

uint64_t sub_100327DE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015DB3C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = sub_1000FF33C(&qword_1015DB3D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  *(void *)uint64_t v13 = static HorizontalAlignment.leading.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v14 = sub_1000FF33C(&qword_1015DB3D8);
  sub_100327FD4((uint64_t)&v13[*(int *)(v14 + 44)]);
  *(void *)uint64_t v7 = static HorizontalAlignment.trailing.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v15 = sub_1000FF33C(&qword_1015DB3E0);
  sub_100328648(&v7[*(int *)(v15 + 44)]);
  sub_1000FF27C((uint64_t)v13, (uint64_t)v10, &qword_1015DB3D0);
  sub_1000FF27C((uint64_t)v7, (uint64_t)v4, &qword_1015DB3C8);
  sub_1000FF27C((uint64_t)v10, a1, &qword_1015DB3D0);
  uint64_t v16 = sub_1000FF33C(&qword_1015DB3E8);
  uint64_t v17 = a1 + *(int *)(v16 + 48);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  sub_1000FF27C((uint64_t)v4, a1 + *(int *)(v16 + 64), &qword_1015DB3C8);
  sub_1000FF2E0((uint64_t)v7, &qword_1015DB3C8);
  sub_1000FF2E0((uint64_t)v13, &qword_1015DB3D0);
  sub_1000FF2E0((uint64_t)v4, &qword_1015DB3C8);
  return sub_1000FF2E0((uint64_t)v10, &qword_1015DB3D0);
}

uint64_t sub_100327FD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v68 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v68);
  uint64_t v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000FF33C(&qword_1015DB3F0) - 8;
  __chkstk_darwin(v64);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000FF33C(&qword_1015DB3F8) - 8;
  __chkstk_darwin(v65);
  uint64_t v67 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v56 - v8;
  __chkstk_darwin(v9);
  uint64_t v62 = (uint64_t)&v56 - v10;
  __chkstk_darwin(v11);
  uint64_t v63 = (uint64_t)&v56 - v12;
  uint64_t v61 = static Color.yellow.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v13 = v80;
  char v14 = v81;
  uint64_t v15 = v82;
  char v16 = v83;
  uint64_t v57 = v85;
  *(void *)&long long v58 = v84;
  uint64_t v17 = static Alignment.center.getter();
  uint64_t v59 = v18;
  uint64_t v60 = v17;
  static Color.white.getter();
  uint64_t v19 = Color.opacity(_:)();
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)&long long v97 = v61;
  WORD4(v97) = 256;
  *(void *)&long long v98 = v13;
  BYTE8(v98) = v14;
  *(void *)&long long v99 = v15;
  BYTE8(v99) = v16;
  *(void *)&long long v100 = v58;
  *((void *)&v100 + 1) = v57;
  *(void *)&long long v101 = v19;
  WORD4(v101) = 256;
  *(void *)&long long v102 = v86;
  BYTE8(v102) = v87;
  *(void *)&long long v103 = v88;
  BYTE8(v103) = v89;
  long long v104 = v90;
  *(void *)&long long v105 = v60;
  *((void *)&v105 + 1) = v59;
  uint64_t v20 = &v3[*(int *)(v68 + 28)];
  uint64_t v21 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v60) = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v22 = type metadata accessor for RoundedCornerStyle();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 104);
  uint64_t v61 = v23 + 104;
  v59(v20, v21, v22);
  __asm { FMOV            V0.2D, #4.0 }
  long long v58 = _Q0;
  *(_OWORD *)uint64_t v3 = _Q0;
  uint64_t v29 = self;
  id v30 = [v29 systemGray3Color];
  uint64_t v31 = Color.init(uiColor:)();
  sub_100275A58((uint64_t)v3, (uint64_t)v5);
  uint64_t v32 = v64;
  *(void *)&v5[*(int *)(v64 + 60)] = v31;
  *(_WORD *)&v5[*(int *)(v32 + 64)] = 256;
  sub_100275ABC((uint64_t)v3);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v33 = v62;
  sub_1000FF27C((uint64_t)v5, v62, &qword_1015DB3F0);
  uint64_t v34 = v65;
  uint64_t v35 = (_OWORD *)(v33 + *(int *)(v65 + 44));
  long long v36 = v92;
  *uint64_t v35 = v91;
  v35[1] = v36;
  v35[2] = v93;
  sub_1000FF2E0((uint64_t)v5, &qword_1015DB3F0);
  uint64_t v37 = v33;
  uint64_t v38 = v33;
  uint64_t v39 = v63;
  sub_100101750(v37, v63, &qword_1015DB3F8);
  v59(&v3[*(int *)(v68 + 28)], v60, v22);
  *(_OWORD *)uint64_t v3 = v58;
  id v40 = [v29 systemGray3Color];
  uint64_t v41 = Color.init(uiColor:)();
  sub_100275A58((uint64_t)v3, (uint64_t)v5);
  *(void *)&v5[*(int *)(v32 + 60)] = v41;
  *(_WORD *)&v5[*(int *)(v32 + 64)] = 256;
  sub_100275ABC((uint64_t)v3);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v42 = v66;
  sub_1000FF27C((uint64_t)v5, v66, &qword_1015DB3F0);
  uint64_t v43 = (_OWORD *)(v42 + *(int *)(v34 + 44));
  long long v44 = v95;
  *uint64_t v43 = v94;
  v43[1] = v44;
  v43[2] = v96;
  sub_1000FF2E0((uint64_t)v5, &qword_1015DB3F0);
  sub_100101750(v42, v38, &qword_1015DB3F8);
  long long v75 = v103;
  long long v76 = v104;
  long long v77 = v105;
  long long v71 = v99;
  long long v72 = v100;
  long long v73 = v101;
  long long v74 = v102;
  long long v69 = v97;
  long long v70 = v98;
  sub_1000FF27C(v39, v42, &qword_1015DB3F8);
  uint64_t v45 = v67;
  sub_1000FF27C(v38, v67, &qword_1015DB3F8);
  long long v46 = v76;
  v78[6] = v75;
  v78[7] = v76;
  long long v47 = v77;
  v78[8] = v77;
  long long v48 = v71;
  long long v49 = v72;
  v78[2] = v71;
  v78[3] = v72;
  long long v51 = v73;
  long long v50 = v74;
  v78[4] = v73;
  v78[5] = v74;
  long long v53 = v69;
  long long v52 = v70;
  v78[0] = v69;
  v78[1] = v70;
  *(_OWORD *)(a1 + 96) = v75;
  *(_OWORD *)(a1 + 112) = v46;
  *(_OWORD *)(a1 + 128) = v47;
  *(_OWORD *)(a1 + 32) = v48;
  *(_OWORD *)(a1 + 48) = v49;
  *(_OWORD *)(a1 + 64) = v51;
  *(_OWORD *)(a1 + 80) = v50;
  *(_OWORD *)a1 = v53;
  *(_OWORD *)(a1 + 16) = v52;
  *(void *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 152) = 1;
  uint64_t v54 = sub_1000FF33C(&qword_1015DB408);
  sub_1000FF27C(v42, a1 + *(int *)(v54 + 64), &qword_1015DB3F8);
  sub_1000FF27C(v45, a1 + *(int *)(v54 + 80), &qword_1015DB3F8);
  sub_100328F80((uint64_t)v78);
  sub_100328F80((uint64_t)&v97);
  sub_1000FF2E0(v38, &qword_1015DB3F8);
  sub_1000FF2E0(v39, &qword_1015DB3F8);
  sub_100328FB8((uint64_t)&v97);
  sub_1000FF2E0(v45, &qword_1015DB3F8);
  sub_1000FF2E0(v42, &qword_1015DB3F8);
  v79[6] = v75;
  v79[7] = v76;
  v79[8] = v77;
  void v79[2] = v71;
  v79[3] = v72;
  v79[4] = v73;
  v79[5] = v74;
  v79[0] = v69;
  v79[1] = v70;
  return sub_100328FB8((uint64_t)v79);
}

uint64_t sub_100328648@<X0>(void *a1@<X8>)
{
  long long v46 = a1;
  uint64_t v1 = type metadata accessor for RoundedRectangle();
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015DB3F0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000FF33C(&qword_1015DB3F8) - 8;
  __chkstk_darwin(v43);
  uint64_t v45 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v42 = (uint64_t)&v40 - v11;
  __chkstk_darwin(v12);
  char v14 = (char *)&v40 - v13;
  __chkstk_darwin(v15);
  uint64_t v44 = (uint64_t)&v40 - v16;
  uint64_t v17 = &v4[*(int *)(v2 + 28)];
  uint64_t v18 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v41 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v19 = type metadata accessor for RoundedCornerStyle();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
  v20(v17, v18, v19);
  __asm { FMOV            V0.2D, #4.0 }
  long long v40 = _Q0;
  *(_OWORD *)uint64_t v4 = _Q0;
  uint64_t v26 = static Color.gray.getter();
  sub_100275A58((uint64_t)v4, (uint64_t)v8);
  *(void *)&v8[*(int *)(v6 + 60)] = v26;
  *(_WORD *)&v8[*(int *)(v6 + 64)] = 256;
  sub_100275ABC((uint64_t)v4);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1000FF27C((uint64_t)v8, (uint64_t)v14, &qword_1015DB3F0);
  uint64_t v27 = v43;
  double v28 = &v14[*(int *)(v43 + 44)];
  long long v29 = v48;
  *(_OWORD *)double v28 = v47;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v49;
  sub_1000FF2E0((uint64_t)v8, &qword_1015DB3F0);
  uint64_t v30 = v44;
  sub_100101750((uint64_t)v14, v44, &qword_1015DB3F8);
  v20(&v4[*(int *)(v2 + 28)], v41, v19);
  *(_OWORD *)uint64_t v4 = v40;
  uint64_t v31 = static Color.gray.getter();
  sub_100275A58((uint64_t)v4, (uint64_t)v8);
  *(void *)&v8[*(int *)(v6 + 60)] = v31;
  *(_WORD *)&v8[*(int *)(v6 + 64)] = 256;
  sub_100275ABC((uint64_t)v4);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v32 = v42;
  sub_1000FF27C((uint64_t)v8, v42, &qword_1015DB3F0);
  uint64_t v33 = (_OWORD *)(v32 + *(int *)(v27 + 44));
  long long v34 = v51;
  _OWORD *v33 = v50;
  v33[1] = v34;
  long long v33[2] = v52;
  sub_1000FF2E0((uint64_t)v8, &qword_1015DB3F0);
  sub_100101750(v32, (uint64_t)v14, &qword_1015DB3F8);
  sub_1000FF27C(v30, v32, &qword_1015DB3F8);
  uint64_t v35 = v45;
  sub_1000FF27C((uint64_t)v14, v45, &qword_1015DB3F8);
  long long v36 = v46;
  *long long v46 = 0;
  *((unsigned char *)v36 + 8) = 1;
  uint64_t v37 = v36;
  uint64_t v38 = sub_1000FF33C(&qword_1015DB400);
  sub_1000FF27C(v32, (uint64_t)v37 + *(int *)(v38 + 48), &qword_1015DB3F8);
  sub_1000FF27C(v35, (uint64_t)v37 + *(int *)(v38 + 64), &qword_1015DB3F8);
  sub_1000FF2E0((uint64_t)v14, &qword_1015DB3F8);
  sub_1000FF2E0(v30, &qword_1015DB3F8);
  sub_1000FF2E0(v35, &qword_1015DB3F8);
  return sub_1000FF2E0(v32, &qword_1015DB3F8);
}

uint64_t sub_100328A64()
{
  if (qword_1015CC000 != -1) {
    swift_once();
  }
  static UnitPoint.center.getter();
  type metadata accessor for EmptyVisualEffect();
  sub_100328F18();
  return VisualEffect.scaleEffect(_:anchor:)();
}

uint64_t sub_100328B28()
{
  return PhaseAnimator.init<A>(_:content:animation:)();
}

unint64_t sub_100328C1C()
{
  unint64_t result = qword_1015DB310;
  if (!qword_1015DB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB310);
  }
  return result;
}

unint64_t sub_100328C70()
{
  unint64_t result = qword_1015DB318;
  if (!qword_1015DB318)
  {
    sub_10010118C(&qword_1015DB300);
    sub_10010118C(&qword_1015DB320);
    sub_10010118C(&qword_1015DB328);
    sub_100328DFC(&qword_1015DB330, &qword_1015DB320, (void (*)(void))sub_100328DCC);
    type metadata accessor for EmptyVisualEffect();
    sub_100328F18();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1001010F8(&qword_1015D18C8, &qword_1015D18D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB318);
  }
  return result;
}

uint64_t sub_100328DCC()
{
  return sub_100328DFC(&qword_1015DB338, &qword_1015DB340, (void (*)(void))sub_100328E78);
}

uint64_t sub_100328DFC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100328E78()
{
  unint64_t result = qword_1015DB348;
  if (!qword_1015DB348)
  {
    sub_10010118C(&qword_1015D4F20);
    sub_1001010F8(&qword_1015DB350, &qword_1015D4F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB348);
  }
  return result;
}

unint64_t sub_100328F18()
{
  unint64_t result = qword_1015DB358;
  if (!qword_1015DB358)
  {
    type metadata accessor for EmptyVisualEffect();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB358);
  }
  return result;
}

uint64_t sub_100328F80(uint64_t a1)
{
  return a1;
}

uint64_t sub_100328FB8(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for NearbyTransitTeachableMomentAnimation.AnimationPhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003290BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitTeachableMomentAnimation.AnimationPhase()
{
  return &type metadata for NearbyTransitTeachableMomentAnimation.AnimationPhase;
}

uint64_t sub_1003290F4()
{
  return sub_1001010F8(&qword_1015DB410, &qword_1015DB418);
}

uint64_t sub_100329130()
{
  return sub_1001010F8((unint64_t *)&unk_1015DB420, &qword_1015DB308);
}

id sub_1003292CC()
{
  v2.unint64_t receiver = v0;
  v2.uint64_t super_class = (Class)type metadata accessor for NavigationProgressCapturingTask();
  return [super dealloc];
}

void *sub_100329378()
{
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result sessionStack];

    sub_1000FF33C((uint64_t *)&unk_1015DA140);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v11 = v3;
    if (v3 >> 62) {
      goto LABEL_16;
    }
    unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      while (1)
      {
        while (__OFSUB__(v5--, 1))
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          swift_bridgeObjectRetain();
          unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v4 = swift_bridgeObjectRelease();
          if (!v5) {
            goto LABEL_17;
          }
        }
        if ((v3 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_10;
        }
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_14;
        }
        if (v5 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_15;
        }
        swift_unknownObjectRetain();
LABEL_10:
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        char v8 = v7 == 0;
        uint64_t v4 = swift_unknownObjectRelease();
        if (v7 || !v5) {
          goto LABEL_18;
        }
      }
    }
LABEL_17:
    char v8 = 1;
LABEL_18:
    __chkstk_darwin(v4);
    _OWORD v10[2] = &v11;
    uint64_t v9 = sub_1002D87C0((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_10032A800, (uint64_t)v10, v5, v8);
    swift_bridgeObjectRelease();
    if (v9)
    {
      self;
      unint64_t result = (void *)swift_dynamicCastObjCClass();
      if (result) {
        return result;
      }
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return result;
}

void sub_100329574(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v66 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v62 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v62 - v11;
  uint64_t v13 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v62 - v17;
  if (MNNavigationServiceStateChangedToNavigating())
  {
    if (a1)
    {
      uint64_t v19 = (objc_class *)[a1 route];
      if (v19)
      {
        Class v65 = v19;
        uint64_t v20 = sub_100329378();
        if (v20
          && (uint64_t v21 = v20,
              Class v22 = (Class)[v20 configuration],
              v21,
              v22))
        {
          id v23 = [*(id *)&v2[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_routeInfoProvider] currentHistoryEntryRouteIdentifier];
          if (v23)
          {
            uint64_t v24 = v23;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v25 = v66;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v18, 0, 1, v4);
          }
          else
          {
            uint64_t v25 = v66;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v18, 1, 1, v4);
          }
          uint64_t v35 = (uint64_t)&v2[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
          swift_beginAccess();
          sub_10032A740((uint64_t)v18, v35);
          swift_endAccess();
          sub_1001CD278(v35, (uint64_t)v15);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v15, 1, v4) == 1)
          {
            sub_1001CD2E0((uint64_t)v15);
            if (qword_1015CC008 != -1) {
              swift_once();
            }
            uint64_t v36 = type metadata accessor for Logger();
            sub_1000F2248(v36, (uint64_t)qword_1015DB430);
            uint64_t v37 = v2;
            uint64_t v38 = Logger.logObject.getter();
            os_log_type_t v39 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v38, v39))
            {
              long long v40 = (uint8_t *)swift_slowAlloc();
              unsigned int v41 = (void *)swift_slowAlloc();
              *(_DWORD *)long long v40 = 138412290;
              uint64_t Strong = swift_unknownObjectWeakLoadStrong();
              uint64_t v43 = Strong;
              if (Strong) {
                v68[0] = Strong;
              }
              else {
                v68[0] = 0;
              }
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v41 = v43;

              _os_log_impl((void *)&_mh_execute_header, v38, v39, "navigationService changed to navigating, but activeRouteIdentifier was nil. Current platform stack: %@", v40, 0xCu);
              sub_1000FF33C((uint64_t *)&unk_1015CF600);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v12, v15, v4);
            if ([(objc_class *)v22 isResumingMultipointRoute])
            {
              if (qword_1015CC008 != -1) {
                swift_once();
              }
              uint64_t v44 = type metadata accessor for Logger();
              sub_1000F2248(v44, (uint64_t)qword_1015DB430);
              (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v9, v12, v4);
              uint64_t v45 = Logger.logObject.getter();
              os_log_type_t v46 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v45, v46))
              {
                long long v47 = (uint8_t *)swift_slowAlloc();
                uint64_t v64 = swift_slowAlloc();
                v68[0] = v64;
                *(_DWORD *)long long v47 = 136315138;
                uint64_t v62 = v47 + 4;
                uint64_t v63 = v47;
                sub_10032A7A8();
                uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
                uint64_t v67 = sub_1000F2280(v48, v49, v68);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                long long v50 = *(void (**)(char *, uint64_t))(v25 + 8);
                v50(v9, v4);
                _os_log_impl((void *)&_mh_execute_header, v45, v46, "navigationService changed to navigating with resume route flag present. Will log resume nav event with id: %s", v63, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
                long long v50 = *(void (**)(char *, uint64_t))(v25 + 8);
                v50(v9, v4);
              }

              long long v58 = *(void **)&v2[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session];
              Class isa = UUID._bridgeToObjectiveC()().super.isa;
              [v58 resumeNavigationWithRouteID:isa];
              Class v60 = v65;
              Class v65 = v22;
              Class v22 = isa;
            }
            else
            {
              if (qword_1015CC008 != -1) {
                swift_once();
              }
              uint64_t v51 = type metadata accessor for Logger();
              sub_1000F2248(v51, (uint64_t)qword_1015DB430);
              (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v6, v12, v4);
              long long v52 = Logger.logObject.getter();
              os_log_type_t v53 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v52, v53))
              {
                uint64_t v54 = (uint8_t *)swift_slowAlloc();
                uint64_t v64 = swift_slowAlloc();
                v68[0] = v64;
                uint64_t v63 = v54;
                *(_DWORD *)uint64_t v54 = 136315138;
                sub_10032A7A8();
                uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
                uint64_t v67 = sub_1000F2280(v55, v56, v68);
                uint64_t v57 = v66;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                long long v50 = *(void (**)(char *, uint64_t))(v57 + 8);
                v50(v6, v4);
                _os_log_impl((void *)&_mh_execute_header, v52, v53, "navigationService changed to navigating. Will log start nav event with id: %s", v63, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
                long long v50 = *(void (**)(char *, uint64_t))(v25 + 8);
                v50(v6, v4);
              }

              uint64_t v61 = *(void **)&v2[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session];
              Class v60 = UUID._bridgeToObjectiveC()().super.isa;
              [v61 startNavigationWithRouteID:v60 isEVRoute:[objc_class isEVRoute](v65, "isEVRoute")];
            }

            v50(v12, v4);
          }
        }
        else
        {
          if (qword_1015CC008 != -1) {
            swift_once();
          }
          uint64_t v26 = type metadata accessor for Logger();
          sub_1000F2248(v26, (uint64_t)qword_1015DB430);
          uint64_t v27 = v2;
          double v28 = Logger.logObject.getter();
          os_log_type_t v29 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v30 = (uint8_t *)swift_slowAlloc();
            uint64_t v31 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v30 = 138412290;
            uint64_t v32 = swift_unknownObjectWeakLoadStrong();
            uint64_t v33 = v32;
            if (v32) {
              v68[0] = v32;
            }
            else {
              v68[0] = 0;
            }
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v31 = v33;

            _os_log_impl((void *)&_mh_execute_header, v28, v29, "navigationService changed to navigating, but there was no RP session configuration. Current platform stack: %@", v30, 0xCu);
            sub_1000FF33C((uint64_t *)&unk_1015CF600);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            Class v34 = v65;
          }
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10032A040(void *a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    __break(1u);
  }
  if (sub_1004640E8(a1, a2) || ![a1 isInNavigatingState])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    uint64_t v26 = (uint64_t)&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
    swift_beginAccess();
    sub_10032A740((uint64_t)v9, v26);
  }
  else
  {
    uint64_t v17 = (uint64_t)&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
    swift_beginAccess();
    sub_1001CD278(v17, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1001CD2E0((uint64_t)v12);
      if (qword_1015CC008 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_1000F2248(v18, (uint64_t)qword_1015DB430);
      uint64_t v19 = v4;
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v44 = v17;
        Class v22 = (uint8_t *)swift_slowAlloc();
        id v23 = (void *)swift_slowAlloc();
        *(_DWORD *)Class v22 = 138412290;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v25 = Strong;
        if (Strong) {
          v46[0] = Strong;
        }
        else {
          v46[0] = 0;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v23 = v25;

        _os_log_impl((void *)&_mh_execute_header, v20, v21, "navigationService willEnd, but activeRouteIdentifier was nil. Current platform stack: %@", v22, 0xCu);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v17 = v44;
      }
      else
      {

        uint64_t v20 = v19;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      if (qword_1015CC008 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_1000F2248(v27, (uint64_t)qword_1015DB430);
      double v28 = Logger.logObject.getter();
      int v29 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v28, (os_log_type_t)v29))
      {
        int v42 = v29;
        uint64_t v44 = v17;
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        v46[0] = v41;
        uint64_t v43 = v30;
        *(_DWORD *)uint64_t v30 = 136315138;
        if (a2 <= 0xA)
        {
          unint64_t v3 = *(&off_1012E4B20 + a2);
          uint64_t v31 = *(&off_1012E4AC8 + a2);
        }
        id v32 = v3;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v35 = v34;

        uint64_t v36 = sub_1000F2280(v33, v35, v46);
        uint64_t v37 = v43;
        uint64_t v45 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v42, "navigationService didEndWithReason: %s which did not result into a pause event, will log termination event instead", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v17 = v44;
      }
      else
      {
      }
      uint64_t v38 = *(void **)&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session];
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v38 terminateNavigationWithRouteID:isa];

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    swift_beginAccess();
    sub_10032A740((uint64_t)v9, v17);
  }
  return swift_endAccess();
}

uint64_t sub_10032A69C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015DB430);
  sub_1000F2248(v0, (uint64_t)qword_1015DB430);
  type metadata accessor for NavigationProgressCapturingTask();
  sub_1000FF33C(&qword_1015DB5C0);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10032A740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10032A7A8()
{
  unint64_t result = qword_1015DB2E8;
  if (!qword_1015DB2E8)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB2E8);
  }
  return result;
}

unint64_t sub_10032A800@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1002D881C(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_10032A820(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - v12;
  sub_1001CD278(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1001CD2E0((uint64_t)v6);
    if (qword_1015CC008 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000F2248(v14, (uint64_t)qword_1015DB430);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "routeInterrupter interrupted a route without an identifier, ignoring this action", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    if (qword_1015CC008 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000F2248(v18, (uint64_t)qword_1015DB430);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v29 = v2;
      Class v22 = (uint8_t *)v21;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v31 = v28;
      *(_DWORD *)Class v22 = 136315138;
      sub_10032A7A8();
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v30 = sub_1000F2280(v23, v24, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v10, v7);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "routeInterrupter interrupted a route with id: %s, will log analytics event", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v29;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v10, v7);
    }

    uint64_t v26 = *(void **)(v2 + OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v26 pauseNavigationWithRouteID:isa];

    v25(v13, v7);
  }
}

id sub_10032AC54()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for PlaceLibraryHomeAction());

  return [v0 init];
}

Swift::Int sub_10032AC8C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    id v2 = v1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_10032AD04()
{
  uint64_t v1 = *v0;
  Hasher._combine(_:)(0);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    id v2 = v1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10032AD8C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    id v2 = v1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void **assignWithCopy for HomeListOneLineCellModel(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  uint64_t v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for HomeListOneLineCellModel(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitCategory()
{
  return &type metadata for PlaceSummaryUnitCategory;
}

unint64_t sub_10032AE80()
{
  unint64_t result = qword_1015DB610;
  if (!qword_1015DB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB610);
  }
  return result;
}

uint64_t sub_10032AED4()
{
  return sub_1001010F8(&qword_1015DB618, &qword_1015DB198);
}

uint64_t sub_10032AF10()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611DD8);
  sub_1000F2248(v10, (uint64_t)qword_101611DD8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10032B1EC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611DF0);
  sub_1000F2248(v0, (uint64_t)qword_101611DF0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10032B250()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611E08);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611E08);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_10032B308()
{
  uint64_t result = swift_getKeyPath();
  qword_101611E20 = result;
  return result;
}

uint64_t sub_10032B330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10032B354, 0, 0);
}

uint64_t sub_10032B354()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CC030 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611E20;
  *(void *)(v0 + 80) = qword_101611E20;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015DB1A0, &qword_1015DB1A8);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_10032B4B0;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_10032B4B0()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_10032B604;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032B604()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611E20;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_10032B6E0()
{
  if (qword_1015CC030 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_10032B740()
{
  unint64_t result = qword_1015DB620;
  if (!qword_1015DB620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB620);
  }
  return result;
}

unint64_t sub_10032B798()
{
  unint64_t result = qword_1015DB628;
  if (!qword_1015DB628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB628);
  }
  return result;
}

uint64_t sub_10032B7EC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10032B820()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10032B870@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CC020, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611DF0, a1);
}

uint64_t sub_10032B8A8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CC028 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611E08);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10032B924(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_10032B354, 0, 0);
}

uint64_t sub_10032B9D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10032C814();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10032BA00()
{
  return 0xD000000000000029;
}

unint64_t sub_10032BA24()
{
  unint64_t result = qword_1015DB638;
  if (!qword_1015DB638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB638);
  }
  return result;
}

unint64_t sub_10032BA7C()
{
  unint64_t result = qword_1015DB640;
  if (!qword_1015DB640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB640);
  }
  return result;
}

unint64_t sub_10032BAD4()
{
  unint64_t result = qword_1015DB648;
  if (!qword_1015DB648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB648);
  }
  return result;
}

unint64_t sub_10032BB2C()
{
  unint64_t result = qword_1015DB650;
  if (!qword_1015DB650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB650);
  }
  return result;
}

unint64_t sub_10032BB84()
{
  unint64_t result = qword_1015DB658;
  if (!qword_1015DB658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB658);
  }
  return result;
}

uint64_t sub_10032BBD8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10032BBF8, 0, 0);
}

uint64_t sub_10032BBF8()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 isModeDisabled:8];
  unsigned char *v1 = v2 ^ 1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10032BCCC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_10032BCF0, 0, 0);
}

uint64_t sub_10032BCF0()
{
  char v1 = *(unsigned char *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)TransitMutablePreferences) initWithDefaults:v2];

  [v3 setMode:8 disabled:(v1 & 1) == 0];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_10032BDFC()
{
  unint64_t result = qword_1015DB660;
  if (!qword_1015DB660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB660);
  }
  return result;
}

unint64_t sub_10032BE54()
{
  unint64_t result = qword_1015DB668;
  if (!qword_1015DB668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB668);
  }
  return result;
}

unint64_t sub_10032BEAC()
{
  unint64_t result = qword_1015DB670;
  if (!qword_1015DB670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB670);
  }
  return result;
}

unint64_t sub_10032BF04()
{
  unint64_t result = qword_1015DB678;
  if (!qword_1015DB678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB678);
  }
  return result;
}

uint64_t sub_10032BF58@<X0>(uint64_t *a1@<X8>)
{
  sub_10032C1A4();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10032BF98@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CC018, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611DD8, a1);
}

uint64_t sub_10032BFD0()
{
  return sub_1001010F8(&qword_1015DB680, &qword_1015DB688);
}

uint64_t sub_10032C00C(uint64_t a1)
{
  unint64_t v2 = sub_10032355C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10032C05C()
{
  unint64_t result = qword_1015DB690;
  if (!qword_1015DB690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB690);
  }
  return result;
}

uint64_t sub_10032C0B0(uint64_t a1)
{
  unint64_t v2 = sub_10032C1A4();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10032C0FC(uint64_t a1)
{
  unint64_t v2 = sub_10032BF04();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10032C14C()
{
  unint64_t result = qword_1015DB698;
  if (!qword_1015DB698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB698);
  }
  return result;
}