unint64_t sub_10032C1A4()
{
  unint64_t result;

  result = qword_1015DB6A0[0];
  if (!qword_1015DB6A0[0])
  {
    result = swift_getWitnessTable();
    atomic_store(result, qword_1015DB6A0);
  }
  return result;
}

uint64_t sub_10032C1F8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10032C288, 0, 0);
}

uint64_t sub_10032C288()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015DB198);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015DB1A0, &qword_1015DB1A8);
  *uint64_t v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10032C39C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10032BA24();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10032C450()
{
  unint64_t result = qword_1015DB6B8;
  if (!qword_1015DB6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB6B8);
  }
  return result;
}

unint64_t sub_10032C4A8()
{
  unint64_t result = qword_1015DB6C0[0];
  if (!qword_1015DB6C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015DB6C0);
  }
  return result;
}

uint64_t sub_10032C4FC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10032BA24();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10032C5B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_10032BA24();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10032C664()
{
  unint64_t result = qword_1015DB6D8;
  if (!qword_1015DB6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB6D8);
  }
  return result;
}

unint64_t sub_10032C6BC()
{
  unint64_t result = qword_1015DB6E0;
  if (!qword_1015DB6E0)
  {
    sub_10010118C(qword_1015DB6E8);
    sub_10032BEAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB6E0);
  }
  return result;
}

uint64_t sub_10032C730(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10032BB84();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransitPreferFerryQuery()
{
  return &type metadata for TransitPreferFerryQuery;
}

ValueMetadata *type metadata accessor for TransitPreferFerryEntity.UpdateIntent_value()
{
  return &type metadata for TransitPreferFerryEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for TransitPreferFerryEntity()
{
  return &type metadata for TransitPreferFerryEntity;
}

uint64_t sub_10032C814()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015DB710);
  LocalizedStringResource.init(stringLiteral:)();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_10032355C();
  v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_10032CC54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

char *sub_10032CC60()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps31PlaceSummaryEVChargerDownloader_garage] = 0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for PlaceSummaryEVChargerDownloader();
  id v1 = [super init];
  uint64_t v2 = self;
  uint64_t v3 = (char *)v1;
  id v4 = [v2 sharedSearchVirtualGarageManager];
  id v5 = [v4 virtualGarage];

  uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC4Maps31PlaceSummaryEVChargerDownloader_garage];
  *(void *)&v3[OBJC_IVAR____TtC4Maps31PlaceSummaryEVChargerDownloader_garage] = v5;

  return v3;
}

id sub_10032CDB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryEVChargerDownloader();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryEVChargerDownloader()
{
  return self;
}

uint64_t sub_10032CE1C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_10032CE9C()
{
  return static Published.subscript.setter();
}

uint64_t sub_10032CF20@<X0>(_DWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10032CFA0()
{
  return static Published.subscript.setter();
}

uint64_t sub_10032D014(uint64_t a1, void *a2)
{
  uint64_t result = sub_1001A7660();
  if (!result) {
    return result;
  }
  unint64_t v4 = result;
  id v5 = [a2 _realTimeAvailableEVCharger];
  if (!v5) {
    goto LABEL_23;
  }
  uint64_t v6 = v5;
  if (!(v4 >> 62))
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7)
  {
LABEL_22:

LABEL_23:
    return swift_bridgeObjectRelease();
  }
LABEL_5:
  uint64_t v8 = self;
  if (v7 < 1)
  {
    __break(1u);
LABEL_27:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = 0;
    uint64_t v22 = v7;
    uint64_t v11 = &selRef_setupFullyDrawnNotification_;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v12 = v11;
      id v13 = [v9 v11[138]];
      id v14 = [v13 virtualGarage];

      if (v14)
      {
        id v15 = [self getRealTimeEVChargerInfo:v14 charger:v6];
        uint64_t v16 = (uint64_t)[v15 total];
        uint64_t v17 = (uint64_t)[v15 available];
        int v18 = [v15 status];
        if (v17 < 0 || v16 < 0) {
          goto LABEL_27;
        }
        sub_10031624C(v17, v16, v18, 0);
      }
      else
      {
        sub_10031624C([v6 availableEVChargers], [v6 totalEVChargers], [v6 _realTimePlugAvailabilityStatus], 0);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.setter();
      uint64_t v11 = v12;
      id v19 = [v9 v12[138]];
      id v20 = [v19 virtualGarage];

      if (v20)
      {
        id v21 = [self getRealTimeEVChargerInfo:v20 charger:v6];
        [v21 status];
      }
      else
      {
        [v6 _realTimePlugAvailabilityStatus];
      }
      ++v10;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.setter();
    }
    while (v22 != v10);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10032D3FC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10032D47C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

double sub_10032D4EC@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10032D56C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

double sub_10032D5E4@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F83C, a1);
}

uint64_t sub_10032D604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F83C);
}

double sub_10032D624@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F890, a1);
}

uint64_t sub_10032D644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F890);
}

double sub_10032D664@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F704, a1);
}

uint64_t sub_10032D684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F704);
}

double sub_10032D6A4@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F608, a1);
}

uint64_t sub_10032D6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F608);
}

double sub_10032D6E4@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F5B4, a1);
}

uint64_t sub_10032D704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F5B4);
}

double sub_10032D724@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F4F0, a1);
}

uint64_t sub_10032D744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F4F0);
}

id sub_10032D8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_hasActionButtons] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel] = 0;
  if (a3)
  {
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for PlaceSummaryTableViewCell();
  id v7 = [super initWithStyle:a1 reuseIdentifier:v6];

  id v8 = v7;
  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  [v7 setAccessibilityIdentifier:v9];

  id v10 = [v7 contentView];
  uint64_t v11 = self;
  id v12 = [v11 clearColor];
  [v10 setBackgroundColor:v12];

  id v13 = v7;
  id v14 = [v11 clearColor];
  [v13 setBackgroundColor:v14];

  [v13 setSelectionStyle:0];
  return v13;
}

void sub_10032DD6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_unknownObjectWeakAssign();
  uint64_t v7 = OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel;
  id v8 = *(void **)(v3 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel);
  if (v8)
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    id v9 = a1;
    id v10 = v8;
    char v11 = static NSObject.== infix(_:_:)();

    if (v11) {
      return;
    }
    id v12 = *(void **)(v4 + v7);
  }
  else
  {
    id v12 = 0;
  }
  *(void *)(v4 + v7) = a1;
  id v13 = a1;

  swift_unknownObjectWeakAssign();
  if (a3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v14 = [self sharedInstance];
    if (v14)
    {
      id v15 = v14;
      [v14 screenScale];
      double v17 = v16;

      sub_10023C168(v18, v17);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10032DFDC()
{
  id v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015DB7F8);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v25 - v6;
  __chkstk_darwin(v8);
  id v10 = (char *)v25 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)v25 - v12;
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  id v15 = (objc_class *)type metadata accessor for PlaceSummaryTableViewCell();
  v28.receiver = v0;
  v28.super_class = v15;
  [super _bridgedUpdateConfigurationUsingState:isa];

  double v16 = *(void **)&v0[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel];
  if (v16)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      v25[0] = v13;
      uint64_t v18 = Strong;
      id v19 = v16;
      id v20 = (void *)UICellConfigurationState.traitCollection.getter();
      [v20 userInterfaceStyle];

      __chkstk_darwin(v21);
      v25[-4] = v19;
      v25[-3] = v1;
      v25[1] = v18;
      v25[-2] = v18;
      LOBYTE(v25[-1]) = v22;
      sub_1000FF33C(&qword_1015DB800);
      sub_10032F86C();
      UIHostingConfiguration<>.init(content:)();
      static Edge.Set.leading.getter();
      UIHostingConfiguration.margins(_:_:)();
      v23 = *(void (**)(char *, uint64_t))(v26 + 8);
      v23(v4, v2);
      static Edge.Set.trailing.getter();
      uint64_t v24 = (char *)v25[0];
      UIHostingConfiguration.margins(_:_:)();
      v23(v7, v2);
      static Edge.Set.top.getter();
      UIHostingConfiguration.margins(_:_:)();
      v23(v10, v2);
      static Edge.Set.bottom.getter();
      v27[3] = v2;
      v27[4] = sub_1001010F8((unint64_t *)&unk_1015DB8E0, &qword_1015DB7F8);
      sub_100100B1C(v27);
      UIHostingConfiguration.margins(_:_:)();
      v23(v24, v2);
      UITableViewCell.contentConfiguration.setter();

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10032E408@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v74 = a4;
  uint64_t v73 = sub_1000FF33C(&qword_1015DB8D8) - 8;
  __chkstk_darwin(v73);
  uint64_t v69 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_10032FE0C();
  uint64_t v10 = EnvironmentObject.init()();
  uint64_t v71 = v11;
  uint64_t v72 = v10;
  int IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery();
  uint64_t v68 = static ObservableObject.environmentStore.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  uint64_t v66 = v13;
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a3;
  uint64_t v65 = swift_getKeyPath();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  uint64_t v64 = v15;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a3;
  uint64_t v63 = swift_getKeyPath();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  uint64_t v62 = v17;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = a3;
  uint64_t v61 = swift_getKeyPath();
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v19 = swift_allocObject();
  uint64_t v60 = v19;
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = a3;
  uint64_t v59 = swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = swift_allocObject();
  uint64_t v58 = v21;
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = a3;
  uint64_t v57 = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = swift_allocObject();
  uint64_t v56 = v23;
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = a3;
  uint64_t v55 = swift_getKeyPath();
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  uint64_t v54 = v25;
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = a3;
  swift_unknownObjectRetain();
  uint64_t v53 = swift_getKeyPath();
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = a3;
  swift_unknownObjectRetain();
  uint64_t v52 = swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = a3;
  swift_unknownObjectRetain();
  uint64_t v51 = swift_getKeyPath();
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = a3;
  swift_unknownObjectRetain_n();
  char v32 = a1;
  id v33 = a1;
  uint64_t v34 = static Alignment.center.getter();
  uint64_t v36 = v35;
  uint64_t v37 = v69;
  sub_10032F164((uint64_t)v33, a2, v74, v69);
  v38 = (uint64_t *)(v37 + *(int *)(v73 + 44));
  uint64_t *v38 = v34;
  v38[1] = v36;
  uint64_t v39 = sub_1000FF33C(&qword_1015DB800);
  sub_1000FF27C(v37, a5 + *(int *)(v39 + 36), &qword_1015DB8D8);
  uint64_t v40 = v71;
  *(void *)a5 = v72;
  *(void *)(a5 + 8) = v40;
  *(unsigned char *)(a5 + 16) = IsEnabled_SearchAndDiscovery;
  *(void *)(a5 + 24) = v68;
  *(void *)(a5 + 32) = v32;
  *(void *)(a5 + 40) = KeyPath;
  *(void *)(a5 + 48) = sub_10032FEF4;
  uint64_t v41 = v65;
  *(void *)(a5 + 56) = v66;
  *(void *)(a5 + 64) = v41;
  uint64_t v42 = v64;
  *(void *)(a5 + 72) = sub_10032FF70;
  *(void *)(a5 + 80) = v42;
  *(void *)(a5 + 88) = v63;
  *(void *)(a5 + 96) = sub_10032FFD0;
  uint64_t v43 = v61;
  *(void *)(a5 + 104) = v62;
  *(void *)(a5 + 112) = v43;
  uint64_t v44 = v60;
  *(void *)(a5 + 120) = sub_100330030;
  *(void *)(a5 + 128) = v44;
  *(void *)(a5 + 136) = v59;
  *(void *)(a5 + 144) = sub_100330090;
  uint64_t v45 = v57;
  *(void *)(a5 + 152) = v58;
  *(void *)(a5 + 160) = v45;
  uint64_t v46 = v56;
  *(void *)(a5 + 168) = sub_10033010C;
  *(void *)(a5 + 176) = v46;
  *(void *)(a5 + 184) = v55;
  *(void *)(a5 + 192) = sub_10033016C;
  uint64_t v47 = v53;
  *(void *)(a5 + 200) = v54;
  *(void *)(a5 + 208) = v47;
  *(void *)(a5 + 216) = sub_1003301E8;
  *(void *)(a5 + 224) = v27;
  *(void *)(a5 + 232) = v52;
  *(void *)(a5 + 240) = sub_100330264;
  uint64_t v48 = v51;
  *(void *)(a5 + 248) = v29;
  *(void *)(a5 + 256) = v48;
  *(void *)(a5 + 264) = sub_100330320;
  *(void *)(a5 + 272) = v31;
  return sub_1000FF2E0(v37, &qword_1015DB8D8);
}

void sub_10032E9D8(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_4:
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          uint64_t v8 = (objc_class *)*(id *)(v4 + 32);
        }
        Class isa = v8;
        swift_bridgeObjectRelease();
        if (v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v10 != 1) {
            goto LABEL_9;
          }
        }
        else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
        {
LABEL_9:

LABEL_14:
          sub_1002011B0();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          uint64_t v11 = &selRef_didTapOnCuratedGuides_cell_;
          goto LABEL_15;
        }
        uint64_t v11 = &selRef_didTapOnCuratedGuide_cell_;
LABEL_15:
        [a3 *v11 isa:v6];

        return;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
}

double sub_10032EB4C@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F7AC, a1);
}

uint64_t sub_10032EB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F7AC);
}

void sub_10032EB8C(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *a2;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    swift_unknownObjectRetain();
    self;
    uint64_t v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      [a4 didTapOnItemInChildItems:v8 cell:v7 buttonIndex:v5];
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
}

double sub_10032EC48@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F758, a1);
}

uint64_t sub_10032EC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F758);
}

void sub_10032EC88(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = &selRef_didTapOnAccessoryEntityDirectionsWithCell_;
    uint64_t v7 = (void *)Strong;
    switch(v4 >> 61)
    {
      case 1uLL:
        goto LABEL_4;
      case 2uLL:
        uint64_t v6 = &selRef_didTapOnAddStop_;
LABEL_4:
        [a3 *v6:Strong];
        break;
      case 4uLL:
        uint64_t v6 = &selRef_didTapOnAccessoryEntityFlyoverWithCell_;
        switch(__ROR8__(v4, 3) ^ 0x1000000000000000)
        {
          case 1:
            uint64_t v6 = &selRef_didTapOnAccessoryEntityLookAroundWithCell_;
            goto LABEL_4;
          case 2:
            uint64_t v6 = &selRef_didTapOnAccessoryEntityCallWithCell_;
            goto LABEL_4;
          case 3:
            uint64_t v6 = &selRef_didTapOnAccessoryEntityWebsiteWithCell_;
            goto LABEL_4;
          case 4:
            uint64_t v6 = &selRef_didTapOnAccessoryEntityQueryAcceleratorWithCell_;
            goto LABEL_4;
          case 5:
            goto LABEL_5;
          default:
            goto LABEL_4;
        }
      default:
        break;
    }
LABEL_5:
  }
}

double sub_10032EDB8@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F6B0, a1);
}

uint64_t sub_10032EDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F6B0);
}

void sub_10032EDF8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    swift_unknownObjectRetain();
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      [a3 didTapOnResultRefinement:v6 cell:v5];
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
}

double sub_10032EEAC@<D0>(_OWORD *a1@<X8>)
{
  return sub_10032EECC((void (*)(void))sub_10011F65C, a1);
}

double sub_10032EECC@<D0>(void (*a1)(void)@<X3>, _OWORD *a2@<X8>)
{
  a1();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10032EF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F65C);
}

uint64_t sub_10032EF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  return EnvironmentValues.subscript.setter();
}

void sub_10032EFAC(uint64_t *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    [a3 *a4 v6 Strong];
  }
}

void sub_10032F024(void **a1, uint64_t a2, void *a3)
{
  long long v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = [v4 _geoMapItem];
    if (v7)
    {
      id v8 = [v7 _identifier];
      swift_unknownObjectRelease();
      if (v8)
      {
        [a3 didTapOnTappableEntryWithMapItemIdentifier:v8 cell:v6];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10032F0EC(uint64_t *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    [a3 *a4:Strong v6];
  }
}

uint64_t sub_10032F164@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(KeyPath) = a3;
  uint64_t v7 = sub_1000FF33C(&qword_1015D44A0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UnevenRoundedRectangle();
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000FF33C(&qword_1015D44A8);
  uint64_t v34 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v32 - v17;
  if (MapsFeature_IsEnabled_SearchAndDiscovery()
    && *(unsigned char *)(a1 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase) == 2
    && (v32[1] = OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics,
        *(void *)(a1 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics))
    && !-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(a2))
  {
    if (KeyPath)
    {
      id v21 = [self tertiarySystemGroupedBackgroundColor];
      uint64_t v22 = Color.init(_:)();
    }
    else
    {
      uint64_t v22 = static Color.white.getter();
    }
    uint64_t v23 = v22;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = v23;
    uint64_t v25 = (char *)v12 + *(int *)(v10 + 20);
    uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v27 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
    RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
    *uint64_t v12 = v28;
    v12[1] = v29;
    v12[2] = v30;
    v12[3] = v31;
    sub_1001D76D8((uint64_t)v12, (uint64_t)v9);
    *(_WORD *)&v9[*(int *)(v7 + 36)] = 256;
    sub_1000FF27C((uint64_t)v9, (uint64_t)v15 + *(int *)(v13 + 36), &qword_1015D44A0);
    *uint64_t v15 = KeyPath;
    v15[1] = v24;
    swift_retain();
    swift_retain();
    sub_1000FF2E0((uint64_t)v9, &qword_1015D44A0);
    sub_1001D773C((uint64_t)v12);
    swift_release();
    swift_release();
    sub_1003303F4((uint64_t)v15, (uint64_t)v18);
    sub_1003303F4((uint64_t)v18, a4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(a4, 0, 1, v13);
  }
  else
  {
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
    return v19(a4, 1, 1, v13);
  }
}

id sub_10032F708()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryTableViewCell()
{
  return self;
}

uint64_t sub_10032F85C@<X0>(uint64_t a1@<X8>)
{
  return sub_10032E408(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

unint64_t sub_10032F86C()
{
  unint64_t result = qword_1015DB808;
  if (!qword_1015DB808)
  {
    sub_10010118C(&qword_1015DB800);
    sub_10032F90C();
    sub_1001010F8(&qword_1015DB8D0, &qword_1015DB8D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB808);
  }
  return result;
}

unint64_t sub_10032F90C()
{
  unint64_t result = qword_1015DB810;
  if (!qword_1015DB810)
  {
    sub_10010118C(&qword_1015DB818);
    sub_10032F9AC();
    sub_1001010F8(&qword_1015D5630, &qword_1015D5638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB810);
  }
  return result;
}

unint64_t sub_10032F9AC()
{
  unint64_t result = qword_1015DB820;
  if (!qword_1015DB820)
  {
    sub_10010118C(&qword_1015DB828);
    sub_10032FA4C();
    sub_1001010F8(&qword_1015D5620, &qword_1015D5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB820);
  }
  return result;
}

unint64_t sub_10032FA4C()
{
  unint64_t result = qword_1015DB830;
  if (!qword_1015DB830)
  {
    sub_10010118C(&qword_1015DB838);
    sub_10032FAEC();
    sub_1001010F8(&qword_1015D5620, &qword_1015D5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB830);
  }
  return result;
}

unint64_t sub_10032FAEC()
{
  unint64_t result = qword_1015DB840;
  if (!qword_1015DB840)
  {
    sub_10010118C(&qword_1015DB848);
    sub_10032FB8C();
    sub_1001010F8(&qword_1015DB8C0, &qword_1015DB8C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB840);
  }
  return result;
}

unint64_t sub_10032FB8C()
{
  unint64_t result = qword_1015DB850;
  if (!qword_1015DB850)
  {
    sub_10010118C(&qword_1015DB858);
    sub_10032FC2C();
    sub_1001010F8(&qword_1015DB8B0, &qword_1015DB8B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB850);
  }
  return result;
}

unint64_t sub_10032FC2C()
{
  unint64_t result = qword_1015DB860;
  if (!qword_1015DB860)
  {
    sub_10010118C(&qword_1015DB868);
    sub_10032FCCC();
    sub_1001010F8(&qword_1015D5620, &qword_1015D5628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB860);
  }
  return result;
}

unint64_t sub_10032FCCC()
{
  unint64_t result = qword_1015DB870;
  if (!qword_1015DB870)
  {
    sub_10010118C(&qword_1015DB878);
    sub_10032FD6C();
    sub_1001010F8(&qword_1015DB8A0, &qword_1015DB8A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB870);
  }
  return result;
}

unint64_t sub_10032FD6C()
{
  unint64_t result = qword_1015DB880;
  if (!qword_1015DB880)
  {
    sub_10010118C(&qword_1015DB888);
    sub_1001FDF18();
    sub_1001010F8(&qword_1015DB890, &qword_1015DB898);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DB880);
  }
  return result;
}

unint64_t sub_10032FE0C()
{
  unint64_t result = qword_1015CFD40;
  if (!qword_1015CFD40)
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFD40);
  }
  return result;
}

double sub_10032FE64@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F890, a1);
}

uint64_t sub_10032FE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F890);
}

uint64_t sub_10032FEB8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10032FEF4(uint64_t *a1)
{
  sub_10032EFAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnUserGeneratedGuide_cell_);
}

double sub_10032FF18@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F83C, a1);
}

uint64_t sub_10032FF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F83C);
}

void sub_10032FF70(unint64_t *a1)
{
  sub_10032E9D8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_10032FF78@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F7AC, a1);
}

uint64_t sub_10032FF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F7AC);
}

void sub_10032FFD0(uint64_t a1, uint64_t *a2)
{
  sub_10032EB8C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

double sub_10032FFD8@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F758, a1);
}

uint64_t sub_10032FFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F758);
}

void sub_100330030(unint64_t *a1)
{
  sub_10032EC88(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_100330038@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F704, a1);
}

uint64_t sub_100330058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F704);
}

void sub_100330090(uint64_t *a1)
{
  sub_10032EFAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnContainmentParentMapItem_cell_);
}

double sub_1003300B4@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F6B0, a1);
}

uint64_t sub_1003300D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F6B0);
}

void sub_10033010C(uint64_t a1)
{
  sub_10032EDF8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_100330114@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F65C, a1);
}

uint64_t sub_100330134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F65C);
}

void sub_10033016C(uint64_t *a1)
{
  sub_10032EFAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnTappableEntryWithMapItemIdentifier_cell_);
}

double sub_100330190@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F608, a1);
}

uint64_t sub_1003301B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F608);
}

void sub_1003301E8(uint64_t *a1)
{
  sub_10032F0EC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnUserLibrary_mapItem_);
}

double sub_10033020C@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F5B4, a1);
}

uint64_t sub_10033022C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F5B4);
}

void sub_100330264(void **a1)
{
  sub_10032F024(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_10033026C@<D0>(_OWORD *a1@<X8>)
{
  return sub_10033028C((void (*)(void))sub_10011F4F0, a1);
}

double sub_10033028C@<D0>(void (*a1)(void)@<X3>, _OWORD *a2@<X8>)
{
  a1();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1003302E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10032EF48(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_10011F4F0);
}

void sub_100330320(uint64_t *a1)
{
  sub_10032F0EC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnPhotoCarousel_photoIndex_);
}

uint64_t sub_100330344@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100330370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10033039C()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1003303C8()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1003303F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D44A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033045C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = *(id *)(result + OBJC_IVAR____TtC4Maps28PlaceSummaryAsyncDataManager_imageDownloader);

    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel);
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_1001A7AD0();
    }
    else
    {
      uint64_t v6 = 0;
    }
    sub_1002CD954(v6);

    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1003305A4(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController;
  id v4 = objc_allocWithZone((Class)UISearchController);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithSearchResultsController:0];
  uint64_t v6 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UITableView) initWithFrame:2 style:0.0];
  swift_unknownObjectWeakAssign();

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for ChargingNetworkPickerViewController();
  [super initWithNibName:0 bundle:0];
  uint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for ChargingNetworksDataSource());
  uint64_t v9 = (char *)v7;
  uint64_t v10 = sub_1003312DC(a1, 1, v9, v8);

  swift_unknownObjectRelease();
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource];
  *(void *)&v9[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = v10;

  return v9;
}

void sub_1003307C4()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UISearchController) initWithSearchResultsController:0];
  uint64_t v2 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UITableView) initWithFrame:2 style:0.0];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100330904()
{
  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for ChargingNetworkPickerViewController();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController];
  uint64_t v2 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource;
  [v1 setSearchResultsUpdater:*(void *)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource]];
  [v1 setObscuresBackgroundDuringPresentation:0];
  id v3 = [v1 searchBar];
  [v3 setReturnKeyType:9];

  id v4 = [v1 searchBar];
  [v4 setShowsCancelButton:1];

  id v5 = [v1 searchBar];
  [v5 setDelegate:v0];

  [v1 setHidesNavigationBarDuringPresentation:0];
  id v6 = [v0 navigationItem];
  [v6 setSearchController:v1];

  id v7 = [v0 navigationItem];
  [v7 setHidesSearchBarWhenScrolling:0];

  id v8 = [v0 navigationItem];
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v9._countAndFlagsBits = 0xD000000000000025;
  v37._countAndFlagsBits = 0xD000000000000027;
  v37._object = (void *)0x8000000100F881D0;
  v9._object = (void *)0x8000000100F88180;
  v10._object = (void *)0x8000000100F881B0;
  v10._countAndFlagsBits = 0xD000000000000014;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v37);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setTitle:v11];

  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setDataSource:*(void *)&v0[v2]];
  [v12 setDelegate:*(void *)&v0[v2]];
  sub_100100830(0, &qword_1015DB998);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v14 = String._bridgeToObjectiveC()();
  [v12 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v14];

  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = result;
  [result addSubview:v12];

  sub_1000FF33C(&qword_1015CD310);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100F62DB0;
  id v18 = [v12 leadingAnchor];
  id result = [v0 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v19 = result;
  id v20 = [result leadingAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20];
  *(void *)(v17 + 32) = v21;
  id v22 = [v12 trailingAnchor];
  id result = [v0 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v23 = result;
  id v24 = [result trailingAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24];
  *(void *)(v17 + 40) = v25;
  id v26 = [v12 topAnchor];
  id result = [v0 view];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v27 = result;
  id v28 = [result topAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28];
  *(void *)(v17 + 48) = v29;
  id v30 = [v12 bottomAnchor];
  id result = [v0 view];
  if (result)
  {
    uint64_t v31 = result;
    char v32 = self;
    id v33 = [v31 bottomAnchor];

    id v34 = [v30 constraintEqualToAnchor:v33];
    *(void *)(v17 + 56) = v34;
    specialized Array._endMutation()();
    sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v32 activateConstraints:isa];

    return [v12 reloadData];
  }
LABEL_13:
  __break(1u);
  return result;
}

id sub_100330F2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChargingNetworkPickerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ChargingNetworkPickerViewController()
{
  return self;
}

void sub_100330FF4(void *a1, char a2)
{
  id v3 = v2;
  id v6 = [self sharedService];
  if (v6)
  {
    id v7 = v6;
    if (a2) {
      uint64_t v8 = 455;
    }
    else {
      uint64_t v8 = 443;
    }
    [v6 captureUserAction:v8 onTarget:122 eventValue:0];

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Swift::String v10 = (void *)Strong;
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_100F5DFF0;
      *(void *)(v11 + 32) = a1;
      specialized Array._endMutation()();
      sub_100100830(0, (unint64_t *)&unk_1015D4B20);
      id v12 = a1;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v10 networkPickerControllerDidSelectNetworks:isa];

      swift_unknownObjectRelease();
    }
    id v14 = [v3 presentingViewController];
    if (v14)
    {
      id v15 = v14;
      [v14 dismissViewControllerAnimated:1 completion:0];
    }
  }
  else
  {
    __break(1u);
  }
}

char *sub_1003312DC(void *a1, uint64_t a2, void *a3, char *a4)
{
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_provider] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = &a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_searchString];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_suggestedNetworks] = _swiftEmptyArrayStorage;
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_otherNetworks] = _swiftEmptyArrayStorage;
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks] = _swiftEmptyArrayStorage;
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks] = _swiftEmptyArrayStorage;
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_selectedNetworks] = &_swiftEmptySetSingleton;
  if (a1) {
    Swift::String v9 = a1;
  }
  else {
    Swift::String v9 = &_swiftEmptySetSingleton;
  }
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_excludedNetworks] = v9;
  swift_unknownObjectWeakAssign();
  *(void *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context] = a2;
  v16.receiver = a4;
  v16.super_class = (Class)type metadata accessor for ChargingNetworksDataSource();
  [super init];
  id v11 = objc_allocWithZone((Class)VGChargingNetworkAvailabilityProvider);
  id v12 = (char *)v10;
  id v13 = [v11 initWithDelegate:v12];

  id v14 = *(void **)&v12[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_provider];
  *(void *)&v12[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_provider] = v13;

  return v12;
}

void sub_100331458()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UISearchController) initWithSearchResultsController:0];
  uint64_t v2 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UITableView) initWithFrame:2 style:0.0];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10033153C(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(uint64_t (*)(char), uint64_t))(a1 + 32);
  id v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_100118784, v4);
  swift_release();

  return swift_release();
}

double sub_1003315D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000F2354(a1, (uint64_t)v14);
  sub_1000FF33C(&qword_1015DBAC8);
  if (swift_dynamicCast())
  {
    id v4 = [v12[0] _maps_diffableDataSourceIdentifier];
    if (v4)
    {
      id v5 = v4;
      id v6 = sub_1000FB03C();
      id v7 = [v6 identifierPathByAppendingIdentifier:v5];

      swift_unknownObjectRelease();
      if (v7)
      {
        sub_1000F2354(a1, (uint64_t)v14);
        sub_100100830(0, &qword_1015CF700);
        if (swift_dynamicCast())
        {
          if ([v11 type] == 3)
          {
            v12[0] = v11;
            char v8 = 3;
LABEL_13:
            char v13 = v8;
            *(void *)(a2 + 32) = &type metadata for HomeListTwoLinesCellModel;
            *(void *)(a2 + 40) = sub_10024F750();
            uint64_t v9 = swift_allocObject();
            *(void *)(a2 + 8) = v9;
            sub_10024F840((uint64_t)v12, v9 + 16);
            *(void *)a2 = v7;
            return result;
          }
        }
        else
        {
          sub_1000F2354(a1, (uint64_t)v14);
          sub_1000FF33C((uint64_t *)&unk_1015D6850);
          if (swift_dynamicCast())
          {
            v12[0] = v11;
            char v8 = 4;
            goto LABEL_13;
          }
          sub_1000F2354(a1, (uint64_t)v14);
          sub_100100830(0, (unint64_t *)&unk_1015DBAD0);
          if (swift_dynamicCast())
          {
            v12[0] = v11;
            char v8 = 5;
            goto LABEL_13;
          }
        }
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

void *sub_100331810()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v11);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v11);
  if (!Strong)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long aBlock = 0u;
    goto LABEL_10;
  }
  sub_10025DE18(&aBlock);
  swift_unknownObjectRelease();
  if (!(void)aBlock)
  {
LABEL_10:
    sub_1000FF2E0((uint64_t)&aBlock, &qword_1015D68C0);
    return _swiftEmptyArrayStorage;
  }
  v15[0] = aBlock;
  v15[1] = v13;
  v15[2] = v14;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000FF3F0((uint64_t)v15, (uint64_t)v11);
  uint64_t v3 = swift_allocObject();
  long long v4 = v11[1];
  *(_OWORD *)(v3 + 24) = v11[0];
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 40) = v4;
  *(_OWORD *)(v3 + 56) = v11[2];
  *(void *)&long long v14 = sub_100332DF4;
  *((void *)&v14 + 1) = v3;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v13 = sub_10033153C;
  *((void *)&v13 + 1) = &unk_1012E5060;
  id v5 = _Block_copy(&aBlock);
  swift_release();
  id v6 = sub_100B7E834(v5);
  _Block_release(v5);
  id v7 = v6;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v8 = sub_10033D034((uint64_t)v15, 0, 0);
  if (v8)
  {
    id v9 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    sub_1000FFC8C((uint64_t)v15);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000FFC8C((uint64_t)v15);

    return _swiftEmptyArrayStorage;
  }
}

void sub_100331AB4(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    sub_100331B2C(a4, a1, a2);
  }
}

void sub_100331B2C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1000FF27C((uint64_t)(a1 + 1), (uint64_t)v31, (uint64_t *)&unk_1015D6960);
  sub_100101314(v31, (uint64_t)v24);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if (!swift_dynamicCast())
  {
    v29[0] = 0;
    v29[1] = 0;
    char v30 = -1;
    sub_1000FF2E0((uint64_t)v29, &qword_1015DBA60);
    return;
  }
  sub_10024F840((uint64_t)v29, (uint64_t)v31);
  id v8 = (void *)sub_10033C60C(a1, a2, a3);
  sub_1000FF33C(&qword_1015CD310);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5DFF0;
  *(void *)(inited + 32) = v8;
  v24[0] = inited;
  specialized Array._endMutation()();
  unint64_t v10 = v24[0];
  id v11 = v8;
  sub_10033BBE8(v10);
  swift_bridgeObjectRelease();
  sub_10024AE24((uint64_t)v31, (uint64_t)v24);
  if (v25 == 3)
  {
    id v12 = (void *)v24[0];
    sub_1000F1C90(v4 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v24);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    sub_1000F1BD8((uint64_t)v24);
    if (!Strong
      || (id v14 = [Strong homeDeleteDelegate],
          swift_unknownObjectRelease(),
          !v14))
    {
      sub_10024AE9C((uint64_t)v31);

      return;
    }
    [v14 deleteMarkedLocation:v12];

    swift_unknownObjectRelease();
  }
  else
  {
    sub_10024AE9C((uint64_t)v24);
    id v15 = sub_10024A2C8();
    if (v15)
    {
      id v16 = v15;
      uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider);
      sub_1000FF33C((uint64_t *)&unk_1015D4740);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_100F5CF70;
      *(void *)(v18 + 56) = swift_getObjectType();
      *(void *)(v18 + 32) = v16;
      swift_unknownObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      *(void *)(v21 + 24) = v11;
      uint64_t v27 = sub_100319508;
      uint64_t v28 = v21;
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 1107296256;
      id v25 = sub_100341218;
      id v26 = &unk_1012E5010;
      id v22 = _Block_copy(v24);
      id v23 = v11;
      swift_release();
      [v17 deleteRecents:isa completion:v22];
      _Block_release(v22);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  sub_10024AE9C((uint64_t)v31);
}

uint64_t sub_100331E84()
{
  return swift_bridgeObjectRelease();
}

id sub_100331EF4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListRecentsSectionController();
  return [super dealloc];
}

unint64_t sub_100331FA4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v10._countAndFlagsBits = 0xD00000000000003ELL;
  v10._object = (void *)0x8000000100F884C0;
  v3._object = (void *)0x8000000100F88490;
  v3._countAndFlagsBits = 0xD000000000000020;
  v4._countAndFlagsBits = 0x73746E65636552;
  v4._object = (void *)0xE700000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v10);
  unint64_t v6 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) + 16);
  unint64_t result = GEOConfigGetUInteger();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    char v8 = result < v6;
    swift_unknownObjectRetain();
    return sub_10002A018(v5._countAndFlagsBits, (uint64_t)v5._object, 0, v8, v1, (uint64_t)&off_1012E4EC8, 0x65636552656D6F48, 0xEB0000000073746ELL, a1);
  }
  return result;
}

id sub_1003320FC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100331810();
  }
  sub_100100830(0, (unint64_t *)&unk_1015DBA50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [self configurationWithActions:isa];

  return v3;
}

uint64_t sub_1003321CC()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v3);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = sub_1000F1BD8((uint64_t)v3);
  if (Strong)
  {
    [Strong homeSectionHeaderButtonTapped:5];
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_100332240()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v9._countAndFlagsBits = 0xD00000000000003ELL;
  v9._object = (void *)0x8000000100F884C0;
  v1._object = (void *)0x8000000100F88490;
  v1._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x73746E65636552;
  v2._object = (void *)0xE700000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_101611820, v2, v9);
  unint64_t v4 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) + 16);
  unint64_t result = GEOConfigGetUInteger();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    char v6 = result < v4;
    swift_unknownObjectRetain();
    sub_10002A018(v3._countAndFlagsBits, (uint64_t)v3._object, 0, v6, v0, (uint64_t)&off_1012E4EC8, 0x65636552656D6F48, 0xEB0000000073746ELL, (uint64_t)v8);
    uint64_t v7 = v8[17];
    sub_1001D4730((uint64_t)v8);
    return v7;
  }
  return result;
}

uint64_t sub_100332390()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v17._countAndFlagsBits = 0xD00000000000003ELL;
  v17._object = (void *)0x8000000100F884C0;
  v1._object = (void *)0x8000000100F88490;
  v1._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x73746E65636552;
  v2._object = (void *)0xE700000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_101611820, v2, v17);
  unint64_t v4 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) + 16);
  unint64_t UInteger = GEOConfigGetUInteger();
  if ((UInteger & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    char v6 = UInteger < v4;
    swift_unknownObjectRetain();
    sub_10002A018(v3._countAndFlagsBits, (uint64_t)v3._object, 0, v6, v0, (uint64_t)&off_1012E4EC8, 0x65636552656D6F48, 0xEB0000000073746ELL, (uint64_t)v15);
    sub_1000FF27C((uint64_t)&v16, (uint64_t)v14, (uint64_t *)&unk_1015D4350);
    sub_1001D4730((uint64_t)v15);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D4350);
    }
    uint64_t v8 = Strong;
    swift_getObjectType();
    uint64_t v9 = swift_conformsToProtocol2();
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v9) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v11)
    {
      sub_1000FF2E0((uint64_t)v14, (uint64_t *)&unk_1015D4350);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
      return swift_unknownObjectRelease();
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1003325BC()
{
  return sub_100332240() & 1;
}

uint64_t sub_1003325E4()
{
  return sub_100332390();
}

uint64_t sub_100332608(uint64_t a1)
{
  Swift::String v2 = v1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v18.receiver = v2;
  v18.super_class = (Class)type metadata accessor for HomeListRecentsSectionController();
  [super collectionView:didSelectItemAtIndexPath:a1 isa];

  sub_1000F1C90((uint64_t)v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v17);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v17);
  if (Strong)
  {
    sub_10025DE18(v17);
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, 48);
  }
  sub_1000FF27C((uint64_t)v17, (uint64_t)&v11, &qword_1015D68C0);
  if (!v11)
  {
    sub_1000FF2E0((uint64_t)&v11, &qword_1015D68C0);
    goto LABEL_10;
  }
  sub_1000FF27C((uint64_t)&v12, (uint64_t)v10, (uint64_t *)&unk_1015D6960);
  sub_100101314(v10, (uint64_t)v13);
  sub_1000FFC8C((uint64_t)&v11);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v15[0] = 0;
    v15[1] = 0;
    unsigned __int8 v16 = -1;
    goto LABEL_11;
  }
  if (v16 == 255)
  {
LABEL_11:
    sub_1000FF2E0((uint64_t)v17, &qword_1015D68C0);
    uint64_t v7 = &qword_1015DBA60;
    uint64_t v8 = (objc_super *)v15;
    return sub_1000FF2E0((uint64_t)v8, v7);
  }
  sub_10024F840((uint64_t)v15, (uint64_t)&v11);
  sub_10024AE24((uint64_t)&v11, (uint64_t)v13);
  if (v14 != 4)
  {
    sub_10024AE9C((uint64_t)&v11);
    sub_1000FF2E0((uint64_t)v17, &qword_1015D68C0);
    return sub_10024AE9C((uint64_t)v13);
  }
  id v6 = [(id)swift_unknownObjectRetain() mspHistoryEntry];
  sub_100332968();
  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease();
  sub_10024AE9C((uint64_t)&v11);
  uint64_t v7 = &qword_1015D68C0;
  uint64_t v8 = (objc_super *)v17;
  return sub_1000FF2E0((uint64_t)v8, v7);
}

uint64_t sub_100332928()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100332960()
{
  return sub_1003320FC();
}

void sub_100332968()
{
  self;
  if (swift_dynamicCastObjCClass())
  {
    uint64_t v0 = self;
    uint64_t v16 = IndexPath.item.getter();
    dispatch thunk of CustomStringConvertible.description.getter();
    NSString v1 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 captureUserAction:175 target:8 value:v1, v16, v21];
  }
  else
  {
    uint64_t v2 = swift_dynamicCastObjCProtocolConditional();
    if (v2)
    {
      Swift::String v3 = (void *)v2;
      swift_unknownObjectRetain();
      NSString v1 = [v3 endWaypoint];
      self;
      unint64_t v4 = (void *)swift_dynamicCastObjCClass();
      if (v4)
      {
        id v5 = [v4 route];
        id v6 = [v5 source];

        switch((unint64_t)v6)
        {
          case 2uLL:
            uint64_t v7 = self;
            uint64_t v17 = IndexPath.item.getter();
            dispatch thunk of CustomStringConvertible.description.getter();
            NSString v8 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v7 captureUserAction:462 target:8 value:v8 value:v17 protocol:&OBJC_PROTOCOL___MSPHistoryEntryRoute];
            goto LABEL_16;
          case 3uLL:
            id v15 = self;
            uint64_t v20 = IndexPath.item.getter();
            dispatch thunk of CustomStringConvertible.description.getter();
            NSString v8 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v15 captureUserAction:468 target:8 value:v8 value:v20 protocol:&OBJC_PROTOCOL___MSPHistoryEntryRoute];
LABEL_16:

            break;
          default:
            break;
        }
      }
      else
      {
        swift_unknownObjectRelease();

        swift_unknownObjectRetain();
        id v10 = [v3 waypoints];
        sub_100100830(0, (unint64_t *)&qword_1015D1C60);
        unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v12 > 2) {
          uint64_t v13 = 302;
        }
        else {
          uint64_t v13 = 303;
        }
        char v14 = self;
        uint64_t v19 = IndexPath.item.getter();
        dispatch thunk of CustomStringConvertible.description.getter();
        NSString v1 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v14 captureUserAction:v13 target:8 value:v1 value:v19 protocol:&OBJC_PROTOCOL___MSPHistoryEntryRoute];
      }
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = self;
      uint64_t v18 = IndexPath.item.getter();
      dispatch thunk of CustomStringConvertible.description.getter();
      NSString v1 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 captureUserAction:2064 target:8 value:v1 value:v18 value:&OBJC_PROTOCOL___MSPHistoryEntryRoute];
    }
  }
}

uint64_t sub_100332D2C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100332D6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100332DAC()
{
  swift_release();

  sub_1000FF22C(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100332DF4(uint64_t a1, uint64_t a2)
{
  sub_100331AB4(a1, a2, *(void *)(v2 + 16), (void **)(v2 + 24));
}

uint64_t sub_100332E00()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100332E38()
{
  switch(*(unsigned char *)(v0 + 32))
  {
    case 0:
    case 2:
    case 3:
    case 5:

      break;
    case 1:

      swift_unknownObjectWeakDestroy();
      break;
    case 4:
      swift_unknownObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 33, 7);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteLength()
{
  return &type metadata for PlaceSummaryUnitHikeRouteLength;
}

uint64_t sub_100332EF8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100356D7C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1003387B4(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_100332F74(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Date() - 8);
  Swift::String v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v3 = (void *)sub_10035622C(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10033925C(v5);
  *a1 = v3;
}

void sub_10033301C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16);
  v6(v5, v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_section, v1, v3);
  sub_1003350F8(&qword_1015D4890, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7(v5, v1);
  ((void (*)(char *, uint64_t, uint64_t))v6)(v5, v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v1);
  dispatch thunk of Hashable.hash(into:)();
  v7(v5, v1);
  if ((*(void *)(v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)(v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration);
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  ((void (*)(char *, uint64_t, uint64_t))v6)(v5, v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_endTime, v1);
  dispatch thunk of Hashable.hash(into:)();
  v7(v5, v1);
  Hasher._combine(_:)(*(void *)(v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_eventCount));
  Hasher._combine(_:)(*(void *)(v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_byteCount));
}

uint64_t sub_100333238()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_section;
  uint64_t v2 = type metadata accessor for Date();
  __n128 v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v2);
  v3(v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_endTime, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100333324()
{
  return type metadata accessor for GEOAPSessionSpecificModelItem(0);
}

uint64_t type metadata accessor for GEOAPSessionSpecificModelItem(uint64_t a1)
{
  return sub_100130928(a1, qword_1015DBC88);
}

uint64_t sub_10033334C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for GEOAPSessionSpecificDataSource(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015DBDD8);
}

uint64_t sub_100333410()
{
  return swift_initClassMetadata2();
}

Swift::Int sub_100333450()
{
  return Hasher._finalize()();
}

void sub_100333494()
{
}

Swift::Int sub_1003334B8()
{
  return Hasher._finalize()();
}

BOOL sub_1003334F8(uint64_t *a1, uint64_t *a2)
{
  return sub_10033AAF4(*a1, *a2);
}

uint64_t sub_100333504(uint64_t a1, unint64_t a2)
{
  return sub_10033B1D4(a2);
}

id sub_10033350C(void *a1, uint64_t a2, void *a3, unint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_10033B1D4(a4);
  uint64_t v9 = v8;

  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }

  return v10;
}

id sub_10033359C()
{
  return sub_100335F28(0, (uint64_t (*)(void))type metadata accessor for GEOAPSessionSpecificDataSource);
}

uint64_t sub_1003335B8()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for GEOAPSessionSpecificDataSource(0));
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)();
}

uint64_t sub_10033360C()
{
  return type metadata accessor for GEOAPSessionSpecificDataSource(0);
}

uint64_t sub_100333614()
{
  v1[14] = v0;
  uint64_t v2 = type metadata accessor for Calendar.Identifier();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Calendar();
  v1[18] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[19] = v4;
  v1[20] = *(void *)(v4 + 64);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return _swift_task_switch(sub_100333748, 0, 0);
}

id sub_100333748()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = _swiftEmptyDictionarySingleton;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for Calendar.Identifier.gregorian(_:), v3);
  Calendar.init(identifier:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id result = [self sharedManager];
  id v19 = result;
  if (result)
  {
    uint64_t v6 = v0[21];
    uint64_t v7 = v0[19];
    uint64_t v8 = v0[20];
    uint64_t v9 = v0[18];
    uint64_t v18 = v0[22];
    uint64_t v10 = v0[14];
    (*(void (**)(uint64_t))(v7 + 16))(v6);
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v13 + v11, v6, v9);
    *(void *)(v13 + v12) = v4;
    v0[6] = sub_10033BA94;
    v0[7] = v13;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100349868;
    v0[5] = &unk_1012E51E8;
    char v14 = _Block_copy(v0 + 2);
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v4;
    *(void *)(v15 + 24) = v10;
    v0[12] = sub_10033BBD8;
    v0[13] = v15;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10008C380;
    v0[11] = &unk_1012E5238;
    uint64_t v16 = _Block_copy(v0 + 8);
    swift_retain();
    swift_retain();
    swift_release();
    [v19 showHistoryOfAge:10000000 withVisitorBlock:v14 completion:v16];
    _Block_release(v16);
    _Block_release(v14);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v9);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return (id)v17();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100333A80(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int v100 = a6;
  unsigned int v101 = a7;
  unsigned int v103 = a4;
  uint64_t v105 = a3;
  uint64_t v102 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  v97 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v98 = (char *)&v85 - v16;
  __chkstk_darwin(v17);
  v104 = (char *)&v85 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v85 - v20;
  uint64_t v22 = type metadata accessor for DateComponents();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v26 - 8);
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  char v30 = (char *)&v85 - v29;
  __chkstk_darwin(v31);
  id v33 = (char *)&v85 - v32;
  __chkstk_darwin(v34);
  objc_super v36 = (char *)&v85 - v35;
  __chkstk_darwin(v37);
  if (*(unsigned char *)(a10 + 44)) {
    return;
  }
  int v41 = a5 == 8 ? 7 : a5;
  if (v41 != *(_DWORD *)(a10 + 40)) {
    return;
  }
  v94 = (char *)v40;
  uint64_t v90 = v39;
  uint64_t v99 = (uint64_t)&v85 - v38;
  sub_1001C100C(v105, (uint64_t)v36);
  uint64_t v42 = v102;
  v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v93 = v13 + 48;
  int v43 = v92(v36, 1, v102);
  v95 = v25;
  uint64_t v89 = v22;
  uint64_t v88 = v23;
  v91 = v21;
  if (v43 == 1)
  {
    sub_1001C0FAC((uint64_t)v36);
    uint64_t v44 = 1;
    uint64_t v45 = v99;
  }
  else
  {
    uint64_t v45 = v99;
    Date.addingTimeInterval(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v36, v42);
    uint64_t v44 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v45, v44, 1, v42);
  sub_1000FF33C(&qword_1015DC198);
  uint64_t v96 = v13;
  uint64_t v46 = type metadata accessor for Calendar.Component();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(void *)(v47 + 72);
  unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v50 = v42;
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_100F5CF80;
  unint64_t v52 = v51 + v49;
  uint64_t v53 = *(void (**)(unint64_t, void, uint64_t))(v47 + 104);
  v53(v52, enum case for Calendar.Component.year(_:), v46);
  v53(v52 + v48, enum case for Calendar.Component.month(_:), v46);
  v53(v52 + 2 * v48, enum case for Calendar.Component.day(_:), v46);
  sub_10033B44C(v51);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1001C100C(v99, (uint64_t)v33);
  uint64_t v54 = v92;
  if (v92(v33, 1, v50) == 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v55 = v96;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v87 = v96 + 8;
  v56(v33, v50);
  Calendar.date(from:)();
  int v57 = v54(v30, 1, v50);
  uint64_t v58 = (uint64_t)v91;
  if (v57 == 1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v59 = v50;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v60(v91, v30, v50);
  uint64_t v61 = v55 + 16;
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  uint64_t v63 = v58;
  uint64_t v96 = v61;
  v62(v104, v58, v59);
  uint64_t v64 = (uint64_t)v94;
  sub_1001C100C(v99, (uint64_t)v94);
  if (v54((char *)v64, 1, v59) == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v65 = v59;
  v85 = v62;
  v86 = (void (*)(uint64_t, uint64_t))v56;
  uint64_t v66 = v90;
  sub_1001C100C(v105, v90);
  if (v54((char *)v66, 1, v59) == 1)
  {
LABEL_28:
    __break(1u);
    return;
  }
  v67 = (uint64_t *)(a12 + 16);
  double v68 = (double)v103;
  uint64_t v69 = v100;
  uint64_t v70 = v101;
  type metadata accessor for GEOAPSessionSpecificModelItem(0);
  uint64_t v71 = swift_allocObject();
  v60((char *)(v71 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_section), v104, v65);
  v60((char *)(v71 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime), v94, v65);
  *(double *)(v71 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration) = v68;
  v60((char *)(v71 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_endTime), (char *)v66, v65);
  *(void *)(v71 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_eventCount) = v69;
  *(void *)(v71 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_byteCount) = v70;
  swift_beginAccess();
  uint64_t v72 = *(void *)(a12 + 16);
  if (*(void *)(v72 + 16) && (unint64_t v73 = sub_1001EAB38(v63), (v74 & 1) != 0))
  {
    uint64_t v108 = *(void *)(*(void *)(v72 + 56) + 8 * v73);
    swift_endAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v75 = v88;
    if (*(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v76 = (uint64_t)v97;
    v85(v97, v63, v65);
    uint64_t v77 = v108;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v106 = *v67;
    uint64_t *v67 = 0x8000000000000000;
    sub_100351EC8(v77, v76, isUniquelyReferenced_nonNull_native);
    uint64_t v79 = v106;
  }
  else
  {
    swift_endAccess();
    uint64_t v76 = (uint64_t)v98;
    v85(v98, v63, v65);
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_100F5DFF0;
    *(void *)(v80 + 32) = v71;
    unint64_t v107 = v80;
    specialized Array._endMutation()();
    unint64_t v81 = v107;
    uint64_t v75 = v88;
    if ((v107 & 0x8000000000000000) != 0 || (v107 & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v82 = (uint64_t)sub_10034EE84(v81);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v82 = v107 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
    }
    swift_beginAccess();
    char v83 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v108 = *v67;
    uint64_t *v67 = 0x8000000000000000;
    sub_100351EC8(v82, v76, v83);
    uint64_t v79 = v108;
  }
  uint64_t *v67 = v79;
  swift_bridgeObjectRelease();
  v84 = v86;
  v86(v76, v65);
  swift_endAccess();
  swift_release();
  v84(v63, v65);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v95, v89);
  sub_1001C0FAC(v99);
}

uint64_t sub_1003343F4(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v64 = *(char **)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v6 - 8);
  uint64_t v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015DC190);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v49 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v48 - v15;
  type metadata accessor for GEOAPSessionSpecificModelItem(0);
  sub_1003350F8(&qword_1015D4890, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1003350F8((unint64_t *)&unk_1015DBE70, 255, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificModelItem);
  NSDiffableDataSourceSnapshot.init()();
  uint64_t v62 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_10034EFA4(v17);
  swift_bridgeObjectRelease();
  v65[0]._rawValue = v18;
  swift_retain();
  sub_100332F74(v65);
  uint64_t v51 = v12;
  swift_release();
  rawValue = v65[0]._rawValue;
  uint64_t v60 = v16;
  uint64_t v61 = v11;
  NSDiffableDataSourceSnapshot.appendSections(_:)(v65[0]);
  uint64_t v20 = rawValue[2];
  uint64_t v50 = rawValue;
  if (v20)
  {
    uint64_t v21 = v64 + 16;
    uint64_t v22 = (void (*)(void))*((void *)v64 + 2);
    uint64_t v23 = (char *)rawValue + ((v64[80] + 32) & ~(unint64_t)v64[80]);
    uint64_t v54 = *((void *)v64 + 9);
    uint64_t v24 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
    int v57 = (void (**)(char *, char *, uint64_t))(v64 + 32);
    uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
    uint64_t v53 = (void (**)(char *, uint64_t))(v64 + 8);
    unint64_t v48 = (unint64_t)(v64 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v55 = v10;
    uint64_t v56 = v22;
    while (1)
    {
      uint64_t v64 = v23;
      v22(v10);
      id v25 = *v24;
      (*v24)(v10, 0, 1, v3);
      if ((*v58)(v10, 1, v3) == 1) {
        break;
      }
      (*v57)(v5, v10, v3);
      uint64_t v26 = v62;
      swift_beginAccess();
      uint64_t v27 = *v26;
      if (!*(void *)(v27 + 16))
      {
        swift_endAccess();
        __break(1u);
LABEL_18:
        swift_endAccess();
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      uint64_t v28 = v5;
      unint64_t v29 = sub_1001EAB38((uint64_t)v5);
      if ((v30 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v31 = v21;
      unint64_t v32 = *(void *)(*(void *)(v27 + 56) + 8 * v29);
      swift_endAccess();
      uint64_t v63 = v20;
      if ((v32 & 0x8000000000000000) != 0 || (v32 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        id v33 = sub_10034EE84(v32);
        swift_bridgeObjectRelease();
      }
      else
      {
        id v33 = (void *)(v32 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain_n();
      }
      uint64_t v34 = v3;
      v65[0]._rawValue = v33;
      sub_100332EF8((uint64_t *)v65);
      swift_bridgeObjectRelease();
      uint64_t v35 = v59;
      uint64_t v22 = v56;
      ((void (*)(char *, char *, uint64_t))v56)(v59, v28, v34);
      v25(v35, 0, 1, v34);
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      uint64_t v21 = v31;
      id v5 = v28;
      swift_release();
      uint64_t v36 = (uint64_t)v35;
      uint64_t v3 = v34;
      sub_1001C0FAC(v36);
      (*v53)(v28, v34);
      uint64_t v10 = v55;
      uint64_t v23 = &v64[v54];
      uint64_t v20 = v63 - 1;
      if (v63 == 1)
      {
        v25(v55, 1, 1, v3);
        break;
      }
    }
  }
  else
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v64 + 7))(v10, 1, 1, v3);
  }
  swift_release();
  uint64_t v37 = v62;
  swift_beginAccess();
  uint64_t v38 = v52;
  *(void *)(v52 + 16) = *v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = v38 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificDataModel_snapshot;
  swift_beginAccess();
  uint64_t v40 = v51;
  uint64_t v42 = v60;
  uint64_t v41 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 24))(v39, v60, v61);
  swift_endAccess();
  int v43 = *(void **)(v38 + 32);
  if (!v43) {
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v42, v41);
  }
  uint64_t v44 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v49, v39, v41);
  id v45 = v43;
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
  v46(v44, v41);
  return ((uint64_t (*)(char *, uint64_t))v46)(v42, v41);
}

void sub_100334A88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015DC190);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  __chkstk_darwin(v10);
  id v25 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [a1 dequeueReusableCellWithIdentifier:v12];

  if (!v13) {
    goto LABEL_14;
  }
  type metadata accessor for GEOAPSessionSpecificUploadTableViewCell();
  uint64_t v24 = swift_dynamicCastClassUnconditional();
  unint64_t v14 = IndexPath.section.getter();
  unint64_t v15 = IndexPath.row.getter();
  uint64_t v16 = a4 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificDataModel_snapshot;
  swift_beginAccess();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v17(v9, v16, v6);
  uint64_t v18 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, v6);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v14 >= *(void *)(v18 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v25, v18+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v14, v27);
  swift_bridgeObjectRelease();
  v17(v9, v16, v6);
  uint64_t v20 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  v19(v9, v6);
  if ((v20 & 0xC000000000000001) != 0)
  {
LABEL_11:
    uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v15 < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v21 = *(void *)(v20 + 8 * v15 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v24 + OBJC_IVAR____TtC4Maps39GEOAPSessionSpecificUploadTableViewCell_cellConfig) = v22;
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
    return;
  }
  __break(1u);
LABEL_14:
  __break(1u);
}

uint64_t sub_100334DDC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100105268;
  return sub_100333614();
}

uint64_t sub_100334E6C()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificDataModel_snapshot;
  uint64_t v2 = sub_1000FF33C(&qword_1015DC190);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100334F28()
{
  return type metadata accessor for GEOAPSessionSpecificDataModel(0);
}

uint64_t type metadata accessor for GEOAPSessionSpecificDataModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015DBE50);
}

void sub_100334F50()
{
  sub_100335004();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100335004()
{
  if (!qword_1015DBE68)
  {
    type metadata accessor for Date();
    type metadata accessor for GEOAPSessionSpecificModelItem(255);
    sub_1003350F8(&qword_1015D4890, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1003350F8((unint64_t *)&unk_1015DBE70, 255, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificModelItem);
    unint64_t v0 = type metadata accessor for NSDiffableDataSourceSnapshot();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015DBE68);
    }
  }
}

uint64_t sub_1003350F8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100335140()
{
  *(_DWORD *)&v0[OBJC_IVAR____TtC4Maps25GEOAPUploadLatencyBarView_latency] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25GEOAPUploadLatencyBarView_indicatorRects] = _swiftEmptyArrayStorage;
  v68.receiver = v0;
  v68.super_class = (Class)type metadata accessor for GEOAPUploadLatencyBarView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v2 = objc_allocWithZone((Class)UIView);
  uint64_t v3 = (char *)v1;
  id v4 = [v2 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 addSubview:v4];
  id v5 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F62DB0;
  id v7 = [v4 topAnchor];
  id v8 = [v3 layoutMarginsGuide];
  id v9 = [v8 topAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9];
  *(void *)(v6 + 32) = v10;
  id v11 = [v4 leadingAnchor];
  id v12 = [v3 layoutMarginsGuide];
  id v13 = [v12 leadingAnchor];

  id v14 = [v11 constraintEqualToAnchor:v13];
  *(void *)(v6 + 40) = v14;
  id v15 = [v4 trailingAnchor];
  id v16 = [v3 layoutMarginsGuide];
  id v17 = [v16 trailingAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17];
  *(void *)(v6 + 48) = v18;
  id v19 = [v4 bottomAnchor];
  id v20 = [v3 layoutMarginsGuide];
  id v21 = [v20 bottomAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21];
  uint64_t v23 = v4;
  *(void *)(v6 + 56) = v22;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v66 = v5;
  [v5 activateConstraints:isa];

  id v25 = [v4 leftAnchor];
  uint64_t v26 = self;
  uint64_t v62 = v3;
  uint64_t v64 = &v3[OBJC_IVAR____TtC4Maps25GEOAPUploadLatencyBarView_indicatorRects];
  uint64_t v27 = 6;
  uint64_t v28 = &selRef_setAutoresizingMask_;
  uint64_t v65 = v26;
  id v63 = v23;
  do
  {
    uint64_t v67 = v27;
    id v29 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v30 = [v26 systemBlackColor];
    [v29 v28[38] v30];

    [v23 addSubview:v29];
    id v31 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v32 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v33 = [v26 systemWhiteColor];
    [v32 v28[38] v33];

    [v31 addSubview:v32];
    swift_beginAccess();
    id v34 = v32;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v64 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_100F5E870;
    id v36 = [v31 leftAnchor];
    id v37 = [v36 constraintEqualToAnchor:v25];

    *(void *)(v35 + 32) = v37;
    id v38 = [v31 topAnchor];
    uint64_t v23 = v63;
    id v39 = [v63 topAnchor];
    id v40 = [v38 constraintEqualToAnchor:v39];

    *(void *)(v35 + 40) = v40;
    id v41 = [v31 bottomAnchor];
    id v42 = [v63 bottomAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    *(void *)(v35 + 48) = v43;
    id v44 = [v31 widthAnchor];
    id v45 = [v63 widthAnchor];
    id v46 = [v44 constraintEqualToAnchor:v45 multiplier:0.166666667];

    *(void *)(v35 + 56) = v46;
    id v47 = [v34 leftAnchor];
    id v48 = [v31 leftAnchor];
    id v49 = [v47 constraintEqualToAnchor:v48 constant:1.0];

    *(void *)(v35 + 64) = v49;
    id v50 = [v34 rightAnchor];
    id v51 = [v31 rightAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51 constant:-1.0];

    *(void *)(v35 + 72) = v52;
    id v53 = [v34 topAnchor];
    id v54 = [v31 topAnchor];
    id v55 = [v53 constraintEqualToAnchor:v54 constant:1.0];

    *(void *)(v35 + 80) = v55;
    id v56 = [v34 bottomAnchor];
    id v57 = [v31 bottomAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57 constant:-1.0];

    *(void *)(v35 + 88) = v58;
    specialized Array._endMutation()();
    Class v59 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v66 activateConstraints:v59];

    id v60 = [v31 rightAnchor];
    id v25 = v60;
    uint64_t v27 = v67 - 1;
    uint64_t v26 = v65;
    uint64_t v28 = &selRef_setAutoresizingMask_;
  }
  while (v67 != 1);

  swift_bridgeObjectRelease();
  return v62;
}

void sub_100335A84(unsigned int a1)
{
  *(_DWORD *)(v1 + OBJC_IVAR____TtC4Maps25GEOAPUploadLatencyBarView_latency) = a1;
  unint64_t v2 = sub_100356398(a1);
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps25GEOAPUploadLatencyBarView_indicatorRects);
  swift_beginAccess();
  uint64_t v4 = 4;
  while (1)
  {
    unint64_t v7 = v4 - 4;
    if (v4 - 4 > v2)
    {
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_36;
      }
      uint64_t v8 = *v3;
      if ((*v3 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v7 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_37;
        }
        id v9 = *(id *)(v8 + 8 * v4);
      }
      Class isa = (Class)[self systemWhiteColor];
      goto LABEL_31;
    }
    if (v7 < 5 || v4 == 9) {
      break;
    }
    uint64_t v14 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((int64_t)v7 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_39;
      }
      id v5 = *(id *)(v14 + 8 * v4);
    }
    id v6 = [self systemLightGrayColor];
    [v5 setBackgroundColor:v6];

LABEL_4:
    ++v4;
    if (v7 == -1)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      JUMPOUT(0x100335DC8);
    }
  }
  uint64_t v11 = *v3;
  if ((*v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    uint64_t v13 = 0x323266663232;
    switch(v4)
    {
      case 5:
LABEL_21:
        uint64_t v13 = 0x323266663062;
        break;
      case 6:
LABEL_23:
        uint64_t v13 = 0x303130666666;
        break;
      case 7:
LABEL_25:
        uint64_t v13 = 0x303130626666;
        break;
      case 8:
LABEL_27:
        uint64_t v13 = 0x303030386666;
        break;
      case 9:
LABEL_29:
        uint64_t v13 = 0x303030346666;
        break;
      default:
        break;
    }
  }
  else
  {
    if (v7 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_38;
    }
    id v12 = *(void **)(v11 + 8 * v4);
    switch(v4)
    {
      case 5:
        id v9 = v12;
        goto LABEL_21;
      case 6:
        id v9 = v12;
        goto LABEL_23;
      case 7:
        id v9 = v12;
        goto LABEL_25;
      case 8:
        id v9 = v12;
        goto LABEL_27;
      case 9:
        id v9 = v12;
        goto LABEL_29;
      default:
        id v9 = v12;
        uint64_t v13 = 0x323266663232;
        break;
    }
  }
  sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
  v15._countAndFlagsBits = v13;
  v15._object = (void *)0xE600000000000000;
  Class isa = UIColor.init(hex:)(v15).super.isa;
LABEL_31:
  Class v16 = isa;
  [v9 setBackgroundColor:isa];

  if (v4 != 9) {
    goto LABEL_4;
  }
}

id sub_100335F10(uint64_t a1)
{
  return sub_100335F28(a1, type metadata accessor for GEOAPUploadLatencyBarView);
}

id sub_100335F28(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  [super dealloc];
}

uint64_t type metadata accessor for GEOAPUploadLatencyBarView()
{
  return self;
}

uint64_t sub_100335F94(uint64_t a1)
{
  sub_1000FF4D4(a1, (uint64_t)v6);
  sub_1000FF33C(&qword_1015D3980);
  type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration();
  if (swift_dynamicCast())
  {
    *(void *)(v1 + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView_currentConfig) = v5;
    swift_retain();
    swift_release();
    uint64_t v3 = swift_retain();
    sub_1003372F8(v3);
    swift_release();
    swift_release();
  }
  return sub_1000FF22C(a1);
}

void (*sub_100336050(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView_currentConfig;
  v3[16] = v1;
  v3[17] = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  uint64_t v6 = type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration();
  v3[18] = v6;
  v3[3] = v6;
  v3[4] = sub_1003350F8(&qword_1015DC170, v7, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration);
  *uint64_t v3 = v5;
  swift_retain();
  return sub_100336108;
}

void sub_100336108(uint64_t *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  uint64_t v4 = *a1 + 40;
  uint64_t v5 = *a1 + 80;
  sub_1000FF4D4(*a1, v4);
  if (a2)
  {
    sub_1000FF4D4(v4, v5);
    sub_1000FF33C(&qword_1015D3980);
    if (swift_dynamicCast())
    {
      *(void *)(v3[16] + v3[17]) = v3[15];
      swift_retain();
      swift_release();
      uint64_t v6 = swift_retain();
      sub_1003372F8(v6);
      swift_release();
      swift_release();
    }
    sub_1000FF22C(v4);
  }
  else
  {
    sub_1000FF33C(&qword_1015D3980);
    if (swift_dynamicCast())
    {
      *(void *)(v3[16] + v3[17]) = v3[10];
      swift_retain();
      swift_release();
      uint64_t v7 = swift_retain();
      sub_1003372F8(v7);
      swift_release();
      swift_release();
    }
  }
  sub_1000FF22C((uint64_t)v3);

  free(v3);
}

id sub_100336260(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___timeLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___eventCountLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___byteCountLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___containerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___latencyView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView_currentConfig] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GEOAPSessionSpecificUploadTableViewCellView();
  swift_retain();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10033666C();
  sub_1003372F8(a1);
  swift_release();

  return v3;
}

id sub_100336334()
{
  return sub_100336364(&OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___timeLabel, 0);
}

id sub_100336344()
{
  return sub_100336364(&OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___eventCountLabel, 1);
}

id sub_100336354()
{
  return sub_100336364(&OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___byteCountLabel, 2);
}

id sub_100336364(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v7 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v8 = self;
    id v9 = v7;
    id v10 = [v8 systemLightGrayColor];
    [v9 setBackgroundColor:v10];

    [v9 setTextAlignment:a2];
    uint64_t v11 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v9;
    id v5 = v9;

    uint64_t v4 = 0;
  }
  id v12 = v4;
  return v5;
}

id sub_100336468()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___containerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___containerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___containerView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100336500()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [self systemLightGrayColor];
    [v4 setBackgroundColor:v5];

    [v4 _setCornerRadius:8.0];
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1003365E8()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___latencyView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___latencyView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___latencyView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for GEOAPUploadLatencyBarView()) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10033666C()
{
  id v1 = sub_100336468();
  [v0 addSubview:v1];

  id v2 = sub_100336468();
  id v3 = sub_100336500();
  [v2 addSubview:v3];

  id v4 = sub_100336500();
  id v5 = sub_100336334();
  [v4 addSubview:v5];

  id v6 = sub_100336500();
  id v7 = sub_100336344();
  [v6 addSubview:v7];

  id v8 = sub_100336500();
  id v9 = sub_100336354();
  [v8 addSubview:v9];

  id v10 = sub_100336468();
  id v11 = sub_1003365E8();
  [v10 addSubview:v11];

  v134 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100F6DFC0;
  id v13 = sub_100336468();
  id v14 = [v13 leadingAnchor];

  id v15 = [v0 layoutMarginsGuide];
  id v16 = [v15 leadingAnchor];

  id v17 = [v14 constraintEqualToAnchor:v16];
  *(void *)(v12 + 32) = v17;
  id v18 = sub_100336468();
  id v19 = [v18 topAnchor];

  id v20 = [v0 layoutMarginsGuide];
  id v21 = [v20 topAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21];
  *(void *)(v12 + 40) = v22;
  id v23 = sub_100336468();
  id v24 = [v23 trailingAnchor];

  id v25 = [v0 layoutMarginsGuide];
  id v26 = [v25 trailingAnchor];

  id v27 = [v24 constraintEqualToAnchor:v26];
  *(void *)(v12 + 48) = v27;
  id v28 = sub_100336468();
  id v29 = [v28 bottomAnchor];

  id v30 = [v0 layoutMarginsGuide];
  id v31 = [v30 bottomAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31];
  *(void *)(v12 + 56) = v32;
  id v33 = sub_100336468();
  id v34 = [v33 heightAnchor];

  id v35 = [v34 constraintEqualToConstant:56.0];
  *(void *)(v12 + 64) = v35;
  id v36 = sub_100336500();
  id v37 = [v36 leadingAnchor];

  id v38 = sub_100336468();
  id v39 = [v38 leadingAnchor];

  id v40 = [v37 constraintEqualToAnchor:v39];
  *(void *)(v12 + 72) = v40;
  id v41 = sub_100336500();
  id v42 = [v41 trailingAnchor];

  id v43 = sub_100336468();
  id v44 = [v43 trailingAnchor];

  id v45 = [v42 constraintEqualToAnchor:v44];
  *(void *)(v12 + 80) = v45;
  id v46 = sub_100336500();
  id v47 = [v46 topAnchor];

  id v48 = sub_100336468();
  id v49 = [v48 topAnchor];

  id v50 = [v47 constraintEqualToAnchor:v49];
  *(void *)(v12 + 88) = v50;
  id v51 = sub_100336500();
  id v52 = [v51 heightAnchor];

  id v53 = [v52 constraintEqualToConstant:24.0];
  *(void *)(v12 + 96) = v53;
  id v54 = sub_100336334();
  id v55 = [v54 leadingAnchor];

  id v56 = sub_100336500();
  id v57 = [v56 leadingAnchor];

  id v58 = [v55 constraintEqualToAnchor:v57 constant:5.0];
  *(void *)(v12 + 104) = v58;
  id v59 = sub_100336334();
  id v60 = [v59 topAnchor];

  id v61 = sub_100336500();
  id v62 = [v61 topAnchor];

  id v63 = [v60 constraintEqualToAnchor:v62];
  *(void *)(v12 + 112) = v63;
  id v64 = sub_100336334();
  id v65 = [v64 widthAnchor];

  id v66 = sub_100336500();
  id v67 = [v66 widthAnchor];

  id v68 = [v65 constraintEqualToAnchor:v67 multiplier:0.2];
  *(void *)(v12 + 120) = v68;
  id v69 = sub_100336334();
  id v70 = [v69 bottomAnchor];

  id v71 = sub_100336500();
  id v72 = [v71 bottomAnchor];

  id v73 = [v70 constraintEqualToAnchor:v72];
  *(void *)(v12 + 128) = v73;
  id v74 = sub_100336344();
  id v75 = [v74 topAnchor];

  id v76 = sub_100336500();
  id v77 = [v76 topAnchor];

  id v78 = [v75 constraintEqualToAnchor:v77];
  *(void *)(v12 + 136) = v78;
  id v79 = sub_100336344();
  id v80 = [v79 leftAnchor];

  id v81 = sub_100336334();
  id v82 = [v81 rightAnchor];

  id v83 = [v80 constraintEqualToAnchor:v82];
  *(void *)(v12 + 144) = v83;
  id v84 = sub_100336344();
  id v85 = [v84 bottomAnchor];

  id v86 = sub_100336500();
  id v87 = [v86 bottomAnchor];

  id v88 = [v85 constraintEqualToAnchor:v87];
  *(void *)(v12 + 152) = v88;
  id v89 = sub_100336344();
  id v90 = [v89 widthAnchor];

  id v91 = sub_100336500();
  id v92 = [v91 widthAnchor];

  id v93 = [v90 constraintLessThanOrEqualToAnchor:v92 multiplier:0.25];
  *(void *)(v12 + 160) = v93;
  id v94 = sub_100336354();
  id v95 = [v94 topAnchor];

  id v96 = sub_100336500();
  id v97 = [v96 topAnchor];

  id v98 = [v95 constraintEqualToAnchor:v97];
  *(void *)(v12 + 168) = v98;
  id v99 = sub_100336354();
  id v100 = [v99 trailingAnchor];

  id v101 = sub_100336500();
  id v102 = [v101 trailingAnchor];

  id v103 = [v100 constraintEqualToAnchor:v102 constant:-5.0];
  *(void *)(v12 + 176) = v103;
  id v104 = sub_100336354();
  id v105 = [v104 bottomAnchor];

  id v106 = sub_100336500();
  id v107 = [v106 bottomAnchor];

  id v108 = [v105 constraintEqualToAnchor:v107];
  *(void *)(v12 + 184) = v108;
  id v109 = sub_100336354();
  id v110 = [v109 leftAnchor];

  id v111 = sub_100336344();
  id v112 = [v111 rightAnchor];

  id v113 = [v110 constraintEqualToAnchor:v112];
  *(void *)(v12 + 192) = v113;
  id v114 = sub_1003365E8();
  id v115 = [v114 leftAnchor];

  id v116 = sub_100336468();
  id v117 = [v116 leftAnchor];

  id v118 = [v115 constraintEqualToAnchor:v117];
  *(void *)(v12 + 200) = v118;
  id v119 = sub_1003365E8();
  id v120 = [v119 topAnchor];

  id v121 = sub_100336500();
  id v122 = [v121 bottomAnchor];

  id v123 = [v120 constraintEqualToAnchor:v122];
  *(void *)(v12 + 208) = v123;
  id v124 = sub_1003365E8();
  id v125 = [v124 rightAnchor];

  id v126 = sub_100336468();
  id v127 = [v126 rightAnchor];

  id v128 = [v125 constraintEqualToAnchor:v127];
  *(void *)(v12 + 216) = v128;
  id v129 = sub_1003365E8();
  id v130 = [v129 bottomAnchor];

  id v131 = sub_100336468();
  id v132 = [v131 bottomAnchor];

  id v133 = [v130 constraintEqualToAnchor:v132];
  *(void *)(v12 + 224) = v133;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v134 activateConstraints:isa];
}

uint64_t sub_1003372F8(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v2 - 8);
  id v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D9A20);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DateComponents();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  id v15 = objc_allocWithZone((Class)NSDateFormatter);
  swift_retain();
  id v16 = [v15 init];
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setDateFormat:v17];

  id v18 = sub_100336334();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v10);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  id v36 = v16;
  NSString v20 = [v16 stringFromDate:isa];

  if (!v20)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v18 setText:v20];

  id v21 = sub_100336344();
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100F5CF70;
  uint64_t v23 = *(void *)(v14 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_eventCount);
  *(void *)(v22 + 56) = &type metadata for UInt;
  *(void *)(v22 + 64) = &protocol witness table for UInt;
  *(void *)(v22 + 32) = v23;
  String.init(format:_:)();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setText:v24];

  id v25 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v25 setUnitsStyle:5];
  [v25 setIncludesTimeRemainingPhrase:0];
  [v25 setAllowedUnits:240];
  uint64_t v26 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 1, 1, v26);
  uint64_t v27 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v39, 1, 1, v27);
  uint64_t result = DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v29 = OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration;
  double v30 = *(double *)(v14 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration);
  if ((~*(void *)&v30 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  DateComponents.second.setter();
  id v31 = sub_100336354();
  Class v32 = DateComponents._bridgeToObjectiveC()().super.isa;
  id v33 = [v25 stringFromDateComponents:v32];

  [v31 setText:v33];
  uint64_t result = (uint64_t)sub_1003365E8();
  double v34 = *(double *)(v14 + v29);
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v34 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v34 < 4294967300.0)
  {
    id v35 = (void *)result;
    sub_100335A84(v34);
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v9, v38);
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_100337948(uint64_t a1)
{
  return sub_100335F28(a1, type metadata accessor for GEOAPSessionSpecificUploadTableViewCellView);
}

uint64_t type metadata accessor for GEOAPSessionSpecificUploadTableViewCellView()
{
  return self;
}

uint64_t sub_100337A20@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView_currentConfig);
  a1[3] = type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration();
  a1[4] = sub_1003350F8(&qword_1015DC170, v4, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration);
  *a1 = v3;

  return swift_retain();
}

void (*sub_100337AA8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100336050(v2);
  return sub_1001C0148;
}

uint64_t sub_100337B04()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GEOAPSessionSpecificUploadTableViewCellConfiguration()
{
  return self;
}

id sub_100337B60()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for GEOAPSessionSpecificUploadTableViewCellView());
  uint64_t v1 = swift_retain();
  id v2 = sub_100336260(v1);
  sub_1003350F8(&qword_1015DC178, v3, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificUploadTableViewCellView);
  return v2;
}

id sub_100337E54(uint64_t a1)
{
  return sub_100335F28(a1, type metadata accessor for GEOAPSessionSpecificUploadTableViewCell);
}

uint64_t type metadata accessor for GEOAPSessionSpecificUploadTableViewCell()
{
  return self;
}

id sub_100337EC8(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC4Maps45GEOAPSessionSpecificHistoricalDebugController_dataModel;
  type metadata accessor for GEOAPSessionSpecificDataModel(0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 44) = 1;
  type metadata accessor for Date();
  type metadata accessor for GEOAPSessionSpecificModelItem(0);
  sub_1003350F8(&qword_1015D4890, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1003350F8((unint64_t *)&unk_1015DBE70, 255, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificModelItem);
  uint64_t v5 = v1;
  NSDiffableDataSourceSnapshot.init()();
  *(void *)(v4 + 16) = _swiftEmptyDictionarySingleton;
  *(void *)&v1[v3] = v4;
  id v6 = &v5[OBJC_IVAR____TtC4Maps45GEOAPSessionSpecificHistoricalDebugController_modelSectionType];
  *(void *)id v6 = 0x4649434550534E55;
  *((void *)v6 + 1) = 0xEB00000000444549;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for GEOAPSessionSpecificHistoricalDebugController();
  return [super initWithStyle:a1];
}

id sub_100338080()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for GEOAPSessionSpecificHistoricalDebugController();
  v20.receiver = v0;
  v20.super_class = v5;
  [super viewDidLoad];
  id result = [v0 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v7 = result;
  type metadata accessor for GEOAPSessionSpecificUploadTableViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v9 = String._bridgeToObjectiveC()();
  [v7 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v9];

  uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC4Maps45GEOAPSessionSpecificHistoricalDebugController_dataModel];
  id result = [v1 tableView];
  if (!result)
  {
LABEL_44:
    __break(1u);
    return result;
  }
  uint64_t v11 = result;
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  if ([v12 isEqualToString:@"UNSPECIFIED"])
  {
    int v13 = 0;
  }
  else if ([v12 isEqualToString:@"COHORT"])
  {
    int v13 = 1;
  }
  else if ([v12 isEqualToString:@"15MO"])
  {
    int v13 = 2;
  }
  else if ([v12 isEqualToString:@"LONG"])
  {
    int v13 = 3;
  }
  else if ([v12 isEqualToString:@"LONG_APPID"])
  {
    int v13 = 4;
  }
  else if ([v12 isEqualToString:@"SHORT"])
  {
    int v13 = 5;
  }
  else if ([v12 isEqualToString:@"SHORT_NAV"])
  {
    int v13 = 6;
  }
  else if ([v12 isEqualToString:@"NO"])
  {
    int v13 = 7;
  }
  else if ([v12 isEqualToString:@"NO_WITH_TIME"])
  {
    int v13 = 8;
  }
  else if ([v12 isEqualToString:@"NAV_TRACE"])
  {
    int v13 = 9;
  }
  else if ([v12 isEqualToString:@"REALTIME_TRAFFIC"])
  {
    int v13 = 10;
  }
  else if ([v12 isEqualToString:@"BATCH_TRAFFIC"])
  {
    int v13 = 11;
  }
  else if ([v12 isEqualToString:@"WIFI_PROBE"])
  {
    int v13 = 12;
  }
  else if ([v12 isEqualToString:@"PRESSURE_DATA"])
  {
    int v13 = 13;
  }
  else if ([v12 isEqualToString:@"CURATED_COLLECTION"])
  {
    int v13 = 14;
  }
  else if ([v12 isEqualToString:@"LOG_DISCARD"])
  {
    int v13 = 15;
  }
  else if ([v12 isEqualToString:@"POI_BUSYNESS"])
  {
    int v13 = 16;
  }
  else if ([v12 isEqualToString:@"PREDEX_TRAINING"])
  {
    int v13 = 17;
  }
  else if ([v12 isEqualToString:@"STRN_HARVEST"])
  {
    int v13 = 19;
  }
  else
  {
    int v13 = 0;
  }

  *(_DWORD *)(v10 + 40) = v13;
  *(unsigned char *)(v10 + 44) = 0;
  objc_allocWithZone((Class)type metadata accessor for GEOAPSessionSpecificDataSource(0));
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10033AD98;
  *(void *)(v14 + 24) = v10;
  id v15 = v11;
  swift_retain();
  uint64_t v16 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  NSString v17 = *(void **)(v10 + 32);
  *(void *)(v10 + 32) = v16;

  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  id v19 = (void *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = v10;
  swift_retain();
  sub_100042AF4((uint64_t)v4, (uint64_t)&unk_1015DC188, (uint64_t)v19);

  swift_bridgeObjectRelease();
  return (id)swift_release();
}

id sub_1003386DC(uint64_t a1)
{
  return sub_100335F28(a1, type metadata accessor for GEOAPSessionSpecificHistoricalDebugController);
}

uint64_t type metadata accessor for GEOAPSessionSpecificHistoricalDebugController()
{
  return self;
}

uint64_t sub_100338768()
{
  return sub_1003350F8(&qword_1015DC168, 255, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificModelItem);
}

Swift::Int sub_1003387B4(uint64_t *a1)
{
  uint64_t v143 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v141 = (char *)&v124 - v6;
  Swift::Int v7 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v7);
  v135 = (char *)v7;
  if (result >= v7)
  {
    if (v7 < 0) {
      goto LABEL_140;
    }
    if ((unint64_t)v7 >= 2)
    {
      uint64_t v134 = v1;
      v138 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      uint64_t v139 = v3 + 16;
      v137 = (void (**)(char *, uint64_t))(v3 + 8);
      int v13 = (void *)*a1;
      uint64_t v14 = -1;
      uint64_t v15 = 1;
      v140 = v13;
      uint64_t v16 = v141;
      uint64_t v17 = v143;
      do
      {
        id v132 = (char *)v13;
        id v133 = (char *)v15;
        uint64_t v18 = v140[v15];
        v136 = (void (*)(char *, uint64_t, uint64_t))v14;
        do
        {
          uint64_t v19 = *v13;
          objc_super v20 = v138;
          v138(v16, v18 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v17);
          id v21 = v142;
          v20(v142, v19 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v17);
          swift_retain();
          swift_retain();
          uint64_t v144 = Date.compare(_:)();
          uint64_t v22 = *v137;
          (*v137)(v21, v17);
          v22(v16, v17);
          swift_release();
          Swift::Int result = swift_release();
          if (v144 != -1) {
            break;
          }
          if (!v140) {
            goto LABEL_143;
          }
          uint64_t v23 = *v13;
          uint64_t v18 = v13[1];
          void *v13 = v18;
          v13[1] = v23;
          --v13;
        }
        while (!__CFADD__(v14++, 1));
        uint64_t v15 = (uint64_t)(v133 + 1);
        int v13 = v132 + 8;
        uint64_t v14 = (uint64_t)v136 - 1;
      }
      while (v133 + 1 != v135);
    }
    return result;
  }
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_149;
  }
  Swift::Int v10 = result;
  uint64_t v134 = v1;
  id v125 = a1;
  if (v7 < 2)
  {
    id v25 = (char *)_swiftEmptyArrayStorage;
    uint64_t v145 = (uint64_t)_swiftEmptyArrayStorage;
    id v133 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v7 != 1)
    {
      unint64_t v28 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v28 >= 2)
      {
        uint64_t v116 = *v125;
        do
        {
          unint64_t v117 = v28 - 2;
          if (v28 < 2) {
            goto LABEL_135;
          }
          if (!v116) {
            goto LABEL_148;
          }
          id v118 = v25;
          uint64_t v119 = *(void *)&v25[16 * v117 + 32];
          uint64_t v120 = *(void *)&v25[16 * v28 + 24];
          uint64_t v121 = v134;
          sub_10033A02C((char *)(v116 + 8 * v119), (char *)(v116 + 8 * *(void *)&v25[16 * v28 + 16]), (char *)(v116 + 8 * v120), v133);
          uint64_t v134 = v121;
          if (v121) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v118 = sub_10035503C((uint64_t)v25);
          }
          if (v117 >= *((void *)v118 + 2)) {
            goto LABEL_137;
          }
          id v122 = &v118[16 * v117 + 32];
          *(void *)id v122 = v119;
          *((void *)v122 + 1) = v120;
          unint64_t v123 = *((void *)v118 + 2);
          if (v28 > v123) {
            goto LABEL_138;
          }
          memmove(&v118[16 * v28 + 16], &v118[16 * v28 + 32], 16 * (v123 - v28));
          *((void *)v118 + 2) = v123 - 1;
          unint64_t v28 = v123 - 1;
          id v25 = v118;
        }
        while (v123 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = v9 >> 1;
    type metadata accessor for GEOAPSessionSpecificModelItem(0);
    uint64_t v12 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
    Swift::Int v7 = (Swift::Int)v135;
    id v133 = (char *)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v145 = v12;
  }
  Swift::Int v129 = v10;
  uint64_t v26 = 0;
  uint64_t v27 = (void *)*a1;
  v137 = (void (**)(char *, uint64_t))(v3 + 8);
  v138 = (void (*)(char *, uint64_t, uint64_t))(v3 + 16);
  id v126 = v27 - 1;
  id v127 = v27 + 2;
  id v25 = (char *)_swiftEmptyArrayStorage;
  v140 = v27;
  while (1)
  {
    uint64_t v29 = v26;
    Swift::Int v30 = v26 + 1;
    uint64_t v131 = v26;
    if (v26 + 1 >= v7)
    {
      Swift::Int v46 = v129;
    }
    else
    {
      id v128 = v25;
      uint64_t v31 = v27[v26];
      uint64_t v32 = v27[v30] + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime;
      id v33 = *(void (**)(char *, uint64_t, uint64_t))v138;
      double v34 = v141;
      uint64_t v35 = v143;
      (*(void (**)(char *, uint64_t, uint64_t))v138)(v141, v32, v143);
      id v36 = v142;
      v136 = v33;
      v33(v142, v31 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v35);
      uint64_t v29 = v131;
      swift_retain();
      swift_retain();
      uint64_t v139 = Date.compare(_:)();
      uint64_t v37 = (char *)*v137;
      (*v137)(v36, v35);
      id v132 = v37;
      ((void (*)(char *, uint64_t))v37)(v34, v35);
      swift_release();
      swift_release();
      Swift::Int v30 = v29 + 2;
      if (v29 + 2 >= v7)
      {
        Swift::Int v46 = v129;
      }
      else
      {
        uint64_t v38 = &v127[v29];
        while (1)
        {
          LODWORD(v144) = v139 == -1;
          uint64_t v39 = *(v38 - 1);
          id v40 = v141;
          uint64_t v41 = v143;
          id v42 = v136;
          v136(v141, *v38 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v143);
          id v43 = v142;
          v42(v142, v39 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v41);
          swift_retain();
          swift_retain();
          uint64_t v44 = Date.compare(_:)();
          id v45 = (void (*)(char *, uint64_t))v132;
          ((void (*)(char *, uint64_t))v132)(v43, v41);
          v45(v40, v41);
          swift_release();
          swift_release();
          if (v144 == (v44 != -1)) {
            break;
          }
          ++v30;
          ++v38;
          Swift::Int v7 = (Swift::Int)v135;
          if (v135 == (char *)v30)
          {
            Swift::Int v30 = (Swift::Int)v135;
            goto LABEL_31;
          }
        }
        Swift::Int v7 = (Swift::Int)v135;
LABEL_31:
        Swift::Int v46 = v129;
        uint64_t v29 = v131;
      }
      uint64_t v27 = v140;
      id v25 = v128;
      if (v139 == -1)
      {
        if (v30 < v29) {
          goto LABEL_144;
        }
        if (v29 < v30)
        {
          id v47 = &v126[v30];
          Swift::Int v48 = v30;
          Swift::Int v49 = v29;
          id v50 = &v140[v29];
          do
          {
            if (v49 != --v48)
            {
              if (!v27) {
                goto LABEL_147;
              }
              uint64_t v51 = *v50;
              *id v50 = *v47;
              *id v47 = v51;
            }
            ++v49;
            --v47;
            ++v50;
          }
          while (v49 < v48);
        }
      }
    }
    if (v30 < v7)
    {
      if (__OFSUB__(v30, v29)) {
        goto LABEL_139;
      }
      if (v30 - v29 < v46) {
        break;
      }
    }
LABEL_58:
    if (v30 < v29) {
      goto LABEL_134;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v25 = sub_10035496C(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v66 = *((void *)v25 + 2);
    unint64_t v65 = *((void *)v25 + 3);
    unint64_t v28 = v66 + 1;
    uint64_t v27 = v140;
    if (v66 >= v65 >> 1)
    {
      id v115 = sub_10035496C((char *)(v65 > 1), v66 + 1, 1, v25);
      uint64_t v27 = v140;
      id v25 = v115;
    }
    *((void *)v25 + 2) = v28;
    id v67 = v25 + 32;
    id v68 = &v25[16 * v66 + 32];
    *(void *)id v68 = v29;
    *((void *)v68 + 1) = v30;
    uint64_t v139 = v30;
    if (v66)
    {
      while (1)
      {
        unint64_t v69 = v28 - 1;
        if (v28 >= 4)
        {
          id v74 = &v67[16 * v28];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_123;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_124;
          }
          unint64_t v81 = v28 - 2;
          id v82 = &v67[16 * v28 - 32];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_126;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_129;
          }
          if (v86 >= v77)
          {
            id v104 = &v67[16 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_133;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_95;
          }
        }
        else
        {
          if (v28 != 3)
          {
            uint64_t v98 = *((void *)v25 + 4);
            uint64_t v99 = *((void *)v25 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_89;
          }
          uint64_t v71 = *((void *)v25 + 4);
          uint64_t v70 = *((void *)v25 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_125;
        }
        unint64_t v81 = v28 - 2;
        id v87 = &v67[16 * v28 - 32];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_128;
        }
        id v93 = &v67[16 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_131;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_132;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_95:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v92) {
          goto LABEL_127;
        }
        id v100 = &v67[16 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_130;
        }
        if (v103 < v91) {
          goto LABEL_21;
        }
LABEL_97:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v28)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v27) {
          goto LABEL_146;
        }
        id v109 = &v67[16 * v108];
        uint64_t v110 = *(void *)v109;
        id v111 = &v67[16 * v69];
        uint64_t v112 = *((void *)v111 + 1);
        uint64_t v113 = v134;
        sub_10033A02C((char *)&v27[*(void *)v109], (char *)&v27[*(void *)v111], (char *)&v27[v112], v133);
        uint64_t v134 = v113;
        if (v113) {
          goto LABEL_117;
        }
        if (v112 < v110) {
          goto LABEL_120;
        }
        if (v69 > *((void *)v25 + 2)) {
          goto LABEL_121;
        }
        *(void *)id v109 = v110;
        *(void *)&v67[16 * v108 + 8] = v112;
        unint64_t v114 = *((void *)v25 + 2);
        if (v69 >= v114) {
          goto LABEL_122;
        }
        unint64_t v28 = v114 - 1;
        memmove(&v67[16 * v69], v111 + 16, 16 * (v114 - 1 - v69));
        *((void *)v25 + 2) = v114 - 1;
        Swift::Int v7 = (Swift::Int)v135;
        uint64_t v27 = v140;
        if (v114 <= 2) {
          goto LABEL_21;
        }
      }
    }
    unint64_t v28 = 1;
LABEL_21:
    uint64_t v26 = v139;
    if (v139 >= v7) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v29, v46)) {
    goto LABEL_141;
  }
  if (v29 + v46 >= v7) {
    Swift::Int v52 = v7;
  }
  else {
    Swift::Int v52 = v29 + v46;
  }
  if (v52 >= v29)
  {
    if (v30 != v52)
    {
      id v128 = v25;
      v136 = *(void (**)(char *, uint64_t, uint64_t))v138;
      id v53 = (char *)&v126[v30];
      Swift::Int v130 = v52;
      do
      {
        uint64_t v55 = v27[v30];
        uint64_t v56 = v29;
        id v132 = v53;
        id v57 = (uint64_t *)v53;
        uint64_t v139 = v30;
        while (1)
        {
          uint64_t v58 = *v57;
          id v59 = v141;
          uint64_t v60 = v143;
          id v61 = v136;
          v136(v141, v55 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v143);
          id v62 = v142;
          v61(v142, v58 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v60);
          swift_retain();
          swift_retain();
          uint64_t v144 = Date.compare(_:)();
          id v63 = *v137;
          (*v137)(v62, v60);
          v63(v59, v60);
          swift_release();
          swift_release();
          if (v144 != -1) {
            break;
          }
          uint64_t v54 = v139;
          uint64_t v27 = v140;
          if (!v140) {
            goto LABEL_145;
          }
          uint64_t v64 = *v57;
          uint64_t v55 = v57[1];
          *id v57 = v55;
          v57[1] = v64;
          --v57;
          if (v54 == ++v56) {
            goto LABEL_51;
          }
        }
        uint64_t v54 = v139;
        uint64_t v27 = v140;
LABEL_51:
        Swift::Int v30 = v54 + 1;
        uint64_t v29 = v131;
        id v53 = v132 + 8;
      }
      while (v30 != v130);
      Swift::Int v30 = v130;
      Swift::Int v7 = (Swift::Int)v135;
      id v25 = v128;
    }
    goto LABEL_58;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10033925C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v149 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v134 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v150 = (char *)&v130 - v7;
  __chkstk_darwin(v8);
  v146 = (char *)&v130 - v9;
  __chkstk_darwin(v10);
  uint64_t v145 = (char *)&v130 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_100339D4C(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v138 = v4;
  Swift::Int v131 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v137 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      objc_super v20 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      Swift::Int v130 = v18;
      if (v21 >= 2)
      {
        uint64_t v124 = *a1;
        do
        {
          unint64_t v125 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v124) {
            goto LABEL_147;
          }
          uint64_t v126 = *(void *)&v20[16 * v125 + 32];
          uint64_t v127 = *(void *)&v20[16 * v21 + 24];
          sub_10033A54C(v124 + *(void *)(v138 + 72) * v126, v124 + *(void *)(v138 + 72) * *(void *)&v20[16 * v21 + 16], v124 + *(void *)(v138 + 72) * v127, v137);
          if (v2) {
            break;
          }
          if (v127 < v126) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            objc_super v20 = sub_10035503C((uint64_t)v20);
          }
          if (v125 >= *((void *)v20 + 2)) {
            goto LABEL_137;
          }
          id v128 = &v20[16 * v125 + 32];
          *(void *)id v128 = v126;
          *((void *)v128 + 1) = v127;
          unint64_t v129 = *((void *)v20 + 2);
          if (v21 > v129) {
            goto LABEL_138;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v129 - v21));
          *((void *)v20 + 2) = v129 - 1;
          unint64_t v21 = v129 - 1;
        }
        while (v129 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v130[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    Swift::Int v130 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    Swift::Int v130 = (void *)v16;
    unint64_t v137 = v16 + v17;
  }
  uint64_t v19 = 0;
  uint64_t v143 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v144 = v4 + 16;
  v153 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  objc_super v20 = (char *)_swiftEmptyArrayStorage;
  v148 = a1;
  while (1)
  {
    uint64_t v22 = v19 + 1;
    Swift::Int v136 = (Swift::Int)v19;
    if ((uint64_t)(v19 + 1) >= v12)
    {
      Swift::Int v30 = (Swift::Int)v19;
      Swift::Int v34 = (Swift::Int)(v19 + 1);
      a1 = v148;
    }
    else
    {
      uint64_t v23 = *v148;
      uint64_t v140 = v23;
      Swift::Int v24 = *(void *)(v4 + 72);
      Swift::Int v151 = v12;
      Swift::Int v152 = v24;
      id v25 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v26 = v145;
      uint64_t v27 = v149;
      v25(v145, v23 + v24 * (void)v22, v149);
      uint64_t v28 = v23 + v24 * v136;
      uint64_t v29 = v146;
      v25(v146, v28, v27);
      Swift::Int v30 = v136;
      v147 = (char *)Date.compare(_:)();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v138 + 8);
      v31(v29, v27);
      uint64_t v32 = v27;
      Swift::Int v12 = v151;
      v31(v26, v32);
      Swift::Int v33 = v152;
      Swift::Int v34 = v30 + 2;
      if (v30 + 2 < v12)
      {
        id v132 = v20;
        uint64_t v133 = v2;
        uint64_t v35 = v140;
        Swift::Int v141 = v152 * v34;
        uint64_t v142 = v152 * (void)v22;
        while (1)
        {
          Swift::Int v36 = v34;
          int v37 = v147 == (char *)-1;
          uint64_t v38 = v145;
          uint64_t v39 = v149;
          v25(v145, v35 + v141, v149);
          id v40 = v146;
          v25(v146, v35 + v142, v39);
          int v41 = Date.compare(_:)() != -1;
          v31(v40, v39);
          v31(v38, v39);
          if (v37 == v41) {
            break;
          }
          Swift::Int v34 = v36 + 1;
          Swift::Int v33 = v152;
          v35 += v152;
          if (v151 == v36 + 1)
          {
            Swift::Int v12 = v151;
            Swift::Int v34 = v151;
            objc_super v20 = v132;
            uint64_t v2 = v133;
            Swift::Int v30 = v136;
            goto LABEL_24;
          }
        }
        Swift::Int v34 = v36;
        objc_super v20 = v132;
        uint64_t v2 = v133;
        Swift::Int v30 = v136;
        Swift::Int v12 = v151;
        Swift::Int v33 = v152;
      }
LABEL_24:
      a1 = v148;
      uint64_t v4 = v138;
      if (v147 == (char *)-1)
      {
        if (v34 < v30) {
          goto LABEL_143;
        }
        if (v30 < v34)
        {
          id v132 = v20;
          uint64_t v133 = v2;
          uint64_t v42 = 0;
          uint64_t v43 = v33 * (v34 - 1);
          Swift::Int v44 = v34 * v33;
          Swift::Int v45 = v30;
          uint64_t v46 = v30 * v33;
          do
          {
            if (v45 != v34 + v42 - 1)
            {
              uint64_t v48 = v140;
              if (!v140) {
                goto LABEL_146;
              }
              unint64_t v49 = v140 + v46;
              uint64_t v50 = v140 + v43;
              v147 = (char *)*v153;
              ((void (*)(char *, uint64_t, uint64_t))v147)(v134, v140 + v46, v149);
              if (v46 < v43 || v49 >= v48 + v44)
              {
                uint64_t v47 = v149;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v47 = v149;
                if (v46 != v43) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v147)(v50, v134, v47);
              a1 = v148;
              Swift::Int v30 = v136;
              Swift::Int v33 = v152;
            }
            ++v45;
            --v42;
            v43 -= v33;
            v44 -= v33;
            v46 += v33;
          }
          while (v45 < v34 + v42);
          objc_super v20 = v132;
          uint64_t v2 = v133;
          uint64_t v4 = v138;
          Swift::Int v12 = v151;
        }
      }
    }
    if (v34 >= v12) {
      goto LABEL_56;
    }
    if (__OFSUB__(v34, v30)) {
      goto LABEL_139;
    }
    if (v34 - v30 >= v131) {
      goto LABEL_56;
    }
    if (__OFADD__(v30, v131)) {
      goto LABEL_141;
    }
    Swift::Int v51 = v30 + v131 >= v12 ? v12 : v30 + v131;
    if (v51 < v30) {
      break;
    }
    if (v34 != v51)
    {
      id v132 = v20;
      uint64_t v133 = v2;
      uint64_t v52 = *(void *)(v4 + 72);
      uint64_t v139 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v140 = v52;
      uint64_t v53 = v52 * (v34 - 1);
      Swift::Int v54 = v34 * v52;
      uint64_t v55 = v149;
      Swift::Int v135 = v51;
      do
      {
        uint64_t v57 = 0;
        v147 = (char *)v34;
        Swift::Int v141 = v54;
        uint64_t v142 = v53;
        while (1)
        {
          uint64_t v58 = *a1;
          Swift::Int v151 = v54 + v57;
          Swift::Int v152 = v30;
          Swift::Int v59 = v54 + v57 + v58;
          uint64_t v60 = v145;
          id v61 = v139;
          v139(v145, v59, v55);
          uint64_t v62 = v53 + v57 + v58;
          id v63 = a1;
          uint64_t v64 = v146;
          v61(v146, v62, v55);
          uint64_t v65 = Date.compare(_:)();
          unint64_t v66 = *v143;
          (*v143)(v64, v55);
          v66(v60, v55);
          if (v65 != -1) {
            break;
          }
          uint64_t v67 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v54 = v141;
          uint64_t v53 = v142;
          id v68 = (char *)(v67 + v142 + v57);
          unint64_t v69 = *v153;
          uint64_t v55 = v149;
          (*v153)(v150, v67 + v141 + v57, v149);
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (uint64_t)v150, v55);
          v57 -= v140;
          Swift::Int v30 = v152 + 1;
          uint64_t v56 = v147;
          a1 = v148;
          if (v147 == (char *)(v152 + 1)) {
            goto LABEL_49;
          }
        }
        uint64_t v55 = v149;
        uint64_t v56 = v147;
        a1 = v63;
        Swift::Int v54 = v141;
        uint64_t v53 = v142;
LABEL_49:
        Swift::Int v34 = (Swift::Int)(v56 + 1);
        v53 += v140;
        v54 += v140;
        Swift::Int v30 = v136;
      }
      while (v34 != v135);
      Swift::Int v34 = v135;
      objc_super v20 = v132;
      uint64_t v2 = v133;
    }
LABEL_56:
    if (v34 < v30) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v147 = (char *)v34;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      objc_super v20 = sub_10035496C(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v72 = *((void *)v20 + 2);
    unint64_t v71 = *((void *)v20 + 3);
    unint64_t v21 = v72 + 1;
    if (v72 >= v71 >> 1) {
      objc_super v20 = sub_10035496C((char *)(v71 > 1), v72 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    char v73 = v20 + 32;
    id v74 = &v20[16 * v72 + 32];
    uint64_t v75 = v147;
    *(void *)id v74 = v30;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v21 - 1;
        if (v21 >= 4)
        {
          unint64_t v81 = &v73[16 * v21];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_123;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_124;
          }
          unint64_t v88 = v21 - 2;
          uint64_t v89 = &v73[16 * v21 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_126;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_129;
          }
          if (v93 >= v84)
          {
            id v111 = &v73[16 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_133;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_93;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v105 = *((void *)v20 + 4);
            uint64_t v106 = *((void *)v20 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_87;
          }
          uint64_t v78 = *((void *)v20 + 4);
          uint64_t v77 = *((void *)v20 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_125;
        }
        unint64_t v88 = v21 - 2;
        uint64_t v94 = &v73[16 * v21 - 32];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_128;
        }
        id v100 = &v73[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_131;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_132;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_93:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v99) {
          goto LABEL_127;
        }
        uint64_t v107 = &v73[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_130;
        }
        if (v110 < v98) {
          goto LABEL_15;
        }
LABEL_95:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        unint64_t v117 = v20;
        id v118 = &v73[16 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = &v73[16 * v76];
        uint64_t v121 = *((void *)v120 + 1);
        sub_10033A54C(v116 + *(void *)(v138 + 72) * *(void *)v118, v116 + *(void *)(v138 + 72) * *(void *)v120, v116 + *(void *)(v138 + 72) * v121, v137);
        if (v2) {
          goto LABEL_116;
        }
        if (v121 < v119) {
          goto LABEL_120;
        }
        if (v76 > *((void *)v117 + 2)) {
          goto LABEL_121;
        }
        id v122 = v117;
        *(void *)id v118 = v119;
        *(void *)&v73[16 * v115 + 8] = v121;
        unint64_t v123 = *((void *)v117 + 2);
        if (v76 >= v123) {
          goto LABEL_122;
        }
        objc_super v20 = v122;
        unint64_t v21 = v123 - 1;
        memmove(&v73[16 * v76], v120 + 16, 16 * (v123 - 1 - v76));
        *((void *)v20 + 2) = v123 - 1;
        a1 = v148;
        if (v123 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v12 = a1[1];
    uint64_t v19 = v147;
    uint64_t v4 = v138;
    if ((uint64_t)v147 >= v12)
    {
      uint64_t v18 = v130;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100339D4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = type metadata accessor for Date();
  __chkstk_darwin(v7);
  Swift::Int v44 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v31 - v10;
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v38 = (char *)&v31 - v14;
  uint64_t v42 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v34 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v35 = (void (*)(char *, uint64_t, uint64_t))v16;
    Swift::Int v36 = a4;
    uint64_t v37 = v15;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v17 * (v42 - 1);
    uint64_t v40 = v17;
    uint64_t v18 = v17 * v42;
LABEL_5:
    uint64_t v19 = 0;
    uint64_t v45 = v33;
    uint64_t v41 = v18;
    while (1)
    {
      uint64_t v20 = *a4;
      uint64_t v21 = v18 + v19 + *a4;
      uint64_t v22 = v38;
      uint64_t v23 = v35;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v35)(v38, v21, v7, v13);
      Swift::Int v24 = v39;
      v23(v39, v46 + v19 + v20, v7);
      uint64_t v25 = Date.compare(_:)();
      uint64_t v26 = *v34;
      uint64_t v27 = v24;
      a4 = v36;
      (*v34)(v27, v7);
      v26(v22, v7);
      uint64_t v18 = v41;
      if (v25 != -1)
      {
LABEL_4:
        v46 += v40;
        v18 += v40;
        if (++v42 == v32) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v29 = (char *)(v28 + v46 + v19);
      Swift::Int v30 = *v43;
      (*v43)(v44, v28 + v41 + v19, v7);
      swift_arrayInitWithTakeFrontToBack();
      v30(v29, (uint64_t)v44, v7);
      v19 -= v40;
      if (v42 == ++v45) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10033A02C(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v56 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::Int v54 = (char *)&v44 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v13 = a2 - a1;
  }
  uint64_t v14 = v13 >> 3;
  Swift::Int v51 = a3;
  uint64_t v15 = a3 - a2;
  uint64_t v16 = a3 - a2 + 7;
  if (a3 - a2 >= 0) {
    uint64_t v16 = a3 - a2;
  }
  uint64_t v17 = v16 >> 3;
  uint64_t v60 = a1;
  Swift::Int v59 = a4;
  if (v14 >= v16 >> 3)
  {
    if (v15 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[8 * v17] <= a4) {
      memmove(a4, a2, 8 * v17);
    }
    uint64_t v28 = &a4[8 * v17];
    uint64_t v58 = v28;
    uint64_t v60 = a2;
    if (v15 < 8 || a1 >= a2) {
      goto LABEL_45;
    }
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v53 = v8 + 16;
    uint64_t v45 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v46 = v29;
    Swift::Int v30 = v51 - 8;
    uint64_t v31 = a2;
    uint64_t v47 = a4;
    uint64_t v57 = a1;
    uint64_t v32 = v56;
    while (1)
    {
      unint64_t v52 = (unint64_t)a2;
      uint64_t v50 = v28;
      Swift::Int v51 = v30 + 8;
      Swift::Int v34 = v28 - 8;
      uint64_t v33 = *((void *)v28 - 1);
      uint64_t v35 = *((void *)v31 - 1);
      uint64_t v48 = v31 - 8;
      Swift::Int v36 = v54;
      uint64_t v37 = v46;
      v46(v54, v33 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v32);
      uint64_t v38 = v55;
      v37(v55, v35 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v32);
      swift_retain();
      swift_retain();
      unint64_t v49 = (void (*)(char *, uint64_t, uint64_t))Date.compare(_:)();
      uint64_t v39 = *v45;
      (*v45)(v38, v32);
      v39(v36, v32);
      swift_release();
      swift_release();
      if (v49 == (void (*)(char *, uint64_t, uint64_t))-1) {
        break;
      }
      uint64_t v58 = v34;
      unint64_t v40 = v52;
      if (v51 < v50 || v30 >= v50)
      {
        *(void *)Swift::Int v30 = *(void *)v34;
        uint64_t v31 = (char *)v40;
        uint64_t v28 = v34;
        goto LABEL_43;
      }
      unint64_t v41 = (unint64_t)v47;
      uint64_t v42 = v57;
      if (v51 != v50) {
        *(void *)Swift::Int v30 = *(void *)v34;
      }
      uint64_t v31 = (char *)v40;
      uint64_t v28 = v34;
      if ((unint64_t)v34 <= v41) {
        goto LABEL_45;
      }
LABEL_44:
      v30 -= 8;
      a2 = v31;
      if (v31 <= v42) {
        goto LABEL_45;
      }
    }
    uint64_t v28 = v50;
    uint64_t v31 = v48;
    if (v51 != (char *)v52 || (unint64_t)v30 >= v52) {
      *(void *)Swift::Int v30 = *(void *)v48;
    }
    uint64_t v60 = v31;
LABEL_43:
    uint64_t v42 = v57;
    if (v28 <= v47) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[8 * v14] <= a4) {
      memmove(a4, a1, 8 * v14);
    }
    uint64_t v50 = &a4[8 * v14];
    uint64_t v58 = v50;
    if (v12 >= 8 && a2 < v51)
    {
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v53 = v8 + 16;
      uint64_t v48 = (char *)(v8 + 8);
      unint64_t v49 = v18;
      uint64_t v19 = v54;
      uint64_t v20 = v56;
      do
      {
        uint64_t v57 = a1;
        uint64_t v21 = *(void *)a4;
        uint64_t v22 = v49;
        v49(v19, *(void *)a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v20);
        uint64_t v23 = v55;
        v22(v55, v21 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v20);
        swift_retain();
        swift_retain();
        Swift::Int v24 = a4;
        unint64_t v52 = Date.compare(_:)();
        uint64_t v25 = *(void (**)(char *, uint64_t))v48;
        (*(void (**)(char *, uint64_t))v48)(v23, v20);
        v25(v19, v20);
        swift_release();
        swift_release();
        if (v52 == -1)
        {
          uint64_t v27 = a2 + 8;
          uint64_t v26 = v57;
          a4 = v24;
          if (v57 < a2 || v57 >= v27 || v57 != a2) {
            *(void *)uint64_t v57 = *(void *)a2;
          }
        }
        else
        {
          uint64_t v26 = v57;
          if (v57 != v24) {
            *(void *)uint64_t v57 = *(void *)v24;
          }
          a4 = v24 + 8;
          Swift::Int v59 = v24 + 8;
          uint64_t v27 = a2;
        }
        a1 = v26 + 8;
        uint64_t v60 = a1;
        if (a4 >= v50) {
          break;
        }
        a2 = v27;
      }
      while (v27 < v51);
    }
LABEL_45:
    sub_100354BDC(&v60, &v59, &v58);
    return 1;
  }
LABEL_46:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10033A54C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::Int v54 = (char *)&v47 - v11;
  uint64_t v56 = *(void *)(v12 + 72);
  if (!v56)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v56 == -1) {
    goto LABEL_71;
  }
  int64_t v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v56 == -1) {
    goto LABEL_72;
  }
  uint64_t v14 = (uint64_t)(a2 - a1) / v56;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v15 = v13 / v56;
  if (v14 >= v13 / v56)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = v15 * v56;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v17;
      unint64_t v58 = a4 + v17;
      unint64_t v60 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v56;
        Swift::Int v34 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v53 = v8 + 16;
        uint64_t v48 = (void (**)(char *, uint64_t))(v8 + 8);
        unint64_t v49 = v34;
        unint64_t v50 = a1;
        unint64_t v51 = a4;
        do
        {
          unint64_t v52 = a3;
          uint64_t v56 = a3 + v33;
          uint64_t v35 = v54;
          uint64_t v36 = v57;
          uint64_t v37 = v49;
          v49(v54, v31 + v33, v57);
          unint64_t v38 = a2 + v33;
          uint64_t v39 = v55;
          v37(v55, a2 + v33, v36);
          uint64_t v40 = Date.compare(_:)();
          unint64_t v41 = *v48;
          (*v48)(v39, v36);
          v41(v35, v36);
          if (v40 == -1)
          {
            a3 = v56;
            if (v52 < a2 || v56 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v44 = v50;
              unint64_t v45 = v51;
            }
            else
            {
              unint64_t v44 = v50;
              unint64_t v45 = v51;
              if (v52 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v60 += v33;
          }
          else
          {
            unint64_t v42 = v58;
            v58 += v33;
            a3 = v56;
            if (v52 < v42 || v56 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v38 = a2;
              unint64_t v44 = v50;
              unint64_t v45 = v51;
            }
            else
            {
              unint64_t v44 = v50;
              if (v52 != v42) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v38 = a2;
              unint64_t v45 = v51;
            }
          }
          unint64_t v31 = v58;
          if (v58 <= v45) {
            break;
          }
          a2 = v38;
        }
        while (v38 > v44);
      }
      goto LABEL_69;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = v14 * v56;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v52 = a4 + v16;
    unint64_t v58 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v53 = v8 + 16;
      uint64_t v20 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v21 = v54;
      uint64_t v22 = v57;
      do
      {
        v19(v21, a2, v22);
        uint64_t v23 = v55;
        v19(v55, a4, v22);
        uint64_t v24 = Date.compare(_:)();
        uint64_t v25 = *v20;
        (*v20)(v23, v22);
        v25(v21, v22);
        unint64_t v26 = v60;
        if (v24 == -1)
        {
          unint64_t v29 = a2 + v56;
          if (v60 < a2 || v60 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v60 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v27 = v59 + v56;
          if (v60 < v59 || v60 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v60 != v59)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v59 = v27;
          unint64_t v29 = a2;
        }
        unint64_t v60 = v26 + v56;
        a4 = v59;
        if (v59 >= v52) {
          break;
        }
        a2 = v29;
      }
      while (v29 < a3);
    }
LABEL_69:
    sub_100354EFC(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_10033AAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12((char *)&v18 - v10, a1 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_section, v4, v9);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_section, v4);
  char v13 = static Date.== infix(_:_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  v14(v11, v4);
  if ((v13 & 1) == 0) {
    return 0;
  }
  ((void (*)(char *, uint64_t, uint64_t))v12)(v11, a1 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v4);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_startTime, v4);
  char v15 = static Date.== infix(_:_:)();
  v14(v7, v4);
  v14(v11, v4);
  if ((v15 & 1) == 0) {
    return 0;
  }
  if (*(double *)(a1 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration) == *(double *)(a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_duration)
    && (((void (*)(char *, uint64_t, uint64_t))v12)(v11, a1 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_endTime, v4), ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_endTime, v4), char v16 = static Date.== infix(_:_:)(), v14(v7, v4), v14(v11, v4), (v16 & 1) != 0)&& *(void *)(a1 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_eventCount) == *(void *)(a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_eventCount))
  {
    return *(void *)(a1 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_byteCount) == *(void *)(a2 + OBJC_IVAR____TtC4Maps29GEOAPSessionSpecificModelItem_byteCount);
  }
  else
  {
    return 0;
  }
}

void sub_10033AD98(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100334A88(a1, a2, a3, v3);
}

uint64_t sub_10033ADA0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033ADD8(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16))(a1, a2, *a3);
}

uint64_t sub_10033AE04()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10033AE44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005056C;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100105268;
  return sub_100333614();
}

unint64_t sub_10033AF18(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000FF33C(&qword_1015DC1B8);
      uint64_t result = static _SetStorage.allocate(capacity:)();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_1003350F8(&qword_1015DC1C0, 255, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1003350F8(&qword_1015DC1C8, 255, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10033B1D4(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015DC190);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();
  uint64_t result = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, result+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * a1, v2);
    swift_bridgeObjectRelease();
    id v11 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v12 = String._bridgeToObjectiveC()();
    [v11 setDateFormat:v12];

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v14 = [v11 stringFromDate:isa];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v15;
  }
  __break(1u);
  return result;
}

void *sub_10033B44C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000FF33C(&qword_1015DC1A0);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    NSString v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1003350F8(&qword_1015DC1A8, 255, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1003350F8(&qword_1015DC1B0, 255, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_10033B76C()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___timeLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___eventCountLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___byteCountLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___containerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___latencyView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10033B814()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps45GEOAPSessionSpecificHistoricalDebugController_dataModel;
  type metadata accessor for GEOAPSessionSpecificDataModel(0);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(_DWORD *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 44) = 1;
  type metadata accessor for Date();
  type metadata accessor for GEOAPSessionSpecificModelItem(0);
  sub_1003350F8(&qword_1015D4890, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1003350F8((unint64_t *)&unk_1015DBE70, 255, (void (*)(uint64_t))type metadata accessor for GEOAPSessionSpecificModelItem);
  NSDiffableDataSourceSnapshot.init()();
  *(void *)(v2 + 16) = _swiftEmptyDictionarySingleton;
  *(void *)&v0[v1] = v2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10033B974()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033B9AC()
{
  uint64_t v1 = type metadata accessor for Calendar();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_10033BA94(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, unsigned int a6, unsigned int a7, uint64_t a8, int a9)
{
  uint64_t v18 = *(void *)(type metadata accessor for Calendar() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  LODWORD(v20) = a9;
  sub_100333A80(a1, a2, a3, a4, a5, a6, a7, a8, v20, *(void *)(v9 + 16), v9 + v19, *(void *)(v9 + ((*(void *)(v18 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10033BB98()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033BBD8()
{
  return sub_1003343F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10033BBE8(unint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = &OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView;
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v7 = &OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView;
    if (v6)
    {
LABEL_3:
      unint64_t v58 = v5;
      uint64_t v65 = &v62[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
      unint64_t v66 = a1 & 0xC000000000000001;
      unint64_t v60 = (Swift::Int *)&v62[OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions];
      swift_beginAccess();
      uint64_t v64 = &v69;
      uint64_t v8 = 4;
      *(void *)&long long v9 = 138412290;
      long long v61 = v9;
      unint64_t v59 = (char *)&type metadata for Swift.AnyObject + 8;
      uint64_t v63 = v6;
      while (1)
      {
        if (v66) {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v11 = *(id *)(a1 + 8 * v8);
        }
        NSString v12 = v11;
        uint64_t v13 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        sub_1000F1C90((uint64_t)v65, (uint64_t)v68);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        sub_1000F1BD8((uint64_t)v68);
        if (!Strong) {
          break;
        }
        unint64_t v5 = a1;
        uint64_t v15 = v62;
        swift_getObjectType();
        if (swift_conformsToProtocol2()) {
          uint64_t v16 = v15;
        }
        else {
          uint64_t v16 = 0;
        }
        if (!v16) {
          goto LABEL_64;
        }
        id v17 = v15;
        id v18 = [v12 identifierPath];
        id v19 = sub_1000806A8();
        v68[0] = v18;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
        swift_unknownObjectRelease();

        uint64_t v20 = type metadata accessor for IndexPath();
        a1 = v5;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v4, 1, v20) == 1) {
          goto LABEL_21;
        }
        sub_1000FF2E0((uint64_t)v4, &qword_1015D4B40);
        if (qword_1015CBD40 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_1000F2248(v21, (uint64_t)qword_101611778);
        uint64_t v10 = v12;
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v25 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = v61;
          *(void *)(v24 + 4) = v10;
          *uint64_t v25 = v10;

          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Starting deletion: %@", (uint8_t *)v24, 0xCu);
          sub_1000FF33C((uint64_t *)&unk_1015CF600);
          swift_arrayDestroy();
          a1 = v5;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v22 = v10;
        }
        uint64_t v32 = v60;

        uint64_t v33 = [v10 identifierPath];
        if ([v10 completed])
        {
          BOOL v28 = v10;
          uint64_t v10 = v33;
        }
        else
        {
          uint64_t v34 = *v32;
          if ((*v32 & 0xC000000000000001) != 0)
          {
            uint64_t v35 = v33;
            swift_bridgeObjectRetain();
            uint64_t v36 = __CocoaDictionary.lookup(_:)();
            if (!v36)
            {

              swift_bridgeObjectRelease();
              a1 = v5;
LABEL_38:
              uint64_t v32 = v60;
LABEL_39:
              swift_beginAccess();
              uint64_t v41 = *v32;
              if ((*v32 & 0xC000000000000001) != 0)
              {
                if (v41 >= 0) {
                  v41 &= 0xFFFFFFFFFFFFFF8uLL;
                }
                unint64_t v42 = v10;
                uint64_t v43 = v33;
                uint64_t v44 = __CocoaDictionary.count.getter();
                if (__OFADD__(v44, 1)) {
                  goto LABEL_49;
                }
                *uint64_t v32 = sub_10033E128(v41, v44 + 1);
              }
              else
              {
                unint64_t v45 = v10;
                uint64_t v46 = v33;
              }
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v67 = *v32;
              *uint64_t v32 = 0x8000000000000000;
              sub_10035195C((uint64_t)v10, v33, isUniquelyReferenced_nonNull_native);
              *uint64_t v32 = v67;

              swift_bridgeObjectRelease();
              swift_endAccess();
              BOOL v28 = v33;
              goto LABEL_5;
            }
            uint64_t v67 = v36;
            sub_100100830(0, (unint64_t *)&unk_1015DC230);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            uint64_t v37 = v68[0];
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            a1 = v5;
          }
          else
          {
            if (!*(void *)(v34 + 16)) {
              goto LABEL_39;
            }
            unint64_t v38 = v33;
            swift_bridgeObjectRetain();
            unint64_t v39 = sub_1001EA990((uint64_t)v38);
            if ((v40 & 1) == 0)
            {

              swift_bridgeObjectRelease();
              goto LABEL_38;
            }
            uint64_t v37 = *(id *)(*(void *)(v34 + 56) + 8 * v39);

            swift_bridgeObjectRelease();
          }
          uint64_t v32 = v60;
          if (!v37) {
            goto LABEL_39;
          }

          BOOL v28 = v33;
          uint64_t v10 = v37;
        }
LABEL_5:

        ++v8;
        if (v13 == v63)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v7 = &OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView;
          if (v58) {
            goto LABEL_52;
          }
LABEL_47:
          uint64_t v49 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_53;
        }
      }
      uint64_t v26 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v4, 1, 1, v26);
LABEL_21:
      sub_1000FF2E0((uint64_t)v4, &qword_1015D4B40);
      if (qword_1015CBD40 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_1000F2248(v27, (uint64_t)qword_101611778);
      BOOL v28 = v12;
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v10, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        unint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = v61;
        *(void *)(v30 + 4) = v28;
        *unint64_t v31 = v28;
        _os_log_impl((void *)&_mh_execute_header, v10, v29, "Cannot start deletion because the deleted item is not present in the collection view: %@", (uint8_t *)v30, 0xCu);
        sub_1000FF33C((uint64_t *)&unk_1015CF600);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v10 = v28;
      }
      goto LABEL_5;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_47;
  }
LABEL_52:
  swift_bridgeObjectRetain();
  uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_53:
  unint64_t v50 = v62;
  if (v49 >= 1)
  {
    sub_1000F1C90((uint64_t)&v62[v7[58]], (uint64_t)v68);
    uint64_t v51 = swift_unknownObjectWeakLoadStrong();
    uint64_t result = sub_1000F1BD8((uint64_t)v68);
    if (v51)
    {
      swift_getObjectType();
      uint64_t v52 = swift_conformsToProtocol2();
      if (v52) {
        uint64_t v53 = v52;
      }
      else {
        uint64_t v53 = 0;
      }
      if (v52) {
        Swift::Int v54 = v50;
      }
      else {
        Swift::Int v54 = 0;
      }
      if (v54)
      {
        sub_1000FF33C(&qword_1015D7380);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
        *(void *)(inited + 32) = v54;
        *(void *)(inited + 40) = v53;
        id v56 = v50;
        sub_1000F2788(inited, 1);
        swift_setDeallocating();
        sub_1000FF33C(&qword_1015CF1F0);
        swift_arrayDestroy();

        return swift_unknownObjectRelease();
      }
      else
      {
LABEL_64:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t sub_10033C4E0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_12;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v6 = v5;
    if (([v5 completed] & 1) == 0)
    {
      uint64_t v7 = _convertErrorToNSError(_:)();
      [v6 markAsCompletedWithSuccess:0 error:v7];

      uint64_t v6 = (void *)v7;
    }
  }
LABEL_12:
  swift_bridgeObjectRelease();

  return sub_10033C9B4(a1);
}

uint64_t sub_10033C60C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  sub_1000F1C90((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)aBlock);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v16 = v14;
  sub_1000F1BD8((uint64_t)aBlock);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_9;
  }
  uint64_t v30 = a1;
  uint64_t v17 = a3;
  uint64_t v18 = a2;
  uint64_t v19 = v10;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v20 = v3;
  }
  else {
    uint64_t v20 = 0;
  }
  if (v20)
  {
    id v21 = v3;
    id v22 = sub_1000806A8();
    aBlock[0] = v16;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
    swift_unknownObjectRelease();

    uint64_t v10 = v19;
    int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v19);
    a2 = v18;
    a3 = v17;
    a1 = v30;
    if (v23 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
LABEL_10:
      id v24 = objc_allocWithZone((Class)HomeDeletion);
      sub_1000FF3F0((uint64_t)a1, (uint64_t)aBlock);
      swift_retain();
      uint64_t v25 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      aBlock[4] = a2;
      aBlock[5] = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100316A88;
      aBlock[3] = &unk_1012E5398;
      uint64_t v27 = _Block_copy(aBlock);
      swift_release();
      id v28 = [v24 initWithObject:v25 indexPath:isa identifierPath:v16 contextualActionCompletionHandler:v27];
      _Block_release(v27);

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return (uint64_t)v28;
    }
LABEL_9:
    IndexPath.init(item:section:)();
    sub_1000FF2E0((uint64_t)v9, &qword_1015D4B40);
    goto LABEL_10;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10033C9B4(unint64_t a1)
{
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_41:
      if (*(uint64_t *)(v3 + 16) < 1) {
        return result;
      }
LABEL_42:
      if (v5)
      {
        sub_1000F1C90((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v49);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t result = sub_1000F1BD8((uint64_t)v49);
        if (Strong)
        {
          swift_getObjectType();
          uint64_t v38 = swift_conformsToProtocol2();
          if (v38) {
            uint64_t v39 = v38;
          }
          else {
            uint64_t v39 = 0;
          }
          if (v38) {
            char v40 = v1;
          }
          else {
            char v40 = 0;
          }
          if (v40)
          {
            sub_1000FF33C(&qword_1015D7380);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
            *(void *)(inited + 32) = v40;
            *(void *)(inited + 40) = v39;
            unint64_t v42 = v1;
            sub_1000F2788(inited, 1);
            swift_setDeallocating();
            sub_1000FF33C(&qword_1015CF1F0);
            swift_arrayDestroy();

            return swift_unknownObjectRelease();
          }
          else
          {
            uint64_t result = _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
          }
        }
      }
      return result;
    }
    goto LABEL_3;
  }
LABEL_54:
  swift_bridgeObjectRetain();
  uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = v43;
  if (!v43)
  {
LABEL_57:
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  if (v43 < 1)
  {
    __break(1u);
    goto LABEL_57;
  }
LABEL_3:
  unint64_t v44 = v4;
  unint64_t v45 = v1;
  uint64_t v6 = (void *)((char *)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
  swift_beginAccess();
  char v47 = 0;
  unint64_t v4 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(a1 + 8 * v4 + 32);
    }
    long long v9 = v8;
    if (qword_1015CBD40 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_1000F2248(v10, (uint64_t)qword_101611778);
    uint64_t v11 = v9;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412290;
      *(void *)(v14 + 4) = v11;
      *uint64_t v15 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Ending deletion: %@", (uint8_t *)v14, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v12 = v11;
    }

    id v16 = [v11 identifierPath];
    if (![v11 completed])
    {
LABEL_4:
      id v7 = v16;
      goto LABEL_5;
    }
    uint64_t v17 = *v6;
    if ((*v6 & 0xC000000000000001) != 0)
    {
      id v7 = v16;
      swift_bridgeObjectRetain();
      if (!__CocoaDictionary.lookup(_:)()) {
        goto LABEL_29;
      }
      sub_100100830(0, (unint64_t *)&unk_1015DC230);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v18 = (id)v49[0];
      swift_unknownObjectRelease();
    }
    else
    {
      if (!*(void *)(v17 + 16)) {
        goto LABEL_4;
      }
      id v7 = v16;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1001EA990((uint64_t)v7);
      if ((v20 & 1) == 0)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      id v18 = *(id *)(*(void *)(v17 + 56) + 8 * v19);
    }

    swift_bridgeObjectRelease();
    if (!v18) {
      goto LABEL_4;
    }

    unsigned __int8 v21 = [v11 success];
    swift_beginAccess();
    uint64_t v22 = *v6;
    if ((*v6 & 0xC000000000000001) != 0)
    {
      unsigned __int8 v46 = v21;
      if (v22 < 0) {
        uint64_t v23 = *v6;
      }
      else {
        uint64_t v23 = v22 & 0xFFFFFFFFFFFFFF8;
      }
      id v24 = v16;
      swift_bridgeObjectRetain();
      uint64_t v25 = __CocoaDictionary.lookup(_:)();

      if (v25)
      {
        swift_unknownObjectRelease();
        uint64_t v26 = __CocoaDictionary.count.getter();
        uint64_t v1 = (void *)sub_10033E128(v23, v26);
        swift_retain();
        unint64_t v27 = sub_1001EA990((uint64_t)v24);
        char v29 = v28;
        swift_release();
        if ((v29 & 1) == 0)
        {
          __break(1u);
          goto LABEL_54;
        }

        id v7 = *(id *)(v1[7] + 8 * v27);
        sub_1002CC76C(v27, (uint64_t)v1);
        *uint64_t v6 = (uint64_t)v1;
        swift_bridgeObjectRelease();
        unsigned __int8 v21 = v46;
      }
      else
      {
        swift_bridgeObjectRelease();
        id v7 = 0;
        unsigned __int8 v21 = v46;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_1001EA990((uint64_t)v16);
      char v32 = v31;
      swift_bridgeObjectRelease();
      if (v32)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = *v6;
        uint64_t v48 = *v6;
        *uint64_t v6 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100352DAC();
          uint64_t v34 = v48;
        }

        id v7 = *(id *)(*(void *)(v34 + 56) + 8 * v30);
        sub_1002CC76C(v30, v34);
        *uint64_t v6 = v34;
        swift_bridgeObjectRelease();
      }
      else
      {
        id v7 = 0;
      }
    }
    v47 |= v21 ^ 1;
    swift_endAccess();

LABEL_5:
    ++v4;
  }
  while (v5 != v4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v1 = v45;
  LOBYTE(v5) = v47;
  if (!v44) {
    goto LABEL_41;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v36 >= 1) {
    goto LABEL_42;
  }
  return result;
}

id sub_10033D034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000FF27C(a1 + 8, (uint64_t)&v17, (uint64_t *)&unk_1015D6960);
  sub_100101314(&v17, (uint64_t)&v22);
  uint64_t v6 = *((void *)&v23 + 1);
  uint64_t v7 = v24;
  sub_1000FF380(&v22, *((uint64_t *)&v23 + 1));
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  if (!v8)
  {
    sub_1000FF22C((uint64_t)&v22);
    return 0;
  }
  uint64_t v9 = v8;
  sub_1000FF22C((uint64_t)&v22);
  id v10 = [self shareItemForObject:v9];
  swift_unknownObjectRelease();
  if (!v10)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000FF3F0(a1, (uint64_t)&v22);
  uint64_t v12 = swift_allocObject();
  long long v13 = v23;
  *(_OWORD *)(v12 + 40) = v22;
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = v11;
  *(_OWORD *)(v12 + 56) = v13;
  *(_OWORD *)(v12 + 72) = v24;
  char v20 = sub_10033EAC4;
  uint64_t v21 = v12;
  *(void *)&long long v17 = _NSConcreteStackBlock;
  *((void *)&v17 + 1) = 1107296256;
  id v18 = sub_10033153C;
  unint64_t v19 = &unk_1012E5370;
  uint64_t v14 = _Block_copy(&v17);
  sub_1000F4F24(a2);
  swift_release();
  id v15 = sub_100B7EA98(v14);
  swift_unknownObjectRelease();
  _Block_release(v14);
  return v15;
}

void sub_10033D230(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000FF27C((uint64_t)(a1 + 1), (uint64_t)&aBlock, (uint64_t *)&unk_1015D6960);
  sub_100101314(&aBlock, (uint64_t)v19);
  uint64_t v4 = v20;
  uint64_t v5 = v21;
  sub_1000FF380(v19, v20);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v4, v5);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_1000FF22C((uint64_t)v19);
    id v8 = [self shareItemForObject:v7];
    if (v8)
    {
      id v9 = v8;
      id v10 = (id)sub_10033D448(a1);
      sub_1000F1C90(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v19);
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      sub_1000F1BD8((uint64_t)v19);
      if (Strong
        && (id v12 = [Strong homeShareDelegate],
            swift_unknownObjectRelease(),
            v12))
      {
        long long v17 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
        uint64_t v18 = 0;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        id v15 = sub_10008C380;
        id v16 = &unk_1012E52F8;
        long long v13 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        id v10 = v10;
        [v12 shareItem:v9 sourceView:v10 completion:v13];
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        _Block_release(v13);
      }
      else
      {
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1000FF22C((uint64_t)v19);
  }
}

uint64_t sub_10033D448(uint64_t *a1)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (void **)&v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000F1C90((uint64_t)&v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], (uint64_t)v21);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v21);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_9;
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v12 = v1;
  }
  else {
    id v12 = 0;
  }
  if (v12)
  {
    uint64_t v13 = *a1;
    uint64_t v14 = v1;
    id v15 = sub_1000806A8();
    v21[0] = v13;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
    swift_unknownObjectRelease();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      id v16 = *v10;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v18 = [v16 cellForItemAtIndexPath:isa];

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (uint64_t)v18;
    }
LABEL_9:
    sub_1000FF2E0((uint64_t)v5, &qword_1015D4B40);
    return 0;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10033D70C(void (*a1)(uint64_t), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t *a6)
{
  if (a3) {
    a3();
  }
  a1(1);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = (void *)Strong;
    sub_10033D230(a6);
  }
}

id sub_10033D7D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListSectionController();
  return [super dealloc];
}

uint64_t sub_10033DAB0(void *a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
  sub_1000F1C90((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)&v20);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)&v20);
  if (Strong)
  {
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v5 = v1;
    }
    else {
      uint64_t v5 = 0;
    }
    if (!v5)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      goto LABEL_19;
    }
    id v6 = v1;
    sub_10025DE18(v22);
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_1000FF27C((uint64_t)v22, (uint64_t)&v20, &qword_1015D68C0);
  if (!v20)
  {
    sub_1000FF2E0((uint64_t)&v20, &qword_1015D68C0);
    goto LABEL_17;
  }
  sub_1000FF27C((uint64_t)&v21, (uint64_t)v16, (uint64_t *)&unk_1015D6960);
  sub_100101314(v16, (uint64_t)v17);
  sub_1000FFC8C((uint64_t)&v20);
  uint64_t v7 = v18;
  uint64_t v8 = v19;
  sub_1000FF380(v17, v18);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  sub_1000FF22C((uint64_t)v17);
  if (!v9)
  {
LABEL_17:
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [a1 deselectItemAtIndexPath:isa animated:1];

    return sub_1000FF2E0((uint64_t)v22, &qword_1015D68C0);
  }
  sub_1000F1C90(v3, (uint64_t)&v20);
  id v10 = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)&v20);
  if (v10)
  {
    [v10 homeItemTapped:v9];
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (!v11)
  {
LABEL_15:
    swift_unknownObjectRelease_n();
    goto LABEL_17;
  }
  uint64_t v12 = v11;
  [self captureUserAction:2007 target:8 value:0];
  uint64_t v13 = IndexPath.row.getter();
  if ((v13 & 0x8000000000000000) == 0)
  {
    [self captureCuratedCollectionAction:2099 withCollectionHandler:v12 verticalIndex:v13];
    goto LABEL_15;
  }
LABEL_19:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t assignWithCopy for HomeListSectionController.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectWeakCopyAssign();
  uint64_t v7 = *(void **)(a2 + 48);
  uint64_t v8 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 56);
  uint64_t v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v10;
  id v12 = v10;

  uint64_t v13 = *(void **)(a1 + 64);
  uint64_t v14 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v14;
  id v15 = v14;

  return a1;
}

uint64_t initializeWithTake for HomeListSectionController.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for HomeListSectionController.Configuration(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 32) = a2[4];
  swift_unknownObjectWeakTakeAssign();
  id v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = a2[6];

  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = a2[7];

  uint64_t v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = a2[8];

  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListSectionController.Configuration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListSectionController.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListSectionController.Configuration()
{
  return &type metadata for HomeListSectionController.Configuration;
}

Swift::Int sub_10033E128(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000FF33C(&qword_1015CCFE8);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_100100830(0, (unint64_t *)&unk_1015D6E30);
      do
      {
        swift_dynamicCast();
        sub_100100830(0, (unint64_t *)&unk_1015DC230);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10034F9DC(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_10033E37C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v66 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v58 = (char *)&v49 - v11;
  uint64_t v12 = type metadata accessor for Handle();
  uint64_t v59 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  BOOL v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v57 = (char *)&v49 - v16;
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v56 = v8;
  sub_1000FF33C(&qword_1015DC250);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v18 = result;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  if (a2 < 1) {
    unint64_t v19 = 0;
  }
  else {
    unint64_t v19 = *a1;
  }
  uint64_t v20 = 0;
  uint64_t v53 = v59 + 16;
  uint64_t v54 = result;
  uint64_t v51 = a4;
  uint64_t v52 = v60 + 16;
  uint64_t v64 = v60 + 32;
  uint64_t v65 = v59 + 32;
  uint64_t v21 = result + 64;
  uint64_t v22 = v56;
  uint64_t v55 = v15;
  while (1)
  {
    uint64_t v63 = a3;
    if (v19)
    {
      uint64_t v61 = (v19 - 1) & v19;
      uint64_t v62 = v20;
      unint64_t v23 = __clz(__rbit64(v19)) | (v20 << 6);
    }
    else
    {
      uint64_t v24 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_40;
      }
      if (v24 >= v50) {
        return v18;
      }
      unint64_t v25 = v49[v24];
      uint64_t v26 = v20 + 1;
      if (!v25)
      {
        uint64_t v26 = v20 + 2;
        if (v20 + 2 >= v50) {
          return v18;
        }
        unint64_t v25 = v49[v26];
        if (!v25)
        {
          uint64_t v26 = v20 + 3;
          if (v20 + 3 >= v50) {
            return v18;
          }
          unint64_t v25 = v49[v26];
          if (!v25)
          {
            uint64_t v27 = v20 + 4;
            if (v20 + 4 >= v50) {
              return v18;
            }
            unint64_t v25 = v49[v27];
            if (!v25)
            {
              while (1)
              {
                uint64_t v26 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_41;
                }
                if (v26 >= v50) {
                  return v18;
                }
                unint64_t v25 = v49[v26];
                ++v27;
                if (v25) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v26 = v20 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v61 = (v25 - 1) & v25;
      uint64_t v62 = v26;
      unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
    }
    uint64_t v28 = v59;
    uint64_t v29 = *(void *)(v59 + 72);
    unint64_t v30 = v57;
    (*(void (**)(char *, unint64_t, uint64_t))(v59 + 16))(v57, a4[6] + v29 * v23, v12);
    uint64_t v31 = a4[7];
    uint64_t v32 = v60;
    uint64_t v33 = *(void *)(v60 + 72);
    uint64_t v34 = v12;
    uint64_t v35 = v58;
    (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v58, v31 + v33 * v23, v22);
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v37 = v55;
    v36(v55, v30, v34);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    uint64_t v39 = v35;
    uint64_t v12 = v34;
    v38(v66, v39, v22);
    uint64_t v18 = v54;
    sub_10033EB24();
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v40 = -1 << *(unsigned char *)(v18 + 32);
    unint64_t v41 = result & ~v40;
    unint64_t v42 = v41 >> 6;
    if (((-1 << v41) & ~*(void *)(v21 + 8 * (v41 >> 6))) != 0)
    {
      unint64_t v43 = __clz(__rbit64((-1 << v41) & ~*(void *)(v21 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v40) >> 6;
      do
      {
        if (++v42 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v46 = v42 == v45;
        if (v42 == v45) {
          unint64_t v42 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v21 + 8 * v42);
      }
      while (v47 == -1);
      unint64_t v43 = __clz(__rbit64(~v47)) + (v42 << 6);
    }
    *(void *)(v21 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
    v36((char *)(*(void *)(v18 + 48) + v43 * v29), v37, v12);
    unint64_t v48 = *(void *)(v18 + 56) + v43 * v33;
    uint64_t v22 = v56;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v38)(v48, v66, v56);
    ++*(void *)(v18 + 16);
    a3 = v63 - 1;
    if (__OFSUB__(v63, 1)) {
      break;
    }
    a4 = v51;
    unint64_t v19 = v61;
    uint64_t v20 = v62;
    if (v63 == 1) {
      return v18;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10033E854()
{
  sub_1000F1C90((uint64_t)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v14);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v14);
  if (Strong)
  {
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v2 = v0;
    }
    else {
      uint64_t v2 = 0;
    }
    if (!v2)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    id v3 = v0;
    sub_10025DE18(v14);
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, 48);
  }
  sub_1000FF27C((uint64_t)v14, (uint64_t)&v12, &qword_1015D68C0);
  if (v12)
  {
    sub_1000FF27C((uint64_t)&v13, (uint64_t)v8, (uint64_t *)&unk_1015D6960);
    sub_100101314(v8, (uint64_t)v9);
    sub_1000FFC8C((uint64_t)&v12);
    uint64_t v4 = v10;
    uint64_t v5 = v11;
    sub_1000FF380(v9, v10);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
    sub_1000FF2E0((uint64_t)v14, &qword_1015D68C0);
    sub_1000FF22C((uint64_t)v9);
    if (v6)
    {
      swift_unknownObjectRelease();
      return 1;
    }
  }
  else
  {
    sub_1000FF2E0((uint64_t)v14, &qword_1015D68C0);
    sub_1000FF2E0((uint64_t)&v12, &qword_1015D68C0);
  }
  return 0;
}

uint64_t sub_10033EA34()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033EA6C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  sub_1000FF22C(v0 + 48);

  return _swift_deallocObject(v0, 88, 7);
}

void sub_10033EAC4(void (*a1)(uint64_t), uint64_t a2)
{
  sub_10033D70C(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (uint64_t *)(v2 + 40));
}

uint64_t sub_10033EAD4(void *a1)
{
  return sub_1002571A4(a1, *(void *)(v1 + 16));
}

uint64_t sub_10033EADC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

unint64_t sub_10033EB24()
{
  unint64_t result = qword_1015D4870;
  if (!qword_1015D4870)
  {
    type metadata accessor for Handle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1015D4870);
  }
  return result;
}

void _s4Maps16LibraryAnalyticsC26captureAddOrEditNoteAction9placeMUID05isNewH0ys6UInt64V_SbtFZ_0(uint64_t a1, char a2)
{
  id v3 = [self sharedService];
  if (v3)
  {
    uint64_t v4 = v3;
    BOOL v5 = (a2 & 1) == 0;
    if (a2) {
      uint64_t v6 = 139;
    }
    else {
      uint64_t v6 = 138;
    }
    if (v5) {
      uint64_t v7 = 471;
    }
    else {
      uint64_t v7 = 472;
    }
    dispatch thunk of CustomStringConvertible.description.getter();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v4 captureUserAction:v7 onTarget:v6 eventValue:v8];
  }
  else
  {
    __break(1u);
  }
}

void _s4Maps16LibraryAnalyticsC21captureAddOrRemovePin9placeMUID0dE06targetys6UInt64V_SbSo11GEOUITargetVtFZ_0(uint64_t a1, char a2, uint64_t a3)
{
  if (a1)
  {
    dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = [self sharedService];
  if (v7)
  {
    NSString v8 = v7;
    if (v6)
    {
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    if (a2) {
      uint64_t v10 = 475;
    }
    else {
      uint64_t v10 = 473;
    }
    [v8 captureUserAction:v10 onTarget:a3 eventValue:v9];
  }
  else
  {
    __break(1u);
  }
}

void _s4Maps16LibraryAnalyticsC022captureAddOrRemoveFromB09placeMUID0dE06targetys6UInt64V_SbSo11GEOUITargetVtFZ_0(uint64_t a1, char a2, uint64_t a3)
{
  if (a1)
  {
    dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = [self sharedService];
  if (v7)
  {
    NSString v8 = v7;
    if (v6)
    {
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    if (a2) {
      uint64_t v10 = 469;
    }
    else {
      uint64_t v10 = 477;
    }
    [v8 captureUserAction:v10 onTarget:a3 eventValue:v9];
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for LibraryAnalytics()
{
  return self;
}

void sub_10033EED0(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle + 8))
  {
    if (a2) {
      goto LABEL_9;
    }
  }
  else if ((a2 & 1) == 0 && *(void *)v5 == a1)
  {
    goto LABEL_9;
  }
  uint64_t v6 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints;
  if (*(void *)(v2 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints))
  {
    id v7 = self;
    sub_10010B37C();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 deactivateConstraints:isa];

    *(void *)(v2 + v6) = 0;
    swift_bridgeObjectRelease();
  }
  sub_100087AEC();
LABEL_9:
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
}

void sub_10033EFDC(unsigned __int8 a1)
{
  int v2 = a1;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state) == a1) {
    return;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state) = a1;
  sub_10008825C();
  if (v2)
  {
    if (v2 == 2)
    {
      if (qword_1015CBD58 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_1000F2248(v3, (uint64_t)qword_1016117C0);
      oslog = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(oslog, v4)) {
        goto LABEL_18;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Error or No results found is being displayed in Search Overlay";
    }
    else
    {
      if (v2 != 1)
      {
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        return;
      }
      if (qword_1015CBD58 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_1000F2248(v8, (uint64_t)qword_1016117C0);
      oslog = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(oslog, v4)) {
        goto LABEL_18;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Search here is being displayed in Search overlay";
    }
  }
  else
  {
    if (qword_1015CBD58 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1000F2248(v7, (uint64_t)qword_1016117C0);
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(oslog, v4)) {
      goto LABEL_18;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = "Searching here is being displayed in Search overlay";
  }
  _os_log_impl((void *)&_mh_execute_header, oslog, v4, v6, v5, 2u);
  swift_slowDealloc();
LABEL_18:
}

id sub_10033F280()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RedoSearchContainerViewController();
  return [super dealloc];
}

void sub_10033F3A4()
{
  v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state] = 1;
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_redoSearchButtonSizeHeight] = 0x4046000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle];
  *(void *)objc_super v2 = 0;
  v2[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10033F484()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state) = 0;
  sub_10008825C();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_10006C5D8((uint64_t)v1);
  }
  id v3 = [self sharedService];
  if (v3)
  {
    id v4 = v3;
    [v3 captureUserAction:461 onTarget:503 eventValue:0];
  }
  else
  {
    __break(1u);
  }
}

char *sub_10033F61C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC4Maps34RAPPhotoCarouselCollectionViewCell_photoCarouselCell;
  id v10 = objc_allocWithZone((Class)UGCPhotoCarouselCell);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for RAPPhotoCarouselCollectionViewCell();
  uint64_t v12 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC4Maps34RAPPhotoCarouselCollectionViewCell_photoCarouselCell];
  uint64_t v14 = v12;
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 setSectionInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v15 = [v14 contentView];
  [v15 addSubview:v13];

  sub_10033F750();
  return v14;
}

void sub_10033F750()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F62DB0;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC4Maps34RAPPhotoCarouselCollectionViewCell_photoCarouselCell];
  id v5 = [v4 topAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 topAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7 constant:16.0];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 bottomAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 bottomAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11 constant:-16.0];
  *(void *)(v3 + 40) = v12;
  id v13 = [v4 leadingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 leadingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:16.0];
  *(void *)(v3 + 48) = v16;
  id v17 = [v4 trailingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 trailingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 constant:-16.0];
  *(void *)(v3 + 56) = v20;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_10033FAE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RAPPhotoCarouselCollectionViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for RAPPhotoCarouselCollectionViewCell()
{
  return self;
}

id sub_10033FB48()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___openAtLabel;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___openAtLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___openAtLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10033FBD0()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___datePicker;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___datePicker);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___datePicker);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIDatePicker) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setPreferredDatePickerStyle:0];
    [v4 setDatePickerMode:0];
    [v4 setMinuteInterval:15];
    [v4 setRoundsToMinuteInterval:0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10033FDEC(uint64_t a1, uint64_t a2, double a3)
{
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(a1 + 32);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  swift_retain();
  v5(a2, v6, v8, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10033FF00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D9498);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIBackgroundConfiguration.clear()();
  uint64_t v9 = type metadata accessor for UIBackgroundConfiguration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  UICollectionViewCell.backgroundConfiguration.setter();
  id v10 = [v1 contentView];
  id v11 = sub_10033FB48();
  [v10 addSubview:v11];

  id v12 = [v1 contentView];
  id v13 = sub_10033FBD0();
  [v12 addSubview:v13];

  id v14 = sub_10033FBD0();
  id v15 = [self currentLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  [v14 setLocale:isa];

  id v17 = sub_10033FBD0();
  [v17 addTarget:v1 action:"datePickedValueChanged:" forControlEvents:4096];

  id v18 = sub_10033FBD0();
  [v18 addTarget:v1 action:"datePickerTapped:" forControlEvents:0x10000];

  id v19 = sub_10033FBD0();
  id v20 = [v19 bottomAnchor];

  id v21 = [v1 contentView];
  id v22 = [v21 bottomAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22 constant:-8.0];
  v60[0] = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100F6B7E0;
  id v25 = sub_10033FBD0();
  id v26 = [v25 topAnchor];

  id v27 = [v1 contentView];
  id v28 = [v27 topAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28 constant:12.0];
  *(void *)(v24 + 32) = v29;
  id v30 = sub_10033FBD0();
  id v31 = [v30 trailingAnchor];

  id v32 = [v1 contentView];
  id v33 = [v32 trailingAnchor];

  id v34 = [v31 constraintEqualToAnchor:v33 constant:-20.0];
  *(void *)(v24 + 40) = v34;
  *(void *)(v24 + 48) = v23;
  id v35 = v23;
  id v36 = sub_10033FB48();
  id v37 = [v36 topAnchor];

  id v38 = sub_10033FBD0();
  id v39 = [v38 topAnchor];

  id v40 = [v37 constraintEqualToAnchor:v39];
  *(void *)(v24 + 56) = v40;
  id v41 = sub_10033FB48();
  id v42 = [v41 leadingAnchor];

  id v43 = [v1 contentView];
  id v44 = [v43 leadingAnchor];

  id v45 = [v42 constraintEqualToAnchor:v44 constant:16.0];
  *(void *)(v24 + 64) = v45;
  id v46 = sub_10033FB48();
  id v47 = [v46 bottomAnchor];

  id v48 = sub_10033FBD0();
  id v49 = [v48 bottomAnchor];

  id v50 = [v47 constraintEqualToAnchor:v49];
  *(void *)(v24 + 72) = v50;
  id v51 = sub_10033FBD0();
  id v52 = [v51 leadingAnchor];

  id v53 = sub_10033FB48();
  id v54 = [v53 trailingAnchor];

  id v55 = [v52 constraintEqualToAnchor:v54 constant:8.0];
  *(void *)(v24 + 80) = v55;
  v60[1] = (id)v24;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class v56 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v60[0] activateConstraints:v56];

  id v57 = sub_10033FBD0();
  LODWORD(v58) = 1144750080;
  [v57 setContentCompressionResistancePriority:0 forAxis:v58];

  LODWORD(v59) = 1132068864;
  [v35 setPriority:v59];
  [v35 setActive:1];
}

uint64_t sub_100340728(double a1, uint64_t a2, uint64_t a3, int a4)
{
  int v25 = a4;
  uint64_t v28 = a3;
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for UIListContentConfiguration();
  uint64_t v12 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIListContentConfiguration.cell()();
  id v15 = sub_10033FB48();
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 setText:v16];

  id v17 = sub_10033FB48();
  UIListContentConfiguration.textProperties.getter();
  id v18 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  [v17 setFont:v18];

  id v19 = sub_10033FBD0();
  if (a1 == 0.0 || (v25 & 1) == 0) {
    Date.init()();
  }
  else {
    Date.init(timeIntervalSince1970:)();
  }
  uint64_t v21 = v26;
  uint64_t v20 = v27;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v20);
  [v19 setDate:isa];

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v21);
}

uint64_t sub_100340A90(void *a1)
{
  return sub_100340B08(a1, 1);
}

uint64_t sub_100340B00(void *a1)
{
  return sub_100340B08(a1, 0);
}

uint64_t sub_100340B08(void *a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 date:v8];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSince1970.getter();
  double v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v14 = sub_100340E14();
  uint64_t v16 = v15;
  id v17 = *(void (**)(void, uint64_t, uint64_t, double))(v4
                                                                + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell_dateSelectionHandler);
  if (v17)
  {
    uint64_t v18 = v14;
    swift_retain();
    v17(a2 & 1, v18, v16, v13);
    sub_10006C5D8((uint64_t)v17);
  }
  return swift_bridgeObjectRelease();
}

id sub_100340D5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllRefinementsOpenAtCell();
  return [super dealloc];
}

uint64_t type metadata accessor for AllRefinementsOpenAtCell()
{
  return self;
}

uint64_t sub_100340E14()
{
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v0 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  objc_super v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TimeZone();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  [v11 setLocale:isa];

  static TimeZone.current.getter();
  Class v13 = TimeZone._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  [v11 setTimeZone:v13];

  NSString v14 = String._bridgeToObjectiveC()();
  [v11 setDateFormat:v14];

  Date.init(timeIntervalSince1970:)();
  Class v15 = Date._bridgeToObjectiveC()().super.isa;
  id v16 = [v11 stringFromDate:v15];

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = v18;

  uint64_t v25 = 0x5F54415F4E45504FLL;
  unint64_t v26 = 0xE800000000000000;
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = String.init(format:_:)();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v24);
  return v21;
}

uint64_t sub_100341168()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003411A0(char a1, double a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  id v6 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, void, id, double))(v5 + 16))(v5, a1 & 1, v6, a2);
}

void sub_100341218(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_100341284(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

id sub_1003412E8(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_10001C0CC(a1);

  return v4;
}

uint64_t sub_100341328(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_1000FF33C(&qword_1015D98E0);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100341530()
{
  [*(id *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] favoriteType];
  int v1 = (unsigned __int16)FavoriteItemType.rawValue.getter();
  if (v1 != (unsigned __int16)FavoriteItemType.rawValue.getter()) {
    return 0;
  }
  uint64_t result = (uint64_t)[v0 identifier];
  if (result)
  {
    id v3 = (void *)result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    if (v4 == 0x725479627261654ELL && v6 == 0xED00007469736E61)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      return v8 & 1;
    }
  }
  return result;
}

id sub_1003416D8(void *a1)
{
  uint64_t v3 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v4 - 8);
  type metadata accessor for FavoriteItem();
  id v5 = (id)MapsSyncObject.__allocating_init()();
  id v6 = a1;
  dispatch thunk of MapsSyncObject.createTime.getter();

  dispatch thunk of MapsSyncObject.createTime.setter();
  dispatch thunk of FavoriteItem.type.setter();
  dispatch thunk of CollectionPlaceItem.mapItemStorage.getter();
  dispatch thunk of FavoriteItem.mapItemStorage.setter();
  dispatch thunk of CollectionPlaceItem.customName.getter();
  dispatch thunk of FavoriteItem.customName.setter();
  id v7 = [v1 initWithFavoriteItem:v5];
  dispatch thunk of CollectionPlaceItem.type.getter();
  dispatch thunk of CollectionPlaceItem.type.setter();
  id v8 = v5;
  dispatch thunk of MapsSyncObject.identifier.getter();

  dispatch thunk of CollectionPlaceItem.originalIdentifier.setter();
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000F2248(v9, (uint64_t)qword_1016115E0);
  id v10 = v7;
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v19 = v8;
    Class v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)Class v13 = 136315138;
    id v14 = [v10 debugDescription:v13 + 4];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    sub_1000F2280(v15, v17, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Created favorite from collection item: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v10;
}

id sub_100341A38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsFavoriteItem();
  return [super dealloc];
}

uint64_t sub_100341AD0()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100341AF0, 0, 0);
}

uint64_t sub_100341AF0()
{
  id v1 = [*(id *)(v0 + 24) shortcutIdentifier];
  if (!v1)
  {
    objc_super v2 = *(void **)(v0 + 24);
    id v1 = [v2 createUniqueIdentifier];
    [v2 setShortcutIdentifier:v1];
  }

  uint64_t v3 = *(void **)(*(void *)(v0 + 24) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  dispatch thunk of FavoriteItem.version.setter();
  dispatch thunk of FavoriteItem.originatingAddressString.setter();
  type metadata accessor for MapsSyncStore();
  *(void *)(v0 + 32) = static MapsSyncStore.sharedStore.getter();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100F5DFF0;
  *(void *)(v4 + 32) = v3;
  uint64_t v9 = v4;
  specialized Array._endMutation()();
  *(void *)(v0 + 40) = v9;
  id v8 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  id v5 = v3;
  id v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *id v6 = v0;
  v6[1] = sub_100341C84;
  return v8(v9);
}

uint64_t sub_100341C84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100341FD0;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 32);
    swift_bridgeObjectRelease();

    uint64_t v3 = sub_100341DA4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100341DA4()
{
  unint64_t v17 = v0;
  id v1 = (void **)(v0 + 3);
  *(unsigned char *)(v0[3] + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) = 1;
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v2 = *v1;
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_1016115E0);
  id v4 = v2;
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  id v8 = *v1;
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    id v10 = [v8 debugDescription];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    v0[2] = sub_1000F2280(v11, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Saved item: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100341FD0()
{
  id v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003421A0(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  id v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *id v5 = v2;
  v5[1] = sub_10022D588;
  v5[3] = v4;
  return _swift_task_switch(sub_100341AF0, 0, 0);
}

uint64_t sub_1003423CC(const void *a1, void *a2)
{
  *(void *)(v2 + 120) = a2;
  *(void *)(v2 + 128) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_100342444, 0, 0);
}

uint64_t sub_100342444()
{
  id v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_10034253C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100341328;
  v0[13] = &unk_1012E5878;
  v0[14] = v2;
  [v1 deleteWithDeleteFromLibrary:0 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10034253C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_1003426C8;
  }
  else {
    uint64_t v2 = sub_10034264C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10034264C()
{
  uint64_t v1 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, void))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 128));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003426C8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void **)(v0 + 120);
  swift_willThrow();

  uint64_t v3 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v3);

  _Block_release(*(const void **)(v0 + 128));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100342778(char a1)
{
  *(void *)(v2 + 264) = v1;
  *(unsigned char *)(v2 + 496) = a1;
  sub_1000FF33C((uint64_t *)&unk_1015D9410);
  *(void *)(v2 + 272) = swift_task_alloc();
  sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  *(void *)(v2 + 280) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  *(void *)(v2 + 296) = v3;
  *(void *)(v2 + 304) = *(void *)(v3 - 8);
  *(void *)(v2 + 312) = swift_task_alloc();
  return _swift_task_switch(sub_1003428AC, 0, 0);
}

uint64_t sub_1003428AC()
{
  uint64_t v1 = *(char **)(v0 + 264);
  if (v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] == 1)
  {
    [*(id *)(v0 + 264) setIsHidden:1];
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100342CBC;
    uint64_t v2 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100341328;
    *(void *)(v0 + 104) = &unk_1012E57E8;
    *(void *)(v0 + 112) = v2;
    [v1 saveWithCompletionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 288);
  *(void *)(v0 + 256) = _swiftEmptyArrayStorage;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem];
  *(void *)(v0 + 328) = v7;
  *(void *)(v6 + 32) = v7;
  uint64_t v21 = v6;
  specialized Array._endMutation()();
  *(void *)(v0 + 336) = v21;
  *(void *)(v0 + 248) = v21;
  id v8 = v7;
  dispatch thunk of MapsSyncObject.identifier.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_1000FF2E0(*(void *)(v0 + 288), (uint64_t *)&unk_1015D5DE0);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 264);
    (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 32))(*(void *)(v0 + 312), *(void *)(v0 + 288), *(void *)(v0 + 296));
    if ([v9 type] != (id)6)
    {
      type metadata accessor for MapsSyncQueryPredicate();
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_100F5CF70;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      *(void *)(v12 + 56) = sub_100100830(0, &qword_1015DA418);
      *(void *)(v12 + 64) = sub_1002E8A6C();
      *(void *)(v12 + 32) = isa;
      id v14 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)();
      *(void *)(v0 + 344) = v14;
      swift_bridgeObjectRelease();
      type metadata accessor for CollectionPlaceItemRequest();
      *(void *)(v0 + 352) = CollectionPlaceItemRequest.__allocating_init()();
      id v15 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
      id v16 = v14;
      uint64_t v17 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
      *(void *)(v0 + 360) = v17;
      uint64_t v20 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                            + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_100342E58;
      uint64_t v11 = v17;
      goto LABEL_11;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
  }
  type metadata accessor for MapsSyncStore();
  *(void *)(v0 + 472) = static MapsSyncStore.sharedStore.getter();
  uint64_t v20 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
  swift_bridgeObjectRetain();
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v10;
  void *v10 = v0;
  v10[1] = sub_100343B60;
  uint64_t v11 = v21;
LABEL_11:
  return v20(v11);
}

uint64_t sub_100342CBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 320) = v1;
  if (v1) {
    uint64_t v2 = sub_100343ED8;
  }
  else {
    uint64_t v2 = sub_100342DCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100342DCC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100342E58(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 376) = a1;
  *(void *)(v4 + 384) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void **)(v3 + 352);

  if (v1) {
    uint64_t v6 = sub_100344020;
  }
  else {
    uint64_t v6 = sub_100342FAC;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100342FAC()
{
  uint64_t v27 = v0;
  unint64_t v1 = *(void *)(v0 + 376);
  if (*(unsigned char *)(v0 + 496) == 1)
  {
    if (v1 >> 62)
    {
      type metadata accessor for MapsSyncObject();
      swift_bridgeObjectRetain();
      unint64_t v2 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for MapsSyncObject();
      unint64_t v2 = *(void *)(v0 + 376);
    }
    sub_10024C02C(v2);
    goto LABEL_20;
  }
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_7;
    }
LABEL_18:
    type metadata accessor for CollectionPlaceItem();
    unint64_t v13 = (void *)MapsSyncObject.__allocating_init()();
    dispatch thunk of MapsSyncObject.createTime.getter();
    dispatch thunk of MapsSyncObject.createTime.setter();
    dispatch thunk of FavoriteItem.customName.getter();
    dispatch thunk of CollectionPlaceItem.customName.setter();
    dispatch thunk of FavoriteItem.mapItemStorage.getter();
    dispatch thunk of CollectionPlaceItem.mapItemStorage.setter();
    uint64_t v3 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(v0 + 256) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)(v0 + 256) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
    {
LABEL_19:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_20;
    }
LABEL_28:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_18;
  }
LABEL_7:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v4 = v1 & 0xC000000000000001;
  uint64_t v5 = *(void *)(v0 + 376) + 32;
  uint64_t v6 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 304) + 56);
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  do
  {
    if (v4) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7);
    }
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v0 + 296);
    uint64_t v11 = *(void *)(v0 + 280);
    dispatch thunk of CollectionPlaceItem.type.getter();
    dispatch thunk of CollectionPlaceItem.type.setter();
    (*v6)(v11, 1, 1, v10);
    dispatch thunk of CollectionPlaceItem.originalIdentifier.setter();
    id v12 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(v0 + 256) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 256) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    ++v7;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  while (v3 != v7);
  swift_bridgeObjectRelease();
LABEL_20:
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  *(void *)(v0 + 392) = sub_1000F2248(v14, (uint64_t)qword_1016115E0);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_beginAccess();
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v18 = Array.description.getter();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 240) = sub_1000F2280(v18, v20, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Deleted item: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *(void *)(v0 + 400) = type metadata accessor for MapsSyncStore();
  uint64_t v21 = static MapsSyncStore.sharedStore.getter();
  uint64_t v22 = *(void *)(v0 + 256);
  *(void *)(v0 + 408) = v21;
  *(void *)(v0 + 416) = v22;
  uint64_t v25 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  swift_bridgeObjectRetain();
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v23;
  void *v23 = v0;
  v23[1] = sub_1003434A0;
  return v25(v22);
}

uint64_t sub_1003434A0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 432) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 408);
  swift_bridgeObjectRelease();

  if (v0)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1003440E8;
  }
  else
  {
    unint64_t v4 = sub_100343600;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100343600()
{
  v0[55] = static MapsSyncStore.sharedStore.getter();
  swift_beginAccess();
  uint64_t v1 = v0[31];
  v0[56] = v1;
  unint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[57] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003436EC;
  return v4(v1);
}

uint64_t sub_1003436EC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 464) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 440);
  swift_bridgeObjectRelease();

  if (v0)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1003441AC;
  }
  else
  {
    unint64_t v4 = sub_10034384C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10034384C()
{
  uint64_t v22 = v0;
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  BOOL v3 = os_log_type_enabled(v1, v2);
  unint64_t v4 = v0[47];
  if (v3)
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v7 = v0[38];
    unint64_t v19 = (void *)v0[43];
    uint64_t v20 = v0[39];
    if (v6) {
      uint64_t v8 = 0x64657461647055;
    }
    else {
      uint64_t v8 = 0x64657461657243;
    }
    uint64_t v18 = v0[37];
    v0[27] = sub_1000F2280(v8, 0xE700000000000000, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    swift_beginAccess();
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v9 = Array.description.getter();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[28] = sub_1000F2280(v9, v11, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s collection item for delete: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v18);
  }
  else
  {
    id v12 = (void *)v0[43];
    uint64_t v14 = v0[38];
    uint64_t v13 = v0[39];
    uint64_t v15 = v0[37];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100343B60()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    BOOL v3 = sub_100343F70;
  }
  else
  {
    unint64_t v4 = *(void **)(v2 + 472);
    swift_bridgeObjectRelease();

    BOOL v3 = sub_100343C84;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100343C84()
{
  uint64_t v11 = v0;
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000F2248(v1, (uint64_t)qword_1016115E0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 136315138;
    swift_beginAccess();
    type metadata accessor for MapsSyncObject();
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 232) = sub_1000F2280(v5, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Deleted favorite button or item lacking identifier: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100343ED8()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100343F70()
{
  uint64_t v1 = *(void **)(v0 + 472);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100344020()
{
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003440E8()
{
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003441AC()
{
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1003443E8(char a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  uint64_t v6 = (void *)swift_task_alloc();
  v3[4] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100231634;
  return sub_100342778(a1);
}

void sub_1003444A4(uint64_t a1, void *a2)
{
  uint64_t v18 = a1;
  id v19 = a2;
  uint64_t v2 = sub_1000FF33C(&qword_1015DC490);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  if (qword_1015CBCD8 != -1) {
    swift_once();
  }
  uint64_t v5 = (os_unfair_lock_s **)(qword_101611650 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  uint64_t v6 = *v5;
  unint64_t v7 = *v5 + 4;
  swift_retain();
  os_unfair_lock_lock(v6 + 6);
  sub_1000A2B84(v7, aBlock);
  os_unfair_lock_unlock(v6 + 6);
  unint64_t v8 = aBlock[0];
  swift_release();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = (os_unfair_lock_s **)(qword_101611650 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = *v10 + 4;
  swift_retain();
  os_unfair_lock_lock(v11 + 6);
  sub_1000A2B84(v12, aBlock);
  os_unfair_lock_unlock(v11 + 6);
  swift_release();
  type metadata accessor for MapsFavoriteItem();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v2);
  unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v14, (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_100230F84;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100341218;
  aBlock[3] = &unk_1012E5748;
  os_log_type_t v16 = _Block_copy(aBlock);
  swift_release();
  [v19 moveToIndex:v9 with:isa completion:v16];
  _Block_release(v16);
}

uint64_t sub_100344920(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_100344998, 0, 0);
}

uint64_t sub_100344998()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100344A88;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, 0, 0, 0x61426F5465766F6DLL, 0xEC00000029286B63, sub_100349548, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_100344A88()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100344C20;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100344BA4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100344BA4()
{
  uint64_t v1 = *(void *)(v0 + 24);

  (*(void (**)(uint64_t, void))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100344C20()
{
  uint64_t v1 = *(void *)(v0 + 24);

  swift_task_dealloc();
  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);

  _Block_release(*(const void **)(v0 + 24));
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_100344CCC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  void v9[3] = a3;
  v9[4] = a4;
  id v10 = v4;
  swift_retain();
  sub_1003453FC(a1, a2, (unint64_t)sub_100349320, (uint64_t)v9);
  swift_release();
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000F2248(v11, (uint64_t)qword_1016115E0);
  id v12 = v10;
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2048;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    id v18 = [v13 debugDescription:v17, v22];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    sub_1000F2280(v19, v21, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Moved to index %ld within %ld: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100344FAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  id v12 = (void *)swift_allocObject();
  id v12[2] = 0;
  v12[3] = 0;
  v12[4] = a2;
  v12[5] = a3;
  v12[6] = a4;
  v12[7] = a1;
  id v13 = a2;
  swift_retain();
  swift_errorRetain();
  sub_100042AF4((uint64_t)v10, (uint64_t)&unk_1015DC460, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1003450D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[17] = a6;
  v7[18] = a7;
  v7[15] = a4;
  v7[16] = a5;
  return _swift_task_switch(sub_1003450F4, 0, 0);
}

uint64_t sub_1003450F4()
{
  uint64_t v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1003451E8;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100341328;
  v0[13] = &unk_1012E5690;
  v0[14] = v2;
  [v1 saveWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003451E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_100345360;
  }
  else {
    uint64_t v2 = sub_1003452F8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003452F8()
{
  (*(void (**)(void))(v0 + 128))(*(void *)(v0 + 144));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100345360()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void (*)(uint64_t))v0[16];
  swift_willThrow();
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1003453FC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v7 = a2;
  unint64_t v59 = a2;
  uint64_t v8 = a2 >> 62;
  if (!(a2 >> 62))
  {
    uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v9) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_15;
  }
LABEL_88:
  swift_bridgeObjectRetain_n();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_13;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v4 = *(unsigned __int8 *)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                              + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup);
      swift_unknownObjectRelease();
      if (v4 == 1) {
        break;
      }
      uint64_t v11 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      ++v10;
      if (v11 == v9) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    uint64_t v10 = 0;
    while (*(unsigned char *)(*(void *)(v7 + 8 * v10 + 32) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) != 1)
    {
      uint64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      ++v10;
      if (v12 == v9) {
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_99:
    swift_bridgeObjectRetain();
    uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v28 != v49) {
      goto LABEL_35;
    }
LABEL_15:
    unint64_t v14 = v7;
    if (v7 >> 62) {
      goto LABEL_69;
    }
    goto LABEL_16;
  }
  if (v8) {
    goto LABEL_99;
  }
  if (v28 == *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_15;
  }
LABEL_35:
  unint64_t v50 = a3;
  uint64_t v29 = v10 + 5;
  uint64_t v4 = (uint64_t)&OBJC_IVAR____TtC4Maps43GEOAPSessionSpecificUploadTableViewCellView____lazy_storage___labelContainerView;
  unint64_t v14 = v7;
  do
  {
    unint64_t v30 = v29 - 4;
    a3 = v14 & 0xC000000000000001;
    if ((v14 & 0xC000000000000001) != 0)
    {
      id v31 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v30 & 0x8000000000000000) != 0) {
        goto LABEL_77;
      }
      if (v30 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_78;
      }
      id v31 = *(id *)(v14 + 8 * v29);
    }
    char v32 = v31[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup];

    if ((v32 & 1) == 0)
    {
      if (v30 != v10)
      {
        if (a3)
        {
          a3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v10 < 0) {
            goto LABEL_82;
          }
          unint64_t v33 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v10 >= v33) {
            goto LABEL_83;
          }
          id v34 = *(id *)(v14 + 8 * v10 + 32);
          if ((v30 & 0x8000000000000000) != 0) {
            goto LABEL_84;
          }
          if (v30 >= v33) {
            goto LABEL_85;
          }
          a3 = (unint64_t)v34;
          id v35 = *(id *)(v14 + 8 * v29);
        }
        id v36 = v35;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v14 & 0x8000000000000000) != 0
          || (v14 & 0x4000000000000000) != 0)
        {
          unint64_t v14 = sub_1000A19F0(v14);
          unint64_t v59 = v14;
        }
        id v37 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
        *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v36;

        specialized Array._endMutation()();
        uint64_t v38 = v59;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v59 & 0x8000000000000000) != 0
          || (v59 & 0x4000000000000000) != 0)
        {
          uint64_t v38 = sub_1000A19F0(v59);
          unint64_t v59 = v38;
        }
        if ((v30 & 0x8000000000000000) != 0) {
          goto LABEL_86;
        }
        uint64_t v39 = v38 & 0xFFFFFFFFFFFFFF8;
        if (v30 >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_87;
        }
        id v40 = *(void **)(v39 + 8 * v29);
        *(void *)(v39 + 8 * v29) = a3;

        specialized Array._endMutation()();
      }
      if (__OFADD__(v10++, 1)) {
        goto LABEL_81;
      }
    }
    a3 = v29 - 3;
    if (__OFADD__(v30, 1)) {
      goto LABEL_79;
    }
    unint64_t v14 = v59;
    if (v59 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v29;
  }
  while (a3 != v42);
  a3 = v50;
  if (v59 >> 62)
  {
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15 < v10) {
      goto LABEL_70;
    }
LABEL_17:
    sub_100348EF4(v10, v15, v13, (void (*)(uint64_t))type metadata accessor for MapsFavoriteItem);
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v7 = v59;
    if (v59 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 - v45;
      if (!__OFSUB__(v16, v45))
      {
LABEL_22:
        uint64_t v4 = a1;
        uint64_t v8 = a1 - v18;
        if (!__OFSUB__(a1, v18))
        {
          if (!(v59 >> 62))
          {
            uint64_t v19 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if ((unint64_t)v19 <= 1) {
              goto LABEL_96;
            }
            goto LABEL_25;
          }
LABEL_94:
          swift_bridgeObjectRetain();
          uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v46 < 2) {
            goto LABEL_96;
          }
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
LABEL_25:
          uint64_t v20 = v8 & ~(v8 >> 63);
          if (v20 < v19)
          {
            if (v8 <= 0) {
              goto LABEL_71;
            }
            swift_bridgeObjectRetain();
            char v21 = sub_1003467B4(v4, v59);
            swift_bridgeObjectRelease();
            unint64_t v22 = v20 - ((v21 & 1) == 0);
            uint64_t v23 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
            uint64_t v24 = *(void **)(v51 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
            if ((v59 & 0xC000000000000001) == 0)
            {
              if ((v22 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v22 < *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                uint64_t v25 = (char *)*(id *)(v59 + 8 * v22 + 32);
LABEL_31:
                id v26 = *(id *)&v25[v23];

                unint64_t v57 = a3;
                uint64_t v58 = a4;
                long long aBlock = _NSConcreteStackBlock;
                uint64_t v54 = 1107296256;
                id v55 = sub_100341218;
                Class v56 = &unk_1012E5618;
                uint64_t v27 = _Block_copy(&aBlock);
                swift_retain();
                swift_release();
                [v24 moveAfterItem:v26 completion:v27 v50];
LABEL_75:
                _Block_release(v27);
                swift_bridgeObjectRelease();

                return;
              }
              __break(1u);
              goto LABEL_104;
            }
            uint64_t v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v23 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
            goto LABEL_31;
          }
LABEL_96:
          id v47 = *(void **)(v51 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
          unint64_t v57 = a3;
          uint64_t v58 = a4;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v54 = 1107296256;
          id v55 = sub_100341218;
          Class v56 = &unk_1012E55F0;
          id v48 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v47 moveToBackWithCompletion:v48];
          _Block_release(v48);
          swift_bridgeObjectRelease();
          return;
        }
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v16 - v17;
      if (!__OFSUB__(v16, v17)) {
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_93;
  }
LABEL_16:
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v15 >= v10) {
    goto LABEL_17;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  uint64_t v43 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
  uint64_t v24 = *(void **)(v51 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_104:
    id v44 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v43 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
    goto LABEL_74;
  }
  if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v44 = (char *)*(id *)(v7 + 32);
LABEL_74:
    id v26 = *(id *)&v44[v43];

    unint64_t v57 = a3;
    uint64_t v58 = a4;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = sub_100341218;
    Class v56 = &unk_1012E5640;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v24 moveBeforeItem:v26 completion:v27, v50];
    goto LABEL_75;
  }
  __break(1u);
}

void sub_100345C74(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a1 >> 62;
  if (!sub_10000D6A0() && (sub_100341530() & 1) == 0)
  {
    if (!v6)
    {
      uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_34:
      type metadata accessor for MapsFavoriteItem();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      uint64_t v43 = a2;
      unint64_t v44 = a3;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v40 = 1107296256;
      id v41 = sub_100341218;
      uint64_t v42 = &unk_1012E5550;
      uint64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v3 moveToIndex:v27 with:isa completion:v29];
      _Block_release(v29);

      return;
    }
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  unint64_t v36 = a3;
  if (v6) {
    goto LABEL_42;
  }
  unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_23:
    a3 = 0;
    goto LABEL_26;
  }
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (__OFSUB__(v7--, 1))
        {
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        if ((a1 & 0xC000000000000001) != 0) {
          break;
        }
        if ((v7 & 0x8000000000000000) != 0) {
          goto LABEL_40;
        }
        if (v7 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v9 = (char *)*(id *)(a1 + 32 + 8 * v7);
          goto LABEL_13;
        }
LABEL_41:
        __break(1u);
LABEL_42:
        swift_bridgeObjectRetain();
        unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_23;
        }
      }
      uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
      uint64_t v10 = v9;
      if ((v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] & 1) == 0)
      {
        uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem];
        [v11 favoriteType];
        int v12 = (unsigned __int16)FavoriteItemType.rawValue.getter();
        if (v12 == (unsigned __int16)FavoriteItemType.rawValue.getter()
          || ([v11 favoriteType],
              int v13 = (unsigned __int16)FavoriteItemType.rawValue.getter(),
              v13 == (unsigned __int16)FavoriteItemType.rawValue.getter())
          || ([v11 favoriteType],
              int v14 = (unsigned __int16)FavoriteItemType.rawValue.getter(),
              v14 == (unsigned __int16)FavoriteItemType.rawValue.getter()))
        {

          goto LABEL_25;
        }
        [v11 favoriteType];
        int v15 = (unsigned __int16)FavoriteItemType.rawValue.getter();
        if (v15 == (unsigned __int16)FavoriteItemType.rawValue.getter())
        {
          id v16 = [v10 identifier];
          if (v16) {
            break;
          }
        }
      }

      if (!v7) {
        goto LABEL_23;
      }
    }
    uint64_t v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    if (v18 == 0x725479627261654ELL && v20 == 0xED00007469736E61) {
      break;
    }
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_25;
    }
    if (!v7) {
      goto LABEL_23;
    }
  }

  swift_bridgeObjectRelease();
LABEL_25:
  a3 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
LABEL_26:
  unint64_t v38 = a3;
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_1000F2248(v22, (uint64_t)qword_1016115E0);
  swift_bridgeObjectRetain_n();
  id v23 = v3;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2048;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    id v30 = [v23 debugDescription];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;

    sub_1000F2280(v31, v33, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Moving h/w/s or nearby transit to index %ld within %ld: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  type metadata accessor for MapsFavoriteItem();
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v43 = a2;
  unint64_t v44 = v36;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v40 = 1107296256;
  id v41 = sub_100341218;
  uint64_t v42 = &unk_1012E5578;
  id v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v23 moveToIndex:v38 with:v34 completion:v35];
  _Block_release(v35);
}

void sub_1003463A4(void *a1@<X8>)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v2 - 8);
  type metadata accessor for FavoriteItem();
  dispatch thunk of FavoriteItem.customName.getter();
  dispatch thunk of FavoriteItem.hidden.getter();
  dispatch thunk of FavoriteItem.latitude.getter();
  dispatch thunk of FavoriteItem.longitude.getter();
  dispatch thunk of FavoriteItem.mapItemCategory.getter();
  dispatch thunk of FavoriteItem.mapItemCategory.getter();
  dispatch thunk of FavoriteItem.mapItemLastRefreshed.getter();
  dispatch thunk of FavoriteItem.mapItemName.getter();
  dispatch thunk of FavoriteItem.muid.getter();
  dispatch thunk of FavoriteItem.originatingAddressString.getter();
  dispatch thunk of FavoriteItem.positionIndex.getter();
  dispatch thunk of FavoriteItem.shortcutIdentifier.getter();
  dispatch thunk of FavoriteItem.source.getter();
  dispatch thunk of FavoriteItem.type.getter();
  dispatch thunk of FavoriteItem.version.getter();
  uint64_t v3 = (void *)FavoriteItem.__allocating_init(customName:hidden:latitude:longitude:mapItemAddress:mapItemCategory:mapItemLastRefreshed:mapItemName:muid:originatingAddressString:positionIndex:shortcutIdentifier:source:type:version:)();
  dispatch thunk of FavoriteItem.mapItemStorage.getter();
  dispatch thunk of FavoriteItem.mapItemStorage.setter();
  uint64_t v4 = dispatch thunk of FavoriteItem.fetchContactHandles()();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      dispatch thunk of FavoriteItem.addContactHandle(_:)();
      swift_bridgeObjectRelease();
      v6 += 16;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  if (qword_1015CBC78 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000F2248(v7, (uint64_t)qword_1016115E0);
  id v8 = v1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    id v12 = [v8 debugDescription];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1000F2280(v13, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Created a copy of item: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v16 = (objc_class *)type metadata accessor for MapsFavoriteItem();
  id v17 = objc_allocWithZone(v16);
  id v18 = v3;
  id v19 = sub_10001C0CC(v18);

  a1[3] = v16;
  *a1 = v19;
}

uint64_t sub_1003467B4(uint64_t a1, unint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  unint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000FF33C(&qword_1015D5DD8);
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  id v16 = (char *)&v33 - v15;
  unint64_t v46 = a2;
  if (a2 >> 62) {
    goto LABEL_27;
  }
  uint64_t v17 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  unint64_t v42 = v46 & 0xC000000000000001;
  if ((v46 & 0xC000000000000001) != 0)
  {
    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x100346CD0);
    }
    id v32 = *(id *)(v46 + 32);
  }
  id v18 = v32;
  if (v45 > 0)
  {
    uint64_t v39 = v16;
    uint64_t v40 = v10;
    uint64_t v10 = 0;
    uint64_t v43 = *(void *)(v43 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
    id v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    unint64_t v38 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    Class v34 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v35 = v46 & 0xFFFFFFFFFFFFFF8;
    uint64_t v41 = v17 - 1;
    while (1)
    {
      dispatch thunk of MapsSyncObject.identifier.getter();
      dispatch thunk of MapsSyncObject.identifier.getter();
      uint64_t v20 = (uint64_t)&v7[*(int *)(v44 + 48)];
      sub_1001CD278((uint64_t)v16, (uint64_t)v7);
      sub_1001CD278((uint64_t)v13, v20);
      uint64_t v21 = *v19;
      if ((*v19)(v7, 1, v3) == 1) {
        break;
      }
      uint64_t v22 = (uint64_t)v13;
      uint64_t v23 = v40;
      sub_1001CD278((uint64_t)v7, v40);
      if (v21((char *)v20, 1, v3) == 1)
      {

        uint64_t v24 = (char *)v22;
        sub_1000FF2E0(v22, (uint64_t *)&unk_1015D5DE0);
        id v16 = v39;
        sub_1000FF2E0((uint64_t)v39, (uint64_t *)&unk_1015D5DE0);
        uint64_t v25 = v23;
        uint64_t v13 = v24;
        (*v38)(v25, v3);
LABEL_14:
        sub_1000FF2E0((uint64_t)v7, &qword_1015D5DD8);
        goto LABEL_16;
      }
      uint64_t v26 = v36;
      (*v34)(v36, v20, v3);
      sub_10034932C();
      int v37 = dispatch thunk of static Equatable.== infix(_:_:)();

      uint64_t v27 = *v38;
      (*v38)((uint64_t)v26, v3);
      uint64_t v28 = (char *)v22;
      sub_1000FF2E0(v22, (uint64_t *)&unk_1015D5DE0);
      id v16 = v39;
      sub_1000FF2E0((uint64_t)v39, (uint64_t *)&unk_1015D5DE0);
      uint64_t v29 = v23;
      uint64_t v13 = v28;
      v27(v29, v3);
      sub_1000FF2E0((uint64_t)v7, (uint64_t *)&unk_1015D5DE0);
      if (v37) {
        goto LABEL_24;
      }
LABEL_16:
      if (v41 == v10) {
        goto LABEL_28;
      }
      unint64_t v4 = v10 + 1;
      if (v42)
      {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v35 + 16)) {
          goto LABEL_26;
        }
        id v30 = *(id *)(v46 + 8 * v10 + 40);
      }
      id v18 = v30;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        if (!v17) {
          goto LABEL_28;
        }
        goto LABEL_3;
      }
      if (++v10 >= v45) {
        goto LABEL_23;
      }
    }

    sub_1000FF2E0((uint64_t)v13, (uint64_t *)&unk_1015D5DE0);
    sub_1000FF2E0((uint64_t)v16, (uint64_t *)&unk_1015D5DE0);
    if (v21((char *)v20, 1, v3) == 1)
    {
      sub_1000FF2E0((uint64_t)v7, (uint64_t *)&unk_1015D5DE0);
LABEL_24:
      swift_bridgeObjectRelease();
      return 1;
    }
    goto LABEL_14;
  }
LABEL_23:
  swift_bridgeObjectRelease();

  return 0;
}

uint64_t sub_100346D00()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) == 1)
  {
    id v1 = [v0 customName];
    if (!v1)
    {
      id v2 = [v0 geoMapItem];
      uint64_t v3 = (uint64_t)v2;
      if (!v2) {
        return v3;
      }
      id v1 = [v2 name];
      swift_unknownObjectRelease();
      if (!v1) {
        return 0;
      }
    }
  }
  else if (*((unsigned char *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) == 1)
  {
    [v0 type];
    id v1 = (id)MapsSuggestionsLocalizedTitleForShortcutType();
  }
  else
  {
    id v4 = [v0 geoMapItem];
    if (!v4 || (id v1 = [v4 name], swift_unknownObjectRelease(), !v1))
    {
      id v1 = [v0 customName];
      if (!v1) {
        return 0;
      }
    }
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100346E80()
{
  id v1 = v0;
  if ([v0 type] == (id)6)
  {
    id v2 = [v0 identifier];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;

      if (v4 == 0x725479627261654ELL && v6 == 0xED00007469736E61)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0) {
          goto LABEL_8;
        }
      }
      id v15 = (id)MapsSuggestionsLocalizedNearbyTransitShortSubtitleString();
      if (v15)
      {
        id v9 = v15;
        goto LABEL_15;
      }
      return 0;
    }
  }
LABEL_8:
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) != 1)
  {
    id v10 = [v1 mapItemStorage];
    id v11 = (id)MapsSuggestionsMapItemShortAddress();

    if (v11)
    {
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    id v16 = [v1 mkMapItem];
    if (v16)
    {
      uint64_t v17 = v16;
      unsigned __int8 v18 = [v16 _isMapItemTypeBusiness];
    }
    else
    {
      unsigned __int8 v18 = 0;
    }
    id v19 = [v1 mapItemStorage];
    if (!v19
      || (uint64_t v20 = v19, v21 = [v19 name], v20, !v21))
    {
LABEL_27:
      if (v14) {
        return v12;
      }
      return 0;
    }
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    id v25 = [v1 customName];
    if (!v25
      || (v25, [v1 type] == (id)2)
      || [v1 type] == (id)3
      || [v1 type] == (id)5)
    {
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    id v27 = [v1 mapItemStorage];
    id v28 = (id)MapsSuggestionsMapItemCityName();

    if (v28)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;
    }
    else
    {
      uint64_t v30 = 0;
    }
    id v31 = [v1 mapItemStorage];
    id v32 = (id)MapsSuggestionsMapItemStreetWithNumber();

    if (v32)
    {
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v34;

      if (v18)
      {
        if (v35)
        {
          if (v33 == v22 && v35 == v24)
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_43;
          }
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v37)
          {
            swift_bridgeObjectRelease();

LABEL_43:
            swift_bridgeObjectRelease();
            if (v14) {
              return v12;
            }
            return 0;
          }
        }
        goto LABEL_40;
      }
    }
    else if (v18)
    {
LABEL_40:
      if (v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v36 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v9 = (id)MapsSuggestionsLocalizedShortcutSubString();

        goto LABEL_15;
      }
      swift_bridgeObjectRelease();

      if (v14) {
        return v12;
      }
      return 0;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  id v9 = (id)MapsSuggestionsLocalizedAddShortcutString();
LABEL_15:
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v12;
}

id sub_1003472F4()
{
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) & 1) != 0
    || (*((unsigned char *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) & 1) != 0
    || [v0 type] == (id)6)
  {
    id v1 = [v0 styleAttributes];
    return v1;
  }
  else
  {
    uint64_t v3 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
    if (!v3
      || (uint64_t v4 = v3, v5 = [v3 _styleAttributes], v4, !v5))
    {
      id v5 = [self markerStyleAttributes];
      if (!v5)
      {
        __break(1u);
        JUMPOUT(0x1003473E0);
      }
    }
    return v5;
  }
}

uint64_t sub_1003473FC(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return _swift_task_switch(sub_100073EA0, 0, 0);
}

uint64_t sub_100347420()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  if (!v1)
  {
    uint64_t v2 = *(void **)(v0 + 56);
    [v2 setSubtitle:0];
    *((unsigned char *)v2 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere) = 0;
  }
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v7 = *(NSObject **)(v0 + 88);
  uint64_t v6 = *(void **)(v0 + 96);
  if (v5)
  {
    uint64_t v13 = *(void **)(v0 + 64);
    uint64_t v14 = *(void **)(v0 + 96);
    char v8 = (uint8_t *)swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    *(_DWORD *)char v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error updating ETA: %@", v8, 0xCu);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v7 = v3;
  }
  swift_errorRelease();

  *(unsigned char *)(*(void *)(v0 + 56) + *(void *)(v0 + 72)) = 0;
  id v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

void sub_1003478F8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

uint64_t sub_100347DE0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

id sub_100347F7C()
{
  if (v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled] != 1) {
    return 0;
  }
  [*(id *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] sourceType];
  int v1 = (unsigned __int16)FavoriteItemSourceType.rawValue.getter();
  if (v1 == (unsigned __int16)FavoriteItemSourceType.rawValue.getter()
    || [v0 type] != (id)2 && objc_msgSend(v0, "type") != (id)3 && objc_msgSend(v0, "type") != (id)5)
  {
    return 0;
  }
  id v4 = [v0 geoMapItem];
  id v2 = v4;
  if (!v4) {
    return v2;
  }
  id v5 = [v4 addressObject];
  swift_unknownObjectRelease();
  if (!v5) {
    return 0;
  }
  id v2 = [v5 cnPostalAddress];

  if (v2)
  {
    [v0 type];
    sub_10022E158();
    id v6 = objc_allocWithZone((Class)CNLabeledValue);
    id v7 = v2;
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v2 = [v6 initWithLabel:v8 value:v7];

    NSString v9 = [v2 identifier];
    if (!v9)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v0 setShortcutIdentifier:v9];
  }
  return v2;
}

void *sub_1003481A8(void *a1)
{
  return sub_10007F5EC(0, a1[2], 0, a1);
}

uint64_t sub_1003481BC(unint64_t a1)
{
  return sub_1001D0710(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1003481D0(void *a1)
{
  return sub_1000FF814(0, a1[2], 0, a1);
}

uint64_t sub_1003481E4(unint64_t a1)
{
  return sub_1001D08A4(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1003481F8(void *a1)
{
  return sub_1000FB364(0, a1[2], 0, a1);
}

uint64_t sub_10034820C(unint64_t a1)
{
  return sub_1001D00BC(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100348220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *id v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  sub_100100830(0, (unint64_t *)&qword_1015D1C60);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        unsigned __int8 v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;

  return specialized Array._endMutation()();
}

uint64_t sub_10034851C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *id v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for InfoCardButtonConfiguration();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        unsigned __int8 v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;

  return specialized Array._endMutation()();
}

uint64_t sub_100348808(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1001D0710(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for RefinementsBarButtonViewModel(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1001302BC(a3, v17);
  }
  return sub_1000FF2E0(a3, &qword_1015D6658);
}

uint64_t sub_100348A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v6 + v9 > *(void *)(v5 + 24) >> 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
  }
  uint64_t v12 = (void *)(v5 + 32 + 8 * a1);
  sub_1000FF33C(&qword_1015DC528);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_25;
  }
  if (v15 < 0)
  {
LABEL_27:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v16 = (char *)(v12 + 1);
  uint64_t v17 = (char *)(v5 + 32 + 8 * a2);
  if (v12 + 1 != (void *)v17 || v16 >= &v17[8 * v15]) {
    memmove(v16, v17, 8 * v15);
  }
  uint64_t v18 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v18, v9);
  uint64_t v19 = v18 + v9;
  if (v14)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  *(void *)(v5 + 16) = v19;
LABEL_17:
  *uint64_t v12 = a3;

  return specialized Array._endMutation()();
}

uint64_t sub_100348BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *id v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  BOOL v14 = (void *)(v13 + 32 + 8 * v6);
  sub_1000FF33C((uint64_t *)&unk_1015DC510);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *BOOL v14 = v3;

  return specialized Array._endMutation()();
}

uint64_t sub_100348EBC(uint64_t a1, uint64_t a2)
{
  return sub_100348EF4(a1, a2, 0, (void (*)(uint64_t))type metadata accessor for InfoCardButtonConfiguration);
}

uint64_t sub_100348ED8(uint64_t a1, uint64_t a2)
{
  return sub_100348EF4(a1, a2, 0, (void (*)(uint64_t))&type metadata accessor for ServerEvaluationStatus);
}

uint64_t sub_100348EF4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = a4;
    uint64_t v7 = a3;
    uint64_t v4 = a2;
    uint64_t v6 = a1;
    unint64_t v8 = *v5;
    if (!(*v5 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v4) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v10 = v4 - v6;
  if (__OFSUB__(v4, v6))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = v6 - v4;
  if (__OFSUB__(0, v10))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v13 = v19 + v30;
    if (!__OFADD__(v19, v30)) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v8 = *v5;
  uint64_t v30 = v6 - v4;
  uint64_t v31 = v6;
  if (*v5 >> 62) {
    goto LABEL_18;
  }
  uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v12 - v10;
  if (__OFADD__(v12, v11)) {
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v8 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
        uint64_t v16 = v7;
        uint64_t v17 = v9;
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v16 = v7;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v9;
  swift_bridgeObjectRetain();
  unint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *uint64_t v5 = v8;
  uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_24:
  uint64_t v20 = (char *)(v15 + 32 + 8 * v31);
  v17(v16);
  swift_arrayDestroy();
  uint64_t v21 = v30;
  if (v30)
  {
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v21 = v30;
      uint64_t v23 = v28 - v4;
      if (!__OFSUB__(v28, v4))
      {
LABEL_27:
        if (v23 < 0)
        {
LABEL_43:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v24 = (char *)(v15 + 32 + 8 * v4);
        if (v31 != v4 || v20 >= &v24[8 * v23])
        {
          memmove(v20, v24, 8 * v23);
          uint64_t v21 = v30;
        }
        if (!(v8 >> 62))
        {
          uint64_t v25 = *(void *)(v15 + 16);
          uint64_t v26 = v25 + v21;
          if (!__OFADD__(v25, v21))
          {
LABEL_33:
            *(void *)(v15 + 16) = v26;
            goto LABEL_34;
          }
          goto LABEL_42;
        }
LABEL_40:
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v26 = v29 + v30;
        if (!__OFADD__(v29, v30)) {
          goto LABEL_33;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v22 = *(void *)(v15 + 16);
      uint64_t v23 = v22 - v4;
      if (!__OFSUB__(v22, v4)) {
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_34:

  return specialized Array._endMutation()();
}

uint64_t sub_100349214()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100349264()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034929C()
{
  return sub_100006C98(&qword_1015DC448);
}

uint64_t sub_1003492A8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003492E0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100349320(uint64_t a1)
{
  return sub_100344FAC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_10034932C()
{
  unint64_t result = qword_1015DC450;
  if (!qword_1015DC450)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1015DC450);
  }
  return result;
}

uint64_t sub_100349384()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003493D4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_100105268;
  *(void *)(v4 + 136) = v2;
  *(void *)(v4 + 144) = v3;
  *(_OWORD *)(v4 + 120) = v5;
  return _swift_task_switch(sub_1003450F4, 0, 0);
}

uint64_t sub_100349494()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10005056C;
  long long v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015DC470 + dword_1015DC470);
  return v5(v2, v3);
}

void sub_100349548(uint64_t a1)
{
  sub_1003444A4(a1, *(void **)(v1 + 16));
}

uint64_t sub_100349550()
{
  return sub_100006C98(&qword_1015DC490);
}

uint64_t sub_10034955C()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10034959C()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v0 + 32);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *long long v5 = v1;
  v5[1] = sub_100105268;
  uint64_t v6 = (uint64_t (*)(char, void *, void *))((char *)&dword_1015DC498 + dword_1015DC498);
  return v6(v2, v4, v3);
}

uint64_t sub_10034965C()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100105268;
  long long v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015DC4C8 + dword_1015DC4C8);
  return v5(v2, v3);
}

uint64_t sub_100349714()
{
  char v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100105268;
  long long v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1015DC4E8 + dword_1015DC4E8);
  return v5(v2, v3);
}

Swift::Int sub_1003497FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100356240(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100353F14(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100349868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, unsigned int a8, int a9)
{
  unsigned int v26 = a7;
  unsigned int v27 = a8;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, void, void, int))(a1 + 32);
  if (!a2)
  {
    uint64_t v19 = 0;
    int v21 = a9;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
    goto LABEL_6;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2 = v20;
  int v21 = a9;
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
LABEL_6:
  swift_retain();
  v18(v19, a2, v17, a4, a5, a6, v26, v27, v21);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1001C0FAC((uint64_t)v17);
}

UIColor sub_100349A0C(char a1)
{
  uint64_t v1 = *(void *)&a22ff22[8 * a1];
  sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
  v2._countAndFlagsBits = v1;
  v2._object = (void *)0xE600000000000000;
  return UIColor.init(hex:)(v2);
}

Swift::Int sub_100349A60()
{
  return Hasher._finalize()();
}

uint64_t sub_100349AAC()
{
  return String.hash(into:)();
}

Swift::Int sub_100349AB4()
{
  return Hasher._finalize()();
}

uint64_t sub_100349AFC(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

unint64_t sub_100349B2C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003565F0(*a1);
  *a2 = result;
  return result;
}

void sub_100349B58(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_100349B64(void *a1@<X8>)
{
  *a1 = &off_1012D82A0;
}

uint64_t sub_100349B74()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GEOAPLatencyBucketValues()
{
  return self;
}

Swift::Int sub_100349BA8()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v0[4]);
  Hasher._combine(_:)(v0[5]);
  Hasher._combine(_:)(v0[6]);
  return Hasher._finalize()();
}

Swift::Int sub_100349C08()
{
  return sub_100349BA8();
}

void sub_100349C2C()
{
  uint64_t v1 = *v0;
  Hasher._combine(_:)(*(_DWORD *)(*v0 + 16));
  Hasher._combine(_:)(*(_DWORD *)(v1 + 20));
  Hasher._combine(_:)(*(_DWORD *)(v1 + 24));
}

Swift::Int sub_100349C74()
{
  Hasher.init(_seed:)();
  uint64_t v1 = *v0;
  Hasher._combine(_:)(*(_DWORD *)(*v0 + 16));
  Hasher._combine(_:)(*(_DWORD *)(v1 + 20));
  Hasher._combine(_:)(*(_DWORD *)(v1 + 24));
  return Hasher._finalize()();
}

BOOL sub_100349CD0(_DWORD **a1, _DWORD **a2)
{
  return sub_10035635C(*a1, *a2);
}

uint64_t sub_100349CDC(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(_DWORD *)(v2 + 32));
  Hasher._combine(_:)(*(_DWORD *)(v2 + 36));
  Hasher._combine(_:)(*(_DWORD *)(v2 + 40));
  Hasher._combine(_:)(*(unsigned char *)(v2 + 56));
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_10025CEF4(a1, v4);
  return swift_bridgeObjectRelease();
}

unint64_t sub_100349D88(int a1, int a2, unsigned int a3)
{
  uint64_t v4 = (_DWORD *)v3;
  unsigned __int8 v7 = sub_100356398(a3);
  uint64_t v8 = (uint64_t *)(v3 + 48);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 48);
  if (!*(void *)(v9 + 16) || (unint64_t result = sub_1001EA6A8(v7), (v11 & 1) == 0))
  {
    type metadata accessor for GEOAPLatencyBucketValues();
    uint64_t v20 = (_DWORD *)swift_allocObject();
    v20[4] = a1;
    v20[5] = a2;
    v20[6] = 1;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    sub_100352070((uint64_t)v20, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v8 = v28;
    swift_bridgeObjectRelease();
    unint64_t result = swift_endAccess();
LABEL_8:
    int v22 = v4[8];
    BOOL v14 = __CFADD__(v22, a1);
    int v23 = v22 + a1;
    if (v14)
    {
      __break(1u);
    }
    else
    {
      v4[8] = v23;
      int v24 = v4[9];
      BOOL v14 = __CFADD__(v24, a2);
      int v25 = v24 + a2;
      if (!v14)
      {
        v4[9] = v25;
        int v26 = v4[10];
        BOOL v14 = __CFADD__(v26, 1);
        int v27 = v26 + 1;
        if (!v14)
        {
          v4[10] = v27;
          return result;
        }
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = *(_DWORD **)(*(void *)(v9 + 56) + 8 * result);
  int v13 = v12[4];
  BOOL v14 = __CFADD__(v13, a1);
  int v15 = v13 + a1;
  if (v14)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v12[4] = v15;
  int v16 = v12[5];
  BOOL v14 = __CFADD__(v16, a2);
  int v17 = v16 + a2;
  if (v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12[5] = v17;
  int v18 = v12[6];
  BOOL v14 = __CFADD__(v18, 1);
  int v19 = v18 + 1;
  if (!v14)
  {
    v12[6] = v19;
    goto LABEL_8;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100349F08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GEOAPHistoricalModelItem()
{
  return self;
}

uint64_t type metadata accessor for GEOAPHistoricalUploadDataSource(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015DC7A8);
}

uint64_t sub_100349F8C()
{
  return swift_initClassMetadata2();
}

Swift::Int sub_100349FCC()
{
  Hasher.init(_seed:)();
  sub_100349CDC((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_10034A010(uint64_t a1)
{
  return sub_100349CDC(a1);
}

Swift::Int sub_10034A034()
{
  Hasher.init(_seed:)();
  sub_100349CDC((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_10034A074(uint64_t *a1, uint64_t *a2)
{
  return sub_100356254(*a1, *a2);
}

uint64_t sub_10034A080(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015DCB48);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();
  uint64_t result = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a2)
  {
    uint64_t v8 = *(void *)(result + 16 * a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return v8;
  }
  __break(1u);
  return result;
}

void *sub_10034A198(void *a1, uint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v7 = sub_1000FF33C(&qword_1015DCB48);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = a3;
  id v12 = a1;
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();
  uint64_t result = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result[2] <= a4)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_10034A300(uint64_t a1, unint64_t a2)
{
  return sub_100356600(a2);
}

id sub_10034A308(void *a1, uint64_t a2, void *a3, unint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_100356600(a4);
  uint64_t v9 = v8;

  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }

  return v10;
}

id sub_10034A398()
{
  return sub_10034B7F4(0, (uint64_t (*)(void))type metadata accessor for GEOAPHistoricalUploadDataSource);
}

uint64_t sub_10034A3B4()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for GEOAPHistoricalUploadDataSource(0));
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)();
}

uint64_t sub_10034A408()
{
  return type metadata accessor for GEOAPHistoricalUploadDataSource(0);
}

uint64_t sub_10034A410()
{
  *(void *)(v1 + 64) = v0;
  return _swift_task_switch(sub_10034A430, 0, 0);
}

id sub_10034A430()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = _swiftEmptyDictionarySingleton;
  type metadata accessor for GEOAPHistoricalModelItem();
  uint64_t v2 = swift_allocObject();
  *(unsigned char *)(v2 + 56) = 0;
  *(void *)(v2 + 24) = 0xE900000000000053;
  *(void *)(v2 + 32) = 0;
  *(_DWORD *)(v2 + 40) = 0;
  *(void *)(v2 + 16) = 0x455059545F4C4C41;
  *(void *)(v2 + 48) = _swiftEmptyDictionarySingleton;
  id result = [self sharedManager];
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v0[8];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v1;
    *(void *)(v6 + 24) = v2;
    v0[6] = sub_100356C14;
    v0[7] = v6;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100349868;
    v0[5] = &unk_1012E5AB8;
    id v7 = _Block_copy(v0 + 2);
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v8 = (void *)swift_allocObject();
    long long v8[2] = v1;
    v8[3] = 0x455059545F4C4C41;
    v8[4] = 0xE900000000000053;
    v8[5] = v2;
    v8[6] = v5;
    v0[6] = sub_100356C94;
    v0[7] = v8;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10008C380;
    v0[5] = &unk_1012E5B08;
    uint64_t v9 = _Block_copy(v0 + 2);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v4 showHistoryOfAge:10000000 withVisitorBlock:v7 completion:v9];
    _Block_release(v9);
    _Block_release(v7);

    swift_release();
    swift_release();
    NSString v10 = (uint64_t (*)(void))v0[1];
    return (id)v10();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10034A6B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a5 == 8) {
    uint64_t v13 = 7;
  }
  else {
    uint64_t v13 = a5;
  }
  switch((int)v13)
  {
    case 0:
      NSString v14 = @"UNSPECIFIED";
      goto LABEL_25;
    case 1:
      NSString v14 = @"COHORT";
      goto LABEL_25;
    case 2:
      NSString v14 = @"15MO";
      goto LABEL_25;
    case 3:
      NSString v14 = @"LONG";
      goto LABEL_25;
    case 4:
      NSString v14 = @"LONG_APPID";
      goto LABEL_25;
    case 5:
      NSString v14 = @"SHORT";
      goto LABEL_25;
    case 6:
      NSString v14 = @"SHORT_NAV";
      goto LABEL_25;
    case 7:
      NSString v14 = @"NO";
      goto LABEL_25;
    case 8:
      NSString v14 = @"NO_WITH_TIME";
      goto LABEL_25;
    case 9:
      NSString v14 = @"NAV_TRACE";
      goto LABEL_25;
    case 10:
      NSString v14 = @"REALTIME_TRAFFIC";
      goto LABEL_25;
    case 11:
      NSString v14 = @"BATCH_TRAFFIC";
      goto LABEL_25;
    case 12:
      NSString v14 = @"WIFI_PROBE";
      goto LABEL_25;
    case 13:
      NSString v14 = @"PRESSURE_DATA";
      goto LABEL_25;
    case 14:
      NSString v14 = @"CURATED_COLLECTION";
      goto LABEL_25;
    case 15:
      NSString v14 = @"LOG_DISCARD";
      goto LABEL_25;
    case 16:
      NSString v14 = @"POI_BUSYNESS";
      goto LABEL_25;
    case 17:
      NSString v14 = @"PREDEX_TRAINING";
      goto LABEL_25;
    case 19:
      NSString v14 = @"STRN_HARVEST";
LABEL_25:
      uint64_t v15 = v14;
      break;
    default:
      NSString v14 = +[NSString stringWithFormat:@"(unknown: %i)", v13];
      break;
  }
  int v16 = v14;
  if (!v16)
  {
    __break(1u);
    JUMPOUT(0x10034AA10);
  }
  int v17 = v16;
  int v18 = (uint64_t *)(a10 + 16);
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  swift_beginAccess();
  uint64_t v22 = *(void *)(*(void *)(a10 + 16) + 16);
  swift_bridgeObjectRetain();
  if (!v22 || (sub_100103580(v19, v21), (v23 & 1) == 0))
  {
    swift_endAccess();
    type metadata accessor for GEOAPHistoricalModelItem();
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 56) = 0;
    *(void *)(v24 + 24) = v21;
    *(void *)(v24 + 32) = 0;
    *(_DWORD *)(v24 + 40) = 0;
    *(void *)(v24 + 16) = v19;
    *(void *)(v24 + 48) = _swiftEmptyDictionarySingleton;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v18;
    *int v18 = 0x8000000000000000;
    sub_1003521A8(v24, v19, v21, isUniquelyReferenced_nonNull_native);
    *int v18 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_beginAccess();
    if (!*(void *)(*v18 + 16))
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      return sub_100349D88(a6, a7, a4);
    }
    swift_bridgeObjectRetain();
    sub_100103580(v19, v21);
    if ((v26 & 1) == 0)
    {
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      return sub_100349D88(a6, a7, a4);
    }
  }
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease_n();
  sub_100349D88(a6, a7, a4);
  swift_release();
  return sub_100349D88(a6, a7, a4);
}

uint64_t sub_10034AA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a5;
  uint64_t v9 = sub_1000FF33C(&qword_1015DCB48);
  uint64_t v42 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - v12;
  NSString v14 = (uint64_t *)(a1 + 16);
  type metadata accessor for GEOAPHistoricalModelItem();
  sub_10034B50C();
  sub_10034E828((unint64_t *)&unk_1015DC850, v15, (void (*)(uint64_t))type metadata accessor for GEOAPHistoricalModelItem);
  NSDiffableDataSourceSnapshot.init()();
  swift_beginAccess();
  uint64_t v16 = swift_bridgeObjectRetain();
  int v17 = sub_10034F0D8(v16);
  swift_bridgeObjectRelease();
  id v48 = v17;
  swift_retain();
  sub_1003497FC((uint64_t *)&v48);
  swift_release();
  uint64_t v18 = (uint64_t)v48;
  uint64_t v47 = sub_1000FF33C(&qword_1015D6EF8);
  uint64_t v19 = swift_allocObject();
  long long v46 = xmmword_100F5CF70;
  *(_OWORD *)(v19 + 16) = xmmword_100F5CF70;
  *(void *)(v19 + 32) = a2;
  *(void *)(v19 + 40) = a3;
  swift_bridgeObjectRetain();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v19);
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1000FF33C(&qword_1015CD310);
  uint64_t v20 = swift_allocObject();
  long long v44 = xmmword_100F5DFF0;
  *(_OWORD *)(v20 + 16) = xmmword_100F5DFF0;
  *(void *)(v20 + 32) = a4;
  id v48 = (void *)v20;
  specialized Array._endMutation()();
  id v48 = (void *)a2;
  uint64_t v49 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v18;
  uint64_t v21 = *(void *)(v18 + 16);
  if (v21)
  {
    uint64_t v22 = (uint64_t *)(v43 + 40);
    while (1)
    {
      uint64_t v24 = *(v22 - 1);
      uint64_t v23 = *v22;
      swift_beginAccess();
      uint64_t v25 = *v14;
      uint64_t v26 = *(void *)(*v14 + 16);
      swift_bridgeObjectRetain();
      if (v26)
      {
        swift_bridgeObjectRetain();
        unint64_t v27 = sub_100103580(v24, v23);
        if (v28)
        {
          uint64_t v29 = *(void *)(*(void *)(v25 + 56) + 8 * v27);
          swift_retain();
        }
        else
        {
          uint64_t v29 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = 0;
      }
      swift_endAccess();
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v46;
      *(void *)(v30 + 32) = v24;
      *(void *)(v30 + 40) = v23;
      swift_bridgeObjectRetain();
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v30);
      swift_bridgeObjectRelease();
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v44;
      if (!v29) {
        break;
      }
      v22 += 2;
      *(void *)(v31 + 32) = v29;
      id v48 = (void *)v31;
      specialized Array._endMutation()();
      id v48 = (void *)v24;
      uint64_t v49 = v23;
      swift_retain();
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if (!--v21) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_11:
    swift_release();
    swift_beginAccess();
    uint64_t v32 = v41;
    *(void *)(v41 + 16) = *v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = v32 + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_snapshot;
    swift_beginAccess();
    uint64_t v34 = v42;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 24))(v33, v13, v9);
    swift_endAccess();
    uint64_t v35 = *(void **)(v32 + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_dataSource);
    if (v35)
    {
      NSString v36 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v40, v33, v9);
      id v37 = v35;
      dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

      unint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v38(v36, v9);
      return ((uint64_t (*)(char *, uint64_t))v38)(v13, v9);
    }
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_10034AF34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015DCB48);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [a1 dequeueReusableCellWithIdentifier:v10];

  if (!v11) {
    goto LABEL_17;
  }
  type metadata accessor for GEOAPHistoricalUploadTableViewCell();
  uint64_t v12 = (char *)swift_dynamicCastClassUnconditional();
  unint64_t v13 = IndexPath.section.getter();
  unint64_t v28 = IndexPath.row.getter();
  if (v13) {
    uint64_t v14 = 3;
  }
  else {
    uint64_t v14 = 0;
  }
  [v12 setAccessoryType:v13 != 0];
  [v12 setSelectionStyle:v14];
  uint64_t v15 = a4 + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_snapshot;
  swift_beginAccess();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v9, v15, v6);
  uint64_t v17 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v13 >= *(void *)(v17 + 16))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v27 = v12;
  unint64_t v19 = v17 + 16 * v13;
  uint64_t v20 = *(void *)(v19 + 32);
  uint64_t v21 = *(void *)(v19 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16(v9, v15, v6);
  uint64_t v29 = v20;
  uint64_t v30 = v21;
  uint64_t v22 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  v18(v9, v6);
  swift_bridgeObjectRelease();
  if ((v22 & 0xC000000000000001) != 0)
  {
LABEL_14:
    uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v23 = v27;
    goto LABEL_11;
  }
  uint64_t v23 = v27;
  if ((v28 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v28 < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v24 = *(void *)(v22 + 8 * v28 + 32);
    swift_retain();
LABEL_11:
    swift_bridgeObjectRelease();
    type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(void *)&v23[OBJC_IVAR____TtC4Maps34GEOAPHistoricalUploadTableViewCell_cellConfig] = v25;
    swift_release();
    return;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_10034B218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100105268;
  v6[8] = a4;
  return _swift_task_switch(sub_10034A430, 0, 0);
}

uint64_t sub_10034B2C4()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_snapshot;
  uint64_t v2 = sub_1000FF33C(&qword_1015DCB48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10034B388()
{
  return type metadata accessor for GEOAPHistoricalUploadDataModel(0);
}

uint64_t type metadata accessor for GEOAPHistoricalUploadDataModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015DC828);
}

void sub_10034B3B0()
{
  sub_10034B458();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10034B458()
{
  if (!qword_1015DC840)
  {
    type metadata accessor for GEOAPHistoricalModelItem();
    sub_10034B50C();
    sub_10034E828((unint64_t *)&unk_1015DC850, v0, (void (*)(uint64_t))type metadata accessor for GEOAPHistoricalModelItem);
    unint64_t v1 = type metadata accessor for NSDiffableDataSourceSnapshot();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1015DC840);
    }
  }
}

unint64_t sub_10034B50C()
{
  unint64_t result = qword_1015DC848;
  if (!qword_1015DC848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DC848);
  }
  return result;
}

id sub_10034B7DC(uint64_t a1)
{
  return sub_10034B7F4(a1, type metadata accessor for GEOAPHistoricalUploadTableViewCell);
}

id sub_10034B7F4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  [super dealloc];
}

uint64_t type metadata accessor for GEOAPHistoricalUploadTableViewCell()
{
  return self;
}

id sub_10034B860(unsigned int a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone(v2) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v5 = objc_allocWithZone((Class)UIView);
  id v132 = v4;
  id v6 = [v5 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = self;
  id v8 = [v7 systemLightGrayColor];
  [v6 setBackgroundColor:v8];

  [v132 addSubview:v6];
  id v127 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v127 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = [v7 systemBlackColor];
  [v127 setBackgroundColor:v9];

  [v6 addSubview:v127];
  id v126 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v126 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [v7 systemBlackColor];
  [v126 setBackgroundColor:v10];

  [v6 addSubview:v126];
  id v11 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v129 = self;
  id v12 = [v129 systemFontOfSize:11.0];
  [v11 setFont:v12];

  NSString v13 = String._bridgeToObjectiveC()();
  [v11 setText:v13];

  id v125 = v11;
  [v11 setTextAlignment:1];
  CGAffineTransformMakeRotation(&v137, -1.57079633);
  [v11 setTransform:&v137];
  [v6 addSubview:v11];
  id v131 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100F6E490;
  id v15 = [v6 leadingAnchor];
  id v16 = [v132 layoutMarginsGuide];
  id v17 = [v16 leadingAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17 constant:10.0];
  *(void *)(v14 + 32) = v18;
  id v19 = [v6 trailingAnchor];
  id v20 = [v132 layoutMarginsGuide];
  id v21 = [v20 trailingAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21];
  *(void *)(v14 + 40) = v22;
  id v23 = [v6 topAnchor];
  id v24 = [v132 layoutMarginsGuide];
  id v25 = [v24 topAnchor];

  id v26 = [v23 constraintEqualToAnchor:v25];
  *(void *)(v14 + 48) = v26;
  id v27 = [v6 bottomAnchor];
  id v28 = [v132 layoutMarginsGuide];
  id v29 = [v28 bottomAnchor];

  id v30 = [v27 constraintEqualToAnchor:v29 constant:-10.0];
  *(void *)(v14 + 56) = v30;
  id v31 = [v127 topAnchor];
  id v32 = [v6 topAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v14 + 64) = v33;
  id v34 = [v127 leadingAnchor];
  id v35 = [v6 leadingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 constant:-1.0];

  *(void *)(v14 + 72) = v36;
  id v37 = [v127 trailingAnchor];
  id v38 = [v6 leadingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v14 + 80) = v39;
  id v40 = [v127 bottomAnchor];
  id v41 = [v132 layoutMarginsGuide];
  id v42 = [v41 bottomAnchor];

  id v43 = [v40 constraintEqualToAnchor:v42];
  *(void *)(v14 + 88) = v43;
  id v44 = [v125 centerXAnchor];
  id v45 = [v132 layoutMarginsGuide];
  id v46 = [v45 leadingAnchor];

  id v47 = [v44 constraintEqualToAnchor:v46 constant:3.0];
  *(void *)(v14 + 96) = v47;
  id v48 = [v125 centerYAnchor];
  id v49 = [v6 centerYAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49];

  *(void *)(v14 + 104) = v50;
  id v51 = [v125 widthAnchor];
  id v52 = [v6 heightAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v14 + 112) = v53;
  id v54 = [v126 leadingAnchor];
  id v55 = [v132 layoutMarginsGuide];
  id v56 = [v55 leadingAnchor];

  id v57 = [v54 constraintEqualToAnchor:v56];
  *(void *)(v14 + 120) = v57;
  id v58 = [v126 trailingAnchor];
  id v59 = [v132 layoutMarginsGuide];
  id v60 = [v59 trailingAnchor];

  id v61 = [v58 constraintEqualToAnchor:v60];
  *(void *)(v14 + 128) = v61;
  id v62 = [v126 topAnchor];
  id v63 = [v6 bottomAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v14 + 136) = v64;
  id v65 = [v126 bottomAnchor];
  id v66 = [v6 bottomAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66 constant:1.0];

  *(void *)(v14 + 144) = v67;
  *(void *)&v137.a = v14;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v131 activateConstraints:isa];

  id v136 = v6;
  id v69 = [v6 leftAnchor];
  int v128 = 0;
  uint64_t v70 = 0;
  double v71 = (double)a1;
  float v72 = (float)a1;
  uint64_t v130 = a2;
  do
  {
    uint64_t v113 = v69;
    char v114 = *((unsigned char *)&off_1012D82C8 + v70 + 32);
    if (*(void *)(a2 + 16) && (unint64_t v115 = sub_1001EA6A8(*((unsigned char *)&off_1012D82C8 + v70 + 32)), (v116 & 1) != 0))
    {
      unsigned int v117 = *(_DWORD *)(*(void *)(*(void *)(a2 + 56) + 8 * v115) + 16);
      if (__CFADD__(v128, v117))
      {
        __break(1u);
        JUMPOUT(0x10034CB94);
      }
      double v118 = (double)v117 / v71;
      unsigned int v119 = v128 + v117;
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v120 = swift_allocObject();
      *(_OWORD *)(v120 + 16) = xmmword_100F5CF70;
      int v128 = v119;
      *(void *)(v120 + 56) = &type metadata for Float;
      *(void *)(v120 + 64) = &protocol witness table for Float;
      *(float *)(v120 + 32) = (float)((float)v119 * 100.0) / v72;
      swift_retain();
      String.init(format:_:)();
      swift_release();
    }
    else
    {
      double v118 = 0.0;
    }
    id v121 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    Class v122 = sub_100349A0C(v114).super.isa;
    [v121 setBackgroundColor:v122];

    [v121 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v136 addSubview:v121];
    id v123 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v123 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v135 = v70 + 1;
    NSString v73 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v123 setText:v73];

    [v123 setTextAlignment:1];
    id v74 = [v129 systemFontOfSize:9.0];
    id v133 = v123;
    [v123 setFont:v74];

    [v136 addSubview:v123];
    id v75 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v75 setTranslatesAutoresizingMaskIntoConstraints:0];
    NSString v76 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v75 setText:v76];

    [v75 setTextAlignment:1];
    id v77 = [v129 systemFontOfSize:10.0];
    [v75 setFont:v77];

    [v136 addSubview:v75];
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_100F6A730;
    id v79 = [v121 widthAnchor];
    id v80 = [v136 widthAnchor];
    id v81 = [v79 constraintEqualToAnchor:v80 multiplier:0.166666667];

    *(void *)(v78 + 32) = v81;
    id v82 = [v121 heightAnchor];
    id v83 = [v136 heightAnchor];
    id v84 = [v82 constraintEqualToAnchor:v83 multiplier:v118];

    *(void *)(v78 + 40) = v84;
    id v85 = [v121 bottomAnchor];
    id v86 = [v136 bottomAnchor];
    id v87 = [v85 constraintEqualToAnchor:v86];

    *(void *)(v78 + 48) = v87;
    id v88 = [v121 leftAnchor];
    id v89 = [v88 constraintEqualToAnchor:v113];

    *(void *)(v78 + 56) = v89;
    id v90 = [v133 topAnchor];
    id v91 = [v121 bottomAnchor];
    id v92 = [v90 constraintEqualToAnchor:v91 constant:2.0];

    *(void *)(v78 + 64) = v92;
    id v93 = [v133 bottomAnchor];
    id v94 = [v132 layoutMarginsGuide];
    id v95 = [v94 bottomAnchor];

    id v96 = [v93 constraintEqualToAnchor:v95];
    *(void *)(v78 + 72) = v96;
    id v97 = [v133 leftAnchor];
    id v98 = [v97 constraintEqualToAnchor:v113];

    *(void *)(v78 + 80) = v98;
    id v99 = [v133 widthAnchor];
    id v100 = [v121 widthAnchor];
    id v101 = [v99 constraintEqualToAnchor:v100];

    *(void *)(v78 + 88) = v101;
    id v102 = [v75 topAnchor];
    id v103 = [v136 topAnchor];
    id v104 = [v102 constraintEqualToAnchor:v103 constant:2.0];

    *(void *)(v78 + 96) = v104;
    id v105 = [v75 heightAnchor];
    id v106 = [v105 constraintEqualToConstant:10.0];

    *(void *)(v78 + 104) = v106;
    id v107 = [v75 leftAnchor];
    id v108 = [v107 constraintEqualToAnchor:v113];

    *(void *)(v78 + 112) = v108;
    id v109 = [v75 widthAnchor];
    id v110 = [v121 widthAnchor];
    id v111 = [v109 constraintEqualToAnchor:v110];

    *(void *)(v78 + 120) = v111;
    *(void *)&v137.a = v78;
    specialized Array._endMutation()();
    Class v112 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v131 activateConstraints:v112];

    id v69 = [v121 rightAnchor];
    ++v70;
    a2 = v130;
  }
  while (v135 != 6);

  swift_bridgeObjectRelease();
  return v132;
}

id sub_10034CC94(uint64_t a1)
{
  return sub_10034B7F4(a1, type metadata accessor for HistogramView);
}

uint64_t type metadata accessor for HistogramView()
{
  return self;
}

uint64_t sub_10034CCD0(uint64_t a1)
{
  sub_1000FF4D4(a1, (uint64_t)v6);
  sub_1000FF33C(&qword_1015D3980);
  type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration();
  if (swift_dynamicCast())
  {
    *(void *)(v1 + OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView_currentConfig) = v5;
    swift_retain();
    swift_release();
    uint64_t v3 = swift_retain();
    sub_10034DAEC(v3);
    swift_release();
    swift_release();
  }
  return sub_1000FF22C(a1);
}

void (*sub_10034CD8C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView_currentConfig;
  v3[16] = v1;
  v3[17] = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  uint64_t v6 = type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration();
  v3[18] = v6;
  v3[3] = v6;
  v3[4] = sub_10034E828(&qword_1015DCB38, v7, (void (*)(uint64_t))type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration);
  *uint64_t v3 = v5;
  swift_retain();
  return sub_10034CE44;
}

void sub_10034CE44(uint64_t *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  uint64_t v4 = *a1 + 40;
  uint64_t v5 = *a1 + 80;
  sub_1000FF4D4(*a1, v4);
  if (a2)
  {
    sub_1000FF4D4(v4, v5);
    sub_1000FF33C(&qword_1015D3980);
    if (swift_dynamicCast())
    {
      *(void *)(v3[16] + v3[17]) = v3[15];
      swift_retain();
      swift_release();
      uint64_t v6 = swift_retain();
      sub_10034DAEC(v6);
      swift_release();
      swift_release();
    }
    sub_1000FF22C(v4);
  }
  else
  {
    sub_1000FF33C(&qword_1015D3980);
    if (swift_dynamicCast())
    {
      *(void *)(v3[16] + v3[17]) = v3[10];
      swift_retain();
      swift_release();
      uint64_t v7 = swift_retain();
      sub_10034DAEC(v7);
      swift_release();
      swift_release();
    }
  }
  sub_1000FF22C((uint64_t)v3);

  free(v3);
}

id sub_10034CF9C()
{
  return sub_10034CFC0(&OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___topLabel);
}

id sub_10034CFA8()
{
  return sub_10034CFC0(&OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___midLabel);
}

id sub_10034CFB4()
{
  return sub_10034CFC0(&OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___bottomLabel);
}

id sub_10034CFC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_10034D054()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___histogramViewContainer;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___histogramViewContainer);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___histogramViewContainer);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for HistogramView();
    uint64_t v5 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView_currentConfig) + 16);
    unsigned int v6 = *(_DWORD *)(v5 + 32);
    swift_beginAccess();
    uint64_t v7 = *(void *)(v5 + 48);
    swift_bridgeObjectRetain();
    id v8 = sub_10034B860(v6, v7);
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_10034D120(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___topLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___midLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___bottomLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView____lazy_storage___histogramViewContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView_currentConfig] = a1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for GEOAPHistoricalUploadTableViewCellView();
  swift_retain();
  id v3 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10034D1DC();
  sub_10034DAEC(a1);
  swift_release();

  return v3;
}

void sub_10034D1DC()
{
  id v1 = sub_10034CF9C();
  [v0 addSubview:v1];

  id v2 = sub_10034CFA8();
  [v0 addSubview:v2];

  id v3 = sub_10034CFB4();
  [v0 addSubview:v3];

  id v4 = sub_10034D054();
  [v0 addSubview:v4];

  id v79 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F6E490;
  id v6 = sub_10034CF9C();
  id v7 = [v6 leadingAnchor];

  id v8 = [v0 layoutMarginsGuide];
  id v9 = [v8 leadingAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9];
  *(void *)(v5 + 32) = v10;
  id v11 = sub_10034CF9C();
  id v12 = [v11 topAnchor];

  id v13 = [v0 layoutMarginsGuide];
  id v14 = [v13 topAnchor];

  id v15 = [v12 constraintEqualToAnchor:v14];
  *(void *)(v5 + 40) = v15;
  id v16 = sub_10034CF9C();
  id v17 = [v16 heightAnchor];

  id v18 = [v0 layoutMarginsGuide];
  id v19 = [v18 heightAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19 multiplier:0.333];
  *(void *)(v5 + 48) = v20;
  id v21 = sub_10034CFA8();
  id v22 = [v21 leadingAnchor];

  id v23 = [v0 layoutMarginsGuide];
  id v24 = [v23 leadingAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24];
  *(void *)(v5 + 56) = v25;
  id v26 = sub_10034CFA8();
  id v27 = [v26 topAnchor];

  id v28 = sub_10034CF9C();
  id v29 = [v28 bottomAnchor];

  id v30 = [v27 constraintEqualToAnchor:v29];
  *(void *)(v5 + 64) = v30;
  id v31 = sub_10034CFA8();
  id v32 = [v31 heightAnchor];

  id v33 = [v0 layoutMarginsGuide];
  id v34 = [v33 heightAnchor];

  id v35 = [v32 constraintEqualToAnchor:v34 multiplier:0.333];
  *(void *)(v5 + 72) = v35;
  id v36 = sub_10034CFB4();
  id v37 = [v36 leadingAnchor];

  id v38 = [v0 layoutMarginsGuide];
  id v39 = [v38 leadingAnchor];

  id v40 = [v37 constraintEqualToAnchor:v39];
  *(void *)(v5 + 80) = v40;
  id v41 = sub_10034CFB4();
  id v42 = [v41 topAnchor];

  id v43 = sub_10034CFA8();
  id v44 = [v43 bottomAnchor];

  id v45 = [v42 constraintEqualToAnchor:v44];
  *(void *)(v5 + 88) = v45;
  id v46 = sub_10034CFB4();
  id v47 = [v46 bottomAnchor];

  id v48 = [v0 layoutMarginsGuide];
  id v49 = [v48 bottomAnchor];

  id v50 = [v47 constraintEqualToAnchor:v49];
  *(void *)(v5 + 96) = v50;
  id v51 = sub_10034D054();
  id v52 = [v51 heightAnchor];

  id v53 = [v52 constraintEqualToConstant:100.0];
  *(void *)(v5 + 104) = v53;
  id v54 = sub_10034D054();
  id v55 = [v54 topAnchor];

  id v56 = [v0 layoutMarginsGuide];
  id v57 = [v56 topAnchor];

  id v58 = [v55 constraintEqualToAnchor:v57];
  *(void *)(v5 + 112) = v58;
  id v59 = sub_10034D054();
  id v60 = [v59 bottomAnchor];

  id v61 = [v0 layoutMarginsGuide];
  id v62 = [v61 bottomAnchor];

  id v63 = [v60 constraintEqualToAnchor:v62];
  *(void *)(v5 + 120) = v63;
  id v64 = sub_10034D054();
  id v65 = [v64 widthAnchor];

  id v66 = [v0 layoutMarginsGuide];
  id v67 = [v66 widthAnchor];

  id v68 = [v65 constraintEqualToAnchor:v67 multiplier:0.7];
  *(void *)(v5 + 128) = v68;
  id v69 = sub_10034D054();
  id v70 = [v69 trailingAnchor];

  id v71 = [v0 layoutMarginsGuide];
  id v72 = [v71 trailingAnchor];

  id v73 = [v70 constraintEqualToAnchor:v72];
  *(void *)(v5 + 136) = v73;
  id v74 = sub_10034D054();
  id v75 = [v74 leftAnchor];

  id v76 = sub_10034CF9C();
  id v77 = [v76 rightAnchor];

  id v78 = [v75 constraintEqualToAnchor:v77];
  *(void *)(v5 + 144) = v78;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v79 activateConstraints:isa];
}

uint64_t sub_10034DAEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  char v2 = *(unsigned char *)(v1 + 56);
  swift_retain();
  id v3 = sub_10034CF9C();
  if (v2)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    [v3 setText:v4, v15, v16];
  }
  else
  {
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
    int v6 = *(_DWORD *)(v1 + 40);
    *(void *)(v5 + 56) = &type metadata for UInt32;
    *(void *)(v5 + 64) = &protocol witness table for UInt32;
    *(_DWORD *)(v5 + 32) = v6;
    String.init(format:_:)();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v7];

    id v8 = sub_10034CFA8();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100F5CF70;
    int v10 = *(_DWORD *)(v1 + 32);
    *(void *)(v9 + 56) = &type metadata for UInt32;
    *(void *)(v9 + 64) = &protocol witness table for UInt32;
    *(_DWORD *)(v9 + 32) = v10;
    String.init(format:_:)();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setText:v11];

    id v3 = sub_10034CFB4();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100F5CF70;
    int v13 = *(_DWORD *)(v1 + 36);
    *(void *)(v12 + 56) = &type metadata for UInt32;
    *(void *)(v12 + 64) = &protocol witness table for UInt32;
    *(_DWORD *)(v12 + 32) = v13;
    String.init(format:_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v4];
  }

  return swift_release();
}

id sub_10034DD34(uint64_t a1)
{
  return sub_10034B7F4(a1, type metadata accessor for GEOAPHistoricalUploadTableViewCellView);
}

uint64_t type metadata accessor for GEOAPHistoricalUploadTableViewCellView()
{
  return self;
}

uint64_t sub_10034DDEC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC4Maps38GEOAPHistoricalUploadTableViewCellView_currentConfig);
  a1[3] = type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration();
  a1[4] = sub_10034E828(&qword_1015DCB38, v4, (void (*)(uint64_t))type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration);
  *a1 = v3;

  return swift_retain();
}

void (*sub_10034DE74(void *a1))(void *a1)
{
  char v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10034CD8C(v2);
  return sub_1001C0148;
}

uint64_t type metadata accessor for GEOAPHistoricalUploadTableViewCellConfiguration()
{
  return self;
}

id sub_10034DEF0()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for GEOAPHistoricalUploadTableViewCellView());
  uint64_t v1 = swift_retain();
  id v2 = sub_10034D120(v1);
  sub_10034E828(&qword_1015DCB40, v3, (void (*)(uint64_t))type metadata accessor for GEOAPHistoricalUploadTableViewCellView);
  return v2;
}

id sub_10034E1B8()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for GEOAPHistoricalUploadDebugController();
  v17.receiver = v0;
  v17.super_class = v4;
  [super viewDidLoad];
  id result = [v0 tableView];
  if (result)
  {
    int v6 = result;
    type metadata accessor for GEOAPHistoricalUploadTableViewCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v8];

    uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC4Maps36GEOAPHistoricalUploadDebugController_dataModel];
    id result = [v0 tableView];
    if (result)
    {
      int v10 = result;
      objc_allocWithZone((Class)type metadata accessor for GEOAPHistoricalUploadDataSource(0));
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_100356A68;
      *(void *)(v11 + 24) = v9;
      id v12 = v10;
      swift_retain();
      uint64_t v13 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
      id v14 = *(void **)(v9 + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_dataSource);
      *(void *)(v9 + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_dataSource) = v13;

      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
      uint64_t v16 = (void *)swift_allocObject();
      long long v16[2] = 0;
      v16[3] = 0;
      v16[4] = v9;
      swift_retain();
      sub_100042AF4((uint64_t)v3, (uint64_t)&unk_1015DCB58, (uint64_t)v16);

      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10034E570(uint64_t a1)
{
  return sub_10034B7F4(a1, type metadata accessor for GEOAPHistoricalUploadDebugController);
}

uint64_t type metadata accessor for GEOAPHistoricalUploadDebugController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for GEOAPLatencyBuckets(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *id result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10034E688);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GEOAPLatencyBuckets()
{
  return &type metadata for GEOAPLatencyBuckets;
}

ValueMetadata *type metadata accessor for GEOAPHistoricalModelSection()
{
  return &type metadata for GEOAPHistoricalModelSection;
}

unint64_t sub_10034E6D4()
{
  unint64_t result = qword_1015DCB08;
  if (!qword_1015DCB08)
  {
    sub_10010118C(&qword_1015DCB10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCB08);
  }
  return result;
}

unint64_t sub_10034E734()
{
  unint64_t result = qword_1015DCB18;
  if (!qword_1015DCB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCB18);
  }
  return result;
}

unint64_t sub_10034E78C()
{
  unint64_t result = qword_1015DCB20;
  if (!qword_1015DCB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCB20);
  }
  return result;
}

uint64_t sub_10034E7E0(uint64_t a1, uint64_t a2)
{
  return sub_10034E828(&qword_1015DCB28, a2, (void (*)(uint64_t))type metadata accessor for GEOAPHistoricalModelItem);
}

uint64_t sub_10034E828(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10034E870(uint64_t a1, uint64_t a2)
{
  return sub_10034E828(&qword_1015DCB30, a2, (void (*)(uint64_t))type metadata accessor for GEOAPLatencyBucketValues);
}

void *sub_10034E8B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015D41F0);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = j__malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 29;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 2);
  unsigned int v6 = sub_100355050(&v8, (_DWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1000F84F4();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

uint64_t *sub_10034E9A0(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaDictionary.count.getter();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v3 = (uint64_t *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1003551E4((uint64_t)&v8, v3 + 4, v2, a1);
  uint64_t result = (uint64_t *)sub_1000F84F4();
  if (v6 == v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_10034EA9C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 48 * a3;
        if (v10 < (unint64_t)&v8[6 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 48 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_1000FF33C(&qword_1015DA320);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      long long v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 48);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10034EC2C(unint64_t a1)
{
  return sub_10034EE9C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10024EBD4);
}

void *sub_10034EC44(uint64_t a1)
{
  return sub_10034F1F4(a1, &qword_1015D6F08, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_1003554B8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000F84F4);
}

void *sub_10034EC78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10034ECC0(a1, a2, a3, a4, (void (*)(void))type metadata accessor for MapsFavoriteItem);
}

void *sub_10034EC90(unint64_t a1)
{
  return sub_10034EE9C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10024F044);
}

void *sub_10034ECA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10034ECC0(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for MapsSyncObject);
}

void *sub_10034ECC0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        a5(0);
        swift_arrayInitWithCopy();
        return v11;
      }
    }
    else
    {
      sub_1000FF33C(&qword_1015CD310);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10034EE54(unint64_t a1)
{
  return sub_10034EE9C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10024F080);
}

void *sub_10034EE6C(unint64_t a1)
{
  return sub_10034EE9C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10024F0BC);
}

void *sub_10034EE84(unint64_t a1)
{
  return sub_10034EE9C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10024F2D0);
}

void *sub_10034EE9C(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000FF33C(&qword_1015CD310);
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

void *sub_10034EFA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015D6F00);
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      sub_1003556BC(&v11, (char *)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      sub_1000F84F4();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10034F0D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(&qword_1015D6EF8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_100355AA8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000F84F4();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10034F1C0(uint64_t a1)
{
  return sub_10034F1F4(a1, &qword_1015CE220, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_100355CA8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100356D74);
}

void *sub_10034F1F4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void *, void *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000FF33C(a2);
  uint64_t v8 = (void *)swift_allocObject();
  int64_t v9 = j__malloc_size(v8);
  uint64_t v10 = v9 - 32;
  if (v9 < 32) {
    uint64_t v10 = v9 - 17;
  }
  long long v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  uint64_t v11 = a3(v18, v8 + 4, v4, a1);
  uint64_t v12 = v18[0];
  uint64_t v13 = v18[1];
  uint64_t v14 = v18[2];
  uint64_t v15 = v18[3];
  uint64_t v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v8;
}

void *sub_10034F2E8(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaSet.count.getter();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100355EA8(&v8, v3 + 4, v2, a1);
  uint64_t result = (void *)sub_1000F84F4();
  if (v6 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10034F3E4(uint64_t a1, char a2)
{
  return sub_100350288(a1, a2, &qword_1015DCB88);
}

uint64_t sub_10034F3F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015DCBA8);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt32 v26 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034F6C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015DCB90);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034F9DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCFE8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034FCB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCF10);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1000EFD84((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_10010A768(v25, (uint64_t)&v38);
      sub_1000F2354(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1000EFD84(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10034FFC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCC48);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      unint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10035027C(uint64_t a1, char a2)
{
  return sub_100350288(a1, a2, &qword_1015DCB80);
}

uint64_t sub_100350288(uint64_t a1, char a2, uint64_t *a3)
{
  int64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000FF33C(a3);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *int64_t v4 = v8;
  return result;
}

uint64_t sub_10035053C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCCC8);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    id v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v40) {
          goto LABEL_33;
        }
        unint64_t v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_33;
          }
          unint64_t v24 = v41[v13];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v42)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v13 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v40) {
                  goto LABEL_33;
                }
                unint64_t v24 = v41[v13];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v25;
          }
        }
LABEL_30:
        unint64_t v10 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      uint64_t v30 = 16 * v22;
      uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      uint64_t v34 = *(void *)(v5 + 56) + v30;
      uint64_t v36 = *(void **)v34;
      int64_t v35 = *(void **)(v34 + 8);
      if ((v42 & 1) == 0)
      {
        id v37 = v35;
        swift_bridgeObjectRetain();
        id v38 = v36;
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 16 * v17;
      uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
      void *v19 = v33;
      v19[1] = v32;
      unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
      *unint64_t v20 = v36;
      v20[1] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100350850(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = type metadata accessor for Handle();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1000FF33C(&qword_1015CCCC0);
  int v47 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  id v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  char v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  id v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    int64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    BOOL v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  int64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_100350C38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015CCCB0);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100350F48(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1000FF33C(&qword_1015DCB78);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_10034E828(&qword_1015D4890, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100351370(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015DCB70);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100351644(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000FF33C(&qword_1015DCB68);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_10035195C(uint64_t a1, void *a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1001EA990((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100352DAC();
LABEL_7:
    unint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10034F9DC(v12, a3 & 1);
  unint64_t v17 = sub_1001EA990((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_100100830(0, (unint64_t *)&unk_1015D6E30);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  unint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v15[2] = v22;

  id v23 = a2;
}

_OWORD *sub_100351AD0(_OWORD *a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_1000EFD94(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100352F54();
      goto LABEL_7;
    }
    sub_10034FCB0(v13, a3 & 1);
    unint64_t v19 = sub_1000EFD94(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_10010A768(a2, (uint64_t)v21);
      return sub_100352318(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_1000FF22C((uint64_t)v17);

  return sub_1000EFD84(a1, v17);
}

void sub_100351C1C(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001EA66C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10035313C();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v20 = 8 * v10;
    *(void *)(v16[6] + v20) = a2;
    *(void *)(v16[7] + v20) = a1;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      long long v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_10034FFC8(v13, a3 & 1);
  unint64_t v18 = sub_1001EA66C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_100351D58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100103580(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10035376C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100350C38(v15, a4 & 1);
  unint64_t v20 = sub_100103580(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_100351EC8(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1001EAB38(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_100353920();
    goto LABEL_7;
  }
  sub_100350F48(v17, a3 & 1);
  unint64_t v23 = sub_1001EAB38(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100352394(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_100352070(uint64_t a1, unsigned __int8 a2, char a3)
{
  int64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1001EA6A8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100353BB8();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      long long v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_100351370(result, a3 & 1);
  uint64_t result = sub_1001EA6A8(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003521A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100103580(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100353D5C();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100351644(v15, a4 & 1);
  unint64_t v21 = sub_100103580(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_100352318(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1000EFD84(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_100352394(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_10035244C()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015DCB88);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003525F0()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCB78);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_1000FF4D4(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100101314(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003527BC()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCFE0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    int64_t v21 = (long long *)(*(void *)(v2 + 56) + v16);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v31 = *v21;
    long long v23 = *v21;
    long long v32 = v21[1];
    unsigned __int8 v24 = *(unsigned char *)(v17 + 24);
    *(void *)uint64_t v22 = *(void *)v17;
    *(void *)(v22 + 8) = v19;
    *(void *)(v22 + 16) = v20;
    *(unsigned char *)(v22 + 24) = v24;
    BOOL v25 = (_OWORD *)(*(void *)(v4 + 56) + v16);
    *BOOL v25 = v23;
    v25[1] = v32;
    id v26 = v18;
    sub_100100818(v19, v20, v24);
    id v27 = (id)v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003529D4()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015DCB98);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v24 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    id result = (id)v24;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100352B98()
{
  sub_1000FF33C(&qword_1015CD180);
  int64_t v28 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v28 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  uint64_t v29 = v1 + 64;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v30) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v25);
    ++v7;
    if (!v26)
    {
      int64_t v7 = v25 + 1;
      if (v25 + 1 >= v30) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v29 + 8 * v7);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v12 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 32 * v12;
    uint64_t v14 = *(void *)(v1 + 48) + 32 * v12;
    unint64_t v15 = *(void **)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    unsigned __int8 v18 = *(unsigned char *)(v14 + 24);
    uint64_t v19 = 40 * v12;
    sub_100356CA4(*(void *)(v1 + 56) + 40 * v12, (uint64_t)v31);
    uint64_t v20 = *(void *)(v3 + 48) + v13;
    *(void *)uint64_t v20 = v15;
    *(void *)(v20 + 8) = v16;
    *(void *)(v20 + 16) = v17;
    *(unsigned char *)(v20 + 24) = v18;
    uint64_t v21 = *(void *)(v3 + 56) + v19;
    uint64_t v22 = v32;
    long long v23 = v31[1];
    *(_OWORD *)uint64_t v21 = v31[0];
    *(_OWORD *)(v21 + 16) = v23;
    *(void *)(v21 + 32) = v22;
    id v24 = v15;
    id result = (void *)sub_100100818(v16, v17, v18);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v30) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    int64_t v7 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v7 >= v30) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v7);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100352DAC()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCFE8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    unsigned __int8 v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100352F54()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCF10);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_10010A768(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1000F2354(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1000EFD84(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10035313C()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCC48);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003532E0()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCCC8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(v2 + 56) + v16;
    unint64_t v22 = *(void **)v20;
    int64_t v21 = *(void **)(v20 + 8);
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v18;
    v23[1] = v19;
    id v24 = (void *)(*(void *)(v4 + 56) + v16);
    *id v24 = v22;
    v24[1] = v21;
    id v25 = v21;
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003534A8()
{
  uint64_t v35 = type metadata accessor for Handle();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF33C(&qword_1015CCCC0);
  int64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    unint64_t v27 = v30;
LABEL_25:
    *unint64_t v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    int64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    void *v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    unint64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_10035376C()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015CCCB0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100353920()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF33C(&qword_1015DCB78);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100353BB8()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015DCB70);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100353D5C()
{
  uint64_t v1 = v0;
  sub_1000FF33C(&qword_1015DCB68);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int sub_100353F14(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100354600(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  id v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      id v94 = v11;
      id v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          id v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1003546D0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v97 = sub_10035503C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          id v100 = &v97[16 * v96 + 32];
          *(void *)id v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          id v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    id v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    int64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    int64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10035496C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_10035496C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    char v42 = v11 + 32;
    int64_t v43 = &v11[16 * v41 + 32];
    *(void *)int64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          id v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            id v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        id v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        id v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        id v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        id v85 = v11;
        id v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        id v88 = v42;
        unint64_t v89 = v44;
        id v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1003546D0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)id v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        char v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100354600(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003546D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      int64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_100354BE0((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10035496C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000FF33C(&qword_1015DCB60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100354A68(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

char *sub_100354B24(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_100354BE0(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_100354C9C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -88)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 88;
    if (result != v3 || result >= &v3[88 * v6])
    {
      return (char *)memmove(result, v3, 88 * v6);
    }
  }
  return result;
}

char *sub_100354D70(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_100354E40(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_100354EFC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for Date();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10035503C(uint64_t a1)
{
  return sub_10035496C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_100355050(void *result, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_DWORD *)(*(void *)(a4 + 48) + 4 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1003551E4(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaDictionary.makeIterator()();
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v4 = result | 0x8000000000000000;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    int64_t v11 = 0;
    a3 = 0;
LABEL_45:
    *unint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = a4 + 64;
  uint64_t v20 = ~v19;
  uint64_t v21 = -v19;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v10 = v22 & *(void *)(a4 + 64);
  uint64_t v9 = v20;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_45;
  }
  if (a3 < 0)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v23 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.next()())
    {
      a3 = v12;
LABEL_44:
      uint64_t v9 = v23;
      goto LABEL_45;
    }
    swift_unknownObjectRelease();
    sub_100100830(0, (unint64_t *)&unk_1015DC230);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v15 = v25;
    uint64_t result = swift_unknownObjectRelease();
    if (!v25) {
      goto LABEL_43;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3) {
      goto LABEL_44;
    }
  }
  if (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v11 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v16 >= v24) {
    goto LABEL_39;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_23;
  }
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16;
    goto LABEL_43;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_16:
    int64_t v16 = v11;
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
LABEL_7:
    uint64_t result = (uint64_t)*(id *)(*(void *)(v4 + 56) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_43;
    }
    goto LABEL_8;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v24) {
    goto LABEL_39;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_22:
    int64_t v16 = v18;
    goto LABEL_23;
  }
  int64_t v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16 + 2;
    goto LABEL_43;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_39:
    unint64_t v10 = 0;
LABEL_43:
    a3 = v12;
    goto LABEL_44;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17) {
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v24)
    {
      unint64_t v10 = 0;
      int64_t v11 = v24 - 1;
      goto LABEL_43;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1003554B8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *int64_t v11 = *(void *)(*(void *)(a4 + 48) + 8 * v16);
    v11[1] = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1003556BC(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v11 - 8);
  __n128 v12 = __chkstk_darwin(v11);
  unint64_t v41 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v16 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_39:
    uint64_t v29 = ~v33;
    *a1 = v43;
    a1[1] = v15;
    a1[2] = v29;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v37 = a3;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = v41;
  uint64_t v39 = v42 + 16;
  unint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v42 + 56);
  uint64_t v38 = v42 + 48;
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v34 = v15;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  Swift::Int v32 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    uint64_t v26 = v42;
    uint64_t v27 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v10, *(void *)(v43 + 48) + v27 * v22, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v34;
      goto LABEL_38;
    }
    ++v19;
    Swift::Int v28 = *v36;
    (*v36)(v20, v10, v11);
    v28(a2, v20, v11);
    if (v19 == v37)
    {
      a1 = v32;
      uint64_t v15 = v34;
      goto LABEL_39;
    }
    a2 += v27;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v34;
    if (v23 >= v35) {
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      ++v18;
      if (v23 + 1 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v25);
      if (v24) {
        goto LABEL_14;
      }
      int64_t v18 = v23 + 1;
      if (v23 + 2 >= v35) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v34 + 8 * (v23 + 2));
      if (v24)
      {
        v23 += 2;
      }
      else
      {
        int64_t v18 = v23 + 2;
        if (v23 + 3 >= v35) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v34 + 8 * (v23 + 3));
        if (!v24)
        {
          int64_t v25 = v23 + 4;
          int64_t v18 = v23 + 3;
          if (v23 + 4 < v35)
          {
            unint64_t v24 = *(void *)(v34 + 8 * v25);
            if (!v24)
            {
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v35)
                {
                  int64_t v18 = v31;
                  goto LABEL_37;
                }
                unint64_t v24 = *(void *)(v34 + 8 * v23);
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v23 = v25;
            goto LABEL_21;
          }
LABEL_37:
          (*v40)(v10, 1, 1, v11, v12);
          unint64_t v17 = 0;
LABEL_38:
          sub_1001C0FAC((uint64_t)v10);
          a1 = v32;
          goto LABEL_39;
        }
        v23 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_100355AA8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100355CA8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_100355EA8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100100830(0, &qword_1015D6420);
    sub_100356D0C();
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    unint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *unint64_t v24 = v4;
    v24[1] = v8;
    _OWORD v24[2] = v9;
    v24[3] = v10;
    unsigned char v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  unint64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      sub_100100830(0, &qword_1015D6420);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v15 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    unint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1003561B4(uint64_t a1)
{
  return sub_10025B3D4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1003561C8(uint64_t a1)
{
  return sub_10025B800(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1003561DC(void *a1)
{
  return sub_10025BAC8(0, a1[2], 0, a1);
}

uint64_t sub_1003561F0(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100356204(uint64_t a1)
{
  return sub_10025BC54(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100356218(void *a1)
{
  return sub_10025C254(0, a1[2], 0, a1);
}

uint64_t sub_10035622C(void *a1)
{
  return sub_10025C3FC(0, a1[2], 0, a1);
}

uint64_t sub_100356240(uint64_t a1)
{
  return sub_10025C41C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100356254(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (char v5 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if (*(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32)
      && *(_DWORD *)(a1 + 36) == *(_DWORD *)(a2 + 36)
      && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40)
      && *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56))
    {
      swift_beginAccess();
      unint64_t v7 = *(void *)(a1 + 48);
      swift_beginAccess();
      uint64_t v8 = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v5 = sub_1001AA6FC(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v5 = 0;
    }
  }
  return v5 & 1;
}

BOOL sub_10035635C(_DWORD *a1, _DWORD *a2)
{
  return a1[4] == a2[4] && a1[5] == a2[5] && a1[6] == a2[6];
}

uint64_t sub_100356398(unsigned int a1)
{
  if (a1 < 0x385) {
    return 0;
  }
  uint64_t v1 = 1;
  if (a1 > 0x708)
  {
    uint64_t v1 = 2;
    if (a1 > 0xE10)
    {
      uint64_t v1 = 3;
      if (a1 > 0x5460)
      {
        uint64_t v1 = 4;
        if (a1 > 0xA8C0) {
          return 5;
        }
      }
    }
  }
  return v1;
}

unint64_t sub_1003565F0(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_100356600(unint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015DCB48);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UITableViewDiffableDataSource.snapshot()();
  unint64_t v6 = (unint64_t)v5;
  uint64_t v7 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v6 = v7;
  if (*(void *)(v7 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = v7 + 16 * a1;
  uint64_t v10 = *(void *)(v8 + 32);
  unint64_t v9 = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v10;
  unint64_t v20 = v9;
  unint64_t v6 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  if (!(v6 >> 62))
  {
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    int v13 = 0;
    goto LABEL_13;
  }
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = *(void *)(v6 + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    int v13 = *(_DWORD *)(v12 + 40);
    swift_release();
LABEL_13:
    v18[3] = v13;
    v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0x7364616F6C707520;
    v16._object = (void *)0xE800000000000000;
    String.append(_:)(v16);
    uint64_t v17 = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v17;
  }
  __break(1u);
  return result;
}

void sub_10035682C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015DCB48);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = IndexPath.section.getter();
  if (v6)
  {
    unint64_t v7 = v6;
    uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC4Maps36GEOAPHistoricalUploadDebugController_dataModel]
       + OBJC_IVAR____TtC4Maps30GEOAPHistoricalUploadDataModel_snapshot;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    uint64_t v9 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v7 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v7 < *(void *)(v9 + 16))
    {
      uint64_t v10 = v9 + 16 * v7;
      uint64_t v12 = *(void *)(v10 + 32);
      uint64_t v11 = *(void *)(v10 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v13 = (char *)[objc_allocWithZone((Class)type metadata accessor for GEOAPSessionSpecificHistoricalDebugController()) initWithStyle:2];
      uint64_t v14 = &v13[OBJC_IVAR____TtC4Maps45GEOAPSessionSpecificHistoricalDebugController_modelSectionType];
      *(void *)uint64_t v14 = v12;
      *((void *)v14 + 1) = v11;
      swift_bridgeObjectRelease();
      id v15 = [v1 navigationController];
      if (v15)
      {
        Swift::String v16 = v15;
        [v15 pushViewController:v13 animated:1];
      }
      id v17 = [v1 tableView];
      if (v17)
      {
        int64_t v18 = v17;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v18 deselectRowAtIndexPath:isa animated:1];

        return;
      }
LABEL_11:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_11;
  }
}

void sub_100356A68(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10034AF34(a1, a2, a3, v3);
}

uint64_t sub_100356A70()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100356AA8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100356AE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_10005056C;
  return sub_10034B218(a1, v4, v5, v6);
}

uint64_t sub_100356B9C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100356BD4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100356C14(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, int a6, int a7, uint64_t a8, int a9)
{
  LODWORD(v11) = a9;
  return sub_10034A6B8(a1, a2, a3, a4, a5, a6, a7, a8, v11, *(void *)(v9 + 16));
}

uint64_t sub_100356C44()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100356C94()
{
  return sub_10034AA60(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100356CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D2AC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100356D0C()
{
  unint64_t result = qword_1015DCBA0;
  if (!qword_1015DCBA0)
  {
    sub_100100830(255, &qword_1015D6420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCBA0);
  }
  return result;
}

char *sub_100356D84(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_attributedText] = 0;
  id v11 = objc_allocWithZone((Class)UILabel);
  uint64_t v12 = v5;
  id v13 = [v11 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v12[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_label] = v13;
  id v14 = [self effectWithStyle:6];
  id v15 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v14];
  *(void *)&v12[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_blurView] = v15;
  id v16 = [self effectForBlurEffect:v14 style:1];
  id v17 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v16];

  *(void *)&v12[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_labelVibrantView] = v17;
  v29.receiver = v12;
  v29.super_class = ObjectType;
  int64_t v18 = (char *)[super initWithFrame:a1, a2, a3, a4];
  [v18 setClipsToBounds:1];
  uint64_t v19 = *(void **)&v18[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_label];
  [v19 setNumberOfLines:1];
  id v20 = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
  [v19 setFont:v20];

  uint64_t v21 = *(void **)&v18[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_blurView];
  [v18 addSubview:v21];
  uint64_t v22 = *(void **)&v18[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_labelVibrantView];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v23 = [v22 contentView];
  [v23 addSubview:v19];

  id v24 = [v21 contentView];
  [v24 addSubview:v22];

  id v25 = [self sharedApplication];
  id v26 = [v25 userInterfaceLayoutDirection];

  if (qword_1015CC048 != -1) {
    swift_once();
  }
  if (v26 == (id)1) {
    uint64_t v27 = 2;
  }
  else {
    uint64_t v27 = 1;
  }
  [v21 _setCornerRadius:1 continuous:v27 maskedCorners:*(double *)&qword_1015DCBC0];
  sub_1003570B8();

  return v18;
}

void sub_1003570B8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_labelVibrantView);
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_label);
  id v3 = [v1 contentView];
  id v4 = [objc_allocWithZone((Class)MUEdgeLayout) initWithItem:v2 container:v3];

  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_blurView);
  id v6 = v1;
  id v7 = [v5 contentView];
  if (qword_1015CC038 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_1015DCBB0;
  double v9 = *(double *)&qword_1015DCBB0;
  if (qword_1015CC040 != -1)
  {
    swift_once();
    double v9 = *(double *)&qword_1015DCBB0;
  }
  id v10 = [objc_allocWithZone((Class)MUEdgeLayout) initWithItem:v6 container:v7 insets:*(double *)&qword_1015DCBB8, v9, *(double *)&qword_1015DCBB8];

  id v11 = [objc_allocWithZone((Class)MUEdgeLayout) initWithItem:v5 container:v0];
  uint64_t v12 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100F5E000;
  *(void *)(v13 + 32) = v4;
  *(void *)(v13 + 40) = v10;
  *(void *)(v13 + 48) = v11;
  specialized Array._endMutation()();
  sub_100357570();
  id v14 = v4;
  id v15 = v10;
  id v16 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 _mapsui_activateLayouts:isa];
}

void sub_100357458()
{
  qword_1015DCBB0 = 0x4008000000000000;
}

double sub_100357468()
{
  double result = kMUPlaceSystemSpacing;
  qword_1015DCBB8 = kMUPlaceSystemSpacing;
  return result;
}

void sub_100357480()
{
  qword_1015DCBC0 = 0x4010000000000000;
}

uint64_t type metadata accessor for UGCPhotoThumbnailBadgeView()
{
  return self;
}

unint64_t sub_100357570()
{
  unint64_t result = qword_1015DCC10;
  if (!qword_1015DCC10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015DCC10);
  }
  return result;
}

uint64_t sub_1003575B0()
{
  return sub_10035EBE4(&qword_1015DCC18, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t type metadata accessor for PlaceEntity()
{
  uint64_t result = qword_1015DCD18;
  if (!qword_1015DCD18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100357644()
{
  return sub_10035EBE4(&qword_1015DCC20, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_10035768C()
{
  return sub_10035EBE4(&qword_1015DCC28, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

unint64_t sub_1003576D8()
{
  unint64_t result = qword_1015DCC30;
  if (!qword_1015DCC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCC30);
  }
  return result;
}

uint64_t sub_10035772C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v104 = a2;
  id v102 = a1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v94 = *(void *)(v4 - 8);
  uint64_t v95 = v4;
  __chkstk_darwin(v4);
  unint64_t v89 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  __chkstk_darwin(v6 - 8);
  uint64_t v92 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v93 = (char *)&v87 - v9;
  uint64_t v10 = type metadata accessor for PlaceEntity();
  id v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v90 = (uint64_t)&v87 - v14;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v98 = v15;
  uint64_t v99 = v16;
  __chkstk_darwin(v15);
  unint64_t v101 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8);
  uint64_t v23 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v23 - 8);
  uint64_t v24 = type metadata accessor for LocalizedStringResource();
  __n128 v25 = __chkstk_darwin(v24 - 8);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  int v103 = 1;
  *(unsigned char *)(a3 + 24) = 1;
  uint64_t v100 = a3 + v11[8];
  (*(void (**)(__n128))(v16 + 56))(v25);
  uint64_t v26 = v11[10];
  sub_1000FF33C(&qword_1015DCDC0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  LODWORD(v97) = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v96 = *(void (**)(char *))(v19 + 104);
  v96(v21);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v27 = EntityProperty<>.init(title:)();
  uint64_t v91 = v26;
  *(void *)(a3 + v26) = v27;
  uint64_t v28 = a3;
  uint64_t v29 = v11[11];
  sub_1000FF33C(&qword_1015DCDC8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v96)(v21, v97, v18);
  int64_t v30 = v102;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v31 = EntityProperty<>.init(title:)();
  uint64_t v97 = v29;
  *(void *)(v28 + v29) = v31;
  Swift::Int v32 = (void *)(v28 + v11[12]);
  *Swift::Int v32 = 0;
  v32[1] = 0;
  uint64_t v33 = (uint64_t *)(v28 + v11[13]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  uint64_t v34 = (void (*)(char *))(v28 + v11[14]);
  *(void *)uint64_t v34 = 0;
  *((void *)v34 + 1) = 0;
  int64_t v35 = v101;
  UUID.init()();
  uint64_t v36 = UUID.uuidString.getter();
  uint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v35, v98);
  uint64_t v39 = (uint64_t *)(v28 + v11[9]);
  *uint64_t v39 = v36;
  v39[1] = v38;
  sub_10035DB64(v104, v100);
  if ([v30 _hasMUID])
  {
    if ([v30 _muid])
    {
      id v40 = [v30 _muid];
      int v103 = 0;
    }
    else
    {
      id v40 = 0;
      int v103 = 1;
    }
  }
  else
  {
    id v40 = 0;
  }
  id v41 = [v30 identifier];
  uint64_t v42 = v41;
  unint64_t v96 = v34;
  if (v41)
  {
    id v43 = [v41 identifierString];

    uint64_t v42 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v45 = 0;
  }
  id v46 = [self placemarkWithGEOMapItem:[v30 _geoMapItem]];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v28 = v42;
  *(void *)(v28 + 8) = v45;
  *(void *)(v28 + 16) = v40;
  *(unsigned char *)(v28 + 24) = v103;
  id v47 = [v30 _geoMapItem];
  uint64_t v48 = (uint64_t)v47;
  if (v47)
  {
    id v49 = [v47 name];
    swift_unknownObjectRelease();
    if (v49)
    {
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v51 = v50;

      goto LABEL_14;
    }
    uint64_t v48 = 0;
  }
  uint64_t v51 = 0;
LABEL_14:
  uint64_t v105 = v48;
  uint64_t v106 = v51;
  EntityProperty.wrappedValue.setter();
  uint64_t v105 = (uint64_t)v46;
  id v52 = v46;
  EntityProperty.wrappedValue.setter();
  uint64_t v53 = v30;
  id v54 = [v30 _geoMapItem];
  if (v54)
  {
    BOOL v55 = v54;
    if ([v54 _hasBusinessHours])
    {
      sub_1002AE4EC(v28, v90);
      id v56 = [v55 _businessHours];
      if (v56)
      {
        id v57 = v56;
        id v58 = v52;
        sub_100100830(0, &qword_1015DCE48);
        unint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        id v58 = v52;
        unint64_t v59 = 0;
      }
      uint64_t v60 = v90;
      sub_100358920(v59);
      uint64_t v62 = v61;
      uint64_t v64 = v63;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002AE550(v60);
      swift_bridgeObjectRelease();
      *Swift::Int v32 = v62;
      v32[1] = v64;
      uint64_t v53 = v30;
      id v52 = v58;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v65 = [v53 url];
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = (uint64_t)v92;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v68 = 0;
    uint64_t v70 = v94;
    uint64_t v69 = v95;
  }
  else
  {
    uint64_t v68 = 1;
    uint64_t v70 = v94;
    uint64_t v69 = v95;
    uint64_t v67 = (uint64_t)v92;
  }
  uint64_t v71 = (uint64_t)v93;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v67, v68, 1, v69);
  sub_1002CDD10(v67, v71);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v71, 1, v69))
  {
    sub_1000FF2E0(v71, (uint64_t *)&unk_1015D5160);
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  else
  {
    uint64_t v74 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v89, v71, v69);
    sub_1000FF2E0(v71, (uint64_t *)&unk_1015D5160);
    uint64_t v72 = URL.absoluteString.getter();
    uint64_t v73 = v75;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v69);
  }
  swift_bridgeObjectRelease();
  *uint64_t v33 = v72;
  v33[1] = v73;
  id v76 = [v53 _geoMapItem];
  if (!v76)
  {

LABEL_33:
    return sub_1000FF2E0(v104, (uint64_t *)&unk_1015D5DE0);
  }
  uint64_t v77 = v76;
  if (([v76 _hasAnyAmenities] & 1) == 0)
  {

    swift_unknownObjectRelease();
    goto LABEL_33;
  }
  uint64_t v78 = v88;
  sub_1002AE4EC(v28, v88);
  id v79 = [v77 _amenities];
  if (v79)
  {
    uint64_t v80 = v79;
    sub_100100830(0, &qword_1015DCE40);
    unint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v81 = 0;
  }
  uint64_t v83 = sub_100358B60(v81);
  uint64_t v85 = v84;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000FF2E0(v104, (uint64_t *)&unk_1015D5DE0);
  sub_1002AE550(v78);
  id v86 = (uint64_t *)v96;
  uint64_t result = swift_bridgeObjectRelease();
  *id v86 = v83;
  v86[1] = v85;
  return result;
}

uint64_t sub_100358148()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v5, qword_101611E88);
  sub_1000F2248(v5, (uint64_t)qword_101611E88);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1003582AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[1];
  if (!v9)
  {
    uint64_t v13 = type metadata accessor for PlaceEntity();
    sub_1000FF27C((uint64_t)v1 + *(int *)(v13 + 24), (uint64_t)v4, (uint64_t *)&unk_1015D5DE0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v19._countAndFlagsBits = UUID.uuidString.getter();
      uint64_t v21 = 0x636E79737370616DLL;
      unint64_t v22 = 0xE90000000000003ALL;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      uint64_t v11 = v21;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v11;
    }
    sub_1000FF2E0((uint64_t)v4, (uint64_t *)&unk_1015D5DE0);
    if ((v1[3] & 1) == 0)
    {
      uint64_t v21 = v1[2];
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v21 = 0x3A6469756DLL;
      unint64_t v22 = 0xE500000000000000;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      return v21;
    }
    EntityProperty.wrappedValue.getter();
    id v14 = (id)v21;
    if (v21)
    {
      id v15 = [(id)v21 location];
      if (v15)
      {
        uint64_t v16 = v15;
        [v15 coordinate];

        uint64_t v21 = 0;
        unint64_t v22 = 0xE000000000000000;
        v17._countAndFlagsBits = 0x3A676E6F6C74616CLL;
        v17._object = (void *)0xE800000000000000;
        String.append(_:)(v17);
        Double.write<A>(to:)();
        v18._countAndFlagsBits = 44;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        Double.write<A>(to:)();

        return v21;
      }
    }
    uint64_t v11 = *(uint64_t *)((char *)v1 + *(int *)(v13 + 28));
    swift_bridgeObjectRetain();
    return v11;
  }
  uint64_t v10 = *v1;
  uint64_t v21 = 0x3A74696B70616DLL;
  unint64_t v22 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)(&v9 - 1));
  return v21;
}

uint64_t sub_1003585E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000FF33C(&qword_1015CF4F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - v11;
  __chkstk_darwin(v13);
  id v15 = (char *)&v22 - v14;
  type metadata accessor for PlaceEntity();
  EntityProperty.wrappedValue.getter();
  LocalizedStringResource.init(stringLiteral:)();
  EntityProperty.wrappedValue.getter();
  id v16 = v24;
  if (v24)
  {
    id v17 = [v24 locality:v22];

    if (v17)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  LocalizedStringResource.init(stringLiteral:)();
  Swift::String v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v18(v9, v15, v6);
  v18(v5, v12, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v19 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v23, 1, 1, v19);
  DisplayRepresentation.init(title:subtitle:image:)();
  Swift::String v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v20)(v15, v6);
}

void sub_100358920(unint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          id v6 = *(id *)(a1 + 32);
        }
        uint64_t v7 = v6;
        swift_bridgeObjectRelease();
        id v8 = v7;
        static TimeZone.current.getter();
        uint64_t v9 = type metadata accessor for TimeZone();
        uint64_t v10 = *(void *)(v9 - 8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
        Class isa = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) != 1)
        {
          Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
        }
        id v12 = [objc_allocWithZone((Class)_MKLocalizedHoursBuilder) initWithBusinessHours:v8 timeZone:isa localizedHoursStringOptions:128];

        if (v12)
        {
          id v13 = [v12 localizedOperatingHours];

          if (v13)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            return;
          }
          goto LABEL_18;
        }
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100358B60(unint64_t a1)
{
  uint64_t v1 = a1;
  if (!a1) {
    return v1;
  }
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_1000FF33C((uint64_t *)&unk_1015CE230);
    sub_1001010F8((unint64_t *)&qword_1015D5A60, (uint64_t *)&unk_1015CE230);
    uint64_t v1 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    return v1;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t result = sub_10025AEF4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      id v6 = v5;
      id v7 = [v5 amenityTitle];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v11 = v10;
      }
      else
      {

        uint64_t v9 = 0;
        unint64_t v11 = 0xE000000000000000;
      }
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_10025AEF4(v12 > 1, v13 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      _OWORD v14[5] = v11;
    }
    while (v2 != v4);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_100358D60@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  uint64_t v39 = v5;
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v13 - 8);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  uint64_t v14 = (int *)type metadata accessor for PlaceEntity();
  uint64_t v40 = a3 + v14[6];
  (*(void (**)(void))(v5 + 56))();
  uint64_t v15 = v14[8];
  sub_1000FF33C(&qword_1015DCDC0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v36 = *(void (**)(char *))(v8 + 104);
  v36(v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v16 = EntityProperty<>.init(title:)();
  uint64_t v41 = v15;
  *(void *)(a3 + v15) = v16;
  uint64_t v17 = v14[9];
  sub_1000FF33C(&qword_1015DCDC8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v36)(v10, v37, v7);
  uint64_t v18 = v17;
  Swift::String v20 = v42;
  uint64_t v19 = v43;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  *(void *)(a3 + v18) = EntityProperty<>.init(title:)();
  uint64_t v21 = (void *)(a3 + v14[10]);
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v22 = (void *)(a3 + v14[11]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)(a3 + v14[12]);
  void *v23 = 0;
  v23[1] = 0;
  id v24 = v44;
  UUID.init()();
  uint64_t v25 = UUID.uuidString.getter();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v38);
  uint64_t v28 = (uint64_t *)(a3 + v14[7]);
  *uint64_t v28 = v25;
  v28[1] = v27;
  sub_10035DB64(v19, v40);
  id v29 = [v20 name];
  if (v29)
  {
    int64_t v30 = v29;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  uint64_t v45 = v31;
  uint64_t v46 = v33;
  EntityProperty.wrappedValue.setter();
  uint64_t v45 = (uint64_t)v20;
  id v34 = v20;
  EntityProperty.wrappedValue.setter();

  return sub_1000FF2E0(v19, (uint64_t *)&unk_1015D5DE0);
}

uint64_t sub_1003591D4()
{
  type metadata accessor for PlaceEntity();
  EntityProperty.wrappedValue.getter();
  if (!v9) {
    return 0;
  }
  id v0 = [v9 postalAddress];
  if (!v0)
  {
    id v5 = [v9 location];
    if (v5)
    {
      uint64_t v6 = v5;
      [v5 coordinate];

      Double.write<A>(to:)();
      v7._countAndFlagsBits = 44;
      v7._object = (void *)0xE100000000000000;
      String.append(_:)(v7);
      Double.write<A>(to:)();

      return 0;
    }

    return 0;
  }
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)CNPostalAddressFormatter) init];
  id v3 = [v2 stringFromPostalAddress:v1];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_100359350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D5160);
  __chkstk_darwin(v7 - 8);
  object = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - v11;
  if ((*(unsigned char *)(v1 + 24) & 1) == 0)
  {
    uint64_t v15 = *(void *)(v1 + 16);
    strcpy((char *)v21, "maps://?auid=");
    HIWORD(v21[1]) = -4864;
    v20[1] = v15;
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    object = (char *)v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    URL.init(string:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v12, v3);
    }
    __break(1u);
    goto LABEL_12;
  }
  sub_1003591D4();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for PlaceEntity();
  EntityProperty.wrappedValue.getter();
  if (v21[1])
  {
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v14 = 0;
  }
  id v18 = [self URLForAddress:v13 label:v14];

  if (!v18)
  {
LABEL_12:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(object, 1, 1, v3);
    goto LABEL_13;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v19(object, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(object, 0, 1, v3);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(object, 1, v3);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a1, object, v3);
}

uint64_t sub_100359678()
{
  return sub_10035EBE4(&qword_1015DCC38, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_1003596C0()
{
  return sub_10035EBE4(&qword_1015DCC40, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_100359708()
{
  return sub_10035EBE4(&qword_1015DCC48, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_100359750()
{
  return sub_10035EBE4(&qword_1015DCC50, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_100359798@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003582AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003597C0@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CC050 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611E88);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100359868()
{
  return sub_1001010F8(&qword_1015DCC58, &qword_1015DCC60);
}

uint64_t sub_1003598A4(uint64_t a1)
{
  uint64_t v2 = sub_10035EBE4(&qword_1015D96A0, (void (*)(uint64_t))type metadata accessor for PlaceEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100359920()
{
  return sub_10035EBE4((unint64_t *)&unk_1015DCC68, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_10035996C(uint64_t a1)
{
  uint64_t v2 = sub_10035EBE4(&qword_1015DCC50, (void (*)(uint64_t))type metadata accessor for PlaceEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003599E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100359A04@<X0>(uint64_t a1@<X8>)
{
  return sub_100359350(a1);
}

uint64_t sub_100359A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = sub_10035EBE4(&qword_1015DCE38, (void (*)(uint64_t))&type metadata accessor for URL);

  return ProxyRepresentation.init(exporting:)(sub_100359A04, 0, a1, v4, a2, v5);
}

uint64_t sub_100359ADC(uint64_t a1)
{
  v1[222] = a1;
  sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  v1[223] = swift_task_alloc();
  v1[224] = *(void *)(type metadata accessor for PlaceEntity() - 8);
  v1[225] = swift_task_alloc();
  return _swift_task_switch(sub_100359BC8, 0, 0);
}

void sub_100359BC8()
{
  uint64_t v63 = v0;
  uint64_t v1 = v0[222];
  uint64_t v2 = &_swiftEmptySetSingleton;
  v0[221] = &_swiftEmptySetSingleton;
  v0[203] = &_swiftEmptySetSingleton;
  v0[209] = &_swiftEmptySetSingleton;
  uint64_t v61 = *(void *)(v1 + 16);
  if (!v61)
  {
    id v49 = &_swiftEmptySetSingleton;
    goto LABEL_80;
  }
  uint64_t v60 = v1 + 32;
  double v3 = MKCoordinateInvalid[0];
  double v4 = MKCoordinateInvalid[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    id v9 = (uint64_t *)(v60 + 16 * v5);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x3A74696B70616DLL;
    v12._object = (void *)0xE700000000000000;
    if (String.hasPrefix(_:)(v12))
    {
      v0[173] = v10;
      v0[174] = v11;
      v0[171] = 0x3A74696B70616DLL;
      v0[172] = 0xE700000000000000;
      v0[167] = 0;
      v0[168] = 0xE000000000000000;
      unint64_t v58 = sub_100180324();
      StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      id v13 = objc_allocWithZone((Class)MKMapItemIdentifier);
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v15 = [v13 initWithIdentifierString:v14];

      if (v15)
      {
        sub_10013D38C(v62, v15);
      }
    }
    v16._countAndFlagsBits = 0x3A6469756DLL;
    v16._object = (void *)0xE500000000000000;
    if (!String.hasPrefix(_:)(v16))
    {
      uint64_t v25 = v10;
      goto LABEL_48;
    }
    v0[185] = v10;
    v0[186] = v11;
    v0[177] = 0x3A6469756DLL;
    v0[178] = 0xE500000000000000;
    v0[175] = 0;
    v0[176] = 0xE000000000000000;
    unint64_t v59 = sub_100180324();
    uint64_t v17 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    uint64_t v19 = v18;
    uint64_t v20 = HIBYTE(v18) & 0xF;
    uint64_t v21 = v17 & 0xFFFFFFFFFFFFLL;
    if ((v19 & 0x2000000000000000) != 0) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v17 & 0xFFFFFFFFFFFFLL;
    }
    if (!v22)
    {
      uint64_t v25 = v10;
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    if ((v19 & 0x1000000000000000) == 0) {
      break;
    }
    uint64_t v25 = v10;
    unint64_t v24 = sub_10021C4FC(v17, v19, 10);
    char v48 = v47;
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
    {
LABEL_46:
      id v34 = [objc_allocWithZone((Class)MKMapItemIdentifier) initWithMUID:v24 resultProviderID:0 coordinate:v3 v4 type:metadata for String v59 v59 v59];
      if (v34)
      {
        sub_10013D38C(v62, v34);
      }
    }
LABEL_48:
    v35._countAndFlagsBits = 0x636E79737370616DLL;
    v35._object = (void *)0xE90000000000003ALL;
    if (String.hasPrefix(_:)(v35))
    {
      v0[169] = v25;
      v0[170] = v11;
      v0[187] = 0x636E79737370616DLL;
      v0[188] = 0xE90000000000003ALL;
      v0[189] = 0;
      v0[190] = 0xE000000000000000;
      sub_100180324();
      Swift::Int v36 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      sub_10013C798((Swift::Int *)v62, v36, v37);
      swift_bridgeObjectRelease();
    }
    v38._countAndFlagsBits = 0x3A676E6F6C74616CLL;
    v38._object = (void *)0xE800000000000000;
    if (String.hasPrefix(_:)(v38))
    {
      v0[179] = v25;
      v0[180] = v11;
      v0[181] = 0x3A676E6F6C74616CLL;
      v0[182] = 0xE800000000000000;
      v0[183] = 0;
      v0[184] = 0xE000000000000000;
      sub_100180324();
      Swift::Int v6 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      Swift::Int v8 = v7;
      swift_bridgeObjectRelease();
      sub_10013C798((Swift::Int *)v62, v6, v8);
    }
    swift_bridgeObjectRelease();
    if (++v5 == v61)
    {
      swift_bridgeObjectRelease();
      id v49 = (void *)v0[221];
      uint64_t v2 = (void *)v0[203];
LABEL_80:
      uint64_t v50 = swift_allocObject();
      v0[226] = v50;
      *(void *)(v50 + 16) = v49;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10010118C(qword_1015DCCA8);
      swift_asyncLet_begin();
      type metadata accessor for MapsSyncQueryPredicate();
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_100F5CF70;
      *(void *)(v51 + 56) = sub_1000FF33C(&qword_1015DCD98);
      *(void *)(v51 + 64) = sub_1001010F8(&qword_1015DCDA0, &qword_1015DCD98);
      *(void *)(v51 + 32) = v2;
      swift_bridgeObjectRetain();
      id v52 = NSPredicate.init(format:_:)();
      v0[227] = v52;
      id v53 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
      id v54 = v52;
      v0[228] = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
      uint64_t v55 = swift_bridgeObjectRetain();
      id v56 = sub_10034F1C0(v55);
      swift_bridgeObjectRelease();
      uint64_t v57 = swift_allocObject();
      v0[229] = v57;
      *(void *)(v57 + 16) = v56;
      swift_retain();
      sub_10010118C(&qword_1015DCDB8);
      swift_asyncLet_begin();
      v0[197] = _swiftEmptyArrayStorage;
_swift_asyncLet_get:
      JUMPOUT(0x100DBBC60);
    }
  }
  if ((v19 & 0x2000000000000000) == 0)
  {
    if ((v17 & 0x1000000000000000) != 0) {
      uint64_t v23 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v23 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v24 = (unint64_t)sub_10021C4E4(v23, v21, 10);
    uint64_t v25 = v10;
    char v27 = v26 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_48;
  }
  v62[0] = (id)v17;
  v62[1] = (id)(v19 & 0xFFFFFFFFFFFFFFLL);
  if (v17 == 43)
  {
    if (!v20) {
      goto LABEL_84;
    }
    if (v20 == 1 || (BYTE1(v17) - 48) > 9u) {
      goto LABEL_42;
    }
    unint64_t v24 = (BYTE1(v17) - 48);
    if (v20 == 2) {
      goto LABEL_53;
    }
    if ((BYTE2(v17) - 48) > 9u) {
      goto LABEL_42;
    }
    uint64_t v25 = v10;
    unint64_t v24 = 10 * (BYTE1(v17) - 48) + (BYTE2(v17) - 48);
    uint64_t v31 = v20 - 3;
    if (v31)
    {
      uint64_t v32 = (unsigned __int8 *)v62 + 3;
      while (1)
      {
        unsigned int v33 = *v32 - 48;
        if (v33 > 9) {
          goto LABEL_43;
        }
        if (!is_mul_ok(v24, 0xAuLL)) {
          goto LABEL_43;
        }
        BOOL v29 = __CFADD__(10 * v24, v33);
        unint64_t v24 = 10 * v24 + v33;
        if (v29) {
          goto LABEL_43;
        }
        char v27 = 0;
        ++v32;
        if (!--v31) {
          goto LABEL_45;
        }
      }
    }
  }
  else
  {
    if (v17 == 45)
    {
      if (!v20)
      {
        __break(1u);
LABEL_84:
        __break(1u);
        goto _swift_asyncLet_get;
      }
      if (v20 != 1)
      {
        unsigned __int8 v28 = BYTE1(v17) - 48;
        if ((BYTE1(v17) - 48) <= 9u)
        {
          unint64_t v24 = 0;
          BOOL v29 = v28 == 0;
          unint64_t v30 = -(uint64_t)v28;
          if (!v29)
          {
            uint64_t v25 = v10;
LABEL_44:
            char v27 = 1;
            goto LABEL_45;
          }
          if (v20 == 2)
          {
            uint64_t v25 = v10;
            char v27 = 0;
            unint64_t v24 = v30;
            goto LABEL_45;
          }
          unsigned __int8 v42 = BYTE2(v17) - 48;
          if ((BYTE2(v17) - 48) <= 9u && is_mul_ok(v30, 0xAuLL))
          {
            uint64_t v25 = v10;
            unint64_t v43 = 10 * v30;
            unint64_t v24 = v43 - v42;
            if (v43 >= v42)
            {
              uint64_t v44 = v20 - 3;
              if (!v44) {
                goto LABEL_66;
              }
              uint64_t v45 = (unsigned __int8 *)v62 + 3;
              while (1)
              {
                unsigned int v46 = *v45 - 48;
                if (v46 > 9) {
                  break;
                }
                if (!is_mul_ok(v24, 0xAuLL)) {
                  break;
                }
                BOOL v29 = 10 * v24 >= v46;
                unint64_t v24 = 10 * v24 - v46;
                if (!v29) {
                  break;
                }
                char v27 = 0;
                ++v45;
                if (!--v44) {
                  goto LABEL_45;
                }
              }
            }
LABEL_43:
            unint64_t v24 = 0;
            goto LABEL_44;
          }
        }
      }
LABEL_42:
      uint64_t v25 = v10;
      goto LABEL_43;
    }
    if (!v20 || (v17 - 48) > 9u) {
      goto LABEL_42;
    }
    unint64_t v24 = (v17 - 48);
    if (v20 == 1)
    {
LABEL_53:
      uint64_t v25 = v10;
      char v27 = 0;
      goto LABEL_45;
    }
    if ((BYTE1(v17) - 48) > 9u) {
      goto LABEL_42;
    }
    uint64_t v25 = v10;
    unint64_t v24 = 10 * (v17 - 48) + (BYTE1(v17) - 48);
    uint64_t v39 = v20 - 2;
    if (v39)
    {
      uint64_t v40 = (unsigned __int8 *)v62 + 2;
      while (1)
      {
        unsigned int v41 = *v40 - 48;
        if (v41 > 9) {
          goto LABEL_43;
        }
        if (!is_mul_ok(v24, 0xAuLL)) {
          goto LABEL_43;
        }
        BOOL v29 = __CFADD__(10 * v24, v41);
        unint64_t v24 = 10 * v24 + v41;
        if (v29) {
          goto LABEL_43;
        }
        char v27 = 0;
        ++v40;
        if (!--v39) {
          goto LABEL_45;
        }
      }
    }
  }
LABEL_66:
  char v27 = 0;
  goto LABEL_45;
}

uint64_t sub_10035A55C()
{
  return _swift_task_switch(sub_10035A578, 0, 0);
}

uint64_t sub_10035A578()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_10024C234(v1);
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1528, sub_10035A600, v0 + 1632);
}

uint64_t sub_10035A600()
{
  *(void *)(v1 + 1840) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10035AA3C;
  }
  else
  {
    uint64_t v2 = sub_10035A698;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035A698()
{
  unint64_t v1 = v0[191];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_13;
    }
  }
  uint64_t v3 = sub_10025B0BC(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return _swift_asyncLet_finish(v3, v4, v5, v6);
  }
  uint64_t v7 = 0;
  uint64_t v8 = v0[224];
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v1 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    uint64_t v11 = v0[225];
    uint64_t v12 = v0[223];
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    sub_100358D60(v10, v12, v11);
    unint64_t v15 = _swiftEmptyArrayStorage[2];
    unint64_t v14 = _swiftEmptyArrayStorage[3];
    if (v15 >= v14 >> 1) {
      sub_10025B0BC(v14 > 1, v15 + 1, 1);
    }
    uint64_t v16 = v0[225];
    ++v7;
    _swiftEmptyArrayStorage[2] = v15 + 1;
    sub_10035DB00(v16, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v15);
  }
  while (v2 != v7);
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024C234((uint64_t)_swiftEmptyArrayStorage);
  v0[231] = v0[197];
  uint64_t v5 = sub_10035A8D0;
  uint64_t v3 = (uint64_t)(v0 + 82);
  uint64_t v4 = v0 + 191;
  Swift::Int v6 = v0 + 210;
  return _swift_asyncLet_finish(v3, v4, v5, v6);
}

uint64_t sub_10035A8D0()
{
  return _swift_task_switch(sub_10035A8EC, 0, 0);
}

uint64_t sub_10035A8EC()
{
  unint64_t v1 = *(void **)(v0 + 1824);

  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1720, sub_10035A988, v0 + 1584);
}

uint64_t sub_10035A988()
{
  return _swift_task_switch(sub_10035A9A4, 0, 0);
}

uint64_t sub_10035A9A4()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 1848);
  return v1(v2);
}

uint64_t sub_10035AA3C()
{
  return _swift_asyncLet_finish(v0 + 656, v0 + 1528, sub_10035AA5C, v0 + 1536);
}

uint64_t sub_10035AA5C()
{
  return _swift_task_switch(sub_10035AA78, 0, 0);
}

uint64_t sub_10035AA78()
{
  unint64_t v1 = *(void **)(v0 + 1824);

  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1720, sub_10035AB14, v0 + 1296);
}

uint64_t sub_10035AB14()
{
  return _swift_task_switch(sub_10035AB30, 0, 0);
}

uint64_t sub_10035AB30()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035ABC4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_10035ABE4, 0, 0);
}

uint64_t sub_10035ABE4()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_10034F2E8(v1);
  v0[5] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  uint64_t v5 = sub_1000FF33C(qword_1015DCCA8);
  *uint64_t v4 = v0;
  v4[1] = sub_10035AD04;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000001FLL, 0x8000000100F89A50, sub_10035E0EC, v3, v5);
}

uint64_t sub_10035AD04()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10035AE1C, 0, 0);
}

uint64_t sub_10035AE1C()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  *uint64_t v1 = v0[2];
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10035AE8C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001E7FBC;
  v4[3] = a2;
  return _swift_task_switch(sub_10035DBEC, 0, 0);
}

uint64_t sub_10035AF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[24] = a3;
  v4[25] = a4;
  v4[23] = a2;
  sub_1000FF33C(&qword_1015CD250);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  uint64_t v5 = sub_1000FF33C(&qword_1015DCDF0);
  v4[28] = v5;
  v4[29] = *(void *)(v5 - 8);
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_10035B044, 0, 0);
}

uint64_t sub_10035B044()
{
  uint64_t v1 = *(void *)(v0 + 192);
  id v49 = [objc_allocWithZone((Class)CLGeocoder) init];
  *(void *)(v0 + 248) = v49;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    id v52 = (BOOL *)(v0 + 264);
    uint64_t v57 = (double *)(v0 + 160);
    id v53 = (void *)(v0 + 176);
    id v54 = (BOOL *)(v0 + 265);
    uint64_t v3 = *(void *)(v0 + 192);
    sub_100180324();
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(v3 + 40);
    while (1)
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      *(void *)(v0 + 144) = v5;
      *(void *)(v0 + 152) = v6;
      *(void *)(v0 + 112) = 44;
      *(void *)(v0 + 120) = 0xE100000000000000;
      swift_bridgeObjectRetain();
      uint64_t v7 = (void *)StringProtocol.components<A>(separatedBy:)();
      uint64_t v8 = v7;
      if (v7[2] == 2) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      v4 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
    }
    uint64_t v55 = v5;
    uint64_t v9 = v7[4];
    uint64_t v10 = v7[5];
    *uint64_t v57 = 0.0;
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v57;
    if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v9 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      _StringGuts._slowWithCString<A>(_:)();
      uint64_t v13 = (char *)(v0 + 265);
    }
    else
    {
      uint64_t v12 = swift_task_alloc();
      *(void *)(v12 + 16) = sub_10035DF50;
      *(void *)(v12 + 24) = v11;
      uint64_t v13 = (char *)(v0 + 265);
      if ((v10 & 0x2000000000000000) != 0)
      {
        *(void *)(v0 + 96) = v9;
        *(void *)(v0 + 104) = v10 & 0xFFFFFFFFFFFFFFLL;
        switch((char)v9)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
            swift_bridgeObjectRetain();
            goto LABEL_18;
          default:
            swift_bridgeObjectRetain();
            uint64_t v45 = (unsigned char *)_swift_stdlib_strtod_clocale();
            if (v45) {
              BOOL v16 = *v45 == 0;
            }
            else {
LABEL_18:
            }
              BOOL v16 = 0;
            *id v54 = v16;
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            break;
        }
LABEL_20:
        char v17 = *v13;
        swift_task_dealloc();
        if ((v17 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_44:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        if (v8[2] < 2uLL)
        {
          __break(1u);
          JUMPOUT(0x10035B830);
        }
        double v18 = *v57;
        uint64_t v20 = v8[6];
        uint64_t v19 = v8[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *id v53 = 0;
        uint64_t v21 = swift_task_alloc();
        *(void *)(v21 + 16) = v53;
        if ((v19 & 0x1000000000000000) != 0 || !(v19 & 0x2000000000000000 | v20 & 0x1000000000000000))
        {
          BOOL v29 = (char *)(v0 + 264);
          _StringGuts._slowWithCString<A>(_:)();
        }
        else
        {
          uint64_t v22 = swift_task_alloc();
          *(void *)(v22 + 16) = sub_10035DF50;
          *(void *)(v22 + 24) = v21;
          if ((v19 & 0x2000000000000000) != 0)
          {
            *(void *)(v0 + 128) = v20;
            *(void *)(v0 + 136) = v19 & 0xFFFFFFFFFFFFFFLL;
            BOOL v28 = (v20 > 0x20u || ((0x100003E01uLL >> v20) & 1) == 0)
               && (char v27 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
               && *v27 == 0;
            BOOL v29 = (char *)(v0 + 264);
            *id v52 = v28;
            swift_bridgeObjectRelease();
            swift_task_dealloc();
LABEL_41:
            char v30 = *v29;
            swift_task_dealloc();
            if (v30)
            {
              uint64_t v31 = *(void *)(v0 + 216);
              uint64_t v51 = *(void *)(v0 + 208);
              id v50 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v18 longitude:*(double *)(v0 + 176)];
              uint64_t v32 = type metadata accessor for TaskPriority();
              uint64_t v33 = *(void *)(v32 - 8);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, 1, 1, v32);
              id v34 = (void *)swift_allocObject();
              v34[2] = 0;
              v34[3] = 0;
              v34[4] = v49;
              v34[5] = v50;
              v34[6] = v55;
              v34[7] = v6;
              sub_1000FF27C(v31, v51, &qword_1015CD250);
              int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v51, 1, v32);
              id v36 = v49;
              id v56 = v50;
              uint64_t v37 = *(void *)(v0 + 208);
              if (v35 == 1)
              {
                sub_1000FF2E0(*(void *)(v0 + 208), &qword_1015CD250);
              }
              else
              {
                TaskPriority.rawValue.getter();
                (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v32);
              }
              if (v34[2])
              {
                swift_getObjectType();
                swift_unknownObjectRetain();
                uint64_t v38 = dispatch thunk of Actor.unownedExecutor.getter();
                uint64_t v40 = v39;
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v38 = 0;
                uint64_t v40 = 0;
              }
              uint64_t v41 = **(void **)(v0 + 184);
              sub_1000FF33C(&qword_1015DCDD8);
              uint64_t v42 = v40 | v38;
              if (v40 | v38)
              {
                uint64_t v42 = v0 + 16;
                *(void *)(v0 + 16) = 0;
                *(void *)(v0 + 24) = 0;
                *(void *)(v0 + 32) = v38;
                *(void *)(v0 + 40) = v40;
              }
              uint64_t v43 = *(void *)(v0 + 216);
              *(void *)(v0 + 48) = 1;
              *(void *)(v0 + 56) = v42;
              *(void *)(v0 + 64) = v41;
              swift_task_create();

              swift_release();
              sub_1000FF2E0(v43, &qword_1015CD250);
              goto LABEL_4;
            }
            goto LABEL_44;
          }
          if ((v20 & 0x1000000000000000) != 0) {
            uint64_t v23 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v23 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
          }
          unint64_t v24 = *v23;
          BOOL v26 = (v24 >= 0x21 || ((0x100003E01uLL >> v24) & 1) == 0)
             && (uint64_t v25 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
             && *v25 == 0;
          BOOL v29 = (char *)(v0 + 264);
          *id v52 = v26;
          swift_task_dealloc();
        }
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      if ((v9 & 0x1000000000000000) != 0) {
        unint64_t v14 = (unsigned char *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unint64_t v14 = (unsigned char *)_StringObject.sharedUTF8.getter();
      }
      switch(*v14)
      {
        case 0:
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
        case 0xD:
        case 0x20:
          swift_bridgeObjectRetain();
          goto LABEL_13;
        default:
          swift_bridgeObjectRetain();
          uint64_t v44 = (unsigned char *)_swift_stdlib_strtod_clocale();
          if (v44) {
            BOOL v15 = *v44 == 0;
          }
          else {
LABEL_13:
          }
            BOOL v15 = 0;
          *id v54 = v15;
          swift_task_dealloc();
          break;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_61:
  sub_1000FF33C(&qword_1015DCDD8);
  sub_1000FF33C(&qword_1015D98E0);
  ThrowingTaskGroup.makeAsyncIterator()();
  unsigned int v46 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v46;
  *unsigned int v46 = v0;
  v46[1] = sub_10035B938;
  uint64_t v47 = *(void *)(v0 + 224);
  return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, v47, v0 + 168);
}

uint64_t sub_10035B938()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_10035BBE4;
  }
  else {
    uint64_t v1 = sub_10035BA48;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10035BA48()
{
  if (v0[10])
  {
    uint64_t v1 = (void *)v0[11];
    swift_bridgeObjectRelease();
    if (v1)
    {
      uint64_t v2 = (void *)v0[25];
      id v3 = v1;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t v4 = (void *)swift_task_alloc();
    v0[32] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10035B938;
    uint64_t v5 = v0[28];
    return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 9, 0, 0, v5, v0 + 21);
  }
  else
  {
    uint64_t v6 = (void *)v0[31];
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10035BBE4()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10035BC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v7[16] = a1;
  return _swift_task_switch(sub_10035BCB8, 0, 0);
}

uint64_t sub_10035BCB8()
{
  uint64_t v2 = (void *)v0[17];
  uint64_t v1 = v0[18];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10035BDB8;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10035C064;
  v0[13] = &unk_1012E5BC8;
  v0[14] = v3;
  [v2 reverseGeocodeLocation:v1 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10035BDB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_10035BFC4;
  }
  else {
    uint64_t v2 = sub_10035BEC8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035BEC8()
{
  uint64_t v1 = v0[20];
  unint64_t v3 = v0[15];
  uint64_t v2 = (void *)v0[16];
  *uint64_t v2 = v0[19];
  v2[1] = v1;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_7;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v6 = *(id *)(v3 + 32);
  }
  uint64_t v4 = (uint64_t)v6;
LABEL_7:
  swift_bridgeObjectRelease();
  *(void *)(v0[16] + 16) = v4;
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10035BFC4()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[19];
  unint64_t v3 = (void *)v0[16];
  swift_willThrow();
  swift_errorRelease();
  *unint64_t v3 = v2;
  v3[1] = v1;
  v3[2] = 0;
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  return v5();
}

uint64_t sub_10035C064(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000FF33C(&qword_1015D98E0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_100100830(0, &qword_1015DCE08);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10035C140(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  if (a1) {
    uint64_t v5 = sub_1002B7374(a1);
  }
  else {
    uint64_t v5 = 0;
  }
  a3(v5, a2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10035C1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015DCE10);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_10035E20C(a2, (uint64_t)sub_10035E188, v9);
  return swift_release();
}

uint64_t sub_10035C2EC(unint64_t a1)
{
  if (a1) {
    sub_10035E420(a1);
  }
  sub_1000FF33C(&qword_1015DCE10);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10035C348(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return _swift_task_switch(sub_10035C368, 0, 0);
}

uint64_t sub_10035C368()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10035C464;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10035C600;
  v0[13] = &unk_1012E5CA8;
  v0[14] = v2;
  [v1 startWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10035C464()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_10035C594;
  }
  else {
    uint64_t v2 = sub_10035C574;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035C574()
{
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035C594()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035C600(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000FF33C(&qword_1015D98E0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

uint64_t sub_10035C6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1015DCE18 + dword_1015DCE18);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100189EA8;
  return v8(a2, a3);
}

unint64_t sub_10035C77C()
{
  unint64_t result = qword_1015DCC78;
  if (!qword_1015DCC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCC78);
  }
  return result;
}

unint64_t sub_10035C7D4()
{
  unint64_t result = qword_1015DCC80[0];
  if (!qword_1015DCC80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015DCC80);
  }
  return result;
}

uint64_t sub_10035C828()
{
  return sub_10035EBE4(&qword_1015D96A0, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
}

uint64_t sub_10035C870(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10018A124;
  return sub_100359ADC(a1);
}

uint64_t sub_10035C904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_10005056C;
  return EntityQuery.suggestedEntities()(a1, a2, a3);
}

unint64_t sub_10035C9BC()
{
  unint64_t result = qword_1015DCC98;
  if (!qword_1015DCC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCC98);
  }
  return result;
}

unint64_t sub_10035CA14()
{
  unint64_t result = qword_1015DCCA0;
  if (!qword_1015DCCA0)
  {
    sub_10010118C(qword_1015DCCA8);
    sub_10035EBE4(&qword_1015DCC48, (void (*)(uint64_t))type metadata accessor for PlaceEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015DCCA0);
  }
  return result;
}

uint64_t sub_10035CAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1003576D8();
  *uint64_t v5 = v2;
  v5[1] = sub_100105268;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for PlaceQuery()
{
  return &type metadata for PlaceQuery;
}

void *sub_10035CB7C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    double v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *double v18 = *v19;
    v18[1] = v20;
    *(void *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v21 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[11];
    uint64_t v26 = a3[12];
    char v27 = (void *)((char *)v4 + v25);
    BOOL v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *char v27 = *v28;
    v27[1] = v29;
    char v30 = (void *)((char *)v4 + v26);
    uint64_t v31 = (uint64_t *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    void *v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10035CD98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10035CEB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v19 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)(a1 + v23);
  uint64_t v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  BOOL v28 = (void *)(a1 + v24);
  uint64_t v29 = (void *)(a2 + v24);
  uint64_t v30 = v29[1];
  *BOOL v28 = *v29;
  v28[1] = v30;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10035D080(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  void *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10035D318(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_10035D488(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v26);
  BOOL v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10035D6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035D6D4);
}

uint64_t sub_10035D6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10035D7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035D7B4);
}

uint64_t sub_10035D7B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

void sub_10035D87C()
{
  sub_10000B964();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10035D93C()
{
  return sub_1001010F8(&qword_1015DCD70, &qword_1015DCD78);
}

uint64_t sub_10035D978()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035D9B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100105268;
  v5[3] = a1;
  v5[4] = v4;
  return _swift_task_switch(sub_10035ABE4, 0, 0);
}

uint64_t sub_10035DA60(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100105268;
  return sub_10035AE8C(a1, v4);
}

uint64_t sub_10035DB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035DB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035DBCC(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return _swift_task_switch(sub_10035DBEC, 0, 0);
}

uint64_t sub_10035DBEC()
{
  uint64_t v1 = v0[3];
  v0[2] = _swiftEmptyArrayStorage;
  sub_1000FF33C(&qword_1015DCDD8);
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0 + 2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10035DCF8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10035DCF8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10035DE30;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10035DE14;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035DE14()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10035DE30()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035DE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_100105268;
  return sub_10035AF3C(a1, a2, v7, v6);
}

unsigned char *sub_10035DF50@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_10035DF68(a1, a2);
}

unsigned char *sub_10035DF68@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_10035DFD8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10035E028(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_10005056C;
  *(void *)(v6 + 152) = v4;
  *(void *)(v6 + 160) = v5;
  *(_OWORD *)(v6 + 136) = v7;
  *(void *)(v6 + 128) = a1;
  return _swift_task_switch(sub_10035BCB8, 0, 0);
}

uint64_t sub_10035E0EC(uint64_t a1)
{
  return sub_10035C1A8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10035E0F4()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015DCE10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10035E188(unint64_t a1)
{
  sub_1000FF33C(&qword_1015DCE10);

  return sub_10035C2EC(a1);
}

void sub_10035E20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)MKMapService) init];
  sub_100100830(0, &qword_1015D6420);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v7 = [v5 ticketForIdentifiers:isa traits:0];

  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a2;
    *(void *)(v8 + 24) = a3;
    uint64_t v15 = sub_10035E418;
    uint64_t v16 = v8;
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    int v13 = sub_10013844C;
    int v14 = &unk_1012E5C30;
    uint64_t v9 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    uint64_t v15 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
    uint64_t v16 = 0;
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    int v13 = sub_100316A88;
    int v14 = &unk_1012E5C58;
    uint64_t v10 = _Block_copy(&v11);
    [v7 submitWithHandler:v9 networkActivity:v10];
    _Block_release(v10);
    _Block_release(v9);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10035E3E0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035E418(uint64_t a1, uint64_t a2)
{
  return sub_10035C140(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

void *sub_10035E420(unint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlaceEntity();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  if (!(a1 >> 62))
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = (uint64_t)result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    unint64_t v22 = a1 & 0xC000000000000001;
    uint64_t v15 = _swiftEmptyArrayStorage;
    unint64_t v23 = a1;
    do
    {
      if (v22) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(a1 + 8 * v14 + 32);
      }
      uint64_t v17 = v16;
      uint64_t v18 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
      id v19 = v17;
      sub_10035772C(v19, (uint64_t)v4, (uint64_t)v11);
      sub_1002AE4EC((uint64_t)v11, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = (void *)sub_1001D1104(0, v15[2] + 1, 1, (unint64_t)v15);
      }
      unint64_t v21 = v15[2];
      unint64_t v20 = v15[3];
      if (v21 >= v20 >> 1) {
        uint64_t v15 = (void *)sub_1001D1104(v20 > 1, v21 + 1, 1, (unint64_t)v15);
      }
      ++v14;
      void v15[2] = v21 + 1;
      sub_10035DB00((uint64_t)v8, (uint64_t)v15+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v21);

      sub_1002AE550((uint64_t)v11);
      a1 = v23;
    }
    while (v12 != v14);
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10035E6F0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 720) = a2;
  *(void *)(v2 + 712) = a1;
  return _swift_task_switch(sub_10035E714, 0, 0);
}

uint64_t sub_10035E714()
{
  id v1 = [objc_allocWithZone((Class)MKLocalSearchRequest) init];
  v0[91] = v1;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setNaturalLanguageQuery:v2];

  id v3 = [objc_allocWithZone((Class)MKLocalSearch) initWithRequest:v1];
  v0[92] = v3;
  uint64_t v4 = swift_allocObject();
  v0[93] = v4;
  *(void *)(v4 + 16) = v3;
  id v5 = v3;
  swift_retain();
  sub_100100830(255, &qword_1015DCE30);
  swift_asyncLet_begin();
  v0[88] = _swiftEmptyArrayStorage;
  return _swift_asyncLet_get_throwing(v0 + 2, v0 + 87, sub_10035E884, v0 + 82);
}

uint64_t sub_10035E884()
{
  *(void *)(v1 + 752) = v0;
  if (v0) {
    NSString v2 = sub_10035EA44;
  }
  else {
    NSString v2 = sub_10035E8B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035E8B8()
{
  id v1 = [*(id *)(v0 + 696) mapItems];
  sub_100100830(0, &qword_1015CF128);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = sub_10035E420(v2);
  swift_bridgeObjectRelease();
  sub_10024C234((uint64_t)v3);
  *(void *)(v0 + 760) = *(void *)(v0 + 704);
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, sub_10035E9A8, v0 + 656);
}

uint64_t sub_10035E9A8()
{
  return _swift_task_switch(sub_10035E9C4, 0, 0);
}

uint64_t sub_10035E9C4()
{
  id v1 = *(void **)(v0 + 736);

  swift_release_n();
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 760);
  return v2(v3);
}

uint64_t sub_10035EA44()
{
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, sub_10035EA64, v0 + 656);
}

uint64_t sub_10035EA64()
{
  return _swift_task_switch(sub_10035EA80, 0, 0);
}

uint64_t sub_10035EA80()
{
  id v1 = *(void **)(v0 + 736);

  swift_release_n();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10035EAFC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035EB34(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100105268;
  v5[16] = a1;
  v5[17] = v4;
  return _swift_task_switch(sub_10035C368, 0, 0);
}

uint64_t sub_10035EBE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

id sub_10035EEBC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) trackingStateReason] == (id)2) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = 2;
  }
  uint64_t v3 = *(void **)(a1 + 40);

  return [v3 setCurrentState:v2];
}

void sub_10035EF5C(id a1)
{
  uint64_t v1 = (void *)qword_10160E970;
  qword_10160E970 = (uint64_t)&off_1013AD368;
}

id sub_100360C00(uint64_t a1)
{
  return [*(id *)(a1 + 32) sizeToFit];
}

void sub_100360C08(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  uint64_t v7 = [v5 customizationBlock];
  v7[2](v7, v6, a3, *(void *)(a1 + 40));
}

id sub_100360C88(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutBelowIfNeeded];
}

void sub_10036131C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100361340(uint64_t a1, void *a2, unsigned char *a3)
{
  id v21 = a2;
  [*(id *)(a1 + 32) addSubview:v21];
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = [v21 trailingAnchor];
  uint64_t v7 = [v6 constraintEqualToAnchor:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) constant:-*(double *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)];
  [v5 addObject:v7];

  id v8 = [*(id *)(a1 + 48) verticalArrangement];
  uint64_t v9 = *(void **)(a1 + 40);
  if (v8)
  {
    uint64_t v10 = [v21 centerYAnchor];
    [*(id *)(a1 + 32) centerYAnchor];
  }
  else
  {
    uint64_t v10 = [v21 topAnchor];
    [*(id *)(a1 + 32) topAnchor];
  uint64_t v11 = };
  uint64_t v12 = [v10 constraintEqualToAnchor:v11];
  [v9 addObject:v12];

  if ((char *)[*(id *)(a1 + 56) count] - 1 == a3)
  {
    int v13 = *(void **)(a1 + 40);
    uint64_t v14 = [v21 leadingAnchor];
    uint64_t v15 = [*(id *)(a1 + 32) leadingAnchor];
    id v16 = [v14 constraintGreaterThanOrEqualToAnchor:v15];
    [v13 addObject:v16];
  }
  uint64_t v17 = [v21 leadingAnchor];
  uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8);
  id v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;

  [*(id *)(a1 + 48) interItemHorizontalPadding];
  *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = v20;
}

void sub_10036271C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10036273C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)MKMapItem);
  uint64_t v5 = [v3 geoMapItem];

  id v9 = [v4 initWithGeoMapItem:v5 isPlaceHolderPlace:1];
  id v6 = [objc_alloc(*(Class *)(a1 + 40)) initWithMapItem:v9];
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100363064(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a2 resolvedMapItem];
  [v3 _didResolveMapItem:v4];

  [*(id *)(a1 + 40) setCompletedUnitCount:[*(id *)(a1 + 40) totalUnitCount]];
  uint64_t v5 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v5);
}

id sub_1003630D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) cancel];
}

void sub_1003634B8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 64) cancellationHandler];

  if (v2)
  {
    id v3 = [*(id *)(*(void *)(a1 + 32) + 64) cancellationHandler];
    v3[2]();
  }
}

void sub_100363540(uint64_t a1, void *a2)
{
  id v3 = a2;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_100363770;
  v20[3] = &unk_1012E5F00;
  id v22 = *(id *)(a1 + 56);
  id v21 = *(id *)(a1 + 32);
  id v4 = objc_retainBlock(v20);
  uint64_t v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472;
  id v16 = sub_1003637C0;
  uint64_t v17 = &unk_1012E5F28;
  id v18 = *(id *)(a1 + 40);
  uint64_t v5 = v4;
  id v19 = v5;
  id v6 = objc_retainBlock(&v14);
  uint64_t v7 = *(void **)(a1 + 40);
  id v8 = [UTTypeUTF8PlainText identifier:v14, v15, v16, v17];
  LODWORD(v7) = [v7 isEqualToString:v8];

  if (v7)
  {
    if (*(void *)(*(void *)(a1 + 48) + 24))
    {
      id v9 = objc_alloc_init((Class)CNContactFormatter);
      [v9 setStyle:0];
      uint64_t v10 = [*(id *)(*(void *)(a1 + 48) + 24) contact];
      uint64_t v11 = [v9 stringFromContact:v10];
    }
    else
    {
      uint64_t v11 = [v3 name];
    }
    ((void (*)(void ***, void *))v6[2])(v6, v11);
  }
  else
  {
    uint64_t v12 = +[MKMapItem writableTypeIdentifiersForItemProvider];
    unsigned int v13 = [v12 containsObject:*(void *)(a1 + 40)];

    if (v13) {
      ((void (*)(void ***, id))v6[2])(v6, v3);
    }
  }
}

id sub_100363770(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = [*(id *)(a1 + 32) totalUnitCount];
  id v3 = *(void **)(a1 + 32);

  return [v3 setCompletedUnitCount:v2];
}

id sub_1003637C0(uint64_t a1, void *a2)
{
  if (a2) {
    return [a2 loadDataWithTypeIdentifier:*(void *)(a1 + 32) forItemProviderCompletionHandler:*(void *)(a1 + 40)];
  }
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return (id)v3();
}

uint64_t sub_100363814(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(*(void *)(a1 + 32) + 56));
}

id sub_100365FE4(id a1, MKMapItem *a2, unint64_t a3)
{
  id v3 = [(MKMapItem *)a2 _cnPostalAddress];
  id v4 = [v3 copy];

  return v4;
}

id sub_1003673EC()
{
  if (qword_10160E998 != -1) {
    dispatch_once(&qword_10160E998, &stru_1012E6138);
  }
  uint64_t v0 = (void *)qword_10160E990;

  return v0;
}

void sub_1003675F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_10036769C;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10036769C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1003676B0(uint64_t a1, void *a2, uint64_t a3, void *a4, double a5)
{
  id v9 = a2;
  id v10 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003677A0;
  block[3] = &unk_1012E6028;
  id v11 = *(id *)(a1 + 32);
  id v16 = v10;
  id v17 = v11;
  double v18 = a5;
  uint64_t v19 = a3;
  id v15 = v9;
  id v12 = v10;
  id v13 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1003677A0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, double))(*(void *)(a1 + 48) + 16))(*(void *)(a1 + 48), *(void *)(a1 + 32), *(void *)(a1 + 64), *(void *)(a1 + 40), *(double *)(a1 + 56));
}

uint64_t sub_1003677C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100367960(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_100367A0C;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100367A0C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100367A20(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a2 image];
  [v3 _prepareImageThumbnailWithOriginalImage:v4 targetSize:*(void *)(a1 + 40) scale:*(double *)(a1 + 48) completion:*(double *)(a1 + 56) *(double *)(a1 + 64)];
}

void sub_100367C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100367C48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v8 = [v6 objectForKeyedSubscript:PHImageResultIsDegradedKey];
    unsigned int v9 = [v8 BOOLValue];

    if (v9)
    {
      id v10 = sub_1003673EC();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        int v15 = 138412290;
        uint64_t v16 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "UGCARPPhotoCarouselController loaded asset of low-resolution image quality: %@", (uint8_t *)&v15, 0xCu);
      }
    }
    if (v5)
    {
      GEOConfigGetDouble();
      id v13 = UIImageJPEGRepresentation(v5, v12);
      uint64_t v14 = [[UGCPhotoWithMetadata alloc] initWithImageData:v13 PHAsset:*(void *)(a1 + 32) sourceType:2];
      [(UGCPhotoWithMetadata *)v14 setIsSuggestedPhoto:1];
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
  }
}

uint64_t sub_100367EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if (!a2) {
    a2 = *(void *)(a1 + 32);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v3, a2);
}

void sub_100367FE8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCARPPhotoCarouselController");
  id v2 = (void *)qword_10160E990;
  qword_10160E990 = (uint64_t)v1;
}

id sub_10036846C()
{
  if (qword_10160E9A8 != -1) {
    dispatch_once(&qword_10160E9A8, &stru_1012E6180);
  }
  uint64_t v0 = (void *)qword_10160E9A0;

  return v0;
}

void sub_1003684C0(uint64_t a1, char a2)
{
  if (a2) {
    return;
  }
  if ([*(id *)(a1 + 32) _isValidURLForWebView:*(void *)(a1 + 40)])
  {
    id v6 = [objc_alloc((Class)SFSafariViewController) initWithURL:*(void *)(a1 + 40)];
    if (!sub_1000BBB44(v6)) {
      [v6 setModalPresentationStyle:2];
    }
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
    [WeakRetained _maps_topMostPresentViewController:v6 animated:1 completion:0];

    goto LABEL_8;
  }
  if ([*(id *)(a1 + 32) _isValidURLToOpen:*(void *)(a1 + 40)])
  {
    id v6 = +[MKSystemController sharedInstance];
    [v6 openURL:*(void *)(a1 + 40) completionHandler:0];
LABEL_8:

    return;
  }
  id v4 = sub_10036846C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412290;
    uint64_t v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "can't open the URL: %@", buf, 0xCu);
  }
}

void sub_10036870C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsWebLinkPresentation");
  id v2 = (void *)qword_10160E9A0;
  qword_10160E9A0 = (uint64_t)v1;
}

void sub_10036A974(uint64_t a1, void *a2)
{
  id v11 = a2;
  uint64_t v3 = [v11 mapItem];
  id v4 = [v3 _identifier];

  if (v4)
  {
    uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 168);
    id v6 = [v11 mapItem];
    id v7 = [v6 _identifier];
    uint64_t v8 = [v5 objectForKeyedSubscript:v7];

    if (v8)
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + 136);
      id v10 = [v11 mapItem];
      [v9 refreshResultForForTemplate:v8 mapItem:v10];
    }
  }
}

__CFString *sub_10036B264(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) _isItemVenue:v3])
  {
    id v4 = *(void **)(*(void *)(a1 + 32) + 88);
    id v5 = v3;
    id v6 = [v5 mapItem];
    [v4 addVenueProviderForMapItem:v6];

    id v7 = [*(id *)(a1 + 32) identifierCache];
    uint64_t v8 = [v7 identifierForObject:v5];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v8 = @"VenueDropDownIdentifier";
      goto LABEL_9;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v8 = +[ReportASearchAutocompleteResult identifier];
      goto LABEL_9;
    }
    id v7 = [*(id *)(a1 + 32) identifierCache];
    uint64_t v8 = [v7 identifierForObject:v3];
  }

LABEL_9:

  return v8;
}

_TtC4Maps28PlaceSummaryOutlineCellModel *sub_10036B39C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = v4;
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(unsigned char *)(v6 + 152))
    {
      id v7 = *(void **)(v6 + 160);
      uint64_t v8 = [v4 mapItem];
      unsigned int v9 = [v8 _identifier];
      id v10 = [v7 objectForKey:v9];

      if (!v10)
      {
        id v11 = [*(id *)(a1 + 40) placeSummaryMetadata];
        uint64_t v12 = *(void *)(a1 + 48);
        id v13 = [*(id *)(a1 + 40) openAt];
        id v10 = +[PlaceSummaryViewModelTemplateFactory viewModelWithSearchResult:v5 metadata:v11 currentLocation:v12 searchAlongRoute:0 openAt:v13];

        uint64_t v14 = *(void **)(*(void *)(a1 + 32) + 160);
        int v15 = [v5 mapItem];
        uint64_t v16 = [v15 _identifier];
        [v14 setObject:v10 forKey:v16];
      }
      id v17 = [*(id *)(a1 + 32) configuration];
      double v18 = [v17 collectionView];
      [v18 frame];
      [(PlaceContextViewModel *)v10 setContainerWidth:v19];

      uint64_t v20 = [*(id *)(a1 + 40) placeSummaryMetadata];
      -[PlaceContextViewModel setContainsPhotoCarouselLine:](v10, "setContainsPhotoCarouselLine:", [v20 containsPhotoCarouselLine]);

      [*(id *)(a1 + 32) addMetricsForPlaceSummaryTemplate:v10];
      id v21 = [[_TtC4Maps28PlaceSummaryOutlineCellModel alloc] initWithSearchResult:v5 placeSummaryViewModelTemplate:v10 delegate:*(void *)(a1 + 32) asyncDataManager:*(void *)(*(void *)(a1 + 32) + 128) curatedCollectionImageDownloader:*(void *)(*(void *)(a1 + 32) + 144)];
    }
    else
    {
      unint64_t v23 = [PlaceContextViewModel alloc];
      uint64_t v24 = [v5 mapItem];
      id v10 = [(PlaceContextViewModel *)v23 initWithMapItem:v24 context:0];

      uint64_t v25 = [SearchResultOutlineCellModel alloc];
      uint64_t v26 = *(void *)(a1 + 48);
      uint64_t v27 = [*(id *)(a1 + 40) searchFieldItem];
      BOOL v28 = [v27 currentCategory];
      id v21 = -[SearchResultOutlineCellModel initWithSearchResult:currentLocation:searchCategory:displayDistance:distanceUnit:prefersAddressOverCategory:placeContextViewModel:placeContextViewModelDelegate:](v25, "initWithSearchResult:currentLocation:searchCategory:displayDistance:distanceUnit:prefersAddressOverCategory:placeContextViewModel:placeContextViewModelDelegate:", v5, v26, v28, 1, *(void *)(a1 + 56), [*(id *)(a1 + 40) prefersAddressOverCategory], v10, *(void *)(a1 + 32));
    }
    goto LABEL_15;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v22 = [v3 cellModel];
LABEL_12:
    id v21 = v22;
    goto LABEL_15;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v22 = (_TtC4Maps28PlaceSummaryOutlineCellModel *)v3;
    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v30 = [_TtC4Maps28PlaceSummaryOutlineCellModel alloc];
    uint64_t v31 = +[PlaceSummaryViewModelTemplateFactory addAPlaceSearchViewModel];
    id v21 = [(PlaceSummaryOutlineCellModel *)v30 initWithRapObject:v3 placeSummaryViewModelTemplate:v31 delegate:*(void *)(a1 + 32) asyncDataManager:*(void *)(*(void *)(a1 + 32) + 128) curatedCollectionImageDownloader:*(void *)(*(void *)(a1 + 32) + 144)];
  }
  else
  {
    uint64_t v32 = sub_1000AA148();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      id v34 = v3;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "No items are returned. Item is : %@", buf, 0xCu);
    }

    id v21 = 0;
  }
LABEL_15:

  return v21;
}

id sub_10036B7E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) _isItemVenue:v3])
  {
    id v4 = [*(id *)(a1 + 32) _childItemsInVenueSearchResult:v3];
  }
  else
  {
    id v4 = &__NSArray0__struct;
  }

  return v4;
}

id sub_10036B858(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a3;
  id v5 = [v3 expandedIdentifierPaths];
  uint64_t v6 = [v4 topIdentifierPath];

  id v7 = [v5 containsObject:v6];
  return v7;
}

void sub_10036D688(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  id v8 = *(id *)(a1 + 32);
  [v2 addChildViewController:v8];
  id v3 = [*(id *)(a1 + 40) view];
  id v4 = [v8 view];
  id v5 = [*(id *)(a1 + 40) titleHeaderView];
  [v3 insertSubview:v4 belowSubview:v5];

  uint64_t v6 = [v8 view];
  [v6 setAlpha:1.0];

  id v7 = [*(id *)(a1 + 40) cardPresentationController];
  [v7 wantsLayout:2];

  [v8 didMoveToParentViewController:*(void *)(a1 + 40)];
}

void sub_10036DBC8(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 176) scrollView];
  [v2 contentInset];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 176) scrollView];
  [v3 contentOffset];

  if (*(unsigned char *)(a1 + 40)) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  id v5 = [*(id *)(a1 + 32) titleHeaderView];
  [v5 setHairLineAlpha:v4];
}

void sub_10036E388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10036E3AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v6 = [WeakRetained menuElementForActionItem:v3];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void sub_10036E56C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10036E58C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) selected];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) selectedItem];
    [WeakRetained performAction:v3 options:&__NSDictionary0__struct completion:&stru_1012E6290];
  }
  else
  {
    [WeakRetained performAction:*(void *)(a1 + 32) options:&__NSDictionary0__struct completion:&stru_1012E62B0];
  }
}

UIColor *__cdecl sub_10036F768(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

void sub_10036F9D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10036F9FC(uint64_t a1, void *a2)
{
  id v16 = a2;
  int v15 = [v16 displayString];
  unsigned int v2 = [v16 subcategories];
  id v3 = [v2 count];

  if (v3)
  {
    double v18 = +[NSMutableArray array];
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id obj = [v16 subcategories];
    id v4 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v4)
    {
      uint64_t v5 = *(void *)v26;
      do
      {
        for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v26 != v5) {
            objc_enumerationMutation(obj);
          }
          id v7 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          id v8 = [v7 displayString];
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472;
          v23[2] = sub_10036FDA4;
          v23[3] = &unk_1012E6368;
          objc_copyWeak(&v24, (id *)(a1 + 48));
          v23[4] = v7;
          unsigned int v9 = +[UIAction actionWithTitle:v8 image:0 identifier:0 handler:v23];
          id v10 = [*(id *)(*(void *)(a1 + 32) + 48) selectedCategory];
          [v9 setState:[v10 isEqual:v7]];

          [v18 addObject:v9];
          objc_destroyWeak(&v24);
        }
        id v4 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
      }
      while (v4);
    }

    id v11 = +[UIMenu menuWithTitle:v15 children:v18];
    [*(id *)(a1 + 40) addObject:v11];
  }
  else
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_10036FDF4;
    v20[3] = &unk_1012E6368;
    objc_copyWeak(&v22, (id *)(a1 + 48));
    id v12 = v16;
    id v21 = v12;
    id v13 = +[UIAction actionWithTitle:v15 image:0 identifier:0 handler:v20];
    uint64_t v14 = [*(id *)(*(void *)(a1 + 32) + 48) selectedCategory];
    [v13 setState:[v14 isEqual:v12]];

    [*(id *)(a1 + 40) addObject:v13];
    objc_destroyWeak(&v22);
  }
}

void sub_10036FD7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10036FDA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _itemSelectedCategory:*(void *)(a1 + 32)];
}

void sub_10036FDF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _itemSelectedCategory:*(void *)(a1 + 32)];
}

void sub_10036FFC0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_1012E63D0];
  unsigned int v2 = (void *)qword_10160E9B0;
  qword_10160E9B0 = v1;
}

void sub_100370020(id a1, VenueDropDownOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  id v8 = a2;
  uint64_t v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = v6;

  [(VenueDropDownOutlineCell *)v8 setCellModel:v7];
}

id sub_100370C60()
{
  if (qword_10160E9C8 != -1) {
    dispatch_once(&qword_10160E9C8, &stru_1012E6410);
  }
  uint64_t v0 = (void *)qword_10160E9C0;

  return v0;
}

void sub_100371D28(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsLoopingVideoPlayerView");
  unsigned int v2 = (void *)qword_10160E9C0;
  qword_10160E9C0 = (uint64_t)v1;
}

int64_t sub_10037342C(id a1, RAPUserPathEntry *a2, RAPUserPathEntry *a3)
{
  id v4 = a3;
  uint64_t v5 = a2;
  unsigned int v6 = [(RAPUserPathEntry *)v5 routeIndex];
  if (v6 == [(RAPUserPathEntry *)v4 routeIndex])
  {
    id v7 = (id)[(RAPUserPathEntry *)v5 stepIndex];

    id v8 = +[NSNumber numberWithUnsignedInt:v7];
    id v9 = (id)[(RAPUserPathEntry *)v4 stepIndex];
  }
  else
  {
    id v10 = (id)[(RAPUserPathEntry *)v5 routeIndex];

    id v8 = +[NSNumber numberWithUnsignedInt:v10];
    id v9 = (id)[(RAPUserPathEntry *)v4 routeIndex];
  }
  id v11 = +[NSNumber numberWithUnsignedInt:v9];
  id v12 = [v8 compare:v11];

  return (int64_t)v12;
}

void sub_100373524(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v3 routeIndex]);
  unsigned int v6 = [v4 objectForKey:v5];

  if (v6) {
    goto LABEL_4;
  }
  uint64_t v7 = sub_10058DD3C(*(void **)(*(void *)(a1 + 40) + 16), [v3 routeIndex]);
  if (v7)
  {
    unsigned int v6 = v7;
    id v8 = *(void **)(a1 + 32);
    id v9 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v3 routeIndex]);
    [v8 setObject:v6 forKeyedSubscript:v9];

    id v10 = *(void **)(a1 + 48);
    id v11 = objc_opt_new();
    [v10 setObject:v11 forKey:v6];

LABEL_4:
    id v12 = [*(id *)(a1 + 48) objectForKey:v6];
    [v12 addIndex:[v3 stepIndex]];
    if ([v3 traversal] == 2)
    {
      id v13 = [*(id *)(a1 + 56) objectForKey:v6];

      if (v13)
      {
        uint64_t v14 = sub_10057670C();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
        {
          id v15 = [*(id *)(*(void *)(a1 + 40) + 16) userPaths];
          id v16 = v15;
          if (v15)
          {
            if ([v15 count])
            {
              id v17 = [v16 componentsJoinedByString:@", "];
              double v18 = +[NSString stringWithFormat:@"<%p> [%@]", v16, v17];
            }
            else
            {
              double v18 = +[NSString stringWithFormat:@"<%p> (empty)", v16];
            }
          }
          else
          {
            double v18 = @"<nil>";
          }

          *(_DWORD *)buf = 138412290;
          id v21 = v18;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "One route has multiple missed indexes. That's unexpected. userPaths: %@", buf, 0xCu);
        }
      }
      else
      {
        double v19 = *(void **)(a1 + 56);
        uint64_t v14 = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", [v3 stepIndex]);
        [v19 setObject:v14 forKey:v6];
      }
    }
    goto LABEL_18;
  }
  unsigned int v6 = sub_10057670C();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134218242;
    id v21 = (__CFString *)[v3 routeIndex];
    __int16 v22 = 2112;
    id v23 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to create a route for index: %lu for userPath: %@", buf, 0x16u);
  }
LABEL_18:
}

int64_t sub_100373850(id a1, NSNumber *a2, NSNumber *a3)
{
  return [(NSNumber *)a2 compare:a3];
}

void sub_100373858(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  unsigned int v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:v5];
  uint64_t v7 = [*(id *)(a1 + 40) objectForKey:v6];
  id v8 = v7;
  if (v6 && [v7 count])
  {
    id v9 = [*(id *)(a1 + 48) objectForKey:v6];
    id v10 = v9;
    id v11 = *(void **)(a1 + 56);
    if (v9) {
      uint64_t v12 = (uint64_t)[v9 unsignedIntegerValue];
    }
    else {
      uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
    }
    id v13 = objc_msgSend(v11, "_buildDataSourceForRoute:displayedStepIndices:missedStepIndex:includeOrigin:includeDestination:", v6, v8, v12, a3 == 0, (char *)objc_msgSend(*(id *)(a1 + 64), "count") - 1 == a3);
    uint64_t v14 = sub_10057670C();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      id v15 = [v6 uniqueRouteID];
      int v16 = 138412802;
      id v17 = v5;
      __int16 v18 = 2112;
      id v19 = v15;
      __int16 v20 = 2112;
      id v21 = v8;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Will create route/indices pair. index: %@, id: %@, displayedIndices: %@", (uint8_t *)&v16, 0x20u);
    }
    [*(id *)(a1 + 72) addObject:v13];
  }
  else
  {
    id v10 = sub_10057670C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412802;
      id v17 = v8;
      __int16 v18 = 2112;
      id v19 = v5;
      __int16 v20 = 2112;
      id v21 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to create a route/indices pair for indices: %@, routeIndex: %@, route: %@", (uint8_t *)&v16, 0x20u);
    }
  }
}

void sub_100373F30(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100373F5C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = [a2 route];
  id v8 = [v7 uniqueRouteID];
  id v9 = [*(id *)(a1 + 32) composedRoute];
  id v10 = [v9 uniqueRouteID];
  unsigned int v11 = [v8 isEqual:v10];

  if (v11)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

id sub_10037436C(uint64_t a1, void *a2)
{
  return [a2 setTraitCollection:*(void *)(a1 + 32)];
}

id sub_100374468(uint64_t a1, void *a2)
{
  return [a2 setVehicle:*(void *)(a1 + 32)];
}

void sub_100374634(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  [v5 setShowsHairline:1];
  id v10 = v5;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    unsigned int v6 = v10;
  }
  else {
    unsigned int v6 = 0;
  }
  id v7 = v6;

  unsigned int v8 = [v7 isMissedStep];
  if (v8)
  {
    [v10 setShowsHairline:0];
    if (a3)
    {
      id v9 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3 - 1];
      [v9 setShowsHairline:0];
    }
  }
}

id sub_100374B94(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateData];
}

void sub_100374EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100374F00(uint64_t a1, void *a2)
{
  unsigned int v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained virtualGarageDidUpdate:v3];
}

id sub_100375208(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) tableView];
  [v2 reloadData];

  [*(id *)(a1 + 32) _updateTableHeightConstraint];
  [*(id *)(*(void *)(a1 + 32) + 104) cgFloatValue];
  double v4 = v3;
  id result = [*(id *)(a1 + 32) _cellContentWidth];
  if (vabdd_f64(v4, v6) > 2.22044605e-16)
  {
    id v7 = *(void **)(a1 + 32);
    return [v7 _reloadTableViewIfNeeded];
  }
  return result;
}

void sub_100377094(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) selectedVehicle];
  [*(id *)(*(void *)(a1 + 32) + 88) setVehicle:v2];
}

void sub_100377854(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100377870(uint64_t a1, void *a2)
{
  id v9 = [a2 object];
  if (!v9) {
    goto LABEL_3;
  }
  uint64_t v3 = [v9 searchInfo];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  double v6 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
  id v7 = [v6 count];

  unsigned int v8 = v9;
  if (!v7)
  {
LABEL_3:
    [*(id *)(a1 + 32) failedTest];
    unsigned int v8 = v9;
  }
}

void sub_10037791C(uint64_t a1, void *a2)
{
  id v9 = a2;
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v3
    && ([v3 results],
        uint64_t v4 = objc_claimAutoreleasedReturnValue(),
        id v5 = [v4 count],
        v4,
        v5))
  {
    double v6 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
    id v7 = [v6 firstObject];

    unsigned int v8 = [*(id *)(a1 + 32) testCoordinator];
    [v8 pptTestPresentPlaceCardForSearchResult:v7 animated:1];
  }
  else
  {
    [*(id *)(a1 + 32) failedTest];
  }
}

id sub_1003779EC(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"loadPlaceCard"];
  id v2 = *(void **)(a1 + 32);

  return [v2 startedSubTest:@"loadRoute"];
}

id sub_100377A38(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"loadRoute"];
  id v2 = *(void **)(a1 + 32);

  return _[v2 doAfterSubTestForDisplayingRoutes];
}

void sub_100377A7C(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) results];
  uint64_t v3 = [v2 firstObject];

  uint64_t v4 = [v3 mapItem];
  id v5 = [v4 _geoMapItem];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100377B7C;
  v7[3] = &unk_1012E66B8;
  v7[4] = *(void *)(a1 + 32);
  id v6 = +[GEOComposedWaypoint composedWaypointForMapItem:v5 traits:0 clientAttributes:0 completionHandler:v7 networkActivityHandler:0];
}

void sub_100377B7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    [*(id *)(a1 + 32) failedTest];
  }
  else
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    id v7 = *(void **)(a1 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    long long v8[2] = sub_100377C84;
    v8[3] = &unk_1012E6690;
    objc_copyWeak(&v10, &location);
    id v9 = v5;
    [v7 addFullyDrawnCallback:v8];

    objc_destroyWeak(&v10);
    objc_destroyWeak(&location);
  }
}

void sub_100377C68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100377C84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _requestRouteWithResolvedDestination:*(void *)(a1 + 32)];
}

void sub_100377CD4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) testCoordinator];
  [v2 pptSelectKeyboardInteractionModel];

  dispatch_time_t v3 = dispatch_time(0, 2000000000);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100377D98;
  v5[3] = &unk_1012E5D58;
  uint64_t v4 = *(void **)(a1 + 40);
  v5[4] = *(void *)(a1 + 32);
  id v6 = v4;
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_100377D98(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) testCoordinator];
  [v2 pptTestSearchForFieldItem:*(void *)(a1 + 40)];
}

void sub_100377F0C(uint64_t a1)
{
  [*(id *)(a1 + 32) _mapstest_directionsPlanWithResolvedDestination:*(void *)(a1 + 40)];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 48) startedTest];
  [*(id *)(a1 + 48) startedSubTest:@"directionsSetup"];
  id v2 = [*(id *)(a1 + 48) testCoordinator];
  [v2 setPPTTestDirectionsPlan:v3];
}

id sub_100378A88(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"placeRequest:total" withMetrics:&off_1013AD380];
}

id sub_100378B14(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"placeRequest:total"];
}

id sub_100378B98(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"placeRequest:prepareRequest" withMetrics:&off_1013AD398];
}

id sub_100378C24(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"placeRequest:prepareRequest"];
}

void sub_100378CCC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id v4 = [v1 object];
  id v3 = +[NSString stringWithFormat:@"placeRequest:handleResponse:%@", v4];
  [v2 startedSubTest:v3 withMetrics:&off_1013AD3B0];
}

void sub_100378DFC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id v4 = [v1 object];
  id v3 = +[NSString stringWithFormat:@"placeRequest:handleResponse:%@", v4];
  [v2 finishedSubTest:v3];
}

void sub_100378F24(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id v4 = [v1 object];
  id v3 = +[NSString stringWithFormat:@"placeRequest:geod:%@", v4];
  [v2 startedSubTest:v3 withMetrics:&off_1013AD3C8];
}

void sub_100379054(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id v4 = [v1 object];
  id v3 = +[NSString stringWithFormat:@"placeRequest:geod:%@", v4];
  [v2 finishedSubTest:v3];
}

id sub_100379158(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"route:setDirectionsPlan" withMetrics:&off_1013AD3E0];
}

id sub_1003791E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"route:setDirectionsPlan"];
}

id sub_100379268(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"route:setDirectionsPlan:directionsStarted" withMetrics:&off_1013AD3F8];
}

id sub_1003792F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"route:setDirectionsPlan:directionsStarted"];
}

id sub_100379378(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"route:setDirectionsPlan:routePicking" withMetrics:&off_1013AD410];
}

id sub_100379404(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"route:setDirectionsPlan:routePicking"];
}

id sub_100379488(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"route:setDirectionsPlan:routePicking:loadingFromWaypoints" withMetrics:&off_1013AD428];
}

id sub_100379514(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"route:setDirectionsPlan:routePicking:loadingFromWaypoints"];
}

id sub_100379598(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"route:setDirectionsPlan:directionsSearch" withMetrics:&off_1013AD440];
}

id sub_100379624(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"route:setDirectionsPlan:directionsSearch"];
}

id sub_1003796A8(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"composeWaypoint" withMetrics:&off_1013AD458];
}

id sub_100379734(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"composeWaypoint"];
}

id sub_100379AEC(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"displayRoutes"];
  id v2 = *(void **)(a1 + 32);

  return _[v2 doAfterSubTestForDisplayingRoutes];
}

void sub_100379CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100379D08(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained startedTest];

  id v3 = objc_loadWeakRetained(v1);
  [v3 tapOnSearchBar];
}

id sub_100379FB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"transitRouteUpdate:route"];
}

id sub_100379FC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedSubTest:@"transitRouteUpdate:route"];
}

id sub_100379FD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"transitRouteUpdate:summary"];
}

void sub_100379FE8(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"transitRouteUpdate:summary"];
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10037A08C;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10037A08C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performRouteUpdateWithDetails];
}

void sub_10037A124(uint64_t a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_10037A27C;
  v5[3] = &unk_1012E6668;
  v5[4] = *(void *)(a1 + 32);
  +[PPTNotificationCenter addOnceObserverForName:@"MapsTestingTransitRouteUpdateWillUpdateDetails" object:0 usingBlock:v5];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10037A28C;
  v4[3] = &unk_1012E6668;
  v4[4] = *(void *)(a1 + 32);
  +[PPTNotificationCenter addOnceObserverForName:@"MapsTestingTransitRouteUpdateDidUpdateDetails" object:0 usingBlock:v4];
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10037A2D0;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10037A27C(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedSubTest:@"transitRouteUpdate:details"];
}

id sub_10037A28C(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"transitRouteUpdate:details"];
  dispatch_time_t v2 = *(void **)(a1 + 32);

  return [v2 finishedTest];
}

void sub_10037A2D0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) testCoordinator];
  [v1 pptTestResumeRealtimeTransitUpdates];
}

void sub_10037A46C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10037A488(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _setupDirectionsPlan:*(void *)(a1 + 32)];
}

void sub_10037A5D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10037A5F0(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 4000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10037A6A4;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_10037A6A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained chromeDelegate];
  [v1 directionsPlanDidSetup];
}

void sub_10037A870(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) testCoordinator];
  [v1 pptTestPresentDirectionsDetails];
}

id sub_10037A8B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

id sub_10037A974(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performScrollTest];
}

void sub_10037AB74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10037ABC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained finishedSubTest:*(void *)(a1 + 32)];
    [v3 finishedTest];
    id WeakRetained = v3;
  }
}

id sub_10037ACF8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performRotationTest];
}

id sub_10037AD80(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_10037AE40(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 3000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10037AED4;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10037AED4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performRotationTest];
}

id sub_10037AF5C(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

id sub_10037B080(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_10037B180(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10037B1A0(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = [WeakRetained testCoordinator];
  uint64_t v11 = [v6 pptTestContaineeForDirectionsDetails];

  id v7 = [v4 userInfo];

  unsigned int v8 = [v7 objectForKeyedSubscript:@"ContainerContainee"];

  id v9 = (void *)v11;
  if (v8 == (void *)v11)
  {
    uint64_t v10 = *(void *)(a1 + 32);
    if (v10)
    {
      (*(void (**)(void))(v10 + 16))();
      id v9 = (void *)v11;
    }
  }
}

void sub_10037B2C4(id a1)
{
  id v1 = objc_alloc_init(NavdLocationLeecher);
  uint64_t v2 = (void *)qword_10160E9D0;
  qword_10160E9D0 = (uint64_t)v1;
}

id sub_10037B4C4(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Starting to leech locations.", v4, 2u);
  }

  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 1;
  return [*(id *)(*(void *)(a1 + 32) + 8) startUpdatingLocation];
}

void sub_10037B5D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 25))
  {
    *(unsigned char *)(v1 + 25) = 1;
    uint64_t v2 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Pausing location leeching.", v3, 2u);
    }
  }
}

void sub_10037B6D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 25))
  {
    *(unsigned char *)(v1 + 25) = 0;
    uint64_t v2 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Unpausing location leeching.", v3, 2u);
    }
  }
}

id sub_10037B7D4(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Stopping leeching locations.", v4, 2u);
  }

  id result = [*(id *)(*(void *)(a1 + 32) + 8) stopUpdatingLocation];
  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 0;
  return result;
}

void sub_10037BA40(uint64_t a1)
{
  [*(id *)(a1 + 32) coordinate];
  double v3 = v2;
  double v5 = v4;
  id v12 = *(id *)(*(void *)(a1 + 40) + 56);
  id v6 = [v12 firstObject];
  [v6 coordinate];
  double v8 = v7;
  double v10 = v9;

  if (v8 != v3 && v10 != v5) {
    [v12 insertObject:*(void *)(a1 + 32) atIndex:0];
  }
  [*(id *)(a1 + 40) _pruneLeachedLocations];
}

void sub_10037BB40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10037BC44(uint64_t a1)
{
  [*(id *)(a1 + 32) _pruneLeachedLocations];
  id v2 = [*(id *)(*(void *)(a1 + 32) + 56) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_10037BD38(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) addObject:*(void *)(a1 + 40)];
}

id sub_10037BDDC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) removeObject:*(void *)(a1 + 40)];
}

void sub_10037C2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10037C318(uint64_t a1, double a2, double a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v7 = *(_OWORD *)(a1 + 152);
  v11[6] = *(_OWORD *)(a1 + 136);
  v11[7] = v7;
  v12[0] = *(_OWORD *)(a1 + 168);
  *(_OWORD *)((char *)v12 + 12) = *(_OWORD *)(a1 + 180);
  long long v8 = *(_OWORD *)(a1 + 88);
  v11[2] = *(_OWORD *)(a1 + 72);
  v11[3] = v8;
  long long v9 = *(_OWORD *)(a1 + 120);
  _OWORD v11[4] = *(_OWORD *)(a1 + 104);
  v11[5] = v9;
  long long v10 = *(_OWORD *)(a1 + 56);
  v11[0] = *(_OWORD *)(a1 + 40);
  v11[1] = v10;
  [WeakRetained _handleShiftedCoordinate:v11 fromClientLocation:a2, a3];
}

void sub_10037C3B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 138478339;
    id v8 = v3;
    __int16 v9 = 2049;
    uint64_t v10 = v5;
    __int16 v11 = 2049;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "NavdLocationLeecher failed while shifting location: %{private}@. Original location was: %{private}f, %{private}f.", (uint8_t *)&v7, 0x20u);
  }
}

void sub_10037C838(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _handleLeechedLocation:*(void *)(a1 + 32)];
}

void sub_10037CA24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _notifyObserversAboutError:*(void *)(a1 + 32)];
}

void sub_10037CC10(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _clearLeachedLocations];
  }
  id v3 = objc_loadWeakRetained((id *)(a1 + 32));
  [v3 _notifyObserversAboutPrecision];
}

UIColor *__cdecl sub_10037E4BC(id a1, UITraitCollection *a2)
{
  if ((id)[(UITraitCollection *)a2 userInterfaceStyle] == (id)2) {
    +[UIColor lightTextColor];
  }
  else {
  id v2 = +[UIColor darkTextColor];
  }
  id v3 = +[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", [v2 CGColor]);

  return (UIColor *)v3;
}

UIColor *__cdecl sub_10037E934(id a1, UITraitCollection *a2)
{
  id v2 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:[(UITraitCollection *)a2 _car_userInterfaceStyle]];
  id v3 = +[UIColor _mapkit_colorNamed:@"CartographyBackgroundColor" compatibleWithTraitCollection:v2];
  double v4 = +[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", [v3 CGColor]);

  return (UIColor *)v4;
}

id sub_10037F828(uint64_t a1)
{
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v42 objects:v52 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v43;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v43 != v5) {
          objc_enumerationMutation(v2);
        }
        int v7 = *(void **)(*((void *)&v42 + 1) + 8 * i);
        if (([*(id *)(a1 + 40) containsObject:v7] & 1) == 0
          && (objc_opt_respondsToSelector() & 1) != 0)
        {
          [v7 setChromeViewController:0];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v42 objects:v52 count:16];
    }
    while (v4);
  }

  [*(id *)(a1 + 48) _preserveFocusedItemFromContext:*(void *)(a1 + 56) toContext:*(void *)(a1 + 64)];
  objc_storeWeak((id *)(*(void *)(a1 + 48) + 696), *(id *)(a1 + 64));
  id v8 = sub_100015DB4();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = *(id *)(a1 + 56);
    if (!v9)
    {
      uint64_t v14 = @"<nil>";
LABEL_20:

      id v15 = v14;
      id v16 = *(id *)(a1 + 64);
      if (!v16)
      {
        id v21 = @"<nil>";
        goto LABEL_28;
      }
      id v17 = (objc_class *)objc_opt_class();
      __int16 v18 = NSStringFromClass(v17);
      if (objc_opt_respondsToSelector())
      {
        id v19 = [v16 performSelector:"accessibilityIdentifier"];
        __int16 v20 = v19;
        if (v19 && ![v19 isEqualToString:v18])
        {
          id v21 = +[NSString stringWithFormat:@"%@<%p, %@>", v18, v16, v20];

          goto LABEL_26;
        }
      }
      id v21 = +[NSString stringWithFormat:@"%@<%p>", v18, v16];
LABEL_26:

LABEL_28:
      if (*(unsigned char *)(a1 + 72)) {
        __int16 v22 = @"YES";
      }
      else {
        __int16 v22 = @"NO";
      }
      id v23 = v22;
      *(_DWORD *)buf = 138412802;
      uint64_t v47 = v15;
      __int16 v48 = 2112;
      id v49 = v21;
      __int16 v50 = 2112;
      uint64_t v51 = v23;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%@ => %@ (animated:%@)", buf, 0x20u);

      goto LABEL_32;
    }
    uint64_t v10 = (objc_class *)objc_opt_class();
    __int16 v11 = NSStringFromClass(v10);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v12 = [v9 performSelector:"accessibilityIdentifier"];
      id v13 = v12;
      if (v12 && ![v12 isEqualToString:v11])
      {
        uint64_t v14 = +[NSString stringWithFormat:@"%@<%p, %@>", v11, v9, v13];

        goto LABEL_18;
      }
    }
    uint64_t v14 = +[NSString stringWithFormat:@"%@<%p>", v11, v9];
LABEL_18:

    goto LABEL_20;
  }
LABEL_32:

  if (*(unsigned char *)(a1 + 72))
  {
    if (objc_opt_respondsToSelector()) {
      uint64_t v24 = (uint64_t)[*(id *)(a1 + 64) showsMapView];
    }
    else {
      uint64_t v24 = 1;
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  [*(id *)(a1 + 48) updateCardsForContext:*(void *)(a1 + 64) animated:v24 completion:0];
  uint64_t v25 = [*(id *)(a1 + 48) navigationDisplay];
  if (v25)
  {
    long long v26 = (void *)v25;
    char v27 = objc_opt_respondsToSelector();

    if (v27)
    {
      long long v28 = sub_100015DB4();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "Will configure navigation display for incoming context", buf, 2u);
      }

      uint64_t v29 = [*(id *)(a1 + 48) navigationDisplay];
      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3221225472;
      v40[2] = sub_10037FDFC;
      v40[3] = &unk_1012E68D8;
      id v41 = *(id *)(a1 + 64);
      [v29 configureDisplay:v40 animated:*(unsigned __int8 *)(a1 + 72)];
    }
  }
  [*(id *)(a1 + 48) _reloadFocusContainerGuidesForContext:*(void *)(a1 + 64)];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v30 = [*(id *)(a1 + 48) mapControlsOverlay];
    [v30 setTrackingController:0];
  }
  if (objc_opt_respondsToSelector())
  {
    uint64_t v31 = [*(id *)(a1 + 48) mapControlsOverlay];
    uint64_t v32 = [*(id *)(a1 + 64) trackingController];
    [v31 setTrackingController:v32];
  }
  id v33 = *(id *)(a1 + 64);
  if ([v33 conformsToProtocol:&OBJC_PROTOCOL___NavAudioControlViewDelegate]) {
    id v34 = v33;
  }
  else {
    id v34 = 0;
  }
  id v35 = v34;

  id v36 = [*(id *)(a1 + 48) mapControlsOverlay];
  [v36 setAudioControlDelegate:v35];

  uint64_t v37 = *(void **)(a1 + 48);
  uint64_t v38 = [v37 topContext];
  LODWORD(v37) = [v37 _autohidingContentIsHiddenForContext:v38];

  if (v37) {
    [*(id *)(a1 + 48) setAutohidingContentHiddenForCurrentContext:0];
  }
  [*(id *)(a1 + 48) _requestAutohideBehaviorForContext:*(void *)(a1 + 64)];
  [*(id *)(a1 + 48) _updateAutohideBehavior];
  return [*(id *)(a1 + 48) updateHardwareBackButtonBehavior];
}

id sub_10037FDFC(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) configureNavigationDisplay:a2];
}

id sub_10037FE0C(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateNudgerizer];
  [*(id *)(a1 + 32) _updateRouteSelectionController];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [*(id *)(a1 + 32) isDisplayingNavigation];
LABEL_3:
    [*(id *)(a1 + 32) _stopNavigationObscuredTimeout];
    goto LABEL_10;
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  if (![*(id *)(a1 + 32) isDisplayingNavigation]
    || (isKindOfClass & 1) != 0
    || *(void *)(a1 + 40)
    && (objc_opt_respondsToSelector() & 1) != 0
    && ![*(id *)(a1 + 40) shouldTimeoutDuringNavigation])
  {
    goto LABEL_3;
  }
  [*(id *)(a1 + 32) _startNavigationObscuredTimeout];
LABEL_10:
  id v3 = *(void **)(a1 + 32);

  return [v3 updateMapViewFrameRate];
}

void sub_10038111C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_10038119C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  id v7 = a2;
  uint64_t v8 = *(void *)(a1 + 48);
  if (v8) {
    (*(void (**)(uint64_t, unint64_t))(v8 + 16))(v8, a4);
  }
  uint64_t v9 = *(void *)(a1 + 56);
  if (v9 == 5)
  {
    uint64_t v10 = +[NSNotificationCenter defaultCenter];
    [v10 postNotificationName:@"LocationAuthorizationDismissedNotification" object:0];

    uint64_t v9 = *(void *)(a1 + 56);
  }
  if (v9 == 7)
  {
    if (a4 == 1)
    {
      __int16 v11 = sub_100015DB4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        LOWORD(v15) = 0;
        uint64_t v12 = "CarChromeViewController: user accepted End Navigation prompt";
        id v13 = (uint8_t *)&v15;
LABEL_15:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, v12, v13, 2u);
      }
    }
    else
    {
      if (a4)
      {
        if (a4 != -1) {
          goto LABEL_17;
        }
        __int16 v11 = sub_100015DB4();
        if (!os_log_type_enabled(v11, OS_LOG_TYPE_INFO)) {
          goto LABEL_16;
        }
        __int16 v17 = 0;
        uint64_t v12 = "CarChromeViewController: superseded End Navigation prompt";
        id v13 = (uint8_t *)&v17;
        goto LABEL_15;
      }
      __int16 v11 = sub_100015DB4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        uint64_t v12 = "CarChromeViewController: user canceled End Navigation prompt";
        id v13 = buf;
        goto LABEL_15;
      }
    }
LABEL_16:
  }
LABEL_17:
  if (a3 != 3) {
    [*(id *)(a1 + 32) _dismissAlertViewController:v7 animated:1];
  }
  if (objc_msgSend(*(id *)(a1 + 40), "count", v15) && (unint64_t)objc_msgSend(*(id *)(a1 + 40), "count") > a4)
  {
    uint64_t v14 = [*(id *)(a1 + 40) objectAtIndexedSubscript:a4];
    [v14 fire];
  }
}

void sub_100381350(uint64_t a1)
{
  id v3 = sub_100015DB4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = (id)(a1 + 40);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v6 = [WeakRetained alertTitle];
    id v7 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v8 = [v7 alertTitle];
    id v9 = [v8 length];
    if ((unint64_t)v9 > 0x13)
    {
      uint64_t v10 = 20;
    }
    else
    {
      id v4 = objc_loadWeakRetained((id *)(a1 + 40));
      uint64_t v1 = [v4 alertTitle];
      uint64_t v10 = (uint64_t)[v1 length];
    }
    __int16 v11 = [v6 substringToIndex:v10];
    int v14 = 138412290;
    uint64_t v15 = v11;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Alert was dismissed %@", (uint8_t *)&v14, 0xCu);
    if ((unint64_t)v9 <= 0x13)
    {
    }
  }

  uint64_t v12 = *(void **)(a1 + 32);
  id v13 = objc_loadWeakRetained((id *)(a1 + 40));
  [v12 _dismissAlertViewController:v13 animated:1];
}

void sub_100381734(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100381760(uint64_t a1, uint64_t a2)
{
  id v4 = sub_100015DB4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = +[NSNumber numberWithInteger:a2];
    int v9 = 138412290;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Search refinement controller did complete (selectedIndex:%@)", (uint8_t *)&v9, 0xCu);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v6, a2);
  }
  id v7 = sub_100015DB4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v9) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Will dismiss search refinement controller", (uint8_t *)&v9, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

void sub_1003818A4(uint64_t a1, uint64_t a2)
{
  id v4 = sub_100015DB4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Will dismiss search refinment controller", v6, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissViewControllerAnimated:a2 completion:0];
}

void sub_100381D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_100381D84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _presentAnyPendingAlert:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100382294(uint64_t a1)
{
  return [*(id *)(a1 + 32) _presentAnyPendingAlert:*(unsigned __int8 *)(a1 + 40)];
}

id sub_1003824E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _presentAnyPendingAlert:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10038378C(uint64_t a1)
{
  uint64_t v2 = sub_100082DFC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      uint64_t v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    uint64_t v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    id v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] Will change mapView light level", buf, 0xCu);
  }
  int v9 = [*(id *)(a1 + 32) mapView];
  [v9 setCustomOverrideInterfaceStyle:*(void *)(a1 + 40)];

  id v10 = [*(id *)(a1 + 32) mapReplacementColor];
  id v11 = [v10 CGColor];
  uint64_t v12 = [*(id *)(a1 + 32) mapView];
  id v13 = [v12 _mapLayer];
  [v13 setBackgroundColor:v11];

  int v14 = [*(id *)(a1 + 32) mapView];
  [v14 layoutIfNeeded];
}

void sub_100386A30(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isSuppressed])
  {
    uint64_t v2 = sub_100015DB4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Will not respond to focus deferral, chrome is suppressed", buf, 2u);
    }
  }
  else if (*(unsigned char *)(*(void *)(a1 + 32) + 704))
  {
    id v3 = +[CarDisplayController sharedInstance];
    id v4 = [v3 window];
    uint64_t v5 = [v4 windowScene];
    uint64_t v6 = [v5 focusSystem];
    id v7 = [v6 focusedItem];

    if (!v7)
    {
      uint64_t v8 = sub_100015DB4();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)id v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Restoring focus in response to focus deferral change", v10, 2u);
      }

      int v9 = [*(id *)(a1 + 32) topContext];
      objc_storeWeak((id *)(*(void *)(a1 + 32) + 696), v9);

      [*(id *)(a1 + 32) setNeedsFocusUpdate];
      [*(id *)(a1 + 32) updateFocusIfNeeded];
    }
  }
}

BOOL sub_1003870BC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 nextFocusedItem];

  return v4 == v3;
}

BOOL sub_100387110(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 previouslyFocusedItem];

  return v4 == v3;
}

void sub_1003875F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

id sub_100387624(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:];
}

void sub_100387634(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3 == 3)
  {
    id v10 = v5;
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v7 = [*(id *)(a1 + 32) statusBannerOverlay];
  }
  else if (a3 == 1)
  {
    id v10 = v5;
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v7 = [*(id *)(a1 + 32) cardsOverlay];
  }
  else
  {
    if (a3) {
      goto LABEL_8;
    }
    id v10 = v5;
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v7 = [*(id *)(a1 + 32) mapControlsOverlay];
  }
  uint64_t v8 = v7;
  int v9 = [v7 preferredFocusEnvironments];
  [v6 addObjectsFromArray:v9];

  id v5 = v10;
LABEL_8:
}

void sub_10038797C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_100387994(uint64_t a1)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:];
}

void sub_1003879A4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  __int16 v18 = v5;
  switch(a3)
  {
    case 0:
      uint64_t v6 = [*(id *)(a1 + 32) mapControlsOverlay];
      id v7 = [v6 focusOrderSubItems];

      if ([v18 flipForRHD])
      {
        uint64_t v8 = [v7 reverseObjectEnumerator];
        uint64_t v9 = [v8 allObjects];

        id v7 = (void *)v9;
      }
      [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObjectsFromArray:v7];
      goto LABEL_11;
    case 1:
      id v16 = *(void **)(a1 + 32);
      uint64_t v12 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      uint64_t v15 = [v16 cardsOverlay];
      goto LABEL_9;
    case 2:
      unsigned int v10 = [*(id *)(a1 + 32) _canSelectAlternateRoutes];
      id v5 = v18;
      if (!v10) {
        break;
      }
      id v11 = *(void **)(a1 + 32);
      uint64_t v12 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      id v7 = [v11 routeSelectionController];
      uint64_t v13 = [v7 focusableRouteItems];
      goto LABEL_10;
    case 3:
      int v14 = *(void **)(a1 + 32);
      uint64_t v12 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      uint64_t v15 = [v14 statusBannerOverlay];
LABEL_9:
      id v7 = v15;
      uint64_t v13 = [v15 focusOrderSubItems];
LABEL_10:
      __int16 v17 = (void *)v13;
      [v12 addObjectsFromArray:v13];

LABEL_11:
      id v5 = v18;
      break;
    default:
      break;
  }
}

void sub_100387B24(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) removeAllObjects];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v4 = [v3 items];
  id v5 = [v4 countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v25;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v25 != v7) {
          objc_enumerationMutation(v4);
        }
        [*(id *)(*((void *)&v24 + 1) + 8 * (void)v8) ifFocusItem:*(void *)(a1 + 40) ifRepresentativeItem:*(void *)(a1 + 48)];
        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v24 objects:v28 count:16];
    }
    while (v6);
  }

  uint64_t v9 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  unsigned int v10 = +[NSPredicate predicateWithBlock:&stru_1012E6AC8];
  [v9 filterUsingPredicate:v10];

  id v11 = +[UIApplication sharedApplication];
  id v12 = [v11 userInterfaceLayoutDirection];

  if (v12 == (id)1)
  {
    uint64_t v13 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) reverseObjectEnumerator];
    int v14 = [v13 allObjects];
    id v15 = [v14 mutableCopy];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
    __int16 v17 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;
  }
  if ([*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count])
  {
    __int16 v18 = [*(id *)(a1 + 32) firstObject];
    id v19 = [v18 items];
    __int16 v20 = [v19 firstObject];

    if (v20) {
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v20];
    }
    id v21 = *(void **)(a1 + 32);
    id v22 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) copy];
    id v23 = +[_UIFocusLinearMovementSequence sequenceWithItems:loops:restrictEnteringSequence:](_UIFocusLinearMovementSequence, "sequenceWithItems:loops:restrictEnteringSequence:", v22, [v3 isLooping], 0);
    [v21 insertObject:v23 atIndex:0];
  }
}

BOOL sub_100387DA0(id a1, UIFocusItem *a2, NSDictionary *a3)
{
  return [(UIFocusItem *)a2 canBecomeFocused];
}

void sub_100388314(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [v2 accessoriesOverlay];
  [v2 configureAccessoriesOverlay:v3 forContext:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) _reloadAccessoriesInsetsForContext:*(void *)(a1 + 40)];
  id v4 = [*(id *)(a1 + 32) accessoriesOverlay];
  [v4 reloadAnimated:0];
}

void sub_1003883A0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _areAccessoriesHiddenForCurrentContext];
  id v3 = [*(id *)(a1 + 32) accessoriesOverlay];
  [v3 setHidden:v2 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100388770(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) statusBannerOverlay];
  [v1 reloadAnimated:0];
}

void sub_1003887B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _hideStatusBanner];
  id v3 = [*(id *)(a1 + 32) statusBannerOverlay];
  [v3 setHidden:v2 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100388FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v23 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_100389020(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isRunningNavigationDisplay])
  {
    id v2 = [*(id *)(a1 + 32) navigationDisplay];
    unsigned int v3 = [v2 isCameraPanning];

    char v4 = v3 ^ 1;
    if (v3) {
      uint64_t v5 = 6;
    }
    else {
      uint64_t v5 = 0;
    }
  }
  else
  {
    uint64_t v5 = 0;
    char v4 = 1;
  }
  if (objc_opt_respondsToSelector())
  {
    id v6 = *(void **)(a1 + 40);
    if (v6)
    {
      [v6 mapControlsConfiguration];
      uint64_t v8 = v24;
      uint64_t v7 = v25;
      uint64_t v9 = v26;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = v5;
  }
  uint64_t v10 = v9;
  uint64_t v11 = v7;
  uint64_t v12 = v8;
  if ([*(id *)(a1 + 32) isAutohidingContentHiddenForCurrentContext])
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v4;
    uint64_t v10 = v5;
  }
  uint64_t v13 = [*(id *)(a1 + 32) mapControlsOverlay];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v24 = v12;
  uint64_t v25 = v11;
  uint64_t v26 = v10;
  [v13 setConfiguration:&v24 withAnimation:WeakRetained];

  [*(id *)(a1 + 32) _reloadMapControlsInsetsForContext:*(void *)(a1 + 40)];
  uint64_t v15 = [*(id *)(a1 + 32) isRunningNavigationDisplay] ^ 1;
  uint64_t v16 = [*(id *)(a1 + 32) mapControlsOverlay];
  [v16 setTrackingButtonEnabled:v15];

  [*(id *)(a1 + 32) _update3DButton];
  [*(id *)(a1 + 32) _updateAudioControls];
  BOOL v22 = v8 == 4 || v7 == 4 || v9 == 4 || v8 == 5 || v7 == 5 || v9 == 5;
  return [*(id *)(a1 + 32) _enableZoomGesture:v22];
}

id sub_1003891C8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100389244;
  v2[3] = &unk_1012E5D08;
  v2[4] = *(void *)(a1 + 32);
  return +[UIView performWithoutAnimation:v2];
}

id sub_100389244(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateCameraToggleButton];
}

void sub_100389690(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) mapView];
  [v5 _zoomLevel];
  double v3 = v2;
  char v4 = [*(id *)(a1 + 32) defaultMapSettings];
  [v4 setZoomLevel:v3];
}

void sub_1003898AC(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) mapView];
  [v5 _zoomLevel];
  double v3 = v2;
  char v4 = [*(id *)(a1 + 32) defaultMapSettings];
  [v4 setZoomLevel:v3];
}

void sub_10038A2B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10038A2D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained zoomInButtonPressed];
}

void sub_10038A36C(id a1, int64_t a2)
{
  double v3 = sub_100015DB4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 134217984;
    int64_t v5 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "carStatusBannerDidTapBanner: button = %ld", (uint8_t *)&v4, 0xCu);
  }

  if ((unint64_t)a2 <= 1) {
    GEOConfigSetBOOL();
  }
}

void sub_10038ADB8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_10038ADE4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _reloadCardsAnimated:0];
}

uint64_t sub_10038ADF0(uint64_t a1, uint64_t a2)
{
  int v4 = sub_100577A0C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      uint64_t v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    uint64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v8 = [v5 performSelector:"accessibilityIdentifier"];
      uint64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        uint64_t v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    uint64_t v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    int v14 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Chrome finished configuring cards.", buf, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  [WeakRetained setNeedsUpdateMapInsets];

  if (objc_opt_respondsToSelector()) {
    [*(id *)(a1 + 40) chromeDidEndConfiguringCards:*(void *)(a1 + 48)];
  }
  uint64_t result = *(void *)(a1 + 56);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void sub_10038BC18(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 topContext];
  [v5 configureCard:v4 forKey:*(void *)(a1 + 40)];
}

void sub_10038D334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_10038D364(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  [v2 duration];
  [WeakRetained setTemporaryDisplayRate:-1];
}

void sub_10038D9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10038D9C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _humanPresenceDidChange];
}

id sub_1003906F8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) setKeyboardDisabled:*(unsigned __int8 *)(*(void *)(a1 + 32) + 48)];
}

void sub_100390978(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = 2;
  }
  +[NSLayoutConstraint deactivateConstraints:*(void *)(*(void *)(a1 + 32) + OBJC_IVAR___CarUserInputCell__dictationButton[v2])];
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v3 = 2;
  }
  else {
    uint64_t v3 = 3;
  }
  +[NSLayoutConstraint activateConstraints:*(void *)(*(void *)(a1 + 32) + OBJC_IVAR___CarUserInputCell__dictationButton[v3])];
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = 3;
  }
  id v6 = *(void **)(v4 + OBJC_IVAR___CarUserInputCell__dictationButton[v5]);

  objc_storeStrong((id *)(v4 + 40), v6);
}

uint64_t sub_100390A2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  double v3 = 0.0;
  if (!*(unsigned char *)(a1 + 56)) {
    double v3 = 1.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:v3];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

void sub_100390AB4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = [*(id *)(a1 + 32) contentView];
  [v2 layoutIfNeeded];
}

unsigned char *sub_1003924A8(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result[8])
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100392534;
    v3[3] = &unk_1012E6D08;
    v3[4] = result;
    uint64_t result = [result _notifyObserversWithBlock:v3];
    *(unsigned char *)(*(void *)(a1 + 32) + 8) = 0;
  }
  return result;
}

id sub_100392534(uint64_t a1, void *a2)
{
  return _[a2 maneuverGuidanceInfoDidChange:*(void *)(a1 + 32)];
}

void sub_1003934B4(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_1012E6D48];
  id v2 = (void *)qword_10160E9E0;
  qword_10160E9E0 = v1;
}

void sub_100393514(id a1, HomeSearchStatusOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  uint64_t v8 = a2;
  uint64_t v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  [(HomeSearchStatusOutlineCell *)v8 setCellModel:v7];
}

void sub_100393CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100393D30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _selectPaymentType];
  }
  else
  {
    GEOFindOrCreateLog();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136446722;
      uint64_t v8 = "RidesharingDetailsPickingViewController.m";
      __int16 v9 = 1026;
      int v10 = 128;
      __int16 v11 = 2082;
      uint64_t v12 = "-[RidesharingDetailsPickingViewController viewDidLoad]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

void sub_100393E50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _openApp];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      uint64_t v5 = "RidesharingDetailsPickingViewController.m";
      __int16 v6 = 1026;
      int v7 = 136;
      __int16 v8 = 2082;
      __int16 v9 = "-[RidesharingDetailsPickingViewController viewDidLoad]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100394DE0(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 232) requiresPassengerSelection])
  {
    id v2 = [*(id *)(a1 + 32) requestRideStatus];
    id v3 = +[RidesharingPartySizeSelectionAlertController ridesharingPartySizeSelectionAlertControllerWithRequestRideStatus:v2];

    objc_initWeak(&location, *(id *)(a1 + 32));
    __int16 v9 = _NSConcreteStackBlock;
    uint64_t v10 = 3221225472;
    __int16 v11 = sub_100394FA8;
    uint64_t v12 = &unk_1012E6DB8;
    objc_copyWeak(&v13, &location);
    [v3 setDidFinishSelectingPartySize:&v9];
    int v4 = [*(id *)(*(void *)(a1 + 32) + 152) actionButtonStackView:v9, v10, v11, v12];
    uint64_t v5 = [v4 arrangedSubviews];
    __int16 v6 = [v5 firstObject];
    int v7 = [v3 popoverPresentationController];
    [v7 setSourceView:v6];

    [*(id *)(a1 + 32) presentViewController:v3 animated:1 completion:0];
    objc_destroyWeak(&v13);
    objc_destroyWeak(&location);
  }
  else
  {
    __int16 v8 = *(void **)(a1 + 32);
    [v8 _requestRide];
  }
}

void sub_100394F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100394FA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      __int16 v6 = [WeakRetained requestRideOptionProxy];
      [v6 updateRequestRidePassengers:v3];

      [v5 _requestRide];
    }
    else
    {
      WeakRetained[200] = 0;
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      __int16 v9 = "RidesharingDetailsPickingViewController.m";
      __int16 v10 = 1026;
      int v11 = 348;
      __int16 v12 = 2082;
      id v13 = "-[RidesharingDetailsPickingViewController _request]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

uint64_t sub_1003950F8(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 200) = 0;
  return result;
}

uint64_t sub_10039510C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1003955F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100395618(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setRequestingRide:0];
    if ([v3 rideStatusError] == (id)1)
    {
      if ([v3 phase])
      {
        id v6 = objc_loadWeakRetained(v5 + 28);
        int v7 = [v6 containerViewController];
        [v7 updateForDismissingDetailsPickingAnimated:0];

        int v8 = objc_loadWeakRetained(v5 + 28);
        __int16 v9 = [v3 application];
        __int16 v10 = [v9 identifier];
        [v8 presentConfirmedRideWithApplicationIdentifier:v10];

        goto LABEL_11;
      }
      uint64_t v16 = [RidesharingErrorAlertProvider alloc];
      __int16 v12 = [v3 application];
      id v13 = [v3 userActivity];
      int v14 = v16;
      uint64_t v15 = 1;
    }
    else
    {
      int v11 = [RidesharingErrorAlertProvider alloc];
      __int16 v12 = [v3 application];
      id v13 = [v3 userActivity];
      int v14 = v11;
      uint64_t v15 = 0;
    }
    int v8 = [(RidesharingErrorAlertProvider *)v14 _initWithCause:v15 application:v12 activity:v13];

    __int16 v17 = [v5[30] analyticsBookingSession];
    __int16 v18 = [v8 title];
    [v17 captureErrorMessage:v18];

    id v19 = [v5 coordinator];
    __int16 v20 = [v19 containerViewController];
    id v21 = [v20 chromeViewController];
    BOOL v22 = [v21 _maps_mapsSceneDelegate];
    uint64_t v23 = [v22 topMostPresentedViewController];

    id v24 = objc_loadWeakRetained(v5 + 28);
    [v24 viewController:v23 presentErrorAlertIfNeeded:v8];

    goto LABEL_11;
  }
  GEOFindOrCreateLog();
  int v8 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    int v25 = 136446722;
    uint64_t v26 = "RidesharingDetailsPickingViewController.m";
    __int16 v27 = 1026;
    int v28 = 438;
    __int16 v29 = 2082;
    uint64_t v30 = "-[RidesharingDetailsPickingViewController _requestRide]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v25, 0x1Cu);
  }

LABEL_11:
}

void -[CarSharedTripDetailCardViewController _blockUpdatesButtonPressed:](CarSharedTripDetailCardViewController *self, SEL a2, id a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  [WeakRetained sharedTripDetailCard:self didSelectAction:1];
}

id sub_100398098()
{
  if (qword_10160EA08 != -1) {
    dispatch_once(&qword_10160EA08, &stru_1012E6E50);
  }
  uint64_t v0 = (void *)qword_10160EA00;

  return v0;
}

id sub_100398E58(uint64_t a1)
{
  return [*(id *)(a1 + 32) _checkIfLockScreenMitigationShouldActivate];
}

void sub_100398FA4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ThermalWarning");
  id v2 = (void *)qword_10160EA00;
  qword_10160EA00 = (uint64_t)v1;
}

void sub_10039C5D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10039C5F4(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_10039C6B8;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_10039C6B8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    int v8 = WeakRetained;
    id v3 = [WeakRetained editLocationMapView];
    id v4 = [v3 mapView];
    uint64_t v5 = [*(id *)(a1 + 32) placemark];
    [v5 coordinate];
    [v4 setCenterCoordinate:1 animated:];

    [v8[22] dismissViewControllerAnimated:1 completion:0];
    id v6 = [v8 promptText];
    id v7 = [v8 navigationItem];
    [v7 setPrompt:v6];

    [v8[23] setHidden:1];
    id WeakRetained = v8;
  }
}

void sub_10039E418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
}

void sub_10039E44C(uint64_t a1)
{
  +[MapsWelcomeScreenViewController _markWelcomeScreenAsDisplayed];
  byte_10160EA10 = 0;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10039E500;
  v3[3] = &unk_1012E6EA8;
  id v4 = *(id *)(a1 + 32);
  [WeakRetained dismissViewControllerAnimated:1 completion:v3];
}

uint64_t sub_10039E500(uint64_t a1)
{
  id v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "MapsWelcomeScreen: alert dismissed", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10039EA08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "OpenLookAroundAction resolveMapItem: %@", (uint8_t *)&v11, 0xCu);
    }

    id v8 = *(id *)(a1 + 32);
  }
  else
  {
    id v8 = *(id *)(a1 + 32);
    if ([v5 count])
    {
      uint64_t v9 = [v5 firstObject];

      id v8 = (id)v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v8);
  }
}

void sub_10039F948(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Enable Preflight" get:&stru_1012E6F78 set:&stru_1012E6FB8];
  LODWORD(v3) = 1140457472;
  id v4 = [(MapsDebugTableSection *)v8 addSliderRowWithTitle:@"Minimum number of results to display Index List" subtitleStringFormat:@"%1.0f results" min:&stru_1012E6FF8 max:&stru_1012E7038 get:0.0 set:v3];
  LODWORD(v5) = 26.0;
  id v6 = [(MapsDebugTableSection *)v8 addSliderRowWithTitle:@"Minimum number of unique first letters to display index list" subtitleStringFormat:@"%1.0f letters" min:&stru_1012E7058 max:&stru_1012E7078 get:0.0 set:v5];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Inject venue-go-inside style attribute" get:&stru_1012E7098 set:&stru_1012E70B8];
}

BOOL sub_10039FA40(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10039FA50(id a1, BOOL a2)
{
  GEOConfigSetBOOL();

  +[MapsMapDisplayDebugController completelyFlushTiles];
}

float sub_10039FA90(id a1)
{
  return (float)(unint64_t)GEOConfigGetUInteger();
}

void sub_10039FAB8(id a1, float a2)
{
}

float sub_10039FACC(id a1)
{
  return (float)(unint64_t)GEOConfigGetUInteger();
}

void sub_10039FAF4(id a1, float a2)
{
}

BOOL sub_10039FB08(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_10039FB18(id a1, BOOL a2)
{
}

BOOL sub_10039FD04(id a1, TrafficIncidentReport *a2, NSDictionary *a3)
{
  return ![(TrafficIncidentReport *)a2 isHidden];
}

void sub_10039FEC4(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10039FF40;
  v2[3] = &unk_1012E5D08;
  id v3 = v1;
  [v3 submitWithCompletionHandler:v2];
}

void sub_10039FF40(uint64_t a1)
{
  id v2 = sub_10039FFE8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "TrafficIncidentsStorageManager resubmitted last report : %@", (uint8_t *)&v4, 0xCu);
  }
}

id sub_10039FFE8()
{
  if (qword_10160EA30 != -1) {
    dispatch_once(&qword_10160EA30, &stru_1012E71B8);
  }
  uint64_t v0 = (void *)qword_10160EA28;

  return v0;
}

id sub_1003A039C(id a1, NSData *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  id v9 = 0;
  int v4 = +[NSKeyedUnarchiver unarchivedObjectOfClass:objc_opt_class() fromData:v3 error:&v9];

  id v5 = v9;
  if (v5)
  {
    id v6 = sub_10039FFE8();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      id v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "TrafficIncidentsStorageManager error decoding report %@", buf, 0xCu);
    }

    id v7 = 0;
  }
  else
  {
    id v7 = v4;
  }

  return v7;
}

id sub_1003A0520(id a1, VKTrafficIncidentFeature *a2, unint64_t a3)
{
  return [(VKTrafficIncidentFeature *)a2 uniqueIdentifier];
}

void sub_1003A06FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TrafficIncidentsStorageManager");
  id v2 = (void *)qword_10160EA28;
  qword_10160EA28 = (uint64_t)v1;
}

void sub_1003A0964(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id sub_1003A0980()
{
  if (qword_10160EA40 != -1) {
    dispatch_once(&qword_10160EA40, &stru_1012E7220);
  }
  uint64_t v0 = (void *)qword_10160EA38;

  return v0;
}

void sub_1003A09D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1003A0980();
  id v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 48);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)id v11 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "FetchingCollectionsListViewBatch", "", v11, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1003A0AF0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollectionsListFetcher");
  uint64_t v2 = (void *)qword_10160EA38;
  qword_10160EA38 = (uint64_t)v1;
}

uint64_t sub_1003A1138(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char isKindOfClass = 1;
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }

  return isKindOfClass & 1;
}

double sub_1003A1AC0(uint64_t a1, void *a2)
{
  if ([a2 row] == (id)(*(void *)(a1 + 32) - 1)) {
    return _UICollectionViewListSectionSeparatorInsetHidden;
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

void sub_1003A2540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003A2564(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  int v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[3] setImage:v5];
  }
}

void sub_1003A2B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003A2B30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[96] = 1;
    uint64_t v3 = WeakRetained;
    uint64_t v2 = [WeakRetained rowsGroup];
    [v2 checkmarkRowDidChangeChecked:v3];

    id WeakRetained = v3;
  }
}

void sub_1003A3350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003A3378(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      id v5 = [v6 value];
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
    }
    [WeakRetained update];
  }
}

void sub_1003A3F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1003A3F78()
{
  if (qword_10160EA50 != -1) {
    dispatch_once(&qword_10160EA50, &stru_1012E7350);
  }
  uint64_t v0 = (void *)qword_10160EA48;

  return v0;
}

void sub_1003A3FCC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = sub_1003A3F78();
  id v7 = v6;
  os_signpost_id_t v8 = *(void *)(a1 + 56);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, v8, "FetchingGuidesHomeView", "", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v10 = WeakRetained;
  if (!v5 || a3)
  {
    uint64_t v16 = [WeakRetained stateHandler];
    ((void (**)(void, id, uint64_t))v16)[2](v16, [v10 state], 3);

    [v10 setState:3];
    goto LABEL_11;
  }
  if (*(void *)(a1 + 32))
  {
    id v11 = [v5 filteredGuidesSection];
    id v12 = [v11 filteredGuides];
    [v10 setFilteredCollections:v12];

    id v13 = [v5 filteredGuidesSection];
    int v14 = [v13 filteredGuideIds];
    [v10 setFilteredCollectionsIds:v14];
  }
  else
  {
    [WeakRetained setGuideHomeResult:v5];
    [v10 clearFilteredData];
    [v10 initializeSingleCollectionFromResponseIfApplicable];
    __int16 v17 = [v10 singlePlaceCollection];

    if (!v17) {
      goto LABEL_9;
    }
    id v13 = sub_10057611C();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)__int16 v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Guides Home contains single guide in response, would be opening guide view.", v18, 2u);
    }
  }

LABEL_9:
  uint64_t v15 = [v10 stateHandler];
  ((void (**)(void, id, uint64_t))v15)[2](v15, [v10 state], 2);

  [v10 setState:2];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_11:
}

void sub_1003A43D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1003A43F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1003A3F78();
  os_signpost_id_t v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 48);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)id v12 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "FetchingGuidesHomeViewBatch", "", v12, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = WeakRetained;
  if (WeakRetained)
  {
    if (v6) {
      [WeakRetained setPlaceCollections:0];
    }
    else {
      [WeakRetained setPlaceCollections:v5];
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_1003A46A0(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = [v7 curatedGuides];
  id v4 = [v3 count];

  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [v7 curatedGuides];
    [v5 addObjectsFromArray:v6];
  }
}

void sub_1003A4AAC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "GuidesHomeAPIController");
  uint64_t v2 = (void *)qword_10160EA48;
  qword_10160EA48 = (uint64_t)v1;
}

void sub_1003A4D08(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v2 = (void *)qword_10160EA58;
  qword_10160EA58 = (uint64_t)v1;
}

void sub_1003A72F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1003A7328(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained trafficAlertView];
  [v1 setAcceptProgress:1.0];
}

void sub_1003A7384(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismissTrafficAlertWithResult:6];
}

void sub_1003A7ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
}

void sub_1003A957C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1003A9630(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadCollectionPlaceItems];
}

void sub_1003A9638(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 64);
  *(void *)(v1 + 64) = &__NSArray0__struct;
}

id sub_1003A9658(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyObserversItemsDidChange];
}

void sub_1003A9A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003A9A60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained setNeedsTablePartsUpdateWithSender:WeakRetained[6] scroll:0];
    id WeakRetained = v2;
  }
}

void sub_1003A9C10(id a1, id a2, RAPReportComposerPlaceClosureIssueSection *a3)
{
}

void sub_1003AA314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1003AA338(uint64_t a1, void *a2)
{
  return [a2 _maps_topMostPresentViewController:*(void *)(*(void *)(a1 + 32) + 152) animated:1 completion:0];
}

void sub_1003AA358(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setPresentingViewController:v7];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = [v4 presentingViewController];
    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
}

id sub_1003AA464(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeCompletion];
}

void sub_1003AAB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003AAB4C(uint64_t a1, void *a2)
{
}

void sub_1003AAB5C(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = sub_10057708C();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "No view model to return with error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1003AAD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003AADC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v6)
    {
      os_signpost_id_t v8 = sub_10057708C();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v16 = 138412290;
        id v17 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Failed Sundew call when attempting to fetch with error %@", (uint8_t *)&v16, 0xCu);
      }

      uint64_t v9 = +[Result resultWithError:v6];
      uint64_t v10 = (void *)*((void *)WeakRetained + 26);
      *((void *)WeakRetained + 26) = v9;
    }
    else if ([v5 attributePhotos])
    {
      id v11 = objc_alloc((Class)MUPlaceUserAttributionViewModel);
      id v12 = [v5 attributionName];
      id v13 = [v11 initWithAttributionName:v12];
      uint64_t v14 = +[Result resultWithValue:v13];
      uint64_t v15 = (void *)*((void *)WeakRetained + 26);
      *((void *)WeakRetained + 26) = v14;

      [*((id *)WeakRetained + 18) reloadUserAttribution];
    }
  }
}

void sub_1003AB194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003AB1BC(id *a1, void *a2, uint64_t a3)
{
  id v24 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v6 = WeakRetained;
  if (!a3 && WeakRetained)
  {
    id v7 = [WeakRetained mapItem];
    os_signpost_id_t v8 = [v7 _geoMapItem];
    uint64_t v9 = [v8 _placeQuestionnaire];

    uint64_t v10 = [v24 previousSubmission];
    id v11 = [v10 images];
    id v12 = +[UGCPhotosForm editPhotosFormWithPlaceQuestionnaire:v9 previouslySubmittedImages:v11];

    id v13 = [v24 previousSubmission];
    uint64_t v14 = [v13 scorecard];
    uint64_t v15 = +[UGCRatingsForm editRatingFormWithPlaceQuestionnaire:v9 existingScorecard:v14];

    int v16 = [a1[4] uid];
    [v12 removePhotoWithIdentifier:v16];

    id v17 = +[UIApplication sharedMapsDelegate];
    __int16 v18 = [v17 submissionManager];

    id v19 = [v6 mapItem];
    __int16 v20 = +[UGCPOIEnrichmentForm addPOIEnrichmentFormWithMapItem:v19 photosForm:v12 ratingsForm:v15];

    id v21 = [_TtC4Maps9UGCReport alloc];
    BOOL v22 = [a1[5] mapItem];
    uint64_t v23 = [(UGCReport *)v21 initWithReportType:0 initialForm:v20 mapItem:v22 submitter:v18];

    if (MapsFeature_IsEnabled_ARPCommunityID())
    {
      -[UGCReport setShouldMigrateRatingsWithICloud:](v23, "setShouldMigrateRatingsWithICloud:", [v24 hasRatingsWithICloud]);
      [(UGCReport *)v23 submitRatingsAndPhotosWithUploadPolicy:1 progressBlock:0 completion:&stru_1012E7578];
    }
    else
    {
      [(UGCReport *)v23 submitRatingsAndPhotosSimultaneouslyUsingDSIDWithUploadPolicy:1 progressBlock:0 completion:&stru_1012E7598];
    }
  }
}

void sub_1003AB418(id a1, GEORPFeedbackResponse *a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    int v4 = sub_100577714();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error with submission %@", (uint8_t *)&v5, 0xCu);
    }
  }
  else
  {
    +[GEOAPPortal captureUserAction:331 target:76 value:0];
  }
}

void sub_1003AB4E4(id a1, GEORPFeedbackResponse *a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    int v4 = sub_100577714();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error with submission %@", (uint8_t *)&v5, 0xCu);
    }
  }
  else
  {
    +[GEOAPPortal captureUserAction:331 target:76 value:0];
  }
}

id sub_1003ABB34(uint64_t a1)
{
  return [*(id *)(a1 + 32) stopAnimatingActivityIndicatorViewForRAP];
}

void sub_1003AC460(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3)
  {
    uint64_t v4 = [a2 firstObject];
    uint64_t v5 = *(void *)(a1 + 32);
    id v6 = *(void **)(v5 + 24);
    *(void *)(v5 + 24) = v4;
  }
  [*(id *)(a1 + 32) _invokeCompletionBlocksWithFinishedFlag:*(void *)(*(void *)(a1 + 32) + 24) != 0];
  uint64_t v7 = *(void *)(a1 + 32);
  os_signpost_id_t v8 = *(void **)(v7 + 8);
  *(void *)(v7 + 8) = 0;
}

void sub_1003ACB44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = a1;
  if (IOHIDEventGetType() == 12) {
    [v5 _handleIOHIDEvent:a4];
  }
}

void sub_1003AD72C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003AD768(uint64_t a1)
{
  uint64_t v2 = sub_10008FEAC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "low light level timer fired", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setAmbientLightLevel:[WeakRetained _computedLightLevel]];
  [WeakRetained setDarkUpdateTimer:0];
}

void sub_1003AD800(uint64_t a1)
{
  uint64_t v2 = sub_10008FEAC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "regular light level timer fired", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setAmbientLightLevel:[WeakRetained _computedLightLevel]];
  [WeakRetained setLightUpdateTimer:0];
}

id sub_1003B0880()
{
  if (qword_10160EA78 != -1) {
    dispatch_once(&qword_10160EA78, &stru_1012E7670);
  }
  uint64_t v0 = (void *)qword_10160EA70;

  return v0;
}

void sub_1003B08D4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ARConfigurationRecording");
  uint64_t v2 = (void *)qword_10160EA70;
  qword_10160EA70 = (uint64_t)v1;
}

void sub_1003B0DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1003B0DDC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 conformsToProtocol:&OBJC_PROTOCOL___VenuePlaceCardItem];
  if ((result & 1) == 0)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_1003B0EE8(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)MSCollectionPlaceItem);
  uint64_t v3 = [*(id *)(a1 + 32) name];
  [v2 setCustomName:v3];

  uint64_t v4 = [*(id *)(a1 + 32) _geoMapItem];
  id v5 = +[GEOMapItemStorage mapItemStorageForGEOMapItem:v4];
  [v2 setMapItemStorage:v5];

  id v6 = +[MapsSyncStore sharedStore];
  id v10 = v2;
  uint64_t v7 = +[NSArray arrayWithObjects:&v10 count:1];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_1003B105C;
  v8[3] = &unk_1012E76C0;
  id v9 = *(id *)(a1 + 40);
  [v6 saveWithObjects:v7 completionHandler:v8];
}

void sub_1003B105C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_1003B1108;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1003B1108(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1003B11D0(uint64_t a1)
{
  id v2 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 32) _muid]);
  id v9 = v2;
  id v3 = +[NSArray arrayWithObjects:&v9 count:1];
  id v4 = +[MapsSyncQueryPredicate queryPredicateWithFormat:@"collections.@count == 0 AND muid == %@" argumentArray:v3];

  id v5 = [objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions) initWithPredicate:v4 sortDescriptors:0 range:0];
  id v6 = objc_alloc_init((Class)MSCollectionPlaceItemRequest);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1003B1340;
  v7[3] = &unk_1012E7710;
  id v8 = *(id *)(a1 + 40);
  [v6 fetchWithOptions:v5 completionHandler:v7];
}

void sub_1003B1340(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = +[MapsSyncStore sharedStore];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1003B14AC;
    void v9[3] = &unk_1012E76C0;
    id v8 = &v10;
    id v10 = *(id *)(a1 + 32);
    [v7 deleteWithObjects:v5 completionHandler:v9];
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1003B1498;
    block[3] = &unk_1012E5F78;
    id v8 = &v13;
    id v13 = *(id *)(a1 + 32);
    id v12 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    id v7 = v12;
  }
}

uint64_t sub_1003B1498(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1003B14AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_1003B1558;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_1003B1558(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1003B1620(uint64_t a1)
{
  id v2 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [*(id *)(a1 + 32) _muid]);
  id v10 = v2;
  id v3 = +[NSArray arrayWithObjects:&v10 count:1];
  id v4 = +[MapsSyncQueryPredicate queryPredicateWithFormat:@"collections.@count == 0 AND muid == %@" argumentArray:v3];

  id v5 = [objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions) initWithPredicate:v4 sortDescriptors:0 range:0];
  id v6 = [objc_alloc((Class)_TtC8MapsSync13MapsSyncRange) initWithOffset:0 limit:1];
  [v5 setRange:v6];

  id v7 = objc_alloc_init((Class)MSCollectionPlaceItemRequest);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_1003B17BC;
  v8[3] = &unk_1012E7760;
  id v9 = *(id *)(a1 + 40);
  [v7 countWithOptions:v5 completionHandler:v8];
}

void sub_1003B17BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003B1878;
  block[3] = &unk_1012E7738;
  id v9 = *(id *)(a1 + 32);
  uint64_t v10 = a2;
  id v8 = v5;
  id v6 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1003B1878(void *a1)
{
  return (*(uint64_t (**)(void, BOOL, void))(a1[5] + 16))(a1[5], a1[6] > 0, a1[4]);
}

id sub_1003B1AE8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadLogsSync];
}

uint64_t sub_1003B1C3C(uint64_t a1, uint64_t a2)
{
  return 1;
}

void sub_1003B1C60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;

  id v5 = [*(id *)(a1 + 32) tableView];
  [v5 reloadData];
}

void sub_1003B1EE0(uint64_t a1)
{
  id v2 = dispatch_get_global_queue(25, 0);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1003B1F88;
  v4[3] = &unk_1012E5D58;
  uint64_t v3 = *(void **)(a1 + 40);
  v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  dispatch_async(v2, v4);
}

void sub_1003B1F88(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  id v13 = 0;
  unsigned int v3 = [v2 restoreOrphanedEntries:&v13];
  id v4 = v13;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003B2074;
  block[3] = &unk_1012E77D8;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v9 = v5;
  uint64_t v10 = v6;
  unsigned int v12 = v3;
  id v11 = v4;
  id v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  [*(id *)(a1 + 32) _reloadLogsSync];
}

void sub_1003B2074(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1003B2110;
  v3[3] = &unk_1012E77B0;
  os_log_t v1 = *(void **)(a1 + 32);
  id v2 = *(void **)(a1 + 48);
  void v3[4] = *(void *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 56);
  id v4 = v2;
  [v1 dismissViewControllerAnimated:1 completion:v3];
}

id sub_1003B2110(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _rebuildComplete:*(unsigned int *)(a1 + 48) error:*(void *)(a1 + 40)];
}

id sub_1003B2364(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _reallyFlushDB];
}

void sub_1003B2458(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unsigned int v3 = *(void **)(*(void *)(a1 + 32) + 24);
  id v10 = 0;
  [v3 pruneEntriesOlderThan:v2 error:&v10];
  id v4 = v10;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003B251C;
  block[3] = &unk_1012E5D58;
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v4;
  uint64_t v9 = v5;
  id v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  [*(id *)(a1 + 32) _reloadLogsAsync];
}

id sub_1003B251C(id result)
{
  uint64_t v1 = *((void *)result + 4);
  if (v1) {
    return [*((id *)result + 5) _showError:v1 forTask:@"Flushing DB"];
  }
  return result;
}

void sub_1003B34F8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) datePicker];
  unsigned int v3 = [v2 date];
  GEOConfigSetDate();

  id v4 = [*(id *)(a1 + 40) tableView];
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v5 = +[NSArray arrayWithObjects:&v6 count:1];
  [v4 reloadRowsAtIndexPaths:v5 withRowAnimation:100];
}

void sub_1003B3F84(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = [a2 name];
  uint64_t v6 = +[NSString stringWithFormat:@"%u - %@", a3, v5];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1003B4070;
  void v9[3] = &unk_1012E7828;
  id v7 = *(void **)(a1 + 32);
  void v9[4] = *(void *)(a1 + 40);
  v9[5] = a3;
  id v8 = +[UIAlertAction actionWithTitle:v6 style:0 handler:v9];
  [v7 addAction:v8];
}

id sub_1003B4070(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showPlaceCardAt:*(void *)(a1 + 40)];
}

void sub_1003B4BD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 length];
  uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 8);
  id v6 = [*(id *)(a1 + 40) row];
  if (v4)
  {
    [v5 setObject:v3 atIndexedSubscript:v6];
    id v7 = *(void **)(a1 + 48);
    uint64_t v11 = *(void *)(a1 + 40);
    id v8 = +[NSArray arrayWithObjects:&v11 count:1];
    [v7 reloadRowsAtIndexPaths:v8 withRowAnimation:100];
  }
  else
  {
    [v5 removeObjectAtIndex:v6];
    id v8 = [*(id *)(a1 + 32) tableView];
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v9 = +[NSArray arrayWithObjects:&v10 count:1];
    [v8 deleteRowsAtIndexPaths:v9 withRowAnimation:100];
  }
}

void sub_1003B4EF8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) removeObjectAtIndex:[*(id *)(a1 + 40) row]];
  uint64_t v2 = [*(id *)(a1 + 32) tableView];
  uint64_t v5 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  [v2 deleteRowsAtIndexPaths:v3 withRowAnimation:100];

  id v4 = +[NSSet setWithArray:*(void *)(*(void *)(a1 + 32) + 8)];
  GEOConfigSetSet();
}

void sub_1003B5068(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 length])
  {
    id v4 = +[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", [*(id *)(*(void *)(a1 + 32) + 8) count], 0);
    [*(id *)(*(void *)(a1 + 32) + 8) addObject:v3];
    uint64_t v5 = [*(id *)(a1 + 32) tableView];
    id v8 = v4;
    id v6 = +[NSArray arrayWithObjects:&v8 count:1];
    [v5 insertRowsAtIndexPaths:v6 withRowAnimation:100];

    id v7 = +[NSSet setWithArray:*(void *)(*(void *)(a1 + 32) + 8)];
    GEOConfigSetSet();
  }
}

uint64_t sub_1003B5270(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1003B5500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  _Block_object_dispose(&a24, 8);
  objc_destroyWeak((id *)(v26 - 88));
  _Unwind_Resume(a1);
}

void sub_1003B5540(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    [v5 setText:*(void *)(a1 + 32)];
    [v5 addTarget:WeakRetained action:"_textFieldValueDidChange:" forControlEvents:0x20000];
    [v5 setAutocapitalizationType:0];
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

void sub_1003B55E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v5 = WeakRetained;
    id v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) text];
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);

    id WeakRetained = v5;
  }
}

void sub_1003B5EAC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
}

void sub_1003B7D34(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_10160EA90;
  qword_10160EA90 = (uint64_t)v1;
}

void sub_1003B8340(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 160));
  _Unwind_Resume(a1);
}

id sub_1003B8398()
{
  if (qword_10160EAA8 != -1) {
    dispatch_once(&qword_10160EAA8, &stru_1012E7AF8);
  }
  uint64_t v0 = (void *)qword_10160EAA0;

  return v0;
}

void sub_1003B83EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 attachments];
  id v36 = v5;
  uint64_t v8 = [v5 screenshots];
  uint64_t v9 = [v7 arrayByAddingObjectsFromArray:v8];

  uint64_t v10 = +[NSFileManager defaultManager];
  id v45 = 0;
  uint64_t v38 = v6;
  LOBYTE(v8) = [v10 removeItemAtPath:v6 error:&v45];
  id v11 = v45;

  if ((v8 & 1) == 0)
  {
    unsigned int v12 = sub_1003B8398();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)buf = 134349570;
      id v47 = WeakRetained;
      __int16 v48 = 2112;
      id v49 = v6;
      __int16 v50 = 2112;
      id v51 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "[%{public}p] Error removing folder at path: %@ (%@)", buf, 0x20u);
    }
  }
  id v35 = v11;
  uint64_t v14 = +[NSFileManager defaultManager];
  id v44 = 0;
  unsigned __int8 v15 = [v14 createDirectoryAtPath:v6 withIntermediateDirectories:1 attributes:0 error:&v44];
  id v16 = v44;

  if ((v15 & 1) == 0)
  {
    id v17 = sub_1003B8398();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      id v18 = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)buf = 134349570;
      id v47 = v18;
      __int16 v48 = 2112;
      id v49 = v6;
      __int16 v50 = 2112;
      id v51 = v16;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "[%{public}p] Error creating folder at path: %@ (%@)", buf, 0x20u);
    }
  }
  id v34 = v16;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v19 = v9;
  id v20 = [v19 countByEnumeratingWithState:&v40 objects:v54 count:16];
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = *(void *)v41;
    id location = (id *)(a1 + 32);
    do
    {
      for (uint64_t i = 0; i != v21; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v41 != v22) {
          objc_enumerationMutation(v19);
        }
        id v24 = *(void **)(*((void *)&v40 + 1) + 8 * i);
        int v25 = [v24 temporaryFileURL];

        if (v25)
        {
          uint64_t v26 = [v24 temporaryFileURL];
          __int16 v27 = [v24 fileName];
          uint64_t v28 = +[NSString stringWithFormat:@"%@/%@", v38, v27];
          __int16 v29 = +[NSURL fileURLWithPath:v28];

          uint64_t v30 = +[NSFileManager defaultManager];
          id v39 = 0;
          LOBYTE(v28) = [v30 moveItemAtURL:v26 toURL:v29 error:&v39];
          uint64_t v31 = v39;

          if ((v28 & 1) == 0)
          {
            uint64_t v32 = sub_1003B8398();
            if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
            {
              id v33 = objc_loadWeakRetained(location);
              *(_DWORD *)buf = 134349826;
              id v47 = v33;
              __int16 v48 = 2112;
              id v49 = v26;
              __int16 v50 = 2112;
              id v51 = v29;
              __int16 v52 = 2112;
              id v53 = v31;
              _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "[%{public}p] Error moving attachment from %@ to %@: %@", buf, 0x2Au);
            }
          }
        }
        else
        {
          uint64_t v31 = sub_1003B8398();
          if (!os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
            goto LABEL_23;
          }
          uint64_t v26 = objc_loadWeakRetained(location);
          *(_DWORD *)buf = 134349314;
          id v47 = v26;
          __int16 v48 = 2112;
          id v49 = v24;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "[%{public}p] Invalid attachment: %@", buf, 0x16u);
        }

LABEL_23:
      }
      id v21 = [v19 countByEnumeratingWithState:&v40 objects:v54 count:16];
    }
    while (v21);
  }
}

void sub_1003B88A8(uint64_t a1)
{
  notify_post("com.apple.Maps.DEMapsExtension.CollectionAcknowledgement");
  uint64_t v7 = 0;
  uint64_t v8 = &v7;
  uint64_t v9 = 0x3032000000;
  uint64_t v10 = sub_100103B4C;
  id v11 = sub_100104630;
  id v12 = (id)objc_opt_new();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = v8[5];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1003B89DC;
  v4[3] = &unk_1012E79E8;
  id v5 = *(id *)(a1 + 32);
  id v6 = &v7;
  [WeakRetained _collectAttachmentsWithRadarDraft:v3 completion:v4];

  _Block_object_dispose(&v7, 8);
}

void sub_1003B89C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1003B89DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v3 = +[NSFileManager _maps_globalCachesURL];
  uint64_t v4 = [v3 URLByAppendingPathComponent:@"DiagnosticLogs"];
  id v5 = [v4 path];

  (*(void (**)(uint64_t, uint64_t, void *))(v1 + 16))(v1, v2, v5);

  return notify_post("com.apple.Maps.DEMapsExtension.CollectionResponse");
}

void sub_1003B8A84(uint64_t a1)
{
  uint64_t v2 = sub_1003B8398();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    LODWORD(buf) = 134349056;
    *(void *)((char *)&buf + 4) = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Got CarPlay TTR button notification", (uint8_t *)&buf, 0xCu);
  }
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v10 = 0x3032000000;
  id v11 = sub_100103B4C;
  id v12 = sub_100104630;
  id v13 = (id)objc_opt_new();
  id v4 = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = *(void *)(*((void *)&buf + 1) + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_1003B8C4C;
  v6[3] = &unk_1012E79E8;
  id v7 = *(id *)(a1 + 32);
  p_long long buf = &buf;
  [v4 _collectAttachmentsWithRadarDraft:v5 completion:v6];

  _Block_object_dispose(&buf, 8);
}

void sub_1003B8C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003B8C4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  uint64_t v3 = +[NSFileManager _maps_globalCachesURL];
  id v4 = [v3 URLByAppendingPathComponent:@"DiagnosticLogs"];
  uint64_t v5 = [v4 path];

  id v6 = [v5 stringByAppendingPathComponent:@"__CarPlay__"];

  (*(void (**)(uint64_t, uint64_t, id))(v1 + 16))(v1, v2, v6);
}

void sub_1003B9758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25)
{
}

id sub_1003B97B8(uint64_t a1)
{
  label = dispatch_queue_get_label((dispatch_queue_t)&_dispatch_main_q);
  uint64_t v3 = dispatch_queue_get_label(0);
  if (label != v3)
  {
    BOOL v4 = !label || v3 == 0;
    if (v4 || strcmp(label, v3))
    {
      id v18 = sub_1005762E4();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        int v21 = 136316418;
        uint64_t v22 = "-[MapsRadarController launchTTRWithRadar:promptTitle:fromViewController:]_block_invoke";
        __int16 v23 = 2080;
        id v24 = "MapsRadarController.m";
        __int16 v25 = 1024;
        int v26 = 177;
        __int16 v27 = 2080;
        uint64_t v28 = "dispatch_get_main_queue()";
        __int16 v29 = 2080;
        uint64_t v30 = dispatch_queue_get_label((dispatch_queue_t)&_dispatch_main_q);
        __int16 v31 = 2080;
        uint64_t v32 = dispatch_queue_get_label(0);
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion on queue failed: %s/%s; actual queue: %s",
          (uint8_t *)&v21,
          0x3Au);
      }
      if (sub_100BB36BC())
      {
        id v19 = sub_1005762E4();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        {
          id v20 = +[NSThread callStackSymbols];
          int v21 = 138412290;
          uint64_t v22 = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v21, 0xCu);
        }
      }
    }
  }
  uint64_t v5 = +[NSDate date];
  id v6 = +[NSFileManager _maps_globalCachesURL];
  id v7 = [v6 URLByAppendingPathComponent:@"DiagnosticLogs"];
  uint64_t v8 = [v7 path];

  uint64_t v9 = [v8 stringByAppendingPathComponent:@"lastLaunchedTTR.txt"];

  uint64_t v10 = +[NSFileManager defaultManager];
  [v10 removeItemAtPath:v9 error:0];

  if (v5)
  {
    id v11 = +[NSFileManager defaultManager];
    id v12 = +[NSFileManager _maps_globalCachesURL];
    id v13 = [v12 URLByAppendingPathComponent:@"DiagnosticLogs"];
    uint64_t v14 = [v13 path];

    [v11 createDirectoryAtPath:v14 withIntermediateDirectories:1 attributes:0 error:0];
    [v5 timeIntervalSinceReferenceDate];
    unsigned __int8 v15 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    id v16 = [v15 stringValue];
    [v16 writeToFile:v9 atomically:1 encoding:4 error:0];
  }
  return [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) launchTTRWithDisplayReason:*(void *)(a1 + 32)];
}

void sub_1003B9AE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _collectAttachmentsWithRadarDraft:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) completion:*(void *)(a1 + 32)];
}

void sub_1003B9F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1003B9FA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = sub_1003B8398();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)long long buf = 134349314;
    *(void *)&uint8_t buf[4] = WeakRetained;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Generating attachments for %@", buf, 0x16u);
  }
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  *(void *)long long buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  id v18 = sub_100103B4C;
  id v19 = sub_100104630;
  id v20 = (id)objc_opt_new();
  uint64_t v6 = *(void *)(*(void *)&buf[8] + 40);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_1003BA1D8;
  v10[3] = &unk_1012E7A88;
  objc_copyWeak(&v16, (id *)(a1 + 56));
  id v7 = v3;
  unsigned __int8 v15 = buf;
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void **)(a1 + 48);
  id v11 = v7;
  uint64_t v12 = v8;
  id v13 = v9;
  id v14 = *(id *)(a1 + 32);
  [v7 generateAttachmentsForRadarDraft:v6 withCompletion:v10];

  objc_destroyWeak(&v16);
  _Block_object_dispose(buf, 8);
}

void sub_1003BA1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_1003BA1D8(uint64_t a1)
{
  uint64_t v2 = sub_1003B8398();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) attachments];
    uint64_t v6 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) screenshots];
    id v7 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) keywords];
    *(_DWORD *)long long buf = 134350082;
    id v15 = WeakRetained;
    __int16 v16 = 2112;
    uint64_t v17 = v4;
    __int16 v18 = 2112;
    id v19 = v5;
    __int16 v20 = 2112;
    int v21 = v6;
    __int16 v22 = 2112;
    __int16 v23 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Generated attachments for %@; attachments: %@, screenshots: %@, keywords: %@",
      buf,
      0x34u);
  }
  uint64_t v8 = *(NSObject **)(*(void *)(a1 + 40) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003BA3AC;
  block[3] = &unk_1012E7A60;
  id v12 = *(id *)(a1 + 48);
  long long v10 = *(_OWORD *)(a1 + 56);
  id v9 = (id)v10;
  long long v13 = v10;
  dispatch_async(v8, block);
}

void sub_1003BA3AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) attachments];
  [v2 addAttachments:v3];

  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) screenshots];
  [v4 addScreenshots:v5];

  uint64_t v6 = *(void **)(a1 + 32);
  id v7 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) keywords];
  [v6 addKeywords:v7];

  uint64_t v8 = *(void **)(a1 + 32);
  id v9 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) collaborationContactHandles];
  [v8 addCollaborationContactHandles:v9];

  objc_msgSend(*(id *)(a1 + 32), "setCollectFullLogArchive:", objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "collectFullLogArchive") | objc_msgSend(*(id *)(a1 + 32), "collectFullLogArchive"));
  long long v10 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v10);
}

void sub_1003BA4C4(uint64_t a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:off_1015DF058];

  uint64_t v2 = sub_1003B8398();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)long long buf = 134349056;
    id v54 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Finished collecting diagnostic attachments. Will log them below:", buf, 0xCu);
  }
  uint64_t v4 = sub_1003B8398();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)long long buf = 134349056;
    id v54 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] ***Attachments***", buf, 0xCu);
  }
  long long v49 = 0u;
  long long v50 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  uint64_t v6 = [*(id *)(a1 + 32) attachments];
  id v7 = [v6 countByEnumeratingWithState:&v47 objects:v57 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v48;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v48 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v47 + 1) + 8 * i);
        id v12 = sub_1003B8398();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          id v13 = objc_loadWeakRetained((id *)(a1 + 56));
          *(_DWORD *)long long buf = 134349314;
          id v54 = v13;
          __int16 v55 = 2112;
          uint64_t v56 = v11;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[%{public}p] %@", buf, 0x16u);
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v47 objects:v57 count:16];
    }
    while (v8);
  }

  id v14 = sub_1003B8398();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    id v15 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)long long buf = 134349056;
    id v54 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "[%{public}p] ***Screenshots***", buf, 0xCu);
  }
  long long v45 = 0u;
  long long v46 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  __int16 v16 = [*(id *)(a1 + 32) screenshots];
  id v17 = [v16 countByEnumeratingWithState:&v43 objects:v52 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v44;
    do
    {
      for (j = 0; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v44 != v19) {
          objc_enumerationMutation(v16);
        }
        uint64_t v21 = *(void *)(*((void *)&v43 + 1) + 8 * (void)j);
        __int16 v22 = sub_1003B8398();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
        {
          id v23 = objc_loadWeakRetained((id *)(a1 + 56));
          *(_DWORD *)long long buf = 134349314;
          id v54 = v23;
          __int16 v55 = 2112;
          uint64_t v56 = v21;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "[%{public}p] %@", buf, 0x16u);
        }
      }
      id v18 = [v16 countByEnumeratingWithState:&v43 objects:v52 count:16];
    }
    while (v18);
  }

  id v24 = sub_1003B8398();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
  {
    id v25 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)long long buf = 134349056;
    id v54 = v25;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "[%{public}p] ***Keywords***", buf, 0xCu);
  }
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  int v26 = [*(id *)(a1 + 32) keywords];
  id v27 = [v26 countByEnumeratingWithState:&v39 objects:v51 count:16];
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = *(void *)v40;
    do
    {
      for (k = 0; k != v28; k = (char *)k + 1)
      {
        if (*(void *)v40 != v29) {
          objc_enumerationMutation(v26);
        }
        uint64_t v31 = *(void *)(*((void *)&v39 + 1) + 8 * (void)k);
        uint64_t v32 = sub_1003B8398();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
        {
          id v33 = objc_loadWeakRetained((id *)(a1 + 56));
          *(_DWORD *)long long buf = 134349314;
          id v54 = v33;
          __int16 v55 = 2112;
          uint64_t v56 = v31;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "[%{public}p] %@", buf, 0x16u);
        }
      }
      id v28 = [v26 countByEnumeratingWithState:&v39 objects:v51 count:16];
    }
    while (v28);
  }

  id v34 = sub_1003B8398();
  if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
  {
    id v35 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)long long buf = 134349056;
    id v54 = v35;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "[%{public}p] ***Done***", buf, 0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v36 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v37 = *(void **)(v36 + 40);
  *(void *)(v36 + 40) = 0;
}

void sub_1003BAB78(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRadarController");
  uint64_t v2 = (void *)qword_10160EAA0;
  qword_10160EAA0 = (uint64_t)v1;
}

void sub_1003BC568(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) mainMKMapView];
  [v2 _setLocationPulseEnabled:0];

  id v3 = [*(id *)(a1 + 32) mainVKMapView];
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(a1 + 40)) {
    [v4 performSelector:];
  }
  else {
    [v3 _mapstest_jumpToCoords:*(unsigned __int8 *)(v4 + 69) pitch:*(double *)(v4 + 96) yaw:*(double *)(v4 + 104) altitudeIsRegionSize:*(double *)(v4 + 80) yaw:*(double *)(v4 + 88)];
  }
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v5 = +[VKDebugSettings sharedSettings];
  *(unsigned char *)(*(void *)(a1 + 32) + 70) = [v5 layoutContinuously];

  uint64_t v6 = +[VKDebugSettings sharedSettings];
  [v6 setLayoutContinuously:1];

  id v7 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_1003BC6F4;
  v8[3] = &unk_1012E6708;
  objc_copyWeak(&v9, &location);
  [v7 addFullyDrawnCallback:v8];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_1003BC6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003BC6F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained didFinishJumping];
}

id sub_1003BC7F0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) startRendering];
}

void sub_1003BE0E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ![v5 count])
  {
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    id v7 = *(id *)(a1 + 40);
    id v8 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v18;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v10) {
            objc_enumerationMutation(v7);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v17 + 1) + 8 * i) + 16))(*(void *)(*((void *)&v17 + 1) + 8 * i));
        }
        id v9 = [v7 countByEnumeratingWithState:&v17 objects:v25 count:16];
      }
      while (v9);
    }
  }
  else
  {
    id v7 = +[NSArray arrayWithArray:v5];
    objc_setAssociatedObject(*(id *)(a1 + 32), &unk_10160EAB1, v7, (void *)1);
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v12 = *(id *)(a1 + 40);
    id v13 = [v12 countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v22;
      do
      {
        for (j = 0; j != v14; j = (char *)j + 1)
        {
          if (*(void *)v22 != v15) {
            objc_enumerationMutation(v12);
          }
          (*(void (**)(void))(*(void *)(*((void *)&v21 + 1) + 8 * (void)j) + 16))();
        }
        id v14 = [v12 countByEnumeratingWithState:&v21 objects:v26 count:16];
      }
      while (v14);
    }
  }
  objc_setAssociatedObject(*(id *)(a1 + 32), &unk_10160EAB2, 0, (void *)1);
}

CLLocation *__cdecl sub_1003BE840(id a1, CLLocation *a2, double a3)
{
  return a2;
}

uint64_t sub_1003BF248(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  char isKindOfClass = objc_opt_isKindOfClass();
  if (isKindOfClass) {
    *a4 = 1;
  }
  return isKindOfClass & 1;
}

void sub_1003BF370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003BF388(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_1003BF4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003BF508(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_1003BFC7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1003BFCA0()
{
  if (qword_10160EAD0 != -1) {
    dispatch_once(&qword_10160EAD0, &stru_1012E7CC8);
  }
  uint64_t v0 = (void *)qword_10160EAC8;

  return v0;
}

void sub_1003BFCF4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v10 = WeakRetained;
  if (a4)
  {
    uint64_t v11 = [WeakRetained stateHandler];
    ((void (**)(void, id, uint64_t))v11)[2](v11, [v10 state], 3);

    [v10 setState:3];
    id v12 = sub_1003BFCA0();
    id v13 = v12;
    os_signpost_id_t v14 = *(void *)(a1 + 48);
    if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_END, v14, "FetchingAllCollectionsView", "", buf, 2u);
    }
  }
  else
  {
    uint64_t v15 = sub_1003BFCA0();
    __int16 v16 = v15;
    os_signpost_id_t v17 = *(void *)(a1 + 48);
    if (v17 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v15))
    {
      *(_WORD *)int v26 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, OS_SIGNPOST_INTERVAL_END, v17, "FetchingAllCollectionsView", "", v26, 2u);
    }

    if (!v7)
    {
      long long v18 = [v10 allCollectionViewFilters];
      id v19 = [v18 count];

      if (!v19) {
        goto LABEL_16;
      }
    }
    long long v20 = [v10 allCollectionViewFilters];
    id v21 = [v20 count];

    if (v7 && !v21)
    {
      long long v22 = [v7 resultFilters];
      [v10 setFilters:v22];
    }
    if ([v8 count])
    {
      [v10 setCollectionResults:v8];
      long long v23 = [v7 collectionIdentifiers];
      [v10 setCollectionIds:v23];

      long long v24 = [v10 stateHandler];
      ((void (**)(void, id, uint64_t))v24)[2](v24, [v10 state], 2);

      [v10 setState:2];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
    else
    {
LABEL_16:
      id v25 = [v10 stateHandler];
      ((void (**)(void, id, uint64_t))v25)[2](v25, [v10 state], 3);

      [v10 setState:3];
    }
  }
}

void sub_1003C01D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1003C01F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
    {
      [WeakRetained setPlaceCollections:0];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      id v9 = sub_1003BFCA0();
      uint64_t v10 = v9;
      os_signpost_id_t v11 = *(void *)(a1 + 48);
      if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "FetchingAllCollectionsViewBatch", "", buf, 2u);
      }
    }
    else
    {
      id v12 = sub_1003BFCA0();
      id v13 = v12;
      os_signpost_id_t v14 = *(void *)(a1 + 48);
      if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
      {
        *(_WORD *)uint64_t v15 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_END, v14, "FetchingAllCollectionsViewBatch", "", v15, 2u);
      }

      [v8 setPlaceCollections:v5];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

void sub_1003C04A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AllCollectionsAPIController");
  uint64_t v2 = (void *)qword_10160EAC8;
  qword_10160EAC8 = (uint64_t)v1;
}

id sub_1003C0E68(double a1, double a2, uint64_t a3, void *a4)
{
  LODWORD(a2) = -1.0;
  return _[a4 _loadCompressionTestCardWithHeight:-1.0 priority:a2];
}

void sub_1003C1E74(_Unwind_Exception *a1)
{
  if ((v2 & 1) == 0) {
    objc_destroyWeak(v1);
  }
  objc_destroyWeak((id *)(v3 - 216));
  _Unwind_Resume(a1);
}

void sub_1003C1E94(uint64_t a1, double a2, double a3)
{
  id v6 = sub_100015DB4();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v8 = 134218240;
    double v9 = a2;
    __int16 v10 = 2048;
    double v11 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "_configureCard: user tapped at (%f,%f)", (uint8_t *)&v8, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleUserSelectionAtPoint:a2, a3];
}

void sub_1003C21FC(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) chromeViewController];
  [v2 setHardwareBackButtonBehavior:2 forContext:*(void *)(a1 + 32)];

  uint64_t v3 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v4 = [v3 mapView];
  [v4 _setApplicationState:2];

  id v5 = [*(id *)(a1 + 32) chromeViewController];
  id v6 = [v5 mapView];
  [v6 _setDisplayedSearchResultsType:0];

  id v7 = +[MNNavigationService sharedService];
  [v7 registerObserver:*(void *)(a1 + 32)];

  int v8 = +[MSPSharedTripService sharedInstance];
  [v8 addSendingObserver:*(void *)(a1 + 32)];

  double v9 = [*(id *)(a1 + 32) waypointController];
  [v9 registerObserver:*(void *)(a1 + 32)];

  __int16 v10 = [*(id *)(a1 + 32) waypointController];
  double v11 = [v10 displayedWaypoints];
  id v12 = [*(id *)(a1 + 32) waypointsOverviewCardController];
  [v12 setWaypoints:v11];

  id v13 = +[NSUserDefaults standardUserDefaults];
  id v14 = [v13 integerForKey:@"NavigationCarPlayPersistedGuidanceSignStyle"];
  uint64_t v15 = [*(id *)(a1 + 32) guidanceCardController];
  [v15 setNavigationGuidanceSignStyle:v14];

  id v16 = +[NSNotificationCenter defaultCenter];
  [v16 addObserver:*(void *)(a1 + 32) selector:"_maneuverBannerViewEVStationsNotification:" name:off_1015E2B10 object:0];
}

void sub_1003C23C8(uint64_t a1)
{
  char v2 = *(void **)(a1 + 32);
  uint64_t v3 = [v2 cameraStyleManager];
  [v2 setCameraStyle:[v3 centerConsoleCameraStyle] animated:*(unsigned __int8 *)(a1 + 40)];

  uint64_t v4 = +[MSPSharedTripService sharedInstance];
  id v5 = [v4 receivers];
  id v6 = [v5 count];
  id v7 = *(unsigned __int8 **)(a1 + 32);
  if (v6)
  {
    int v8 = [v7 contactSharingSuggestion];
    if (!v8)
    {

      goto LABEL_8;
    }
    int v9 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 17);
  }
  else
  {
    int v9 = v7[17];
  }

  if (!v9)
  {
    [*(id *)(a1 + 32) _updateShareETADisclosureAutoDismissTimer];
    *(unsigned char *)(*(void *)(a1 + 32) + 17) = 1;
  }
LABEL_8:
  [*(id *)(a1 + 32) _updateShareButtonContentAndVisibility:0];
  __int16 v10 = +[MNNavigationService sharedService];
  double v11 = [v10 route];
  [*(id *)(a1 + 32) setCurrentRoute:v11];

  [*(id *)(a1 + 32) _captureCurrentNavigationModeState];
  id v12 = [*(id *)(a1 + 32) chromeViewController];
  id v13 = [v12 userLocationView];
  [v13 setMode:1 animated:*(unsigned __int8 *)(a1 + 40)];

  [*(id *)(a1 + 32) _setupGuidanceDisplays:*(unsigned __int8 *)(a1 + 40)];
  id v14 = [*(id *)(a1 + 32) etaCardController];
  [v14 setExpanded:0 animated:*(unsigned __int8 *)(a1 + 40) completion:0];

  id v15 = [*(id *)(a1 + 32) etaCardController];
  [v15 updateContent];
}

void sub_1003C2570(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  if ((unint64_t)(v1[9] - 3) <= 3)
  {
    char v2 = [v1 chromeViewController];
    [v2 interruptAutohideForIncidentalInteraction];
  }
  id v5 = +[CarDisplayController sharedInstance];
  if ([v5 isCurrentlyConnectedToCarAppScene])
  {
    [v5 screenSize];
  }
  else
  {
    double width = CGSizeZero.width;
    double height = CGSizeZero.height;
  }
  +[NavJunctionViewController updateJunctionImageSizeForScreenSize:](NavJunctionViewController, "updateJunctionImageSizeForScreenSize:", width, height);
}

void sub_1003C26EC(uint64_t a1)
{
  char v2 = +[MSPSharedTripService sharedInstance];
  [v2 removeSendingObserver:*(void *)(a1 + 32)];

  uint64_t v3 = +[MNNavigationService sharedService];
  [v3 unregisterObserver:*(void *)(a1 + 32)];

  uint64_t v4 = [*(id *)(a1 + 32) guidanceObserver];
  id v5 = [*(id *)(a1 + 32) guidanceCardController];
  [v4 removeOutlet:v5];

  id v6 = [*(id *)(a1 + 32) guidanceObserver];
  id v7 = [*(id *)(a1 + 32) etaCardController];
  [v6 removeOutlet:v7];

  +[NavJunctionViewController updateJunctionImageSizeForScreenSize:](NavJunctionViewController, "updateJunctionImageSizeForScreenSize:", CGSizeZero.width, CGSizeZero.height);
  int v8 = [*(id *)(a1 + 32) waypointController];
  [v8 unregisterObserver:*(void *)(a1 + 32)];

  id v9 = +[NSNotificationCenter defaultCenter];
  [v9 removeObserver:*(void *)(a1 + 32) name:off_1015E2B10 object:0];
}

void sub_1003C2834(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) etaCardController];
  [v1 setExpanded:0 animated:0 completion:0];
}

void sub_1003C3B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003C3B88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _ppt_notityETATrayUpdateCompleted];
}

id sub_1003C3CC8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) configureNavigationDisplay:a2];
}

BOOL sub_1003C4540(id a1, GEOComposedWaypoint *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOComposedWaypoint *)a2 isServerProvidedWaypoint] ^ 1;
}

void sub_1003C4F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003C4F88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    char v2 = [WeakRetained etaCardController];
    unsigned int v3 = [v2 isShowingShareETASuggestion];

    if (v3) {
      +[GEOAPPortal captureUserAction:399 target:126 value:0];
    }
    [v4 setShareEtaDisclosureAutoDismissTimer:0];
    [v4 _updateShareButtonContentAndVisibility:1];
    id WeakRetained = v4;
  }
}

void sub_1003C5650(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 136));
  _Unwind_Resume(a1);
}

void sub_1003C56A4(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (v1)
  {
    uint64_t v3 = [WeakRetained chromeViewController];
    [v3 interruptAutohideForIncidentalInteraction];
  }
  else
  {
    uint64_t v3 = [WeakRetained guidanceCardController];
    [v3 showTemporarilyHiddenJunctionViewAnimated:0];
  }
}

uint64_t sub_1003C571C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setIsTogglingETACard:0];

  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v3();
}

void sub_1003C5780(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003C5830;
  block[3] = &unk_1012E7DE0;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  char v5 = *(unsigned char *)(a1 + 48);
  id v3 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v4);
}

void sub_1003C5830(uint64_t a1)
{
  char v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained etaCardController];
  uint64_t v5 = *(unsigned __int8 *)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_1003C5928;
  v6[3] = &unk_1012E7DB8;
  objc_copyWeak(&v8, v2);
  id v7 = *(id *)(a1 + 32);
  [v4 setExpanded:1 animated:v5 completion:v6];

  objc_destroyWeak(&v8);
}

void sub_1003C5914(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C5928(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setIsTogglingETACard:0];

  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v3();
}

void sub_1003C598C(uint64_t a1)
{
  char v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setIsTogglingETACard:0];

  id v6 = objc_loadWeakRetained(v2);
  id v4 = [v6 chromeViewController];
  id v5 = objc_loadWeakRetained(v2);
  [v4 updateCardsForContext:v5 animated:0 completion:*(void *)(a1 + 32)];
}

id sub_1003C6518(uint64_t a1, double a2, double a3)
{
  LODWORD(a3) = *(_DWORD *)(a1 + 48);
  return _[*(id *)(a1 + 32) _loadCompressionTestCardWithHeight:*(double *)(a1 + 40) priority:a3];
}

void sub_1003C6A34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _sendOtherEVStationsRequest];
}

void sub_1003C6E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003C6E5C(uint64_t a1, void *a2)
{
  id v15 = a2;
  id v3 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v14 = WeakRetained;
    id v5 = WeakRetained[11];
    id v6 = [v5 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(v5);
          }
          id v9 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          __int16 v10 = [v9 objectForKeyedSubscript:@"name"];

          if (v10)
          {
            double v11 = [v9 objectForKeyedSubscript:@"name"];
            v16[0] = _NSConcreteStackBlock;
            v16[1] = 3221225472;
            long long v16[2] = sub_1003C70AC;
            v16[3] = &unk_1012E7ED0;
            v16[4] = v9;
            objc_copyWeak(&v17, v3);
            id v12 = [v15 addButtonRowWithTitle:v11 action:v16];

            objc_destroyWeak(&v17);
          }
        }
        id v6 = [v5 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v6);
    }

    id v13 = +[NSString stringWithFormat:@"Path: %@", v14[12]];
    [v15 setFooter:v13];

    id WeakRetained = v14;
  }
}

void sub_1003C7090(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003C70AC(id *a1)
{
  int v1 = a1;
  id v32 = [a1[4] objectForKeyedSubscript:@"data"];
  char v2 = [v32 objectForKeyedSubscript:@"target_point"];
  id v3 = [v2 objectForKeyedSubscript:@"latitude"];
  [v3 doubleValue];
  CLLocationDegrees v5 = v4;

  id v6 = [v2 objectForKeyedSubscript:@"longitude"];
  [v6 doubleValue];
  CLLocationDegrees v8 = v7;

  id v9 = [v32 objectForKeyedSubscript:@"heading"];
  [v9 doubleValue];
  double v11 = v10;

  id v12 = [v32 objectForKeyedSubscript:@"pitch"];
  [v12 doubleValue];
  double v14 = v13;

  id v15 = [v32 objectForKeyedSubscript:@"distance"];
  [v15 doubleValue];

  v1 += 5;
  id WeakRetained = objc_loadWeakRetained(v1);
  id v17 = [WeakRetained delegate];
  id v18 = objc_loadWeakRetained(v1);
  long long v19 = [v17 allVisibleMapViewsForDebugController:v18];
  long long v20 = [v19 firstObject];

  v34.latitude = v5;
  v34.longitude = v8;
  MKMapPointForCoordinate(v34);
  [v20 bounds];
  MKMapRectMakeWithZoomLevel();
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;
  [v20 frame];
  uint64_t v31 = +[MKMapCamera _cameraLookingAtMapRect:forViewSize:](MKMapCamera, "_cameraLookingAtMapRect:forViewSize:", v22, v24, v26, v28, v29, v30);
  [v31 setPitch:v14];
  [v31 setHeading:v11];
  [v20 setCamera:v31];
}

void sub_1003C72F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1003C7538;
  v14[3] = &unk_1012E6708;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Copy File Path" action:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _OWORD v12[2] = sub_1003C75AC;
  v12[3] = &unk_1012E6708;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Clear All Bookmarks" action:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_1003C7728;
  v10[3] = &unk_1012E6708;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addButtonRowWithTitle:@"Share Bookmark File" action:v10];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_1003C786C;
  v8[3] = &unk_1012E6708;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v7 = [v3 addButtonRowWithTitle:@"Add Current Search Framing" action:v8];
  objc_destroyWeak(&v9);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_1003C74F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003C7538(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained[12];
    id v4 = WeakRetained;
    id v3 = +[UIPasteboard generalPasteboard];
    [v3 setString:v2];

    id WeakRetained = v4;
  }
}

void sub_1003C75AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[UIAlertController alertControllerWithTitle:@"Alert" message:@"Do you want to clear list" preferredStyle:1];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    uint64_t v5[2] = sub_1003C76DC;
    v5[3] = &unk_1012E6DE0;
    void v5[4] = WeakRetained;
    id v3 = +[UIAlertAction actionWithTitle:@"Yes" style:0 handler:v5];
    id v4 = +[UIAlertAction actionWithTitle:@"Cancel" style:0 handler:&stru_1012E7F38];
    [v2 addAction:v3];
    [v2 addAction:v4];
    [WeakRetained presentViewController:v2 animated:1 completion:0];
  }
}

id sub_1003C76DC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 88) removeAllObjects];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 saveFileAndReload];
}

void sub_1003C7728(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = +[NSURL fileURLWithPath:WeakRetained[12]];
    id v3 = [[MapsDebugFileExportController alloc] initWithFileAtURL:v2 presentingViewController:WeakRetained];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    uint64_t v5[2] = sub_1003C7810;
    v5[3] = &unk_1012E5D08;
    id v6 = v2;
    id v4 = v2;
    [(MapsDebugFileExportController *)v3 startWithCompletion:v5];
  }
}

void sub_1003C7810(uint64_t a1)
{
  id v2 = +[NSFileManager defaultManager];
  [v2 removeItemAtURL:*(void *)(a1 + 32) error:0];
}

void sub_1003C786C(uint64_t a1)
{
  int v1 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = +[UIApplication sharedMapsDelegate];
    id v4 = [v3 appCoordinator];
    id v5 = [v4 baseActionCoordinator];

    id v6 = [v5 placeCardViewController];
    id v7 = [v6 placeCardItem];
    CLLocationDegrees v8 = [v7 mapItem];

    if (v8)
    {
      id v9 = objc_loadWeakRetained(v1);
      double v10 = [v9 delegate];
      id v11 = objc_loadWeakRetained(v1);
      id v12 = [v10 allVisibleMapViewsForDebugController:v11];
      id v13 = [v12 firstObject];

      long long v40 = [v13 camera];
      id v14 = [v40 copy];
      [v14 setHeading:0.0];
      [v14 setPitch:0.0];
      v45[0] = @"latitude";
      [v14 centerCoordinate];
      id v15 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
      v46[0] = v15;
      v45[1] = @"longitude";
      [v14 centerCoordinate];
      id v17 = +[NSNumber numberWithDouble:v16];
      v46[1] = v17;
      v45[2] = @"altitude";
      id v18 = +[NSNumber numberWithDouble:0.0];
      v46[2] = v18;
      long long v19 = +[NSDictionary dictionaryWithObjects:v46 forKeys:v45 count:3];

      [v13 frame];
      if (v20 != 0.0)
      {
        [v13 frame];
        double v22 = v21;
        [v13 frame];
        double v24 = v22 / v23;
        *(float *)&double v24 = v22 / v23;
        [v14 enclosingMapRectForAspectRatio:v24];
        if (v25 != 0.0)
        {
          [v13 frame];
          MKZoomLevelForScaleF();
          double v27 = v26;
          v44[0] = v19;
          v43[0] = @"target_point";
          v43[1] = @"heading";
          [v40 heading];
          double v28 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
          v44[1] = v28;
          v43[2] = @"pitch";
          [v40 pitch];
          double v29 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
          v44[2] = v29;
          v43[3] = @"distance";
          +[NSNumber numberWithDouble:v27];
          double v30 = v39 = v5;
          v44[3] = v30;
          uint64_t v31 = +[NSDictionary dictionaryWithObjects:v44 forKeys:v43 count:4];

          v41[0] = @"name";
          id v32 = [v8 name];
          v42[0] = v32;
          v41[1] = @"muid";
          id v33 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v8 _muid]);
          v41[2] = @"data";
          v42[1] = v33;
          v42[2] = v31;
          CLLocationCoordinate2D v34 = +[NSDictionary dictionaryWithObjects:v42 forKeys:v41 count:3];

          id v5 = v39;
          [WeakRetained[11] addObject:v34];
          [WeakRetained saveFileAndReload];
        }
      }
    }
    else
    {
      +[UIAlertController alertControllerWithTitle:@"Alert" message:@"Failed to save, must search for POI and have placecard" preferredStyle:1];
      v36 = id v35 = v5;
      uint64_t v37 = +[UIAlertAction actionWithTitle:@"OK" style:0 handler:&stru_1012E7F58];
      [v36 addAction:v37];
      id v38 = objc_loadWeakRetained(v1);
      [v38 presentViewController:v36 animated:1 completion:0];

      id v5 = v35;
    }
  }
}

uint64_t sub_1003C903C(uint64_t a1)
{
  uint64_t v2 = 40;
  id v3 = [*(id *)(*(void *)(a1 + 32) + 40) allObjects];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v4)
  {
    id v5 = v4;
    int v6 = 0;
    uint64_t v7 = *(void *)v21;
    while (1)
    {
      CLLocationDegrees v8 = 0;
      id v19 = v5;
      do
      {
        if (*(void *)v21 != v7) {
          objc_enumerationMutation(v3);
        }
        uint64_t v9 = *(void *)(*((void *)&v20 + 1) + 8 * (void)v8);
        double v10 = *(void **)(a1 + 32);
        if (v9 == v10[26])
        {
          id v12 = [v10 layoutForCurrentViewControllerWithStyle:[*(id *)(a1 + 32) containerStyle]];
          if (v12) {
            goto LABEL_12;
          }
        }
        else
        {
          id v11 = [*(id *)((char *)v10 + v2) containeeStateForContainee:*(void *)(*((void *)&v20 + 1) + 8 * (void)v8)];
          id v12 = [v11 layoutForStyle:[*(id *)(a1 + 32) containerStyle]];

          if (v12) {
            goto LABEL_12;
          }
        }
        if ((-[ContainerViewController delaysFirstCardPresentation]_0() & 1) == 0)
        {
          id v13 = [*(id *)(a1 + 32) currentViewController];
          [v13 cardPresentationController];
          uint64_t v14 = v7;
          uint64_t v15 = v2;
          v17 = double v16 = v3;
          [v17 updateHeightForCurrentLayout];

          id v3 = v16;
          uint64_t v2 = v15;
          uint64_t v7 = v14;
          id v5 = v19;
        }
LABEL_12:
        v6 |= [*(id *)(a1 + 32) _updateContaineeIfNeeded:v9 withLayout:v12];
        CLLocationDegrees v8 = (char *)v8 + 1;
      }
      while (v5 != v8);
      id v5 = [v3 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (!v5) {
        goto LABEL_16;
      }
    }
  }
  LOBYTE(v6) = 0;
LABEL_16:

  return v6 & 1;
}

void sub_1003C9228(uint64_t a1)
{
  uint64_t v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Container viewWillTransitionToSize animation block", buf, 2u);
  }

  int v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  [*(id *)(a1 + 32) suspendPropagatingEdgeInsetsForReason:@"container view transitioning size"];
  [*(id *)(a1 + 32) animateAlongsideCardTransition];
  if (v3 && *(unsigned char *)(a1 + 48))
  {
    id v4 = [*(id *)(a1 + 32) view];
    [v4 setNeedsLayout];
  }
  id v5 = sub_1000BD86C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Container viewWillTransitionToSize animation block end", v6, 2u);
  }
}

void sub_1003C9328(uint64_t a1)
{
  uint64_t v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Container viewWillTransitionToSize completion", buf, 2u);
  }

  *(void *)(*(void *)(a1 + 32) + 72) = 0;
  +[PPTNotificationCenter postNotificationIfNeededWithName:@"PPTTestOrientationDidRotateNotification" object:*(void *)(a1 + 32) userInfo:0];
  [*(id *)(a1 + 32) resumePropagatingEdgeInsets];
  [*(id *)(*(void *)(a1 + 32) + 256) updateLayoutStyle];
  int v3 = *(double **)(a1 + 32);
  if (v3[9] > 0.0)
  {
    id v4 = [v3 traitCollection];
    id v5 = [v4 userInterfaceIdiom];

    if (v5 == (id)5 && (*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))() && *(unsigned char *)(a1 + 48))
    {
      int v6 = [*(id *)(a1 + 32) view];
      [v6 setNeedsLayout];
    }
  }
  uint64_t v7 = sub_1000BD86C();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)CLLocationDegrees v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Container viewWillTransitionToSize completion end", v8, 2u);
  }
}

void sub_1003C9610(uint64_t a1)
{
  uint64_t v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Container willTransitionToTraitCollection animation block", buf, 2u);
  }

  [*(id *)(a1 + 32) _updateOverrideTraitCollectionsForStyle:[*(id *)(a1 + 32) containerStyle]];
  if (*(unsigned char *)(a1 + 40))
  {
    int v3 = [*(id *)(a1 + 32) iosBasedChromeViewController];
    [v3 setNeedsUpdateComponent:@"statusBarStyle" animated:0];
  }
  id v4 = sub_1000BD86C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Container willTransitionToTraitCollection animation block end", v5, 2u);
  }
}

void sub_1003C9708(id a1, UIViewControllerTransitionCoordinatorContext *a2)
{
  uint64_t v2 = sub_1000BD86C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Container willTransitionToTraitCollection completion end", v3, 2u);
  }
}

id sub_1003CA740(uint64_t a1)
{
  [*(id *)(a1 + 32) didResignContainee:*(void *)(a1 + 40) finished:1];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 didResignCurrent];
}

id sub_1003CAB30(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 40);
  int v3 = [[ContaineeState alloc] initWithContainee:*(void *)(a1 + 40)];
  [v2 replaceLastOne:v3];

  id v4 = *(void **)(a1 + 32);

  return [v4 assertPresentationStackAppearsCorrect];
}

void sub_1003CB03C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v12 = a2;
  int v6 = [v12 cardPresentationController];
  unsigned int v7 = [v6 usingSheetPresentation];

  if (v7)
  {
    CLLocationDegrees v8 = [v12 cardPresentationController];
    [v8 setHidden:0];
  }
  uint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 40) containeeStateForContainee:v12];
  if (v9) {
    goto LABEL_6;
  }
  id v10 = [*(id *)(a1 + 40) lastObject];

  id v11 = v12;
  if (v10 != v12)
  {
    uint64_t v9 = [[ContaineeState alloc] initWithContainee:v12];
LABEL_6:
    [*(id *)(a1 + 48) pushContaineeState:v9];

    id v11 = v12;
    goto LABEL_7;
  }
  *a4 = 1;
LABEL_7:
}

uint64_t sub_1003CB16C(uint64_t a1)
{
  [*(id *)(a1 + 32) didPresentContainee:*(void *)(a1 + 40) finished:1];
  [*(id *)(a1 + 40) didBecomeCurrent];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    int v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

uint64_t sub_1003CB1D4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48)) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(void **)(*(void *)(a1 + 40) + 40);
  if (!v2)
  {
    uint64_t v6 = [v3 popAll];
LABEL_7:
    id v5 = (void *)v6;
    goto LABEL_8;
  }
  id v4 = [v3 indexOfContainee:];
  if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v6 = [*(id *)(*(void *)(a1 + 40) + 40) popFromIndex:v4];
    goto LABEL_7;
  }
  id v5 = 0;
LABEL_8:
  if ([v5 count]) {
    [*(id *)(a1 + 40) removeControllersFromStack:v5];
  }

LABEL_11:
  [*(id *)(a1 + 40) updateMapEdgeInsets];
  [*(id *)(a1 + 40) resumePropagatingEdgeInsets];
  [*(id *)(a1 + 40) assertPresentationStackAppearsCorrect];
  if ([*(id *)(a1 + 40) _chromeEnabled]) {
    goto LABEL_23;
  }
  unsigned int v7 = sub_1000BF6B8();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = *(id *)(a1 + 40);
    if (!v8)
    {
      id v13 = @"<nil>";
      goto LABEL_21;
    }
    uint64_t v9 = (objc_class *)objc_opt_class();
    id v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      id v11 = [v8 performSelector:"accessibilityIdentifier"];
      id v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        id v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_19;
      }
    }
    id v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_19:

LABEL_21:
    *(_DWORD *)long long buf = 138543362;
    double v16 = v13;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}@] Chrome is not enabled; hide containees",
      buf,
      0xCu);
  }
  [*(id *)(a1 + 40) setContaineesHidden:1];
LABEL_23:
  uint64_t result = -[ContainerViewController delaysFirstCardPresentation]_0();
  if (result) {
    *(unsigned char *)(*(void *)(a1 + 40) + 194) = 0;
  }
  return result;
}

id sub_1003CBB54(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) currentViewController];
  [v2 heightForLayout:*(void *)(*(void *)(a1 + 32) + 200)];
  double v4 = v3;

  id v5 = [*(id *)(a1 + 32) view];
  [v5 layoutIfNeeded];

  [*(id *)(a1 + 32) contentHeightUpdatedWithValue:v4];
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = v6[25];

  return [v6 _updateVisibleContentForLayout:v7];
}

id sub_1003CBBEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 90))
  {
    [(id)v2 containee:*(void *)(v2 + 208) didChangeLayout:*(void *)(v2 + 200)];
    double v3 = [*(id *)(a1 + 32) currentViewController];
    [v3 didChangeLayout:*(void *)(*(void *)(a1 + 32) + 200)];

    double v4 = *(void **)(a1 + 32);
    id v5 = [v4 currentViewController];
    [v5 heightForLayout:*(void *)(*(void *)(a1 + 32) + 200)];
    [v4 contentHeightUpdatedWithValue:];

    [*(id *)(a1 + 32) transitionEnded];
  }
  else
  {
    *(unsigned char *)(v2 + 91) = 1;
  }
  uint64_t v6 = *(void **)(a1 + 32);

  return [v6 updateContaineeStackState];
}

id sub_1003CC060(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];

  [*(id *)(a1 + 32) contentHeightUpdatedWithValue:*(double *)(a1 + 40)];
  double v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);

  return [v3 _updateVisibleContentForLayout:v4];
}

id sub_1003CC0BC(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[90])
  {
    double v3 = [v2 view];
    [v3 layoutIfNeeded];

    [*(id *)(a1 + 32) _completeStateIfNeeded];
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = [v4 currentViewController];
    [v5 heightForLayout:*(void *)(*(void *)(a1 + 32) + 200)];
    [v4 contentHeightUpdatedWithValue:];
  }
  else
  {
    v2[91] = 1;
  }
  uint64_t v6 = *(void **)(a1 + 32);

  return [v6 updateContaineeStackState];
}

id sub_1003CC85C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = [a2 identifier];
  id v7 = [v6 isEqualToString:*(void *)(a1 + 32)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

void sub_1003CCB94(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 setHidden:1];
}

void sub_1003CCBDC(uint64_t a1, void *a2)
{
  if (([a2 isCancelled] & 1) == 0)
  {
    double v3 = *(void **)(a1 + 32);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1003CCC7C;
    v4[3] = &unk_1012E6300;
    id v5 = v3;
    char v6 = *(unsigned char *)(a1 + 40);
    [v5 dismissViewControllerAnimated:0 completion:v4];
  }
}

void sub_1003CCC7C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 setHidden:v1];
}

id sub_1003CCFFC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _internal_ensurePresentationsMatchContaineeStackAllowingFault:*(unsigned __int8 *)(a1 + 40) allowingAnimations:*(unsigned __int8 *)(a1 + 41) skipUnlock:*(unsigned __int8 *)(a1 + 42)];
}

id sub_1003CD014(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chromeViewController];
  [v2 dismissViewControllerAnimated:0 completion:0];

  double v3 = sub_1000BF6B8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v7 = 138412546;
    uint64_t v8 = v4;
    __int16 v9 = 2112;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%@ Did dismiss for rebuild, sequentially presenting %@", (uint8_t *)&v7, 0x16u);
  }

  return [*(id *)(a1 + 32) _sequentiallyPresentViewControllers:*(void *)(a1 + 40) allowAnimations:*(unsigned __int8 *)(a1 + 48)];
}

id sub_1003CD0F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _unlockCardQueue];
}

id sub_1003CD1C8(uint64_t a1)
{
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v22 objects:v30 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v23;
    *(void *)&long long v4 = 138412546;
    long long v21 = v4;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        __int16 v9 = [v8 presentingViewController:v21];

        if (v9)
        {
          uint64_t v10 = [v8 presentingViewController];
          [v10 dismissViewControllerAnimated:0 completion:0];
        }
        id v11 = [v8 cardPresentationController];
        id v12 = [v11 containerViewController];
        [v8 setModalPresentationStyle:7];
        [v8 setModalPresentationStyle:2];
        [v11 configureForSheetPresentationWithContainer:v12 layout:[v8 retainedLayout]];
        id v13 = sub_1000BF6B8();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v14 = *(void *)(a1 + 40);
          *(_DWORD *)long long buf = v21;
          uint64_t v27 = v14;
          __int16 v28 = 2112;
          double v29 = v8;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "%@ presenting %@ for rebuild", buf, 0x16u);
        }

        [*(id *)(a1 + 40) _maps_topMostPresentViewController:v8];
      }
      id v5 = [v2 countByEnumeratingWithState:&v22 objects:v30 count:16];
    }
    while (v5);
  }

  uint64_t v15 = sub_1000BF6B8();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v16 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138412290;
    uint64_t v27 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "%@ rebuild complete, unlocking queue", buf, 0xCu);
  }

  id v17 = [*(id *)(a1 + 32) lastObject];
  [*(id *)(a1 + 40) setCurrentViewController:v17];

  id v18 = [*(id *)(a1 + 40) currentViewController];
  id v19 = [v18 view];
  [v19 setUserInteractionEnabled:1];

  return [*(id *)(a1 + 40) _unlockCardQueue];
}

id sub_1003CD49C(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:0 completion:0];
}

uint64_t sub_1003CD7DC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_1003CDD3C(uint64_t a1)
{
  [*(id *)(a1 + 32) didPresentContainee:*(void *)(*(void *)(a1 + 32) + 136) finished:1];
  [*(id *)(*(void *)(a1 + 32) + 136) didBecomeCurrent];
  id v5 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 152));
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 152);
  *(void *)(v2 + 152) = 0;

  long long v4 = v5;
  if (v5)
  {
    (*((void (**)(id, uint64_t))v5 + 2))(v5, 1);
    long long v4 = v5;
  }
}

id sub_1003CDF08(uint64_t a1)
{
  [*(id *)(a1 + 32) didResignContainee:*(void *)(a1 + 40) finished:1];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 didResignCurrent];
}

id sub_1003CE8DC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) results];
  id v3 = [*(id *)(a1 + 40) testStatistics];
  [v2 addEntriesFromDictionary:v3];

  long long v4 = *(void **)(a1 + 32);

  return [v4 finishedTest];
}

void sub_1003CECE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 40) == WeakRetained[4])
    {
      [WeakRetained _setFetchedImage:v3];
      if (!v3)
      {
        uint64_t v6 = sub_1000AA148();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = v5[5];
          int v8 = 138412290;
          uint64_t v9 = v7;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Failed to fetch icon for favorite '%@'", (uint8_t *)&v8, 0xCu);
        }
      }
    }
  }
}

void sub_1003CEDE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained
    && *(void *)(a1 + 40) == WeakRetained[4]
    && *(void *)(a1 + 48) <= 4uLL
    && [WeakRetained _shouldFetchMissingImage])
  {
    uint64_t v4 = *(void *)(a1 + 48) + 1;
    id v5 = sub_1000AA148();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = v3[5];
      int v7 = 138413058;
      uint64_t v8 = v6;
      __int16 v9 = 2048;
      double v10 = (double)(unint64_t)v4 * 5.0;
      __int16 v11 = 1024;
      int v12 = v4;
      __int16 v13 = 1024;
      int v14 = 5;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Favorite '%@' icon missing after %gs. Retry %d/%d.", (uint8_t *)&v7, 0x22u);
    }

    [v3 _fetchImageWithImageCount:*(void *)(a1 + 40) retryCount:v4];
  }
}

void sub_1003D0988(uint64_t a1)
{
  [*(id *)(a1 + 32) _alertDidFinishProcessing];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 8);
  *(void *)(v2 + 8) = 0;
}

void sub_1003D0BA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1003D0BC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[MapsEventRecorder isRecording])
  {
    __int16 v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472;
    uint64_t v15 = sub_1003D1054;
    uint64_t v16 = &unk_1012E6708;
    uint64_t v4 = &v17;
    id v5 = (id *)(a1 + 32);
    objc_copyWeak(&v17, v5);
    id v6 = [v3 addButtonRowWithTitle:@"End Event Recording" action:&v13];
    id WeakRetained = objc_loadWeakRetained(v5);
    if (objc_msgSend(WeakRetained, "tapToRadarEnabled", v13, v14, v15, v16)) {
      CFStringRef v8 = @"Tap-to-Radar Enabled";
    }
    else {
      CFStringRef v8 = @"Tap-to-Radar Disabled";
    }
    [v3 addEmptySectionBannerRowWithTitle:v8];
  }
  else
  {
    __int16 v9 = (id *)(a1 + 32);
    id v10 = objc_loadWeakRetained(v9);
    [v10 setTapToRadarEnabled:0];

    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    long long v22[2] = sub_1003D0E64;
    _OWORD v22[3] = &unk_1012E6708;
    uint64_t v4 = &v23;
    objc_copyWeak(&v23, v9);
    id v11 = [v3 addButtonRowWithTitle:@"Begin Event Recording" action:v22];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_1003D0FCC;
    v20[3] = &unk_1012E8290;
    objc_copyWeak(&v21, v9);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1003D1004;
    v18[3] = &unk_1012E6998;
    objc_copyWeak(&v19, v9);
    id v12 = [v3 addSwitchRowWithTitle:@"Tap-to-Radar" get:v20 set:v18];
    objc_destroyWeak(&v19);
    objc_destroyWeak(&v21);
  }
  objc_destroyWeak(v4);
}

void sub_1003D0E30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003D0E64(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained tapToRadarEnabled];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v4 view];
  id v6 = [v5 window];
  int v7 = +[MapsEventRecorder initializeDefaultRecorderWithTapToRadar:v3 window:v6];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_1003D0F8C;
  v8[3] = &unk_1012E6708;
  objc_copyWeak(&v9, v1);
  [v7 beginRecordingWithCompletion:v8];
  objc_destroyWeak(&v9);
}

void sub_1003D0F78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003D0F8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

id sub_1003D0FCC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained tapToRadarEnabled];

  return v2;
}

void sub_1003D1004(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setTapToRadarEnabled:a2];
}

void sub_1003D1054(uint64_t a1)
{
  id v2 = +[MapsEventRecorder defaultRecorder];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1003D1118;
  v3[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  [v2 endRecordingWithCompletion:v3];

  objc_destroyWeak(&v4);
}

void sub_1003D1104(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003D1118(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_1003D12D0(id *a1)
{
  id v2 = [[MapsRecordAnIssuePanView alloc] initWithParent:a1[4]];
  id v3 = [objc_alloc((Class)UIPanGestureRecognizer) initWithTarget:v2 action:"mapsRecordAnIssueEndViewPan:"];
  [(MapsRecordAnIssuePanView *)v2 addGestureRecognizer:v3];
  [(MapsRecordAnIssuePanView *)v2 setAlpha:0.0];
  [a1[5] addSubview:v2];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_1003D13F0;
  v5[3] = &unk_1012E5D08;
  id v6 = v2;
  id v4 = v2;
  +[UIView animateWithDuration:v5 animations:0.3];
  [a1[6] stopAnimating];
  [a1[6] removeFromSuperview];
  [a1[4] rebuildSections];
}

id sub_1003D13F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1003D1470(id a1)
{
  uint64_t v1 = objc_alloc_init(RideBookingImageCache);
  id v2 = (void *)qword_10160EAF0;
  qword_10160EAF0 = (uint64_t)v1;
}

void sub_1003D16C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1003D16F0(id a1)
{
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  qword_10160EB00 = v1;
}

void sub_1003D18C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1003D1F94(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dataSource];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  id v4 = *(void **)(a1 + 32);
  if (isKindOfClass)
  {
    id v6 = [v4 dataSource];
    id v5 = [v6 snapshot];
    [v6 applySnapshot:v5 animatingDifferences:1];
  }
  else
  {
    [v4 performBatchUpdates:&stru_1012E82F0 completion:0];
  }
}

id sub_1003D228C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) setParkedCar:a2];
}

void sub_1003D2904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1003D2934(uint64_t a1, void *a2)
{
  id result = [a2 count];
  if (result) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  }
  return result;
}

void sub_1003D35F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_1003D3624(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    CFStringRef v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_1003D36C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v12 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v12)
    {
      if ([v12 code] == (id)-2
        && ([v12 domain],
            uint64_t v6 = objc_claimAutoreleasedReturnValue(),
            GEOErrorDomain(),
            int v7 = objc_claimAutoreleasedReturnValue(),
            unsigned int v8 = [v6 isEqualToString:v7],
            v7,
            v6,
            v8))
      {
        [WeakRetained _searchCanceled];
      }
      else
      {
        [WeakRetained _searchFailedWithError:v12 ticket:*(void *)(a1 + 32) enableStructuredRAPAffordance:[WeakRetained _shouldEnableRAPForNoResultsWithError:v12]];
      }
      [WeakRetained reset];
    }
    else
    {
      id v9 = +[SearchInfo searchInfoWithTicket:*(void *)(a1 + 32) searchType:*(unsigned int *)(a1 + 48)];
      id v10 = [*(id *)(a1 + 32) traits];
      id v11 = [v10 mapRegion];
      [v9 setRequestedMapRegion:v11];

      [WeakRetained _searchReceivedResults:v9];
    }
  }
}

void sub_1003D39DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003D39F4(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    unsigned int v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_1003D3A90(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v11 = v4;
  if (v4)
  {
    if ([v4 code] == (id)-2
      && ([v11 domain],
          uint64_t v5 = objc_claimAutoreleasedReturnValue(),
          GEOErrorDomain(),
          uint64_t v6 = objc_claimAutoreleasedReturnValue(),
          unsigned int v7 = [v5 isEqualToString:v6],
          v6,
          v5,
          v7))
    {
      [*(id *)(a1 + 32) _searchCanceled];
    }
    else
    {
      [*(id *)(a1 + 32) _searchFailedWithError:v11];
    }
    [*(id *)(a1 + 32) reset];
  }
  else
  {
    unsigned int v8 = +[SearchInfo searchInfoWithTicket:*(void *)(a1 + 40) searchType:*(unsigned int *)(a1 + 48)];
    [v8 setSelectedIndex:*(void *)(*(void *)(a1 + 32) + 8)];
    id v9 = [*(id *)(a1 + 40) traits];
    id v10 = [v9 mapRegion];
    [v8 setRequestedMapRegion:v10];

    [*(id *)(a1 + 32) _searchReceivedResults:v8];
  }
}

void sub_1003D3DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void sub_1003D3E24(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  id v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    unsigned int v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    unsigned int v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_1003D3EC0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v9 = sub_100109E50();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v10 = [*(id *)(a1 + 32) searchQuery];
      int v24 = 138412546;
      long long v25 = v10;
      __int16 v26 = 2112;
      id v27 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Search received for Query: %@ with Error: %@", (uint8_t *)&v24, 0x16u);
    }
    id v11 = +[SearchInfo searchInfoWithTicket:*(void *)(a1 + 32) searchType:*(unsigned int *)(a1 + 64)];
    id v12 = [*(id *)(a1 + 32) traits];
    __int16 v13 = [v12 mapRegion];
    [v11 setRequestedMapRegion:v13];

    uint64_t v14 = [*(id *)(a1 + 32) traits];
    [v11 setSearchAlongRoute:[v14 navigating]];

    if ([v7 code] == (id)-2
      && ([v7 domain],
          uint64_t v15 = objc_claimAutoreleasedReturnValue(),
          GEOErrorDomain(),
          uint64_t v16 = objc_claimAutoreleasedReturnValue(),
          unsigned __int8 v17 = [v15 isEqualToString:v16],
          v16,
          v15,
          (v17 & 1) != 0))
    {
      char v18 = 1;
    }
    else
    {
      if (*(unsigned char *)(a1 + 68))
      {
        id v19 = +[SearchHistoryRecorderFactory historyRecorderWithTicket:*(void *)(a1 + 32) ticketError:v7 searchInfo:v11 auxiliaryControlsOrigin:*(void *)(a1 + 56) refinedMapItems:v6 completionTitle:*(void *)(a1 + 40)];
        [v19 recordItemInHistory];
      }
      char v18 = 0;
    }
    if ([v7 code] == (id)-8)
    {
      long long v20 = [v11 publisher];
      if (v20
        || ([v11 placeCollections],
            long long v20 = objc_claimAutoreleasedReturnValue(),
            [v20 count]))
      {

        goto LABEL_20;
      }
      unsigned __int8 v21 = [v11 canRedoSearch];

      if (v21) {
        goto LABEL_20;
      }
    }
    if (v7)
    {
      unsigned int v22 = [*(id *)(a1 + 32) searchResultType];
      unsigned int v23 = v22;
      if (v18)
      {
        [WeakRetained _searchCanceled];
        if (!v23) {
          goto LABEL_21;
        }
      }
      else if (!v22)
      {
        [WeakRetained _searchFailedWithError:v7 ticket:*(void *)(a1 + 32) enableStructuredRAPAffordance:[WeakRetained _shouldEnableRAPForNoResultsWithError:v7]];
        goto LABEL_21;
      }
    }
LABEL_20:
    [WeakRetained _searchReceivedResults:v11];
LABEL_21:
  }
}

id sub_1003D4B2C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _searchForHistoryItem:*(void *)(a1 + 40) completedQuery:0 traits:*(void *)(a1 + 48) source:*(unsigned int *)(a1 + 56) isRedoOrAutoRedoSearch:*(unsigned __int8 *)(a1 + 60)];
}

id sub_1003D4B4C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _searchForHistoryItem:*(void *)(a1 + 40) completedQuery:0 traits:*(void *)(a1 + 48) source:*(unsigned int *)(a1 + 56) isRedoOrAutoRedoSearch:*(unsigned __int8 *)(a1 + 60)];
}

void sub_1003D4DD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_10057696C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = [*(id *)(a1 + 32) handle];
      id v6 = [v5 handle];
      id v7 = [v6 handleIdentifier];
      *(_DWORD *)long long buf = 138412290;
      id v38 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Got fresh location for handle: %@", buf, 0xCu);
    }
    unsigned int v8 = [*(id *)(a1 + 32) handle];
    [v8 setLocation:v3];

    [v3 latLng];
    double v10 = v9;
    [v3 latLng];
    double v12 = v11;
    __int16 v13 = +[MKMapService sharedService];
    uint64_t v14 = [v13 ticketForReverseGeocodeCoordinate:*(void *)(a1 + 56) traits:v10 v12];

    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_1003D518C;
    v28[3] = &unk_1012E84E0;
    int8x16_t v27 = *(int8x16_t *)(a1 + 32);
    id v15 = (id)v27.i64[0];
    int8x16_t v29 = vextq_s8(v27, v27, 8uLL);
    double v32 = v10;
    double v33 = v12;
    id v30 = *(id *)(a1 + 48);
    id v31 = *(id *)(a1 + 56);
    int v34 = *(_DWORD *)(a1 + 64);
    [v14 submitWithHandler:v28 networkActivity:0];

LABEL_5:
    goto LABEL_10;
  }
  uint64_t v16 = [*(id *)(a1 + 32) contact];
  unsigned __int8 v17 = [v16 postalAddresses];
  id v18 = [v17 count];

  id v19 = sub_10057696C();
  long long v20 = v19;
  if (!v18)
  {
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      unsigned int v23 = [*(id *)(a1 + 32) handle];
      int v24 = [v23 handle];
      long long v25 = [v24 handleIdentifier];
      *(_DWORD *)long long buf = 138412290;
      id v38 = v25;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "Failed to get fresh location for handle: %@", buf, 0xCu);
    }
    NSErrorUserInfoKey v35 = NSLocalizedDescriptionKey;
    CFStringRef v36 = @"Unable to get fresh location.";
    uint64_t v14 = +[NSDictionary dictionaryWithObjects:&v36 forKeys:&v35 count:1];
    __int16 v26 = +[NSError errorWithDomain:@"SearchFindMy" code:0 userInfo:v14];
    [*(id *)(a1 + 40) _searchFailedWithError:v26];

    goto LABEL_5;
  }
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    unsigned __int8 v21 = [*(id *)(a1 + 32) contact];
    unsigned int v22 = [v21 identifier];
    *(_DWORD *)long long buf = 138412290;
    id v38 = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Couldn't get fresh location but showing the contact card for: %@", buf, 0xCu);
  }
  [*(id *)(a1 + 40) _searchForContactAddressedForAutocompletePerson:*(void *)(a1 + 32) searchResults:*(void *)(a1 + 48) traits:*(void *)(a1 + 56) source:*(unsigned int *)(a1 + 64)];
LABEL_10:
}

void sub_1003D518C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ![v5 count])
  {
    id v7 = sub_10057696C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v17 = 138412290;
      id v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Fresh location ReverseGeocodeAction resolveMapItem: %@", (uint8_t *)&v17, 0xCu);
    }

    [*(id *)(a1 + 32) _handleGeocoderError:v6];
  }
  else
  {
    unsigned int v8 = [v5 firstObject];
    double v9 = [*(id *)(a1 + 40) title];
    [v8 setName:v9];

    double v10 = [[SearchResult alloc] initWithMapItem:v8];
    double v11 = v10;
    if (v10)
    {
      [(SearchResult *)v10 setLocationType:4];
      -[SearchResult setCoordinate:preserveLocationInfo:](v11, "setCoordinate:preserveLocationInfo:", 1, *(double *)(a1 + 64), *(double *)(a1 + 72));
      [(SearchResult *)v11 setAutocompletePerson:*(void *)(a1 + 40)];
      double v12 = [*(id *)(a1 + 40) updatedContactFrom:v8];
      __int16 v13 = +[AddressBookAddress singleAddressForContact:v12];
      [(SearchResult *)v11 setAddress:v13];

      uint64_t v14 = sub_10057696C();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        id v15 = [v12 identifier];
        int v17 = 138412290;
        id v18 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "SearchResult with shared location created. ContactIdentifier:%@", (uint8_t *)&v17, 0xCu);
      }
      [*(id *)(a1 + 48) addObject:v11];
    }
    else
    {
      double v12 = sub_10057696C();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        uint64_t v16 = [v8 name];
        int v17 = 138412290;
        id v18 = v16;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Failed to create search result for mapItem: %@", (uint8_t *)&v17, 0xCu);
      }
    }

    [*(id *)(a1 + 32) _searchForContactAddressedForAutocompletePerson:*(void *)(a1 + 40) searchResults:*(void *)(a1 + 48) traits:*(void *)(a1 + 56) source:*(unsigned int *)(a1 + 80)];
  }
}

void sub_1003D583C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 208), 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1003D5878(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  id v4 = *(void **)(a1 + 40);
  id v5 = [v3 value];
  id v6 = [v4 stringFromPostalAddress:v5];

  id v7 = sub_10057696C();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    unsigned int v8 = [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) identifier];
    *(_DWORD *)long long buf = 138412546;
    __int16 v28 = v6;
    __int16 v29 = 2112;
    id v30 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Performing rev-geo for address:(%@). ContactIdentifier:%@", buf, 0x16u);
  }
  double v9 = +[NSCharacterSet newlineCharacterSet];
  double v10 = [v6 componentsSeparatedByCharactersInSet:v9];
  id v11 = [v10 componentsJoinedByString:@","];

  double v12 = +[MKMapService sharedService];
  __int16 v13 = [v12 ticketForForwardGeocodeString:v6 traits:*(void *)(a1 + 48)];

  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_1003D5AD0;
  v18[3] = &unk_1012E8530;
  uint64_t v25 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 56);
  id v15 = *(void **)(a1 + 64);
  id v19 = v6;
  uint64_t v20 = v14;
  id v21 = v15;
  id v22 = v3;
  uint64_t v26 = *(void *)(a1 + 96);
  id v23 = *(id *)(a1 + 72);
  id v24 = *(id *)(a1 + 32);
  id v16 = v3;
  id v17 = v6;
  [v13 submitWithHandler:v18 networkActivity:0];
}

void sub_1003D5AD0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6 || ![v5 count])
  {
    id v7 = sub_10057696C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      unsigned int v8 = *(SearchResult **)(a1 + 32);
      int v29 = 138412546;
      id v30 = v8;
      __int16 v31 = 2112;
      *(void *)double v32 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to geocode address %@, error: %@", (uint8_t *)&v29, 0x16u);
    }

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), a3);
    [*(id *)(a1 + 40) _handleGeocoderError:v6];
  }
  else
  {
    double v9 = [v5 firstObject];
    double v10 = [*(id *)(a1 + 48) title];
    [v9 setName:v10];

    id v11 = [[SearchResult alloc] initWithMapItem:v9];
    if (v11)
    {
      double v12 = [*(id *)(a1 + 56) label];
      unsigned __int8 v13 = [v12 isEqual:CNLabelHome];

      if (v13)
      {
        uint64_t v14 = 1;
      }
      else
      {
        id v17 = [*(id *)(a1 + 56) label];
        unsigned __int8 v18 = [v17 isEqual:CNLabelWork];

        if (v18)
        {
          uint64_t v14 = 2;
        }
        else
        {
          id v19 = [*(id *)(a1 + 56) label];
          unsigned int v20 = [v19 isEqual:CNLabelSchool];

          if (v20) {
            uint64_t v14 = 3;
          }
          else {
            uint64_t v14 = 0;
          }
        }
      }
      [(SearchResult *)v11 setLocationType:v14];
      [(SearchResult *)v11 setAutocompletePerson:*(void *)(a1 + 48)];
      id v21 = *(void **)(a1 + 48);
      id v22 = [(SearchResult *)v11 mapItem];
      id v23 = (id)[(SearchResult *)v11 locationType];
      id v24 = [*(id *)(a1 + 56) identifier];
      id v15 = [v21 contactPrioritizingWithAddressFor:v22 kind:v23 cnLabelValueIdentifier:v24 followedBy:*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40)];

      uint64_t v25 = sub_10057696C();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        uint64_t v26 = [v15 identifier];
        uint64_t v27 = *(void *)(a1 + 32);
        int v29 = 138413058;
        id v30 = v11;
        __int16 v31 = 1024;
        *(_DWORD *)double v32 = v14;
        *(_WORD *)&v32[4] = 2112;
        *(void *)&v32[6] = v26;
        __int16 v33 = 2112;
        uint64_t v34 = v27;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "SearchResult:%@ created with type:%u ContactIdentifier:%@ address:%@", (uint8_t *)&v29, 0x26u);
      }
      __int16 v28 = +[AddressBookAddress singleAddressForContact:v15];
      [(SearchResult *)v11 setAddress:v28];

      [*(id *)(a1 + 64) addObject:v11];
    }
    else
    {
      id v15 = sub_10057696C();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        id v16 = [v9 name];
        int v29 = 138412290;
        id v30 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Failed to create search result for mapItem: %@", (uint8_t *)&v29, 0xCu);
      }
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
}

void sub_1003D5E88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    id v3 = [*(id *)(a1 + 32) correctedSearchResultsFrom:*(void *)(a1 + 40)];
    id v4 = v3;
    if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) && ![v3 count])
    {
      id v5 = sub_10057696C();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        uint64_t v27 = v5;
        __int16 v28 = v4;
        int v29 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
        id v30 = [*(id *)(a1 + 48) contact];
        __int16 v31 = [v30 identifier];
        double v32 = [*(id *)(a1 + 48) identifier];
        *(_DWORD *)long long buf = 138412802;
        __int16 v52 = v29;
        id v4 = v28;
        id v5 = v27;
        __int16 v53 = 2112;
        id v54 = v31;
        __int16 v55 = 2112;
        uint64_t v56 = v32;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "There is an error : %@ while searching for contacts. The contact identifier: %@ and handle identifier: %@", buf, 0x20u);
      }
      goto LABEL_41;
    }
    id v5 = objc_alloc_init((Class)NSMutableArray);
    if ((unint64_t)[v4 count] > 4)
    {
      if (*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
      {
        id v16 = [v4 firstObject];

        if (v16)
        {
          id v17 = [v4 firstObject];
          [v5 addObject:v17];
        }
      }
      id v7 = [*(id *)(a1 + 32) orderedSearchResults:v4 itemsToFrame:v5];
      unsigned __int8 v18 = sub_10057696C();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        __int16 v52 = v7;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Framing search results: %@", buf, 0xCu);
      }
      uint64_t v34 = v4;
      NSErrorUserInfoKey v35 = v5;

      id v19 = sub_100099700(v7, &stru_1012E85B8);
      long long v41 = 0u;
      long long v42 = 0u;
      long long v43 = 0u;
      long long v44 = 0u;
      id v20 = [v19 countByEnumeratingWithState:&v41 objects:v49 count:16];
      if (v20)
      {
        id v21 = v20;
        double v10 = 0;
        uint64_t v22 = *(void *)v42;
        do
        {
          for (uint64_t i = 0; i != v21; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v42 != v22) {
              objc_enumerationMutation(v19);
            }
            uint64_t v24 = [*(id *)(*((void *)&v41 + 1) + 8 * i) _displayMapRegion:v34];
            uint64_t v25 = (void *)v24;
            if (v10)
            {
              uint64_t v26 = GEOMapRegionUnion();

              double v10 = (void *)v26;
            }
            else
            {
              double v10 = (void *)v24;
            }
          }
          id v21 = [v19 countByEnumeratingWithState:&v41 objects:v49 count:16];
        }
        while (v21);
      }
      else
      {
        double v10 = 0;
      }

      id v4 = v34;
    }
    else
    {
      id v6 = sub_10057696C();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Framing all search results", buf, 2u);
      }

      id v7 = sub_100099700(v4, &stru_1012E8598);
      long long v45 = 0u;
      long long v46 = 0u;
      long long v47 = 0u;
      long long v48 = 0u;
      id v8 = [v7 countByEnumeratingWithState:&v45 objects:v50 count:16];
      if (!v8)
      {
        double v10 = 0;
LABEL_40:

        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1003D6374;
        block[3] = &unk_1012E85E0;
        id v37 = v4;
        id v38 = *(id *)(a1 + 48);
        id v39 = v10;
        id v40 = WeakRetained;
        id v33 = v10;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

LABEL_41:
        goto LABEL_42;
      }
      id v9 = v8;
      NSErrorUserInfoKey v35 = v5;
      double v10 = 0;
      uint64_t v11 = *(void *)v46;
      do
      {
        for (j = 0; j != v9; j = (char *)j + 1)
        {
          if (*(void *)v46 != v11) {
            objc_enumerationMutation(v7);
          }
          uint64_t v13 = [*(id *)(*((void *)&v45 + 1) + 8 * (void)j) _displayMapRegion];
          uint64_t v14 = (void *)v13;
          if (v10)
          {
            uint64_t v15 = GEOMapRegionUnion();

            double v10 = (void *)v15;
          }
          else
          {
            double v10 = (void *)v13;
          }
        }
        id v9 = [v7 countByEnumeratingWithState:&v45 objects:v50 count:16];
      }
      while (v9);
    }
    id v5 = v35;
    goto LABEL_40;
  }
LABEL_42:
}

id sub_1003D6364(id a1, SearchResult *a2, unint64_t a3)
{
  return [(SearchResult *)a2 mapItem];
}

id sub_1003D636C(id a1, SearchResult *a2, unint64_t a3)
{
  return [(SearchResult *)a2 mapItem];
}

void sub_1003D6374(uint64_t a1)
{
  id v2 = sub_10057696C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "SearchResuls: %@, ACPerson: %@", (uint8_t *)&v6, 0x16u);
  }

  id v5 = +[SearchInfo searchInfoWithResults:*(void *)(a1 + 32) boundingMapRegion:*(void *)(a1 + 48) autocompleterPerson:*(void *)(a1 + 40)];
  [v5 setSelectedIndex:0];
  [*(id *)(a1 + 56) _searchReceivedResults:v5];
}

BOOL sub_1003D65DC(id a1, SearchResult *a2, unint64_t a3, BOOL *a4)
{
  return [(SearchResult *)a2 locationType] == 4;
}

BOOL sub_1003D6600(id a1, SearchResult *a2, unint64_t a3, BOOL *a4)
{
  return [(SearchResult *)a2 locationType] == 1;
}

BOOL sub_1003D6624(id a1, SearchResult *a2, unint64_t a3, BOOL *a4)
{
  return [(SearchResult *)a2 locationType] == 2;
}

BOOL sub_1003D6648(id a1, SearchResult *a2, unint64_t a3, BOOL *a4)
{
  return [(SearchResult *)a2 locationType] == 3;
}

BOOL sub_1003D666C(id a1, SearchResult *a2, unint64_t a3, BOOL *a4)
{
  return [(SearchResult *)a2 locationType] == 0;
}

void sub_1003D6A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1003D6ABC(uint64_t a1, void *a2)
{
  return [a2 locationType] == *(_DWORD *)(a1 + 32);
}

void sub_1003D6AF0(uint64_t a1, void *a2)
{
  id v11 = a2;
  uint64_t v4 = [v11 mapItem];
  id v5 = [v4 _geoMapItem];
  [v5 coordinate];
  int v6 = [*(id *)(a1 + 32) mapItem];
  uint64_t v7 = [v6 _geoMapItem];
  [v7 coordinate];
  GEOCalculateDistance();
  double v9 = v8;

  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  if (v9 < *(double *)(v10 + 24))
  {
    *(double *)(v10 + 24) = v9;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  }
}

void sub_1003D77B0(uint64_t a1, void *a2, void *a3)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1003D7878;
  block[3] = &unk_1012E66E0;
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = *(void *)(a1 + 32);
  id v5 = v9;
  id v6 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1003D7878(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    BOOL v2 = *(void *)(a1 + 40) == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (v2)
  {
    uint64_t v4 = [[SearchResult alloc] initWithMapItem:*(void *)(a1 + 32)];
    uint64_t v7 = v4;
    id v5 = +[NSArray arrayWithObjects:&v7 count:1];
    id v6 = +[SearchInfo searchInfoWithResults:v5];

    [*(id *)(a1 + 48) _searchReceivedResults:v6];
  }
  else
  {
    uint64_t v3 = *(void **)(a1 + 48);
    [v3 _searchFailedWithError:];
  }
}

void sub_1003D7D80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1003D7DB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v22 = a4;
  if (v22)
  {
    id v5 = NSStringFromSelector(*(SEL *)(a1 + 64));
    sub_1003D7F18((uint64_t)v22, v6, v7, v8, v9, v10, v11, v12, (uint64_t)v5);

    [*(id *)(a1 + 32) _handleGeocoderError:v22];
  }
  else
  {
    unsigned int v13 = [*(id *)(a1 + 40) isValid];
    uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (v13)
    {
      uint64_t v15 = +[SearchInfo searchInfoWithTicket:v14 addressBookAddress:*(void *)(a1 + 40) searchType:*(unsigned int *)(a1 + 72)];
    }
    else
    {
      uint64_t v15 = +[SearchInfo searchInfoWithTicket:v14 searchType:*(unsigned int *)(a1 + 72)];
      if ([*(id *)(a1 + 48) length])
      {
        id v16 = [v15 results];
        id v17 = [v16 count];

        if (v17 == (id)1)
        {
          unsigned __int8 v18 = [v15 results];
          id v19 = [v18 firstObject];

          uint64_t v20 = *(void *)(a1 + 48);
          id v21 = [v19 mapItem];
          [v21 setName:v20];
        }
      }
    }
    [*(id *)(a1 + 32) _searchReceivedResults:v15];
  }
}

void sub_1003D7F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (CFPreferencesGetAppBooleanValue(@"LogSearch", @"com.apple.Maps", 0)
    || CFPreferencesGetAppBooleanValue(@"ComprehensiveLogging", @"com.apple.Maps", 0))
  {
    id v9 = [objc_alloc((Class)NSString) initWithFormat:@"[SearchManager %@] Failed to geocode \"%@\" (%@)" arguments:&a9];
    NSLog(@"%@", v9);
  }
}

void sub_1003D7FB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = NSStringFromSelector(*(SEL *)(a1 + 56));
    sub_1003D7F18((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, (uint64_t)v7);

    [*(id *)(a1 + 32) _handleGeocoderError:v6];
  }
  else if (v5)
  {
    uint64_t v15 = [[SearchResult alloc] initWithMapItem:v5 searchResultType:*(unsigned int *)(a1 + 64) addressBookAddress:*(void *)(a1 + 40) retainedSearchMetadata:0 resultIndex:0];
    unsigned __int8 v18 = v15;
    id v16 = +[NSArray arrayWithObjects:&v18 count:1];
    id v17 = +[SearchInfo searchInfoWithResults:v16];

    [*(id *)(a1 + 32) _searchReceivedResults:v17];
  }
}

void sub_1003D80F0(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    uint64_t v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    uint64_t v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_1003D84F0(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) delegate];
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL v2 = *(void **)(a1 + 40);
  uint64_t v4 = [v2 searchSessionData];
  [v5 searchManager:v3 didReceiveSearchInfo:v2 searchSessionData:v4 error:0];
}

void sub_1003D8970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1003D899C(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  id v3 = a2;
  uint64_t v4 = +[MKMapService sharedService];
  [v4 _maps_ticketForSearchHistoryEntry:v3 source:*(unsigned int *)(a1 + 56) traits:*(void *)(a1 + 32) isRedoOrAutoRedoSearch:*(unsigned __int8 *)(a1 + 60)];
  id v5 = (id)objc_claimAutoreleasedReturnValue();

  [*(id *)(a1 + 40) _submitSearchTicket:v5 defaultSearchResultType:0 saveToHistory:0 origin:((*(_DWORD *)(a1 + 56) - 6) & 0xFFFFFFF9) == 0];
}

void sub_1003D8A5C(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  id v3 = [a2 geoMapItem];
  uint64_t v4 = +[MKMapItem _itemWithGeoMapItem:v3];

  if ([v4 _hasMUID])
  {
    id v5 = [*(id *)(a1 + 32) delegate];
    uint64_t v6 = *(void **)(a1 + 32);
    uint64_t v7 = [v6 searchFieldItem];
    [v5 searchManager:v6 willProcessSearchFieldItem:v7];

    uint64_t v8 = +[MKMapService sharedService];
    uint64_t v9 = [v4 _identifier];
    uint64_t v15 = v9;
    uint64_t v10 = +[NSArray arrayWithObjects:&v15 count:1];
    [v8 ticketForIdentifiers:v10 resultProviderID:[v4 _resultProviderID] contentProvider:0 traits:*(void *)(a1 + 40)];
    uint64_t v11 = (SearchResult *)objc_claimAutoreleasedReturnValue();

    [*(id *)(a1 + 32) _submitTicket:v11 defaultSearchResultType:0 origin:((*(_DWORD *)(a1 + 64) - 6) & 0xFFFFFFF9) == 0];
  }
  else
  {
    uint64_t v11 = [[SearchResult alloc] initWithMapItem:v4];
    uint64_t v12 = *(void **)(a1 + 32);
    uint64_t v14 = v11;
    uint64_t v13 = +[NSArray arrayWithObjects:&v14 count:1];
    [v12 _searchForSearchResults:v13 completedQuery:*(void *)(a1 + 48)];
  }
}

void sub_1003D8F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1003D8F60(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    uint64_t v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    uint64_t v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_1003D8FFC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    uint64_t v22 = *(void *)(a1 + 32);
    uint64_t v10 = +[NSArray arrayWithObjects:&v22 count:1];
    uint64_t v11 = +[SearchInfo searchInfoWithResults:v10];
  }
  else
  {
    uint64_t v11 = +[SearchInfo searchInfoWithTicket:addressBookAddress:searchType:forRefinementSearchForBookmark:](SearchInfo, "searchInfoWithTicket:addressBookAddress:searchType:forRefinementSearchForBookmark:", *(void *)(a1 + 40), 0, [*(id *)(a1 + 32) type], *(void *)(a1 + 32));
  }
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = [v11 results];
  id v13 = [v12 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v17 + 1) + 8 * i) markAsOriginatingFromBookmarks];
      }
      id v14 = [v12 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v14);
  }

  [*(id *)(a1 + 48) _searchReceivedResults:v11];
}

BOOL sub_1003D9D88(id a1, PersonalizedAutocompleteItem *a2)
{
  BOOL v2 = a2;
  uint64_t v3 = [(PersonalizedAutocompleteItem *)v2 autocompleteObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    uint64_t v5 = [(PersonalizedAutocompleteItem *)v2 autocompleteObject];
    uint64_t v6 = [v5 directionIntent];
    BOOL v7 = v6 != 0;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

BOOL sub_1003D9E1C(id a1, PersonalizedAutocompleteItem *a2)
{
  BOOL v2 = a2;
  uint64_t v3 = [(PersonalizedAutocompleteItem *)v2 autocompleteObject];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    uint64_t v5 = [(PersonalizedAutocompleteItem *)v2 autocompleteObject];
    uint64_t v6 = [v5 clientResolved];
    BOOL v7 = v6 != 0;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_1003D9F54(uint64_t a1)
{
  BOOL v2 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:100 sourceType:1];
  uint64_t v3 = +[PersonalizedItemPriorityFunctionEntry entryWithPriority:sourceType:](PersonalizedItemPriorityFunctionEntry, "entryWithPriority:sourceType:", 1, 7, v2);
  v8[1] = v3;
  uint64_t v4 = +[PersonalizedItemPriorityFunctionEntry defaultEntryWithPriority:10];
  long long v8[2] = v4;
  uint64_t v5 = +[NSArray arrayWithObjects:v8 count:3];

  id v6 = [objc_alloc(*(Class *)(a1 + 32)) initWithEntries:v5];
  BOOL v7 = (void *)qword_10160EB30;
  qword_10160EB30 = (uint64_t)v6;
}

DirectionsWaypoint *__cdecl sub_1003DA100(id a1, GEOComposedWaypoint *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = objc_alloc_init(DirectionsWaypoint);
  [(DirectionsWaypoint *)v4 updateFromGEOComposedWaypoint:v3];

  return v4;
}

CFStringRef sub_1003DA3CC(unint64_t a1)
{
  if (a1 > 2) {
    return @".Unknown";
  }
  else {
    return *(&off_1012E8950 + a1);
  }
}

void sub_1003DBDD0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

id sub_1003DBE14(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 33) = 0;
  if ([*(id *)(a1 + 32) cardState] == (id)2 || objc_msgSend(*(id *)(a1 + 32), "cardState") == (id)3) {
    +[PPTNotificationCenter postNotificationIfNeededWithName:@"MapsTestingMapsRegionUpdatedWithGuidanceStep" object:*(void *)(a1 + 32) userInfo:0];
  }
  id result = +[PPTNotificationCenter postNotificationIfNeededWithName:@"MapsPPTGuidanceDidUpdateNotifcation" object:*(void *)(a1 + 32) userInfo:0];
  uint64_t v3 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v3 + 34))
  {
    *(unsigned char *)(v3 + 34) = 0;
    uint64_t v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(unsigned __int8 *)(a1 + 40);
    return [v4 _scheduleReloadAnimated:v5];
  }
  return result;
}

void sub_1003DC558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003DC574(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v3 = [WeakRetained fullGuidanceSign];
    [v3 showJunctionViewAnimated:*(unsigned __int8 *)(a1 + 40)];

    id WeakRetained = v4;
  }
}

id sub_1003E03F4(id a1, CarFocusableButton *a2, unint64_t a3)
{
  uint64_t v3 = [(CarFocusableButton *)a2 heightAnchor];
  LODWORD(v4) = 1144750080;
  uint64_t v5 = [v3 constraintEqualToConstant:44.0 priority:v4];

  return v5;
}

BOOL sub_1003E083C(id a1, GEOComposedWaypoint *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOComposedWaypoint *)a2 isServerProvidedWaypoint] ^ 1;
}

BOOL sub_1003E2348(id a1, GEOComposedWaypoint *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOComposedWaypoint *)a2 isServerProvidedWaypoint] ^ 1;
}

BOOL sub_1003E2720(id a1, GEOComposedWaypoint *a2, unint64_t a3, BOOL *a4)
{
  return [(GEOComposedWaypoint *)a2 isServerProvidedWaypoint] ^ 1;
}

void sub_1003E2B88(id *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v17 = a2;
  BOOL v7 = [v17 etaInfo];
  id v8 = a1[4];
  uint64_t v9 = v7;
  unint64_t v10 = (unint64_t)v8;
  if (v9 | v10)
  {
    uint64_t v11 = (void *)v10;
    unsigned __int8 v12 = [(id)v9 isEqual:v10];

    if ((v12 & 1) == 0)
    {
      id v13 = [v17 waypoint];
      id v14 = [v13 uniqueID];
      uint64_t v15 = [a1[4] waypointID];
      unsigned int v16 = [v14 isEqual:v15];

      if (!v16) {
        goto LABEL_9;
      }
      [v17 setEtaInfo:a1[4]];
      uint64_t v9 = +[NSIndexPath indexPathForRow:a3 inSection:1];
      if ([a1[5] containsObject:v9]) {
        [a1[6] addObject:v9];
      }
      *a4 = 1;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }

LABEL_9:
}

id sub_1003E3200()
{
  if (qword_10160EB48 != -1) {
    dispatch_once(&qword_10160EB48, &stru_1012E8A58);
  }
  uint64_t v0 = (void *)qword_10160EB40;

  return v0;
}

void sub_1003E3C84(uint64_t a1)
{
  BOOL v2 = sub_1003E3200();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Swapping video", v11, 2u);
  }

  id v3 = objc_alloc((Class)NSDataAsset);
  double v4 = [*(id *)(a1 + 32) videoNameForCurrentState];
  id v5 = [v3 initWithName:v4];

  id v6 = [v5 data];
  v12[0] = AVAssetPreferPreciseDurationAndTimingKey;
  v12[1] = AVAssetReferenceRestrictionsKey;
  v13[0] = &__kCFBooleanFalse;
  v13[1] = &off_1013A6E38;
  BOOL v7 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:2];
  id v8 = +[AVAsset assetWithData:v6 contentType:AVFileTypeQuickTimeMovie options:v7];

  uint64_t v9 = +[AVPlayerItem playerItemWithAsset:v8];
  unint64_t v10 = [*(id *)(a1 + 32) playerView];
  [v10 replaceCurrentItemWithPlayerItem:v9 preserveCurrentTimestamp:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1003E3F1C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningAnimationView");
  BOOL v2 = (void *)qword_10160EB40;
  qword_10160EB40 = (uint64_t)v1;
}

uint64_t sub_1003E3F60()
{
  if (qword_10160EB58 != -1) {
    dispatch_once(&qword_10160EB58, &stru_1012E8AA8);
  }
  return byte_10160EB50;
}

void sub_1003E3FA4(id a1)
{
  byte_10160EB50 = MGGetSInt32Answer() == 2;
}

void sub_1003E4050(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 integerForKey:@"__internal__keyColorOverride"];

  switch((unint64_t)v2)
  {
    case 1uLL:
      uint64_t v3 = +[UIColor systemDarkRedColor];
      break;
    case 2uLL:
      uint64_t v3 = +[UIColor systemDarkGreenColor];
      break;
    case 4uLL:
      uint64_t v3 = +[UIColor systemDarkOrangeColor];
      break;
    case 5uLL:
      uint64_t v3 = +[UIColor systemDarkYellowColor];
      break;
    case 6uLL:
      uint64_t v3 = +[UIColor systemDarkTealColor];
      break;
    case 7uLL:
      uint64_t v3 = +[UIColor systemDarkPinkColor];
      break;
    case 8uLL:
      uint64_t v3 = +[UIColor darkGrayColor];
      break;
    default:
      uint64_t v3 = +[UIColor systemDarkBlueColor];
      break;
  }
  double v4 = (void *)qword_10160EB70;
  qword_10160EB70 = v3;
}

uint64_t sub_1003E564C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) && +[UIView areAnimationsEnabled])
  {
    id v2 = +[NSNotificationCenter defaultCenter];
    [v2 postNotificationName:@"BacklightLuminanceDidChangeNotification" object:*(void *)(a1 + 40)];
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v3();
}

void sub_1003E76F8(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = [*(id *)(a1 + 32) removals];
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        BOOL v7 = [*(id *)(*((void *)&v8 + 1) + 8 * (void)v6) object];
        [*(id *)(a1 + 40) sendSubviewToBack:v7];
        [v7 setAlpha:0.0];
        [v7 setHidden:1];

        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_1003E7824(uint64_t a1)
{
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v2 = [*(id *)(a1 + 32) removals];
  id v3 = [v2 countByEnumeratingWithState:&v19 objects:v24 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v20;
    do
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v5) {
          objc_enumerationMutation(v2);
        }
        BOOL v7 = [*(id *)(*((void *)&v19 + 1) + 8 * i) object];
        [*(id *)(a1 + 40) _maps_removeArrangedSubview:v7];
        [v7 setHidden:0];
        [v7 setAlpha:1.0];
      }
      id v4 = [v2 countByEnumeratingWithState:&v19 objects:v24 count:16];
    }
    while (v4);
  }

  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v8 = [*(id *)(a1 + 32) insertions];
  id v9 = [v8 countByEnumeratingWithState:&v15 objects:v23 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v16;
    do
    {
      for (j = 0; j != v10; j = (char *)j + 1)
      {
        if (*(void *)v16 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v15 + 1) + 8 * (void)j);
        id v14 = [v13 object];
        [v14 setHidden:1];
        [v14 setAlpha:0.0];
        [*(id *)(a1 + 40) insertArrangedSubview:v14 atIndex:[v13 index]];
      }
      id v10 = [v8 countByEnumeratingWithState:&v15 objects:v23 count:16];
    }
    while (v10);
  }
}

void sub_1003E7A28(uint64_t a1)
{
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  os_log_t v1 = [*(id *)(a1 + 32) insertions];
  id v2 = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v8;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v1);
        }
        id v6 = [*(id *)(*((void *)&v7 + 1) + 8 * (void)v5) object];
        [v6 setHidden:0];
        [v6 setAlpha:1.0];

        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v3);
  }
}

id sub_1003E7B38(uint64_t a1)
{
  return [*(id *)(a1 + 32) runWithCurrentOptions];
}

id sub_1003E7E2C(void *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v11 = a1;
  id v12 = objc_alloc_init((Class)NSMutableDictionary);
  id v30 = (double *)&a10;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  uint64_t v25 = v11;
  id v13 = [v11 componentsSeparatedByString:@","];
  id v14 = [v13 countByEnumeratingWithState:&v26 objects:v31 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v27;
    char v17 = 1;
    do
    {
      for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v16) {
          objc_enumerationMutation(v13);
        }
        long long v19 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        long long v20 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
        long long v21 = [v19 stringByTrimmingCharactersInSet:v20];

        if ((v17 & 1) == 0)
        {
          long long v22 = v30++;
          a2 = *v22;
        }
        id v23 = +[NSNumber numberWithDouble:a2];
        [v12 setObject:v23 forKeyedSubscript:v21];

        char v17 = 0;
      }
      id v15 = [v13 countByEnumeratingWithState:&v26 objects:v31 count:16];
      char v17 = 0;
    }
    while (v15);
  }

  return v12;
}

id sub_1003E8104()
{
  uint64_t v0 = +[UIApplication sharedApplication];
  os_log_t v1 = [v0 delegate];
  id v2 = [v1 window];
  id v3 = [v2 rootViewController];

  return v3;
}

NSNumber *__cdecl sub_1003E81D4(id a1, NSNumber *a2, unint64_t a3)
{
  id v3 = a2;
  [(NSNumber *)v3 cgFloatValue];
  if (vabdd_f64(v4, UISheetPresentationControllerDetentInactive) <= 2.22044605e-16) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = v3;
  }

  return v5;
}

void sub_1003E8324(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_1003E8340(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  double v4 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if ((v2 & 4) != 0)
    {
      [v4 setBackgroundColorMode:1];
      [v4 setCornerRadius:5.0];
      [v4 setBackgroundInsets:0.0, 10.0, 0.0, 10.0];
    }
    else
    {
      [v4 setBackgroundColorMode:0];
      id v6 = +[UIColor clearColor];
      [v4 setBackgroundColor:v6];
    }
  }

  return v4;
}

void sub_1003E84B4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_1003E84D0(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  double v4 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if ((v2 & 4) != 0)
    {
      [v4 setBackgroundColorMode:1];
      [v4 setCornerRadius:5.0];
      [v4 setBackgroundInsets:0.0, 10.0, 0.0, 10.0];
    }
    else
    {
      [v4 setBackgroundColorMode:0];
      id v6 = +[UIColor clearColor];
      [v4 setBackgroundColor:v6];
    }
  }

  return v4;
}

id sub_1003E8640(uint64_t a1)
{
  return [*(id *)(a1 + 32) setRemembersLastFocusedIndexPath:*(unsigned __int8 *)(a1 + 40)];
}

int64_t sub_1003E8BC4(id a1, PedestrianARSessionMonitor *a2, PedestrianARSessionMonitor *a3)
{
  id v3 = a3;
  double v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  id v6 = (objc_class *)objc_opt_class();

  long long v7 = NSStringFromClass(v6);
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

NSString *__cdecl sub_1003E8C44(id a1, PedestrianARSessionMonitor *a2, unint64_t a3)
{
  id v3 = a2;
  unsigned int v4 = [(PedestrianARSessionMonitor *)v3 shouldShowPedestrianAR];
  uint64_t v5 = @"NO";
  if (v4) {
    uint64_t v5 = @"YES";
  }
  id v6 = v5;
  long long v7 = [(PedestrianARSessionMonitor *)v3 debugDescription];

  id v8 = +[NSString stringWithFormat:@"allowing AR: %@ %@\n", v6, v7];

  return (NSString *)v8;
}

UIColor *__cdecl sub_1003E9D28(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

void sub_1003EA2C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1003EA2E4(uint64_t a1, void *a2)
{
  id v14 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v13 = WeakRetained;
    unsigned int v4 = (void *)WeakRetained[11];
    if (v4)
    {
      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      id v5 = v4;
      id v6 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
      if (v6)
      {
        uint64_t v7 = *(void *)v20;
        do
        {
          for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v20 != v7) {
              objc_enumerationMutation(v5);
            }
            uint64_t v9 = *(void *)(*((void *)&v19 + 1) + 8 * i);
            v17[0] = _NSConcreteStackBlock;
            v17[1] = 3221225472;
            v17[2] = sub_1003EA54C;
            void v17[3] = &unk_1012E6690;
            objc_copyWeak(&v18, (id *)(a1 + 32));
            v17[4] = v9;
            id v10 = [v14 addNavigationRowWithTitle:v9 action:v17];
            objc_destroyWeak(&v18);
          }
          id v6 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
        }
        while (v6);
      }
    }
    else
    {
      id v11 = [v14 addIndeterminateProgressIndicator];
      id v12 = +[GEOPlaceCardRequester sharedRequester];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_1003EA658;
      _OWORD v15[3] = &unk_1012E8CA8;
      objc_copyWeak(&v16, (id *)(a1 + 32));
      [v12 fetchAllCacheEntriesWithRequesterHandler:v15];

      objc_destroyWeak(&v16);
    }
    id WeakRetained = v13;
  }
}

void sub_1003EA52C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003EA54C(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v11 = WeakRetained;
    unsigned int v4 = [WeakRetained[11] objectForKey:*(void *)(a1 + 32)];
    id v5 = +[GEOMapItemStorage mapItemStorageForSerializedPlaceData:v4];
    id v6 = objc_alloc((Class)MUPlaceViewController);
    id v7 = [objc_alloc((Class)MKMapItem) initWithGeoMapItem:v5 isPlaceHolderPlace:0];
    id v8 = [v6 initWithMapItem:v7];

    id v9 = objc_loadWeakRetained(v2);
    id v10 = [v9 navigationController];
    [v10 pushViewController:v8 animated:1];

    id WeakRetained = v11;
  }
}

void sub_1003EA658(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_1003EA714;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1003EA714(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32)) {
      id v3 = *(void **)(a1 + 32);
    }
    else {
      id v3 = &__NSDictionary0__struct;
    }
    id v4 = WeakRetained;
    objc_storeStrong(WeakRetained + 11, v3);
    [v4 rebuildSections];
    id WeakRetained = v4;
  }
}

id sub_1003EB134()
{
  if (qword_10160EBA0 != -1) {
    dispatch_once(&qword_10160EBA0, &stru_1012E8CF0);
  }
  uint64_t v0 = (void *)qword_10160EB98;

  return v0;
}

void sub_1003ED0EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,id a52)
{
}

void sub_1003ED154(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = sub_1003EB134();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v5 = 134349056;
      id v6 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Displaying more info from URL", (uint8_t *)&v5, 0xCu);
    }

    id v3 = [WeakRetained delegate];
    id v4 = GEOVisualLocalizationCrowdsourcingLearnMoreURL();
    [v3 viewController:WeakRetained openURL:v4];
  }
}

void sub_1003ED244(uint64_t a1, void *a2)
{
  id v3 = a2;
  GEOConfigSetBOOL();
  +[GEOAPPortal captureUserAction:76 target:75 value:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v5 = sub_1003EB134();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v9 = 134349056;
      id v10 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] User accepted VL crowdsourcing", (uint8_t *)&v9, 0xCu);
    }

    id v6 = [v3 sender];
    [WeakRetained handleDismissAction:v6];

    id v7 = [WeakRetained completion];

    if (v7)
    {
      id v8 = [WeakRetained completion];
      v8[2](v8, 1);
    }
  }
}

void sub_1003ED398(uint64_t a1, void *a2)
{
  id v3 = a2;
  GEOConfigSetBOOL();
  +[GEOAPPortal captureUserAction:77 target:75 value:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v5 = sub_1003EB134();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v9 = 134349056;
      id v10 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] User declined VL crowdsourcing", (uint8_t *)&v9, 0xCu);
    }

    id v6 = [v3 sender];
    [WeakRetained handleDismissAction:v6];

    id v7 = [WeakRetained completion];

    if (v7)
    {
      id v8 = [WeakRetained completion];
      v8[2](v8, 0);
    }
  }
}

void sub_1003EE104(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFCrowdsourcingPermissionContaineeViewController");
  uint64_t v2 = (void *)qword_10160EB98;
  qword_10160EB98 = (uint64_t)v1;
}

id sub_1003EE33C()
{
  if (qword_10160EBB0 != -1) {
    dispatch_once(&qword_10160EBB0, &stru_1012E8E28);
  }
  uint64_t v0 = (void *)qword_10160EBA8;

  return v0;
}

uint64_t sub_1003EE5D0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1003EF790(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

uint64_t sub_1003EF82C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1003EF840(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

void sub_1003EF890(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if ([v5 cancels]) {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = [v5 title];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_1003EF9C0;
  v10[3] = &unk_1012E8D18;
  id v12 = *(id *)(a1 + 40);
  uint64_t v13 = a3;
  id v8 = v5;
  id v11 = v8;
  int v9 = +[UIAlertAction actionWithTitle:v7 style:v6 handler:v10];

  [*(id *)(a1 + 32) addAction:v9];
  if (*(unsigned char *)(a1 + 49) && ([v8 cancels] & 1) == 0) {
    [*(id *)(a1 + 32) setPreferredAction:v9];
  }
}

id sub_1003EF9C0(void *a1)
{
  uint64_t v2 = a1[5];
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, a1[6]);
  }
  id v3 = (void *)a1[4];

  return [v3 fire];
}

uint64_t sub_1003EFA0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) count];
  id v3 = *(uint64_t (**)(uint64_t, id))(v1 + 16);

  return v3(v1, v2);
}

void sub_1003EFA50(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1003EFADC;
  v2[3] = &unk_1012E6EA8;
  uint64_t v1 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  [v1 dismissViewControllerAnimated:1 completion:v2];
}

uint64_t sub_1003EFADC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1003EFAF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = (void *)WeakRetained[2];
    WeakRetained[2] = 0;
    id v3 = WeakRetained;

    id WeakRetained = v3;
  }
}

uint64_t sub_1003EFB40(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"LocationAuthorizationDismissedNotification" object:0];

  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_1003EFBBC(uint64_t a1)
{
  id WeakRetained = (CFTypeRef *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = (void *)WeakRetained[1];
    WeakRetained[1] = 0;
    id v5 = WeakRetained;

    CFTypeRef v3 = CFRetain(v5[2]);
    CFAutorelease(v3);
    id v4 = (void *)v5[2];
    uint64_t v5[2] = 0;

    id WeakRetained = v5;
  }
}

void sub_1003EFC2C(uint64_t a1)
{
  [*(id *)(a1 + 32) _mapkit_locationErrorSettingsURL];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = +[UIApplication sharedApplication];
  [v2 _maps_openURL:v3];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

uint64_t sub_1003EFCC4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

uint64_t sub_1003EFD14(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

id sub_1003EFD78(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

  return +[UIView setAnimationsEnabled:1];
}

uint64_t sub_1003EFDBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1003EFDD0(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

void sub_1003EFE24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
  [WeakRetained _maps_topMostPresentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

uint64_t sub_1003EFE80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1003EFE94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1003EFEA8(uint64_t a1)
{
  [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

void sub_1003EFEFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
  [WeakRetained _maps_topMostPresentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

uint64_t sub_1003F0084(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 24) = 0;
  *(unsigned char *)(*(void *)(result + 32) + 25) = 0;
  *(_DWORD *)(*(void *)(result + 32) + 28) = 0;
  return result;
}

void sub_1003F02B0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "InterruptionManager");
  id v2 = (void *)qword_10160EBA8;
  qword_10160EBA8 = (uint64_t)v1;
}

void sub_1003F0C14(id a1, RAPSearchWhichOneQuestion *a2, RAPSearchResultCategoryQuestion *a3)
{
  id v4 = a3;
  id v5 = a2;
  [(RAPSearchResultCategoryQuestion *)v4 resetCachedMenuItems];
  uint64_t v6 = [(RAPSearchWhichOneQuestion *)v5 selectedValue];

  selectedValue = v4->_selectedValue;
  v4->_selectedValue = (RAPUserSearch *)v6;
}

void sub_1003F1804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1003F182C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    os_log_t v1 = +[NSError GEOErrorWithCode:0 reason:@"User cancelled the action"];
    id v2 = [WeakRetained[10] resultBlock];

    if (v2)
    {
      id v3 = [WeakRetained[10] resultBlock];
      ((void (**)(void, void *))v3)[2](v3, v1);
    }
    id v4 = objc_loadWeakRetained(WeakRetained + 9);
    [v4 collectionPickerClosed:WeakRetained];

    [WeakRetained cleanControllers];
  }
}

void sub_1003F1B60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) handlerType];
  uint64_t v3 = *(void *)(a1 + 40);
  if (v2 == (id)1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v3 + 72));
    [WeakRetained collectionPickerNewCollection:*(void *)(a1 + 40)];
  }
  else
  {
    [*(id *)(v3 + 80) applyToCollection:*(void *)(a1 + 32) completion:0];
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 72));
    [WeakRetained collectionPickerClosed:*(void *)(a1 + 40)];
  }
}

uint64_t sub_1003F1BF0(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setName:a2];
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

id sub_1003F1C38(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:1 completion:0];
}

id sub_1003F1D18(uint64_t a1)
{
  return [*(id *)(a1 + 32) _collectionPickerDismissedAfterSelectingCollection:*(void *)(a1 + 40) parentVC:*(void *)(a1 + 48)];
}

id sub_1003F1EBC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _collectionPickerDismissedAfterSelectingCollection:*(void *)(a1 + 40) parentVC:*(void *)(a1 + 48)];
}

BOOL sub_1003F4168(id a1, id a2, NSDictionary *a3)
{
  uint64_t v3 = [a2 category];

  return v3 == 0;
}

void sub_1003F45A4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) autocompleteChangeCounter] == *(_DWORD *)(a1 + 56))
  {
    id v2 = *(id *)(a1 + 40);
    id v3 = *(id *)(a1 + 48);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1003F4684;
    v7[3] = &unk_1012E77D8;
    uint64_t v4 = *(void *)(a1 + 32);
    int v10 = *(_DWORD *)(a1 + 56);
    void v7[4] = v4;
    id v8 = v2;
    id v9 = v3;
    id v5 = v3;
    id v6 = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
  }
}

id sub_1003F4684(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) autocompleteChangeCounter];
  if (result == *(_DWORD *)(a1 + 56))
  {
    [*(id *)(a1 + 32) processPersonalizedItemsDebug:*(void *)(a1 + 40)];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 112), *(id *)(a1 + 48));
    id v3 = sub_100109E50();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "SearchDataProvider - did process new AC list", v4, 2u);
    }

    return [*(id *)(a1 + 32) _dataChanged];
  }
  return result;
}

UIColor *__cdecl sub_1003F50D4(id a1, UITraitCollection *a2)
{
  UIUserInterfaceStyle v2 = [(UITraitCollection *)a2 userInterfaceStyle];
  double v3 = 0.0;
  if (v2 == UIUserInterfaceStyleDark) {
    double v3 = 1.0;
  }
  uint64_t v4 = +[UIColor colorWithWhite:v3 alpha:0.550000012];

  return (UIColor *)v4;
}

id sub_1003F5C4C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:0.0];
  UIUserInterfaceStyle v2 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v2 setAlpha:0.0];
}

void *sub_1003F5CD0(void *result)
{
  uint64_t v1 = result[4];
  if (!*(void *)(v1 + 80))
  {
    UIUserInterfaceStyle v2 = result;
    [*(id *)(v1 + 16) removeFromSuperview];
    [*(id *)(v2[4] + 48) removeFromSuperview];
    [*(id *)(v2[4] + 40) removeFromSuperview];
    double v3 = *(void **)(v2[4] + 32);
    return [v3 removeFromSuperview];
  }
  return result;
}

void sub_1003F5D60(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) addSubview:*(void *)(*(void *)(a1 + 32) + 16)];
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
  id v16 = [*(id *)(*(void *)(a1 + 32) + 16) centerXAnchor];
  id v15 = [*(id *)(*(void *)(a1 + 32) + 8) centerXAnchor];
  id v14 = [v16 constraintEqualToAnchor:v15];
  v18[0] = v14;
  UIUserInterfaceStyle v2 = [*(id *)(*(void *)(a1 + 32) + 16) centerYAnchor];
  double v3 = [*(id *)(*(void *)(a1 + 32) + 8) centerYAnchor];
  uint64_t v4 = [v2 constraintEqualToAnchor:v3];
  v18[1] = v4;
  id v5 = [*(id *)(*(void *)(a1 + 32) + 16) heightAnchor];
  id v6 = [*(id *)(*(void *)(a1 + 32) + 8) heightAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];
  v18[2] = v7;
  id v8 = +[NSArray arrayWithObjects:v18 count:3];
  +[NSLayoutConstraint activateConstraints:v8];

  uint64_t v9 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v9 + 64))
  {
    int v10 = [*(id *)(v9 + 16) widthAnchor];
    id v11 = [*(id *)(*(void *)(a1 + 32) + 8) widthAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];
    char v17 = v12;
    uint64_t v13 = +[NSArray arrayWithObjects:&v17 count:1];
    +[NSLayoutConstraint activateConstraints:v13];
  }
}

id sub_1003F5FC4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:0.0];
  UIUserInterfaceStyle v2 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v2 setAlpha:0.0];
}

void *sub_1003F6048(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 80) == 1)
  {
    UIUserInterfaceStyle v2 = result;
    [*(id *)(v1 + 48) removeFromSuperview];
    [*(id *)(v2[4] + 40) removeFromSuperview];
    double v3 = *(void **)(v2[4] + 32);
    return [v3 removeFromSuperview];
  }
  return result;
}

void sub_1003F60CC(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) addSubview:*(void *)(*(void *)(a1 + 32) + 48)];
  [*(id *)(*(void *)(a1 + 32) + 8) addSubview:*(void *)(*(void *)(a1 + 32) + 40)];
  [*(id *)(*(void *)(a1 + 32) + 48) startAnimating];
  [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:0.0];
  id v16 = [*(id *)(*(void *)(a1 + 32) + 40) centerYAnchor];
  id v15 = [*(id *)(*(void *)(a1 + 32) + 8) centerYAnchor];
  id v14 = [v16 constraintEqualToAnchor:v15];
  v18[0] = v14;
  UIUserInterfaceStyle v2 = [*(id *)(*(void *)(a1 + 32) + 48) centerYAnchor];
  double v3 = [*(id *)(*(void *)(a1 + 32) + 8) centerYAnchor];
  uint64_t v4 = [v2 constraintEqualToAnchor:v3];
  v18[1] = v4;
  id v5 = [*(id *)(*(void *)(a1 + 32) + 48) trailingAnchor];
  id v6 = [*(id *)(*(void *)(a1 + 32) + 40) leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6 constant:-5.0];
  v18[2] = v7;
  id v8 = +[NSArray arrayWithObjects:v18 count:3];
  +[NSLayoutConstraint activateConstraints:v8];

  uint64_t v9 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v9 + 64))
  {
    int v10 = [*(id *)(v9 + 40) centerXAnchor];
    id v11 = [*(id *)(*(void *)(a1 + 32) + 8) centerXAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];
    char v17 = v12;
    uint64_t v13 = +[NSArray arrayWithObjects:&v17 count:1];
    +[NSLayoutConstraint activateConstraints:v13];
  }
}

id sub_1003F6368(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:1.0];
  UIUserInterfaceStyle v2 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v2 setAlpha:0.0];
}

void *sub_1003F63EC(void *result)
{
  uint64_t v1 = result[4];
  if ((*(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    UIUserInterfaceStyle v2 = result;
    [*(id *)(v1 + 16) removeFromSuperview];
    id result = [*(id *)(v2[4] + 32) removeFromSuperview];
    if (*(void *)(v2[4] + 80) == 2)
    {
      id result = (void *)MapsFeature_IsEnabled_ShelbyvilleSearch();
      if (result)
      {
        id result = (void *)GEOConfigGetBOOL();
        if (result)
        {
          double v3 = (void *)v2[4];
          return _[v3 executeAction];
        }
      }
    }
  }
  return result;
}

void sub_1003F64A4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) addSubview:*(void *)(*(void *)(a1 + 32) + 32)];
  [*(id *)(*(void *)(a1 + 32) + 32) setAlpha:0.0];
  UIUserInterfaceStyle v2 = [*(id *)(*(void *)(a1 + 32) + 32) centerXAnchor];
  double v3 = [*(id *)(*(void *)(a1 + 32) + 8) centerXAnchor];
  uint64_t v4 = [v2 constraintEqualToAnchor:v3];
  v9[0] = v4;
  id v5 = [*(id *)(*(void *)(a1 + 32) + 32) centerYAnchor];
  id v6 = [*(id *)(*(void *)(a1 + 32) + 8) centerYAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];
  v9[1] = v7;
  id v8 = +[NSArray arrayWithObjects:v9 count:2];
  +[NSLayoutConstraint activateConstraints:v8];
}

id sub_1003F660C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:1.0];
  [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:0.0];
  UIUserInterfaceStyle v2 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v2 setAlpha:1.0];
}

void *sub_1003F6690(void *result)
{
  uint64_t v1 = result[4];
  if (*(void *)(v1 + 80) == 4)
  {
    UIUserInterfaceStyle v2 = result;
    [*(id *)(v1 + 48) removeFromSuperview];
    [*(id *)(v2[4] + 40) removeFromSuperview];
    double v3 = *(void **)(v2[4] + 16);
    return [v3 removeFromSuperview];
  }
  return result;
}

double *sub_1003F6714(double *result)
{
  if (*((unsigned char *)result + 48)) {
    return (double *)[*(id *)(*((void *)result + 4) + 56) setConstant:result[5] + *(double *)(*((void *)result + 4) + 88)];
  }
  return result;
}

id sub_1003F6748(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  double v3 = *(void **)(a1 + 32);

  return [v3 layoutIfNeeded];
}

void sub_1003F6790(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  if (*(unsigned char *)(a1 + 48))
  {
    if ((MapsFeature_IsEnabled_SearchAndDiscovery() & 1) == 0)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
      char v4 = objc_opt_respondsToSelector();

      if (v4)
      {
        id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72));
        [v5 localSearchViewContentSizeChanged];
      }
    }
  }
}

void sub_1003F6EC8(uint64_t a1, void *a2)
{
  if (a2)
  {
    double v3 = *(void **)(a1 + 32);
    id v4 = a2;
    id v5 = [v3 coordinator];
    [v5 viewController:*(void *)(a1 + 40) selectParkedCar:v4 andPerformAction:[*(id *)(a1 + 48) parkedCarAction] selectPOIOnMap:1];
  }
}

UIFont *__cdecl sub_1003F6F74(id a1)
{
  uint64_t v1 = sub_100CE0D34(&stru_101321500);
  uint64_t v2 = +[UIFont _maps_cappedFont:v1 withMaxPoint:30.0];

  return (UIFont *)v2;
}

void sub_1003F75E4(id a1)
{
  uint64_t v1 = +[NSBundle mainBundle];
  uint64_t v2 = [v1 localizedStringForKey:@"Pause [Flyover]" value:@"localized string not found" table:0];
  double v3 = (void *)qword_10160EBB8;
  qword_10160EBB8 = v2;

  id v4 = +[NSBundle mainBundle];
  uint64_t v5 = [v4 localizedStringForKey:@"Start [Flyover]" value:@"localized string not found" table:0];
  id v6 = (void *)qword_10160EBC0;
  qword_10160EBC0 = v5;

  id v9 = +[NSBundle mainBundle];
  uint64_t v7 = [v9 localizedStringForKey:@"Start City [Flyover]" value:@"localized string not found" table:0];
  id v8 = (void *)qword_10160EBC8;
  qword_10160EBC8 = v7;
}

void sub_1003F80CC(id a1)
{
  uint64_t v1 = +[NSBundle mainBundle];
  uint64_t v2 = [v1 localizedStringForKey:@"Pause [Flyover]" value:@"localized string not found" table:0];
  double v3 = (void *)qword_10160EBD8;
  qword_10160EBD8 = v2;

  id v6 = +[NSBundle mainBundle];
  uint64_t v4 = [v6 localizedStringForKey:@"Resume [Flyover]" value:@"localized string not found" table:0];
  uint64_t v5 = (void *)qword_10160EBE0;
  qword_10160EBE0 = v4;
}

id sub_1003F8DC0()
{
  if (qword_10160EBF8 != -1) {
    dispatch_once(&qword_10160EBF8, &stru_1012E9098);
  }
  uint64_t v0 = (void *)qword_10160EBF0;

  return v0;
}

void sub_1003F9C18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionLocationSignalEnvironmentMonitor");
  uint64_t v2 = (void *)qword_10160EBF0;
  qword_10160EBF0 = (uint64_t)v1;
}

id sub_1003FA350(uint64_t a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  [v3 setObject:*(void *)(a1 + 32) forKeyedSubscript:NSFontAttributeName];

  return v3;
}

void sub_1003FB9D8(id a1, UIAlertAction *a2)
{
  uint64_t v2 = a2;
  exit(0);
}

void sub_1003FBC8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 56));
  _Unwind_Resume(a1);
}

void sub_1003FBCD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_1003FBEAC;
  v12[3] = &unk_1012E6998;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Show Blank Placecard" geoConfigKey:MapsUIConfig_StubPlacecard[0] switchOnStateIfUnset:MapsUIConfig_StubPlacecard[1] changeHandler:0 v12];
  id v5 = [v3 addSwitchRowWithTitle:@"Use Dynamic Placecard" geoConfigKey:GeoServicesConfig_PlaceCardUseDynamicLayout[0] switchOnStateIfUnset:GeoServicesConfig_PlaceCardUseDynamicLayout[1] changeHandler:1 &stru_1012E9130];
  id v6 = [v3 addSwitchRowWithTitle:@"Log the expected Layout" geoConfigKey:MapKitConfig_PlaceLayoutLogEnabled[0] MapKitConfig_PlaceLayoutLogEnabled[1]];
  id v7 = [v3 addButtonRowWithTitle:@"Clear Custom Layout" action:&stru_1012E9150];
  id v8 = [v3 addSwitchRowWithTitle:@"Show Layout Debug Info" geoConfigKey:MapKitConfig_PlaceLayoutDebugEnabled[0] MapKitConfig_PlaceLayoutDebugEnabled[1]];
  id v9 = [v3 addSwitchRowWithTitle:@"Show Brand Debug Action" defaultsKey:@"MKPlaceBrandDebugEnabled"];
  id v10 = [v3 addSwitchRowWithTitle:@"Show Identifier" defaultsKey:@"GEOPlaceShowGEOIDKey" switchOnStateIfUnset:0 changeHandler:0];
  id v11 = [v3 addNavigationRowWithTitle:@"Web Modules" viewControllerContent:&stru_1012E9190];
  objc_destroyWeak(&v13);
}

void sub_1003FBE94(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003FBEAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

void sub_1003FBEF0(id a1)
{
}

void sub_1003FBF00(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:0 content:&stru_1012E91B0];
}

void sub_1003FBF30(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addGEOTextFieldRowWithTitle:@"Default height", @"100", 2, MapKitConfig_MKWebContentDefaultHeight[0], MapKitConfig_MKWebContentDefaultHeight[1] placeholderText inputType geoConfigKeyDouble];
}

void sub_1003FBF74(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable MapItem URL Extra Storage", MapKitConfig_MapItemURLExtraStorageEnabled[0], MapKitConfig_MapItemURLExtraStorageEnabled[1] geoConfigKey];
}

void sub_1003FBFAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1003FC1C0;
  v14[3] = &unk_1012E6708;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Copy Full State for Handoff" action:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_1003FC208;
  v12[3] = &unk_1012E6708;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Copy Compact State for Handoff" action:v12];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_1003FC250;
  v10[3] = &unk_1012E6708;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addButtonRowWithTitle:@"Paste State from Handoff" action:v10];
  id v7 = +[GEOPlatform sharedPlatform];
  unsigned int v8 = [v7 isInternalInstall];

  if (v8) {
    id v9 = [v3 addButtonRowWithTitle:@"Copy last applied Handoff/state restoration" action:&stru_1012E91F0];
  }
  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
}

void sub_1003FC188(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003FC1C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _copyStateWithFidelity:268435439];
}

void sub_1003FC208(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _copyStateWithFidelity:268435407];
}

void sub_1003FC250(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pasteStateWithAssumedSourceFidelity:268435439];
}

void sub_1003FC298(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 objectForKey:@"lastUserActivityData"];
  id v8 = [v2 bzip2UncompressedData];

  id v3 = [objc_alloc((Class)NSString) initWithData:v8 encoding:4];
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = [v4 objectForKey:@"dateLastUserActivity"];
  id v6 = +[NSString stringWithFormat:@"<%@> :\n%@", v5, v3];

  id v7 = +[UIPasteboard generalPasteboard];
  [v7 setString:v6];
}

void sub_1003FC3A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  long long v16[2] = sub_1003FC5EC;
  v16[3] = &unk_1012E6708;
  objc_copyWeak(&v17, (id *)(a1 + 32));
  id v4 = [v3 addButtonRowWithTitle:@"Copy Full State" action:v16];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1003FC630;
  v14[3] = &unk_1012E6708;
  objc_copyWeak(&v15, (id *)(a1 + 32));
  id v5 = [v3 addButtonRowWithTitle:@"Paste Full State" action:v14];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_1003FC674;
  v12[3] = &unk_1012E8290;
  objc_copyWeak(&v13, (id *)(a1 + 32));
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  id v9 = sub_1003FC6AC;
  id v10 = &unk_1012E6998;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addSwitchRowWithTitle:@"Continuously Record" get:v12 set:&v7];
  [v6 setSubtitle:@"Will stop when the app quits" v7, v8, v9, v10];

  objc_destroyWeak(&v11);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
  objc_destroyWeak(&v17);
}

void sub_1003FC5AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1003FC5EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _copyStateWithFidelity:0xFFFFFFFLL];
}

void sub_1003FC630(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _pasteStateWithAssumedSourceFidelity:0xFFFFFFFLL];
}

id sub_1003FC674(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained recordsContinuously];

  return v2;
}

void sub_1003FC6AC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setRecordsContinuously:a2];
}

void sub_1003FC6FC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Distance Thresholds", GeoServicesConfig_ITTEnableDistanceThresholds[0], GeoServicesConfig_ITTEnableDistanceThresholds[1] geoConfigKey];
}

void sub_1003FCE04(id a1, UIAlertAction *a2)
{
  id v2 = a2;
  exit(0);
}

uint64_t sub_1003FD1A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1003FD1B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1003FD544(uint64_t a1)
{
  id v2 = sub_100018584();
  id v3 = [v2 oneFavorites];
  [v3 registerMeCardObserver:*(void *)(a1 + 32)];

  id v4 = *(void **)(a1 + 32);

  return _[v4 _updateMeCard];
}

void sub_1003FD75C(uint64_t a1)
{
  sub_100018584();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = [v3 oneFavorites];
  [v2 unregisterMeCardObserver:*(void *)(a1 + 32)];
}

void sub_1003FD7EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = sub_100013854();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      uint64_t v6 = *(void *)(a1 + 32);
      int v9 = 134349315;
      id v10 = WeakRetained;
      __int16 v11 = 2113;
      uint64_t v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "[%{public}p] Error fetching me card: %{private}@", (uint8_t *)&v9, 0x16u);
    }
    id v7 = objc_loadWeakRetained((id *)(a1 + 48));
    [v7 setState:2];
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v8 = objc_loadWeakRetained((id *)(a1 + 48));
      int v9 = 134349056;
      id v10 = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Received me card", (uint8_t *)&v9, 0xCu);
    }
    id v7 = objc_loadWeakRetained((id *)(a1 + 48));
    [v7 _updateHomeWorkEntries:*(void *)(a1 + 40)];
  }
}

void sub_1003FECC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateHomeWorkEntries:*(void *)(a1 + 32)];
}

void sub_1003FF538(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) setVisibleMapRect:];
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v2 = 104;
  }
  else {
    uint64_t v2 = 0;
  }
  [*(id *)(*(void *)(a1 + 32) + 32) setMapType:v2];
  id v3 = +[MKPointOfInterestFilter filterExcludingAllCategories];
  [*(id *)(*(void *)(a1 + 32) + 32) setPointOfInterestFilter:v3];
}

void sub_1004000D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

void sub_100400680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1004006AC()
{
  if (qword_10160EC28 != -1) {
    dispatch_once(&qword_10160EC28, &stru_1012E93C8);
  }
  uint64_t v0 = (void *)qword_10160EC20;

  return v0;
}

void sub_100400700(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setAlpha:1.0];
    [a1[4] setActive:0];
    [a1[5] setActive:1];
    [a1[6] layoutIfNeeded];
    id WeakRetained = v3;
  }
}

void sub_100400774(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 5, *(id *)(a1 + 32));
    [v3 resetTimerAnimated:*(unsigned __int8 *)(a1 + 48)];
    id WeakRetained = v3;
  }
}

void sub_100400AA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  _Unwind_Resume(a1);
}

void sub_100400AD4(id *a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    [WeakRetained setAlpha:0.0];
    [v3[5] setActive:0];
    [a1[4] setActive:1];
    [a1[5] layoutIfNeeded];
    id WeakRetained = v3;
  }
}

void sub_100400B54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained removeFromSuperview];
    uint64_t v3 = v5;
    v5[64] = 0;
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      (*(void (**)(void))(v4 + 16))();
      uint64_t v3 = v5;
    }
  }
}

void sub_100400D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100400D94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained;
    [WeakRetained dismissAnimated:*(unsigned __int8 *)(a1 + 40) completion:WeakRetained[7]];
    id WeakRetained = v3;
  }
}

Class sub_100401124(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_10160EC18)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_100401278;
    void v4[4] = &unk_1012E63F0;
    void v4[5] = v4;
    long long v5 = off_1012E93B0;
    uint64_t v6 = 0;
    qword_10160EC18 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_10160EC18)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("MTMaterialLayer");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  qword_10160EC10 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100401278()
{
  uint64_t result = _sl_dlopen();
  qword_10160EC18 = result;
  return result;
}

void sub_1004012EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsPopupMessageView");
  uint64_t v2 = (void *)qword_10160EC20;
  qword_10160EC20 = (uint64_t)v1;
}

id sub_100401AE8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  long long v5 = [v4 traitCollection];
  id v6 = [v5 userInterfaceIdiom];

  id v7 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2 * (v6 != (id)5)];
  [v7 setShowsSeparators:v6 != (id)5];
  id v8 = [v7 separatorConfiguration];
  id v9 = [v8 copy];

  id v10 = [*(id *)(a1 + 32) theme];
  __int16 v11 = [v10 dynamicHairlineColor];
  [v9 setColor:v11];

  [v7 setSeparatorConfiguration:v9];
  uint64_t v12 = +[UIColor clearColor];
  [v7 setBackgroundColor:v12];

  id v13 = +[NSCollectionLayoutSection sectionWithListConfiguration:v7 layoutEnvironment:v4];

  if (v6 == (id)5)
  {
    double top = NSDirectionalEdgeInsetsZero.top;
    double leading = NSDirectionalEdgeInsetsZero.leading;
    double bottom = NSDirectionalEdgeInsetsZero.bottom;
    double trailing = NSDirectionalEdgeInsetsZero.trailing;
  }
  else
  {
    double top = 0.0;
    double leading = 16.0;
    double bottom = 0.0;
    double trailing = 16.0;
  }
  [v13 setContentInsets:top, leading, bottom, trailing];

  return v13;
}

void sub_100403030(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 152) = *(void *)(a1 + 64);
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayoutAnimated:1];
}

void sub_100403668(id a1)
{
  byte_10160EC30 = 0;
  +[CarQuickRouteRefreshOperation suspendQueues:0];
}

void sub_100403800(id a1)
{
}

void sub_100404440(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) trackingController];
  [v2 setUseForcedTrackingMode:1];

  id v4 = [*(id *)(a1 + 32) carChromeViewController];
  uint64_t v3 = [v4 defaultMapSettings];
  [v3 reload];
}

id sub_1004044C0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) applyMapSettingsAndTrackingAnimated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1004045C8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) trackingController];
  [(id)v2 setUseForcedTrackingMode:0];

  uint64_t v3 = [*(id *)(a1 + 40) nextTopContext];
  objc_opt_class();
  LOBYTE(v2) = objc_opt_isKindOfClass();

  if ((v2 & 1) == 0)
  {
    id v5 = +[CarDisplayController sharedInstance];
    id v4 = [v5 routeGeniusManager];
    [v4 deactivateForAllChromes];
  }
}

void sub_1004071A4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 40) setHidden:*(unsigned __int8 *)(a1 + 40)];
  double v2 = 0.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v2 = 20.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 16) setConstant:v2];
  id v3 = [*(id *)(*(void *)(a1 + 32) + 40) superview];
  [v3 layoutIfNeeded];
}

void sub_100407744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100407770(uint64_t a1)
{
  double v2 = +[NSUserDefaults standardUserDefaults];
  [v2 setBool:1 forKey:@"HasShownCustomNavModeAdvisoryKey"];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained _continuePushNavigationWithRoute:*(void *)(a1 + 32) navigationMode:*(void *)(a1 + 56) completion:*(void *)(a1 + 40)];
    id WeakRetained = v4;
  }
}

void sub_1004079D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004079F4(id *a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100407B00;
  v5[3] = &unk_1012E94F0;
  objc_copyWeak(v9, a1 + 6);
  v9[1] = a1[7];
  id v4 = v3;
  id v6 = v4;
  id v7 = a1[4];
  id v8 = a1[5];
  +[NavigationSimulationPromptController promptIfNeededForSimulationForRoute:v4 navigationTracePlayback:0 continueWithOptions:v5];

  objc_destroyWeak(v9);
}

void sub_100407AEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100407B00(uint64_t a1, uint64_t a2, int a3)
{
  if (a3)
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      LOWORD(v21[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Navigation simulation popup was dismissed.", (uint8_t *)v21, 2u);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    id v3 = WeakRetained;
    if (WeakRetained)
    {
      id v7 = [WeakRetained sessionStack];
      id v8 = [v7 valueForKey:@"class"];
      unsigned int v9 = [v8 containsObject:objc_opt_class()];

      id v10 = sub_10000AF10();
      __int16 v11 = v10;
      if (v9)
      {
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          LOWORD(v21[0]) = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Aborting navigation session push as there is already one active", (uint8_t *)v21, 2u);
        }
      }
      else
      {
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          uint64_t v12 = [v3 sessionStack];
          LODWORD(v21[0]) = 138412290;
          *(void *)((char *)v21 + 4) = v12;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Pushing navigation on top of %@", (uint8_t *)v21, 0xCu);
        }
        *(void *)(a2 + 48) = 1;
        *(void *)(a2 + 24) = *(void *)(a1 + 64);
        id v13 = [RouteCollection alloc];
        uint64_t v23 = *(void *)(a1 + 32);
        id v14 = +[NSArray arrayWithObjects:&v23 count:1];
        __int16 v11 = [(RouteCollection *)v13 initWithRoutes:v14 currentRouteIndex:0];

        id v15 = [NavigationSessionBuilder alloc];
        uint64_t v16 = *(void *)(a1 + 40);
        long long v17 = *(_OWORD *)(a2 + 16);
        v21[0] = *(_OWORD *)a2;
        v21[1] = v17;
        void v21[2] = *(_OWORD *)(a2 + 32);
        uint64_t v22 = *(void *)(a2 + 48);
        id v18 = [(NavigationSessionBuilder *)v15 initWithRouteCollection:v11 navigationDetailsOptions:v21 mapServiceTraits:v16 sessionInitiator:1 isResumingMultipointRoute:0 tracePlaybackPath:0];
        long long v19 = [(NavigationSessionBuilder *)v18 build];
        [v3 pushSession:v19];
        uint64_t v20 = *(void *)(a1 + 48);
        if (v20) {
          (*(void (**)(uint64_t, void, void))(v20 + 16))(v20, 0, 0);
        }
      }
    }
  }
}

void sub_1004085A8(id a1)
{
  id v1 = objc_alloc_init(UserProfileLinkGarageProvider);
  double v2 = (void *)qword_10160EC60;
  qword_10160EC60 = (uint64_t)v1;
}

void sub_100408998(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1004089BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      __int16 v11 = sub_1000519B4();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v16 = v6;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to get virtual garage with error: %@", buf, 0xCu);
      }
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100408B10;
      block[3] = &unk_1012E66E0;
      void block[4] = WeakRetained;
      id v9 = v5;
      uint64_t v10 = *(void *)(a1 + 32);
      id v13 = v9;
      uint64_t v14 = v10;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

id sub_100408B10(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), *(id *)(a1 + 40));
  [*(id *)(a1 + 48) _loadUnpairedVehicles];
  uint64_t v2 = *(void **)(a1 + 48);

  return [v2 _updateLinkAndNotifyObservers:1];
}

void sub_100408C24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100408C48(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      id v8 = sub_10000A540();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v14 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to get unpaired apps from garage with error: %@", buf, 0xCu);
      }
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100408D98;
      block[3] = &unk_1012E66E0;
      uint64_t v10 = v5;
      id v11 = WeakRetained;
      uint64_t v12 = *(void *)(a1 + 32);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      id v8 = v10;
    }
  }
}

id sub_100408D98(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) count];
  if (result)
  {
    [*(id *)(a1 + 40) setHasUnpairedVehicles:1];
    id v3 = *(void **)(a1 + 48);
    return [v3 _updateLinkAndNotifyObservers:1];
  }
  return result;
}

void sub_100408FD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), *(id *)(a1 + 40));
    [WeakRetained _updateLinkAndNotifyObservers:1];
  }
}

id sub_100409108(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateLinkAndNotifyObservers:1];
}

void sub_100409934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

id sub_100409B34()
{
  if (qword_10160EC88 != -1) {
    dispatch_once(&qword_10160EC88, &stru_1012E95F0);
  }
  uint64_t v0 = (void *)qword_10160EC80;

  return v0;
}

void sub_100409EF8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningServerEnvrionmentChangeRouteRefreshTask");
  uint64_t v2 = (void *)qword_10160EC80;
  qword_10160EC80 = (uint64_t)v1;
}

id sub_10040B0C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_10040BAB0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[19];
  id v5 = [v2 selectedTraceName];
  id v4 = [*(id *)(a1 + 32) selectedTracePath];
  (*(void (**)(uint64_t, id, void *))(v3 + 16))(v3, v5, v4);
}

void sub_10040BB34(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  [v2 deselectRowAtIndexPath:*(void *)(a1 + 40) animated:0];
}

void sub_10040C1A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10040C1C4(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && [v4 count])
  {
    WeakRetained[120] = 0;
    [WeakRetained rebuildContent:v4];
  }
}

void sub_10040C5C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10040C5DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = +[MapsSyncStore sharedStore];
    uint64_t v6 = WeakRetained[16];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10040C6D8;
    v7[3] = &unk_1012E76C0;
    id v8 = *(id *)(a1 + 32);
    [v5 saveWithObjects:v6 completionHandler:v7];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10040C6D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  uint64_t v6[2] = sub_10040C784;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10040C784(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10040D340(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 64));
  _Unwind_Resume(a1);
}

void sub_10040D354(uint64_t a1)
{
  uint64_t v2 = sub_10057670C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Finished saving maneuver icon, will leave dispatch_group.", v3, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10040D3C8(uint64_t a1)
{
  uint64_t v2 = sub_10057670C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Finished saving map snapshot, will leave dispatch_group.", v3, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10040D43C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = sub_10057670C();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Finished saving both maneuver and map snapshots, will load request.", v3, 2u);
    }

    [WeakRetained loadWebView];
  }
}

void sub_10040D5A4(id *a1)
{
  uint64_t v2 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained) {
    goto LABEL_11;
  }
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  _OWORD v24[2] = sub_10040D898;
  v24[3] = &unk_1012E96E0;
  objc_copyWeak(&v26, v2);
  id v25 = a1[5];
  id v4 = objc_retainBlock(v24);
  id v5 = [a1[4] traitCollection];
  id v6 = [v5 userInterfaceStyle];

  if (v6 != (id)2)
  {
    if (UIAccessibilityIsInvertColorsEnabled()) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v7 = +[UIColor blackColor];
    goto LABEL_7;
  }
  if (UIAccessibilityIsInvertColorsEnabled()) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v7 = +[UIColor whiteColor];
LABEL_7:
  id v8 = (void *)v7;
  uint64_t v18 = 0;
  long long v19 = &v18;
  uint64_t v20 = 0x3032000000;
  long long v21 = sub_100103B8C;
  uint64_t v22 = sub_100104650;
  [*((id *)a1[4] + 18) maneuverType];
  [*((id *)a1[4] + 18) drivingSide];
  MKDefaultGuidanceManeuverMetrics();
  id v9 = [a1[4] traitCollection];
  [v9 displayScale];
  uint64_t v10 = +[UIColor lightGrayColor];
  MKManeuverArrowImage();
  id v23 = (id)objc_claimAutoreleasedReturnValue();

  if (v19[5])
  {
    ((void (*)(void *))v4[2])(v4);
  }
  else
  {
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_10040DA00;
    v13[3] = &unk_1012E9708;
    id v11 = v8;
    id v12 = a1[4];
    id v14 = v11;
    id v15 = v12;
    long long v17 = &v18;
    id v16 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);
  }
  _Block_object_dispose(&v18, 8);

  objc_destroyWeak(&v26);
LABEL_11:
}

void sub_10040D864(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v2 - 192), 8);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10040D898(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = dispatch_get_global_queue(33, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10040D97C;
  block[3] = &unk_1012E96B8;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  id v7 = v3;
  id v8 = *(id *)(a1 + 32);
  id v5 = v3;
  dispatch_async(v4, block);

  objc_destroyWeak(&v9);
}

void sub_10040D97C(id *a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 27, a1[4]);
    [v3 saveImage:a1[4] withIdentifier:@"RAPManeuverIconIdentifier"];
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, a1[5]);
    id WeakRetained = v3;
  }
}

void sub_10040DA00(void *a1)
{
  uint64_t v2 = sub_10057670C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
  }

  id v3 = -[GuidanceManeuverView initWithFrame:]([GuidanceManeuverView alloc], "initWithFrame:", 0.0, 0.0, 100.0, 100.0);
  +[SignStyle arrowMetricsForStyle:0];
  memcpy(__dst, __src, sizeof(__dst));
  [(GuidanceManeuverView *)v3 setArrowMetrics:__dst];
  +[SignStyle junctionArrowMetricsForStyle:0];
  memcpy(v22, v23, sizeof(v22));
  [(GuidanceManeuverView *)v3 setJunctionArrowMetrics:v22];
  [(GuidanceManeuverView *)v3 setFraming:1];
  [(GuidanceManeuverView *)v3 setArrowColor:a1[4]];
  id v21 = objc_alloc((Class)MKJunction);
  id v4 = [*(id *)(a1[5] + 144) geoStep];
  unsigned int v20 = [v4 junctionType];
  id v5 = [*(id *)(a1[5] + 144) geoStep];
  id v6 = [v5 maneuverType];
  id v7 = [*(id *)(a1[5] + 144) drivingSide];
  id v8 = [*(id *)(a1[5] + 144) geoStep];
  id v9 = [v8 junctionElements];
  uint64_t v10 = [*(id *)(a1[5] + 144) geoStep];
  id v11 = [v21 initWithType:v20 maneuver:v6 drivingSide:v7 elements:v9 count:[v10 junctionElementsCount]];

  id v12 = [GuidanceManeuverArtwork alloc];
  id v13 = [*(id *)(a1[5] + 144) maneuverType];
  id v14 = [*(id *)(a1[5] + 144) drivingSide];
  id v15 = [*(id *)(a1[5] + 144) artworkOverride];
  id v16 = [(GuidanceManeuverArtwork *)v12 initWithManeuver:v13 junction:v11 drivingSide:v14 artworkDataSource:v15];
  [(GuidanceManeuverView *)v3 setManeuverArtwork:v16];

  uint64_t v17 = [(GuidanceManeuverView *)v3 imageRepresentation];
  uint64_t v18 = *(void *)(a1[7] + 8);
  long long v19 = *(void **)(v18 + 40);
  *(void *)(v18 + 40) = v17;

  (*(void (**)(void))(a1[6] + 16))();
}

void sub_10040E264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10040E288(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a3)
    {
      id v7 = sub_10057670C();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = *(void *)(a1 + 48);
        int v14 = 134217984;
        uint64_t v15 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to create a snapshot of step with stepID: %lu", (uint8_t *)&v14, 0xCu);
      }
    }
    else
    {
      id v9 = +[NSUUID UUID];
      uint64_t v10 = [v9 UUIDString];
      id v11 = (void *)WeakRetained[26];
      WeakRetained[26] = v10;

      id v12 = sub_10057670C();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        uint64_t v13 = *(void *)(a1 + 48);
        int v14 = 134217984;
        uint64_t v15 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Successfully created a snapshot of step with stepID: %lu. Will process to saving", (uint8_t *)&v14, 0xCu);
      }

      id v7 = [v5 image];
      [WeakRetained saveImage:v7 withIdentifier:WeakRetained[26]];
    }

    dispatch_async((dispatch_queue_t)&_dispatch_main_q, *(dispatch_block_t *)(a1 + 32));
  }
}

void sub_10040E524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10040E540(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _submit];
    id WeakRetained = v2;
  }
}

void sub_10040E6A8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    objc_opt_class();
    int v5 = objc_opt_isKindOfClass() & 1;
    if (v5) {
      id v6 = v4;
    }
    else {
      id v6 = 0;
    }
    id v7 = v6;
    uint64_t v8 = sub_10057670C();
    id v9 = v8;
    if (v5)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 184);
        int v13 = 138412546;
        uint64_t v14 = v10;
        __int16 v15 = 2112;
        id v16 = v4;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "_updateAggregatedDataWithCompletion: will update aggregatedData from: %@ to %@", (uint8_t *)&v13, 0x16u);
      }

      objc_storeStrong((id *)(*(void *)(a1 + 32) + 184), a2);
      uint64_t v11 = *(void *)(a1 + 40);
      id v12 = v4;
      if (v11)
      {
        (*(void (**)(void))(v11 + 16))();
        id v12 = v4;
      }
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      {
        LOWORD(v13) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "_updateAggregatedDataWithCompletion webView gave us unsupported object as aggregatedData", (uint8_t *)&v13, 2u);
      }

      id v12 = 0;
    }
  }
  else
  {
    id v12 = sub_10057670C();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "_updateAggregatedDataWithCompletion got nil back from web module.", (uint8_t *)&v13, 2u);
    }
  }
}

void sub_10040ED38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10040ED64(id a1, id a2, id a3)
{
}

void sub_10040ED74(uint64_t a1)
{
  id v2 = sub_10057670C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "_uploadForm -> willStartSubmitting", v9, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) startAnimating];
    id v4 = [WeakRetained navigationController];
    int v5 = [v4 navigationBar];
    [v5 setUserInteractionEnabled:0];

    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = [WeakRetained navigationItem];
    uint64_t v8 = [v7 rightBarButtonItem];
    [v8 setCustomView:v6];
  }
}

void sub_10040EE60(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  int v5 = sub_10057670C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412290;
    id v23 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "_uploadForm -> didFinishSubmitting error: %@", buf, 0xCu);
  }

  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) stopAnimating];
    id v7 = [WeakRetained navigationController];
    uint64_t v8 = [v7 navigationBar];
    [v8 setUserInteractionEnabled:1];

    id v9 = [WeakRetained navigationItem];
    uint64_t v10 = [v9 rightBarButtonItem];
    [v10 setCustomView:0];

    if (v4)
    {
      uint64_t v11 = sub_1009A038C();
      [WeakRetained presentViewController:v11 animated:1 completion:0];
    }
    else
    {
      if (MapsFeature_IsEnabled_RAPSydney())
      {
        id v12 = [UGCCommunityAcknowledgementViewController alloc];
        int v13 = +[RAPAcknowledgementOptions defaultOptions];
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        void v21[2] = sub_10040F138;
        _OWORD v21[3] = &unk_1012E5D08;
        v21[4] = WeakRetained;
        uint64_t v14 = [(UGCCommunityAcknowledgementViewController *)v12 initWithOptions:v13 completion:v21];

        __int16 v15 = [(UGCCommunityAcknowledgementViewController *)v14 navigationItem];
        [v15 setHidesBackButton:1];

        id v16 = [WeakRetained navigationController];
        [v16 pushViewController:v14 animated:1];
      }
      else
      {
        uint64_t v17 = [WeakRetained view];
        uint64_t v14 = [v17 window];

        uint64_t v18 = +[NSBundle mainBundle];
        long long v19 = [v18 localizedStringForKey:@"[RAP Web UI] Thanks for your report" value:@"localized string not found" table:0];

        +[ActionValidationController presentDefaultValidationActionWithTitle:v19 inWindow:v14];
        id v20 = objc_loadWeakRetained(WeakRetained + 24);
        [v20 routeStepDetailViewControllerDidSubmitReport:WeakRetained];
      }
      +[RAPAnalyticsManager captureRAPSendActionFromReport:WeakRetained[17]];
    }
  }
}

id sub_10040F138(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 192));
  [WeakRetained routeStepDetailViewControllerDidSubmitReport:*(void *)(a1 + 32)];

  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 136);

  return +[RAPAnalyticsManager captureRAPAcknowledgementDoneActionFromReport:v3];
}

void sub_100410A28(uint64_t a1)
{
  id v2 = sub_10000AF10();
  if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
    goto LABEL_16;
  }
  id v3 = *(id *)(a1 + 32);
  if (!v3)
  {
    uint64_t v8 = @"<nil>";
    goto LABEL_10;
  }
  id v4 = (objc_class *)objc_opt_class();
  int v5 = NSStringFromClass(v4);
  if (objc_opt_respondsToSelector())
  {
    uint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
    id v7 = v6;
    if (v6 && ![v6 isEqualToString:v5])
    {
      uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

      goto LABEL_8;
    }
  }
  uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
  id v9 = v8;
  id v10 = [*(id *)(a1 + 40) sessionState];
  CFStringRef v11 = @"NotStarted";
  if (v10 == (id)1) {
    CFStringRef v11 = @"Running";
  }
  if (v10 == (id)2) {
    CFStringRef v12 = @"Suspended";
  }
  else {
    CFStringRef v12 = v11;
  }
  id v13 = [*(id *)(a1 + 40) navigationType];
  *(_DWORD *)long long buf = 138543874;
  uint64_t v24 = v9;
  __int16 v25 = 2114;
  CFStringRef v26 = v12;
  __int16 v27 = 2050;
  id v28 = v13;
  _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] Pushing nav mode now: %{public}@, %{public}ld", buf, 0x20u);

LABEL_16:
  uint64_t v14 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v14 closeSettingsIfNeeded];

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 104));
  [WeakRetained updateThemeForVisualEffectStyle:1];

  id v16 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v17 = [*(id *)(a1 + 32) navModeController];
  [v16 pushContext:v17 animated:1 completion:0];

  uint64_t v18 = *(void **)(a1 + 32);
  long long v19 = [v18 navActionCoordinator];
  [v19 setAppCoordinator:v18];

  id v20 = +[UIApplication sharedMapsDelegate];
  [v20 acquireSecureAppAssertionIfNeeded];

  id v21 = [*(id *)(a1 + 32) _analyticsPipelineTransportModeForMSPTransportType:[*(id *)(a1 + 40) currentTransportType]];
  uint64_t v22 = +[GEOAPSharedStateData sharedData];
  [v22 setMapUiShownActiveNavMode:v21];
}

void sub_100410CE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 104));
  [WeakRetained updateThemeForVisualEffectStyle:1];

  id v3 = [*(id *)(a1 + 40) currentRouteCollection];
  id v14 = [v3 currentRoute];

  if ([v14 transportType] == 1)
  {
    id v4 = [*(id *)(a1 + 32) chromeViewController];
    int v5 = [*(id *)(a1 + 32) transitNavigationContext];
    [v4 pushContext:v5 animated:1 completion:0];
  }
  else
  {
    uint64_t v6 = [[StepModeController alloc] initWithRoute:v14 initialStepIndex:0 desiredUserTrackingMode:&off_1013A6FB8];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void **)(v7 + 112);
    *(void *)(v7 + 112) = v6;

    id v9 = [*(id *)(a1 + 32) chromeViewController];
    id v10 = [*(id *)(a1 + 32) stepModeController];
    [v9 pushContext:v10 animated:1 completion:0];

    CFStringRef v11 = *(void **)(a1 + 32);
    id v4 = [v11 stepModeController];
    int v5 = [v4 actionCoordinator];
    [v5 setAppCoordinator:v11];
  }

  id v12 = [*(id *)(a1 + 32) _analyticsPipelineTransportModeForMSPTransportType:[*(id *)(a1 + 40) currentTransportType]];
  id v13 = +[GEOAPSharedStateData sharedData];
  [v13 setMapUiShownActiveNavMode:v12];
}

void sub_100411338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100411364(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (!*(unsigned char *)(a1 + 48))
    {
      id v9 = WeakRetained;
      id v4 = [WeakRetained baseActionCoordinator];
      int v5 = [*(id *)(a1 + 32) destination];
      [v4 viewController:0 selectLastDirectionsDestinationComposedWaypoint:v5];

      id v3 = v9;
      uint64_t v6 = (void *)v9[4];
      if (v6)
      {
        uint64_t v7 = (void (**)(void))[v6 copy];
        uint64_t v8 = (void *)v9[4];
        void v9[4] = 0;

        v7[2](v7);
        id v3 = v9;
      }
    }
  }
}

void sub_100411B28(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 showCollection:*(void *)(a1 + 40)];
}

void sub_100411C44(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v1 toggleRoutePlanning];
}

void sub_100411D60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 doDirectionItem:*(void *)(a1 + 40) withUserInfo:*(void *)(a1 + 48)];
}

void sub_100411ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100411EFC(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    if (v3 && [v3 count])
    {
      id v5 = objc_alloc((Class)GEORouteBuilder_PersistentData);
      uint64_t v6 = [v3 firstObject];
      id v7 = [v5 initWithPersistentData:v6];

      uint64_t v8 = [v7 buildRoute];
      [WeakRetained enterRouteCreationWithRoute:v8 originMapItem:a1[4] destinationMapItem:0 userInfo:0 completion:a1[5]];
    }
    else
    {
      id v9 = [a1[4] _geoMapItem];
      id v7 = +[GEORouteBuilder_PlaceDataCuratedHike builderWithMapItem:v9];

      id v10 = [v7 buildRoute];
      CFStringRef v11 = [WeakRetained chromeViewController];
      uint64_t v8 = [v11 currentTraits];

      v17[0] = _NSConcreteStackBlock;
      v17[1] = 3221225472;
      v17[2] = sub_100412110;
      void v17[3] = &unk_1012E9860;
      id v18 = v10;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_1004121F4;
      v14[3] = &unk_1012E9888;
      void v14[4] = WeakRetained;
      id v15 = a1[4];
      id v16 = a1[5];
      id v12 = v10;
      id v13 = [v12 _maps_convertToNavigableRouteWithTraits:v8 errorHandler:v17 completionHandler:v14];
    }
  }
}

void sub_100412110(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = [v5 userProvidedName];
  id v9 = [v8 length];
  id v10 = *(void **)(a1 + 32);
  if (v9) {
    [v10 userProvidedName];
  }
  else {
  id v13 = [v10 name];
  }

  CFStringRef v11 = +[UIApplication sharedMapsDelegate];
  id v12 = [*(id *)(a1 + 32) storageID];
  [v11 interruptConvertToNavigableSavedRouteID:v12 routeName:v13 error:v7 directionsError:v6];
}

id sub_1004121F4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) enterRouteCreationWithRoute:a2 originMapItem:*(void *)(a1 + 40) destinationMapItem:0 userInfo:0 completion:*(void *)(a1 + 48)];
}

id sub_1004124C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 setIsPresentingRouteCreation:0];
}

void sub_1004125C0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 presentParentMapItem:*(void *)(a1 + 40)];
}

void sub_10041273C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 presentRelatedMapItems:*(void *)(a1 + 40) withTitle:*(void *)(a1 + 48) originalMapItem:*(void *)(a1 + 56) analyticsDelegate:*(void *)(a1 + 64)];
}

void sub_10041284C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 showCuratedCollectionIdentifier:*(void *)(a1 + 40)];
}

void sub_100412958(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 showGuidesHome:*(void *)(a1 + 40)];
}

void sub_100412A64(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewControllerShowPublisherWithID:*(void *)(a1 + 40)];
}

void sub_100412B44(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v1 viewControllerShowAllCollections];
}

void sub_100412C60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v2 viewController:0 showCuratedCollectionsList:*(void *)(a1 + 40) usingTitle:*(void *)(a1 + 48) usingCollectionIds:0 completion:0];
}

void sub_100412DAC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v1 viewControllerPresentUserProfile:0];
}

void sub_100412EF0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v1 viewControllerShowOfflineMaps:0];
}

void sub_100412FC4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v1 viewControllerShowExpiredOfflineMaps:0];
}

void sub_1004130F8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    id v2 = [*(id *)(a1 + 32) baseActionCoordinator];
    [v2 viewControllerShowOfflineMaps:0];
  }
  id v3 = [*(id *)(a1 + 32) baseActionCoordinator];
  [v3 viewController:0 showOfflineMapRegionSelectorForRegion:*(void *)(a1 + 40) name:*(void *)(a1 + 48)];
}

void sub_100413778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v15 - 152));
  _Unwind_Resume(a1);
}

void sub_1004137EC(uint64_t a1)
{
  id v2 = sub_10000AF10();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG);

  id v4 = sub_10000AF10();
  id v5 = v4;
  if (!v3)
  {
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_23;
    }
    id v6 = objc_loadWeakRetained((id *)(a1 + 48));
    if (!v6)
    {
      CFStringRef v11 = @"<nil>";
      goto LABEL_21;
    }
    id v12 = (objc_class *)objc_opt_class();
    id v13 = NSStringFromClass(v12);
    if (objc_opt_respondsToSelector())
    {
      id v14 = [v6 performSelector:"accessibilityIdentifier"];
      uint64_t v15 = v14;
      if (v14 && ![v14 isEqualToString:v13])
      {
        CFStringRef v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v13, v6, v15];

        goto LABEL_17;
      }
    }
    CFStringRef v11 = +[NSString stringWithFormat:@"%@<%p>", v13, v6];
LABEL_17:

LABEL_21:
    *(_DWORD *)long long buf = 138543362;
    *(void *)&uint8_t buf[4] = v11;
    uint64_t v17 = "[%{public}@] Starting nav";
    id v18 = v5;
    os_log_type_t v19 = OS_LOG_TYPE_INFO;
    uint32_t v20 = 12;
    goto LABEL_22;
  }
  if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    goto LABEL_23;
  }
  id v6 = objc_loadWeakRetained((id *)(a1 + 48));
  if (!v6)
  {
    CFStringRef v11 = @"<nil>";
    goto LABEL_19;
  }
  id v7 = (objc_class *)objc_opt_class();
  uint64_t v8 = NSStringFromClass(v7);
  if (objc_opt_respondsToSelector())
  {
    id v9 = [v6 performSelector:"accessibilityIdentifier"];
    id v10 = v9;
    if (v9 && ![v9 isEqualToString:v8])
    {
      CFStringRef v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v8, v6, v10];

      goto LABEL_9;
    }
  }
  CFStringRef v11 = +[NSString stringWithFormat:@"%@<%p>", v8, v6];
LABEL_9:

LABEL_19:
  uint64_t v16 = *(void *)(a1 + 32);
  *(_DWORD *)long long buf = 138543618;
  *(void *)&uint8_t buf[4] = v11;
  *(_WORD *)&buf[12] = 2112;
  *(void *)&buf[14] = v16;
  uint64_t v17 = "[%{public}@] Starting nav with route collection: %@";
  id v18 = v5;
  os_log_type_t v19 = OS_LOG_TYPE_DEBUG;
  uint32_t v20 = 22;
LABEL_22:
  _os_log_impl((void *)&_mh_execute_header, v18, v19, v17, buf, v20);

LABEL_23:
  id v21 = [*(id *)(a1 + 40) platformController];
  uint64_t v22 = [v21 currentSession];

  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v23 = v22;
  }
  else {
    id v23 = 0;
  }
  id v24 = v23;

  if (v24)
  {
    __int16 v25 = [v24 configuration];
    unsigned int v26 = [v25 isNavigationTracePlayback];

    if (v26)
    {
      __int16 v27 = [StartNavigationDetailsBuilder alloc];
      id v28 = [v24 configuration];
      long long v29 = [v28 tracePlaybackPath];
      id v30 = [(StartNavigationDetailsBuilder *)v27 initWithTracePlaybackPath:v29 routeCollection:*(void *)(a1 + 32)];

      __int16 v31 = [v24 configuration];
      -[StartNavigationDetailsBuilder setIsResumingMultipointRoute:](v30, "setIsResumingMultipointRoute:", [v31 isResumingMultipointRoute]);

      double v32 = [*(id *)(a1 + 40) baseActionCoordinator];
      id v33 = [v32 newTraits];

      [(StartNavigationDetailsBuilder *)v30 setTraits:v33];
      uint64_t v34 = [NavigationSessionConfiguration alloc];
      NSErrorUserInfoKey v35 = [(StartNavigationDetailsBuilder *)v30 buildNavigationDetails];
      CFStringRef v36 = [(NavigationSessionConfiguration *)v34 initWithStartNavigationDetails:v35 routeCollection:*(void *)(a1 + 32) traits:v33 isETAOnlyMode:0];

      id v37 = sub_10000AF10();
      if (!os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
      {
LABEL_47:

        uint64_t v57 = [[NavigationSession alloc] initWithInitiator:1 configuration:v36];
        uint64_t v58 = [*(id *)(a1 + 40) platformController];
        [v58 pushSession:v57];

        goto LABEL_48;
      }
      id v38 = objc_loadWeakRetained((id *)(a1 + 48));
      if (!v38)
      {
        long long v43 = @"<nil>";
        goto LABEL_46;
      }
      id v39 = (objc_class *)objc_opt_class();
      id v40 = NSStringFromClass(v39);
      if (objc_opt_respondsToSelector())
      {
        long long v41 = [v38 performSelector:"accessibilityIdentifier"];
        long long v42 = v41;
        if (v41 && ![v41 isEqualToString:v40])
        {
          long long v43 = +[NSString stringWithFormat:@"%@<%p, %@>", v40, v38, v42];

          goto LABEL_35;
        }
      }
      long long v43 = +[NSString stringWithFormat:@"%@<%p>", v40, v38];
LABEL_35:

LABEL_46:
      __int16 v55 = [v24 configuration];
      uint64_t v56 = [v55 tracePlaybackPath];
      *(_DWORD *)long long buf = 138543618;
      *(void *)&uint8_t buf[4] = v43;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v56;
      _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "[%{public}@] Configured navigation session for trace playback with path: %@", buf, 0x16u);

      goto LABEL_47;
    }
    long long v47 = sub_10000AF10();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      *(void *)&uint8_t buf[4] = v24;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "Beginning navigation with route planning session %{public}@", buf, 0xCu);
    }

    id v30 = [v24 navigationStateMonitoringTask];
    uint64_t v48 = *(void *)(a1 + 32);
    id v33 = [*(id *)(a1 + 40) chromeViewController];
    CFStringRef v36 = [v33 currentTraits];
    long long v49 = [v24 configuration];
    id v50 = [v49 isResumingMultipointRoute];
    long long v51 = *(_OWORD *)(a1 + 72);
    *(_OWORD *)long long buf = *(_OWORD *)(a1 + 56);
    *(_OWORD *)&uint8_t buf[16] = v51;
    long long v63 = *(_OWORD *)(a1 + 88);
    uint64_t v64 = *(void *)(a1 + 104);
    [(StartNavigationDetailsBuilder *)v30 beginNavigationWithRouteCollection:v48 navigationDetailsOptions:buf mapServiceTraits:v36 sessionInitiator:1 isResumingMultipointRoute:v50];
  }
  else
  {
    long long v44 = sub_10000AF10();
    if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "Directly pushing navigation to route", buf, 2u);
    }

    long long v45 = [*(id *)(a1 + 32) currentRoute];
    long long v46 = [(NavigationSessionConfiguration *)v45 userProvidedName];
    if ([v46 length]) {
      [(NavigationSessionConfiguration *)v45 userProvidedName];
    }
    else {
    __int16 v52 = [(NavigationSessionConfiguration *)v45 name];
    }

    __int16 v53 = [*(id *)(a1 + 40) platformController];
    id v54 = [*(id *)(a1 + 32) currentRoute];
    v59[0] = _NSConcreteStackBlock;
    v59[1] = 3221225472;
    v59[2] = sub_100413FB4;
    v59[3] = &unk_1012E9900;
    uint64_t v60 = v45;
    id v61 = v52;
    id v33 = v52;
    id v30 = v45;
    [v53 pushNavigationWithRoute:v54 navigationMode:0 shouldCheckNavSafetyAlert:0 completion:v59];

    CFStringRef v36 = v60;
  }
LABEL_48:
}

void sub_100413FB4(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 | a3)
  {
    id v5 = (id)a3;
    id v6 = (id)a2;
    id v8 = +[UIApplication sharedMapsDelegate];
    id v7 = [*(id *)(a1 + 32) storageID];
    [v8 interruptConvertToNavigableSavedRouteID:v7 routeName:*(void *)(a1 + 40) error:v6 directionsError:v5];
  }
}

void sub_100414064(uint64_t a1)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)long long buf = 138543362;
    id v10 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] User canceled End Navigation prompt", buf, 0xCu);
  }
}

void sub_1004141F0(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10000AF10();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = objc_loadWeakRetained(a1 + 6);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)long long buf = 138543362;
    id v24 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User accepted End Navigation prompt", buf, 0xCu);
  }
  CFStringRef v11 = [a1[4] auxiliaryTasksManager];
  id v12 = [v11 auxilaryTaskForClass:objc_opt_class()];

  id v13 = sub_10000AF10();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
  {
    id v14 = objc_loadWeakRetained(a1 + 6);
    if (!v14)
    {
      os_log_type_t v19 = @"<nil>";
      goto LABEL_20;
    }
    uint64_t v15 = (objc_class *)objc_opt_class();
    uint64_t v16 = NSStringFromClass(v15);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v17 = [v14 performSelector:"accessibilityIdentifier"];
      id v18 = v17;
      if (v17 && ![v17 isEqualToString:v16])
      {
        os_log_type_t v19 = +[NSString stringWithFormat:@"%@<%p, %@>", v16, v14, v18];

        goto LABEL_18;
      }
    }
    os_log_type_t v19 = +[NSString stringWithFormat:@"%@<%p>", v16, v14];
LABEL_18:

LABEL_20:
    *(_DWORD *)long long buf = 138543362;
    id v24 = v19;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "[%{public}@] Ending current navigation session and waiting for navd confirmation before starting next navigation session", buf, 0xCu);
  }
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_100414588;
  v20[3] = &unk_1012E9950;
  objc_copyWeak(&v22, a1 + 6);
  id v21 = a1[5];
  [v12 endNavigationWithCompletion:v20];

  objc_destroyWeak(&v22);
}

void sub_10041456C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100414588(uint64_t a1)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_loadWeakRetained((id *)(a1 + 40));
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)long long buf = 138543362;
    CFStringRef v11 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] Navigation ended; starting new navigation session now",
      buf,
      0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100414828(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100414844(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained platformController];
    id v5 = [v4 currentSession];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      id v7 = objc_retainBlock(*(id *)(a1 + 32));
      id v8 = (void *)v3[4];
      void v3[4] = v7;

      id v9 = [v3 platformController];
      [v9 clearSessions];
    }
    else
    {
      id v9 = sub_10000AF10();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        int v10 = 134349056;
        CFStringRef v11 = v3;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "[%{public}p] endNavigationWithCompletion: navigation was already ended elsewhere. aborting.", (uint8_t *)&v10, 0xCu);
      }
    }
  }
}

BOOL sub_100414EA4(id a1, MapsSession *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

BOOL sub_100414EF0(id a1, MapsSession *a2)
{
  uint64_t v2 = a2;
  objc_opt_class();
  BOOL v3 = (v2 != 0) & objc_opt_isKindOfClass();

  return v3;
}

BOOL sub_100414F40(id a1, ChromeContext *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_1004153B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1004153E8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  *a4 = *(unsigned char *)(a1 + 48);
  id v7 = (char *)[v6 indexOfObject:*(void *)(a1 + 32)];
  if (v7)
  {
    if (v7 == (char *)0x7FFFFFFFFFFFFFFFLL)
    {
      id v8 = sub_10000AF10();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
        int v13 = 134349056;
        id v14 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] Nav mode controller is not present in the contexts stack; leaving coordinated change early",
          (uint8_t *)&v13,
          0xCu);
      }
      id v10 = v6;
    }
    else
    {
      [v6 _maps_subarrayToIndex:v7 - 1];
      id v10 = (id)objc_claimAutoreleasedReturnValue();
    }
    CFStringRef v11 = v10;
  }
  else
  {
    CFStringRef v11 = &__NSArray0__struct;
  }

  return v11;
}

void sub_100415510(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  BOOL v3 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v2 postNotificationName:@"MapsTestingDidEndGuidanceOrStepping" object:WeakRetained];

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
  id v6 = objc_loadWeakRetained((id *)(a1 + 40));
  [v6 applyPendingActionIfNeeded];

  id v7 = objc_loadWeakRetained(v3);
  [v7 archiveMapsActivity];
}

id sub_1004159E0(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"MapsTestingDidEndGuidanceOrStepping" object:*(void *)(a1 + 32)];

  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  id v4 = *(void **)(a1 + 32);

  return [v4 applyPendingActionIfNeeded];
}

void sub_100415EC4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) platformController];
  [v2 popUntil:&stru_1012E9AA8];

  uint64_t v3 = [*(id *)(a1 + 32) baseActionCoordinator];
  id v4 = [v3 currentDirectionItem];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) baseActionCoordinator];
    [v5 viewControllerDoLastDirectionItem:0];
  }
}

BOOL sub_100415F7C(id a1, MapsSession *a2)
{
  uint64_t v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char isKindOfClass = 1;
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
  }

  return isKindOfClass & 1;
}

uint64_t sub_100415FE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10041606C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) navModeController];
  [v1 setShowFullScreenDirectionsList:1];
}

uint64_t sub_1004168BC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100416CD8(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40) == 0);
}

void sub_100417488(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) baseModeController];
  uint64_t v3 = [*(id *)(a1 + 40) topContext];

  if (v3 != v2)
  {
    id v6 = sub_1005762E4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 136315906;
      id v10 = "-[AppCoordinator _openSharedTrip:]_block_invoke";
      __int16 v11 = 2080;
      id v12 = "AppCoordinator.m";
      __int16 v13 = 1024;
      int v14 = 1234;
      __int16 v15 = 2080;
      uint64_t v16 = "chrome.topContext == baseModeController";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", (uint8_t *)&v9, 0x26u);
    }

    if (sub_100BB36BC())
    {
      id v7 = sub_1005762E4();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        id v8 = +[NSThread callStackSymbols];
        int v9 = 138412290;
        id v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v9, 0xCu);
      }
    }
  }
  id v4 = [*(id *)(a1 + 32) baseActionCoordinator];
  id v5 = [[HomeSharedTripsContentInjector alloc] initWithSharedTrip:*(void *)(a1 + 48)];
  [(HomeSharedTripsContentInjector *)v5 setBaseModeController:v2];
  [v4 setSidebarContentInjector:v5];
}

id sub_100417658(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [v4 lastObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  if (v7)
  {
    [v7 setSelectedTrip:*(void *)(a1 + 32)];
    id v8 = v4;
  }
  else
  {
    int v9 = [[IOSSharedTripsContext alloc] initWithInitialSelectedSharedTrip:*(void *)(a1 + 32)];
    id v10 = [*(id *)(a1 + 40) baseActionCoordinator];
    [(IOSSharedTripsContext *)v9 setDelegate:v10];

    __int16 v11 = [v4 firstObject];
    v13[0] = v11;
    v13[1] = v9;
    id v8 = +[NSArray arrayWithObjects:v13 count:2];
  }

  return v8;
}

void sub_100417A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100417A64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) groupIdentifier];
  id v5 = v4;
  if (v4
    && (v8[0] = _NSConcreteStackBlock,
        v8[1] = 3221225472,
        long long v8[2] = sub_100417B58,
        void v8[3] = &unk_1012E9B20,
        id v9 = v4,
        id v6 = [v3 indexOfObjectPassingTest:v8],
        v9,
        v6 == (id)0x7FFFFFFFFFFFFFFFLL))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained presentAlertForMissingSharedTrip:*(void *)(a1 + 32)];
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _openSharedTrip:*(void *)(a1 + 32)];
  }
}

id sub_100417B58(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 groupIdentifier];
  id v7 = [v6 isEqualToString:*(void *)(a1 + 32)];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

id sub_1004186F0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCenterCoordinate:1 animated:*(double *)(a1 + 40)];
}

void sub_100418704(uint64_t a1)
{
  id v3 = [[SearchResult alloc] initWithMapItem:*(void *)(a1 + 32)];
  uint64_t v2 = [*(id *)(a1 + 40) baseActionCoordinator];
  [v2 viewController:0 openSearchResult:v3];
}

void sub_100418778(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) baseActionCoordinator];
  uint64_t v2 = [v3 mapSelectionManager];
  [v2 selectMapItem:*(void *)(a1 + 40) animated:1];
}

void sub_100418A0C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) observedNavigationSession];
  id v3 = [v2 guidanceType];

  if (v3 == (id)2)
  {
    id v4 = *(void **)(a1 + 32);
    [v4 endNavigationAndReturnToRoutePlanning:1];
  }
}

void sub_10041A624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10041A640(uint64_t a1, void *a2)
{
  id v12 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v4 = [v12 photo];

    if (v4)
    {
      id v5 = *(void **)(a1 + 32);
      id v6 = [v12 photo];
      [v5 addPhoto:v6];

      id v7 = *(void **)(a1 + 40);
      id v8 = [v12 photo];
      id v9 = [v8 photo];
      id v10 = [v12 photo];
      __int16 v11 = [v10 _maps_diffableDataSourceIdentifier];
      [v7 addImage:v9 forIdentifier:v11];

      [v12 clearSelectedPhoto];
    }
    [WeakRetained _updateDoneButton];
  }
}

void sub_10041A8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10041A8DC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = [v6 firstObject];
    id v5 = [WeakRetained viewModel];
    [v5 setRapRecord:v4];

    [WeakRetained _updateSummarySection];
  }
}

void sub_10041B2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

NSCollectionLayoutSection *__cdecl sub_10041B300(id a1, int64_t a2, NSCollectionLayoutEnvironment *a3)
{
  id v3 = a3;
  id v4 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
  id v5 = +[UIColor clearColor];
  [v4 setBackgroundColor:v5];

  [v4 setItemSeparatorHandler:&stru_1012E9C50];
  id v6 = +[NSCollectionLayoutSection sectionWithListConfiguration:v4 layoutEnvironment:v3];

  [v6 setContentInsets:0.0, 16.0, 10.0, 16.0];

  return (NSCollectionLayoutSection *)v6;
}

UIListSeparatorConfiguration *__cdecl sub_10041B3CC(id a1, NSIndexPath *a2, UIListSeparatorConfiguration *a3)
{
  id v4 = a2;
  id v5 = a3;
  [(UIListSeparatorConfiguration *)v5 setTopSeparatorVisibility:2];
  [(UIListSeparatorConfiguration *)v5 setBottomSeparatorVisibility:2];
  if ((id)[(NSIndexPath *)v4 section] == (id)2 && ![(NSIndexPath *)v4 row]) {
    [(UIListSeparatorConfiguration *)v5 setBottomSeparatorVisibility:1];
  }

  return v5;
}

void sub_10041B450(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained viewModel];
    id v3 = [v2 button];
    [v4 _performButtonAction:[v3 buttonAction]];

    id WeakRetained = v4;
  }
}

void sub_10041BC28(id a1)
{
  id v3 = +[UIApplication sharedMapsDelegate];
  id v1 = [v3 appCoordinator];
  uint64_t v2 = [v1 baseActionCoordinator];
  [v2 viewControllerShowReports:0 fromEntryPoint:713];
}

void sub_10041BCA0(id a1)
{
  id v3 = +[UIApplication sharedMapsDelegate];
  id v1 = [v3 appCoordinator];
  uint64_t v2 = [v1 baseActionCoordinator];
  [v2 viewControllerShowReports:0 fromEntryPoint:713];
}

void sub_10041BF7C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10041BF98(id a1, id a2, id a3)
{
}

id sub_10041BFA8(uint64_t a1)
{
  return [*(id *)(a1 + 32) startAnimating];
}

void sub_10041BFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) stopAnimating];
    if (a3)
    {
      id v6 = sub_1009A038C();
      [WeakRetained presentViewController:v6 animated:1 completion:0];
    }
    else
    {
      id v7 = +[RAPAcknowledgementOptions defaultOptions];
      id v8 = +[NSBundle mainBundle];
      id v9 = [v8 localizedStringForKey:@"[RAP] Button Title for the Thank You screen" value:@"localized string not found" table:0];
      [v7 setPrimaryButtonTitle:v9];

      id v10 = [UGCCommunityAcknowledgementViewController alloc];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_10041C154;
      _OWORD v15[3] = &unk_1012E5D58;
      uint64_t v11 = *(void *)(a1 + 40);
      void v15[4] = WeakRetained;
      v15[5] = v11;
      id v12 = [(UGCCommunityAcknowledgementViewController *)v10 initWithOptions:v7 completion:v15];
      __int16 v13 = [(UGCCommunityAcknowledgementViewController *)v12 navigationItem];
      [v13 setHidesBackButton:1];

      int v14 = [WeakRetained navigationController];
      [v14 pushViewController:v12 animated:1];

      +[RAPAnalyticsManager captureRAPSendActionFromReport:*(void *)(*(void *)(a1 + 40) + 24)];
    }
  }
}

id sub_10041C154(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(*(void *)(a1 + 40) + 24) previousFeedbackID];
  [v2 _setRAPRecordAsInReviewWithReportID:v3];

  id v4 = *(void **)(a1 + 32);

  return _[v4 _dismissAndOpenReportsHome];
}

void sub_10041F530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

BOOL sub_10041F54C(id a1)
{
  id v1 = +[MKMapService sharedService];
  [v1 captureUserAction:18 onTarget:637 eventValue:0];

  return 1;
}

void sub_10041F594(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [v5 rideOptionIndex];
  id v7 = *(void **)(a1 + 32);
  id v8 = [v5 actionSheetTitle];
  if (v8)
  {
    [v7 addObject:v8];
  }
  else
  {
    id v9 = +[NSNull null];
    [v7 addObject:v9];
  }
  id v10 = *(void **)(a1 + 40);
  uint64_t v11 = [v5 actionSheetArtworks];
  id v12 = [v11 firstObject];
  if (v12)
  {
    __int16 v13 = [v5 actionSheetArtworks];
    int v14 = [v13 firstObject];
    [v10 addObject:v14];
  }
  else
  {
    __int16 v13 = +[NSNull null];
    [v10 addObject:v13];
  }

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_10041F7A0;
  void v19[3] = &unk_1012E9D68;
  __int16 v15 = *(void **)(a1 + 48);
  id v20 = *(id *)(a1 + 56);
  id v24 = v6;
  id v23 = *(id *)(a1 + 72);
  id v21 = *(id *)(a1 + 64);
  id v16 = v5;
  id v22 = v16;
  uint64_t v17 = objc_retainBlock(v19);
  [v15 addObject:v17];

  id v18 = [v16 rideOptionIndex];
  if (v18 == [*(id *)(a1 + 56) selectedRideOptionIndex]) {
    *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = a3;
  }
}

void sub_10041F7A0(uint64_t a1)
{
  id v9 = [*(id *)(a1 + 32) transitLineForRideOption:*(void *)(a1 + 64)];
  uint64_t v2 = [*(id *)(a1 + 32) composedRoute];
  id v3 = [v2 segments];
  id v4 = [v3 indexOfObject:*(void *)(a1 + 32)];

  [*(id *)(a1 + 32) setSelectedRideOptionIndex:*(void *)(a1 + 64)];
  id v5 = +[MNNavigationService sharedService];
  [v5 setRideIndex:*(void *)(a1 + 64) forSegmentIndex:v4];

  id v6 = +[MKMapService sharedService];
  id v7 = +[GEOPlaceActionDetails actionDetailsWithMapItem:timestamp:resultIndex:targetID:](GEOPlaceActionDetails, "actionDetailsWithMapItem:timestamp:resultIndex:targetID:", 0, *(unsigned int *)(a1 + 64), [v9 muid], 0.0);
  [v6 captureUserAction:1032 onTarget:637 eventValue:0 placeActionDetails:v7];

  uint64_t v8 = *(void *)(a1 + 56);
  if (v8) {
    (*(void (**)(uint64_t, void, void, id))(v8 + 16))(v8, *(void *)(a1 + 40), *(void *)(a1 + 32), [*(id *)(a1 + 48) rideOptionIndex]);
  }
}

void sub_10041F8F8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  id v7 = v5;
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) == a3)
  {
    [v5 _setChecked:1];
    id v6 = v7;
  }
  [*(id *)(a1 + 32) addAction:v6];
}

void sub_100420810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100420828(uint64_t a1, void *a2)
{
}

void sub_100420838(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_10057708C();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "No view model to return with error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100420A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100420AA8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v6)
    {
      uint64_t v8 = sub_10057708C();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v16 = 138412290;
        id v17 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Failed Sundew call when attempting to fetch with error %@", (uint8_t *)&v16, 0xCu);
      }

      uint64_t v9 = +[Result resultWithError:v6];
      id v10 = (void *)WeakRetained[11];
      WeakRetained[11] = v9;
    }
    else
    {
      id v11 = objc_alloc((Class)MUPlaceUserAttributionViewModel);
      id v12 = [v5 attributionName];
      id v13 = [v11 initWithAttributionName:v12];
      int v14 = +[Result resultWithValue:v13];
      [WeakRetained setUserAttributionResult:v14];

      __int16 v15 = [WeakRetained photoGalleryViewController];
      [v15 reloadUserAttribution];
    }
  }
}

id sub_100420F9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setPhotoGalleryViewController:0];
}

void sub_100423230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v11 - 144));
  os_activity_scope_leave((os_activity_scope_state_t)(v11 - 160));
  _Unwind_Resume(a1);
}

void sub_10042326C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v8.opaque[0] = 0;
  v8.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v8);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _handleResponseWithHandler:*(void *)(a1 + 48) result:v3];
  }
  else
  {
    id v6 = sub_100576F5C();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}@] Underlying task completed, but waypoint task no longer exists", buf, 0xCu);
    }
  }
  os_activity_scope_leave(&v8);
}

void sub_100423368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100423384(uint64_t a1, void *a2)
{
  id v3 = a2;
  v9.opaque[0] = 0;
  v9.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v9);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v5 = sub_100576F5C();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (WeakRetained)
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] Underlying task requested client resolution", buf, 0xCu);
    }

    [WeakRetained _resolveItem:v3 traits:*(void *)(a1 + 48) completion:*(void *)(a1 + 56) networkActivityHandler:*(void *)(a1 + 64)];
  }
  else
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v11 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] Underlying task requested client resolution, but waypoint task no longer exists", buf, 0xCu);
    }
  }
  os_activity_scope_leave(&v9);
}

void sub_1004234C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1004235B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100423BB8(uint64_t a1, void *a2)
{
  id v7 = a2;
  if (v7)
  {
    id v3 = [objc_alloc((Class)GEOLocation) initWithCLLocation:v7];
    id v4 = [objc_alloc((Class)GEOComposedWaypoint) initWithLocation:v3 isCurrentLocation:1];
    uint64_t v5 = *(void *)(a1 + 32);
    +[Result resultWithValue:v4];
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 32);
    GEOErrorDomain();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = +[NSError errorWithDomain:v3 code:-8 userInfo:0];
    +[Result resultWithError:v4];
  BOOL v6 = };
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
}

void sub_100423E08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100423E2C(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 mapItem];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) copy];
    [v4 clearKnownClientResolvedTypes];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    BOOL v6 = [v8 mapItem];
    [v8 coordinate];
    [WeakRetained _loadWaypointWithCorrectedMapItem:v6 coordinate:*(void *)(a1 + 40) handler:v4 traits:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 40);
    GEOErrorDomain();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    id WeakRetained = +[NSError errorWithDomain:v4 code:-8 userInfo:0];
    BOOL v6 = +[Result resultWithError:WeakRetained];
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v6);
  }
}

void sub_100424098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004240BC(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  BOOL v6 = v5;
  if (v5)
  {
    uint64_t v7 = [v5 mapItem];
  }
  else
  {
    uint64_t v7 = 0;
  }
  if ([*(id *)(a1 + 32) hasSequenceNumber]) {
    [*(id *)(a1 + 32) setSequenceNumber:[*(id *)(a1 + 32) sequenceNumber] + 1];
  }
  id v8 = [*(id *)(a1 + 32) copy];
  [v8 clearKnownClientResolvedTypes];
  if (v7)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained _loadWaypointWithMapItem:v7 handler:*(void *)(a1 + 40) traits:v8 networkActivityHandler:*(void *)(a1 + 48)];
  }
  else if (v13)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained _loadWaypointWithAddress:v13 handler:*(void *)(a1 + 40) traits:v8 networkActivityHandler:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 40);
    id WeakRetained = GEOErrorDomain();
    uint64_t v11 = +[NSError errorWithDomain:WeakRetained code:-8 userInfo:0];
    id v12 = +[Result resultWithError:v11];
    (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v12);
  }
}

void sub_100424B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_100425604(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_100425638(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained) {
    goto LABEL_24;
  }
  id v3 = sub_100021338();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Action Button Tapped in Maps Home", buf, 2u);
  }

  unsigned int v4 = [*(id *)(*(void *)(a1 + 32) + 48) suggestionType];
  if (v4 - 1 < 2 || v4 == 4)
  {
    if ([*(id *)(*(void *)(a1 + 32) + 48) canPresentEducationScreen])
    {
      BOOL v6 = [WeakRetained transitPayActionDelegate];
      uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 48) educationScreenAssetURLs];
      id v8 = [*(id *)(*(void *)(a1 + 32) + 48) educationScreenTitle];
      os_activity_scope_state_s v9 = [*(id *)(*(void *)(a1 + 32) + 48) educationScreenText];
      [v6 presentEducationScreenWithAssetURLs:v7 titleText:v8 bodyText:v9];

LABEL_14:
      uint64_t v11 = [*(id *)(*(void *)(a1 + 32) + 48) analyticsValue];
      +[GEOAPPortal captureUserAction:308 target:8 value:v11];
LABEL_20:

      goto LABEL_21;
    }
    uint64_t v11 = sub_100021338();
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    LOWORD(v14) = 0;
    id v12 = "Cannot present education screen because canPresentEducationScreen returned NO";
    id v13 = (uint8_t *)&v14;
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, v12, v13, 2u);
    goto LABEL_20;
  }
  if (v4 == 3)
  {
    uint64_t v10 = [*(id *)(*(void *)(a1 + 32) + 48) paymentMethods];

    if (v10)
    {
      [WeakRetained[9] markActionExecuted:1];
      BOOL v6 = [WeakRetained transitPayActionDelegate];
      uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 48) paymentMethods];
      [v6 presentWalletDCIViewControllerWithTransitSystems:v7 callbackDelegate:*(void *)(a1 + 32)];
      goto LABEL_14;
    }
    uint64_t v11 = sub_100021338();
    if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    *(_WORD *)__int16 v15 = 0;
    id v12 = "Cannot present DCI flow because modelData.paymentMethod is nil";
    id v13 = v15;
    goto LABEL_19;
  }
LABEL_21:
  if (objc_msgSend(WeakRetained[6], "suggestionType", v14) == 1
    || [WeakRetained[6] suggestionType] == 2)
  {
    [WeakRetained[4] handleManualTipDismissForMarket:WeakRetained[7] suggestionType:[WeakRetained[6] suggestionType] sinkType:2];
    [WeakRetained setShowFeature:0];
    [WeakRetained _notifyObservers];
  }
LABEL_24:
}

void sub_1004258CC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 48) analyticsValue];
  +[GEOAPPortal captureUserAction:307 target:8 value:v2];

  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v4 = sub_100021338();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = [WeakRetained[6] title];
      BOOL v6 = [WeakRetained[6] subtitle];
      int v7 = 138412546;
      id v8 = v5;
      __int16 v9 = 2112;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "TipKit displayed in Maps Home with\nTitle: %@\nSubtitle: %@\n", (uint8_t *)&v7, 0x16u);
    }
    [WeakRetained[4] handleTipDisplayForMarket:WeakRetained[7] tipType:[WeakRetained[6] suggestionType] sinkType:2];
  }
}

void sub_100425A14(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 48) analyticsValue];
  +[GEOAPPortal captureUserAction:306 target:8 value:v2];

  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v4 = sub_100021338();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "TipKit dismissed in Maps Home", v5, 2u);
    }

    [WeakRetained[4] handleManualTipDismissForMarket:WeakRetained[7] suggestionType:[WeakRetained[6] suggestionType] sinkType:2];
    [WeakRetained setShowFeature:0];
    [WeakRetained _notifyObservers];
  }
}

void sub_100425BA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained updateFeatureEligibility];
    id WeakRetained = v2;
  }
}

void sub_100425BEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = [[TransitPayFeatureDiscoveryMetadataStore alloc] initWithTouristStatus:*(unsigned __int8 *)(a1 + 40)];
    id v3 = (void *)WeakRetained[4];
    WeakRetained[4] = v2;
  }
}

void sub_100425FEC(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v4 = WeakRetained;
  if (WeakRetained)
  {
    [*((id *)WeakRetained + 3) stopLocationUpdates];
    uint64_t v39 = 0;
    id v40 = &v39;
    uint64_t v41 = 0x3032000000;
    long long v42 = sub_100103BAC;
    long long v43 = sub_100104660;
    id v44 = 0;
    uint64_t v35 = 0;
    CFStringRef v36 = &v35;
    uint64_t v37 = 0x2020000000;
    char v38 = 0;
    uint64_t v31 = 0;
    double v32 = &v31;
    uint64_t v33 = 0x2020000000;
    char v34 = 0;
    id v5 = dispatch_group_create();
    dispatch_group_enter(v5);
    BOOL v6 = (void *)v4[8];
    uint64_t v7 = *(void *)(a1 + 32);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1004264CC;
    v26[3] = &unk_1012E9FB8;
    long long v29 = &v35;
    id v30 = &v31;
    id v28 = &v39;
    v26[4] = v4;
    id v8 = v5;
    __int16 v27 = v8;
    [v6 cachedPolygonForLocation:v7 withCompletion:v26];
    GEOConfigGetDouble();
    dispatch_time_t v10 = dispatch_time(0, (uint64_t)(v9 * 1000000000.0));
    dispatch_group_wait(v8, v10);
    if (!*((unsigned char *)v36 + 24))
    {
      dispatch_group_enter(v8);
      uint64_t v11 = sub_100021338();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Found no payment polygon mapItem in the cache. Calling the service.", buf, 2u);
      }

      id v12 = (void *)v4[2];
      uint64_t v13 = *(void *)(a1 + 32);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      void v20[2] = sub_1004265C0;
      v20[3] = &unk_1012E9FE0;
      objc_copyWeak(&v25, v2);
      id v23 = &v39;
      id v21 = *(id *)(a1 + 32);
      id v24 = &v31;
      id v22 = v8;
      [v12 paymentPolygonsAtLocation:v13 completion:v20];

      objc_destroyWeak(&v25);
    }
    dispatch_group_wait(v8, v10);
    if (v40[5])
    {
      if (!*((unsigned char *)v32 + 24))
      {
LABEL_18:

        _Block_object_dispose(&v31, 8);
        _Block_object_dispose(&v35, 8);
        _Block_object_dispose(&v39, 8);

        goto LABEL_19;
      }
      if (v4[5])
      {
        [v4 fetchTransitMessageFromPassManagerUsingPolygon:];
        goto LABEL_18;
      }
      os_log_type_t v19 = sub_100021338();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 136446978;
        long long v46 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/Feature Discovery/Sources/TransitPayFeatureDiscoverySource.m";
        __int16 v47 = 1024;
        int v48 = 357;
        __int16 v49 = 2082;
        id v50 = "-[TransitPayFeatureDiscoverySource didUpdateLocation:]_block_invoke_2";
        __int16 v51 = 2082;
        __int16 v52 = "strongSelf->_passManager == nil";
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. passManager is nil. Something has gone very wrong.", buf, 0x26u);
      }

      uint64_t v14 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 136446978;
        long long v46 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/Feature Discovery/Sources/TransitPayFeatureDiscoverySource.m";
        __int16 v47 = 1024;
        int v48 = 357;
        __int16 v49 = 2082;
        id v50 = "-[TransitPayFeatureDiscoverySource didUpdateLocation:]_block_invoke";
        __int16 v51 = 2082;
        __int16 v52 = "strongSelf->_passManager == nil";
        __int16 v15 = "At %{public}s:%d, %{public}s forbids: %{public}s. passManager is nil. Something has gone very wrong.";
        int v16 = v14;
        os_log_type_t v17 = OS_LOG_TYPE_FAULT;
        uint32_t v18 = 38;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v14 = sub_100021338();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        __int16 v15 = "Could not fetch a payment polygon mapItem from either the cache or the service";
        int v16 = v14;
        os_log_type_t v17 = OS_LOG_TYPE_ERROR;
        uint32_t v18 = 2;
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v16, v17, v15, buf, v18);
      }
    }

    goto LABEL_18;
  }
LABEL_19:
}

void sub_10042647C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1004264CC(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v5 = v4;
  if (v4 && [v4 conformsToProtocol:&OBJC_PROTOCOL___GEOMapItem])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    BOOL v6 = *(void **)(a1 + 32);
    id v8 = v5;
    uint64_t v7 = +[NSArray arrayWithObjects:&v8 count:1];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = [v6 _hasPaymentAndSuggestionsData:v7 error:0];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1004265C0(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    uint64_t v7 = [v10 firstObject];
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
    double v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    [WeakRetained[8] cachePolygon:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) forLocation:*(void *)(a1 + 32)];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [WeakRetained _hasPaymentAndSuggestionsData:v10 error:v5];
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
  }
}

void sub_100426850(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setShowFeature:0];
    [v2 _notifyObservers];
    id WeakRetained = v2;
  }
}

void sub_100426998(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_initWeak(&location, *(id *)(a1 + 32));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100426A60;
  block[3] = &unk_1012E6690;
  objc_copyWeak(&v8, &location);
  id v7 = v4;
  id v5 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void sub_100426A60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = *(void **)(a1 + 32);
    if (!v4)
    {
      id v8 = sub_100021338();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Got callback into MapsHome from TransitPassManager and modelData is nil.", buf, 2u);
      }

      double v9 = (void *)v3[6];
      v3[6] = 0;

      BOOL v6 = v3;
      uint64_t v7 = 0;
      goto LABEL_9;
    }
    objc_storeStrong((id *)WeakRetained + 6, v4);
    id v5 = (void *)v3[4];
    if (v5)
    {
      if (objc_msgSend(v5, "shouldDisplayTipInMarket:tipType:sinkType:", v3[7], objc_msgSend(*(id *)(a1 + 32), "suggestionType"), 2))
      {
        BOOL v6 = v3;
        uint64_t v7 = 1;
LABEL_9:
        [v6 setShowFeature:v7];
        [v3 _notifyObservers];
        goto LABEL_16;
      }
      id v10 = sub_100021338();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        __int16 v15 = 0;
        uint64_t v11 = "User has either dismissed the tip recently or has seen the tip more than the set threshold in Maps home";
        id v12 = (uint8_t *)&v15;
        uint64_t v13 = v10;
        os_log_type_t v14 = OS_LOG_TYPE_INFO;
        goto LABEL_14;
      }
    }
    else
    {
      id v10 = sub_100021338();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        __int16 v16 = 0;
        uint64_t v11 = "dataStore is nil. Something has gone very wrong.";
        id v12 = (uint8_t *)&v16;
        uint64_t v13 = v10;
        os_log_type_t v14 = OS_LOG_TYPE_ERROR;
LABEL_14:
        _os_log_impl((void *)&_mh_execute_header, v13, v14, v11, v12, 2u);
      }
    }
  }
LABEL_16:
}

void sub_100426D34(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained[4] handleManualTipDismissForMarket:WeakRetained[7] tipType:3 sinkType:2];
    [v2 setShowFeature:0];
    [v2 _notifyObservers];
    id WeakRetained = v2;
  }
}

id sub_1004273E0(uint64_t a1)
{
  double v2 = floor(*(double *)(a1 + 48));
  [*(id *)(*(void *)(a1 + 32) + 16) frame];
  BOOL v4 = v2 > ceil(v3);
  id v5 = *(void **)(*(void *)(a1 + 32) + 16);

  return [v5 setScrollEnabled:v4];
}

id sub_100427C80(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) directionsAction];

  if (v4 == v3)
  {
    id v5 = [*(id *)(a1 + 32) addStopAction];
  }
  else
  {
    id v5 = v3;
  }
  BOOL v6 = v5;

  return v6;
}

void sub_1004280CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

id sub_1004280F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v2 = [WeakRetained previewViewController];

  return v2;
}

id sub_10042813C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v2 = WeakRetained;
  if (WeakRetained)
  {
    *((unsigned char *)WeakRetained + 248) = 1;
    if (*((void *)WeakRetained + 30)) {
      uint64_t v3 = (void *)*((void *)WeakRetained + 30);
    }
    else {
      uint64_t v3 = &__NSArray0__struct;
    }
  }
  else
  {
    uint64_t v3 = &__NSArray0__struct;
  }
  id v4 = +[UIMenu menuWithTitle:&stru_101324E70 children:v3];

  return v4;
}

void sub_100428428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10042844C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[16]];
    id WeakRetained = v2;
  }
}

void sub_100428614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100428638(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[17]];
    id WeakRetained = v2;
  }
}

void sub_100428814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10042883C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[18]];
    id WeakRetained = v2;
  }
}

void sub_100428A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100428A40(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[19]];
    id WeakRetained = v2;
  }
}

void sub_100428C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100428C4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[21]];
    id WeakRetained = v2;
  }
}

void sub_100428E20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100428E44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[20]];
    id WeakRetained = v2;
  }
}

void sub_100429050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100429074(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[22]];
    id WeakRetained = v2;
  }
}

void sub_100429280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004292A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[23]];
    id WeakRetained = v2;
  }
}

void sub_100429480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004294A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v2 = WeakRetained;
    [WeakRetained performAction:WeakRetained[25]];
    id WeakRetained = v2;
  }
}

void sub_100429670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100429694(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = objc_loadWeakRetained(v1);
    [v2 performAction:WeakRetained[24]];
  }
}

void sub_100429CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  objc_destroyWeak(v31);
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100429D0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    id v6 = v3;
    id v7 = v6;
    if (isKindOfClass)
    {
      if (*(unsigned char *)(a1 + 40))
      {
        id v8 = [v6 identifier];
        unsigned int v9 = [v8 isEqualToString:@"_callAction"];

        if (v9)
        {
          id v10 = [v7 copy];

          [v10 setAttributes:0];
          objc_storeStrong(WeakRetained + 18, v10);
          id v7 = v10;
        }
      }
      if (*(unsigned char *)(a1 + 41))
      {
        uint64_t v11 = [v7 identifier];
        unsigned int v12 = [v11 isEqualToString:@"_webAction"];

        if (v12)
        {
          id v13 = [v7 copy];

          [v13 setAttributes:0];
          objc_storeStrong(WeakRetained + 19, v13);
          id v7 = v13;
        }
      }
      if (*(unsigned char *)(a1 + 42))
      {
        os_log_type_t v14 = [v7 identifier];
        unsigned int v15 = [v14 isEqualToString:@"_transitLineDirectionsAction"];

        if (v15)
        {
          id v16 = [v7 copy];

          [v16 setAttributes:0];
          objc_storeStrong(WeakRetained + 25, v16);
          id v7 = v16;
        }
      }
      os_log_type_t v17 = [v7 identifier];
      unsigned int v18 = [v17 isEqualToString:@"_directionsAction"];

      if (v18)
      {
        id v19 = [v7 copy];

        [v19 setAttributes:*(unsigned char *)(a1 + 43) == 0];
        objc_storeStrong(WeakRetained + 16, v19);
        id v7 = v19;
      }
      id v20 = [v7 identifier];
      unsigned int v21 = [v20 isEqualToString:@"_addStopAction"];

      if (v21)
      {
        id v22 = [v7 copy];

        [v22 setAttributes:*(unsigned char *)(a1 + 43) == 0];
        objc_storeStrong(WeakRetained + 17, v22);
        id v7 = v22;
      }
    }
  }
  else
  {
    id v7 = v3;
  }

  return v7;
}

id sub_100429F70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = &__NSArray0__struct;
  if (WeakRetained && WeakRetained[30]) {
    id v2 = (void *)WeakRetained[30];
  }
  id v3 = +[UIMenu menuWithTitle:&stru_101324E70 children:v2];

  return v3;
}

uint64_t sub_10042A098(uint64_t a1, void *a2)
{
  return [a2 isEqual:*(void *)(a1 + 32)] ^ 1;
}

void sub_10042A1B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(void *)(v2 + 24) && !*(void *)(v2 + 264)) {
    return;
  }
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3 == *(void *)(v2 + 144))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedCall:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 17073;
LABEL_17:

    +[GEOAPPortal captureUserAction:v5 target:*(unsigned int *)(*(void *)(a1 + 32) + 252) value:v9 placeActionDetails:*(void *)(*(void *)(a1 + 32) + 112)];
    goto LABEL_18;
  }
  if (v3 == *(void *)(v2 + 152))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedViewWebsiteFor:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 17079;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 176) || v3 == *(void *)(v2 + 184))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedShareLocationOf:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 17076;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 128))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedDirectionsTo:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 17074;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 136))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedDirectionsTo:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 291;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 168))
  {
    id v6 = objc_loadWeakRetained((id *)(v2 + 256));
    char v7 = objc_opt_respondsToSelector();

    uint64_t v8 = *(void *)(a1 + 32);
    if ((v7 & 1) == 0)
    {
      id v9 = 0;
      +[GEOAPPortal captureUserAction:17050 target:*(unsigned int *)(v8 + 252) value:0 placeActionDetails:*(void *)(v8 + 112)];
      goto LABEL_18;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(v8 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedDropPinAt:*(void *)(*(void *)(a1 + 32) + 16)];
    id v9 = 0;
    uint64_t v5 = 17050;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 160))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedRemoveDroppedPinOf:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 17053;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 192))
  {
    [*(id *)(v2 + 8) _maps_analyticsEventValue];
    id v9 = (id)objc_claimAutoreleasedReturnValue();
    [*(id *)(*(void *)(a1 + 32) + 8) set_maps_lineShouldZoomMapRegionOnSelection:1];
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedViewTransitLinesOnMap:*(void *)(*(void *)(a1 + 32) + 8)];
    uint64_t v5 = 17078;
    goto LABEL_17;
  }
  if (v3 == *(void *)(v2 + 200))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:*(void *)(a1 + 32) selectedDirectionsTo:*(void *)(*(void *)(a1 + 32) + 264)];
    id v9 = 0;
    uint64_t v5 = 17075;
    goto LABEL_17;
  }
  id v9 = 0;
  +[GEOAPPortal captureUserAction:17075 target:*(unsigned int *)(v2 + 252) value:0 placeActionDetails:*(void *)(v2 + 112)];
LABEL_18:
}

void *sub_10042A508(void *result)
{
  id v1 = result;
  uint64_t v2 = result[4];
  if (*(void *)(v2 + 24) || *(void *)(v2 + 264))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 256));
    [WeakRetained quickActionMenuPresenter:v1[4] selectedShowPlaceCard:*(void *)(v1[4] + 264)];

    +[GEOAPPortal captureUserAction:17077 target:*(unsigned int *)(v1[4] + 252) value:0 placeActionDetails:*(void *)(v1[4] + 112)];
    *(unsigned char *)(v1[4] + 224) = 0;
    id v4 = (void *)v1[4];
    return [v4 reset];
  }
  return result;
}

void sub_10042AE64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_10042AED4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  if (v1)
  {
    uint64_t v3 = (id *)(a1 + 40);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained setSearchResult:v1];

    id v6 = objc_loadWeakRetained(v3);
    uint64_t v5 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) mapItem];
    [v6 setResolvedMapItem:v5];
  }
}

void sub_10042AF8C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v9 = a2;
  id v7 = a3;
  id v8 = a4;
  if (!v8) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a3);
  }
  if (!*(unsigned char *)(a1 + 56)) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10042B030(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _updateSearchResultWithMapItemIfNeeded:v4];

  id v6 = objc_loadWeakRetained(v3);
  [v6 setResolvedMapItem:v4];

  id v7 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v7);
}

void sub_10042B0AC(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  id v5 = [v10 count];
  if (!a3 && v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v7 = [v10 firstObject];
    [WeakRetained _updateSearchResultWithMapItemIfNeeded:v7];

    id v8 = objc_loadWeakRetained((id *)(a1 + 40));
    id v9 = [v10 firstObject];
    [v8 setResolvedMapItem:v9];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10042B174(uint64_t a1, void *a2, uint64_t a3)
{
  id v14 = a2;
  id v5 = [v14 count];
  if (a3 || !v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    unsigned int v12 = [*(id *)(a1 + 32) mapItem];
    id v11 = WeakRetained;
    id v13 = v12;
  }
  else
  {
    id WeakRetained = [v14 firstObject];
    id v7 = MKLocalizedStringForCurrentLocation();
    [WeakRetained setName:v7];

    id v8 = objc_loadWeakRetained((id *)(a1 + 48));
    [v8 _updateSearchResultWithMapItemIfNeeded:WeakRetained];

    id v9 = objc_loadWeakRetained((id *)(a1 + 48));
    id v10 = [v9 searchResult];
    [v10 setType:4];

    id v11 = objc_loadWeakRetained((id *)(a1 + 48));
    unsigned int v12 = v11;
    id v13 = WeakRetained;
  }
  [v11 setResolvedMapItem:v13];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10042B744(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10042B760(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
  if (*(void *)(a1 + 40) == *(void *)(*(void *)(a1 + 32) + 8))
  {
    id v2 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) mapItem];
    [*(id *)(a1 + 32) setResolvedMapItem:v2];
  }
}

void sub_10042B7F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a3);
  if (!*(unsigned char *)(a1 + 56)) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10042BA58(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (!a3 && [v6 count])
  {
    [*(id *)(a1 + 32) setSearchResult:0];
    id v5 = [v6 firstObject];
    [*(id *)(a1 + 32) setResolvedMapItem:v5];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10042BDA8(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3 && a1[6] == *(void *)(a1[4] + 48))
  {
    id v6 = +[MKLocationManager sharedLocationManager];
    unsigned int v7 = [v6 isAuthorizedForPreciseLocation];

    if (v7)
    {
      id v8 = +[MKMapService sharedService];
      uint64_t v9 = a1[5];
      [v5 coordinate];
      id v10 = [v8 ticketForNearestTransitStation:v9 coordinate:0 traits:];

      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_10042BEC4;
      v12[3] = &unk_1012EA1C0;
      uint64_t v11 = a1[6];
      void v12[4] = a1[4];
      v12[5] = v11;
      [v10 submitWithHandler:v12 networkActivity:0];
    }
  }
}

void sub_10042BEC4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (!v5 && *(void *)(a1 + 40) == *(void *)(*(void *)(a1 + 32) + 48) && [v9 count])
  {
    id v6 = [SearchResult alloc];
    unsigned int v7 = [v9 firstObject];
    id v8 = [(SearchResult *)v6 initWithMapItem:v7];
    [*(id *)(a1 + 32) setSearchResult:v8];

    *(unsigned char *)(*(void *)(a1 + 32) + 208) = 1;
    [*(id *)(a1 + 32) updateActionEnableStates];
  }
}

BOOL sub_10042D9D8(id a1, id a2)
{
  id v2 = a2;
  objc_opt_class();
  BOOL v3 = (objc_opt_isKindOfClass() & 1) == 0 || [v2 _type] != (id)2;

  return v3;
}

uint64_t sub_10042DB04(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    if ([v4 _type] == (id)1
      && ([v4 mapItem],
          id v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = [v5 _hasMUID],
          v5,
          v6))
    {
      unsigned int v7 = *(void **)(a1 + 32);
      id v8 = [v4 mapItem];
      id v9 = +[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", [v8 _muid]);
      uint64_t v10 = (uint64_t)[v7 containsObject:v9];
    }
    else
    {
      uint64_t v10 = 1;
    }
  }
  else
  {
    uint64_t v10 = 1;
  }

  return v10;
}

void sub_10042DC54(id a1)
{
  id v1 = objc_alloc_init((Class)NSMeasurementFormatter);
  id v2 = (void *)qword_10160EC98;
  qword_10160EC98 = (uint64_t)v1;

  id v3 = [(id)qword_10160EC98 numberFormatter];
  [v3 setMaximumFractionDigits:0];

  [(id)qword_10160EC98 setUnitStyle:2];
  id v4 = (void *)qword_10160EC98;

  [v4 setUnitOptions:1];
}

id sub_10042F2EC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 identifierCache];
  id v5 = [v4 identifierForObject:v3];

  return v5;
}

TwoLinesCollectionOutlineCellModel *sub_10042F358(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = [SidebarOutlineCellBackgroundModel alloc];
  id v8 = [*(id *)(a1 + 32) delegate];
  id v9 = [v8 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 32)];
  uint64_t v10 = [*(id *)(a1 + 32) delegate];
  id v11 = [v10 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 32)];
  unsigned int v12 = [*(id *)(a1 + 32) delegate];
  id v13 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v7, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", 0, 0, 1, v9, v11, [v12 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 32)]);

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v14 = [[TwoLineOutlineCellButtonAccessoryModel alloc] initWithAccessoryType:1 visibility:0 delegate:*(void *)(a1 + 32)];
    unsigned int v15 = [TwoLinesSharedTripSummaryOutlineCellModel alloc];
    uint64_t v104 = v14;
    id v16 = +[NSArray arrayWithObjects:&v104 count:1];
    os_log_type_t v17 = [(TwoLinesSharedTripSummaryOutlineCellModel *)v15 initWithSharedTripSummary:v5 accessoryModels:v16 backgroundModel:v13];
    goto LABEL_43;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v16 = (TwoLineOutlineCellButtonAccessoryModel *)v5;
    if ([(TwoLineOutlineCellButtonAccessoryModel *)v16 type] == (id)21 || GEOConfigGetBOOL())
    {
      unsigned int v18 = [[TwoLinesOutlineCellUGCRatingRequestAccessoryModel alloc] initWithDelegate:*(void *)(a1 + 32)];
      int v103 = v18;
      id v14 = +[NSArray arrayWithObjects:&v103 count:1];
    }
    else
    {
      id v14 = 0;
    }
    os_log_type_t v17 = [[TwoLinesMapsSuggestionsEntryOutlineCellModel alloc] initWithMapsSuggestionsEntry:v16 accessoryModels:v14 backgroundModel:v13];
    goto LABEL_43;
  }
  unint64_t v89 = v13;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v90 = (TwoLineOutlineCellButtonAccessoryModel *)v5;
    id v19 = *(void **)(a1 + 40);
    id v20 = [v6 topIdentifierPath];
    unsigned int v85 = [v19 containsObject:v20];

    long long v98 = 0u;
    long long v99 = 0u;
    long long v96 = 0u;
    long long v97 = 0u;
    id v21 = *(id *)(a1 + 40);
    id v22 = [v21 countByEnumeratingWithState:&v96 objects:v102 count:16];
    if (v22)
    {
      id v23 = v22;
      uint64_t v24 = *(void *)v97;
      do
      {
        for (uint64_t i = 0; i != v23; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v97 != v24) {
            objc_enumerationMutation(v21);
          }
          unsigned int v26 = *(void **)(*((void *)&v96 + 1) + 8 * i);
          __int16 v27 = [v6 topIdentifierPath];
          if ([v26 hasPrefix:v27])
          {
            id v28 = [v26 length];
            id v29 = [v6 depth];

            if (v28 > v29)
            {

              uint64_t v45 = 1;
              goto LABEL_37;
            }
          }
          else
          {
          }
        }
        id v23 = [v21 countByEnumeratingWithState:&v96 objects:v102 count:16];
      }
      while (v23);
    }

    if (v85)
    {
      uint64_t v45 = 0;
LABEL_37:
      long long v46 = [*(id *)(a1 + 32) expandedIdentifierPaths];
      __int16 v47 = [v6 topIdentifierPath];
      unsigned int v48 = [v46 containsObject:v47];

      __int16 v49 = [(TwoLineOutlineCellButtonAccessoryModel *)v90 content];
      BOOL v50 = [v49 count] != 0;

      uint64_t v87 = [SidebarOutlineCellBackgroundModel alloc];
      if ((v48 & v50) != 0) {
        uint64_t v51 = 2;
      }
      else {
        uint64_t v51 = 0;
      }
      __int16 v52 = [*(id *)(a1 + 32) delegate];
      id v53 = [v52 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 32)];
      id v54 = [*(id *)(a1 + 32) delegate];
      id v55 = [v54 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 32)];
      uint64_t v56 = [*(id *)(a1 + 32) delegate];
      uint64_t v57 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v87, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", v45, 0, v51, v53, v55, [v56 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 32)]);
    }
    else
    {
      uint64_t v57 = v89;
    }
    id v16 = [[TwoLineOutlineCellButtonAccessoryModel alloc] initWithAccessoryType:2 visibility:1 delegate:*(void *)(a1 + 32)];
    uint64_t v62 = +[NSBundle mainBundle];
    long long v63 = [v62 localizedStringForKey:@"[Proactive Tray] Add Shared Guide" value:@"localized string not found" table:0];

    uint64_t v64 = [TwoLinesOutlineCellActionModel alloc];
    id v65 = +[NSBundle mainBundle];
    uint64_t v66 = [v65 localizedStringForKey:@"[Proactive Tray] Discard" value:@"localized string not found" table:0];
    uint64_t v67 = [(TwoLinesOutlineCellActionModel *)v64 initWithButtonTitle1:v63 buttonTitle2:v66 delegate:*(void *)(a1 + 32)];

    uint64_t v68 = [TwoLinesCollectionOutlineCellModel alloc];
    unint64_t v101 = v16;
    uint64_t v69 = +[NSArray arrayWithObjects:&v101 count:1];
    id v14 = v90;
    uint64_t v58 = [(TwoLinesCollectionOutlineCellModel *)v68 initWithCollection:v90 accessoryModels:v69 backgroundModel:v57 actionModel:v67];

    id v13 = v57;
    goto LABEL_44;
  }
  id v30 = [v6 parentItem];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    uint64_t v91 = [v6 parentItem];
    double v32 = [v6 topIdentifierPath];
    id v16 = [v32 identifierPathByRemovingLastIdentifier];

    uint64_t v33 = *(void **)(a1 + 40);
    char v34 = [v6 topIdentifierPath];
    unsigned int v86 = [v33 containsObject:v34];

    unsigned int v83 = [*(id *)(a1 + 40) containsObject:v16];
    long long v92 = 0u;
    long long v93 = 0u;
    long long v94 = 0u;
    long long v95 = 0u;
    id v35 = *(id *)(a1 + 40);
    id v36 = [v35 countByEnumeratingWithState:&v92 objects:v100 count:16];
    if (v36)
    {
      id v37 = v36;
      uint64_t v38 = *(void *)v93;
      do
      {
        for (j = 0; j != v37; j = (char *)j + 1)
        {
          if (*(void *)v93 != v38) {
            objc_enumerationMutation(v35);
          }
          id v40 = *(void **)(*((void *)&v92 + 1) + 8 * (void)j);
          if ([v40 hasPrefix:v16])
          {
            id v41 = [v40 length];
            if (v41 >= [v6 depth])
            {
              uint64_t v42 = [v6 topIdentifierPath];
              if (v40 == (void *)v42)
              {
              }
              else
              {
                long long v43 = (void *)v42;
                unsigned __int8 v44 = [v40 isEqual:v42];

                if ((v44 & 1) == 0)
                {

                  unsigned int v60 = v86;
                  goto LABEL_49;
                }
              }
            }
          }
        }
        id v37 = [v35 countByEnumeratingWithState:&v92 objects:v100 count:16];
      }
      while (v37);
    }

    unsigned int v60 = v86;
    if ((v86 | v83) == 1)
    {
LABEL_49:
      if (v91)
      {
        id v61 = [(TwoLineOutlineCellButtonAccessoryModel *)v91 content];
      }
      else
      {
        id v61 = &__NSArray0__struct;
      }
      id v70 = [v61 lastObject];
      uint64_t v71 = v70;
      uint64_t v88 = v61;
      if (v70 == v5)
      {
        uint64_t v73 = 4;
      }
      else
      {
        unsigned int v72 = [v70 isEqual:v5];
        uint64_t v73 = 3;
        if (v72) {
          uint64_t v73 = 4;
        }
      }
      uint64_t v80 = v73;

      uint64_t v74 = [SidebarOutlineCellBackgroundModel alloc];
      uint64_t v75 = 2;
      if (v60) {
        uint64_t v75 = 0;
      }
      uint64_t v84 = v75;
      id v76 = [*(id *)(a1 + 32) delegate];
      unsigned int v82 = [v76 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 32)];
      uint64_t v77 = [*(id *)(a1 + 32) delegate];
      id v78 = [v77 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 32)];
      id v79 = [*(id *)(a1 + 32) delegate];
      id v13 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v74, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", v84, 0, v81, v82, v78, [v79 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 32)]);
    }
    else
    {
      id v13 = v89;
    }
    objc_opt_class();
    id v14 = v91;
    if (objc_opt_isKindOfClass())
    {
      os_log_type_t v17 = [[TwoLinesCollectionMapItemOutlineCellModel alloc] initWithMapItem:v5 currentLocation:*(void *)(a1 + 48) distanceUnit:*(void *)(a1 + 56) backgroundModel:v13];
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        uint64_t v58 = 0;
        goto LABEL_44;
      }
      os_log_type_t v17 = [v5 cellModelWithBackgroundModel:v13];
    }
LABEL_43:
    uint64_t v58 = (TwoLinesCollectionOutlineCellModel *)v17;
LABEL_44:

    goto LABEL_45;
  }
  uint64_t v58 = 0;
LABEL_45:

  return v58;
}

id sub_10042FC5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = [*(id *)(a1 + 32) _childItemsInCollection:v3];
  }
  else
  {
    id v4 = &__NSArray0__struct;
  }

  return v4;
}

id sub_10042FCD8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a3;
  id v5 = [v3 expandedIdentifierPaths];
  id v6 = [v4 topIdentifierPath];

  id v7 = [v5 containsObject:v6];
  return v7;
}

void sub_10042FF3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10042FF7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_1004308C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1004308EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v3 = +[NSArray arrayWithObjects:&v4 count:1];
    [WeakRetained beginDeletions:v3];
  }
}

void sub_100430988(uint64_t a1, char a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && (a2 & 1) == 0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v5 = +[NSArray arrayWithObjects:&v6 count:1];
    [WeakRetained endFailedDeletions:v5 error:0];
  }
}

void sub_100430BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100430BF0(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v4 = +[NSArray arrayWithObjects:&v6 count:1];
      [WeakRetained beginDeletions:v4];

      id v5 = +[MSPSharedTripService sharedInstance];
      [v5 blockSharedTripWithIdentifier:*(void *)(a1 + 40)];
    }
  }
}

void sub_100431004(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Error saving shared collection: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100432458(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  id v5 = [v10 stationIdentifier];
  uint64_t v6 = *(void *)(a1 + 32);
  if (v5 == *(id *)(v6 + 48))
  {
    id v7 = [v10 departure];
    id v8 = [v7 scheduledDepartureDate];

    if (!v8 || (id v9 = *(void **)(a1 + 40)) == 0 || [v9 isEqualToDate:v8]) {
      *(void *)(*(void *)(a1 + 32) + 64) = a3;
    }
  }
  else if (*(unsigned char *)(v6 + 8) && (v5 == *(id *)(v6 + 24) || v5 == *(id *)(v6 + 32) || v5 == *(id *)(v6 + 40)))
  {
    *(void *)(v6 + 56) = a3;
  }
  if ([v10 isHidden]) {
    [*(id *)(a1 + 48) addIndex:a3];
  }
}

void sub_10043254C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(a1 + 32);
  +[NSValue valueWithRange:](NSValue, "valueWithRange:", a2, a3);
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  [v3 addObject:v4];
}

void sub_1004325B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a2;
  uint64_t v6 = [[TransitTripStopItem alloc] initWithTransitTripStop:v5 stopIndex:a3];

  [v4 addObject:v6];
}

void sub_100432C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 128), 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100432CB8(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v27 = a2;
  unsigned __int8 v8 = [v27 isPlaceholder];
  id v9 = v27;
  if ((v8 & 1) == 0)
  {
    id v10 = [v27 transitTripStop];
    uint64_t v11 = [v10 departure];

    uint64_t v12 = *(void *)(a1[5] + 8);
    if (*(unsigned char *)(v12 + 24))
    {
      *(unsigned char *)(v12 + 24) = 1;
    }
    else
    {
      uint64_t v13 = [v11 liveDepartureDate];
      *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = v13 != 0;
    }
    id v14 = [v11 departureDate];

    if (v14)
    {
      uint64_t v15 = (void *)a1[4];
      uint64_t v16 = [v27 transitTripStop];
      uint64_t v17 = [v16 departure];
      LOBYTE(v15) = [v15 _isPastDeparture:v17];

      if ((v15 & 1) == 0)
      {
LABEL_7:
        if (!a3
          && *(unsigned char *)(*(void *)(a1[5] + 8) + 24)
          && ([v11 departureDate],
              id v22 = objc_claimAutoreleasedReturnValue(),
              v22,
              v22))
        {
          id v23 = [v11 departureDate];
          [v23 timeIntervalSinceDate:*(void *)(a1[4] + 16)];

          if (GEOTransitDepartureIsImminentDepartureTimeInterval())
          {
            *(void *)(*(void *)(a1[8] + 8) + 24) = 0;
LABEL_19:
            *a4 = 1;
          }
        }
        else
        {
          objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), a2);
        }

        id v9 = v27;
        goto LABEL_21;
      }
    }
    else
    {
      unsigned int v18 = [*(id *)(*(void *)(a1[6] + 8) + 40) transitTripStop];
      id v19 = [v18 departure];
      id v20 = [v19 departureDate];

      if (!v20) {
        goto LABEL_7;
      }
    }
    *(void *)(*(void *)(a1[7] + 8) + 24) = a3;
    id v21 = *(void **)(*(void *)(a1[6] + 8) + 40);
    if (v21 && *(unsigned char *)(*(void *)(a1[5] + 8) + 24))
    {
      if ([v21 isPlaceholder])
      {
        *(void *)(*(void *)(a1[8] + 8) + 24) = a3;
      }
      else
      {
        uint64_t v24 = [*(id *)(*(void *)(a1[6] + 8) + 40) transitTripStop];
        id v25 = [v24 departure];

        unsigned int v26 = [v25 departureDate];
        [v26 timeIntervalSinceDate:*(void *)(a1[4] + 16)];

        *(void *)(*(void *)(a1[8] + 8) + 24) = a3
                                                     + GEOTransitDepartureIsImminentDepartureTimeInterval();
      }
    }
    goto LABEL_19;
  }
LABEL_21:
}

void sub_100435930(uint64_t a1)
{
  id v2 = +[CarDisplayController sharedInstance];
  uint64_t v3 = [v2 chromeViewController];
  id v4 = [v3 currentTraits];

  id v5 = +[MKMapService sharedService];
  uint64_t v6 = [v5 ticketForSearchFieldOfflinePlaceholderWithTraits:v4];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100435A44;
  v7[3] = &unk_1012EA3A8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  [v6 submitWithHandler:v7 networkActivity:0];
  objc_destroyWeak(&v8);
}

void sub_100435A30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100435A44(uint64_t a1, char a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[8] = (a3 == 0) & a2;
    id v8 = WeakRetained;
    uint64_t v6 = [WeakRetained searchButton];
    id v7 = [v8 _getSearchButtonTitle];
    [v6 updateSearchButtonTitle:v7];

    id WeakRetained = v8;
  }
}

void sub_100436108(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    uint64_t v6 = sub_1000A930C();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 56);
      int v9 = 138412290;
      uint64_t v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "PresentRAPAction resolveMapItem for locationQueryInfo: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  id v8 = [v5 firstObject];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1004364E4(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  [*(id *)(a1 + 32) setCurrentSearchSession:v3];
}

id sub_100436738()
{
  if (qword_10160ECB8 != -1) {
    dispatch_once(&qword_10160ECB8, &stru_1012EA4D8);
  }
  uint64_t v0 = (void *)qword_10160ECB0;

  return v0;
}

id sub_10043693C(uint64_t a1, void *a2)
{
  return _[a2 searchSessionDidChangeSearchFieldItem:*(void *)(a1 + 32)];
}

id sub_100436B8C(uint64_t a1)
{
  [*(id *)(a1 + 32) setSearchFieldItem:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _willProcessSearchFieldItem];
  [*(id *)(a1 + 32) didChangeSearchFieldItem];
  [*(id *)(a1 + 32) setSearchInfo:*(void *)(a1 + 48)];
  id v2 = *(void **)(a1 + 32);

  return [v2 didChangeSearchResults];
}

id sub_100436C88(uint64_t a1, void *a2)
{
  return _[a2 searchSessionDidChangeSearchFieldItem:*(void *)(a1 + 32)];
}

id sub_100436D80(uint64_t a1, void *a2)
{
  return _[a2 searchSessionDidChangeSearchResults:*(void *)(a1 + 32)];
}

void sub_1004371B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004371F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _refreshEVChargers:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100437288(id a1, GCDTimer *a2, unint64_t a3, BOOL *a4)
{
}

void sub_100437438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100437454(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 _identifier];

  if (v3)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v6 _identifier];
    [v4 addObject:v5];
  }
}

void sub_1004374D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_100436738();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error receieved while refreshing the ev chargers", buf, 2u);
    }
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  int v9 = WeakRetained;
  if (WeakRetained)
  {
    if (![WeakRetained[1] count])
    {
      uint64_t v10 = sub_100436738();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "The timers are invalidated while updating the charger information", buf, 2u);
      }
    }
    uint64_t v11 = [v9 searchInfo];
    uint64_t v12 = [v11 results];
    id v13 = [v12 mutableCopy];

    id v14 = objc_alloc_init((Class)NSMutableDictionary);
    uint64_t v15 = *(void **)(a1 + 32);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    _OWORD v24[2] = sub_10043770C;
    v24[3] = &unk_1012EA490;
    id v16 = v14;
    id v25 = v16;
    [v15 enumerateObjectsUsingBlock:v24];
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    id v21 = sub_100437770;
    id v22 = &unk_1012E61A8;
    id v23 = v16;
    id v17 = v16;
    [v13 enumerateObjectsUsingBlock:&v19];
    unsigned int v18 = [v9 searchInfo:v19, v20, v21, v22];
    [v18 updateSearchInfo:v13];

    [v9 notifyToRefreshEVChargers:v13];
  }
}

void sub_10043770C(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v3 _identifier];
  [v2 setObject:v3 forKeyedSubscript:v4];
}

void sub_100437770(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v9 = v3;
  id v5 = [v3 mapItem];
  id v6 = [v5 _identifier];
  uint64_t v7 = [v4 objectForKeyedSubscript:v6];

  if (v7)
  {
    id v8 = [v9 mapItem];
    [v8 _updateRealTimeEVChargerAvailability:v7];
  }
}

void sub_1004378AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 refreshedEVChargersReceieved:*(void *)(a1 + 32)];
  }
}

void sub_100437B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100437BAC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) observers];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  [*(id *)(a1 + 32) setObservers:0];
  id v5 = *(void **)(a1 + 32);

  return _[v5 setInvalidated:1];
}

id sub_100437C10(uint64_t a1, void *a2)
{
  return _[a2 searchSessionDidInvalidate:*(void *)(a1 + 32) reason:*(void *)(a1 + 40)];
}

void sub_100438178(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 addObject:*(void *)(a1 + 40)];
}

void sub_100438284(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 removeObject:*(void *)(a1 + 40)];
}

void sub_1004383F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100438410(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) observers];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100438B50(uint64_t a1, void *a2)
{
  return _[a2 searchSessionWillPerformSearch:*(void *)(a1 + 32)];
}

id sub_100438ECC(uint64_t a1, void *a2)
{
  return _[a2 searchSessionDidFail:*(void *)(a1 + 32)];
}

void sub_100438FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100438FCC(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 21);
  return result;
}

void sub_100439254(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchSession");
  id v2 = (void *)qword_10160ECB0;
  qword_10160ECB0 = (uint64_t)v1;
}

id sub_100439E8C(void *a1)
{
  os_log_t v1 = [a1 geoAddress];
  id v2 = [v1 structuredAddress];
  uint64_t v3 = [v2 locality];

  return v3;
}

void sub_10043A68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10043A6A4(uint64_t result, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) |= GEOAllRequestCounterInterfaceTypes[a2];
  return result;
}

void sub_10043ED78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10043EDA8(uint64_t a1, int a2, id obj)
{
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_10043F160(id a1)
{
  id v1 = objc_alloc((Class)NSAttributedString);
  id v2 = +[NSBundle mainBundle];
  uint64_t v3 = [v2 localizedStringForKey:@"[Directions] road descriptions separator" value:@"localized string not found" table:0];
  NSAttributedStringKey v8 = NSForegroundColorAttributeName;
  id v4 = +[UIColor secondaryLabelColor];
  id v9 = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
  id v6 = [v1 initWithString:v3 attributes:v5];
  uint64_t v7 = (void *)qword_10160ECC8;
  qword_10160ECC8 = (uint64_t)v6;
}

void sub_10043F824(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a2;
  if (a3) {
    [v4 _minorLabelColor];
  }
  else {
  id v6 = [v4 _majorLabelColor];
  }
  [v5 setTextColor:v6];
}

void sub_1004408A8(id a1, $464B15F94E0D705FD6D497CD7841E26A a2)
{
  byte_10160ECD0 = GEOConfigGetBOOL();
}

id sub_100440F48()
{
  if (qword_10160ECE8 != -1) {
    dispatch_once(&qword_10160ECE8, &stru_1012EA628);
  }
  uint64_t v0 = (void *)qword_10160ECE0;

  return v0;
}

void sub_100442554(uint64_t a1)
{
  long long v25 = *(_OWORD *)VKAnnotationTrackingBehaviorDefault;
  uint64_t v2 = VKAnnotationTrackingBehaviorDefault[2];
  LOBYTE(v25) = 1;
  *((void *)&v25 + 1) = 0;
  uint64_t v26 = v2;
  LOWORD(v26) = 256;
  uint64_t v3 = sub_100440F48();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = VKStringForAnnotationTrackingBehavior();
    *(_DWORD *)long long buf = 138412290;
    uint64_t v28 = (uint64_t)v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Set annotation tracking behavior: %@", buf, 0xCu);
  }
  long long v23 = v25;
  uint64_t v24 = v26;
  id v5 = [*(id *)(a1 + 32) mapView];
  long long v21 = v25;
  uint64_t v22 = v26;
  [v5 _setUserTrackingBehavior:&v21];

  id v6 = [*(id *)(a1 + 40) originalUserState];
  if ([v6 originalUserTrackingMode])
  {
    uint64_t v7 = [*(id *)(a1 + 40) originalUserState];
    uint64_t v8 = (uint64_t)[v7 originalUserTrackingMode];
  }
  else
  {
    uint64_t v8 = 1;
  }

  id v9 = sub_100440F48();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 134217984;
    uint64_t v28 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Setting tracking mode to %ld", buf, 0xCu);
  }

  uint64_t v15 = _NSConcreteStackBlock;
  uint64_t v16 = 3221225472;
  id v17 = sub_100442844;
  unsigned int v18 = &unk_1012E69C0;
  id v19 = *(id *)(a1 + 32);
  uint64_t v20 = v8;
  +[UIView animateWithDuration:0x20000 delay:&v15 options:0 animations:0.5 completion:0.0];
  uint64_t v10 = sub_100440F48();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Disabling map interaction", buf, 2u);
  }

  uint64_t v11 = [*(id *)(a1 + 32) mapView:v15, v16, v17, v18];
  [v11 setScrollEnabled:0];

  uint64_t v12 = [*(id *)(a1 + 32) mapView];
  [v12 setRotateEnabled:0];

  uint64_t v13 = [*(id *)(a1 + 32) mapView];
  [v13 setZoomEnabled:0];

  uint64_t v14 = [*(id *)(a1 + 32) mapView];
  [v14 setPitchEnabled:0];
}

void sub_100442844(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapView];
  [v2 setUserTrackingMode:*(void *)(a1 + 40) animated:1];
}

void sub_100442C24(uint64_t a1)
{
  id v2 = sub_100440F48();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    if ([*(id *)(a1 + 32) scrollEnabled]) {
      uint64_t v3 = @"YES";
    }
    else {
      uint64_t v3 = @"NO";
    }
    id v4 = v3;
    *(_DWORD *)long long buf = 138412290;
    unsigned __int8 v44 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Restoring scroll enabled: %@", buf, 0xCu);
  }
  id v5 = [*(id *)(a1 + 32) scrollEnabled];
  id v6 = [*(id *)(a1 + 40) mapView];
  [v6 setScrollEnabled:v5];

  uint64_t v7 = sub_100440F48();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    if ([*(id *)(a1 + 32) rotateEnabled]) {
      uint64_t v8 = @"YES";
    }
    else {
      uint64_t v8 = @"NO";
    }
    id v9 = v8;
    *(_DWORD *)long long buf = 138412290;
    unsigned __int8 v44 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Restoring rotate enabled: %@", buf, 0xCu);
  }
  id v10 = [*(id *)(a1 + 32) rotateEnabled];
  uint64_t v11 = [*(id *)(a1 + 40) mapView];
  [v11 setRotateEnabled:v10];

  uint64_t v12 = sub_100440F48();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    if ([*(id *)(a1 + 32) zoomEnabled]) {
      uint64_t v13 = @"YES";
    }
    else {
      uint64_t v13 = @"NO";
    }
    uint64_t v14 = v13;
    *(_DWORD *)long long buf = 138412290;
    unsigned __int8 v44 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Restoring zoom enabled: %@", buf, 0xCu);
  }
  id v15 = [*(id *)(a1 + 32) zoomEnabled];
  uint64_t v16 = [*(id *)(a1 + 40) mapView];
  [v16 setZoomEnabled:v15];

  id v17 = sub_100440F48();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    if ([*(id *)(a1 + 32) pitchEnabled]) {
      unsigned int v18 = @"YES";
    }
    else {
      unsigned int v18 = @"NO";
    }
    id v19 = v18;
    *(_DWORD *)long long buf = 138412290;
    unsigned __int8 v44 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Restoring pitch enabled: %@", buf, 0xCu);
  }
  id v20 = [*(id *)(a1 + 32) pitchEnabled];
  long long v21 = [*(id *)(a1 + 40) mapView];
  [v21 setPitchEnabled:v20];

  uint64_t v22 = sub_100440F48();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
  {
    VKStringForAnnotationTrackingBehavior();
    long long v23 = (__CFString *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)long long buf = 138412290;
    unsigned __int8 v44 = v23;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Restoring user's original tracking behavior: %@", buf, 0xCu);
  }
  long long v41 = *(_OWORD *)(a1 + 56);
  uint64_t v42 = *(void *)(a1 + 72);
  uint64_t v24 = [*(id *)(a1 + 40) mapView];
  long long v39 = v41;
  uint64_t v40 = v42;
  [v24 _setUserTrackingBehavior:&v39];

  if ([*(id *)(a1 + 48) originalUserTrackingMode])
  {
    long long v25 = sub_100440F48();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      uint64_t v26 = (__CFString *)[*(id *)(a1 + 48) originalUserTrackingMode];
      *(_DWORD *)long long buf = 134217984;
      unsigned __int8 v44 = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Restoring user's original tracking mode: %ld", buf, 0xCu);
    }

    id v27 = [*(id *)(a1 + 40) mapView];
    uint64_t v28 = (uint64_t)[*(id *)(a1 + 48) originalUserTrackingMode];
    id v29 = v27;
LABEL_31:
    [v29 setUserTrackingMode:v28 animated:1];
    goto LABEL_32;
  }
  int v30 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v31 = sub_100440F48();
  BOOL v32 = os_log_type_enabled(v31, OS_LOG_TYPE_INFO);
  if (v30)
  {
    if (v32)
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "Setting tracking mode to .Follow", buf, 2u);
    }

    id v29 = [*(id *)(a1 + 40) mapView];
    id v27 = v29;
    uint64_t v28 = 1;
    goto LABEL_31;
  }
  if (v32)
  {
    [*(id *)(a1 + 48) originalCenterCoordinateDistance];
    *(_DWORD *)long long buf = 134217984;
    unsigned __int8 v44 = v34;
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, "Restoring user's zoom level to %f", buf, 0xCu);
  }

  id v35 = [*(id *)(a1 + 40) mapView];
  id v36 = [v35 camera];
  id v27 = [v36 copy];

  [*(id *)(a1 + 48) originalCenterCoordinateDistance];
  [v27 setCenterCoordinateDistance:];
  id v37 = [*(id *)(a1 + 40) mapView];
  [v37 setCamera:v27 animated:1];

  uint64_t v38 = [*(id *)(a1 + 40) mapView];
  [v38 setUserTrackingMode:0 animated:0];

LABEL_32:
  uint64_t v33 = +[NSNotificationCenter defaultCenter];
  [v33 postNotificationName:@"VLFSessionTaskDidHideVLFUINotification" object:0];
}

void sub_100443508(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionTask");
  id v2 = (void *)qword_10160ECE0;
  qword_10160ECE0 = (uint64_t)v1;
}

void sub_100444C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100444C8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5)
  {
    if (v3)
    {
      NSErrorUserInfoKey v9 = NSLocalizedDescriptionKey;
      id v10 = v3;
      id v6 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
      uint64_t v5 = *(void *)(a1 + 32);
    }
    else
    {
      id v6 = 0;
    }
    uint64_t v7 = GEOErrorDomain();
    uint64_t v8 = +[NSError errorWithDomain:v7 code:-8 userInfo:v6];
    (*(void (**)(uint64_t, void, void *))(v5 + 16))(v5, 0, v8);
  }
}

void sub_100444D98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      id v19 = sub_10057670C();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v40 = v6;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Tracker can't create RAP state because the recording failed with error: %@", buf, 0xCu);
      }

      uint64_t v20 = *(void *)(a1 + 72);
      if (v20) {
        (*(void (**)(uint64_t, void, id))(v20 + 16))(v20, 0, v6);
      }
    }
    else
    {
      uint64_t v8 = [v5 routes];
      NSErrorUserInfoKey v9 = [v8 lastObject];
      unsigned int v10 = [v9 identifier];
      int v11 = *(_DWORD *)(a1 + 96);

      if (v10 == v11)
      {
        uint64_t v12 = [[RAPDisplayedDirectionsPlan alloc] initWithRouteCollection:*(void *)(a1 + 32) recording:v5];
        uint64_t v13 = (void *)WeakRetained[6];
        WeakRetained[6] = v12;

        uint64_t v14 = [*(id *)(a1 + 40) currentRouteCollection];
        uint64_t v15 = [v14 currentRoute];
        uint64_t v16 = (void *)WeakRetained[4];
        WeakRetained[4] = v15;

        id v17 = (char *)[*(id *)(a1 + 40) currentTransportType];
        if ((unint64_t)(v17 - 2) > 3) {
          uint64_t v18 = 0;
        }
        else {
          uint64_t v18 = dword_100F6F5C0[(void)(v17 - 2)];
        }
        long long v25 = [RAPDisplayedRouteState alloc];
        uint64_t v26 = [*(id *)(a1 + 56) originName];
        id v27 = [*(id *)(a1 + 56) destinationName];
        uint64_t v28 = [(RAPDisplayedRouteState *)v25 initWithStartWaypointTitle:v26 endWaypointTitle:v27 transportType:v18 composedRoute:WeakRetained[4]];
        uint64_t v29 = *(void *)(a1 + 48);
        int v30 = *(void **)(v29 + 40);
        *(void *)(v29 + 40) = v28;

        uint64_t v31 = [*(id *)(a1 + 64) mapView];
        BOOL v32 = [*(id *)(a1 + 64) currentTraits];
        uint64_t v33 = +[SearchSession currentSearchSession];
        v34[0] = _NSConcreteStackBlock;
        v34[1] = 3221225472;
        v34[2] = sub_100445188;
        v34[3] = &unk_1012EA678;
        objc_copyWeak(&v37, (id *)(a1 + 88));
        int v38 = *(_DWORD *)(a1 + 96);
        id v35 = *(id *)(a1 + 80);
        id v36 = *(id *)(a1 + 72);
        +[RAPAppStateFactory createAppStateWithMapView:v31 traits:v32 place:0 searchDataSource:v33 directionsDataSource:WeakRetained completion:v34];

        objc_destroyWeak(&v37);
      }
      else
      {
        long long v21 = sub_10057670C();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        {
          uint64_t v22 = (void *)*(unsigned int *)(a1 + 96);
          long long v23 = [v5 routes];
          uint64_t v24 = [v23 lastObject];
          *(_DWORD *)long long buf = 134218240;
          id v40 = v22;
          __int16 v41 = 2048;
          uint64_t v42 = [v24 identifier];
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Tracker can't create RAP state because currentRouteId: %lu doesn't match the recorded id: %lu", buf, 0x16u);
        }
        (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
      }
    }
  }
}

void sub_10044516C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100445188(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v6 = [v4 directionsHistory];
    uint64_t v7 = [v6 firstObject];
    uint64_t v8 = [v7 recording];

    NSErrorUserInfoKey v9 = [v8 routes];
    unsigned int v10 = [v9 lastObject];
    unsigned int v11 = [v10 identifier];
    int v12 = *(_DWORD *)(a1 + 56);

    if (v11 == v12)
    {
      objc_storeStrong(WeakRetained + 8, a2);
      uint64_t v13 = *(void *)(a1 + 40);
      if (v13) {
        (*(void (**)(uint64_t, id, void))(v13 + 16))(v13, v4, 0);
      }
    }
    else
    {
      uint64_t v14 = sub_10057670C();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = *(unsigned int *)(a1 + 56);
        uint64_t v16 = [v8 routes];
        id v17 = [v16 lastObject];
        int v18 = 134218240;
        uint64_t v19 = v15;
        __int16 v20 = 2048;
        uint64_t v21 = [v17 identifier];
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Tracker can't create RAP state because currentRouteId: %lu doesn't match the recorded id: %lu", (uint8_t *)&v18, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

RAPPlaceCorrectableString *sub_100447728(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [[RAPPlaceCorrectableString alloc] initWithKind:a2 originalValue:v5];

  [(RAPPlaceCorrectableString *)v6 addObserver:*(void *)(a1 + 32) changeHandler:&stru_1012EA6E0];

  return v6;
}

void sub_1004477A8(id a1, RAPPlaceCorrectableItem *a2, RAPPlaceCorrectableAddress *a3)
{
  id v4 = a3;
  if (+[RAPPlaceCorrectableAddress _isStructuredAddressType:[(RAPPlaceCorrectableItem *)a2 kind]])
  {
    [(RAPPlaceCorrectableAddress *)v4 _updateFreeformAddressWithStructuredChange];
  }
  [(RAPPlaceCorrectableAddress *)v4 _invokeChangeHandlers];
}

void sub_100447B04(id a1, id a2, id a3)
{
}

void sub_1004485D8(id a1, id a2, id a3)
{
}

void sub_100448660(id a1, id a2, id a3)
{
}

PersonalizedMapItemKey *sub_10044D43C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[NSNumber numberWithUnsignedInteger:GEOMapItemHashForPurpose()];
  id v5 = [*(id *)(a1 + 32) objectForKeyedSubscript:v4];
  if (!v5)
  {
    id v5 = [[PersonalizedMapItemKey alloc] initWithGeoMapItem:v3];
    [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:v4];
  }

  return v5;
}

HistoryEntryRecentsItem *sub_10044D4EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = (HistoryEntryRecentsItem *)v3;
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v5 = v3;
      id v4 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) objectForKeyedSubscript:v5];
      if (!v4)
      {
        id v6 = MSPHistoryEntryMakeFromStorage();
        id v4 = [[HistoryEntryRecentsItem alloc] initWithHistoryEntry:v6];
        [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setObject:v4 forKeyedSubscript:v5];
      }
    }
    else
    {
      id v4 = 0;
    }
  }

  return v4;
}

void sub_10044D5FC(uint64_t a1, void *a2)
{
  id v8 = a2;
  id v3 = [v8 geoMapItem];
  if (v3)
  {
    id v4 = (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    [*(id *)(a1 + 32) addObject:v4];
    [*(id *)(a1 + 40) setObject:*(void *)(a1 + 48) forKeyedSubscript:v4];
  }
  id v5 = [v8 supersededSearchStorageIdentifier];

  if (v5)
  {
    id v6 = *(void **)(a1 + 56);
    uint64_t v7 = [v8 supersededSearchStorageIdentifier];
    [v6 addObject:v7];
  }
}

void sub_10044D6D4(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [a2 storageIdentifier];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 containsObject:v4] ^ 1;
}

void sub_10044D740(uint64_t a1, void *a2)
{
  id v16 = a2;
  id v3 = [v16 waypoints];
  if ((unint64_t)[v3 count] < 3)
  {
  }
  else
  {
    int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 8);

    id v5 = v16;
    if (v4 != 2) {
      goto LABEL_15;
    }
  }
  id v6 = [v16 endWaypoint];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  id v5 = v16;
  if ((isKindOfClass & 1) == 0)
  {
    id v8 = [v16 endWaypoint];
    NSErrorUserInfoKey v9 = [v8 mapItemStorage];

    if (*(_DWORD *)(*(void *)(a1 + 32) + 8) == 2)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 0;
    }
    else if (v9)
    {
      uint64_t v10 = (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
      uint64_t v11 = *(void *)(*(void *)(a1 + 80) + 8);
      int v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;

      if ([*(id *)(a1 + 40) containsObject:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)])
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 0;
        uint64_t v13 = [*(id *)(a1 + 48) objectForKeyedSubscript:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
        uint64_t v14 = v13;
        if (v13)
        {
          uint64_t v15 = [v13 linkedRecentRoute];

          if (!v15) {
            [v14 setLinkedRecentRoute:*(void *)(a1 + 56)];
          }
        }
      }
    }

    id v5 = v16;
  }
LABEL_15:
}

void sub_10044D8D8(uint64_t a1, void *a2)
{
  id v3 = [a2 geoMapItem];
  if (v3)
  {
    uint64_t v7 = v3;
    uint64_t v4 = (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;

    id v3 = v7;
  }
}

void sub_10044E130(id a1, RAPPlaceCorrectableString *a2, RAPLookAroundQuestion *a3)
{
}

void sub_10044E138(id a1, id a2, RAPLookAroundQuestion *a3)
{
}

void sub_10044E140(id a1, RAPPlaceCorrectableAddress *a2, RAPLookAroundQuestion *a3)
{
}

BOOL sub_10044EC98(void *a1)
{
  id v1 = a1;
  id v2 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
  id v3 = [v1 stringByTrimmingCharactersInSet:v2];

  BOOL v4 = [v3 length] != 0;
  return v4;
}

void sub_100450B24(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapItemIfLoaded];
  double v3 = *(double *)(a1 + 48);
  id v4 = [(id)objc_opt_class() iconSize];
  uint64_t v5 = +[MKMapItem _maps_markerImageForMapItem:scale:size:useMarkerFallback:](MKMapItem, "_maps_markerImageForMapItem:scale:size:useMarkerFallback:", v2, v4, [(id)objc_opt_class() useMarkerFallback], v3);

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100450C30;
  block[3] = &unk_1012EA9E0;
  uint64_t v6 = *(void *)(a1 + 56);
  id v9 = v5;
  uint64_t v10 = v6;
  void block[4] = *(void *)(a1 + 40);
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void *sub_100450C30(void *result)
{
  uint64_t v1 = result[4];
  if (result[6] == *(void *)(v1 + 8)) {
    return [*(id *)(v1 + 32) setImage:result[5]];
  }
  return result;
}

void sub_10045188C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004518A4(uint64_t a1, void *a2, unsigned char *a3)
{
  id v6 = a2;
  if (v6)
  {
    id v7 = v6;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    id v6 = v7;
    *a3 = 1;
  }
}

void sub_100451DA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 32);
  *(void *)(v2 + 32) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = 0;
}

void sub_100451E9C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 40);
  id v9 = a2;
  id v6 = [v5 count];
  unint64_t v7 = (unint64_t)[*(id *)(a1 + 32) visibilityMask];
  uint64_t v8 = 2;
  if (v6 == (id)(a3 + 1)) {
    uint64_t v8 = 4;
  }
  [v9 setShouldBeHiddenFromMap:(v7 & v8) == 0];
}

RouteStartEndItem *__cdecl sub_100452228(id a1, SearchResult *a2, unint64_t a3)
{
  double v3 = a2;
  uint64_t v4 = [[RouteStartEndItem alloc] initWithSearchResult:v3 routeFeatureType:2];

  return v4;
}

id sub_100452284(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), *(id *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 _updateItemVisibility];
}

void sub_1004523DC(uint64_t a1)
{
  id v5 = [*(id *)(*(void *)(a1 + 32) + 32) keys];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100452514(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        unint64_t v7 = *(void **)(a1 + 40);
        uint64_t v8 = [*(id *)(*((void *)&v10 + 1) + 8 * (void)v6) keys];
        id v9 = [v8 copy];
        [v7 addObject:v9];

        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

void sub_1004527A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004527C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if ([*(id *)(a1 + 32) isEqualToSearchResult:a2 forPurpose:5])
  {
    uint64_t v7 = [*(id *)(*(void *)(a1 + 40) + 40) objectAtIndexedSubscript:a3];
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    *a4 = 1;
  }
}

void sub_100452AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_100452AF8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v22 = a2;
  unsigned int v6 = [v22 conformsToProtocol:&OBJC_PROTOCOL___CustomPOIAnnotation];
  uint64_t v7 = v22;
  if (v6)
  {
    uint64_t v8 = [v22 searchResult];
    id v9 = v8;
    id v10 = *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
    if (!v10)
    {
      long long v11 = [v8 mapItem];
      long long v12 = [v11 _venueInfo];
      long long v13 = [v12 venueIdentifier];
      unsigned __int8 v14 = [v13 _hasVenueID];

      if (v14)
      {
        uint64_t v15 = [v9 mapItem];
        id v16 = [v15 _venueInfo];
        id v17 = [v16 venueIdentifier];
        *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v17 venueID];

LABEL_8:
        uint64_t v7 = v22;
        goto LABEL_9;
      }
      id v10 = *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
    }
    int v18 = [v9 mapItem];
    uint64_t v19 = [v18 _venueInfo];
    __int16 v20 = [v19 venueIdentifier];
    id v21 = [v20 venueID];

    if (v10 != v21)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
      *a4 = 1;
    }
    goto LABEL_8;
  }
LABEL_9:
}

void sub_1004530F0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10160ECF0;
  qword_10160ECF0 = (uint64_t)v1;
}

id sub_100457294(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;

  id v4 = *(void **)(a1 + 32);

  return _[v4 presentNewToastIfNecessary];
}

void sub_100457878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004578A0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = WeakRetained[5];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100457980;
    block[3] = &unk_1012E66E0;
    void block[4] = WeakRetained;
    id v12 = v7;
    id v13 = v6;
    dispatch_async(v10, block);
  }
}

id sub_100457980(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 56), *(id *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[3];
  if (v3)
  {
    (*(void (**)(void, void, void))(v3 + 16))(v2[3], *(void *)(a1 + 48), *(void *)(a1 + 40));
    uint64_t v2 = *(void **)(a1 + 32);
  }

  return [v2 _completeOperation];
}

id sub_100457EFC()
{
  if (qword_10160ED08 != -1) {
    dispatch_once(&qword_10160ED08, &stru_1012EACE0);
  }
  uint64_t v0 = (void *)qword_10160ED00;

  return v0;
}

void sub_1004580DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  os_activity_scope_leave((os_activity_scope_state_t)(v15 - 48));
  _Unwind_Resume(a1);
}

void sub_100458100(uint64_t a1)
{
  uint64_t v1 = a1;
  v5.opaque[0] = 0;
  v5.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &v5);
  uint64_t v2 = *(void *)(v1 + 32);
  v1 += 40;
  id WeakRetained = objc_loadWeakRetained((id *)v1);
  [WeakRetained setActivity:v2];

  id v4 = objc_loadWeakRetained((id *)v1);
  [v4 _startOnIsolationQueue];

  os_activity_scope_leave(&v5);
}

void sub_10045817C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1004585F4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100458608(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _stopOnIsolationQueue];
}

void sub_100458984(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100458998(uint64_t a1)
{
  uint64_t v2 = sub_100457EFC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)os_activity_scope_state_s v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Refreshing waypoints", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _stopOnIsolationQueue];
  id v4 = [WeakRetained receivedResults];
  [v4 removeAllObjects];

  [WeakRetained _startOnIsolationQueue];
}

void sub_100458CF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100458D20(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  os_activity_scope_state_s v5 = [WeakRetained isolationQueue];
  if (v5)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100458E10;
    block[3] = &unk_1012EAB70;
    uint64_t v11 = *(void *)(a1 + 56);
    id v7 = *(id *)(a1 + 32);
    id v8 = v3;
    id v9 = *(id *)(a1 + 40);
    id v10 = WeakRetained;
    dispatch_async(v5, block);
  }
}

id sub_100458E10(uint64_t a1)
{
  uint64_t v2 = sub_100457EFC();
  id v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 64);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    os_activity_scope_state_s v5 = *(void **)(a1 + 32);
    int v15 = 138543362;
    id v16 = v5;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "FetchGEOComposedWaypoint", "%{public}@", (uint8_t *)&v15, 0xCu);
  }

  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = sub_100457EFC();
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v9 = [*(id *)(a1 + 48) identifier];
      int v15 = 138543362;
      id v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Waypoint (%{public}@) resolving succeeded", (uint8_t *)&v15, 0xCu);
    }
    id v10 = [*(id *)(a1 + 56) receivedResults];
    [v10 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = [*(id *)(a1 + 48) identifier];
      int v15 = 138543362;
      id v16 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Waypoint (%{public}@) resolving returned a nil result; defaulting to a generic error.",
        (uint8_t *)&v15,
        0xCu);
    }
    id v10 = [*(id *)(a1 + 56) receivedResults];
    id v12 = +[NSError errorWithDomain:@"WaypointRequestErrorDomain" code:0 userInfo:0];
    id v13 = +[Result resultWithError:v12];
    [v10 setObject:v13 forKey:*(void *)(a1 + 48)];
  }
  return [*(id *)(a1 + 56) _processTaskFinished:*(void *)(a1 + 48)];
}

void sub_1004597D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_1004597FC(uint64_t a1, void *a2)
{
}

void sub_10045980C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  os_activity_scope_state_s v5 = [v3 receivedResults];
  uint64_t v6 = [v5 objectForKey:v4];

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_100459948;
  v10[3] = &unk_1012EAC28;
  id v11 = *(id *)(a1 + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100459954;
  v7[3] = &unk_1012EAC50;
  id v8 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  [v6 withValue:v10 orError:v7];
}

id sub_100459948(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_100459954(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v5 = a2;
  id v4 = +[NSNull null];
  [v3 addObject:v4];

  [*(id *)(a1 + 40) addObject:v5];
}

void sub_100459AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100459B08(uint64_t a1)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) receivedResults];
  id v3 = [v2 keyEnumerator];

  id v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v13 + 1) + 8 * i);
        id v9 = [*(id *)(a1 + 32) receivedResults];
        id v10 = [v9 objectForKey:v8];
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        void v12[2] = sub_100459CB8;
        v12[3] = &unk_1012EACA0;
        uint64_t v11 = *(void *)(a1 + 40);
        void v12[4] = v8;
        v12[5] = v11;
        [v10 withValue:v12 orError:&stru_1012EACC0];
      }
      id v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v5);
  }
}

void sub_100459CB8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v4 = a2;
  id v5 = [v2 request];
  [v3 setObject:v4 forKeyedSubscript:v5];
}

void sub_100459DEC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100459E00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (!WeakRetained)
  {
    id v3 = sub_100457EFC();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      __int16 v9 = 0;
      id v4 = "WaypointController was deallocated before we could kick off dynamic origin refreshing; will not refresh dynamic origin";
      id v5 = (uint8_t *)&v9;
      goto LABEL_11;
    }
LABEL_12:

    goto LABEL_13;
  }
  if ([WeakRetained isRunning])
  {
    id v3 = sub_100457EFC();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      __int16 v8 = 0;
      id v4 = "Waypoint resolution is currently already in flight; will not refresh dynamic origin";
      id v5 = (uint8_t *)&v8;
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, v4, v5, 2u);
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  uint64_t v6 = [v2 resolvedWaypointSetResult];

  if (!v6)
  {
    id v3 = sub_100457EFC();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      __int16 v7 = 0;
      id v4 = "Waypoint resolution has not begun yet; will not refresh dynamic origin";
      id v5 = (uint8_t *)&v7;
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  [v2 _refreshDynamicOrigin];
LABEL_13:
}

void sub_10045A128(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10045A13C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = sub_100457EFC();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Rebroadcasting waypoint", buf, 2u);
    }

    id v3 = [WeakRetained resolvedWaypointSetResult];

    if (!v3)
    {
      id v4 = sub_100457EFC();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int16 v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Tried to rebroadcast waypoints but we don't have any", v7, 2u);
      }
    }
    id v5 = [WeakRetained delegate];
    uint64_t v6 = [WeakRetained resolvedWaypointSetResult];
    [v5 waypointController:WeakRetained didResolveWaypointSet:v6];
  }
}

void sub_10045A384(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "WaypointController");
  uint64_t v2 = (void *)qword_10160ED00;
  qword_10160ED00 = (uint64_t)v1;
}

id sub_10045BB70(uint64_t a1)
{
  return _[*(id *)(a1 + 32) configureForType:1];
}

id sub_10045BB7C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) configureWithSuggestedApp:*(void *)(a1 + 40)];
}

void sub_10045C12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10045C144(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  __int16 v7 = [v9 iOSBundleIdentifier];
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

BOOL sub_10045C9B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v5 = sub_100015DB4();
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
LABEL_13:

      BOOL v4 = 0;
      goto LABEL_14;
    }
    id v6 = *(id *)(a1 + 32);
    if (!v6)
    {
      uint64_t v11 = @"<nil>";
      goto LABEL_12;
    }
    __int16 v7 = (objc_class *)objc_opt_class();
    unsigned int v8 = NSStringFromClass(v7);
    if (objc_opt_respondsToSelector())
    {
      id v9 = [v6 performSelector:"accessibilityIdentifier"];
      id v10 = v9;
      if (v9 && ![v9 isEqualToString:v8])
      {
        uint64_t v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v8, v6, v10];

        goto LABEL_10;
      }
    }
    uint64_t v11 = +[NSString stringWithFormat:@"%@<%p>", v8, v6];
LABEL_10:

LABEL_12:
    *(_DWORD *)long long buf = 138543362;
    long long v14 = v11;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "[%{public}@] CarAlternateRouteItemContainingView: focusItemsInRect got focusItem that is not CarAlternateRouteFocusItem.", buf, 0xCu);

    goto LABEL_13;
  }
  [v3 frame];
  BOOL v4 = CGRectIntersectsRect(v15, *(CGRect *)(a1 + 40));
LABEL_14:

  return v4;
}

id sub_10045D45C(uint64_t a1, void *a2)
{
  return [a2 setFocusedRouteIndex:*(void *)(a1 + 32)];
}

void sub_10045D744(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) mapView];

  if (v2 && [*(id *)(a1 + 32) isActive])
  {
    id v3 = *(void **)(a1 + 32);
    _[v3 _rebuildAlternateRouteFocusItems];
  }
}

void sub_10045DD3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

id sub_10045DD64(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 isEqual:*(void *)(a1 + 32)];
  if (result)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

uint64_t sub_10045E398(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  BOOL v4 = [v2 currentRoute];
  unsigned int v5 = [v3 isEqual:v4];

  return v5 ^ 1;
}

NSValue *sub_10045E3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  [*(id *)(a1 + 32) _frameForRoute:a2 offset:a3];

  return +[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:");
}

CarAlternateRouteFocusItem *sub_10045E434(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v5 = *(void **)(a1 + 32);
  id v6 = a2;
  __int16 v7 = [v5 objectAtIndexedSubscript:a3];
  [v7 CGRectValue];
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;

  long long v16 = -[CarAlternateRouteFocusItem initWithRoute:containingView:frame:delegate:]([CarAlternateRouteFocusItem alloc], "initWithRoute:containingView:frame:delegate:", v6, *(void *)(*(void *)(a1 + 40) + 24), v9, v11, v13, v15);

  return v16;
}

int64_t sub_10045E4F0(id a1, CarAlternateRouteFocusItem *a2, CarAlternateRouteFocusItem *a3)
{
  BOOL v4 = a3;
  unsigned int v5 = [(CarAlternateRouteFocusItem *)a2 route];
  [v5 _maps_boundingMapRect];
  double v7 = v6;

  double v8 = [(CarAlternateRouteFocusItem *)v4 route];

  [v8 _maps_boundingMapRect];
  double v10 = v9;

  if (v7 < v10) {
    return -1;
  }
  else {
    return v7 > v10;
  }
}

void sub_10045E5F4(uint64_t a1, void *a2, uint64_t a3)
{
  BOOL v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v6 = [v5 route];
  [v4 _frameForRoute:v6 offset:a3];
  [v5 setFrame:];
}

id sub_10045F0E0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  BOOL v4 = [v2 routeInfo];
  id v5 = [v4 route];
  id v6 = [v3 isEqual:v5];

  return v6;
}

id sub_10045FE80(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 delegate];
  if ([v4 sceneType] == (id)7) {
    id v5 = [*(id *)(a1 + 32) _isSceneForeground:v3];
  }
  else {
    id v5 = 0;
  }

  return v5;
}

id sub_10045FEEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 delegate];
  if ([v4 sceneType] == (id)7
    || +[UIApplication _maps_shouldIgnoreActivationStateForScene:](UIApplication, "_maps_shouldIgnoreActivationStateForScene:", v3)|| ([*(id *)(a1 + 32) _isSceneOccluded:v3] & 1) != 0)
  {
    id v5 = 0;
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) _isSceneForeground:v3];
  }

  return v5;
}

void sub_100460060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Siri plugin connection invalidated.", a3, a4, a5, a6, a7, a8, v11);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v10 = (void *)WeakRetained[11];
    WeakRetained[11] = 0;
    double v12 = WeakRetained;

    id WeakRetained = v12;
  }
}

void sub_1004600C8(id a1)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Siri plugin connection interrupted.", v1, v2, v3, v4, v5, v6, v7);
}

void sub_1004600D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Companion daemon connection invalidated.", a3, a4, a5, a6, a7, a8, v11);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v10 = (void *)WeakRetained[12];
    WeakRetained[12] = 0;
    double v12 = WeakRetained;

    id WeakRetained = v12;
  }
}

void sub_100460140(id a1)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Companion daemon connection interrupted.", v1, v2, v3, v4, v5, v6, v7);
}

void sub_100460150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Companion daemon connection invalidated.", a3, a4, a5, a6, a7, a8, v11);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v10 = (void *)WeakRetained[12];
    WeakRetained[12] = 0;
    double v12 = WeakRetained;

    id WeakRetained = v12;
  }
}

void sub_1004601B8(id a1)
{
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Companion daemon connection interrupted.", v1, v2, v3, v4, v5, v6, v7);
}

void sub_1004602AC(uint64_t a1)
{
  double v14 = objc_alloc_init(IPCNavigationActionReply);
  uint64_t v2 = [*(id *)(a1 + 32) externalGuidanceSource];

  if (v2)
  {
    if (*(void *)(*(void *)(a1 + 32) + 24))
    {
      uint64_t v3 = +[UIApplication sharedMapsDelegate];
      uint64_t v4 = [v3 appCoordinator];
      uint64_t v5 = [v4 navModeController];
      uint64_t v6 = [v5 navActionCoordinator];
      uint64_t v7 = [v6 trafficIncidentAlertCoordinator];

      [v7 dismissAlertViewForTrafficIncidentAlert:*(void *)(*(void *)(a1 + 32) + 24) acceptedNewRoute:[*(id *)(a1 + 40) shouldReroute]];
      uint64_t v8 = *(void *)(a1 + 32);
      double v9 = *(void **)(v8 + 24);
      *(void *)(v8 + 24) = 0;

      [(IPCNavigationActionReply *)v14 setSuccess:1];
      goto LABEL_7;
    }
    [(IPCNavigationActionReply *)v14 setSuccess:0];
    double v10 = v14;
    uint64_t v11 = 3;
  }
  else
  {
    [(IPCNavigationActionReply *)v14 setSuccess:0];
    double v10 = v14;
    uint64_t v11 = 1;
  }
  [(IPCNavigationActionReply *)v10 setNavigationActionError:v11];
LABEL_7:
  uint64_t v12 = *(void *)(a1 + 48);
  double v13 = v14;
  if (v12)
  {
    (*(void (**)(uint64_t, IPCNavigationActionReply *))(v12 + 16))(v12, v14);
    double v13 = v14;
  }
}

uint64_t sub_1004604C0(uint64_t a1)
{
  uint64_t v2 = +[UIApplication sharedMapsDelegate];
  [v2 dismissCurrentInterruptionOfKind:1];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_1004605F8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  id v7 = +[UIApplication sharedMapsDelegate];
  [v7 dismissCurrentInterruptionOfKind:7];
  uint64_t v2 = objc_alloc_init(IPCNavigationActionReply);
  uint64_t v3 = +[MNNavigationService sharedService];
  [v3 state];
  char IsNavigating = MNNavigationServiceStateIsNavigating();

  if (IsNavigating)
  {
    uint64_t v5 = [*(id *)(a1 + 32) backgroundNavigationDelegate];
    [v5 endBackgroundNavigation];

    [(IPCNavigationActionReply *)v2 setSuccess:1];
  }
  else
  {
    [(IPCNavigationActionReply *)v2 setSuccess:0];
    [(IPCNavigationActionReply *)v2 setNavigationActionError:1];
  }
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, IPCNavigationActionReply *))(v6 + 16))(v6, v2);
  }
}

void sub_1004607D4(id *a1)
{
  uint64_t v2 = [a1[4] _currentGuidanceStateMessageWithGuidanceCausedVibration:0];
  if ([a1[5] includeRoute])
  {
    uint64_t v3 = [a1[4] externalGuidanceSource];
    uint64_t v4 = [v3 routeRepresentator];
    uint64_t v5 = [v4 legacyRouteRepresentation];
    [v2 setLegacyRouteData:v5];

    uint64_t v6 = [a1[4] externalGuidanceSource];
    id v7 = [v6 routeRepresentator];
    uint64_t v8 = [v7 originalWaypointRouteRepresentation];
    [v2 setOriginalWaypointRouteData:v8];

    double v9 = [a1[4] externalGuidanceSource];
    double v10 = [v9 etaFilterData];
    [v2 setEtaFilterData:v10];

    uint64_t v11 = [a1[4] externalGuidanceSource];
    uint64_t v12 = [v11 incidentsOnRouteData];
    [v2 setIncidentsOnRouteData:v12];

    double v13 = [a1[4] externalGuidanceSource];
    double v14 = [v13 incidentsOnRouteOffsets];
    [v2 setIncidentsOnRouteOffsets:v14];
  }
  double v15 = [a1[4] virtualGarageSource];

  if (v15)
  {
    long long v16 = [a1[4] virtualGarageSource];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1004609FC;
    void v18[3] = &unk_1012EAF70;
    id v19 = v2;
    id v20 = a1[6];
    [v16 getEvChargingMetadata:v18];
  }
  else
  {
    id v17 = (void (**)(id, void *))a1[6];
    if (v17) {
      v17[2](v17, v2);
    }
  }
}

void sub_1004609FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v19 = v3;
  if (v3)
  {
    [*(id *)(a1 + 32) setEvChargingMetadata:v3];
    double v10 = [v19 debugDescription];
    sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC Attached EV info in the response: %@", v11, v12, v13, v14, v15, v16, (uint64_t)v10);
  }
  else
  {
    sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC No EV info could be found.", v4, v5, v6, v7, v8, v9, v18);
  }
  uint64_t v17 = *(void *)(a1 + 40);
  if (v17) {
    (*(void (**)(uint64_t, void))(v17 + 16))(v17, *(void *)(a1 + 32));
  }
}

void sub_100460B60(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) externalGuidanceSource];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) externalGuidanceSource];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    uint64_t v5[2] = sub_100460C60;
    v5[3] = &unk_1012EAFC0;
    id v6 = *(id *)(a1 + 40);
    [v3 repeatCurrentTrafficAlert:v5];
  }
  else
  {
    uint64_t v4 = objc_alloc_init(IPCNavigationActionReply);
    [(IPCNavigationActionReply *)v4 setSuccess:0];
    [(IPCNavigationActionReply *)v4 setNavigationActionError:1];
  }
}

void sub_100460C60(uint64_t a1, uint64_t a2)
{
  id v6 = objc_alloc_init(IPCNavigationActionReply);
  [(IPCNavigationActionReply *)v6 setSuccess:a2];
  if ((a2 & 1) == 0) {
    [(IPCNavigationActionReply *)v6 setNavigationActionError:2];
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = v6;
  if (v4)
  {
    (*(void (**)(uint64_t, IPCNavigationActionReply *))(v4 + 16))(v4, v6);
    uint64_t v5 = v6;
  }
}

void sub_100460D9C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) externalGuidanceSource];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) externalGuidanceSource];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    uint64_t v6[2] = sub_100460EB4;
    v6[3] = &unk_1012EAFC0;
    id v7 = *(id *)(a1 + 40);
    [v3 repeatCurrentGuidance:v6];
  }
  else
  {
    uint64_t v5 = objc_alloc_init(IPCNavigationActionReply);
    [(IPCNavigationActionReply *)v5 setSuccess:0];
    [(IPCNavigationActionReply *)v5 setNavigationActionError:1];
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      (*(void (**)(uint64_t, IPCNavigationActionReply *))(v4 + 16))(v4, v5);
    }
  }
}

void sub_100460EB4(uint64_t a1, uint64_t a2)
{
  id v6 = objc_alloc_init(IPCNavigationActionReply);
  [(IPCNavigationActionReply *)v6 setSuccess:a2];
  if ((a2 & 1) == 0) {
    [(IPCNavigationActionReply *)v6 setNavigationActionError:2];
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = v6;
  if (v4)
  {
    (*(void (**)(uint64_t, IPCNavigationActionReply *))(v4 + 16))(v4, v6);
    uint64_t v5 = v6;
  }
}

void sub_10046101C(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 bundleIdentifier];
  id v4 = +[CLInUseAssertion newAssertionForBundleIdentifier:v3 withReason:@"Maps is starting navigation in response to a Siri/Watch request"];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 56);
  *(void *)(v5 + 56) = v4;

  [*(id *)(a1 + 32) setLoadDirectionsDelayedReply:*(void *)(a1 + 48)];
  [*(id *)(a1 + 32) _startWaitingToSendResponse];
  id v7 = +[UIApplication _maps_keyMapsSceneDelegate];
  if (v7)
  {

LABEL_4:
    sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC There is a key and/or application scene, continuing with the request", v8, v9, v10, v11, v12, v13, v16);
    id v17 = [*(id *)(a1 + 32) backgroundNavigationDelegate];
    [v17 prepareBackgroundNavigationWithMessage:*(void *)(a1 + 40)];

    return;
  }
  if (+[UIApplication _maps_numberOfApplicationScenes]) {
    goto LABEL_4;
  }
  sub_1000ABFCC(OS_LOG_TYPE_INFO, @"MAPS IPC There isn't a key nor application scene, delaying request", v8, v9, v10, v11, v12, v13, v16);
  uint64_t v14 = *(void **)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);

  _[v14 _startWaitingToHandleMessage:v15];
}

void sub_10046123C(uint64_t a1)
{
  [*(id *)(a1 + 32) setStartNavigationDelayedReply:*(void *)(a1 + 48)];
  [*(id *)(a1 + 32) _startWaitingToSendResponse];
  id v2 = [*(id *)(a1 + 32) backgroundNavigationDelegate];
  [v2 startPreparedBackgroundNavigationWithMessage:*(void *)(a1 + 40)];
}

void sub_10046135C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) externalGuidanceSource];
  [v2 setVoiceGuidanceEnabled:[*(id *)(a1 + 40) muteNavigation] ^ 1];
}

void sub_100461474(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) externalGuidanceSource];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 40) requestedVolume];
    if (v3)
    {
      id v16 = v3;
      id v4 = [*(id *)(a1 + 32) externalGuidanceSource];
      [v4 setVoiceGuidanceEnabled:[v16 isEqualToString:@"Off Volume"] ^ 1];

      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 156);
      id v6 = v16;
      if (qword_10160ED28 != -1) {
        dispatch_once(&qword_10160ED28, &stru_1012EB108);
      }
      id v7 = (id)qword_10160ED20;
      if (v5 == 2)
      {
        int v8 = MNHeadphonesAreInUse();
        uint64_t v9 = @"VoiceVolumeForWalkingWithoutHeadphonesContext";
        if (v8) {
          uint64_t v9 = @"VoiceVolumeForWalkingWithHeadphonesContext";
        }
        uint64_t v10 = v9;
      }
      else
      {
        uint64_t v10 = @"VoiceVolumeForDrivingContext";
      }
      id v11 = [v6 isEqualToString:@"Off Volume"];
      if ((v11 & 1) == 0)
      {
        uint64_t v12 = [v7 path];
        _CFPreferencesSetAppValueWithContainer();
      }
      if (qword_10160ED28 != -1) {
        dispatch_once(&qword_10160ED28, &stru_1012EB108);
      }
      id v13 = (id)qword_10160ED20;
      +[NSNumber numberWithBool:v11];
      uint64_t v14 = [v13 path];
      _CFPreferencesSetAppValueWithContainer();

      uint64_t v15 = [v13 path];

      _CFPreferencesSynchronizeWithContainer();
      GSSendAppPreferencesChanged();
      GSSendAppPreferencesChanged();

      id v3 = v16;
    }
  }
}

void sub_100461CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

id sub_100462544(uint64_t a1)
{
  return [*(id *)(a1 + 32) navigationStateDidChangeTo:*(void *)(a1 + 56) reason:*(void *)(a1 + 40) error:*(void *)(a1 + 48)];
}

void sub_10046261C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100462638(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1004626D0;
  v3[3] = &unk_1012E6830;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  char v5 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
  objc_destroyWeak(&v4);
}

void sub_1004626D0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _noteGuidanceStateChanged];

  id v4 = objc_loadWeakRetained(v2);
  [v4 _pushGuidanceStateIfChangedWithVibration:*(unsigned __int8 *)(a1 + 40)];
}

MKServerFormattedString *__cdecl sub_100462C80(id a1, NSString *a2, unint64_t a3)
{
  return (MKServerFormattedString *)[(NSString *)a2 mkServerFormattedString];
}

void sub_100462E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100462E28(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[1] = *(void *)(a1 + 40);
    id v5 = WeakRetained;
    [WeakRetained _noteGuidanceStateChanged];
    [v5 _pushGuidanceStateIfChangedWithVibration:a2];
    id WeakRetained = v5;
  }
}

void sub_100462FFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100463018(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[1] = 0;
    id v4 = WeakRetained;
    [WeakRetained setState:1 withReason:5];
    uint8_t v4[16] = 0;
    [v4 _noteGuidanceStateChanged];
    [v4 _pushGuidanceStateIfChangedWithVibration:a2];
    id WeakRetained = v4;
  }
}

void sub_100463090(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100463124;
  v3[3] = &unk_1012E9AD0;
  id v4 = *(id *)(a1 + 32);
  char v5 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

uint64_t sub_100463124(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
}

id sub_100463A00(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

id sub_100463A68(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

BOOL sub_1004640E8(void *a1, unint64_t a2)
{
  id v3 = a1;
  id v4 = v3;
  BOOL v5 = 1;
  if (a2 <= 0xA)
  {
    if (((1 << a2) & 0x503) != 0)
    {
LABEL_3:
      BOOL v5 = 0;
      goto LABEL_4;
    }
    if (a2 == 2 && ([v3 isResumingMultipointRoute] & 1) == 0)
    {
      id v7 = [v4 route];
      unsigned int v8 = [v7 isMultipointRoute];

      if (v8)
      {
        unint64_t UInteger = GEOConfigGetUInteger();
        BOOL v5 = (unint64_t)[v4 stepIndex] >= UInteger;
        goto LABEL_4;
      }
      goto LABEL_3;
    }
  }
LABEL_4:

  return v5;
}

id sub_100464444()
{
  if (qword_10160ED38 != -1) {
    dispatch_once(&qword_10160ED38, &stru_1012EB238);
  }
  uint64_t v0 = (void *)qword_10160ED30;

  return v0;
}

void sub_100464498(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100464444();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "_preserveAutosharingContacts: Error saving archived sharing state: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
}

void sub_100464918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10046493C(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1004649E4;
  v2[3] = &unk_1012EB188;
  id v3 = *(id *)(a1 + 32);
  objc_copyWeak(&v4, (id *)(a1 + 40));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
  objc_destroyWeak(&v4);
}

void sub_1004649E4(uint64_t a1)
{
  uint64_t v2 = sub_100464444();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Route paused, running completion handler and trying to start route genius", v6, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[33] = 1;
    [WeakRetained _launchRouteGeniusIfNeeded];
  }
}

void sub_100464BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100464C0C(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100464CB4;
  v2[3] = &unk_1012EB188;
  id v3 = *(id *)(a1 + 32);
  objc_copyWeak(&v4, (id *)(a1 + 40));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
  objc_destroyWeak(&v4);
}

void sub_100464CB4(uint64_t a1)
{
  uint64_t v2 = sub_100464444();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "un-pause completed", v5, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained) {
    WeakRetained[33] = 0;
  }
}

void sub_1004650CC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10046515C;
  v3[3] = &unk_1012E5D08;
  id v4 = *(id *)(a1 + 48);
  [v1 _interruptAndSaveHistoryEntry:v2 completion:v3];
}

void sub_10046515C(uint64_t a1)
{
  uint64_t v2 = sub_100464444();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Finished saving directions item on app termination.", v3, 2u);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1004654A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100464444();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = [*(id *)(a1 + 32) resumeRouteHandle];
    int v6 = 138412546;
    id v7 = v5;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "navigationService:didUpdateResumeRouteHandle Did update resumeRouteHandle: %@ error: %@", (uint8_t *)&v6, 0x16u);
  }
}

void sub_100465684(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    uint64_t v5 = *(void **)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    int v6 = *(void **)(a1 + 32);
    id v7 = a3;
    __int16 v8 = [v5 route];
    LOWORD(v4) = (unsigned __int16)[v6 _routeProgressWaypointIndexForCurrentLegIndex:v4 inRoute:v8];

    [v7 setRouteProgressWaypointIndex:(__int16)v4];
    id v9 = [*(id *)(a1 + 32) _currentRouteHandleStorage];
    uint64_t v10 = [v7 routeRequestStorage];
    [v10 setResumeRouteHandleStorage:v9];

    [*(id *)(a1 + 32) _updateEVInfoForHistoryEntry:v7];
    id v11 = sub_100464444();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = *(void *)(a1 + 48);
      id v13 = [*(id *)(a1 + 40) route];
      uint64_t v14 = [v13 legs];
      id v15 = [v14 count];
      id v16 = [*(id *)(a1 + 40) resumeRouteHandle];
      int v17 = 134218498;
      uint64_t v18 = v12;
      __int16 v19 = 2048;
      id v20 = v15;
      __int16 v21 = 2112;
      id v22 = v16;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "navigationServiceDidResume: recording resume waypoint index: %lu (%lu legs), resumeHandle: %@", (uint8_t *)&v17, 0x20u);
    }
  }
}

void sub_100465D04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = [*(id *)(a1 + 32) _currentRouteHandleStorage];
    __int16 v8 = [v6 routeRequestStorage];
    [v8 setResumeRouteHandleStorage:v7];

    unsigned int v9 = [*(id *)(a1 + 32) _updateEVInfoForHistoryEntry:v6];
    uint64_t v10 = *(void *)(a1 + 48) + 1;
    id v11 = [*(id *)(a1 + 40) route];
    uint64_t v12 = [v11 legs];
    id v13 = [v12 count];

    if ((id)v10 == v13)
    {
      uint64_t v14 = sub_100464444();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        int v22 = 67109120;
        LODWORD(v23) = v9;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "navigationServiceDidArrive: skip recording resume waypoint index, we're end of route, didUpdateEVInfo: %d", (uint8_t *)&v22, 8u);
      }
    }
    else
    {
      id v15 = *(void **)(a1 + 32);
      id v16 = [*(id *)(a1 + 40) route];
      id v17 = [v15 _routeProgressWaypointIndexForCurrentLegIndex:v10 inRoute:v16];

      uint64_t v18 = sub_100464444();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        uint64_t v19 = *(void *)(a1 + 48);
        id v20 = [*(id *)(a1 + 40) route];
        __int16 v21 = [v20 legs];
        int v22 = 134218496;
        uint64_t v23 = v19;
        __int16 v24 = 2048;
        id v25 = v17;
        __int16 v26 = 2048;
        id v27 = [v21 count];
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "navigationServiceDidArrive: at end of leg %lu, recording resume waypoint index: %lu (%lu legs)", (uint8_t *)&v22, 0x20u);
      }
      [v6 setRouteProgressWaypointIndex:(__int16)v17];
    }
  }
}

void sub_100466490(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100464444();
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138543362;
      uint64_t v10 = v2;
      id v5 = "Failed to commit SPR/EV history entry update with error: %{public}@";
      id v6 = v4;
      os_log_type_t v7 = OS_LOG_TYPE_ERROR;
      uint32_t v8 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v5, (uint8_t *)&v9, v8);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v9) = 0;
    id v5 = "Successfully committed SPR/EV history entry";
    id v6 = v4;
    os_log_type_t v7 = OS_LOG_TYPE_INFO;
    uint32_t v8 = 2;
    goto LABEL_6;
  }
}

void sub_100466574(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100464444();
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138543362;
      uint64_t v10 = v2;
      id v5 = "Failed to commit MPR history entry update with error: %{public}@";
      id v6 = v4;
      os_log_type_t v7 = OS_LOG_TYPE_ERROR;
      uint32_t v8 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v5, (uint8_t *)&v9, v8);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v9) = 0;
    id v5 = "Successfully committed MPR history entry";
    id v6 = v4;
    os_log_type_t v7 = OS_LOG_TYPE_INFO;
    uint32_t v8 = 2;
    goto LABEL_6;
  }
}

void sub_100466834(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = +[MNNavigationService sharedService];
    id v6 = [v5 stepIndex];

    os_log_type_t v7 = (char *)[*(id *)(a1 + 32) legIndexForStepIndex:v6];
    uint32_t v8 = [*(id *)(a1 + 32) legs];
    int v9 = (char *)[v8 count];

    if (v7 >= v9)
    {
      id v13 = sub_100464444();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
LABEL_13:

        goto LABEL_14;
      }
      uint64_t v14 = [*(id *)(a1 + 32) steps];
      int v20 = 134218496;
      __int16 v21 = v7;
      __int16 v22 = 2048;
      id v23 = v6;
      __int16 v24 = 2048;
      id v25 = [v14 count];
      id v16 = "Got currentLegIndex: %lu, currentStepIndex: %lu, number of steps: %lu";
      id v17 = v13;
      os_log_type_t v18 = OS_LOG_TYPE_ERROR;
      uint32_t v19 = 32;
    }
    else
    {
      uint64_t v10 = *(void *)(a1 + 48);
      if (v10 == 4 || v10 == 2)
      {
        ++v7;
        id v11 = sub_100464444();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          int v20 = 134217984;
          __int16 v21 = v7;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Advanced currentLegIndex to %lu due to the arrival state", (uint8_t *)&v20, 0xCu);
        }
      }
      uint64_t v12 = (char *)[*(id *)(a1 + 40) _routeProgressWaypointIndexForCurrentLegIndex:v7 inRoute:*(void *)(a1 + 32)];
      [v4 setRouteProgressWaypointIndex:(__int16)v12];
      [*(id *)(a1 + 40) _updateEVInfoForHistoryEntry:v4];
      id v13 = sub_100464444();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO)) {
        goto LABEL_13;
      }
      uint64_t v14 = [*(id *)(a1 + 32) legs];
      id v15 = [v14 count];
      int v20 = 134218240;
      __int16 v21 = v12;
      __int16 v22 = 2048;
      id v23 = v15;
      id v16 = "Updating MPR history entry waypoint index for new route: %lu (%lu legs)";
      id v17 = v13;
      os_log_type_t v18 = OS_LOG_TYPE_INFO;
      uint32_t v19 = 22;
    }
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v16, (uint8_t *)&v20, v19);

    goto LABEL_13;
  }
LABEL_14:
}

void sub_1004670AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "HistoryDirectionsItemSavingTask");
  uint64_t v2 = (void *)qword_10160ED30;
  qword_10160ED30 = (uint64_t)v1;
}

id sub_100467248()
{
  if (qword_10160ED48 != -1) {
    dispatch_once(&qword_10160ED48, &stru_1012EB300);
  }
  uint64_t v0 = (void *)qword_10160ED40;

  return v0;
}

void sub_1004689C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004689EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained hideVIOLabel:1];
}

void sub_100468C60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100468C7C(uint64_t a1)
{
  [*(id *)(a1 + 32) updateHeightConstraints];
  id v3 = [*(id *)(a1 + 32) view];
  uint64_t v2 = [v3 superview];
  [v2 layoutIfNeeded];
}

void sub_100468CE4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained[2] removeFromSuperview];
    id WeakRetained = v2;
  }
}

id sub_100468FB4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = NSStringFromSelector("collapsedHeight");
  [v2 willChangeValueForKey:v3];

  id v4 = [*(id *)(a1 + 32) collectionView];
  id v5 = [v4 collectionViewLayout];
  [v5 invalidateLayout];

  id v6 = [*(id *)(a1 + 32) collectionView];
  [v6 layoutIfNeeded];

  [*(id *)(a1 + 32) _updateActiveStepIndexAnimated:0];
  [*(id *)(a1 + 32) _updateLayoutProgressWithDuration:0 completion:0.0];
  os_log_type_t v7 = *(void **)(a1 + 32);
  uint32_t v8 = NSStringFromSelector("collapsedHeight");
  [v7 didChangeValueForKey:v8];

  int v9 = *(void **)(a1 + 32);

  return [v9 _updateCollectionViewBottomInset];
}

void sub_1004691C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = (id *)(a1 + 32);
    unsigned int v3 = [*(id *)(a1 + 32) isExpanded];
    id v4 = sub_100826530();
    [*((id *)*v2 + 10) setNonBlurredColor:v4];

    if (!v3) {
      return;
    }
    id v5 = sub_1008265CC();
    [*((id *)*v2 + 28) setOverlayColor:v5];

    id v6 = sub_100826530();
    os_log_type_t v7 = [v6 colorWithAlphaComponent:0.0];
    v19[0] = v7;
    uint32_t v8 = sub_100826530();
    int v9 = [v8 colorWithAlphaComponent:0.25];
    v19[1] = v9;
    uint64_t v10 = sub_100826530();
    v19[2] = v10;
    id v11 = v19;
  }
  else
  {
    uint64_t v12 = sub_1008263F8();
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v2 = (id *)(a1 + 32);
    [*(id *)(v13 + 80) setNonBlurredColor:v12];

    uint64_t v14 = sub_10082634C();
    [*v2 layoutProgress];
    id v16 = [v14 colorWithAlphaComponent:v15 * 0.239999995];
    [*((id *)*v2 + 28) setOverlayColor:v16];

    id v6 = sub_1008263F8();
    os_log_type_t v7 = [v6 colorWithAlphaComponent:0.0];
    v18[0] = v7;
    uint32_t v8 = sub_1008263F8();
    int v9 = [v8 colorWithAlphaComponent:0.25];
    v18[1] = v9;
    uint64_t v10 = sub_1008263F8();
    v18[2] = v10;
    id v11 = v18;
  }
  id v17 = +[NSArray arrayWithObjects:v11 count:3];
  [*((id *)*v2 + 13) setColors:v17];
}

void sub_10046A064(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) footerView];
  [v2 setShouldShowEndButton:v1];
}

void sub_10046A804(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [v2 _displayIndexPath];
  [v2 scrollToIndexPath:v3 animated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10046AD9C(uint64_t a1, uint64_t a2)
{
  id v3 = +[NSIndexPath indexPathForItem:a2 inSection:0];
  [*(id *)(a1 + 32) addObject:v3];
}

id sub_10046B20C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_10046B34C(uint64_t a1)
{
  [*(id *)(a1 + 32) setShowsHairline:[*(id *)(a1 + 40) _showsHairlineForItemIndex:*(void *)(a1 + 56)]];
  [*(id *)(a1 + 48) setItem:*(void *)(a1 + 32)];
  if ([*(id *)(a1 + 40) isLaneGuidanceActive])
  {
    id v2 = *(id *)(a1 + 56);
    BOOL v3 = v2 == [*(id *)(a1 + 40) activeStepIndex];
  }
  else
  {
    BOOL v3 = 0;
  }
  [*(id *)(a1 + 48) setHideManeuverArrow:v3];
  id v4 = *(void **)(a1 + 48);
  id v5 = [*(id *)(a1 + 40) _stateForItemIndex:*(void *)(a1 + 56)];
  [*(id *)(a1 + 40) layoutProgress];
  [v4 setState:v5];
  [*(id *)(a1 + 48) setDelegate:*(void *)(a1 + 40)];
  id v6 = *(void **)(a1 + 48);

  return [v6 layoutIfNeeded];
}

void sub_10046BF1C(uint64_t a1)
{
  id v2 = *(unsigned __int8 **)(a1 + 32);
  int v3 = v2[57];
  id v4 = [v2 collectionView];
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    id v5 = +[NSArray arrayWithObjects:&v6 count:1];
    [v4 reloadItemsAtIndexPaths:v5];
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 40);
    id v5 = +[NSArray arrayWithObjects:&v7 count:1];
    [v4 reconfigureItemsAtIndexPaths:v5];
  }
}

void sub_10046CE44(uint64_t a1)
{
  [*(id *)(a1 + 32) _collapsedSignHeight];
  double v3 = v2;
  [*(id *)(*(void *)(a1 + 32) + 128) setConstant:];
  [*(id *)(a1 + 32) layoutProgress];
  if (fabs(v4) <= 2.22044605e-16)
  {
    [*(id *)(*(void *)(a1 + 32) + 112) setConstant:v3];
    id v5 = [*(id *)(a1 + 32) footerView];
    [v5 minimumHeight];
    double v7 = v3 + v6;
    uint32_t v8 = [*(id *)(a1 + 32) signDelegate];
    [v8 setSignListHeight:v7];
  }
  [*(id *)(a1 + 32) scrollToIndexPath:*(void *)(a1 + 40) animated:0];
  [*(id *)(a1 + 32) _updateCurrentManeuverBackground];
  [*(id *)(*(void *)(a1 + 32) + 256) setActiveStepIndex:[*(id *)(a1 + 32) activeStepIndex]];
  id v10 = [*(id *)(a1 + 32) view];
  int v9 = [v10 superview];
  [v9 layoutIfNeeded];
}

void sub_10046CF74(uint64_t a1)
{
  [*(id *)(a1 + 32) _cleanupStepCountdowns];
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"MapsPPTGuidanceDidUpdateNotifcation" object:0];
}

void sub_10046D0F4(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateSelectionBackgrounds];
  [*(id *)(a1 + 32) updateHeightConstraints];
  id v3 = [*(id *)(a1 + 32) view];
  double v2 = [v3 superview];
  [v2 layoutIfNeeded];
}

uint64_t sub_10046D164(uint64_t a1)
{
  double v2 = *(unsigned __int8 **)(a1 + 32);
  uint64_t v3 = v2[160];
  double v4 = [v2 collectionView];
  [v4 setScrollEnabled:v3];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    double v6 = *(uint64_t (**)(void))(result + 16);
    return v6();
  }
  return result;
}

void sub_10046D298(uint64_t a1)
{
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  double v2 = [*(id *)(a1 + 32) collectionView];
  uint64_t v3 = [v2 indexPathsForVisibleItems];

  id v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      double v7 = 0;
      do
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        uint32_t v8 = *(void **)(*((void *)&v16 + 1) + 8 * (void)v7);
        int v9 = [*(id *)(a1 + 32) collectionView];
        id v10 = [v9 cellForItemAtIndexPath:v8];

        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v11 = v10;
          if ([*(id *)(a1 + 32) isLaneGuidanceActive])
          {
            id v12 = [v8 item];
            BOOL v13 = v12 == [*(id *)(a1 + 32) activeStepIndex];
          }
          else
          {
            BOOL v13 = 0;
          }
          [v11 setHideManeuverArrow:v13];
        }
        double v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }

  uint64_t v14 = [*(id *)(a1 + 32) view];
  double v15 = [v14 superview];
  [v15 layoutIfNeeded];
}

void sub_10046ED68(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavSignListViewController");
  double v2 = (void *)qword_10160ED40;
  qword_10160ED40 = (uint64_t)v1;
}

void sub_10046F074(void *a1)
{
  os_log_t v1 = a1;
  uint64_t v2 = 0;
  char v12 = 0;
  do
  {
    uint64_t v3 = v2 + 16;
    if (v2 == 368) {
      break;
    }
    id v4 = (char *)off_1012EB320 + v2;
    id v5 = +[NSString stringWithCString:*(char **)((char *)off_1012EB320 + v2) encoding:4];
    uint64_t v6 = +[NSString stringWithCString:*((void *)v4 + 1) encoding:4];
    if ([v6 hasPrefix:@"@privateFrameworksPath"])
    {
      double v7 = +[NSBundle mainBundle];
      uint64_t v8 = [v7 privateFrameworksPath];
      int v9 = v6;
      uint64_t v10 = 22;
LABEL_7:
      uint64_t v11 = [v9 stringByReplacingCharactersInRange:0 withString:v10 v8];

      uint64_t v6 = (void *)v8;
      goto LABEL_8;
    }
    if ([v6 hasPrefix:@"@builtInPlugInsPath"])
    {
      double v7 = +[NSBundle mainBundle];
      uint64_t v8 = [v7 builtInPlugInsPath];
      int v9 = v6;
      uint64_t v10 = 19;
      goto LABEL_7;
    }
    if (![v6 hasPrefix:@"@GEOConfigDebug"]) {
      goto LABEL_9;
    }
    double v7 = +[GEOFilePaths pathFor:39];
    uint64_t v11 = [v6 stringByReplacingCharactersInRange:0, 15, v7];
LABEL_8:

    uint64_t v6 = (void *)v11;
LABEL_9:
    v1[2](v1, v5, v6, &v12);

    uint64_t v2 = v3;
  }
  while (!v12);
}

void sub_10046FA2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10046FA54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v8 = +[CollectionsFilterCell reuseIdentifier];
    int v9 = [v5 dequeueReusableCellWithReuseIdentifier:v8 forIndexPath:v6];

    uint64_t v10 = [WeakRetained filterAtIndexPath:v6];
    [v9 configureWithModel:v10];
  }
  else
  {
    int v9 = 0;
  }

  return v9;
}

void sub_1004701BC(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 filterType];
  if (v3 == (id)1)
  {
    uint64_t v10 = [v13 addressFilter];

    id v5 = v13;
    if (!v10) {
      goto LABEL_9;
    }
    uint64_t v11 = [CollectionsFilterViewModel alloc];
    uint64_t v8 = [v13 addressFilter];
    int v9 = [(CollectionsFilterViewModel *)v11 initWithAllCollectionsAddressFilter:v8 isDarkMode:*(unsigned __int8 *)(a1 + 40)];
    goto LABEL_8;
  }
  BOOL v4 = v3 == (id)2;
  id v5 = v13;
  if (v4)
  {
    id v6 = [v13 keywordFilter];

    id v5 = v13;
    if (v6)
    {
      double v7 = [CollectionsFilterViewModel alloc];
      uint64_t v8 = [v13 keywordFilter];
      int v9 = [(CollectionsFilterViewModel *)v7 initWithAllCollectionsKeywordFilter:v8 isDarkMode:*(unsigned __int8 *)(a1 + 40)];
LABEL_8:
      char v12 = v9;

      [*(id *)(a1 + 32) addObject:v12];
      id v5 = v13;
    }
  }
LABEL_9:
}

void sub_1004704A8(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 filterType];
  if (v3 == (id)1)
  {
    uint64_t v10 = [v13 addressFilter];

    id v5 = v13;
    if (!v10) {
      goto LABEL_9;
    }
    uint64_t v11 = [CollectionsFilterViewModel alloc];
    uint64_t v8 = [v13 addressFilter];
    int v9 = [(CollectionsFilterViewModel *)v11 initWithAddressFilter:v8 isDarkMode:*(unsigned __int8 *)(a1 + 40)];
    goto LABEL_8;
  }
  BOOL v4 = v3 == (id)2;
  id v5 = v13;
  if (v4)
  {
    id v6 = [v13 keywordFilter];

    id v5 = v13;
    if (v6)
    {
      double v7 = [CollectionsFilterViewModel alloc];
      uint64_t v8 = [v13 keywordFilter];
      int v9 = [(CollectionsFilterViewModel *)v7 initWithKeywordFilter:v8 isDarkMode:*(unsigned __int8 *)(a1 + 40)];
LABEL_8:
      char v12 = v9;

      [*(id *)(a1 + 32) addObject:v12];
      id v5 = v13;
    }
  }
LABEL_9:
}

void sub_10047079C(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([v7 filterType] == (id)1)
  {
    id v3 = [v7 conceptFilter];

    if (v3)
    {
      BOOL v4 = [CollectionsFilterViewModel alloc];
      id v5 = [v7 conceptFilter];
      id v6 = [(CollectionsFilterViewModel *)v4 initWithGuidesHomeConceptFilter:v5 isDarkMode:*(unsigned __int8 *)(a1 + 40)];

      [*(id *)(a1 + 32) addObject:v6];
    }
  }
}

id sub_100470AC4()
{
  if (qword_10160ED58 != -1) {
    dispatch_once(&qword_10160ED58, &stru_1012EB540);
  }
  uint64_t v0 = (void *)qword_10160ED50;

  return v0;
}

void sub_100470B18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateState];
}

void sub_100470B58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateState];
}

void sub_100470FCC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionUsageMonitor");
  uint64_t v2 = (void *)qword_10160ED50;
  qword_10160ED50 = (uint64_t)v1;
}

void sub_100471300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10047131C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _transitionIfImpressionState:1 toImpressionState:2];
    id WeakRetained = v2;
  }
}

uint64_t sub_100471A64(uint64_t a1)
{
  id v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_opt_class();
    BOOL v4 = *(const char **)(a1 + 48);
    id v5 = v3;
    id v6 = NSStringFromSelector(v4);
    int v8 = 138412546;
    int v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ %@: Accepted Nearby Transit tip", (uint8_t *)&v8, 0x16u);
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100471B68(uint64_t a1)
{
  id v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_opt_class();
    BOOL v4 = *(const char **)(a1 + 48);
    id v5 = v3;
    id v6 = NSStringFromSelector(v4);
    int v9 = 138412546;
    __int16 v10 = v3;
    __int16 v11 = 2112;
    char v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ %@: Displayed Nearby Transit tip", (uint8_t *)&v9, 0x16u);
  }
  if (([*(id *)(a1 + 32) hasRecordedSession] & 1) == 0)
  {
    id v7 = [*(id *)(a1 + 32) dataStore];
    [v7 incrementSessionsShown];

    [*(id *)(a1 + 32) setRecordedSession:1];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100471C9C(uint64_t a1)
{
  id v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_opt_class();
    BOOL v4 = *(const char **)(a1 + 48);
    id v5 = v3;
    id v6 = NSStringFromSelector(v4);
    int v8 = 138412546;
    int v9 = v3;
    __int16 v10 = 2112;
    __int16 v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ %@: Dismissed Nearby Transit tip", (uint8_t *)&v8, 0x16u);
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100473DEC()
{
  if (qword_10160ED68 != -1) {
    dispatch_once(&qword_10160ED68, &stru_1012EB5D8);
  }
  uint64_t v0 = (void *)qword_10160ED60;

  return v0;
}

void sub_1004744F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavdRouteCollectionUpdateProvider");
  id v2 = (void *)qword_10160ED60;
  qword_10160ED60 = (uint64_t)v1;
}

void sub_1004757DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [[SearchResult alloc] initWithMapItem:v3];

  id v5 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v5 setSearchResult:v4];
  int v9 = v4;
  id v6 = +[NSArray arrayWithObjects:&v9 count:1];
  id v7 = +[SearchInfo searchInfoWithResults:v6];

  int v8 = [*(id *)(a1 + 32) appCoordinator];
  [v8 openSearch:v5 andResults:v7];
}

void sub_100475B0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100475B30(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100475C74;
    block[3] = &unk_1012E9730;
    objc_copyWeak(&v13, (id *)(a1 + 40));
    id v12 = *(id *)(a1 + 32);
    id v11 = v3;
    dispatch_async(v6, block);

    objc_destroyWeak(&v13);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = GEOErrorDomain();
    int v9 = +[NSError errorWithDomain:v8 code:-8 userInfo:0];
    (*(void (**)(uint64_t, void, void *))(v7 + 16))(v7, 0, v9);
  }
}

void sub_100475C74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v8 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained _processUpdatedSyncVehicles:*(void *)(a1 + 32)];
    id v4 = [v3 copy];
    id v5 = (void *)v8[2];
    long long v8[2] = v4;

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 40);
    id v3 = GEOErrorDomain();
    uint64_t v7 = +[NSError errorWithDomain:v3 code:-8 userInfo:0];
    (*(void (**)(uint64_t, void, void *))(v6 + 16))(v6, 0, v7);
  }
}

void sub_100475ECC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addOrEditVehicle:*(void *)(a1 + 32)];
}

void sub_10047608C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) identifier];
  int v9 = v2;
  id v3 = +[NSArray arrayWithObjects:&v9 count:1];
  id v4 = +[MapsSyncQueryPredicate queryPredicateWithFormat:@"vehicleIdentifier == %@" argumentArray:v3];

  id v5 = [objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions) initWithPredicate:v4 sortDescriptors:0 range:0];
  id v6 = objc_alloc_init((Class)MSVehicleRequest);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100476210;
  v7[3] = &unk_1012E6E78;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  [v6 fetchWithOptions:v5 completionHandler:v7];

  objc_destroyWeak(&v8);
}

void sub_1004761F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100476210(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id WeakRetained = GEOFindOrCreateLog();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_ERROR, "Failed to load load sync vehicle: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v8 = [v5 firstObject];
    [WeakRetained _removeSyncVehicle:v8];
  }
}

void sub_100476468(uint64_t a1)
{
  uint64_t v2 = +[MapsSyncStore sharedStore];
  uint64_t v6 = *(void *)(a1 + 32);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10047656C;
  v4[3] = &unk_1012EB010;
  id v5 = *(id *)(a1 + 32);
  [v2 deleteWithObjects:v3 completionHandler:v4];
}

void sub_10047656C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = GEOFindOrCreateLog();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = [*(id *)(a1 + 32) identifier];
      int v11 = 138412546;
      id v12 = v6;
      __int16 v13 = 2112;
      id v14 = v3;
      uint64_t v7 = "Failed to delete vehicle: %@ error: %@";
      id v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v11, v10);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = [*(id *)(a1 + 32) identifier];
    int v11 = 138412290;
    id v12 = v6;
    uint64_t v7 = "Successfully removed vehicle %@.";
    id v8 = v5;
    os_log_type_t v9 = OS_LOG_TYPE_INFO;
    uint32_t v10 = 12;
    goto LABEL_6;
  }
}

void sub_100476864(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addOrEditVehicle:*(void *)(a1 + 32)];
}

void sub_100476D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, id a19)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_100476D4C(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  id v5 = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    uint64_t v6 = WeakRetained[1];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100476E60;
    v7[3] = &unk_1012EB6B8;
    id v8 = v3;
    id v9 = a1[4];
    id v10 = v5;
    objc_copyWeak(&v11, a1 + 5);
    dispatch_async(v6, v7);
    objc_destroyWeak(&v11);
  }
}

void sub_100476E60(id *a1)
{
  id v65 = [a1[4] firstObject];
  if (!v65)
  {
    os_log_t v1 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      id v2 = a1[5];
      *(_DWORD *)long long buf = 138412290;
      id v79 = v2;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Didn't find vehicle: %@ in sync storage. Will create a new one.", buf, 0xCu);
    }

    id v65 = objc_alloc_init((Class)MSVehicle);
  }
  id v3 = [a1[6] identifier:v65];
  id v4 = [v3 copy];
  [v66 setVehicleIdentifier:v4];

  id v5 = [a1[6] iapIdentifier];
  id v6 = [v5 copy];
  [v66 setIapIdentifier:v6];

  uint64_t v7 = [a1[6] siriIntentsIdentifier];
  id v8 = [v7 copy];
  [v66 setSiriIntentsIdentifier:v8];

  id v9 = [a1[6] creationDate];
  [v66 setDateOfVehicleIngestion:v9];

  id v10 = [a1[6] lastStateUpdateDate];
  [v66 setLastStateUpdateDate:v10];

  id v11 = [a1[6] displayName];
  id v12 = [v11 copy];
  [v66 setDisplayName:v12];

  __int16 v13 = [a1[6] year];
  if ([v13 integerValue])
  {
    id v14 = [a1[6] year];
    double v15 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v14 integerValue]);
    [v66 setYear:v15];
  }
  else
  {
    [v66 setYear:0];
  }

  long long v16 = [a1[6] manufacturer];
  id v17 = [v16 copy];
  [v66 setManufacturer:v17];

  long long v18 = [a1[6] model];
  id v19 = [v18 copy];
  [v66 setModel:v19];

  int v20 = [a1[6] colorHex];
  id v21 = [v20 copy];
  [v66 setColorHex:v21];

  __int16 v22 = [a1[6] licensePlate];
  id v23 = [v22 copy];
  [v66 setLicensePlate:v23];

  __int16 v24 = [a1[6] lprVehicleType];
  id v25 = [v24 copy];
  [v66 setLprVehicleType:v25];

  __int16 v26 = [a1[6] lprPowerType];
  id v27 = [v26 copy];
  [v66 setLprPowerType:v27];

  uint64_t v28 = [a1[6] headUnitBluetoothIdentifier];
  id v29 = [v28 copy];
  [v66 setHeadUnitBluetoothIdentifier:v29];

  int v30 = [a1[6] headUnitIdentifier];
  id v31 = [v30 copy];
  [v66 setHeadUnitMacAddress:v31];

  BOOL v32 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [a1[6] supportedConnectors]);
  [v66 setSupportedConnectors:v32];

  uint64_t v33 = [a1[6] powerByConnector];

  if (v33)
  {
    char v34 = objc_opt_new();
    long long v75 = 0u;
    long long v76 = 0u;
    long long v73 = 0u;
    long long v74 = 0u;
    id obj = [a1[6] powerByConnector];
    id v35 = [obj countByEnumeratingWithState:&v73 objects:v82 count:16];
    if (v35)
    {
      uint64_t v36 = *(void *)v74;
      do
      {
        for (uint64_t i = 0; i != v35; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v74 != v36) {
            objc_enumerationMutation(obj);
          }
          uint64_t v38 = *(void *)(*((void *)&v73 + 1) + 8 * i);
          long long v39 = [a1[6] powerByConnector];
          id v40 = [v39 objectForKeyedSubscript:v38];

          __int16 v41 = +[NSUnitPower watts];
          uint64_t v42 = [v40 measurementByConvertingToUnit:v41];
          [v42 doubleValue];
          long long v43 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
          [v34 setObject:v43 forKeyedSubscript:v38];
        }
        id v35 = [obj countByEnumeratingWithState:&v73 objects:v82 count:16];
      }
      while (v35);
    }

    id v72 = 0;
    uint64_t v33 = +[NSKeyedArchiver archivedDataWithRootObject:v34 requiringSecureCoding:1 error:&v72];
    id v44 = v72;
    if (v44 || !v33)
    {
      uint64_t v45 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
      {
        long long v46 = [a1[6] powerByConnector];
        *(_DWORD *)long long buf = 138412546;
        id v79 = v46;
        __int16 v80 = 2112;
        id v81 = v44;
        _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_ERROR, "Failed to persist poweByConnector dictionary: %@, error: %@.", buf, 0x16u);
      }
    }
  }
  [v66 setPowerByConnector:v33];
  __int16 v47 = [a1[6] preferredChargingNetworks];

  if (v47)
  {
    id v48 = objc_alloc_init((Class)VGChargingNetworksStorage);
    __int16 v49 = [a1[6] preferredChargingNetworks];
    BOOL v50 = [v49 allObjects];
    uint64_t v51 = [v50 _geo_map:&stru_1012EB668];

    id v52 = [v51 mutableCopy];
    [v48 setNetworks:v52];

    [v48 setUsesPreferredNetworksForRouting:[a1[6] usesPreferredNetworksForRouting]];
    __int16 v47 = [v48 data];
  }
  [v66 setPreferredChargingNetworks:v47];
  id v53 = [a1[6] currentVehicleState];
  if (v53)
  {
    unsigned int v54 = [a1[6] isPureElectricVehicle];

    if (v54)
    {
      id v55 = [a1[6] currentVehicleState];
      uint64_t v56 = [v55 _storage];

      uint64_t v57 = [a1[6] pairedAppInstallDeviceIdentifier];
      id v58 = [v57 copy];
      [v56 setPairedAppInstallDeviceIdentifier:v58];

      unint64_t v59 = [a1[6] pairedAppInstallSessionIdentifier];
      id v60 = [v59 copy];
      [v56 setPairedAppInstallSessionIdentifier:v60];

      id v53 = [v56 data];
    }
    else
    {
      id v53 = 0;
    }
  }
  [v66 setCurrentVehicleState:v53];
  id v61 = [a1[6] pairedAppIdentifier];
  id v62 = [v61 copy];
  [v66 setPairedAppIdentifier:v62];

  long long v63 = +[MapsSyncStore sharedStore];
  uint64_t v77 = v66;
  uint64_t v64 = +[NSArray arrayWithObjects:&v77 count:1];
  v69[0] = _NSConcreteStackBlock;
  v69[1] = 3221225472;
  v69[2] = sub_100477750;
  v69[3] = &unk_1012EB690;
  objc_copyWeak(&v71, a1 + 7);
  id v70 = a1[5];
  [v63 saveWithObjects:v64 completionHandler:v69];

  objc_destroyWeak(&v71);
}

void sub_10047772C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

VGChargingNetworkStorage *__cdecl sub_100477748(id a1, VGChargingNetwork *a2)
{
  return (VGChargingNetworkStorage *)_VGChargingNetworkStorageFromVGChargingNetwork(a2);
}

void sub_100477750(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = WeakRetained[1];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100477818;
    v7[3] = &unk_1012E5D58;
    id v8 = v3;
    id v9 = *(id *)(a1 + 32);
    dispatch_async(v6, v7);
  }
}

void sub_100477818(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = GEOFindOrCreateLog();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      int v12 = 138412546;
      uint64_t v13 = v5;
      __int16 v14 = 2112;
      uint64_t v15 = v6;
      uint64_t v7 = "Failed to persist vehicle: %@ error: %@";
      id v8 = v4;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      uint32_t v10 = 22;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v12, v10);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = *(void *)(a1 + 40);
    int v12 = 138412290;
    uint64_t v13 = v11;
    uint64_t v7 = "Successfully saved vehicle %@ as MSVehicle.";
    id v8 = v4;
    os_log_type_t v9 = OS_LOG_TYPE_INFO;
    uint32_t v10 = 12;
    goto LABEL_6;
  }
}

void sub_100477C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100477C80(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = objc_loadWeakRetained(WeakRetained + 3);
    [v5 garagePersister:v4 wantsToUpdateVehicles:v6];
  }
}

id sub_10047925C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 128) hairLineAlpha];
}

id sub_100479270(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 128) setHairLineAlpha:];
}

void sub_100479710(uint64_t a1)
{
  uint64_t v2 = sub_100576BCC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    id v3 = [*(id *)(a1 + 32) shortcut];
    int v4 = 138412290;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Failed to save favorite button shortcut %@", (uint8_t *)&v4, 0xCu);
  }
}

id sub_10047A874(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:1.0];
}

id sub_10047A88C(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10047A910;
  v3[3] = &unk_1012E5D08;
  uint64_t v1 = *(void *)(a1 + 40);
  void v3[4] = *(void *)(a1 + 32);
  return +[UIView animateWithDuration:v3 animations:v1 completion:0.3];
}

id sub_10047A910(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:0.0];
}

id sub_10047AC00(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 80) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  [*(id *)(*(void *)(a1 + 32) + 88) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  [*(id *)(*(void *)(a1 + 32) + 96) setFrame:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

void sub_10047BB3C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id sub_10047BB60()
{
  if (qword_10160ED88 != -1) {
    dispatch_once(&qword_10160ED88, &stru_1012EB860);
  }
  uint64_t v0 = (void *)qword_10160ED80;

  return v0;
}

void sub_10047BBB4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = sub_10047BB60();
  uint64_t v7 = v6;
  os_signpost_id_t v8 = *(void *)(a1 + 48);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)uint64_t v15 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, v8, "FetchingCitySelectorView", "", v15, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!a3
    && v5
    && ([v5 sections],
        uint64_t v11 = objc_claimAutoreleasedReturnValue(),
        id v12 = [v11 count],
        v11,
        v12))
  {
    [WeakRetained setResult:v5];
    uint64_t v13 = [v5 sections];
    [WeakRetained setSections:v13];

    __int16 v14 = [WeakRetained stateHandler];
    ((void (**)(void, id, uint64_t))v14)[2](v14, [WeakRetained state], 2);

    [WeakRetained setState:2];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint32_t v10 = [WeakRetained stateHandler];
    ((void (**)(void, id, uint64_t))v10)[2](v10, [WeakRetained state], 3);

    [WeakRetained setState:3];
  }
}

void sub_10047C0AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_10047C0E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = [WeakRetained sections];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10047C1B4;
  v7[3] = &unk_1012EB818;
  id v8 = v3;
  id v9 = *(id *)(a1 + 32);
  id v6 = v3;
  [v5 enumerateObjectsUsingBlock:v7];
}

void sub_10047C1B4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 pdGuideLocationEntries];
  uint64_t v7 = [*(id *)(a1 + 32) geoMapItemIdentifier];
  id v9 = [v6 objectForKey:v7];

  id v8 = v9;
  if (v9)
  {
    [*(id *)(a1 + 40) addObject:v9];
    id v8 = v9;
    *a4 = 1;
  }
}

void sub_10047C254(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
    {
      [WeakRetained setGuideLocations:0];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      id v9 = sub_10047BB60();
      uint32_t v10 = v9;
      os_signpost_id_t v11 = *(void *)(a1 + 48);
      if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "FetchingCitySelectorViewBatch", "", buf, 2u);
      }
    }
    else
    {
      id v12 = sub_10047BB60();
      uint64_t v13 = v12;
      os_signpost_id_t v14 = *(void *)(a1 + 48);
      if (v14 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
      {
        *(_WORD *)uint64_t v15 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_INTERVAL_END, v14, "FetchingCitySelectorViewBatch", "", v15, 2u);
      }

      [v8 setGuideLocations:v5];
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

void sub_10047C4EC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CitySelectorAPIController");
  uint64_t v2 = (void *)qword_10160ED80;
  qword_10160ED80 = (uint64_t)v1;
}

id sub_10047F9DC(uint64_t a1)
{
  [*(id *)(a1 + 32) _updatePageIndicatorVisibility];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  double v5 = *(double *)(a1 + 56);

  return _[v2 _updateSignHeightConstraintsFrom:v3 to:v4 progress:v5];
}

void sub_10047FA20(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 steppingPageViewControllerDidChangeSignHeight:*(void *)(a1 + 32)];
}

uint64_t sub_10047FA74(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) view];
  uint64_t v3 = [v2 window];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) view];
    [v4 layoutIfNeeded];
  }
  double v5 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v5();
}

id sub_100480088(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _animateSizeClassChange];
}

id sub_100480090(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _sizeClassDidChange];
}

void sub_1004837B0(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  uint64_t v7 = *(void **)(a1 + 32);
  id v10 = v6;
  id v8 = [v6 contentDownloader];
  LODWORD(v7) = [v7 isEqual:v8];

  if (v7)
  {
    id v9 = [*(id *)(a1 + 40) copy];
    [v10 setVenueContents:v9];

    [*(id *)(a1 + 48) _notifyObservers];
    *a4 = 1;
  }
}

id sub_100487A04(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  double v5 = [v3 revisionIdentifiers];
  id v6 = [v5 indexOfObject:v4];

  if (v6 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v7 = 0;
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) routeIdentifiers];
    uint64_t v7 = [v8 objectAtIndexedSubscript:v6];
  }

  return v7;
}

void sub_100487F18(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = *(void **)(a1 + 32);
  if (v6)
  {
    uint64_t v7 = [v6 objectAtIndexedSubscript:a3];
    [v5 setUniqueRouteID:v7];
  }
  id v8 = [v5 uniqueRouteID];
  id v9 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKeyedSubscript:v8];
  if (!v9)
  {
    CFStringRef v11 = @"canNavigate";
    id v10 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [(id)objc_opt_class() _canRunNavigationForRoute:v5]);
    id v12 = v10;
    id v9 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  }
  [*(id *)(a1 + 48) setObject:v9 forKeyedSubscript:v8];
}

NSUUID *__cdecl sub_100488058(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 uniqueRouteID];
}

void sub_100488600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100488624(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  uint64_t v7 = [v9 routeID];
  unsigned int v8 = [v7 isEqualToData:*(void *)(a1 + 32)];

  if (v8)
  {
    *a4 = 1;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

id sub_100488818(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _generateCompanionRouteFromComposedRoute:a2];
}

void sub_100488C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100488CA4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  uint64_t v7 = [v9 uniqueRouteID];
  unsigned int v8 = [v7 isEqual:*(void *)(a1 + 32)];

  if (v8)
  {
    *a4 = 1;
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

NSUUID *__cdecl sub_100488EF4(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 revisionIdentifier];
}

NSArray *__cdecl sub_100488EFC(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSArray *)[(GEOComposedRoute *)a2 rideSelections];
}

NSUUID *__cdecl sub_100488F04(id a1, GEOCompanionRouteDetails *a2, unint64_t a3)
{
  uint64_t v3 = [(GEOCompanionRouteDetails *)a2 revisionID];
  id v4 = +[NSUUID _maps_UUIDWithData:v3];

  return (NSUUID *)v4;
}

GEOComposedRoute *__cdecl sub_1004894C4(id a1, NSUUID *a2, unint64_t a3)
{
  uint64_t v3 = MNGetRouteFromSubpathWithID();

  return (GEOComposedRoute *)v3;
}

void sub_10048950C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = [a3 objectForKeyedSubscript:@"transitRouteUpdate"];
  if (v6)
  {
    uint64_t v7 = [*(id *)(a1 + 32) routeWithID:v5];
    unsigned int v8 = [v7 revisionIdentifier];
    id v10 = v6;
    id v9 = +[NSArray arrayWithObjects:&v10 count:1];
    [v7 applyUpdatesToTransitRoute:v9];

    [v7 setRevisionIdentifier:v8];
  }
}

void sub_100489A48(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 32);
  id v2 = sub_1005768D4();
  BOOL v3 = os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
  if (v1)
  {
    if (v3)
    {
      __int16 v7 = 0;
      id v4 = "Configured to prefer disk route storage";
      id v5 = (uint8_t *)&v7;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, v4, v5, 2u);
    }
  }
  else if (v3)
  {
    __int16 v6 = 0;
    id v4 = "Configured not to attempt disk route storage";
    id v5 = (uint8_t *)&v6;
    goto LABEL_6;
  }
}

void sub_10048A49C(uint64_t a1)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 registerObserver:*(void *)(a1 + 32)];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 addObserver:*(void *)(a1 + 32) selector:"_trafficAlertVisibilityChanged:" name:@"CarTrafficAlertDidChangeVisibility" object:0];
}

void sub_10048A528(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chromeViewController];
  id v3 = [v2 mapView];
  [v3 _setApplicationState:2];

  id v4 = [*(id *)(a1 + 32) chromeViewController];
  id v5 = [v4 mapView];
  [v5 _setDisplayedSearchResultsType:0];

  __int16 v6 = [*(id *)(a1 + 32) chromeViewController];
  __int16 v7 = [v6 userLocationView];
  BOOL v8 = 1;
  [v7 setMode:1 animated:1];

  id v11 = +[MNNavigationService sharedService];
  id v9 = [v11 route];
  [*(id *)(a1 + 32) setCurrentRoute:v9];

  if ([v11 navigationState] != 6) {
    BOOL v8 = [v11 navigationState] == 7;
  }
  [*(id *)(a1 + 32) setHasArrived:v8];
  id v10 = [v11 displayEtaInfo];

  if (v10) {
    [*(id *)(a1 + 32) _updateDisplayETA];
  }
}

id sub_10048A6F4(uint64_t a1)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 unregisterObserver:*(void *)(a1 + 32)];

  id v3 = [*(id *)(a1 + 32) cameraStyleManager];
  [v3 unregisterObserver:*(void *)(a1 + 32)];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 removeObserver:*(void *)(a1 + 32)];

  id v5 = *(void **)(a1 + 32);

  return [v5 _cancelAlertDismissTimer];
}

id sub_10048ABD8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) configureNavigationDisplay:a2];
}

void sub_10048AF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10048AFAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _dismissAlertIfNeeded:*(void *)(a1 + 32) withResponse:*(void *)(a1 + 40)];
}

void sub_10048B61C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarMapWidgetNavigationModeController");
  id v2 = (void *)qword_10160EDA8;
  qword_10160EDA8 = (uint64_t)v1;
}

void sub_10048CB40(id a1, UIAction *a2)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 stopNavigationWithReason:2];
}

void sub_10048CB8C(id a1, UIAction *a2)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 stopNavigationWithReason:3];
}

void sub_10048CBD8(id a1, UIAction *a2)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 advanceToNextLeg];
}

void sub_10048CC20(id a1, UIAction *a2)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User tapped walking button in dynamic island banner", buf, 2u);
  }

  id v3 = +[MNNavigationService sharedService];
  id v4 = [v3 alternateWalkingRoute];

  if (v4)
  {
    id v5 = +[MNNavigationService sharedService];
    [v5 changeTransportType:2 route:v4];
  }
  else
  {
    id v5 = sub_10000AF10();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int16 v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "No remaining walking route found. Cannot transition to walking transport type.", v6, 2u);
    }
  }
}

void sub_10048CD20(id a1, UIAction *a2)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User tapped find my button in dynamic island banner", buf, 2u);
  }

  id v3 = +[MNNavigationService sharedService];
  id v4 = [v3 destination];
  id v5 = [v4 findMyHandleID];

  __int16 v6 = +[NSString stringWithFormat:@"findmy://friend/%@", v5];
  __int16 v7 = +[NSURL URLWithString:v6];

  BOOL v8 = +[UIApplication sharedApplication];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_10048CE90;
  v10[3] = &unk_1012E7D28;
  id v11 = v7;
  id v9 = v7;
  [v8 _maps_openURL:v9 options:0 completionHandler:v10];
}

void sub_10048CE90(uint64_t a1, int a2)
{
  if (a2)
  {
    id v5 = +[MNNavigationService sharedService];
    [v5 stopNavigationWithReason:2];
  }
  else
  {
    id v3 = sub_10000AF10();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error when trying to open find my URL: %@", buf, 0xCu);
    }
  }
}

void sub_10048CF94(uint64_t a1)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User tapped EV stations button in dynamic island banner", buf, 2u);
  }

  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10048D06C;
  v3[3] = &unk_1012EB010;
  id v4 = *(id *)(a1 + 32);
  +[UIApplication _maps_unlockApplicationWithCompletion:v3];
}

void sub_10048D06C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10000AF10();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error unlocking Maps for EV stations: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v6) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Maps successfully launched; posting notification now",
        (uint8_t *)&v6,
        2u);
    }

    id v5 = +[NSNotificationCenter defaultCenter];
    [v5 postNotificationName:off_1015E2B10 object:*(void *)(a1 + 32)];
  }
}

void sub_10048D46C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) item];
  id v3 = [v2 guidanceState];
  id v4 = (char *)[v3 currentLegIndex] + 1;
  id v5 = [*(id *)(a1 + 32) item];
  int v6 = [v5 guidanceState];
  id v7 = (char *)[v6 numberOfLegs];

  BOOL v8 = [*(id *)(a1 + 32) item];
  id v9 = [v8 guidanceState];
  unsigned int v10 = [v9 isInArrivalState];

  id v11 = [*(id *)(a1 + 32) item];
  id v12 = [v11 guidanceState];
  unsigned int v13 = [v12 isInParkingState];

  os_signpost_id_t v14 = +[MNNavigationService sharedService];
  uint64_t v15 = [v14 destination];
  long long v16 = [v15 findMyHandleID];

  id v17 = +[MNNavigationService sharedService];
  long long v18 = [v17 alternateWalkingRoute];

  id v19 = [*(id *)(a1 + 32) minorText];
  if (v19) {
    int v20 = 1;
  }
  else {
    int v20 = v13;
  }
  int v70 = v20;

  unsigned int v21 = 0;
  uint64_t v22 = *(void *)(a1 + 32);
  int v23 = *(unsigned __int8 *)(v22 + 200);
  if (*(unsigned char *)(v22 + 200) && v10 && v4 >= v7 && v16)
  {
    unsigned int v21 = [(id)v22 _isEligibleToShowFindMyButton];
    uint64_t v22 = *(void *)(a1 + 32);
    int v23 = *(unsigned __int8 *)(v22 + 200);
  }
  unsigned int v24 = 0;
  if (v23 && ((v13 ^ 1) & 1) == 0 && v18)
  {
    unsigned int v24 = [(id)v22 _isEligibleToShowWalkingButton];
    uint64_t v22 = *(void *)(a1 + 32);
    int v23 = *(unsigned __int8 *)(v22 + 200);
  }
  unsigned int v25 = v10 | v13;
  if (v23)
  {
    if (v4 < v7) {
      unsigned int v26 = v25;
    }
    else {
      unsigned int v26 = 0;
    }
    unsigned int v71 = v26 ^ 1;
    if (v25)
    {
      id v27 = +[MNNavigationService sharedService];
      uint64_t v28 = [v27 arrivalChargingStationInfo];
      [v28 chargingTime];
      BOOL v30 = v29 <= 0.0;

      uint64_t v22 = *(void *)(a1 + 32);
      unsigned int v25 = 1;
      int v31 = v26;
    }
    else
    {
      unsigned int v26 = 0;
      int v31 = 0;
      BOOL v30 = 1;
    }
  }
  else
  {
    unsigned int v26 = 0;
    BOOL v30 = 1;
    unsigned int v71 = 1;
    int v31 = 1;
  }
  int v32 = v26 & v30;
  uint64_t v33 = v21 ^ 1;
  unsigned int v73 = v31;
  int v34 = v33 != [*(id *)(v22 + 144) isHidden]
     || v24 == [*(id *)(*(void *)(a1 + 32) + 136) isHidden]
     || v31 != [*(id *)(*(void *)(a1 + 32) + 112) isHidden]
     || v26 == [*(id *)(*(void *)(a1 + 32) + 120) isHidden]
     || v32 == [*(id *)(*(void *)(a1 + 32) + 128) isHidden]
     || v30 != [*(id *)(*(void *)(a1 + 32) + 152) isHidden];
  int v69 = v34;
  id v35 = [*(id *)(a1 + 32) contentView];
  uint64_t v36 = [v35 content];
  id v74 = [v36 visibilityFingerprint];

  id v37 = *(void **)(a1 + 32);
  int v72 = v32;
  if (v25)
  {
    uint64_t v38 = [v37 contentView];
    long long v39 = [v38 content];
    id v40 = [v39 headerView];
    [v40 setHidden:1];

    __int16 v41 = [*(id *)(a1 + 32) contentView];
    uint64_t v42 = [v41 content];
    long long v43 = [v42 iconView];
    [v43 setHidden:1];

    id v44 = [*(id *)(a1 + 32) contentView];
    uint64_t v45 = [v44 content];
    long long v46 = [v45 trailingTopView];
LABEL_32:
    id v53 = v46;
LABEL_33:
    uint64_t v54 = 1;
    goto LABEL_34;
  }
  __int16 v47 = [v37 maneuverItem];
  id v48 = [v47 laneGuidanceInfo];

  __int16 v49 = *(id **)(a1 + 32);
  if (v48)
  {
    BOOL v50 = [v49 contentView];
    uint64_t v51 = [v50 content];
    id v52 = [v51 headerView];
    [v52 setHidden:0];

    id v44 = [*(id *)(a1 + 32) contentView];
    uint64_t v45 = [v44 content];
    long long v46 = [v45 iconView];
    goto LABEL_32;
  }
  id v65 = [v49[5] maneuverArtwork];

  uint64_t v66 = [*(id *)(a1 + 32) contentView];
  uint64_t v67 = [v66 content];
  uint64_t v68 = [v67 headerView];
  [v68 setHidden:1];

  id v44 = [*(id *)(a1 + 32) contentView];
  uint64_t v45 = [v44 content];
  long long v46 = [v45 iconView];
  id v53 = v46;
  if (!v65) {
    goto LABEL_33;
  }
  uint64_t v54 = 0;
LABEL_34:
  [v46 setHidden:v54];

  [*(id *)(*(void *)(a1 + 32) + 64) setHidden:v70 ^ 1u];
  [*(id *)(*(void *)(a1 + 32) + 144) setHidden:v33];
  [*(id *)(*(void *)(a1 + 32) + 136) setHidden:v24 ^ 1];
  [*(id *)(*(void *)(a1 + 32) + 112) setHidden:v73];
  [*(id *)(*(void *)(a1 + 32) + 120) setHidden:v71];
  [*(id *)(*(void *)(a1 + 32) + 128) setHidden:v72 ^ 1u];
  [*(id *)(*(void *)(a1 + 32) + 152) setHidden:v30];
  [*(id *)(*(void *)(a1 + 32) + 104) setHidden:*(unsigned char *)(*(void *)(a1 + 32) + 200) == 0];
  if (v69)
  {
    [*(id *)(*(void *)(a1 + 32) + 104) invalidateStackViewAxis];
    [*(id *)(*(void *)(a1 + 32) + 104) updateStackViewAxisIfNeeded];
  }
  id v55 = [*(id *)(a1 + 32) maneuverItem];
  uint64_t v56 = [v55 maneuverGuidanceInfo];
  uint64_t v57 = [v56 shieldInfo];

  if (v57) {
    uint64_t v58 = v25;
  }
  else {
    uint64_t v58 = 1;
  }
  unint64_t v59 = [*(id *)(a1 + 32) contentView];
  id v60 = [v59 content];
  uint64_t v61 = [v60 trailingTopView];
  [(id)v61 setHidden:v58];

  id v62 = [*(id *)(a1 + 32) contentView];
  long long v63 = [v62 content];
  uint64_t v64 = [v63 visibilityFingerprint];
  LOBYTE(v61) = [v64 isEqual:v74];

  if ((v61 & 1) == 0) {
    *(void *)(*(void *)(a1 + 32) + 88) = 0xBFF0000000000000;
  }
  [*(id *)(a1 + 32) _updateConstraints];
}

id sub_10049021C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startRecentsTest];
}

void sub_1004902C8(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10049035C;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10049035C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setupTrayLayoutAndPerformScrollTest];
}

id sub_100490414(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _performScrollTest];
}

id sub_100490D38(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) shouldPersistExpandedIdentifierPath:a2];
}

id sub_100491060(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 delegate];
  int v6 = [v5 sectionController:*(void *)(a1 + 32) nodeSnapshotAtIndexPath:v4];

  id v7 = [v6 identifierPath];
  BOOL v8 = [*(id *)(a1 + 32) sectionIdentifierPath];
  LODWORD(v5) = [v7 hasPrefix:v8];

  if (v5)
  {
    id v9 = [v6 identifierPath];
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

void sub_100491BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100491C04(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 _snapshotByFilteringDeletionsFromSnapshot:v4];

  if (v5 != v4) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }

  return v5;
}

id sub_100491E20(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10049262C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100492648(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained contextMenuForSnapshot:*(void *)(a1 + 32)];

  return v3;
}

void sub_1004941D4(uint64_t a1, void *a2, uint64_t a3)
{
  long long v16 = *(void **)(a1 + 32);
  id v5 = a2;
  id v17 = [v5 topAnchor];
  int v6 = [*(id *)(*(void *)(a1 + 40) + 32) topAnchor];
  id v7 = [v17 constraintEqualToAnchor:v6];
  v18[0] = v7;
  BOOL v8 = [v5 bottomAnchor];
  id v9 = [*(id *)(*(void *)(a1 + 40) + 32) bottomAnchor];
  unsigned int v10 = [v8 constraintEqualToAnchor:v9];
  v18[1] = v10;
  id v11 = [v5 centerXAnchor];

  id v12 = [*(id *)(*(void *)(a1 + 40) + 40) objectAtIndexedSubscript:a3];
  unsigned int v13 = [v12 centerXAnchor];
  os_signpost_id_t v14 = [v11 constraintEqualToAnchor:v13];
  v18[2] = v14;
  uint64_t v15 = +[NSArray arrayWithObjects:v18 count:3];
  [v16 addObjectsFromArray:v15];
}

void sub_100494408(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = a2;
  if (v5 == a3)
  {
    id v7 = +[UIColor systemBlackColor];
    [v6 setTintColor:v7];

    [*(id *)(*(void *)(a1 + 32) + 56) setActive:0];
    BOOL v8 = [*(id *)(*(void *)(a1 + 32) + 48) centerXAnchor];
    id v9 = [v6 centerXAnchor];

    uint64_t v10 = [v8 constraintEqualToAnchor:v9];
    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = *(void **)(v11 + 56);
    *(void *)(v11 + 56) = v10;

    unsigned int v13 = *(void **)(*(void *)(a1 + 32) + 56);
    [v13 setActive:1];
  }
  else
  {
    id v14 = +[UIColor secondaryLabelColor];
    [v6 setTintColor:v14];
  }
}

void sub_1004945E4(id a1)
{
  uint64_t v1 = +[UIImageSymbolConfiguration configurationWithPointSize:4 weight:38.0];
  dispatch_time_t v2 = (void *)qword_10160EDC0;
  qword_10160EDC0 = v1;
}

id sub_100494AD8(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateContent];
  dispatch_time_t v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

id sub_100495090(void *a1, CGFloat a2, double a3, CGFloat a4, CGFloat a5)
{
  id v9 = a1;
  if (qword_10160EDD0 != -1) {
    dispatch_once(&qword_10160EDD0, &stru_1012EBD98);
  }
  id v10 = v9;
  *(void *)&red[0] = v10;
  red[1] = a2;
  red[2] = a3;
  red[3] = a4;
  red[4] = a5;
  long long v23 = xmmword_100F6F790;
  uint64_t v11 = +[NSValue valueWithBytes:red objCType:"{?=@dddd{CGPoint=dd}}"];

  id v12 = [(id)qword_10160EDC8 objectForKeyedSubscript:v11];
  if (!v12)
  {
    double v13 = ceil(a3);
    CGFloat v14 = v13 + v13 + a2 * 2.0;
    id v15 = v10;
    long long v16 = +[UIBezierPath bezierPathWithRoundedRect:cornerRadius:](UIBezierPath, "bezierPathWithRoundedRect:cornerRadius:", v13, v13, a2 + a2, a2 + a2, a2);
    v28.double width = v14;
    v28.double height = v14;
    UIGraphicsBeginImageContextWithOptions(v28, 0, a5);
    CurrentContext = UIGraphicsGetCurrentContext();
    CGContextSaveGState(CurrentContext);
    CGContextTranslateCTM(CurrentContext, 0.0, 3.0);
    CGContextSaveGState(CurrentContext);
    red[0] = 0.0;
    CGFloat v25 = 0.0;
    CGFloat v26 = 0.0;
    CGFloat v24 = 0.0;
    [v15 getRed:red green:&v26 blue:&v25 alpha:&v24];

    CGFloat v24 = a4;
    SRGB = CGColorCreateSRGB(red[0], v26, v25, a4);
    v29.double width = 0.0;
    v29.double height = v14 + 3.0;
    CGContextSetShadowWithColor(CurrentContext, v29, a3, SRGB);
    CGColorRelease(SRGB);
    CGContextTranslateCTM(CurrentContext, 0.0, -(v14 + 3.0));
    [v16 fill];
    CGContextRestoreGState(CurrentContext);
    CGContextRestoreGState(CurrentContext);
    CGContextSetBlendMode(CurrentContext, kCGBlendModeDestinationOut);
    id v19 = +[UIColor systemBlackColor];
    [v19 set];

    [v16 fill];
    int v20 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    id v12 = [v20 resizableImageWithCapInsets:v13 + a2 + 1.5, v13 + a2 + 0.0, v13 + a2 + 1.5, v13 + a2 + 0.0];

    if (v12) {
      [(id)qword_10160EDC8 setObject:v12 forKeyedSubscript:v11];
    }
  }

  return v12;
}

void sub_100495344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_1004954D8(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  dispatch_time_t v2 = (void *)qword_10160EDC8;
  qword_10160EDC8 = v1;
}

void sub_1004973A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1004973C8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    if (v5)
    {
      [WeakRetained _presentAlertForError:v5];
    }
    else
    {
      [WeakRetained closeAction:*(void *)(a1 + 32)];
      +[GEOAPPortal captureUserAction:41 target:77 value:0];
    }
  }
}

id sub_100498EF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _alertDidFinishProcessing];
}

void sub_10049A958(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10049A980(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained handleDismissAction:*(void *)(a1 + 32)];
}

void sub_10049A9D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained handleDismissAction:*(void *)(a1 + 32)];
}

ExtensionsActionView *__cdecl sub_10049AF04(id a1, ExtensionsAction *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = objc_alloc_init(ExtensionsActionView);
  id v5 = [(ExtensionsAction *)v3 title];
  [(ExtensionsActionView *)v4 setButtonTitle:v5];

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_10049AFE4;
  void v8[3] = &unk_1012E5D08;
  id v9 = v3;
  id v6 = v3;
  [(ExtensionsActionView *)v4 setDidTapButton:v8];

  return v4;
}

id sub_10049AFE4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) perform];
}

void sub_10049C600(uint64_t a1, void *a2, unint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if (*(void *)(a1 + 40) <= a3)
  {
    *a4 = 1;
  }
  else
  {
    id v9 = v7;
    unsigned __int8 v8 = [*(id *)(a1 + 32) containsObject:v7];
    id v7 = v9;
    if ((v8 & 1) == 0)
    {
      [*(id *)(a1 + 32) addObject:v9];
      id v7 = v9;
    }
  }
}

id sub_10049C95C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _integerValueForDefaultsKey:@"HistorySearchLimitKey" networkDefaultsKey:MapsConfig_HistorySearchLimit off_1015EF258];
  if ((uint64_t)v2 < 0) {
    uint64_t v3 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v3 = (uint64_t)v2;
  }
  [*(id *)(*(void *)(a1 + 32) + 24) addResultSet:*(void *)(a1 + 40) withMaxCount:v3];
  id v4 = sub_100109E50();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 48) name];
    int v7 = 138412290;
    unsigned __int8 v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SearchBarSearchManager - Completed operation: %@", (uint8_t *)&v7, 0xCu);
  }
  return [*(id *)(a1 + 48) setDelegate:0];
}

id sub_10049CB34(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _integerValueForDefaultsKey:@"RecentsSearchLimitKey" networkDefaultsKey:MapsConfig_RecentsSearchLimit off_1015EF238];
  if ((uint64_t)v2 < 0) {
    uint64_t v3 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v3 = (uint64_t)v2;
  }
  [*(id *)(*(void *)(a1 + 32) + 24) addResultSet:*(void *)(a1 + 40) withMaxCount:v3];
  id v4 = sub_100109E50();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 48) name];
    int v7 = 138412290;
    unsigned __int8 v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SearchBarSearchManager - Completed operation: %@", (uint8_t *)&v7, 0xCu);
  }
  return [*(id *)(a1 + 48) setDelegate:0];
}

id sub_10049CD00(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"SearchDidFinishFetchingFindMyHandlesOrAddressBookAddresses" object:0];

  uint64_t v3 = *(void **)(a1 + 32);
  if (v3 && [v3 count])
  {
    id v4 = [*(id *)(a1 + 40) _integerValueForDefaultsKey:@"AddressBookSearchLimitKey" networkDefaultsKey:MapsConfig_AddressBookSearchLimit off_1015EF218];
    if ((uint64_t)v4 < 0) {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v5 = (uint64_t)v4;
    }
    [*(id *)(*(void *)(a1 + 40) + 24) addResultSet:*(void *)(a1 + 32) withMaxCount:v5];
  }
  id v6 = sub_100109E50();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = [*(id *)(a1 + 48) name];
    int v9 = 138412290;
    id v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SearchBarSearchManager - Completed operation: %@", (uint8_t *)&v9, 0xCu);
  }
  return [*(id *)(a1 + 48) setDelegate:0];
}

void sub_10049CF04(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"SearchDidFinishFetchingFindMyHandlesOrAddressBookAddresses" object:0];

  uint64_t v3 = *(void **)(a1 + 32);
  if (v3 && [v3 count])
  {
    [*(id *)(*(void *)(a1 + 40) + 24) addResultSet:*(void *)(a1 + 32) withMaxCount:0x7FFFFFFFFFFFFFFFLL];
    [*(id *)(a1 + 48) setDelegate:0];
  }
  id v4 = sub_100109E50();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = [*(id *)(a1 + 48) name];
    int v6 = 138412290;
    int v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SearchBarSearchManager - Completed operation: %@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_10049DA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location)
{
  objc_destroyWeak(v35);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10049DAB4()
{
  if (qword_10160EDE0 != -1) {
    dispatch_once(&qword_10160EDE0, &stru_1012EBE68);
  }
  uint64_t v0 = (void *)qword_10160EDD8;

  return v0;
}

void sub_10049DB08(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10049DBBC;
  v4[3] = &unk_1012E7C40;
  objc_copyWeak(v6, (id *)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  v6[1] = *(id *)(a1 + 56);
  void v4[4] = v2;
  id v5 = v3;
  dispatch_sync((dispatch_queue_t)&_dispatch_main_q, v4);

  objc_destroyWeak(v6);
}

void sub_10049DBBC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained[3] filteredResultsWithBackfill:*(void *)(a1 + 56)];
    id v5 = [[AutocompleteItemSource alloc] initWithAutocompleteItems:v4];
    int v6 = sub_100109E50();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "SearchBarSearchManager - collected results", buf, 2u);
    }

    int v7 = sub_10049DAB4();
    unsigned __int8 v8 = v7;
    os_signpost_id_t v9 = *(void *)(*(void *)(a1 + 32) + 32);
    if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
    {
      v11[0] = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "CollectingClientResults", "", (uint8_t *)v11, 2u);
    }

    id v10 = [v3 delegate];
    [v10 receivedSearchResults:v5 forContext:*(void *)(a1 + 40)];
  }
}

void sub_10049DDC4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchBarSearchManager");
  uint64_t v2 = (void *)qword_10160EDD8;
  qword_10160EDD8 = (uint64_t)v1;
}

BOOL sub_10049E594(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 scheduledDepartureDate];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    id v6 = [v3 liveDepartureDate];
  }
  int v7 = v6;

  [v7 timeIntervalSinceDate:*(void *)(a1 + 32)];
  BOOL v9 = v8 <= 86400.0;

  return v9;
}

void sub_10049EC84(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_10049ECA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unint64_t v8 = (unint64_t)[WeakRetained _sectionTypeForSectionIndex:a2];
  BOOL v9 = [*(id *)(a1 + 32) traitCollection];
  id v10 = [v9 userInterfaceIdiom];

  if (v10 != (id)5)
  {
    if (v8 == 3)
    {
      CGSize v29 = +[NSCollectionLayoutDimension estimatedDimension:104.0];
      BOOL v30 = +[NSCollectionLayoutDimension estimatedDimension:54.0];
      uint64_t v45 = +[NSCollectionLayoutSize sizeWithWidthDimension:v29 heightDimension:v30];

      int v31 = +[NSCollectionLayoutItem itemWithLayoutSize:v45];
      int v32 = +[NSCollectionLayoutSpacing fixedSpacing:5.0];
      uint64_t v33 = +[NSCollectionLayoutSpacing fixedSpacing:5.0];
      int v34 = +[NSCollectionLayoutEdgeSpacing spacingForLeading:v32 top:0 trailing:v33 bottom:0];
      [v31 setEdgeSpacing:v34];

      id v35 = +[NSCollectionLayoutDimension estimatedDimension:104.0];
      uint64_t v36 = +[NSCollectionLayoutDimension estimatedDimension:54.0];
      id v37 = +[NSCollectionLayoutSize sizeWithWidthDimension:v35 heightDimension:v36];

      __int16 v49 = v31;
      uint64_t v38 = +[NSArray arrayWithObjects:&v49 count:1];
      long long v39 = +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:v37 subitems:v38];

      int v20 = +[NSCollectionLayoutSection sectionWithGroup:v39];
      [v20 setOrthogonalScrollingBehavior:1];
      [v20 setContentInsets:8.0, 16.0, 0.0, 16.0];
      [v20 setInterGroupSpacing:7.0];
      id v40 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
      __int16 v41 = +[NSCollectionLayoutDimension estimatedDimension:54.0];
      uint64_t v42 = +[NSCollectionLayoutSize sizeWithWidthDimension:v40 heightDimension:v41];

      long long v43 = +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:v42 elementKind:UICollectionElementKindSectionHeader alignment:1];
      [v43 setPinToVisibleBounds:0];
      id v48 = v43;
      id v44 = +[NSArray arrayWithObjects:&v48 count:1];
      [v20 setBoundarySupplementaryItems:v44];

      v46[0] = _NSConcreteStackBlock;
      v46[1] = 3221225472;
      v46[2] = sub_10049F328;
      void v46[3] = &unk_1012EBEB8;
      objc_copyWeak(&v47, v6);
      [v20 setVisibleItemsInvalidationHandler:v46];
      objc_destroyWeak(&v47);

      goto LABEL_16;
    }
    if (!v8)
    {
      uint64_t v11 = +[NSCollectionLayoutDimension estimatedDimension:104.0];
      id v12 = +[NSCollectionLayoutDimension estimatedDimension:54.0];
      double v13 = +[NSCollectionLayoutSize sizeWithWidthDimension:v11 heightDimension:v12];

      CGFloat v14 = +[NSCollectionLayoutItem itemWithLayoutSize:v13];
      id v15 = +[NSCollectionLayoutDimension estimatedDimension:104.0];
      long long v16 = +[NSCollectionLayoutDimension estimatedDimension:54.0];
      id v17 = +[NSCollectionLayoutSize sizeWithWidthDimension:v15 heightDimension:v16];

      BOOL v50 = v14;
      long long v18 = +[NSArray arrayWithObjects:&v50 count:1];
      id v19 = +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:v17 subitems:v18];

      int v20 = +[NSCollectionLayoutSection sectionWithGroup:v19];
      [v20 setInterGroupSpacing:7.0];
      [v20 setOrthogonalScrollingBehavior:1];
      [v20 setContentInsets:2.0, 16.0, 0.0, 16.0];

      goto LABEL_16;
    }
  }
  id v21 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
  uint64_t v22 = v21;
  BOOL v23 = v8 == 7 || v8 == 1;
  [v21 setShowsSeparators:v23];
  if (v8 == 7)
  {
    CGFloat v24 = [v22 separatorConfiguration];
    MUButtonCellSeparatorInsets();
    [v24 setBottomSeparatorInsets:];
    [v22 setSeparatorConfiguration:v24];

    int v25 = 0;
LABEL_12:
    BOOL v26 = v8 != 8;
    goto LABEL_13;
  }
  int v25 = v8 == 4;
  if ((v8 | 4) != 4) {
    goto LABEL_12;
  }
  BOOL v26 = 0;
LABEL_13:
  [v22 setHeaderMode:v26];
  id v27 = +[UIColor clearColor];
  [v22 setBackgroundColor:v27];

  [v22 setHeaderTopPadding:8.0];
  int v20 = +[NSCollectionLayoutSection sectionWithListConfiguration:v22 layoutEnvironment:v5];
  if (((sub_1000BBB44(*(void **)(a1 + 32)) == 5) & ~v25) == 0) {
    [v20 setContentInsets:8.0, 16.0, 0.0, 16.0];
  }

LABEL_16:

  return v20;
}

void sub_10049F30C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10049F328(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateDeparturesHeaderTitles];
    id WeakRetained = v2;
  }
}

void sub_10049FEC8(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id v2 = (void *)v1[55];
  id v3 = [v2 departures];
  [v1 departureDataProvider:v2 updatedDepartures:v3];
}

void sub_1004A04D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004A04F4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    int v7 = sub_100576CFC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      unint64_t v8 = [v6 description];
      id v9 = [*(id *)(a1 + 32) muid];
      *(_DWORD *)long long buf = 138412546;
      CGFloat v14 = v8;
      __int16 v15 = 2048;
      id v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error %@ when attempting to refine transit line muid %lld", buf, 0x16u);
    }
  }
  if ([v5 count])
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    long long v10[2] = sub_1004A0678;
    v10[3] = &unk_1012E6690;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    id v11 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

    objc_destroyWeak(&v12);
  }
}

void sub_1004A0678(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v2 = [*(id *)(a1 + 32) firstObject];
    id v3 = (void *)*((void *)WeakRetained + 38);
    *((void *)WeakRetained + 38) = v2;

    id v4 = [*((id *)WeakRetained + 25) snapshot];
    [*((id *)WeakRetained + 25) applySnapshot:v4 animatingDifferences:0];
  }
}

void sub_1004A12A8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  id v6 = [v11 identifier];
  id v7 = [v6 muid];
  id v8 = *(id *)(*(void *)(a1 + 32) + 240);

  if (v7 == v8)
  {
    [*(id *)(a1 + 32) setSelectedTransitLine:v11];
    id v9 = [*(id *)(a1 + 32) headerTitleView];
    id v10 = [v11 artwork];
    [v9 setArtwork:v10];

    *a4 = 1;
  }
}

void sub_1004A1378(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v16 = a2;
  if ([v16 stationIdentifier] == *(id *)(*(void *)(a1 + 32) + 232))
  {
    *a4 = 1;
    *(void *)(*(void *)(a1 + 32) + 224) = a3;
    id v7 = objc_alloc((Class)GEOLocation);
    id v8 = [v16 location];
    [v8 lat];
    double v10 = v9;
    id v11 = [v16 location];
    [v11 lng];
    id v13 = [v7 initWithLatitude:v10 longitude:v12];
    uint64_t v14 = *(void *)(a1 + 32);
    __int16 v15 = *(void **)(v14 + 208);
    *(void *)(v14 + 208) = v13;
  }
}

void sub_1004A1D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004A1D44(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1004A1E38;
  block[3] = &unk_1012EBF58;
  objc_copyWeak(&v13, (id *)(a1 + 40));
  long long v14 = *(_OWORD *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 64);
  id v10 = v6;
  id v11 = v5;
  uint64_t v12 = *(void *)(a1 + 32);
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v13);
}

void sub_1004A1E38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained) {
    goto LABEL_19;
  }
  if (*(void *)(a1 + 32))
  {
    id v3 = sub_100576CFC();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id v4 = [*(id *)(a1 + 32) description];
      uint64_t v5 = *(void *)(a1 + 64);
      uint64_t v6 = *(void *)(a1 + 72);
      uint64_t v7 = *(void *)(a1 + 80);
      int v23 = 138413058;
      id v24 = v4;
      __int16 v25 = 2048;
      uint64_t v26 = v5;
      __int16 v27 = 2048;
      uint64_t v28 = v6;
      __int16 v29 = 2048;
      uint64_t v30 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error %@ for stationId %llu lineId %llu tripId %llu", (uint8_t *)&v23, 0x2Au);
    }
    unsigned int v8 = [WeakRetained isNetworkError:*(void *)(a1 + 32)];
    if (![*(id *)(a1 + 40) count])
    {
      double v9 = [WeakRetained departureDataProvider];
      id v10 = [v9 departures];
      id v11 = [v10 count];

      if (!v11)
      {
        if (v8) {
          uint64_t v22 = 4;
        }
        else {
          uint64_t v22 = 3;
        }
        [*(id *)(a1 + 48) updateDeparturesSectionForNetworkState:v22];
        goto LABEL_19;
      }
    }
    if (v8)
    {
      [WeakRetained updateStopsSectionForNetworkState:4];
      goto LABEL_19;
    }
  }
  uint64_t v12 = [*(id *)(a1 + 40) firstObject];
  [WeakRetained processUpdatedDepartureSequencesFromMapItem:v12];
  id v13 = [v12 _transitInfo];
  long long v14 = [v13 transitTripStops];
  if ([v14 count])
  {
    [WeakRetained updateStopsSectionForNetworkState:1];
  }
  else
  {
    uint64_t v15 = sub_100576CFC();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      id v16 = *(void **)(a1 + 64);
      uint64_t v17 = *(void *)(a1 + 72);
      uint64_t v18 = *(void *)(a1 + 80);
      int v23 = 134218496;
      id v24 = v16;
      __int16 v25 = 2048;
      uint64_t v26 = v17;
      __int16 v27 = 2048;
      uint64_t v28 = v18;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "No stops found departing station muid %llu w/ lineId %llu tripId %llu", (uint8_t *)&v23, 0x20u);
    }

    [WeakRetained updateStopsSectionForNetworkState:3];
    [WeakRetained selectDeparture];
  }
  id v19 = [v13 composedRoute];

  if (!v19)
  {
    int v20 = sub_100576CFC();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      id v21 = [WeakRetained selectedTripIdentifier];
      int v23 = 134217984;
      id v24 = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "No trip route provided for the requested trip id %llu", (uint8_t *)&v23, 0xCu);
    }
  }
  [WeakRetained setBoardingStationMapItem:v12];

LABEL_19:
}

void sub_1004A2560(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1004A2590(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = [a2 firstObject];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_1004A2684;
  void v9[3] = &unk_1012EBFA8;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  long long v13 = *(_OWORD *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 56);
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

  objc_destroyWeak(&v12);
}

void sub_1004A2684(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = sub_100576CFC();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = [*(id *)(a1 + 32) description];
        uint64_t v6 = *(void **)(a1 + 56);
        uint64_t v7 = *(void *)(a1 + 64);
        uint64_t v8 = *(void *)(a1 + 72);
        int v24 = 138413058;
        id v25 = v5;
        __int16 v26 = 2048;
        id v27 = v6;
        __int16 v28 = 2048;
        uint64_t v29 = v7;
        __int16 v30 = 2048;
        uint64_t v31 = v8;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error %@ for stationId %llu lineId %llu tripId %llu", (uint8_t *)&v24, 0x2Au);
      }
      if ([v3 isNetworkError:*(void *)(a1 + 32)]) {
        uint64_t v9 = 4;
      }
      else {
        uint64_t v9 = 3;
      }
      [v3 updateStopsSectionForNetworkState:v9];
    }
    else
    {
      id v10 = *(id *)(a1 + 72);
      if (v10 == [WeakRetained selectedTripIdentifier])
      {
        id v11 = [*(id *)(a1 + 40) _transitInfo];
        id v12 = [v11 transitTripStops];
        if ([v12 count])
        {
          [v3 updateStopsSectionForNetworkState:1];
          [v3[24] buildTransitTripStopItemsWithTransitStops:v12 boardingStopDepartureDate:v3[19] maintainingCollapsedState:0];
          if ([v3 isViewLoaded])
          {
            [v3 _rebuildStopsSection];
            [v3 _updateStopsSectionHeader];
          }
        }
        else
        {
          uint64_t v14 = sub_100576CFC();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          {
            uint64_t v15 = *(void **)(a1 + 56);
            id v16 = *(void **)(a1 + 64);
            uint64_t v17 = *(void *)(a1 + 72);
            int v24 = 134218496;
            id v25 = v15;
            __int16 v26 = 2048;
            id v27 = v16;
            __int16 v28 = 2048;
            uint64_t v29 = v17;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "No stops found departing station muid %llu w/ lineId %llu tripId %llu", (uint8_t *)&v24, 0x20u);
          }

          [v3 updateStopsSectionForNetworkState:3];
        }
        uint64_t v18 = [*(id *)(a1 + 40) _transitInfo];
        id v19 = [v18 incidents];
        [v3 setIncidents:v19];

        int v20 = [v11 composedRoute];

        if (!v20)
        {
          id v21 = sub_100576CFC();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            id v22 = [v3 selectedTripIdentifier];
            int v24 = 134217984;
            id v25 = v22;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "No trip route provided for the requested trip id %llu", (uint8_t *)&v24, 0xCu);
          }
        }
        int v23 = [v11 composedRoute];
        [v3 setSelectedTripRoute:v23];

        [v3 selectDeparture];
      }
      else
      {
        id v11 = sub_100576CFC();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          long long v13 = *(void **)(a1 + 72);
          int v24 = 134218240;
          id v25 = v13;
          __int16 v26 = 2048;
          id v27 = [v3 selectedTripIdentifier];
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Received the stops response for tripIdentifier %llu, but the currently selected tripIdentifier is %llu", (uint8_t *)&v24, 0x16u);
        }
      }
    }
  }
}

void sub_1004A37CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004A37EC(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  id v7 = [v6 unsignedIntegerValue];
  id v8 = (id)a1[6];
  if (v7 == v8)
  {
    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
    *a4 = 1;
    id v8 = (id)a1[6];
  }
  if (v7 > v8)
  {
    uint64_t v9 = (void *)a1[4];
    id v10 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:");
    id v12 = v10;
    id v11 = +[NSArray arrayWithObjects:&v12 count:1];
    [v9 insertSectionsWithIdentifiers:v11 beforeSectionWithIdentifier:v6];

    *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
    *a4 = 1;
  }
}

id sub_1004A3D14(uint64_t a1)
{
  [*(id *)(a1 + 32) selectDeparture];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 _updateDeparturesHeaderTitles];
}

void sub_1004A40CC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = (void *)v2[55];
  id v4 = [v3 selectedDepartureSequence];
  [v2 departureDataProvider:v3 selectedDepartureSequence:v4 withIndex:*(void *)(a1 + 40)];
}

void sub_1004A5074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1004A508C(uint64_t a1, void *a2, uint64_t a3)
{
  id result = [a2 unsignedIntegerValue];
  if (result == *(id *)(a1 + 40)) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
  }
  return result;
}

void sub_1004A6410(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1004A642C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_1004A64E8;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1004A64E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setPinnedTransitLine:*(void *)(a1 + 32) != 0];
    id WeakRetained = v3;
  }
}

void sub_1004A6684(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = sub_100576CFC();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error when attempting to pin a transit line: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_1004A6790(id a1, MSCollectionTransitItem *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = +[MapsSyncStore sharedStore];
    id v10 = v2;
    int v4 = +[NSArray arrayWithObjects:&v10 count:1];
    id v7 = 0;
    [v3 deleteWithObjects:v4 error:&v7];
    id v5 = v7;

    if (v5)
    {
      id v6 = sub_100576CFC();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v9 = v5;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error when attempting to unpin a transit line: %@", buf, 0xCu);
      }
    }
  }
}

void sub_1004A698C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1004A69B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v15 = a1;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = v3;
    id v6 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v17;
      while (2)
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          id v10 = *(void **)(*((void *)&v16 + 1) + 8 * i);
          id v11 = objc_alloc((Class)MSPTransitStorageLine);
          id v12 = [v10 transitLineStorage];
          id v13 = [v11 initWithData:v12];

          id v14 = [WeakRetained[47] muid];
          if (v14 == [v13 muid])
          {
            (*(void (**)(void))(*(void *)(v15 + 32) + 16))();

            goto LABEL_12;
          }
        }
        id v7 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }

    (*(void (**)(void))(*(void *)(v15 + 32) + 16))();
  }
LABEL_12:
}

id sub_1004A7478()
{
  if (qword_10160EDF0 != -1) {
    dispatch_once(&qword_10160EDF0, &stru_1012EC0C8);
  }
  uint64_t v0 = (void *)qword_10160EDE8;

  return v0;
}

id sub_1004A74CC(uint64_t a1)
{
  [*(id *)(a1 + 32) setTemporaryDisplayRate:0 forDuration:0.0];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 _cancelWaitForNoMovement];
}

void sub_1004A7E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004A7E54(uint64_t a1)
{
  uint64_t v2 = sub_1004A7478();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Resetting temporary display rate", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setTemporaryDisplayRate:0 forDuration:0.0];
}

void sub_1004A8364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004A8380(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _checkForRecentMovement];
    id WeakRetained = v2;
  }
}

__CFString *sub_1004A92DC(unint64_t a1)
{
  if (a1 >= 4)
  {
    id v2 = +[NSNumber numberWithUnsignedInteger:a1];
    os_log_t v1 = +[NSString stringWithFormat:@"Unknown (%@)", v2];
  }
  else
  {
    os_log_t v1 = off_1012EC0E8[a1];
  }

  return v1;
}

__CFString *sub_1004A936C(uint64_t a1)
{
  if (a1)
  {
    os_log_t v1 = +[NSNumber numberWithUnsignedInteger:a1];
    id v2 = +[NSString stringWithFormat:@"Unknown (%@)", v1];
  }
  else
  {
    id v2 = @"Linear";
  }

  return v2;
}

__CFString *sub_1004A93F4(unint64_t a1)
{
  if (a1 >= 3)
  {
    id v2 = +[NSNumber numberWithUnsignedInteger:a1];
    os_log_t v1 = +[NSString stringWithFormat:@"Unknown (%@)", v2];
  }
  else
  {
    os_log_t v1 = off_1012EC108[a1];
  }

  return v1;
}

void sub_1004A95A4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeNavigationDisplayRateThrottle");
  id v2 = (void *)qword_10160EDE8;
  qword_10160EDE8 = (uint64_t)v1;
}

id sub_1004A9888(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)objc_opt_class()) initWithResolvedThirdPartyLink:v3 mediaType:*(void *)(a1 + 40)];

  return v4;
}

uint64_t sub_1004A9CC8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1004A9D8C(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponentsFormatter);
  id v2 = (void *)qword_10160EDF8;
  qword_10160EDF8 = (uint64_t)v1;

  [(id)qword_10160EDF8 setZeroFormattingBehavior:14];
  [(id)qword_10160EDF8 setAllowedUnits:64];
  [(id)qword_10160EDF8 setMaximumUnitCount:1];
  id v3 = (void *)qword_10160EDF8;

  [v3 setUnitsStyle:1];
}

id sub_1004AC088(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 56);
  if (*(unsigned char *)(v2 + 74))
  {
    [v3 setHidden:0];
    [*(id *)(*(void *)(a1 + 32) + 48) setHidden:0];
    id v4 = *(void **)(*(void *)(a1 + 32) + 48);
    return [v4 setProgress:0.0];
  }
  else
  {
    [v3 setHidden:1];
    id v6 = *(void **)(*(void *)(a1 + 32) + 48);
    return [v6 setHidden:1];
  }
}

id sub_1004AC4FC()
{
  if (qword_10160EE10 != -1) {
    dispatch_once(&qword_10160EE10, &stru_1012EC348);
  }
  uint64_t v0 = (void *)qword_10160EE08;

  return v0;
}

void sub_1004ACF08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1004AD15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004AD180(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained) {
    goto LABEL_23;
  }
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  +[StartNavigationDetailsBuilder defaultNavigationDetailsOptions];
  uint64_t v2 = [WeakRetained currentRoutePlanningSessionConfiguration];
  *(void *)&long long v25 = [v2 shouldRestoreToLowGuidance];

  id v3 = [WeakRetained observedRoutePlanningSession];
  LOBYTE(v26) = [v3 sessionInitiator] == (id)8;

  id v4 = sub_1004AC4FC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Navigation auto launch timer fired", buf, 2u);
  }

  id v5 = [WeakRetained observedRoutePlanningSession];
  id v6 = [v5 currentRouteCollection];

  id v7 = [WeakRetained currentRoutePlanningSessionConfiguration];
  if (![v7 shouldStartShortestRoute]) {
    goto LABEL_7;
  }
  uint64_t v8 = [WeakRetained currentRoutePlanningSessionConfiguration];
  unsigned __int8 v9 = [v8 shouldStartFastestRoute];

  if ((v9 & 1) == 0)
  {
    [v6 routeCollectionByChangingCurrentRouteIndex:[v6 shortestRouteIndex]];
    v6 = id v7 = v6;
LABEL_7:
  }
  id v10 = [WeakRetained currentRoutePlanningSessionConfiguration];
  unsigned int v11 = [v10 shouldStartFastestRoute];

  if (v11)
  {
    uint64_t v12 = [v6 routeCollectionByChangingCurrentRouteIndex:[v6 fastestRouteIndex]];

    id v6 = (void *)v12;
  }
  id v13 = [v6 currentRoute];
  unint64_t v14 = (unint64_t)[v13 source] & 0xFFFFFFFFFFFFFFFELL;

  if (v14 == 2) {
    uint64_t v27 = 1;
  }
  if ([v6 count])
  {
    uint64_t v15 = [WeakRetained chromeViewController];
    long long v16 = [v15 currentTraits];
    long long v17 = [WeakRetained observedRoutePlanningSession];
    id v18 = [v17 sessionInitiator];
    long long v19 = [WeakRetained observedRoutePlanningSession];
    int v20 = [v19 configuration];
    id v21 = [v20 isResumingMultipointRoute];
    *(_OWORD *)long long buf = 0u;
    *(_OWORD *)&uint8_t buf[16] = v25;
    long long v29 = v26;
    uint64_t v30 = v27;
    [WeakRetained beginNavigationWithRouteCollection:v6 navigationDetailsOptions:buf mapServiceTraits:v16 sessionInitiator:v18 isResumingMultipointRoute:v21];
  }
  else
  {
    id v22 = sub_1005762E4();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315650;
      *(void *)&uint8_t buf[4] = "-[NavigationStateMonitoringTask startNavigationAutoLaunchTimer]_block_invoke";
      *(_WORD *)&buf[12] = 2080;
      *(void *)&buf[14] = "NavigationStateMonitoringTask.m";
      *(_WORD *)&buf[22] = 1024;
      *(_DWORD *)&unsigned char buf[24] = 300;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
    }

    if (sub_100BB36BC())
    {
      int v23 = sub_1005762E4();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        int v24 = +[NSThread callStackSymbols];
        *(_DWORD *)long long buf = 138412290;
        *(void *)&uint8_t buf[4] = v24;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
    uint64_t v15 = sub_1004AC4FC();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "Tried to start navigation from auto launch timer without a route", buf, 2u);
    }
  }

LABEL_23:
}

id sub_1004AD8D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) handoffDestinationToExternalDevice:*(void *)(a1 + 40)];
}

void sub_1004AD9E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v12 = a3;
  id v4 = [*(id *)(a1 + 32) chromeViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v6 = [*(id *)(a1 + 32) chromeViewController];
    id v7 = +[MKMapService sharedService];
    id v8 = [v6 currentUITargetForAnalytics];
    unsigned __int8 v9 = sub_100672F88(v12);
    [v7 captureUserAction:9020 onTarget:v8 eventValue:v9];
  }
  if (v12)
  {
    id v10 = +[UIApplication sharedMapsDelegate];
    unsigned int v11 = CarInterruptionUserInfoForDestinationHandoffFailure(*(void **)(a1 + 40), v12);
    [v10 interruptApplicationWithKind:3 userInfo:v11 completionHandler:0];
  }
}

void sub_1004ADCB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1004ADCD0(uint64_t a1)
{
  uint64_t v2 = sub_1004AC4FC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) count];
    *(_DWORD *)long long buf = 134217984;
    id v15 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Calling %lu navigation completion blocks", buf, 0xCu);
  }

  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v8) + 16))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v8));
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }
}

void sub_1004AF288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,id a60)
{
  _Block_object_dispose((const void *)(v60 - 208), 8);
  objc_destroyWeak(location);
  objc_destroyWeak(&a60);
  _Unwind_Resume(a1);
}

void sub_1004AF2DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained[3];
    if (v3) {
      LOBYTE(v3) = WeakRetained[4] != 0;
    }
    if (!*(unsigned char *)(a1 + 40) && (v3 & 1) == 0)
    {
      id v5 = WeakRetained;
      id v4 = [WeakRetained iosBasedChromeViewController];
      [v4 updateHikingMapConfiguration];

      id WeakRetained = v5;
    }
  }
}

void sub_1004AF35C(uint64_t a1, int a2)
{
  id v4 = sub_1004AC4FC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v6 = *(void *)(a1 + 56);
    uint64_t v7 = *(void *)(a1 + 64);
    int v8 = 134349825;
    id v9 = WeakRetained;
    __int16 v10 = 2049;
    uint64_t v11 = v6;
    __int16 v12 = 2049;
    uint64_t v13 = v7;
    __int16 v14 = 1025;
    int v15 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Got result for location %{private}f, %{private}f: %{private}d", (uint8_t *)&v8, 0x26u);
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) |= a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1004AF45C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    int v3 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
    id v4 = sub_1004AC4FC();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
    if (v3)
    {
      if (v5)
      {
        int v9 = 134349056;
        __int16 v10 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Found at least one hiking waypoint", (uint8_t *)&v9, 0xCu);
      }

      uint64_t v6 = *(void *)(a1 + 32);
      id v4 = [WeakRetained chromeViewController];
      uint64_t v7 = [v4 acquireHikingMapToken];
      if (v6)
      {
        int v8 = (void *)WeakRetained[3];
        WeakRetained[3] = v7;
      }
      else
      {
        int v8 = (void *)WeakRetained[4];
        WeakRetained[4] = v7;
      }
    }
    else if (v5)
    {
      int v9 = 134349056;
      __int16 v10 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Found no hiking waypoints", (uint8_t *)&v9, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

id sub_1004AFF9C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEqualToString:@"NavigationForceModernMapMitigation"])
  {
    uint64_t v2 = *(void **)(a1 + 40);
    return [v2 _checkModernMapMitigation];
  }
  else if ([*(id *)(a1 + 32) isEqualToString:@"NavigationSuppressAllAnimations"])
  {
    id v4 = *(void **)(a1 + 40);
    return [v4 _checkAnimationsMitigation];
  }
  else if ([*(id *)(a1 + 32) isEqualToString:@"NavigationSuppressETAUpdates"])
  {
    BOOL v5 = *(void **)(a1 + 40);
    return [v5 _checkETAUpdatesMitigation];
  }
  else
  {
    id result = [*(id *)(a1 + 32) isEqualToString:@"NavigationThermalMitigationForceMapInactive"];
    if (result)
    {
      uint64_t v6 = *(void **)(a1 + 40);
      return [v6 _checkMapViewMitigation];
    }
  }
  return result;
}

void sub_1004B01C0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavigationStateMonitoringTask");
  uint64_t v2 = (void *)qword_10160EE08;
  qword_10160EE08 = (uint64_t)v1;
}

void sub_1004B1CC8(id a1)
{
  os_log_t v1 = sub_1004B1D30();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Finished background submission", v2, 2u);
  }
}

id sub_1004B1D30()
{
  if (qword_10160EE20 != -1) {
    dispatch_once(&qword_10160EE20, &stru_1012EC400);
  }
  uint64_t v0 = (void *)qword_10160EE18;

  return v0;
}

void sub_1004B2000(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1004B2028(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 32) ratingsForm];
    uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 32) photosForm];
    [WeakRetained captureAnalyticsForRatingsForm:v6 photosForm:v7];

    if (v4)
    {
      int v8 = sub_1004B1D30();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v9 = 138412290;
        id v10 = v4;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error with submission %@", (uint8_t *)&v9, 0xCu);
      }

      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
  }
}

void sub_1004B2150(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 32) ratingsForm];
    uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 32) photosForm];
    [WeakRetained captureAnalyticsForRatingsForm:v6 photosForm:v7];

    if (v4)
    {
      int v8 = sub_1004B1D30();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v9 = 138412290;
        id v10 = v4;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error with submission %@", (uint8_t *)&v9, 0xCu);
      }

      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
  }
}

uint64_t sub_1004B2338(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1004B2488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004B24A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    int v3 = [WeakRetained delegate];
    [v3 inlinePOIEnrichmentController:v4 requestsPresentationOfPhotosWithCoordinator:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

void sub_1004B2A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1004B2A88(uint64_t a1, void *a2, BOOL *a3)
{
  unint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  uint64_t v7 = [*(id *)(a1 + 32) allRatingCategories];
  id v8 = [v7 count];

  if (v6 < (unint64_t)v8)
  {
    int v9 = [*(id *)(a1 + 32) allRatingCategories];
    id v10 = [v9 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a3 = [v10 currentState] == (id)2;

    uint64_t v11 = [*(id *)(a1 + 32) allRatingCategories];
    __int16 v12 = [v11 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    uint64_t v13 = [v12 geoCategoryRating];
    __int16 v14 = [v13 value];
    int v15 = [v14 categoryName];
    *a2 = [v15 stringValue];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v6 < (unint64_t)v8;
}

BOOL sub_1004B2BC8(uint64_t a1, void *a2, BOOL *a3)
{
  unint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  uint64_t v7 = [*(id *)(a1 + 32) allRatingCategories];
  id v8 = [v7 count];

  if (v6 < (unint64_t)v8)
  {
    int v9 = [*(id *)(a1 + 32) allRatingCategories];
    id v10 = [v9 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    *a3 = [v10 currentState] == (id)2;

    uint64_t v11 = [*(id *)(a1 + 32) allRatingCategories];
    __int16 v12 = [v11 objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
    uint64_t v13 = [v12 geoCategoryRating];
    __int16 v14 = [v13 value];
    int v15 = [v14 categoryName];
    *a2 = [v15 stringValue];

    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  return v6 < (unint64_t)v8;
}

void sub_1004B2EC4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCInlinePOIEnrichmentController");
  uint64_t v2 = (void *)qword_10160EE18;
  qword_10160EE18 = (uint64_t)v1;
}

id sub_1004B372C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_1004B3734(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1004B39C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1004B39DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

uint64_t sub_1004B39E8(uint64_t a1, int a2)
{
  if (a2)
  {
    [*(id *)(a1 + 32) setAlpha:1.0];
    [*(id *)(a1 + 32) removeFromSuperview];
    [*(id *)(a1 + 40) removeFromParentViewController];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _didDismiss];

  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    BOOL v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

void sub_1004B4320(uint64_t a1)
{
  uint64_t v2 = sub_100577F64();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    BOOL v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      unint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      uint64_t v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138543618;
    __int16 v12 = v8;
    __int16 v13 = 2112;
    uint64_t v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] displaySearchResultsWithCategory: %@", buf, 0x16u);
  }
  id v10 = +[CarChromeModeCoordinator sharedInstance];
  [v10 displaySearchResultsWithCategory:*(void *)(a1 + 40)];
}

void sub_1004B4660(id *a1, void *a2)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1004B4800;
  v7[3] = &unk_1012EC4E8;
  id v3 = a2;
  id v8 = v3;
  id v9 = a1[4];
  id v11 = a1[6];
  id v10 = a1[5];
  id v12 = a1[7];
  id v13 = a1[8];
  id v14 = a1[9];
  id v4 = objc_retainBlock(v7);
  if (sub_100523398())
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    uint64_t v5[2] = sub_1004B4B2C;
    v5[3] = &unk_1012EC510;
    unint64_t v6 = v4;
    +[RAPPrivacy performPrivacyCheckWithAppearance:4 completion:v5];
  }
  else
  {
    ((void (*)(void *))v4[2])(v4);
  }
}

void sub_1004B4800(uint64_t a1)
{
  uint64_t v2 = [RAPReport alloc];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) submissionManager];
  BOOL v5 = [(RAPReport *)v2 initWithContext:v3 submitter:v4];

  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  long long v10[2] = sub_1004B4960;
  v10[3] = &unk_1012EC4C0;
  id v13 = *(id *)(a1 + 56);
  id v11 = *(id *)(a1 + 48);
  unint64_t v6 = v5;
  id v12 = v6;
  id v14 = *(id *)(a1 + 64);
  id v15 = *(id *)(a1 + 72);
  uint64_t v7 = objc_retainBlock(v10);
  if (*(void *)(a1 + 80))
  {
    uint64_t v8 = [*(id *)(a1 + 48) rapViewControllerWithReport:v6 completion:v7];
    if (v8)
    {
      id v9 = (void *)v8;
      (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
    }
  }
}

void sub_1004B4960(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3 == 1)
  {
    uint64_t v7 = *(void **)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_1004B4AE8;
    v12[3] = &unk_1012EC470;
    id v15 = *(id *)(a1 + 56);
    id v13 = *(id *)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    long long v8[2] = sub_1004B4B08;
    void v8[3] = &unk_1012EC498;
    id v11 = *(id *)(a1 + 64);
    id v9 = *(id *)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    [v7 submitWithPrivacyRequestHandler:&stru_1012EC448 willStartSubmitting:v12 didFinishSubmitting:v8];
  }
  else if (!a3)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6) {
      (*(void (**)(uint64_t, void))(v6 + 16))(v6, *(void *)(a1 + 32));
    }
  }
}

uint64_t sub_1004B4AE8(void *a1)
{
  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, a1[4], a1[5]);
  }
  return result;
}

uint64_t sub_1004B4B08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = a1[6];
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t))(result + 16))(result, a1[4], a1[5], a3);
  }
  return result;
}

uint64_t sub_1004B4B2C(uint64_t result, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(result + 32) + 16))();
  }
  return result;
}

void sub_1004B4D68(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  uint64_t v2 = (void *)qword_10160EE28;
  qword_10160EE28 = (uint64_t)v1;

  uint64_t v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160EE28 setLocale:v3];

  [(id)qword_10160EE28 setNumberStyle:2];
  [(id)qword_10160EE28 setMinimumFractionDigits:0];
  id v4 = (void *)qword_10160EE28;

  [v4 setCurrencyCode:@"CNY"];
}

void sub_1004B5428(id a1)
{
  id v1 = objc_alloc_init((Class)NSNumberFormatter);
  uint64_t v2 = (void *)qword_10160EE38;
  qword_10160EE38 = (uint64_t)v1;

  uint64_t v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160EE38 setLocale:v3];

  id v4 = (void *)qword_10160EE38;

  [v4 setNumberStyle:2];
}

void sub_1004B5798(uint64_t a1, void *a2)
{
  id v3 = [a2 integerValue];
  if ([*(id *)(a1 + 32) canDisplayMenuItemForQuestionCategory:v3])
  {
    id v4 = *(void **)(a1 + 40);
    id v5 = [*(id *)(a1 + 32) menuItemWithFollowUpQuestionCategory:v3];
    [v4 addObjectIfNotNil:v5];
  }
}

UIFont *__cdecl sub_1004B72D4(id a1)
{
  id v1 = sub_100CE0C40(&stru_101321340);
  uint64_t v2 = +[UIFont _maps_cappedFont:v1 withMaxPoint:30.0];

  return (UIFont *)v2;
}

id sub_1004B8190(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _loadSuggestions];
}

id sub_1004B8C0C()
{
  if (qword_10160EE50 != -1) {
    dispatch_once(&qword_10160EE50, &stru_1012EC5E0);
  }
  uint64_t v0 = (void *)qword_10160EE48;

  return v0;
}

void sub_1004B94BC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFScanningAnimationManager");
  uint64_t v2 = (void *)qword_10160EE48;
  qword_10160EE48 = (uint64_t)v1;
}

void sub_1004B97B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004B97D8(void *a1)
{
  if (a1[4])
  {
    if (objc_msgSend(*(id *)(a1[5] + 56), "isEqualToArray:")) {
      return;
    }
    uint64_t v2 = (void *)a1[4];
  }
  else
  {
    uint64_t v2 = 0;
  }
  id v3 = [v2 copy];
  uint64_t v4 = a1[5];
  id v5 = *(void **)(v4 + 56);
  *(void *)(v4 + 56) = v3;

  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
}

void sub_1004B9A18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setUpdatingCoalesced:0];
  [WeakRetained _updateFraming];
}

void sub_1004BA048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_1004BA084(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) items];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1004BA2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004BA2F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) items];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 count] != 0;
}

void sub_1004BA46C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) items];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_1004BA8C4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  [a2 coordinate];
  GEOCalculateDistance();
  double v6 = v5;
  [v4 coordinate];

  GEOCalculateDistance();
  double v8 = v7;
  id v9 = +[NSNumber numberWithDouble:v6];
  id v10 = +[NSNumber numberWithDouble:v8];
  id v11 = [v9 compare:v10];

  return v11;
}

void sub_1004BB240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004BB264(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_1004BB320;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1004BB320(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _updateSharingFooterWithIdentity:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_1004BB6A8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setSoftCap:[CarDisplayController maximumListLength]];
  id v2 = *(void **)(a1 + 32);
  if (v2[1])
  {
    id v3 = [v2 view];
    id v4 = [v3 window];

    if (v4) {
      [*(id *)(*(void *)(a1 + 32) + 16) addTableView:*(void *)(*(void *)(a1 + 32) + 8)];
    }
  }
  double v5 = +[MSPSharedTripService sharedInstance];
  [v5 addSendingObserver:*(void *)(a1 + 32)];

  id v6 = +[MSPSharedTripCapabilityLevelFetcher sharedFetcher];
  [v6 registerObserver:*(void *)(a1 + 32)];

  id v7 = +[NSNotificationCenter defaultCenter];
  [v7 addObserver:*(void *)(a1 + 32) selector:"_externalDeviceUpdated:" name:@"MapsExternalDeviceUpdated" object:0];
}

id sub_1004BB868(uint64_t a1)
{
  id v2 = +[MSPSharedTripCapabilityLevelFetcher sharedFetcher];
  [v2 unregisterObserver:*(void *)(a1 + 32)];

  id v3 = +[MSPSharedTripService sharedInstance];
  [v3 removeSendingObserver:*(void *)(a1 + 32)];

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 removeObserver:*(void *)(a1 + 32) name:@"MapsExternalDeviceUpdated" object:0];

  uint64_t v5 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v5 + 40))
  {
    id v6 = [*(id *)(a1 + 40) nextTopContext];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    uint64_t v5 = *(void *)(a1 + 32);
    if ((isKindOfClass & 1) == 0)
    {
      [*(id *)(v5 + 16) abandon];
      uint64_t v5 = *(void *)(a1 + 32);
    }
  }
  [(id)v5 _commitPendingShares];
  [*(id *)(a1 + 32) _cancelDismiss];
  [*(id *)(*(void *)(a1 + 32) + 16) clearTableView];
  double v8 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v8 setDataSource:];
}

void sub_1004BC2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004BC2C8(uint64_t a1)
{
  id v3 = +[CarChromeModeCoordinator sharedInstance];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [v3 popFromContext:WeakRetained];
}

void sub_1004BC6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004BC6C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _closeResultsController];
}

void sub_1004BC7E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004BC808(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _handleContactSearchResults:v5 query:v6];
}

void sub_1004BD3B4(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id v2 = [v1 tableFooterView];
  [v2 frame];
  [v1 scrollRectToVisible:1 animated:];
}

void sub_1004BD6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004BD6CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    [WeakRetained _cancelDismiss];
    id v3 = (void *)v7[4];
    id v4 = [*(id *)(a1 + 32) stringValue];
    id v5 = [v3 objectForKey:v4];

    [v5 setSharingState:1 animated:1];
    id v6 = [v7 chromeViewController];
    [v6 captureUserAction:9025];

    id WeakRetained = v7;
  }
}

void sub_1004BD888(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (v8)
  {
    id v9 = sub_100576A9C();
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
LABEL_15:

      goto LABEL_16;
    }
    id v10 = *(id *)(a1 + 56);
    if (!v10)
    {
      id v15 = @"<nil>";
      goto LABEL_14;
    }
    id v11 = (objc_class *)objc_opt_class();
    id v12 = NSStringFromClass(v11);
    if (objc_opt_respondsToSelector())
    {
      id v13 = [v10 performSelector:"accessibilityIdentifier"];
      id v14 = v13;
      if (v13 && ![v13 isEqualToString:v12])
      {
        id v15 = +[NSString stringWithFormat:@"%@<%p, %@>", v12, v10, v14];

        goto LABEL_9;
      }
    }
    id v15 = +[NSString stringWithFormat:@"%@<%p>", v12, v10];
LABEL_9:

LABEL_14:
    *(_DWORD *)long long buf = 138543618;
    __int16 v28 = v15;
    __int16 v29 = 2112;
    id v30 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[%{public}@] CarPlay failed to fetch requiresUserConfirmation flag: %@", buf, 0x16u);

    goto LABEL_15;
  }
  if (a2)
  {
    long long v16 = [*(id *)(a1 + 32) name];
    long long v17 = [*(id *)(a1 + 32) handle];
    id v18 = CarInterruptionUserInfoForSharedTripSenderInfo(v16, v17);

    long long v19 = *(void **)(a1 + 40);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    _OWORD v24[2] = sub_1004BDB34;
    v24[3] = &unk_1012EC6C8;
    id v25 = v18;
    long long v23 = *(_OWORD *)(a1 + 48);
    id v20 = (id)v23;
    long long v26 = v23;
    id v21 = v18;
    id v22 = [v19 presentInterruptionOfKind:14 userInfo:v21 completionHandler:v24];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
LABEL_16:
}

void sub_1004BDB34(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"kMapsInterruptionSharedTripSenderHandle"];
    id v4 = +[MSPSharedTripService sharedInstance];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1004BDC14;
    v7[3] = &unk_1012EC6A0;
    long long v6 = *(_OWORD *)(a1 + 40);
    id v5 = (id)v6;
    long long v8 = v6;
    [v4 reportUserConfirmationOfSharingIdentity:v3 completion:v7];
  }
}

void sub_1004BDC14(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_100576A9C();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
LABEL_13:

      goto LABEL_14;
    }
    id v5 = *(id *)(a1 + 40);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_12;
    }
    long long v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      long long v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_9;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_9:

LABEL_12:
    *(_DWORD *)long long buf = 138543618;
    id v12 = v10;
    __int16 v13 = 2112;
    id v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "[%{public}@] CarPlay failed to report requiresUserConfirmation: %@", buf, 0x16u);

    goto LABEL_13;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
LABEL_14:
}

id sub_1004BE408(int a1)
{
  id v2 = +[UIImageSymbolConfiguration configurationWithPointSize:28.0];
  if (a1) {
    CFStringRef v3 = @"bolt.car.fill";
  }
  else {
    CFStringRef v3 = @"car.fill";
  }
  id v4 = +[UIImage systemImageNamed:v3 withConfiguration:v2];
  id v5 = [v4 imageWithoutBaseline];

  return v5;
}

id sub_1004BE4A0(int a1)
{
  id v2 = +[UIImageSymbolConfiguration configurationWithPointSize:56.0];
  if (a1) {
    CFStringRef v3 = @"bolt.car.fill";
  }
  else {
    CFStringRef v3 = @"car.fill";
  }
  id v4 = +[UIImage systemImageNamed:v3 withConfiguration:v2];
  id v5 = [v4 imageWithoutBaseline];

  return v5;
}

id sub_1004BE53C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = objc_opt_new();
  for (uint64_t i = 1; i != 13; ++i)
  {
    id v7 = +[NSString stringWithFormat:@"VehicleColor%lu", i];
    long long v8 = +[UIColor colorNamed:v7 inBundle:v3 compatibleWithTraitCollection:v4];
    [v5 addObject:v8];
  }

  return v5;
}

void sub_1004BEEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
}

void sub_1004BEF20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = +[RideBookingRideOptionStatus statusWithApplication:WeakRetained error:12];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      long long v6 = "RideBookingApplication.m";
      __int16 v7 = 1026;
      int v8 = 143;
      __int16 v9 = 2082;
      id v10 = "-[RideBookingApplication getRideOptionStatusWithPickupLocation:dropOffLocation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_1004BF064(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  int v8 = GEOFindOrCreateLog();
  __int16 v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      long long v23 = v10;
      __int16 v24 = 2080;
      v25[0] = "listRideOptions_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "listRideOptions_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setShouldResetRequestAfterHandle:0];
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    __int16 v13 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004BF354;
    block[3] = &unk_1012EC7C8;
    objc_copyWeak(&v21, a1 + 6);
    id v17 = v6;
    id v20 = a1[5];
    id v18 = v12;
    id v19 = a1[4];
    id v14 = v12;
    dispatch_async(v13, block);

    objc_destroyWeak(&v21);
  }
  else
  {
    id v15 = v8;
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      long long v23 = "RideBookingApplication.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 154;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingApplication getRideOptionStatusWithPickupLocation:dropOffLocation:comp"
                                     "letion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004BF354(uint64_t a1)
{
  id v2 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling ListRideOptions: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v18 = v5;
        __int16 v19 = 2112;
        v20[0] = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      __int16 v7 = +[RideBookingRideOptionStatus statusWithApplication:WeakRetained error:1];
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      __int16 v9 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        id v10 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        id v18 = v10;
        __int16 v19 = 2080;
        v20[0] = "listRideOptions_handleIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      id v11 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v11))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "listRideOptions_handleIntentWithCompletionHandler", "", buf, 2u);
      }

      id v12 = *(void **)(a1 + 40);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_1004BF6FC;
      v13[3] = &unk_1012EC7F0;
      objc_copyWeak(&v16, v2);
      id v15 = *(id *)(a1 + 56);
      id v14 = *(id *)(a1 + 48);
      [v12 handleIntentWithCompletionHandler:v13];

      objc_destroyWeak(&v16);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v18 = "RideBookingApplication.m";
      __int16 v19 = 1026;
      LODWORD(v20[0]) = 161;
      WORD2(v20[0]) = 2082;
      *(void *)((char *)v20 + 6) = "-[RideBookingApplication getRideOptionStatusWithPickupLocation:dropOffLocation:comp"
                                     "letion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004BF6E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004BF6FC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  int v8 = GEOFindOrCreateLog();
  __int16 v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v21 = v10;
      __int16 v22 = 2080;
      v23[0] = "listRideOptions_handleIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "listRideOptions_handleIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004BF9C4;
    block[3] = &unk_1012EC7C8;
    objc_copyWeak(&v19, a1 + 6);
    id v15 = v6;
    id v18 = a1[5];
    id v16 = v5;
    id v17 = a1[4];
    dispatch_async(v12, block);

    objc_destroyWeak(&v19);
  }
  else
  {
    __int16 v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v21 = "RideBookingApplication.m";
      __int16 v22 = 1026;
      LODWORD(v23[0]) = 172;
      WORD2(v23[0]) = 2082;
      *(void *)((char *)v23 + 6) = "-[RideBookingApplication getRideOptionStatusWithPickupLocation:dropOffLocation:comp"
                                     "letion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004BF9C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = GEOFindOrCreateLog();
    id v5 = v4;
    if (v3)
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v6 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v7 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling ListRideOptions: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v16 = v6;
        __int16 v17 = 2112;
        v18[0] = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      int v8 = +[RideBookingRideOptionStatus statusWithApplication:WeakRetained error:1];
      uint64_t v9 = *(void *)(a1 + 56);
      id v10 = [*(id *)(a1 + 32) underlyingError];
      (*(void (**)(uint64_t, NSObject *, void *))(v9 + 16))(v9, v8, v10);
    }
    else
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        id v11 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v12 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully handled ListRideOptions: %@", WeakRetained[6], *(void *)(a1 + 40)];
        *(_DWORD *)long long buf = 136315394;
        id v16 = v11;
        __int16 v17 = 2112;
        v18[0] = v12;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      int v8 = [WeakRetained _statusWithListRideOptionsResponse:*(void *)(a1 + 40)];
      uint64_t v13 = *(void *)(a1 + 56);
      id v14 = [*(id *)(a1 + 32) underlyingError];
      (*(void (**)(uint64_t, NSObject *, void *))(v13 + 16))(v13, v8, v14);

      [*(id *)(a1 + 48) reset];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v16 = "RideBookingApplication.m";
      __int16 v17 = 1026;
      LODWORD(v18[0]) = 176;
      WORD2(v18[0]) = 2082;
      *(void *)((char *)v18 + 6) = "-[RideBookingApplication getRideOptionStatusWithPickupLocation:dropOffLocation:comp"
                                     "letion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C0120(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
}

void sub_1004C0154(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 9);
  int v8 = GEOFindOrCreateLog();
  uint64_t v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      long long v26 = v10;
      __int16 v27 = 2080;
      v28[0] = "requestRideStatus_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestRideStatus_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setShouldResetRequestAfterHandle:0];
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    uint64_t v13 = WeakRetained[1];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    long long v16[2] = sub_1004C0480;
    v16[3] = &unk_1012EC840;
    objc_copyWeak(&v24, a1 + 9);
    id v17 = v6;
    id v23 = a1[8];
    id v18 = v12;
    id v19 = a1[4];
    id v20 = a1[5];
    id v21 = a1[6];
    id v22 = a1[7];
    id v14 = v12;
    dispatch_async(v13, v16);

    objc_destroyWeak(&v24);
  }
  else
  {
    id v15 = v8;
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      long long v26 = "RideBookingApplication.m";
      __int16 v27 = 1026;
      LODWORD(v28[0]) = 218;
      WORD2(v28[0]) = 2082;
      *(void *)((char *)v28 + 6) = "-[RideBookingApplication getRequestRideStatusWithPickupLocation:dropOffLocation:rid"
                                     "eOption:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C0480(uint64_t a1)
{
  id v2 = (id *)(a1 + 88);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = +[RideBookingRequestRideStatus statusWithApplication:WeakRetained error:1];
      id v5 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v7 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error confirming RequestRide: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v21 = v6;
        __int16 v22 = 2112;
        v23[0] = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
    }
    else
    {
      uint64_t v9 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        id v10 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        id v21 = v10;
        __int16 v22 = 2080;
        v23[0] = "requestRideStatus_confirmIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      id v11 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v11))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "requestRideStatus_confirmIntentWithCompletionHandler", "", buf, 2u);
      }

      id v12 = *(void **)(a1 + 40);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_1004C0864;
      v13[3] = &unk_1012EC868;
      objc_copyWeak(&v19, v2);
      id v18 = *(id *)(a1 + 80);
      id v14 = *(id *)(a1 + 48);
      id v15 = *(id *)(a1 + 56);
      id v16 = *(id *)(a1 + 64);
      id v17 = *(id *)(a1 + 72);
      [v12 confirmIntentWithCompletionHandler:v13];

      objc_destroyWeak(&v19);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v21 = "RideBookingApplication.m";
      __int16 v22 = 1026;
      LODWORD(v23[0]) = 225;
      WORD2(v23[0]) = 2082;
      *(void *)((char *)v23 + 6) = "-[RideBookingApplication getRequestRideStatusWithPickupLocation:dropOffLocation:rid"
                                     "eOption:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C0848(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004C0864(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 9);
  int v8 = GEOFindOrCreateLog();
  uint64_t v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      id v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v24 = v10;
      __int16 v25 = 2080;
      v26[0] = "requestRideStatus_confirmIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestRideStatus_confirmIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1004C0B68;
    v14[3] = &unk_1012EC840;
    objc_copyWeak(&v22, a1 + 9);
    id v15 = v6;
    id v21 = a1[8];
    id v16 = v5;
    id v17 = a1[4];
    id v18 = a1[5];
    id v19 = a1[6];
    id v20 = a1[7];
    dispatch_async(v12, v14);

    objc_destroyWeak(&v22);
  }
  else
  {
    uint64_t v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v24 = "RideBookingApplication.m";
      __int16 v25 = 1026;
      LODWORD(v26[0]) = 236;
      WORD2(v26[0]) = 2082;
      *(void *)((char *)v26 + 6) = "-[RideBookingApplication getRequestRideStatusWithPickupLocation:dropOffLocation:rid"
                                     "eOption:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C0B68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      uint64_t v3 = +[RideBookingRequestRideStatus statusWithApplication:WeakRetained error:1];
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = objc_alloc((Class)NSString);
        uint64_t v7 = WeakRetained[6];
        int v8 = [*(id *)(a1 + 32) underlyingError];
        id v9 = [v6 initWithFormat:@"%@ had an error confirming RequestRide: %@", v7, v8];
        *(_DWORD *)long long buf = 136315394;
        uint64_t v31 = v5;
        __int16 v32 = 2112;
        v33[0] = v9;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      uint64_t v10 = *(void *)(a1 + 80);
      id v11 = [*(id *)(a1 + 32) underlyingError];
      (*(void (**)(uint64_t, void *, NSObject *))(v10 + 16))(v10, v3, v11);
    }
    else
    {
      id v12 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        uint64_t v13 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v14 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully confirmed RequestRide: %@", WeakRetained[6], *(void *)(a1 + 40)];
        *(_DWORD *)long long buf = 136315394;
        uint64_t v31 = v13;
        __int16 v32 = 2112;
        v33[0] = v14;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      id v15 = [*(id *)(a1 + 40) rideStatus];
      uint64_t v3 = [v15 pickupLocation];

      id v16 = [v3 location];
      id v17 = v16;
      if (!v16) {
        goto LABEL_21;
      }
      [v16 coordinate];
      double latitude = v34.latitude;
      double longitude = v34.longitude;
      if (!CLLocationCoordinate2DIsValid(v34)) {
        goto LABEL_21;
      }
      double v20 = -latitude;
      if (latitude >= 0.0) {
        double v20 = latitude;
      }
      if (v20 > 2.22044605e-16)
      {
        if (longitude < 0.0) {
          double longitude = -longitude;
        }

        if (longitude > 2.22044605e-16)
        {
          id v21 = [v3 location];
          id v22 = [*(id *)(a1 + 48) location];
          [v21 distanceFromLocation:v22];
          double v24 = v23;
          GEOConfigGetDouble();
          double v26 = v25;

          if (v24 >= v26) {
            [*(id *)(a1 + 56) setPickupLocation:v3];
          }
        }
      }
      else
      {
LABEL_21:
      }
      id v11 = [WeakRetained _statusWithRideOption:*(void *)(a1 + 64) requestRideIntent:*(void *)(a1 + 56) requestRideEtaResponse:*(void *)(a1 + 40)];
      __int16 v27 = [*(id *)(a1 + 40) userActivity];
      [v11 setUserActivity:v27];

      uint64_t v28 = *(void *)(a1 + 80);
      __int16 v29 = [*(id *)(a1 + 32) underlyingError];
      (*(void (**)(uint64_t, NSObject *, void *))(v28 + 16))(v28, v11, v29);

      [*(id *)(a1 + 72) reset];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      uint64_t v31 = "RideBookingApplication.m";
      __int16 v32 = 1026;
      LODWORD(v33[0]) = 240;
      WORD2(v33[0]) = 2082;
      *(void *)((char *)v33 + 6) = "-[RideBookingApplication getRequestRideStatusWithPickupLocation:dropOffLocation:rid"
                                     "eOption:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }
    uint64_t v3 = v11;
  }
}

void sub_1004C1434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
}

void sub_1004C1468(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      double v23 = v10;
      __int16 v24 = 2080;
      v25[0] = "getRideStatus_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "getRideStatus_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    uint64_t v13 = WeakRetained[1];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1004C1734;
    void v17[3] = &unk_1012EC8B8;
    objc_copyWeak(&v21, (id *)(a1 + 40));
    id v18 = v6;
    id v14 = *(id *)(a1 + 32);
    id v19 = v12;
    id v20 = v14;
    id v15 = v12;
    dispatch_async(v13, v17);

    objc_destroyWeak(&v21);
  }
  else
  {
    id v16 = v8;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      double v23 = "RideBookingApplication.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 296;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingApplication getRideStatusWithPickupLocation:dropOffLocation:rideOption"
                                     ":partySize:paymentMethod:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C1734(uint64_t a1)
{
  id v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = +[RideBookingRideStatus statusWithApplication:WeakRetained error:2];
      id v5 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v7 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling RequestRide: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v17 = v6;
        __int16 v18 = 2112;
        v19[0] = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      id v9 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        id v17 = v10;
        __int16 v18 = 2080;
        v19[0] = "getRideStatus_handleIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      id v11 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v11))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "getRideStatus_handleIntentWithCompletionHandler", "", buf, 2u);
      }

      id v12 = *(void **)(a1 + 40);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_1004C1AC8;
      v13[3] = &unk_1012EC8E0;
      objc_copyWeak(&v15, v2);
      id v14 = *(id *)(a1 + 48);
      [v12 handleIntentWithCompletionHandler:v13];

      objc_destroyWeak(&v15);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v17 = "RideBookingApplication.m";
      __int16 v18 = 1026;
      LODWORD(v19[0]) = 302;
      WORD2(v19[0]) = 2082;
      *(void *)((char *)v19 + 6) = "-[RideBookingApplication getRideStatusWithPickupLocation:dropOffLocation:rideOption"
                                     ":partySize:paymentMethod:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C1AAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004C1AC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v20 = v10;
      __int16 v21 = 2080;
      v22[0] = "getRideStatus_handleIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "getRideStatus_handleIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1004C1D7C;
    v14[3] = &unk_1012EC8B8;
    objc_copyWeak(&v18, (id *)(a1 + 40));
    id v15 = v6;
    id v17 = *(id *)(a1 + 32);
    id v16 = v5;
    dispatch_async(v12, v14);

    objc_destroyWeak(&v18);
  }
  else
  {
    uint64_t v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v20 = "RideBookingApplication.m";
      __int16 v21 = 1026;
      LODWORD(v22[0]) = 313;
      WORD2(v22[0]) = 2082;
      *(void *)((char *)v22 + 6) = "-[RideBookingApplication getRideStatusWithPickupLocation:dropOffLocation:rideOption"
                                     ":partySize:paymentMethod:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C1D7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      uint64_t v3 = +[RideBookingRideStatus statusWithApplication:WeakRetained error:2];
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = objc_alloc((Class)NSString);
        uint64_t v7 = WeakRetained[6];
        int v8 = [*(id *)(a1 + 32) underlyingError];
        id v9 = [v6 initWithFormat:@"%@ had an error handling RequestRide: %@", v7, v8];
        *(_DWORD *)long long buf = 136315394;
        id v22 = v5;
        __int16 v23 = 2112;
        v24[0] = v9;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
    }
    else
    {
      id v11 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v13 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully handled RequestRide: %@", WeakRetained[6], *(void *)(a1 + 40)];
        *(_DWORD *)long long buf = 136315394;
        id v22 = v12;
        __int16 v23 = 2112;
        v24[0] = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      uint64_t v3 = [WeakRetained _statusWithRequestRideStatusIntentResponse:*(void *)(a1 + 40)];
      id v14 = [*(id *)(a1 + 40) userActivity];
      [v3 setUserActivity:v14];

      if ([v3 isActiveRide])
      {
        id v15 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          id v16 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
          id v17 = objc_alloc((Class)NSString);
          id v18 = [WeakRetained identifier];
          id v19 = [v17 initWithFormat:@"Requesting extensionProxy to startSendingUpdates for the getRideStatusWithPickupLocation request for identifier %@", v18];
          *(_DWORD *)long long buf = 136315394;
          id v22 = v16;
          __int16 v23 = 2112;
          v24[0] = v19;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        [WeakRetained startUpdates];
      }
    }
    uint64_t v20 = *(void *)(a1 + 48);
    uint64_t v10 = [*(id *)(a1 + 32) underlyingError];
    (*(void (**)(uint64_t, void *, NSObject *))(v20 + 16))(v20, v3, v10);
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v22 = "RideBookingApplication.m";
      __int16 v23 = 1026;
      LODWORD(v24[0]) = 317;
      WORD2(v24[0]) = 2082;
      *(void *)((char *)v24 + 6) = "-[RideBookingApplication getRideStatusWithPickupLocation:dropOffLocation:rideOption"
                                     ":partySize:paymentMethod:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }
    uint64_t v3 = v10;
  }
}

void sub_1004C24E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1004C251C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      __int16 v23 = v10;
      __int16 v24 = 2080;
      v25[0] = "getRideStatusWithCompletion_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "getRideStatusWithCompletion_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    id v13 = WeakRetained[1];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1004C27E8;
    void v17[3] = &unk_1012EC8B8;
    objc_copyWeak(&v21, (id *)(a1 + 40));
    id v18 = v6;
    id v14 = *(id *)(a1 + 32);
    id v19 = v12;
    id v20 = v14;
    id v15 = v12;
    dispatch_async(v13, v17);

    objc_destroyWeak(&v21);
  }
  else
  {
    id v16 = v8;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v23 = "RideBookingApplication.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 351;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingApplication getRideStatusWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C27E8(uint64_t a1)
{
  id v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = +[RideBookingRideStatus statusWithApplication:WeakRetained error:2];
      id v5 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v6 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v7 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling GetRideStatus: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v17 = v6;
        __int16 v18 = 2112;
        v19[0] = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      id v9 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        id v17 = v10;
        __int16 v18 = 2080;
        v19[0] = "getRideStatusWithCompletion_handleIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      id v11 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v11))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "getRideStatusWithCompletion_handleIntentWithCompletionHandler", "", buf, 2u);
      }

      id v12 = *(void **)(a1 + 40);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_1004C2B7C;
      v13[3] = &unk_1012EC930;
      objc_copyWeak(&v15, v2);
      id v14 = *(id *)(a1 + 48);
      [v12 handleIntentWithCompletionHandler:v13];

      objc_destroyWeak(&v15);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    int v8 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v17 = "RideBookingApplication.m";
      __int16 v18 = 1026;
      LODWORD(v19[0]) = 357;
      WORD2(v19[0]) = 2082;
      *(void *)((char *)v19 + 6) = "-[RideBookingApplication getRideStatusWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C2B60(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004C2B7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v20 = v10;
      __int16 v21 = 2080;
      v22[0] = "getRideStatusWithCompletion_handleIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "getRideStatusWithCompletion_handleIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1004C2E30;
    v14[3] = &unk_1012EC8B8;
    objc_copyWeak(&v18, (id *)(a1 + 40));
    id v15 = v6;
    id v17 = *(id *)(a1 + 32);
    id v16 = v5;
    dispatch_async(v12, v14);

    objc_destroyWeak(&v18);
  }
  else
  {
    id v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v20 = "RideBookingApplication.m";
      __int16 v21 = 1026;
      LODWORD(v22[0]) = 368;
      WORD2(v22[0]) = 2082;
      *(void *)((char *)v22 + 6) = "-[RideBookingApplication getRideStatusWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C2E30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      uint64_t v3 = +[RideBookingRideStatus statusWithApplication:WeakRetained error:2];
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = objc_alloc((Class)NSString);
        uint64_t v7 = WeakRetained[6];
        int v8 = [*(id *)(a1 + 32) underlyingError];
        id v9 = [v6 initWithFormat:@"%@ had an error handling GetRideStatus: %@", v7, v8];
        *(_DWORD *)long long buf = 136315394;
        id v22 = v5;
        __int16 v23 = 2112;
        v24[0] = v9;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
    }
    else
    {
      id v11 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v13 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully handled GetRideStatus: %@", WeakRetained[6], *(void *)(a1 + 40)];
        *(_DWORD *)long long buf = 136315394;
        id v22 = v12;
        __int16 v23 = 2112;
        v24[0] = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      uint64_t v3 = [WeakRetained _statusWithGetRideStatusIntentResponse:*(void *)(a1 + 40)];
      id v14 = [*(id *)(a1 + 40) userActivity];
      [v3 setUserActivity:v14];

      if ([v3 isActiveRide])
      {
        id v15 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          id v16 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
          id v17 = objc_alloc((Class)NSString);
          id v18 = [WeakRetained identifier];
          id v19 = [v17 initWithFormat:@"Requesting extensionProxy to startSendingUpdates for the getRideStatus request for identifier %@", v18];
          *(_DWORD *)long long buf = 136315394;
          id v22 = v16;
          __int16 v23 = 2112;
          v24[0] = v19;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        [WeakRetained startUpdates];
      }
    }
    uint64_t v20 = *(void *)(a1 + 48);
    uint64_t v10 = [*(id *)(a1 + 32) underlyingError];
    (*(void (**)(uint64_t, void *, NSObject *))(v20 + 16))(v20, v3, v10);
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v22 = "RideBookingApplication.m";
      __int16 v23 = 1026;
      LODWORD(v24[0]) = 371;
      WORD2(v24[0]) = 2082;
      *(void *)((char *)v24 + 6) = "-[RideBookingApplication getRideStatusWithCompletion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }
    uint64_t v3 = v10;
  }
}

void sub_1004C3530(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004C3554(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      int v13 = 138412546;
      id v14 = v10;
      __int16 v15 = 2080;
      v16[0] = "startGetRideStatusUpdates_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v13, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      LOWORD(v13) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "startGetRideStatusUpdates_resumeWithCompletionHandler", "", (uint8_t *)&v13, 2u);
    }

    id v12 = v5;
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    [v12 setShouldResetRequestAfterHandle:0];
    [v12 startSendingUpdatesToObserver:WeakRetained];
  }
  else
  {
    id v12 = v8;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v13 = 136446722;
      id v14 = "RideBookingApplication.m";
      __int16 v15 = 1026;
      LODWORD(v16[0]) = 410;
      WORD2(v16[0]) = 2082;
      *(void *)((char *)v16 + 6) = "-[RideBookingApplication startUpdates]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v13, 0x1Cu);
    }
  }
}

void sub_1004C3AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004C3AC4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  int v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      int v13 = 138412546;
      id v14 = v10;
      __int16 v15 = 2080;
      v16[0] = "stopGetRideStatusUpdates_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v13, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      LOWORD(v13) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "stopGetRideStatusUpdates_resumeWithCompletionHandler", "", (uint8_t *)&v13, 2u);
    }

    [v5 stopSendingUpdates];
    [WeakRetained[2] reset];
  }
  else
  {
    id v12 = v8;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v13 = 136446722;
      id v14 = "RideBookingApplication.m";
      __int16 v15 = 1026;
      LODWORD(v16[0]) = 434;
      WORD2(v16[0]) = 2082;
      *(void *)((char *)v16 + 6) = "-[RideBookingApplication stopUpdates]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v13, 0x1Cu);
    }
  }
}

void sub_1004C3DAC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
      id v5 = objc_alloc((Class)NSString);
      id v6 = [WeakRetained identifier];
      id v7 = [v5 initWithFormat:@"%@ received GetRideStatus live update: %@", v6, a1[4]];
      *(_DWORD *)long long buf = 136315394;
      __int16 v15 = v4;
      __int16 v16 = 2112;
      v17[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    id v8 = a1[4];
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v9 = v8;
    }
    else {
      id v9 = 0;
    }
    uint64_t v10 = v9;

    id v11 = [WeakRetained _statusWithGetRideStatusIntentResponse:v10];
    id v12 = [a1[4] userActivity];
    [v11 setUserActivity:v12];

    int v13 = [WeakRetained delegate];
    [v13 rideStatusDidChange:v11];

    if (([v11 isActiveRide] & 1) == 0) {
      [a1[5] stopUpdates];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v11 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v15 = "RideBookingApplication.m";
      __int16 v16 = 1026;
      LODWORD(v17[0]) = 447;
      WORD2(v17[0]) = 2082;
      *(void *)((char *)v17 + 6) = "-[RideBookingApplication intentResponseDidUpdate:withSerializedCacheItems:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
    uint64_t v10 = v11;
  }
}

void sub_1004C44B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1004C44E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      __int16 v23 = v10;
      __int16 v24 = 2080;
      v25[0] = "sendFeedbackForRide_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "sendFeedbackForRide_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setShouldResetRequestAfterHandle:0];
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    int v13 = WeakRetained[1];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_1004C47BC;
    void v17[3] = &unk_1012EC8B8;
    objc_copyWeak(&v21, (id *)(a1 + 40));
    id v18 = v6;
    id v14 = *(id *)(a1 + 32);
    id v19 = v12;
    id v20 = v14;
    id v15 = v12;
    dispatch_async(v13, v17);

    objc_destroyWeak(&v21);
  }
  else
  {
    __int16 v16 = v8;
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v23 = "RideBookingApplication.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 480;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingApplication sendFeedbackForRideStatus:feedbackRating:feedbackTip:compl"
                                     "etion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C47BC(uint64_t a1)
{
  id v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling SendRideFeeback: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        __int16 v16 = v5;
        __int16 v17 = 2112;
        v18[0] = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      id v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        id v9 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        __int16 v16 = v9;
        __int16 v17 = 2080;
        v18[0] = "sendFeedbackForRide_handleIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      uint64_t v10 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v10))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "sendFeedbackForRide_handleIntentWithCompletionHandler", "", buf, 2u);
      }

      id v11 = *(void **)(a1 + 40);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_1004C4B2C;
      v12[3] = &unk_1012EC9A8;
      objc_copyWeak(&v14, v2);
      id v13 = *(id *)(a1 + 48);
      [v11 handleIntentWithCompletionHandler:v12];

      objc_destroyWeak(&v14);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v16 = "RideBookingApplication.m";
      __int16 v17 = 1026;
      LODWORD(v18[0]) = 487;
      WORD2(v18[0]) = 2082;
      *(void *)((char *)v18 + 6) = "-[RideBookingApplication sendFeedbackForRideStatus:feedbackRating:feedbackTip:compl"
                                     "etion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C4B10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004C4B2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v20 = v10;
      __int16 v21 = 2080;
      v22[0] = "sendFeedbackForRide_handleIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "sendFeedbackForRide_handleIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1004C4DE0;
    v14[3] = &unk_1012EC980;
    objc_copyWeak(&v18, (id *)(a1 + 40));
    id v15 = v6;
    id v16 = v5;
    id v17 = *(id *)(a1 + 32);
    dispatch_async(v12, v14);

    objc_destroyWeak(&v18);
  }
  else
  {
    id v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v20 = "RideBookingApplication.m";
      __int16 v21 = 1026;
      LODWORD(v22[0]) = 496;
      WORD2(v22[0]) = 2082;
      *(void *)((char *)v22 + 6) = "-[RideBookingApplication sendFeedbackForRideStatus:feedbackRating:feedbackTip:compl"
                                     "etion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C4DE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32)
      || [*(id *)(a1 + 40) code] == (id)3
      || ![*(id *)(a1 + 40) code])
    {
      id v6 = +[NSError GEOErrorWithCode:-13 reason:@"Unable to send ride feedback"];
      id v7 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        id v8 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v9 = objc_alloc((Class)NSString);
        uint64_t v10 = *(void **)(a1 + 32);
        if (!v10) {
          uint64_t v10 = v6;
        }
        id v11 = [v9 initWithFormat:@"%@ had an error handling SendRideFeeback: %@", WeakRetained[6], v10];
        *(_DWORD *)long long buf = 136315394;
        id v14 = v8;
        __int16 v15 = 2112;
        v16[0] = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      uint64_t v3 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v5 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully handled SendRideFeeback", WeakRetained[6]];
        *(_DWORD *)long long buf = 136315394;
        id v14 = v4;
        __int16 v15 = 2112;
        v16[0] = v5;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v12 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v14 = "RideBookingApplication.m";
      __int16 v15 = 1026;
      LODWORD(v16[0]) = 500;
      WORD2(v16[0]) = 2082;
      *(void *)((char *)v16 + 6) = "-[RideBookingApplication sendFeedbackForRideStatus:feedbackRating:feedbackTip:compl"
                                     "etion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C549C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1004C54D0(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      __int16 v23 = v10;
      __int16 v24 = 2080;
      v25[0] = "checkIfCanCancelRide_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "checkIfCanCancelRide_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setShouldResetRequestAfterHandle:0];
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    id v13 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004C57C0;
    block[3] = &unk_1012EC7C8;
    objc_copyWeak(&v21, a1 + 6);
    id v17 = v6;
    id v20 = a1[5];
    id v18 = v12;
    id v19 = a1[4];
    id v14 = v12;
    dispatch_async(v13, block);

    objc_destroyWeak(&v21);
  }
  else
  {
    __int16 v15 = v8;
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v23 = "RideBookingApplication.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 531;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingApplication checkIfCanCancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C57C0(uint64_t a1)
{
  id v2 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error confirming CancelRide: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v17 = v5;
        __int16 v18 = 2112;
        v19[0] = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      id v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        id v9 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        id v17 = v9;
        __int16 v18 = 2080;
        v19[0] = "checkIfCanCancelRide_confirmIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      uint64_t v10 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v10))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "checkIfCanCancelRide_confirmIntentWithCompletionHandler", "", buf, 2u);
      }

      id v11 = *(void **)(a1 + 40);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_1004C5B4C;
      v12[3] = &unk_1012EC9D0;
      objc_copyWeak(&v15, v2);
      id v14 = *(id *)(a1 + 56);
      id v13 = *(id *)(a1 + 48);
      [v11 confirmIntentWithCompletionHandler:v12];

      objc_destroyWeak(&v15);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v17 = "RideBookingApplication.m";
      __int16 v18 = 1026;
      LODWORD(v19[0]) = 538;
      WORD2(v19[0]) = 2082;
      *(void *)((char *)v19 + 6) = "-[RideBookingApplication checkIfCanCancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C5B30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004C5B4C(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = GEOFindOrCreateLog();
  id v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v21 = v10;
      __int16 v22 = 2080;
      v23[0] = "checkIfCanCancelRide_confirmIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    id v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "checkIfCanCancelRide_confirmIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004C5E14;
    block[3] = &unk_1012EC7C8;
    objc_copyWeak(&v19, a1 + 6);
    id v15 = v6;
    id v18 = a1[5];
    id v16 = v5;
    id v17 = a1[4];
    dispatch_async(v12, block);

    objc_destroyWeak(&v19);
  }
  else
  {
    id v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v21 = "RideBookingApplication.m";
      __int16 v22 = 1026;
      LODWORD(v23[0]) = 547;
      WORD2(v23[0]) = 2082;
      *(void *)((char *)v23 + 6) = "-[RideBookingApplication checkIfCanCancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C5E14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      uint64_t v3 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
        id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v5 = objc_alloc((Class)NSString);
        uint64_t v6 = WeakRetained[6];
        id v7 = [*(id *)(a1 + 32) underlyingError];
        id v8 = [v5 initWithFormat:@"%@ had an error confirming CancelRide: %@", v6, v7];
        *(_DWORD *)long long buf = 136315394;
        __int16 v27 = v4;
        __int16 v28 = 2112;
        v29[0] = v8;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = [*(id *)(a1 + 32) underlyingError];
      (*(void (**)(uint64_t, void, void, NSObject *))(v9 + 16))(v9, 0, 0, v10);
    }
    else
    {
      BOOL v11 = [*(id *)(a1 + 40) code] != (id)2 && [*(id *)(a1 + 40) code] != (id)1;
      if (!*(void *)(a1 + 40) || v11)
      {
        uint64_t v10 = +[NSError GEOErrorWithCode:-11 reason:@"Extension response for INCancelRideIntent invalid"];
        __int16 v23 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          __int16 v24 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
          id v25 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error confirming CancelRide: %@", WeakRetained[6], v10];
          *(_DWORD *)long long buf = 136315394;
          __int16 v27 = v24;
          __int16 v28 = 2112;
          v29[0] = v25;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
        }
        (*(void (**)(void, void, void, NSObject *))(*(void *)(a1 + 56) + 16))(*(void *)(a1 + 56), 0, 0, v10);
      }
      else
      {
        id v12 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          id v13 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
          id v14 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully confirmed CancelRide", WeakRetained[6]];
          *(_DWORD *)long long buf = 136315394;
          __int16 v27 = v13;
          __int16 v28 = 2112;
          v29[0] = v14;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
        }
        uint64_t v10 = [*(id *)(a1 + 40) cancellationFee];

        if (v10)
        {
          id v15 = [RideBookingCurrencyAmount alloc];
          id v16 = [*(id *)(a1 + 40) cancellationFee];
          id v17 = [v16 amount];
          id v18 = [*(id *)(a1 + 40) cancellationFee];
          id v19 = [v18 currencyCode];
          uint64_t v10 = [(RideBookingCurrencyAmount *)v15 initWithAmount:v17 currencyCode:v19];
        }
        id v20 = [*(id *)(a1 + 40) cancellationFeeThreshold];

        if (v20)
        {
          id v21 = +[NSCalendar autoupdatingCurrentCalendar];
          __int16 v22 = [*(id *)(a1 + 40) cancellationFeeThreshold];
          id v20 = [v21 dateFromComponents:v22];
        }
        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
        [*(id *)(a1 + 48) reset];
      }
    }
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v27 = "RideBookingApplication.m";
      __int16 v28 = 1026;
      LODWORD(v29[0]) = 551;
      WORD2(v29[0]) = 2082;
      *(void *)((char *)v29 + 6) = "-[RideBookingApplication checkIfCanCancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C66B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1004C66EC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = GEOFindOrCreateLog();
  uint64_t v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      __int16 v23 = v10;
      __int16 v24 = 2080;
      v25[0] = "cancelRide_resumeWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    BOOL v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "cancelRide_resumeWithCompletionHandler", "", buf, 2u);
    }

    id v12 = v5;
    [v12 setShouldResetRequestAfterHandle:0];
    [v12 setImageProcessingHandler:&stru_1012ECA78];
    id v13 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004C69DC;
    block[3] = &unk_1012EC7C8;
    objc_copyWeak(&v21, a1 + 6);
    id v17 = v6;
    id v20 = a1[5];
    id v18 = v12;
    id v19 = a1[4];
    id v14 = v12;
    dispatch_async(v13, block);

    objc_destroyWeak(&v21);
  }
  else
  {
    id v15 = v8;
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      __int16 v23 = "RideBookingApplication.m";
      __int16 v24 = 1026;
      LODWORD(v25[0]) = 600;
      WORD2(v25[0]) = 2082;
      *(void *)((char *)v25 + 6) = "-[RideBookingApplication cancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C69DC(uint64_t a1)
{
  id v2 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
        id v6 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling CancelRide: %@", WeakRetained[6], *(void *)(a1 + 32)];
        *(_DWORD *)long long buf = 136315394;
        id v17 = v5;
        __int16 v18 = 2112;
        v19[0] = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
      }
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      id v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = [WeakRetained uniqueName];
        *(_DWORD *)long long buf = 138412546;
        id v17 = v9;
        __int16 v18 = 2080;
        v19[0] = "cancelRide_handleIntentWithCompletionHandler";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s BEGIN", buf, 0x16u);
      }
      uint64_t v10 = GEOFindOrCreateLog();
      if (os_signpost_enabled(v10))
      {
        *(_WORD *)long long buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "cancelRide_handleIntentWithCompletionHandler", "", buf, 2u);
      }

      BOOL v11 = *(void **)(a1 + 40);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_1004C6D60;
      v12[3] = &unk_1012EC9D0;
      objc_copyWeak(&v15, v2);
      id v14 = *(id *)(a1 + 56);
      id v13 = *(id *)(a1 + 48);
      [v11 handleIntentWithCompletionHandler:v12];

      objc_destroyWeak(&v15);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v17 = "RideBookingApplication.m";
      __int16 v18 = 1026;
      LODWORD(v19[0]) = 607;
      WORD2(v19[0]) = 2082;
      *(void *)((char *)v19 + 6) = "-[RideBookingApplication cancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf2 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C6D44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004C6D60(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = GEOFindOrCreateLog();
  uint64_t v9 = v8;
  if (WeakRetained)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [WeakRetained uniqueName];
      *(_DWORD *)long long buf = 138412546;
      id v21 = v10;
      __int16 v22 = 2080;
      v23[0] = "cancelRide_handleIntentWithCompletionHandler";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", buf, 0x16u);
    }
    BOOL v11 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v11))
    {
      *(_WORD *)long long buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "cancelRide_handleIntentWithCompletionHandler", "", buf, 2u);
    }

    id v12 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004C7028;
    block[3] = &unk_1012EC7C8;
    objc_copyWeak(&v19, a1 + 6);
    id v15 = v6;
    id v18 = a1[5];
    id v16 = v5;
    id v17 = a1[4];
    dispatch_async(v12, block);

    objc_destroyWeak(&v19);
  }
  else
  {
    id v13 = v8;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v21 = "RideBookingApplication.m";
      __int16 v22 = 1026;
      LODWORD(v23[0]) = 616;
      WORD2(v23[0]) = 2082;
      *(void *)((char *)v23 + 6) = "-[RideBookingApplication cancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf3 went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C7028(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained)
  {
    GEOFindOrCreateLog();
    uint64_t v10 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v20 = "RideBookingApplication.m";
      __int16 v21 = 1026;
      LODWORD(v22[0]) = 620;
      WORD2(v22[0]) = 2082;
      *(void *)((char *)v22 + 6) = "-[RideBookingApplication cancelRideWithRideStatus:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf4 went away in %{public}s", buf, 0x1Cu);
    }

    goto LABEL_9;
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      id v4 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
      id v5 = objc_alloc((Class)NSString);
      uint64_t v6 = WeakRetained[6];
      id v7 = [*(id *)(a1 + 32) underlyingError];
      id v8 = [v5 initWithFormat:@"%@ had an error handling CancelRide: %@", v6, v7];
      *(_DWORD *)long long buf = 136315394;
      id v20 = v4;
      __int16 v21 = 2112;
      v22[0] = v8;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
    uint64_t v9 = *(void *)(a1 + 56);
    uint64_t v10 = [*(id *)(a1 + 32) underlyingError];
    (*(void (**)(uint64_t, NSObject *))(v9 + 16))(v9, v10);
LABEL_9:

    goto LABEL_10;
  }
  BOOL v11 = *(void **)(a1 + 40);
  if (v11 && [v11 code] == (id)2)
  {
    id v12 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      id v13 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
      id v14 = [objc_alloc((Class)NSString) initWithFormat:@"%@ successfully handled CancelRide", WeakRetained[6]];
      *(_DWORD *)long long buf = 136315394;
      id v20 = v13;
      __int16 v21 = 2112;
      v22[0] = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "{RBInfo}{%s}: %@", buf, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    [*(id *)(a1 + 48) reset];
  }
  else
  {
    id v15 = +[NSError GEOErrorWithCode:-11 reason:@"Extension response for INCancelRideIntent invalid"];
    id v16 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      id v17 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
      id v18 = [objc_alloc((Class)NSString) initWithFormat:@"%@ had an error handling CancelRide: %@", WeakRetained[6], v15];
      *(_DWORD *)long long buf = 136315394;
      id v20 = v17;
      __int16 v21 = 2112;
      v22[0] = v18;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
LABEL_10:
}

void sub_1004C74C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (*(void *)(a1 + 32)
      && (id v3 = objc_alloc((Class)LSApplicationRecord),
          [WeakRetained identifier],
          id v4 = objc_claimAutoreleasedReturnValue(),
          id v5 = [v3 initWithBundleIdentifier:v4 allowPlaceholder:0 error:0],
          v4,
          v5))
    {
      uint64_t v6 = +[MKSystemController sharedInstance];
      id v7 = *(void **)(a1 + 32);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      id v9[2] = sub_1004C76D4;
      void v9[3] = &unk_1012E6438;
      id v10 = v7;
      [v6 openUserActivity:v10 withApplicationRecord:v5 requireOptionKeyPromptUnlockDevice:0 completionHandler:v9];
    }
    else
    {
      id v5 = +[LSApplicationWorkspace defaultWorkspace];
      id v8 = [WeakRetained identifier];
      [v5 openApplicationWithBundleID:v8];
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v5 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136446722;
      id v12 = "RideBookingApplication.m";
      __int16 v13 = 1026;
      int v14 = 649;
      __int16 v15 = 2082;
      id v16 = "-[RideBookingApplication openWithActivity:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", buf, 0x1Cu);
    }
  }
}

void sub_1004C76D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      id v5 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
      id v6 = [objc_alloc((Class)NSString) initWithFormat:@"Error opening acivity: %@", *(void *)(a1 + 32)];
      *(_DWORD *)long long buf = 136315394;
      id v8 = v5;
      __int16 v9 = 2112;
      id v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
  }
}

RideBookingPassengersChoice *sub_1004C7890(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (char *)[v3 partySizeRange];
  [v3 partySizeRange];
  id v6 = [[RideBookingPassengersChoice alloc] initWithNumberOfPassengers:&v4[v5]];
  [(RideBookingPassengersChoice *)v6 setIntentsPartySizeOption:v3];

  [(RideBookingPassengersChoice *)v6 setIntentsPriceRange:*(void *)(a1 + 32)];

  return v6;
}

int64_t sub_1004C8924(id a1, INRideOption *a2, INRideOption *a3)
{
  id v4 = a3;
  uint64_t v5 = [(INRideOption *)a2 priceRange];
  id v6 = [v5 minimumPrice];
  id v7 = [(INRideOption *)v4 priceRange];

  id v8 = [v7 minimumPrice];
  int64_t v9 = [v6 compare:v8] == (id)1;

  return v9;
}

void sub_1004C8AD4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1004C8AE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = +[RideBookingRideStatus statusWithApplication:WeakRetained error:9];
    id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
    [v4 rideStatusDidChange:v3];
  }
  else
  {
    GEOFindOrCreateLog();
    uint64_t v5 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 136446722;
      id v7 = "RideBookingApplication.m";
      __int16 v8 = 1026;
      int v9 = 1033;
      __int16 v10 = 2082;
      BOOL v11 = "-[RideBookingApplication didChangeProtectionStatusForBundleId:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v6, 0x1Cu);
    }
  }
}

void sub_1004C8D68(id a1, INImage *a2, id a3)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  id v6[2] = sub_1004C8E1C;
  v6[3] = &unk_1012ECAA0;
  id v7 = a2;
  id v8 = a3;
  id v4 = v7;
  id v5 = v8;
  [(INImage *)v4 _retrieveImageDataWithReply:v6];
}

void sub_1004C8E1C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v8 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplication.m");
      id v9 = [objc_alloc((Class)NSString) initWithFormat:@"Unable to retrieve image data = %@", v6];
      *(_DWORD *)long long buf = 136315394;
      __int16 v15 = v8;
      __int16 v16 = 2112;
      id v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
    }
    __int16 v10 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  else
  {
    BOOL v11 = +[RideBookingAccessProxy imageCache];
    id v12 = [v5 _imageData];
    __int16 v13 = [*(id *)(a1 + 32) _identifier];
    [v11 cacheINImageData:v12 withKey:v13];

    __int16 v10 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  v10();
}

id sub_1004C8FBC(uint64_t a1, char a2)
{
  switch(a1)
  {
    case 1:
      id v3 = +[NSBundle mainBundle];
      if (a2) {
        CFStringRef v4 = @"[Route Creation] Remove Anchor";
      }
      else {
        CFStringRef v4 = @"[Route Creation] Add Anchor";
      }
      goto LABEL_16;
    case 2:
      id v3 = +[NSBundle mainBundle];
      if (a2) {
        CFStringRef v4 = @"[Route Creation] Redo Anchor";
      }
      else {
        CFStringRef v4 = @"[Route Creation] Undo Delete Anchor";
      }
      goto LABEL_16;
    case 3:
      id v5 = +[NSBundle mainBundle];
      id v3 = v5;
      CFStringRef v4 = @"[Route Creation] Reverse Anchors";
      goto LABEL_17;
    case 4:
      id v3 = +[NSBundle mainBundle];
      if (a2) {
        CFStringRef v4 = @"[Route Creation] Out-and-Back";
      }
      else {
        CFStringRef v4 = @"[Route Creation] Undo Out-and-Back";
      }
      goto LABEL_16;
    case 5:
      id v3 = +[NSBundle mainBundle];
      if (a2) {
        CFStringRef v4 = @"[Route Creation] Close Loop";
      }
      else {
        CFStringRef v4 = @"[Route Creation] Undo Close Loop";
      }
LABEL_16:
      id v5 = v3;
LABEL_17:
      id v6 = [v5 localizedStringForKey:v4 value:@"localized string not found" table:0];

      break;
    default:
      id v6 = 0;
      break;
  }

  return v6;
}

NSString *__cdecl sub_1004C98BC(id a1, GEOComposedRouteAnchorPoint *a2)
{
  id v2 = a2;
  [(GEOComposedRouteAnchorPoint *)v2 locationCoordinate];
  uint64_t v4 = v3;
  [(GEOComposedRouteAnchorPoint *)v2 locationCoordinate];
  uint64_t v6 = v5;

  return +[NSString stringWithFormat:@"%f, %f", v4, v6];
}

void sub_1004CAE14(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  [*(id *)(a1 + 32) saveMapItem:v3];
}

void sub_1004CC9F0(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) view];
  uint64_t v1 = [v3 window];
  id v2 = [v1 rootViewController];
  sub_100B09D40(v2);
}

BOOL sub_1004CD838(id a1, UIButton *a2, NSDictionary *a3)
{
  id v3 = a2;
  if ([(UIButton *)v3 isEnabled]) {
    unsigned int v4 = [(UIButton *)v3 isHidden] ^ 1;
  }
  else {
    LOBYTE(v4) = 0;
  }

  return v4;
}

int64_t sub_1004CF958(void *a1)
{
  id v1 = a1;
  id v2 = [v1 activePhotoList];
  id v3 = [v2 count];
  unsigned int v4 = [v1 addedPhotosWithMetadata];
  uint64_t v5 = [v4 count];
  id v6 = [v1 maximumNumberOfPhotos];
  id v7 = [v1 maximumNumberOfPhotosPerSubmission];

  if (v7 <= v5 || v3 >= v6) {
    int64_t v9 = 0;
  }
  else {
    int64_t v9 = v7 - v5;
  }

  return v9;
}

void sub_1004D0C5C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) logicController];
  [v1 displayFilters];
}

id sub_1004D2970()
{
  if (qword_10160EE68 != -1) {
    dispatch_once(&qword_10160EE68, &stru_1012ECB68);
  }
  uint64_t v0 = (void *)qword_10160EE60;

  return v0;
}

void sub_1004D31D0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayout];
}

id sub_1004D386C(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(void **)(a1 + 32);
  if (v2) {
    double v4 = 0.300000012;
  }
  else {
    double v4 = 1.0;
  }
  if (v2) {
    double v5 = 1.0;
  }
  else {
    double v5 = 0.0;
  }
  [v3 setOverrideUserInterfaceStyle:2 * v2];
  [*(id *)(*(void *)(a1 + 32) + 136) setAlpha:v4];
  id v6 = *(void **)(*(void *)(a1 + 32) + 192);

  return [v6 setAlpha:v5];
}

void sub_1004D3A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_1004D3AC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _rectOfRowToKeepVisible];
    double MinY = CGRectGetMinY(v5);
  }
  else
  {
    double MinY = 0.0;
  }

  return MinY;
}

void sub_1004D4074(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitNavigationTray");
  uint64_t v2 = (void *)qword_10160EE60;
  qword_10160EE60 = (uint64_t)v1;
}

id sub_1004D4D88()
{
  if (qword_10160EE78 != -1) {
    dispatch_once(&qword_10160EE78, &stru_1012ECC30);
  }
  uint64_t v0 = (void *)qword_10160EE70;

  return v0;
}

void sub_1004D544C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1004D547C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  __int16 v10 = sub_1004D4D88();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v12 = [v7 groupIdentifier];
    int v17 = 134349314;
    id v18 = WeakRetained;
    __int16 v19 = 2112;
    id v20 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "[%{public}p] Creating cell for shared trip: %@", (uint8_t *)&v17, 0x16u);
  }
  __int16 v13 = +[TwoLinesTableViewCell identifier];
  int v14 = [v9 dequeueReusableCellWithIdentifier:v13 forIndexPath:v8];

  __int16 v15 = +[TwoLinesContentViewModelComposer cellModelForSharedTrip:v7];
  [v14 setViewModel:v15];

  return v14;
}

void sub_1004D55F8(uint64_t a1)
{
  uint64_t v2 = sub_1004D4D88();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v7 = 134349056;
    id v8 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Reloading tableview", (uint8_t *)&v7, 0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 32));
  CGRect v5 = v4;
  if (v4)
  {
    id v6 = [v4 cardPresentationController];
    [v6 updateHeightForCurrentLayout];
  }
}

NSString *__cdecl sub_1004D586C(id a1, GEOSharedNavState *a2, unint64_t a3)
{
  return (NSString *)[(GEOSharedNavState *)a2 _transportTypeStringForAnalytics];
}

void sub_1004D5E50(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SharedTripListContaineeViewController");
  uint64_t v2 = (void *)qword_10160EE70;
  qword_10160EE70 = (uint64_t)v1;
}

void sub_1004D6068(void *a1, void *a2, void *a3)
{
  id v11 = a3;
  unsigned __int8 v6 = [a2 isComplete];
  if (v6)
  {
    BOOL v7 = 1;
  }
  else
  {
    id v8 = *(void **)(a1[4] + 56);
    a1 = +[NSCharacterSet whitespaceAndNewlineCharacterSet];
    id v3 = [v8 stringByTrimmingCharactersInSet:a1];
    BOOL v7 = [v3 length] != 0;
  }
  id v9 = [v11 navigationItem];
  __int16 v10 = [v9 rightBarButtonItem];
  [v10 setEnabled:v7];

  if ((v6 & 1) == 0)
  {
  }
}

id sub_1004D93A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100577844();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    CGRect v5 = [(id)objc_opt_class() baseFilePath:0];
    int v14 = 138412290;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Created a table for base path %@", (uint8_t *)&v14, 0xCu);
  }
  if (objc_msgSend(v3, "user_version") != (id)1)
  {
    unsigned __int8 v6 = sub_100577844();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = [v3 user_version];
      int v14 = 134217984;
      id v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "DB user version %llu is outdated. Dropping (Little Bobby) tables.", (uint8_t *)&v14, 0xCu);
    }

    [v3 dropAllTables];
  }
  [v3 setUser_version:1];
  id v8 = sub_100577844();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = [v3 user_version];
    int v14 = 134217984;
    id v15 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Setting schema version to %llu", (uint8_t *)&v14, 0xCu);
  }

  __int16 v10 = *(void **)(*(void *)(a1 + 32) + 8);
  id v11 = [v10 log];
  id v12 = sub_1004D9578(v10, 0);

  return v12;
}

id sub_1004D9578(void *a1, int a2)
{
  id v3 = a1;
  id v4 = v3;
  if (a2) {
    CGRect v5 = "DROP TABLE reviewedplace";
  }
  else {
    CGRect v5 = 0;
  }
  if ([v3 createTable:@"CREATE TABLE IF NOT EXISTS reviewedplace(   muid INT NOT NULL,    recommendstate INT NOT NULL,    photosadded INT NOT NULL,    UNIQUE(muid)   );"]
                       v5)
    && [v4 prepareStatement:@"INSERT OR REPLACE INTO reviewedplace    (muid, recommendstate, photosadded)    VALUES (@muid, @recommendstate, @photosadded);" forKey:@""];
                       @"SetReviewedPlace")
    && [v4 prepareStatement:@"SELECT muid, recommendstate, photosadded    FROM reviewedplace    WHERE muid = @muid    LIMIT 1;" forKey:@""];
                       @"FindReviewedPlace")
    && [v4 prepareStatement:@"DELETE FROM reviewedplace    WHERE muid = @muid    LIMIT 1;" forKey:@""];
                       @"RemoveReviewedPlace"))
  {
    id v6 = [v4 prepareStatement:"DROP TABLE reviewedplace;" forKey:@"DropReviewedPlaceEntries"];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_1004D9A30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1004D9A4C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    if (*(void *)(a1 + 48) == *(void *)(a1 + 56))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      if (v6)
      {
        id v7 = *(void (**)(void))(v6 + 16);
LABEL_7:
        v7();
      }
    }
    else
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      if (WeakRetained)
      {
        uint64_t v10 = *(void *)(a1 + 48);
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        v11[2] = sub_1004D9BB0;
        v11[3] = &unk_1012ECD08;
        objc_copyWeak(v14, (id *)(a1 + 40));
        v14[1] = *(id *)(a1 + 56);
        id v12 = v5;
        id v13 = *(id *)(a1 + 32);
        char v15 = a2;
        [WeakRetained removeReviewedPlaceWithMUID:v10 completion:v11];

        objc_destroyWeak(v14);
      }
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      id v7 = *(void (**)(void))(v8 + 16);
      goto LABEL_7;
    }
  }
}

void sub_1004D9B9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1004D9BB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = [[UGCReviewedPlace alloc] initWithMUID:*(void *)(a1 + 56)];
    -[UGCReviewedPlace setNumberOfPhotosAdded:](v3, "setNumberOfPhotosAdded:", [*(id *)(a1 + 32) numberOfPhotosAdded]);
    -[UGCReviewedPlace setRecommendState:](v3, "setRecommendState:", [*(id *)(a1 + 32) recommendState]);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    id v6[2] = sub_1004D9CB8;
    v6[3] = &unk_1012ECCE0;
    id v4 = *(id *)(a1 + 40);
    char v9 = *(unsigned char *)(a1 + 64);
    id v7 = v3;
    id v8 = v4;
    id v5 = v3;
    [WeakRetained addOrEditReviewedPlace:v5 completion:v6];
  }
}

uint64_t sub_1004D9CB8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
  }
  return result;
}

void sub_1004D9D84(void *a1)
{
  uint64_t v10 = 0;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000;
  id v13 = sub_100103C5C;
  int v14 = sub_1001046B8;
  id v15 = 0;
  uint64_t v2 = *(void **)(a1[4] + 8);
  uint64_t v3 = a1[6];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_1004DA0A4;
  void v8[3] = &unk_1012ECD58;
  void v8[4] = &v10;
  v8[5] = v3;
  id v9 = 0;
  sub_1004D9F48(v2, &v9, v3, v8);
  id v4 = v9;
  if (!v11[5])
  {
    id v5 = sub_100577844();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = a1[6];
      *(_DWORD *)long long buf = 134217984;
      uint64_t v17 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "We could not find a cached reviewed place with muid %llu ", buf, 0xCu);
    }
  }
  uint64_t v7 = a1[5];
  if (v7) {
    (*(void (**)(uint64_t, BOOL))(v7 + 16))(v7, v11[5] != 0);
  }
  _Block_object_dispose(&v10, 8);
}

void sub_1004D9F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004D9F48(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a1;
  id v8 = a4;
  uint64_t v17 = 0;
  id v18 = &v17;
  uint64_t v19 = 0x3032000000;
  id v20 = sub_100103C5C;
  __int16 v21 = sub_1001046B8;
  id v22 = 0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_1004DAC8C;
  v12[3] = &unk_1012ECDA8;
  id v9 = v7;
  id v15 = &v17;
  uint64_t v16 = a3;
  id v13 = v9;
  id v10 = v8;
  id v14 = v10;
  [v9 statementForKey:@"FindReviewedPlace" statementBlock:v12];
  if (a2)
  {
    id v11 = (void *)v18[5];
    if (v11) {
      *a2 = v11;
    }
  }

  _Block_object_dispose(&v17, 8);
}

void sub_1004DA08C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1004DA0A4(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  id v7 = [[UGCReviewedPlace alloc] initWithMUID:*(void *)(a1 + 40)];
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setRecommendState:a3];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setNumberOfPhotosAdded:a4];
  id v10 = sub_100577844();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    id v11 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) muid];
    id v12 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) recommendState];
    id v13 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) numberOfPhotosAdded];
    int v15 = 134218496;
    id v16 = v11;
    __int16 v17 = 2048;
    id v18 = v12;
    __int16 v19 = 2048;
    id v20 = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "We fetched a cached reviewed place with muid %llu with recommend state %lu, and number of photos added %lu", (uint8_t *)&v15, 0x20u);
  }

  return 0;
}

void sub_1004DA2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004DA304(void *a1)
{
  uint64_t v2 = *(void **)(a1[4] + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1004DA438;
  v7[3] = &unk_1012ECD58;
  uint64_t v3 = a1[6];
  void v7[4] = a1[5];
  void v7[5] = v3;
  id v8 = 0;
  sub_1004D9F48(v2, &v8, v3, v7);
  id v4 = v8;
  if (!*(void *)(*(void *)(a1[5] + 8) + 40))
  {
    id v5 = sub_100577844();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = a1[6];
      *(_DWORD *)long long buf = 134217984;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "We could not find a cached reviewed place with muid %llu ", buf, 0xCu);
    }
  }
}

uint64_t sub_1004DA438(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  id v7 = [[UGCReviewedPlace alloc] initWithMUID:*(void *)(a1 + 40)];
  uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setRecommendState:a3];
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) setNumberOfPhotosAdded:a4];
  uint64_t v10 = sub_100577844();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    id v11 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) muid];
    id v12 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) recommendState];
    id v13 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) numberOfPhotosAdded];
    int v15 = 134218496;
    id v16 = v11;
    __int16 v17 = 2048;
    id v18 = v12;
    __int16 v19 = 2048;
    id v20 = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "We fetched a cached reviewed place with muid %llu with recommend state %lu, and number of photos added %lu", (uint8_t *)&v15, 0x20u);
  }

  return 0;
}

void sub_1004DA634(void *a1)
{
  uint64_t v2 = a1[6];
  id v3 = *(id *)(a1[4] + 8);
  uint64_t v17 = 0;
  id v18 = &v17;
  uint64_t v19 = 0x3032000000;
  id v20 = sub_100103C5C;
  __int16 v21 = sub_1001046B8;
  id v22 = 0;
  *(void *)&long long buf = _NSConcreteStackBlock;
  *((void *)&buf + 1) = 3221225472;
  __int16 v24 = sub_1004DADCC;
  id v25 = &unk_1012ECDD0;
  id v4 = v3;
  __int16 v27 = &v17;
  uint64_t v28 = v2;
  id v26 = v4;
  unsigned __int8 v5 = [v4 executeStatement:@"RemoveReviewedPlace" statementBlock:&buf];
  uint64_t v6 = (void *)v18[5];
  if (v6) {
    id v7 = v6;
  }

  _Block_object_dispose(&v17, 8);
  id v8 = v6;
  char v9 = v5 & (v6 == 0);
  uint64_t v10 = sub_100577844();
  id v11 = v10;
  if (v9)
  {
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    uint64_t v12 = a1[6];
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = v12;
    id v13 = "Removed a cached removed place with muid %llu";
    id v14 = v11;
    os_log_type_t v15 = OS_LOG_TYPE_INFO;
  }
  else
  {
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v8;
    id v13 = "Error in deleting place with error %@";
    id v14 = v11;
    os_log_type_t v15 = OS_LOG_TYPE_ERROR;
  }
  _os_log_impl((void *)&_mh_execute_header, v14, v15, v13, (uint8_t *)&buf, 0xCu);
LABEL_9:

  uint64_t v16 = a1[5];
  if (v16) {
    (*(void (**)(uint64_t, id))(v16 + 16))(v16, v8);
  }
}

void sub_1004DA844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1004DA928(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 8);
  id v3 = [*(id *)(a1 + 40) muid];
  unsigned int v4 = [*(id *)(a1 + 40) recommendState];
  unsigned int v5 = [*(id *)(a1 + 40) numberOfPhotosAdded];
  uint64_t v22 = 0;
  __int16 v23 = &v22;
  uint64_t v24 = 0x3032000000;
  id v25 = sub_100103C5C;
  id v26 = sub_1001046B8;
  id v27 = 0;
  *(void *)long long buf = _NSConcreteStackBlock;
  *(void *)&buf[8] = 3221225472;
  *(void *)&uint8_t buf[16] = sub_1004DAE30;
  __int16 v29 = &unk_1012ECDF8;
  id v6 = v2;
  uint64_t v31 = &v22;
  id v32 = v3;
  id v30 = v6;
  unsigned int v33 = v4;
  unsigned int v34 = v5;
  unsigned __int8 v7 = [v6 executeStatement:@"SetReviewedPlace" statementBlock:buf];
  id v8 = (void *)v23[5];
  if (v8) {
    id v9 = v8;
  }

  _Block_object_dispose(&v22, 8);
  id v10 = v8;
  char v11 = v7 & (v8 == 0);
  uint64_t v12 = sub_100577844();
  id v13 = v12;
  if (v11)
  {
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v14 = [*(id *)(a1 + 40) muid];
    id v15 = [*(id *)(a1 + 40) recommendState];
    id v16 = [*(id *)(a1 + 40) numberOfPhotosAdded];
    *(_DWORD *)long long buf = 134218496;
    *(void *)&uint8_t buf[4] = v14;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v15;
    *(_WORD *)&buf[22] = 2048;
    __int16 v29 = v16;
    uint64_t v17 = "We added a new reviewed place with muid %llu with recommend state %lu, and number of photos added %lu";
    id v18 = v13;
    os_log_type_t v19 = OS_LOG_TYPE_INFO;
    uint32_t v20 = 32;
  }
  else
  {
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    *(_DWORD *)long long buf = 138412290;
    *(void *)&uint8_t buf[4] = v10;
    uint64_t v17 = "Failed to add reviewed place with error %@";
    id v18 = v13;
    os_log_type_t v19 = OS_LOG_TYPE_ERROR;
    uint32_t v20 = 12;
  }
  _os_log_impl((void *)&_mh_execute_header, v18, v19, v17, buf, v20);
LABEL_9:

  uint64_t v21 = *(void *)(a1 + 48);
  if (v21) {
    (*(void (**)(uint64_t, id))(v21 + 16))(v21, v10);
  }
}

void sub_1004DAB90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1004DAC24(uint64_t a1)
{
  os_log_t v1 = *(void **)(*(void *)(a1 + 32) + 8);
  id v2 = [v1 log];
  sub_1004D9578(v1, 1);
}

uint64_t sub_1004DAC8C(uint64_t a1, sqlite3_stmt *a2)
{
  unsigned int v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  unsigned int v7 = [v4 bindInt64Parameter:"@muid" toValue:v5 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = sqlite3_step(a2);
  uint64_t v9 = 1;
  while (v8 == 100)
  {
    [*(id *)(a1 + 32) int64ForColumn:0 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:1 inStatment:a2];
    [*(id *)(a1 + 32) intForColumn:2 inStatment:a2];
    if (!(*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
      return v9;
    }
    uint64_t v8 = sqlite3_step(a2);
  }
  if (v8 != 101)
  {
    id v10 = *(void **)(a1 + 32);
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    id v13 = *(id *)(v11 + 40);
    [v10 reportSQLiteErrorCode:v8 method:@"step" error:&v13];
    objc_storeStrong((id *)(v11 + 40), v13);
    return 0;
  }
  return 1;
}

id sub_1004DADCC(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[6];
  id v3 = (void *)a1[4];
  uint64_t v4 = *(void *)(a1[5] + 8);
  id obj = *(id *)(v4 + 40);
  id v5 = [v3 bindInt64Parameter:"@muid" toValue:v2 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v4 + 40), obj);
  return v5;
}

id sub_1004DAE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 48);
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id obj = *(id *)(v6 + 40);
  unsigned int v7 = [v5 bindInt64Parameter:"@muid" toValue:v4 inStatement:a2 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  id v18 = *(id *)(v10 + 40);
  unsigned int v11 = [v9 bindIntParameter:"@recommendstate" toValue:v8 inStatement:a2 error:&v18];
  objc_storeStrong((id *)(v10 + 40), v18);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 60);
  id v13 = *(void **)(a1 + 32);
  uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8);
  id v17 = *(id *)(v14 + 40);
  id v15 = [v13 bindIntParameter:"@photosadded" toValue:v12 inStatement:a2 error:&v17];
  objc_storeStrong((id *)(v14 + 40), v17);
  return v15;
}

void sub_1004DBB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004DBB9C(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([v7 _hasLookAroundStorefront]
    && [v7 _isMapItemTypeBusiness])
  {
    id v3 = [*(id *)(a1 + 32) appCoordinator];
    uint64_t v4 = +[MKLookAroundEntryPoint entryPointWithMapItem:v7 wantsCloseUpView:1];
    [v3 enterLookAroundWithEntryPoint:v4 lookAroundView:0 showsFullScreen:1 originFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) appCoordinator];
    uint64_t v4 = [*(id *)(a1 + 40) originalMapItem];
    id v5 = [v4 _muninViewState];
    uint64_t v6 = +[MKLookAroundEntryPoint entryPointWithMuninViewState:v5];
    [v3 enterLookAroundWithEntryPoint:v6 lookAroundView:0 showsFullScreen:1 originFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
  }
}

void sub_1004DBCCC(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    if (v7)
    {
      id v5 = +[MKLookAroundEntryPoint entryPointWithMapItem:v7];
      uint64_t v6 = [*(id *)(a1 + 32) appCoordinator];
      [v6 enterLookAroundWithEntryPoint:v5 lookAroundView:0 showsFullScreen:0 originFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
    }
    else
    {
      [WeakRetained _showErrorMessageinContext:*(void *)(a1 + 32)];
    }
  }
}

void sub_1004DCE94(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  [v5 removeFromSuperview];
  [*(id *)(*(void *)(a1 + 32) + 88) insertArrangedSubview:v5 atIndex:a3];
}

void sub_1004DE134(uint64_t a1)
{
  os_log_t v1 = [*(id *)(a1 + 32) snapshotDataSource];
  id v2 = [v1 snapshot];

  [(id)objc_opt_class() saveToFilePath:0 storage:v2];
}

void sub_1004DE2B4(id a1)
{
  v3[0] = UIContentSizeCategoryAccessibilityMedium;
  v3[1] = UIContentSizeCategoryAccessibilityLarge;
  v3[2] = UIContentSizeCategoryAccessibilityExtraLarge;
  v3[3] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  void v3[4] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:5];
  id v2 = (void *)qword_10160EE90;
  qword_10160EE90 = v1;
}

void sub_1004DFA88(id a1)
{
  v3[0] = UIContentSizeCategoryUnspecified;
  v3[1] = UIContentSizeCategoryExtraSmall;
  v3[2] = UIContentSizeCategorySmall;
  v3[3] = UIContentSizeCategoryMedium;
  void v3[4] = UIContentSizeCategoryLarge;
  void v3[5] = UIContentSizeCategoryExtraLarge;
  v3[6] = UIContentSizeCategoryExtraExtraLarge;
  v3[7] = UIContentSizeCategoryExtraExtraExtraLarge;
  v3[8] = UIContentSizeCategoryAccessibilityMedium;
  v3[9] = UIContentSizeCategoryAccessibilityLarge;
  v3[10] = UIContentSizeCategoryAccessibilityExtraLarge;
  v3[11] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v3[12] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:13];
  id v2 = (void *)qword_10160EE80;
  qword_10160EE80 = v1;
}

id sub_1004DFBB0(uint64_t a1, void *a2)
{
  id v3 = [a2 preferredContentSizeCategory];
  uint64_t v4 = v3;
  if (!v3
    || UIContentSizeCategoryCompareToCategory(v3, UIContentSizeCategoryUnspecified) == NSOrderedSame
    || UIContentSizeCategoryCompareToCategory(v4, *(UIContentSizeCategory *)(a1 + 32)) != NSOrderedDescending)
  {
LABEL_13:
    double v5 = *(double *)(a1 + 48);
    goto LABEL_14;
  }
  if (UIContentSizeCategoryCompareToCategory(v4, *(UIContentSizeCategory *)(a1 + 40)) == NSOrderedAscending)
  {
    uint64_t v6 = [(id)qword_10160EE80 indexOfObject:*(void *)(a1 + 32)];
    id v7 = [(id)qword_10160EE80 indexOfObject:*(void *)(a1 + 40)];
    uint64_t v8 = [(id)qword_10160EE80 indexOfObject:v4];
    if (v6 != (unsigned char *)0x7FFFFFFFFFFFFFFFLL
      && v7 != (unsigned char *)0x7FFFFFFFFFFFFFFFLL
      && v8 != (unsigned char *)0x7FFFFFFFFFFFFFFFLL
      && v7 >= v6
      && v8 >= v6
      && (unint64_t)(v7 - v6) > 1)
    {
      double v9 = *(double *)(a1 + 56);
      double v5 = round(*(double *)(a1 + 48)+ (*(double *)(a1 + 64) - *(double *)(a1 + 48))/ (double)(unint64_t)(v7 - v6)* (double)(unint64_t)(v8 - v6));
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  double v5 = *(double *)(a1 + 64);
LABEL_14:
  double v9 = *(double *)(a1 + 56);
LABEL_15:
  uint64_t v10 = +[UIFont systemFontOfSize:v5 weight:v9];

  return v10;
}

id sub_1004E0250(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_1004E025C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void **)(a1 + 32);
  v10[0] = a2;
  id v7 = a2;
  uint64_t v8 = +[NSValue valueWithRange:](NSValue, "valueWithRange:", a3, a4);
  v10[1] = v8;
  double v9 = +[NSArray arrayWithObjects:v10 count:2];
  [v6 addObject:v9];
}

id sub_1004E032C(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = a2;
  if (v3)
  {
    id v5 = objc_alloc_init((Class)NSMutableArray);
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v22 = v3;
    id obj = v3;
    id v6 = [obj countByEnumeratingWithState:&v29 objects:v34 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = 0;
      uint64_t v9 = *(void *)v30;
      uint64_t v10 = &off_1013A1000;
      do
      {
        unsigned int v11 = 0;
        id v23 = v7;
        do
        {
          if (*(void *)v30 != v9) {
            objc_enumerationMutation(obj);
          }
          uint64_t v12 = v4[2](v4, *(void *)(*((void *)&v29 + 1) + 8 * (void)v11), v8);
          id v13 = v12;
          if (v12)
          {
            if ([v12 conformsToProtocol:v10[392]])
            {
              uint64_t v14 = v9;
              id v15 = v13;
              long long v25 = 0u;
              long long v26 = 0u;
              long long v27 = 0u;
              long long v28 = 0u;
              id v16 = [v15 countByEnumeratingWithState:&v25 objects:v33 count:16];
              if (v16)
              {
                id v17 = v16;
                uint64_t v18 = *(void *)v26;
                do
                {
                  for (uint64_t i = 0; i != v17; uint64_t i = (char *)i + 1)
                  {
                    if (*(void *)v26 != v18) {
                      objc_enumerationMutation(v15);
                    }
                    [v5 addObject:*(void *)(*((void *)&v25 + 1) + 8 * i) v22];
                  }
                  id v17 = [v15 countByEnumeratingWithState:&v25 objects:v33 count:16];
                }
                while (v17);
              }

              uint64_t v9 = v14;
              id v7 = v23;
              uint64_t v10 = &off_1013A1000;
            }
            else
            {
              [v5 addObject:v13];
            }
          }
          ++v8;

          unsigned int v11 = (char *)v11 + 1;
        }
        while (v11 != v7);
        id v7 = [obj countByEnumeratingWithState:&v29 objects:v34 count:16];
      }
      while (v7);
    }

    id v20 = [v5 copy];
    id v3 = v22;
  }
  else
  {
    id v20 = &__NSArray0__struct;
  }

  return v20;
}

uint64_t sub_1004E0580(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = a2;
  if (v3)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = v3;
    id v6 = (char *)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = 0;
      uint64_t v9 = *(void *)v14;
      while (2)
      {
        uint64_t v10 = 0;
        do
        {
          if (*(void *)v14 != v9) {
            objc_enumerationMutation(v5);
          }
          if (!v4[2](v4, *(void *)(*((void *)&v13 + 1) + 8 * (void)v10), &v10[v8]))
          {
            uint64_t v11 = 0;
            goto LABEL_12;
          }
          ++v10;
        }
        while (v7 != v10);
        id v7 = (char *)[v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
        v8 += (uint64_t)v10;
        if (v7) {
          continue;
        }
        break;
      }
    }
    uint64_t v11 = 1;
LABEL_12:
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

uint64_t sub_1004E06CC(uint64_t result, double a2, double a3, double a4, double a5)
{
  *(double *)uint64_t result = a2;
  *(double *)(result + _Block_object_dispose(&a9, 8) = a3;
  *(double *)(result + 16) = a4;
  *(double *)(result + 24) = a5;
  double v5 = sqrt(a3 / a2);
  double v6 = sqrt(a2 * a3);
  double v7 = a4 / (v6 + v6);
  *(double *)(result + 32) = v5;
  *(double *)(result + 40) = v7;
  double v8 = v5 * sqrt(1.0 - v7 * v7);
  *(double *)(result + 4_Block_object_dispose(&a9, 8) = v8;
  *(void *)(result + 56) = 0x3FF0000000000000;
  if (v7 >= 1.0) {
    double v9 = v5 - a5;
  }
  else {
    double v9 = -(a5 - v7 * v5) / v8;
  }
  *(double *)(result + 64) = v9;
  *(double *)(result + 72) = v8 + v5 * v9 * v7;
  v10.f64[0] = -(v9 * v8);
  *(double *)(result + 80) = v5 * v7 - v9 * v8;
  float64x2_t v11 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v5, 0);
  v11.f64[0] = v5 * v9;
  float64x2_t v12 = vmulq_n_f64(vmulq_n_f64(v11, v5), v7);
  __asm { FMOV            V7.2D, #2.0 }
  _Q7.f64[1] = v9 * -2.0;
  v10.f64[1] = -v8;
  *(float64x2_t *)(result + 8_Block_object_dispose(&a9, 8) = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(vmulq_n_f64(vmulq_n_f64(_Q7, v8), v5), v7), v12, v7), v10, v8);
  return result;
}

double sub_1004E0780(double *a1, double a2)
{
  double v4 = a1[5];
  if (v4 >= 1.0)
  {
    double v9 = a1[4];
    double v5 = v9 * a1[7] + a1[8] * v9 * a2 - a1[8];
    double v8 = exp(-(a2 * v9));
  }
  else
  {
    double v5 = exp(-(a1[4] * v4) * a2);
    double v6 = a1[9];
    __double2 v7 = __sincos_stret(a1[6] * a2);
    double v8 = a1[10] * v7.__cosval + v6 * v7.__sinval;
  }
  return -(v5 * v8);
}

void sub_1004E0E48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1004E283C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004E2854(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  double v4 = *(void **)(v3 + 40);
  if (a2)
  {
    if (v4) {
      return;
    }
    double v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    __double2 v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    double v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_1004E28F0(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (v5 || ![v8 count])
  {
    [*(id *)(a1 + 40) setFailedToReverseGeocode:1];
  }
  else
  {
    uint64_t v6 = [v8 firstObject];
    __double2 v7 = objc_opt_new();
    [*(id *)(a1 + 32) applyToPlaceInfo:v7];
    [*(id *)(a1 + 40) setPlaceInfo:v7];
    [*(id *)(a1 + 40) updateWithReverseGeocodedMapItem:v6];
  }
  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(*(void *)(a1 + 48) + 8), *(const void **)(a1 + 40));
}

void sub_1004E56BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004E56D4(void *a1)
{
  id v2 = *(void **)(a1[4] + 24);
  id v6 = +[NSNumber numberWithLongLong:a1[6]];
  uint64_t v3 = [v2 objectForKeyedSubscript:v6];
  uint64_t v4 = *(void *)(a1[5] + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1004E5760(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) contactID]);
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v3 = [v2 objectForKeyedSubscript:v6];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_1004E57F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    double v9 = [v5 objectAtIndexedSubscript:0];
    id v7 = v9;
    geo_isolate_sync();

LABEL_5:
    goto LABEL_6;
  }
  if ([v6 code] == (id)-8)
  {
    id v8 = *(void **)(*(void *)(a1 + 32) + 40);
    +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) contactID]);
    id v7 = (id)objc_claimAutoreleasedReturnValue();
    [v8 addObject:v7];
    goto LABEL_5;
  }
LABEL_6:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1004E5928(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  id v2 = *(void **)(*(void *)(a1 + 32) + 24);
  +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) contactID]);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 setObject:v1 forKeyedSubscript:v3];
}

int64_t sub_1004E59A4(id a1, RecentsItem *a2, RecentsItem *a3)
{
  uint64_t v4 = a3;
  [(RecentsItem *)a2 timestamp];
  double v6 = v5;
  [(RecentsItem *)v4 timestamp];
  double v8 = v7;

  double v9 = vabdd_f64(v8, v6);
  int64_t v10 = -1;
  if (v6 < v8) {
    int64_t v10 = 1;
  }
  if (v9 >= 2.22044605e-16) {
    return v10;
  }
  else {
    return 0;
  }
}

id sub_1004E5A10(id a1, HistoryEntryRecentsItem *a2, unint64_t a3)
{
  id v3 = [(HistoryEntryRecentsItem *)a2 historyEntry];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  return v5;
}

void sub_1004E5BE8(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 24);
  +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) contactID]);
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  [v1 setObject:0 forKeyedSubscript:v2];
}

void sub_1004E5C58(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) systemRecents];
  id v4 = +[NSMutableArray arrayWithArray:v2];

  [v4 removeObject:*(void *)(a1 + 40)];
  id v3 = [v4 copy];
  [*(id *)(a1 + 32) setSystemRecents:v3];

  [*(id *)(a1 + 32) _combineRecents];
}

void sub_1004E6278(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) historyEntry];
  id v4 = [v3 storageIdentifier];
  id v8 = [v2 _recentPlaceDisplayWithSupersededStorageIdentifier:v4];

  id v5 = v8;
  if (v8)
  {
    double v6 = *(void **)(a1 + 48);
    double v7 = [v8 historyEntry];
    [v6 addObject:v7];

    id v5 = v8;
  }
}

void sub_1004E6320(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 supersededSearchStorageIdentifier];

  id v4 = v10;
  if (v3)
  {
    id v5 = *(void **)(a1 + 32);
    double v6 = [v10 supersededSearchStorageIdentifier];
    double v7 = [v5 _recentWithIdentifier:v6];

    if (v7)
    {
      id v8 = *(void **)(a1 + 40);
      double v9 = [v7 historyEntry];
      [v8 addObject:v9];
    }
    id v4 = v10;
  }
}

uint64_t sub_1004E65B8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1004E6700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004E6718(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v10 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    double v7 = [v10 historyEntry];
    id v8 = [v7 storageIdentifier];
    unsigned int v9 = [v8 isEqual:*(void *)(a1 + 32)];

    if (v9)
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
      *a4 = 1;
    }
  }
}

void sub_1004E6908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004E6920(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v6 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    double v7 = [v6 historyEntry];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1004E6A1C;
    v10[3] = &unk_1012ED108;
    id v8 = *(id *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    id v11 = v8;
    uint64_t v13 = v9;
    id v12 = v6;
    uint64_t v14 = a4;
    [v7 ifSearch:0 ifRoute:0 ifPlaceDisplay:v10 ifTransitLineItem:0];
  }
}

void sub_1004E6A1C(uint64_t a1, void *a2)
{
  id v3 = [a2 supersededSearchStorageIdentifier];
  unsigned int v4 = [v3 isEqual:*(void *)(a1 + 32)];

  if (v4)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(id *)(a1 + 40));
    **(unsigned char **)(a1 + 56) = 1;
  }
}

HistoryEntryRecentsItem *sub_1004E6A88(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    unsigned int v4 = v3;
  }
  else {
    unsigned int v4 = 0;
  }
  id v5 = v4;
  id v6 = [v5 historyEntry];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    double v7 = v6;
  }
  else {
    double v7 = 0;
  }
  id v8 = v7;

  if (v8)
  {
    uint64_t v9 = [*(id *)(*(void *)(a1 + 32) + 56) resolvedGEOPlaceCollectionForMapsSyncHistoryCuratedCollection:v8];
    id v10 = v9;
    if (v9 && ([v9 isBlocked] & 1) == 0)
    {
      id v12 = [[CuratedCollectionHistoryEntry alloc] initWithMapsSyncHistoryCuratedCollection:v8 placeCollection:v10];
      id v11 = [[HistoryEntryRecentsItem alloc] initWithHistoryEntry:v12];
    }
    else
    {
      id v11 = 0;
    }
  }
  else
  {
    id v11 = (HistoryEntryRecentsItem *)v3;
  }

  return v11;
}

id sub_1004E6BD0(id a1, id a2, unint64_t a3)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    unsigned int v4 = v3;
  }
  else {
    unsigned int v4 = 0;
  }
  id v5 = v4;
  id v6 = [v5 historyEntry];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    double v7 = v6;
  }
  else {
    double v7 = 0;
  }
  id v8 = v7;

  if (v8)
  {
    uint64_t v9 = [HistoryEntryRecentsItem alloc];
    id v10 = [v8 curatedCollection];
    id v11 = [(HistoryEntryRecentsItem *)v9 initWithHistoryEntry:v10];
  }
  else
  {
    id v11 = (HistoryEntryRecentsItem *)v3;
  }

  return v11;
}

void sub_1004E6EE4(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_10160EEF8;
  qword_10160EEF8 = (uint64_t)v1;

  [(id)qword_10160EEF8 setTimeStyle:0];
  [(id)qword_10160EEF8 setDateStyle:1];
  [(id)qword_10160EEF8 setDoesRelativeDateFormatting:1];
  id v3 = (void *)qword_10160EEF8;
  unsigned int v4 = +[NSLocale autoupdatingCurrentLocale];
  [v3 setLocale:v4];

  [(id)qword_10160EEF8 setFormattingContext:1];
  id v5 = objc_alloc_init((Class)NSDateFormatter);
  id v6 = (void *)qword_10160EF00;
  qword_10160EF00 = (uint64_t)v5;

  [(id)qword_10160EF00 setTimeStyle:1];
  [(id)qword_10160EF00 setDateStyle:0];
  double v7 = (void *)qword_10160EF00;
  id v8 = +[NSLocale autoupdatingCurrentLocale];
  [v7 setLocale:v8];

  uint64_t v9 = (void *)qword_10160EF00;

  [v9 setFormattingContext:1];
}

void sub_1004E866C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1004E8694(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_1004E8ACC(id a1)
{
  id v1 = objc_alloc_init((Class)NSRelativeDateTimeFormatter);
  id v2 = (void *)qword_10160EF10;
  qword_10160EF10 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_10160EF10 setLocale:v3];

  unsigned int v4 = (void *)qword_10160EF10;

  [v4 setDateTimeStyle:1];
}

void sub_1004E8D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004E8DB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v10 = a2;
  id v7 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v9 = WeakRetained;
  if (WeakRetained)
  {
    if (v10 || !v7) {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
    else {
      [WeakRetained _loadCompanyLogoForSize:v7 authorError:*(void *)(a1 + 32) completion:*(double *)(a1 + 48), *(double *)(a1 + 56)];
    }
  }
}

void sub_1004E8FD4(uint64_t a1, void *a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1004E9098;
  block[3] = &unk_1012EAFE8;
  id v5 = a2;
  id v7 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 32);
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1004E9098(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[6];
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16))(v3, v2, 0);
  }
  else {
    return (*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(v3, 0, a1[5]);
  }
}

void sub_1004E9934(id a1)
{
  id v4 = +[UGCReviewedPlaceMapsSync sharedInstance];
  id v1 = objc_alloc_init(UGCReviewedPlaceCache);
  uint64_t v2 = [[UGCReviewedPlaceManager alloc] initWithSyncedCache:v4 localCache:v1];
  uint64_t v3 = (void *)qword_10160EF18;
  qword_10160EF18 = (uint64_t)v2;
}

void sub_1004E9B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004E9BAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v5 = WeakRetained;
    if (WeakRetained)
    {
      id v7 = (void *)*((void *)WeakRetained + 1);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      id v9[2] = sub_1004E9D04;
      void v9[3] = &unk_1012E76C0;
      uint64_t v8 = *(void *)(a1 + 32);
      id v10 = *(id *)(a1 + 40);
      [v7 addOrEditReviewedPlace:v8 completion:v9];
    }
    goto LABEL_6;
  }
  id v4 = *(void **)(a1 + 40);
  if (v4)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004E9CF0;
    block[3] = &unk_1012E5F78;
    id v13 = v4;
    id v12 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    id v5 = v13;
LABEL_6:
  }
}

uint64_t sub_1004E9CF0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1004E9D04(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004E9D8C;
    block[3] = &unk_1012E6EA8;
    id v3 = v1;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_1004E9D8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1004E9EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1004E9ED4(id a1, GEOMapItemIdentifier *a2, unint64_t a3)
{
  id v3 = [(GEOMapItemIdentifier *)a2 muid];

  return +[NSNumber numberWithUnsignedLongLong:v3];
}

void sub_1004E9F18(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v7 = WeakRetained;
    if (WeakRetained)
    {
      uint64_t v8 = (void *)*((void *)WeakRetained + 1);
      id v9 = [v5 originallySavedMUID];
      id v10 = [v5 muid];
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      void v12[2] = sub_1004EA0A8;
      v12[3] = &unk_1012ED2C8;
      id v13 = v5;
      id v14 = *(id *)(a1 + 32);
      char v15 = a2;
      [v8 fetchWithMUID:v9 andReplaceIfNeededWithNewMUID:v10 completion:v12];
    }
    goto LABEL_6;
  }
  id v11 = *(void **)(a1 + 32);
  if (v11)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004EA08C;
    block[3] = &unk_1012E9AD0;
    id v17 = v11;
    char v18 = a2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    id v7 = v17;
LABEL_6:
  }
}

uint64_t sub_1004EA08C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), 0);
}

void sub_1004EA0A8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2)
  {
    [*(id *)(a1 + 32) setNumberOfPhotosAdded:[v5 numberOfPhotosAdded]];
    [*(id *)(a1 + 32) setRecommendState:[v6 recommendState]];
  }
  id v7 = *(void **)(a1 + 40);
  if (v7)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004EA19C;
    block[3] = &unk_1012ED2A0;
    id v10 = v7;
    char v11 = *(unsigned char *)(a1 + 48);
    id v9 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_1004EA19C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_1004EA2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004EA2BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v5 = WeakRetained;
    if (WeakRetained)
    {
      id v7 = (void *)*((void *)WeakRetained + 1);
      uint64_t v8 = *(void *)(a1 + 48);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      id v9[2] = sub_1004EA418;
      void v9[3] = &unk_1012E76C0;
      id v10 = *(id *)(a1 + 32);
      [v7 removeReviewedPlaceWithMUID:v8 completion:v9];
    }
    goto LABEL_6;
  }
  id v4 = *(void **)(a1 + 32);
  if (v4)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004EA404;
    block[3] = &unk_1012E5F78;
    id v13 = v4;
    id v12 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    id v5 = v13;
LABEL_6:
  }
}

uint64_t sub_1004EA404(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1004EA418(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1004EA4A0;
    block[3] = &unk_1012E6EA8;
    id v3 = v1;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_1004EA4A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1004EA55C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  if (v4)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    uint64_t v5[2] = sub_1004EA60C;
    v5[3] = &unk_1012E5F78;
    id v7 = v4;
    id v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
  }
}

uint64_t sub_1004EA60C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1004EA734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004EA74C(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v24 != v7) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        if ([v9 hasUserReviewed])
        {
          unsigned int v10 = [v9 uploadedPhotosCount];
          char v11 = -[UGCReviewedPlace initWithMUID:]([UGCReviewedPlace alloc], "initWithMUID:", [v9 muid]);
          -[UGCReviewedPlace setVersion:](v11, "setVersion:", (int)[v9 version]);
          if ((int)[v9 version] >= 1)
          {
            id v12 = [v9 modificationTime];
            [(UGCReviewedPlace *)v11 setDateOfLastEdit:v12];

            id v13 = [v9 rating];
            -[UGCReviewedPlace setRecommendState:](v11, "setRecommendState:", [v13 integerValue]);

            -[UGCReviewedPlace setNumberOfPhotosAdded:](v11, "setNumberOfPhotosAdded:", (int)[v9 uploadedPhotosCount]);
            [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v11];
          }
          uint64_t v6 = v10 + v6;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v14 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
  char v15 = +[GEOAPSharedStateData sharedData];
  [v15 setMapFeatureSubmittedRatingsCount:v14];

  long long v16 = +[GEOAPSharedStateData sharedData];
  [v16 setMapFeatureSubmittedPhotosCount:v6];

  id v17 = *(void **)(a1 + 32);
  if (v17)
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_1004EA9E8;
    void v20[3] = &unk_1012E79E8;
    id v18 = v17;
    uint64_t v19 = *(void *)(a1 + 40);
    id v21 = v18;
    uint64_t v22 = v19;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v20);
  }
}

void sub_1004EA9E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1004EAB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1004EAB74(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        if ([v8 hasUserReviewed])
        {
          id v9 = -[UGCReviewedPlace initWithMUID:]([UGCReviewedPlace alloc], "initWithMUID:", [v8 muid]);
          -[UGCReviewedPlace setVersion:](v9, "setVersion:", (int)[v8 version]);
          if ((int)[v8 version] >= 1)
          {
            unsigned int v10 = [v8 modificationTime];
            [(UGCReviewedPlace *)v9 setDateOfLastEdit:v10];

            char v11 = [v8 rating];
            -[UGCReviewedPlace setRecommendState:](v9, "setRecommendState:", [v11 integerValue]);

            -[UGCReviewedPlace setNumberOfPhotosAdded:](v9, "setNumberOfPhotosAdded:", (int)[v8 uploadedPhotosCount]);
            if ([(UGCReviewedPlace *)v9 numberOfPhotosAdded]) {
              [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v9];
            }
          }
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v5);
  }
  id v12 = *(void **)(a1 + 32);
  if (v12)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    uint8_t v15[2] = sub_1004EADB0;
    _OWORD v15[3] = &unk_1012E79E8;
    id v13 = v12;
    uint64_t v14 = *(void *)(a1 + 40);
    id v16 = v13;
    uint64_t v17 = v14;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v15);
  }
}

void sub_1004EADB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) copy];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

BOOL sub_1004EAEDC(id a1, MapsSuggestionsEntry *a2, NSDictionary *a3)
{
  return [(MapsSuggestionsEntry *)a2 isShortcutForSetup] ^ 1;
}

void sub_1004EB250(uint64_t a1)
{
  id v2 = dispatch_group_create();
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id obj = *(id *)(a1 + 32);
  id v3 = (char *)[obj countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(obj);
        }
        dispatch_group_enter(v2);
        uint64_t v7 = v2;
        if ((GEOMapItemFromMapsSuggestionsEntry() & 1) == 0) {
          dispatch_group_leave(v7);
        }
      }
      id v4 = (char *)[obj countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  dispatch_time_t v8 = dispatch_time(0, 5000000000);
  dispatch_group_wait(v2, v8);
}

void sub_1004EB40C(uint64_t a1)
{
}

id sub_1004EBCF0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateTitlesForEntry:*(void *)(a1 + 40)];
}

id sub_1004EF4D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) resignFirstResponder];
}

void sub_1004EF8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004EF8E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1004EF9C0;
  block[3] = &unk_1012E9258;
  id v9 = a3;
  id v6 = v9;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v10 = v5;
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v11);
}

void sub_1004EF9C0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    NSLog(@"Can't retrieve CDS diagnostics : %@", *(void *)(a1 + 32));
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v3 = WeakRetained;
    if (WeakRetained)
    {
      long long v25 = WeakRetained;
      long long v28 = +[NSMutableArray array];
      long long v38 = 0u;
      long long v39 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      id obj = *(id *)(a1 + 40);
      id v29 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
      if (v29)
      {
        uint64_t v27 = *(void *)v39;
        do
        {
          uint64_t v4 = 0;
          do
          {
            if (*(void *)v39 != v27) {
              objc_enumerationMutation(obj);
            }
            id v5 = *(void **)(*((void *)&v38 + 1) + 8 * v4);
            long long v34 = 0u;
            long long v35 = 0u;
            long long v36 = 0u;
            long long v37 = 0u;
            long long v30 = v5;
            id v32 = [v5 policies];
            id v6 = [v32 countByEnumeratingWithState:&v34 objects:v42 count:16];
            uint64_t v31 = v4;
            if (v6)
            {
              id v7 = v6;
              dispatch_time_t v8 = 0;
              uint64_t v9 = 0;
              uint64_t v10 = 0;
              uint64_t v11 = 0;
              long long v12 = 0;
              uint64_t v33 = *(void *)v35;
              do
              {
                for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v35 != v33) {
                    objc_enumerationMutation(v32);
                  }
                  uint64_t v14 = *(void **)(*((void *)&v34 + 1) + 8 * i);
                  uint64_t v15 = [v14 startTimestamp];
                  id v16 = (void *)v15;
                  if (v12)
                  {
                    uint64_t v17 = [v12 earlierDate:v15];

                    long long v12 = (void *)v17;
                  }
                  else
                  {
                    long long v12 = (void *)v15;
                  }
                  uint64_t v18 = [v14 endTimestamp];
                  long long v19 = (void *)v18;
                  if (v8)
                  {
                    uint64_t v20 = [v8 laterDate:v18];

                    dispatch_time_t v8 = (void *)v20;
                  }
                  else
                  {
                    dispatch_time_t v8 = (void *)v18;
                  }
                  v9 += (uint64_t)[v14 tilesConsidered];
                  v10 += (uint64_t)[v14 successCount];
                  v11 += (uint64_t)[v14 failureCount];
                }
                id v7 = [v32 countByEnumeratingWithState:&v34 objects:v42 count:16];
              }
              while (v7);
            }
            else
            {
              dispatch_time_t v8 = 0;
              uint64_t v9 = 0;
              uint64_t v10 = 0;
              uint64_t v11 = 0;
              long long v12 = 0;
            }

            long long v21 = objc_alloc_init(_CellDataSaverRun);
            [(_CellDataSaverRun *)v21 setStartDate:v12];
            [(_CellDataSaverRun *)v21 setEndDate:v8];
            [(_CellDataSaverRun *)v21 setTotalTiles:v9];
            [(_CellDataSaverRun *)v21 setSuccessCount:v10];
            [(_CellDataSaverRun *)v21 setFailureCount:v11];
            uint64_t v22 = [v30 policies];
            [(_CellDataSaverRun *)v21 setPolicyStatistics:v22];

            [v28 addObject:v21];
            uint64_t v4 = v31 + 1;
          }
          while ((id)(v31 + 1) != v29);
          id v29 = [obj countByEnumeratingWithState:&v38 objects:v43 count:16];
        }
        while (v29);
      }

      [v28 sortUsingComparator:&stru_1012ED478];
      id v3 = v25;
      long long v23 = (void *)v25[1];
      v25[1] = v28;

      long long v24 = [v25 tableView];
      [v24 reloadData];
    }
  }
}

int64_t sub_1004EFD40(id a1, _CellDataSaverRun *a2, _CellDataSaverRun *a3)
{
  uint64_t v4 = a2;
  id v5 = [(_CellDataSaverRun *)a3 startDate];
  id v6 = [(_CellDataSaverRun *)v4 startDate];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

id sub_1004F0174(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  id v7 = objc_alloc_init((Class)UIStackView);
  [v7 setAxis:0];
  [v7 setAlignment:0];
  dispatch_time_t v8 = +[UIFont monospacedDigitSystemFontOfSize:12.0 weight:UIFontWeightBold];
  id v9 = objc_alloc_init((Class)UILabel);
  uint64_t v10 = +[NSString stringWithFormat:@"%llu", a1];
  [v9 setText:v10];

  uint64_t v11 = +[UIColor colorWithWhite:0.9 alpha:1.0];
  [v9 setBackgroundColor:v11];

  [v9 setFont:v8];
  long long v12 = sub_1004F0B90(v9, 1, 0);
  [v7 addArrangedSubview:v12];

  id v13 = objc_alloc_init((Class)UILabel);
  uint64_t v14 = +[NSString stringWithFormat:@"%llu", a2];
  [v13 setText:v14];

  uint64_t v15 = +[UIColor systemGreenColor];
  [v13 setBackgroundColor:v15];

  [v13 setFont:v8];
  [v13 sizeToFit];
  id v16 = sub_1004F0B90(v13, 0, 0);
  [v7 addArrangedSubview:v16];

  id v17 = objc_alloc_init((Class)UILabel);
  uint64_t v18 = +[NSString stringWithFormat:@"%llu", a3];
  [v17 setText:v18];

  long long v19 = +[UIColor systemRedColor];
  [v17 setBackgroundColor:v19];

  [v17 setFont:v8];
  [v17 sizeToFit];
  uint64_t v20 = sub_1004F0B90(v17, 0, 1);
  [v7 addArrangedSubview:v20];

  if (a4)
  {
    id v21 = objc_alloc((Class)UIImageView);
    uint64_t v22 = +[UIImage kitImageNamed:@"UITableNext"];
    long long v23 = [v22 imageWithRenderingMode:2];
    id v24 = [v21 initWithImage:v23];

    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    long long v25 = +[UIColor tertiaryLabelColor];
    [v24 setTintColor:v25];

    id v26 = objc_alloc_init((Class)UIView);
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v26 addSubview:v24];
    uint64_t v27 = [v24 centerYAnchor];
    long long v28 = [v26 centerYAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];
    [v29 setActive:1];

    long long v30 = [v24 leadingAnchor];
    uint64_t v31 = [v26 leadingAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31 constant:4.0];
    [v32 setActive:1];

    uint64_t v33 = [v24 trailingAnchor];
    long long v34 = [v26 trailingAnchor];
    long long v35 = [v33 constraintEqualToAnchor:v34];
    [v35 setActive:1];

    [v7 addArrangedSubview:v26];
  }
  [v7 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
  [v7 setBounds:0.0, 0.0, v36, v37];

  return v7;
}

id sub_1004F0B90(void *a1, int a2, int a3)
{
  id v5 = a1;
  [v5 sizeToFit];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v6) = 1148829696;
  [v5 setContentCompressionResistancePriority:0 forAxis:v6];
  id v7 = objc_alloc_init((Class)UIView);
  dispatch_time_t v8 = [v5 backgroundColor];
  [v7 setBackgroundColor:v8];

  id v9 = +[UIColor clearColor];
  [v5 setBackgroundColor:v9];

  [v7 addSubview:v5];
  uint64_t v10 = [v5 topAnchor];
  uint64_t v11 = [v7 topAnchor];
  long long v12 = [v10 constraintEqualToAnchor:v11 constant:8.0];
  [v12 setActive:1];

  id v13 = [v5 bottomAnchor];
  uint64_t v14 = [v7 bottomAnchor];
  uint64_t v15 = [v13 constraintEqualToAnchor:v14 constant:-8.0];
  [v15 setActive:1];

  id v16 = [v5 leftAnchor];
  id v17 = [v7 leftAnchor];
  double v18 = 12.0;
  if (!a2) {
    double v18 = 8.0;
  }
  long long v19 = [v16 constraintEqualToAnchor:v17 constant:v18];
  [v19 setActive:1];

  uint64_t v20 = [v5 rightAnchor];

  id v21 = [v7 rightAnchor];
  double v22 = -12.0;
  if (!a3) {
    double v22 = -8.0;
  }
  long long v23 = [v20 constraintEqualToAnchor:v21 constant:v22];
  [v23 setActive:1];

  LODWORD(v24) = 1144750080;
  [v7 setContentCompressionResistancePriority:1 forAxis:v24];
  LODWORD(v25) = 1148829696;
  [v7 setContentCompressionResistancePriority:0 forAxis:v25];
  if ((a2 & 1) != 0 || a3)
  {
    id v26 = [v7 layer];
    [v26 setCornerRadius:16.0];

    uint64_t v27 = 5;
    if (!a2) {
      uint64_t v27 = 0;
    }
    if (a3) {
      uint64_t v28 = v27 | 0xA;
    }
    else {
      uint64_t v28 = v27;
    }
    id v29 = [v7 layer];
    [v29 setMaskedCorners:v28];
  }

  return v7;
}

void sub_1004F1318(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateProgressTimerForAlert:*(void *)(a1 + 40)];
  id v9 = [*(id *)(a1 + 32) presentedAlert];
  id v2 = [v9 originalRoute];
  if ([v2 isEVRoute])
  {
    id v3 = [*(id *)(a1 + 32) presentedAlert];
    uint64_t v4 = [v3 originalRouteNavigability];
    unsigned __int8 v5 = [v4 isEvFeasible];

    if (v5) {
      return;
    }
    int v6 = *(unsigned __int8 *)(a1 + 48);
    id v7 = +[MKMapService sharedService];
    id v9 = v7;
    if (v6) {
      uint64_t v8 = 6095;
    }
    else {
      uint64_t v8 = 75;
    }
    [v7 captureUserAction:v8 onTarget:615 eventValue:0];
  }
  else
  {
  }
}

void sub_1004F21D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1004F2348(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) alertViewController];
  [v2 setRerouteTimerProgress:1.0];

  id v4 = [*(id *)(a1 + 32) alertViewController];
  id v3 = [v4 view];
  [v3 layoutIfNeeded];
}

void sub_1004F23C4(uint64_t a1, char a2)
{
  double v3 = 1.0;
  if ((a2 & 1) == 0)
  {
    double v3 = 0.0;
    if ([*(id *)(a1 + 32) _hasValidRerouteTimer])
    {
      [*(id *)(a1 + 32) _timeoutTimerProgress];
      double v3 = v4;
    }
  }
  id v5 = [*(id *)(a1 + 32) alertViewController];
  [v5 setRerouteTimerProgress:v3];
}

void sub_1004F2B64(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavTrafficIncidentCoordinator");
  id v2 = (void *)qword_10160EF28;
  qword_10160EF28 = (uint64_t)v1;
}

void sub_1004F2BFC(id a1)
{
  os_log_t v1 = objc_alloc_init(UserProfileLinkReportsProvider);
  id v2 = (void *)qword_10160EF38;
  qword_10160EF38 = (uint64_t)v1;
}

id sub_1004F3334(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dealloc];
}

void sub_1004FE0A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    id v9 = +[NSAttributedString attributedStringWithAttachment:*(void *)(*(void *)(a1 + 32) + 80)];
    [*(id *)(a1 + 40) replaceCharactersInRange:a3 withAttributedString:a4];
  }
}

void sub_1004FE5CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = +[UIColor systemFillColor];
  [v4 setFill];

  id v5 = (CGContext *)[v3 CGContext];
  int v6 = [v3 format];
  [v6 bounds];
  CGContextFillEllipseInRect(v5, v10);

  id v7 = *(void **)(a1 + 32);
  id v8 = [v3 format];

  [v8 bounds];
  [v7 drawInRect:];
}

void sub_1004FF474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1004FF4B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  int v6 = WeakRetained;
  if (WeakRetained && *(_DWORD *)(a1 + 40) == *((_DWORD *)WeakRetained + 24))
  {
    [WeakRetained[6] setClipsToBounds:a3];
    [v6 _updateImage:v7];
  }
}

void sub_10050020C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100500228(uint64_t a1, char a2)
{
  if (*(unsigned char *)(a1 + 64) || (a2 & 1) == 0)
  {
    id v5 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 32) message:*(void *)(a1 + 40) preferredStyle:1];
    int v6 = +[NSBundle mainBundle];
    id v7 = [v6 localizedStringForKey:@"OK [Report a Problem push]" value:@"localized string not found" table:0];
    id v8 = +[UIAlertAction actionWithTitle:v7 style:1 handler:0];
    [v5 addAction:v8];

    if (*(unsigned char *)(a1 + 65))
    {
      id v9 = +[NSBundle mainBundle];
      CGRect v10 = [v9 localizedStringForKey:@"Show [Report a Problem push]" value:@"localized string not found" table:0];
      long long v12 = _NSConcreteStackBlock;
      uint64_t v13 = 3221225472;
      uint64_t v14 = sub_100500424;
      uint64_t v15 = &unk_1012E9640;
      id v16 = *(id *)(a1 + 48);
      id v17 = *(id *)(a1 + 56);
      uint64_t v11 = +[UIAlertAction actionWithTitle:v10 style:0 handler:&v12];
      [v5 addAction:v11, v12, v13, v14, v15];
    }
    [*(id *)(a1 + 56) presentViewController:v5 animated:1 completion:0];
  }
  else
  {
    id v3 = *(void **)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 56);
    _[v3 displayAdditionalUIOnViewController:v4];
  }
}

id sub_100500424(uint64_t a1)
{
  return _[*(id *)(a1 + 32) displayAdditionalUIOnViewController:*(void *)(a1 + 40)];
}

void sub_100500430(uint64_t a1, void *a2)
{
  id v9 = [a2 firstObject];
  if (v9)
  {
    id v3 = [*(id *)(a1 + 32) coordinator];
    [v3 viewController:*(void *)(a1 + 40) presentReportDetail:v9 fromEntryPoint:713];

    uint64_t v4 = [v9 rapResponse];
    id v5 = +[GEORPRapResponse RapStateIconAsString:](GEORPRapResponse, "RapStateIconAsString:", [v4 rapStateIcon]);

    int v6 = [v9 reportID];
    id v7 = [v9 rapResponse];
    id v8 = [v7 responseId];
    +[RAPNotificationLogEvent reportUserTappedNotificationWithRapId:v6 responseId:v8 notificationType:v5 completion:&stru_1012ED5D8];
  }
}

void sub_100500548(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (qword_10160EF50 != -1) {
      dispatch_once(&qword_10160EF50, &stru_1012ED648);
    }
    id v3 = qword_10160EF48;
    if (os_log_type_enabled((os_log_t)qword_10160EF48, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Fail to send user tapped RAP notification logEvent with error: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_10050061C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    if (v6) {
      [WeakRetained _showRAPForMapItem:v6 inContext:v5];
    }
    else {
      [WeakRetained _showErrorMessageinContext:v5];
    }
  }
}

id sub_10050093C(uint64_t a1, void *a2)
{
  return [a2 setReportedPlace:*(void *)(a1 + 32)];
}

void sub_100500A84(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PresentRAPActionHandler");
  id v2 = (void *)qword_10160EF48;
  qword_10160EF48 = (uint64_t)v1;
}

void sub_100501548(uint64_t a1)
{
  [*(id *)(a1 + 40) opacity];
  double v3 = v2;
  int v4 = [*(id *)(a1 + 32) view];
  [v4 setAlpha:v3];

  id v5 = [*(id *)(a1 + 32) view];
  [v5 layoutIfNeeded];
}

void sub_100501B9C(id a1, id a2, NSError *a3)
{
  double v3 = a3;
  if (v3)
  {
    int v4 = sub_1000B8184();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Sending Map Coordinate to WebBundle Error: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_10050209C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_1005020B8(uint64_t a1, uint64_t a2)
{
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v3 = objc_loadWeakRetained(&to);

  if (!v3)
  {
    int v4 = 0;
    goto LABEL_9;
  }
  int v4 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
  [v4 setBackgroundColorMode:0];
  id v5 = objc_loadWeakRetained(&to);
  if ([v5 isSelected])
  {
  }
  else
  {
    id v6 = objc_loadWeakRetained(&to);
    unsigned int v7 = [v6 isHighlighted];

    if (!v7)
    {
      id v8 = +[UIColor colorWithWhite:0.0 alpha:0.0500000007];
      [v4 setBackgroundColor:v8];
      goto LABEL_8;
    }
  }
  id v8 = objc_loadWeakRetained(&to);
  id v9 = [v8 theme];
  CGRect v10 = [v9 keyColor];
  uint64_t v11 = [v10 colorWithAlphaComponent:0.0700000003];
  [v4 setBackgroundColor:v11];

LABEL_8:
LABEL_9:
  objc_destroyWeak(&to);

  return v4;
}

void sub_100502214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_10050234C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_100502374(uint64_t a1, uint64_t a2)
{
  objc_copyWeak(&to, (id *)(a1 + 32));
  id v3 = objc_loadWeakRetained(&to);

  if (!v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }
  int v4 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
  id v5 = objc_loadWeakRetained(&to);
  unsigned int v6 = [v5 isSelected];

  id v7 = objc_loadWeakRetained(&to);
  if ([v7 isHighlighted])
  {
    int v8 = 0;
  }
  else
  {
    id v9 = objc_loadWeakRetained(&to);
    unsigned int v10 = [v9 isFocused];

    int v8 = v10 ^ 1;
  }

  id v11 = objc_loadWeakRetained(&to);
  long long v12 = [v11 traitCollection];
  id v13 = [v12 activeAppearance];

  if (v6 && v13 == (id)1)
  {
    uint64_t v14 = 1;
  }
  else
  {
    if (v13 == (id)1) {
      int v15 = v8;
    }
    else {
      int v15 = 1;
    }
    if (v15 != 1)
    {
      uint64_t v14 = 7;
      goto LABEL_17;
    }
    if (v13 == (id)1)
    {
      id v17 = objc_loadWeakRetained(&to);
      unsigned int v18 = [v17 maps_suppressBackgroundColors];

      if (v18) {
        uint64_t v14 = 3;
      }
      else {
        uint64_t v14 = 8;
      }
      if ((v18 ^ 1 | v6)) {
        goto LABEL_17;
      }
    }
    else if (v6)
    {
      uint64_t v14 = 3;
      goto LABEL_17;
    }
    id v19 = objc_loadWeakRetained(&to);
    unsigned int v20 = [v19 maps_suppressBackgroundColors];

    if (v20)
    {
      [v4 setBackgroundColorMode:0];
      id v21 = +[UIColor clearColor];
      [v4 setBackgroundColor:v21];

      goto LABEL_18;
    }
    uint64_t v14 = 9;
  }
LABEL_17:
  [v4 setBackgroundColorMode:v14];
LABEL_18:
  [v4 setCornerRadius:5.0];
LABEL_19:
  objc_destroyWeak(&to);

  return v4;
}

void sub_100502560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

id sub_100502580(uint64_t a1, unint64_t a2)
{
  int v4 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
  uint64_t v5 = a2 & 9;
  unsigned int v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained(v6);
  unsigned int v8 = [WeakRetained conformsToProtocol:&OBJC_PROTOCOL___TransitDirectionsCell];

  if (v8)
  {
    unint64_t v9 = a2 & 4;
    id v10 = objc_loadWeakRetained(v6);
    id v11 = [v10 navigationState];
    unint64_t v12 = v9 >> 2;
    if (v11 == (id)4) {
      LODWORD(v12) = 1;
    }
    LODWORD(v13) = v12 != 0;

    if (v5) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v13 = (a2 >> 2) & 1;
    if ((a2 & 9) != 0) {
      goto LABEL_9;
    }
  }
  if (!v13)
  {
    [v4 setBackgroundColorMode:0];
    uint64_t v14 = +[UIColor clearColor];
    [v4 setBackgroundColor:v14];

    goto LABEL_10;
  }
LABEL_9:
  [v4 setBackgroundColorMode:9];
LABEL_10:

  return v4;
}

id sub_1005032E0()
{
  if (qword_10160EF68 != -1) {
    dispatch_once(&qword_10160EF68, &stru_1012ED798);
  }
  uint64_t v0 = (void *)qword_10160EF60;

  return v0;
}

void sub_100504C90(uint64_t a1)
{
  uint64_t v2 = sub_1005032E0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Collecting UIViewController descriptions attachments", v6, 2u);
  }

  id v3 = +[UIViewController _allDescriptions];
  int v4 = *(void **)(a1 + 32);
  uint64_t v5 = +[MapsRadarTextAttachment attachmentWithFileName:@"UIViewController._allDescriptions.txt" text:v3];
  [v4 addObject:v5];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100504D58(uint64_t a1)
{
  uint64_t v2 = sub_1005032E0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Collecting tile state attachments", buf, 2u);
  }

  id v27 = 0;
  id v28 = 0;
  id v26 = 0;
  unsigned int v3 = +[MapsRadarAttachmentProviderTask getCurrentTileStateSnapshotWithDirectoryURL:0 debugTreeURLs:&v28 mapsActivityDataPath:&v27 error:&v26];
  id v4 = v28;
  id v5 = v27;
  id v6 = v26;
  id v7 = v6;
  if (v3)
  {
    id v21 = v6;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id v8 = [v4 countByEnumeratingWithState:&v22 objects:v37 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v23;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v23 != v10) {
            objc_enumerationMutation(v4);
          }
          unint64_t v12 = *(void **)(*((void *)&v22 + 1) + 8 * i);
          uint64_t v13 = [v12 lastPathComponent];
          uint64_t v14 = +[MapsRadarFileAttachment attachmentWithFileName:v13 fileURL:v12];

          [v14 setDeleteOnAttach:1];
          [*(id *)(a1 + 32) addObject:v14];
        }
        id v9 = [v4 countByEnumeratingWithState:&v22 objects:v37 count:16];
      }
      while (v9);
    }
    id v7 = v21;
    if (v5)
    {
      int v15 = [v5 lastPathComponent];
      id v16 = +[NSURL fileURLWithPath:v5];
      id v17 = +[MapsRadarFileAttachment attachmentWithFileName:v15 fileURL:v16];

      [v17 setDeleteOnAttach:1];
      [*(id *)(a1 + 32) addObject:v17];
LABEL_18:
    }
  }
  else
  {
    unsigned int v18 = sub_1005762E4();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      id v19 = +[NSString stringWithFormat:@"%@", v7];
      *(_DWORD *)long long buf = 136315906;
      long long v30 = "-[MapsRadarAttachmentProviderTask generateAttachmentsForRadarDraft:withCompletion:]_block_invoke";
      __int16 v31 = 2080;
      id v32 = "MapsRadarAttachmentProviderTask.m";
      __int16 v33 = 1024;
      int v34 = 257;
      __int16 v35 = 2112;
      double v36 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly! '%@'", buf, 0x26u);
    }
    if (sub_100BB36BC())
    {
      id v17 = sub_1005762E4();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        unsigned int v20 = +[NSThread callStackSymbols];
        *(_DWORD *)long long buf = 138412290;
        long long v30 = v20;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
      goto LABEL_18;
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1005050D0(uint64_t a1)
{
  uint64_t v2 = sub_1005032E0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Collecting MSg attachments", buf, 2u);
  }

  unsigned int v20 = +[NSMutableArray array];
  uint64_t v3 = +[GEOFilePaths pathFor:22];
  id v4 = +[NSFileManager defaultManager];
  id v30 = 0;
  id v21 = (void *)v3;
  id v5 = [v4 contentsOfDirectoryAtPath:v3 error:&v30];
  id v6 = v30;

  if (v6)
  {
    id v7 = sub_1005032E0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v33 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Could not fetch contents of Maps Suggestions Cache directory %@", buf, 0xCu);
    }
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v7 = v5;
    id v8 = [v7 countByEnumeratingWithState:&v26 objects:v31 count:16];
    if (v8)
    {
      id v9 = v8;
      id v17 = v5;
      unsigned int v18 = 0;
      uint64_t v19 = a1;
      uint64_t v10 = *(void *)v27;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v27 != v10) {
            objc_enumerationMutation(v7);
          }
          unint64_t v12 = [v21 stringByAppendingPathComponent:*(void *)(*((void *)&v26 + 1) + 8 * i) v17, v18, v19];
          uint64_t v13 = [v12 lastPathComponent];
          uint64_t v14 = +[NSURL fileURLWithPath:v12];
          int v15 = +[MapsRadarFileAttachment attachmentWithFileName:v13 fileURL:v14];
          [v20 addObject:v15];
        }
        id v9 = [v7 countByEnumeratingWithState:&v26 objects:v31 count:16];
      }
      while (v9);
      id v6 = v18;
      a1 = v19;
      id v5 = v17;
    }
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005053F0;
  block[3] = &unk_1012E66E0;
  id v23 = *(id *)(a1 + 32);
  id v24 = v20;
  id v25 = *(id *)(a1 + 40);
  id v16 = v20;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005053F0(uint64_t a1)
{
  [*(id *)(a1 + 32) addObjectsFromArray:*(void *)(a1 + 40)];
  uint64_t v2 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v2);
}

void sub_100505430(uint64_t a1)
{
  os_log_t v1 = sub_1005032E0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Collecting MSP attachments", buf, 2u);
  }

  uint64_t v2 = +[NSMutableArray array];
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v24 = +[MSPMapsPaths pathsAtLocation:0];
  id v23 = [v24 geoBookmarksSettingsPath];
  v35[0] = v23;
  long long v22 = +[MSPMapsPaths pathsAtLocation:0];
  id v21 = [v22 failedGeoSearchesSettingsPath];
  v35[1] = v21;
  uint64_t v3 = +[MSPMapsPaths pathsAtLocation:0];
  id v4 = [v3 failedGeoDirectionsSettingsPath];
  v35[2] = v4;
  id v5 = +[MSPMapsPaths pathsAtLocation:0];
  id v6 = [v5 directionsCachePath];
  v35[3] = v6;
  id v7 = +[MSPMapsPaths pathsAtLocation:0];
  id v8 = [v7 pinsSettingsPath];
  v35[4] = v8;
  id v9 = +[MSPMapsPaths pathsAtLocation:0];
  uint64_t v10 = [v9 geoHistorySettingsPath];
  v35[5] = v10;
  id v11 = +[NSArray arrayWithObjects:v35 count:6];

  id v12 = [v11 countByEnumeratingWithState:&v30 objects:v36 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v31;
    do
    {
      for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v31 != v14) {
          objc_enumerationMutation(v11);
        }
        id v16 = *(void **)(*((void *)&v30 + 1) + 8 * i);
        id v17 = [v16 lastPathComponent];
        unsigned int v18 = +[NSURL fileURLWithPath:v16];
        uint64_t v19 = +[MapsRadarFileAttachment attachmentWithFileName:v17 fileURL:v18];
        [v2 addObject:v19];
      }
      id v13 = [v11 countByEnumeratingWithState:&v30 objects:v36 count:16];
    }
    while (v13);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005057A8;
  block[3] = &unk_1012E66E0;
  id v27 = *(id *)(a1 + 32);
  id v28 = v2;
  id v29 = *(id *)(a1 + 40);
  id v20 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005057A8(uint64_t a1)
{
  [*(id *)(a1 + 32) addObjectsFromArray:*(void *)(a1 + 40)];
  uint64_t v2 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v2);
}

void sub_1005057E8(uint64_t a1)
{
  uint64_t v2 = sub_1005032E0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Collecting user defaults attachments", buf, 2u);
  }

  uint64_t v3 = +[NSMutableArray array];
  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = [v4 dictionaryRepresentation];
  id v6 = [v5 description];
  id v7 = +[MapsRadarTextAttachment attachmentWithFileName:@"NSUserDefaults.standardUserDefaults.txt" text:v6];

  id v8 = +[NSUserDefaults __maps_groupUserDefaults];
  id v9 = [v8 dictionaryRepresentation];
  uint64_t v10 = [v9 description];
  id v11 = +[MapsRadarTextAttachment attachmentWithFileName:@"NSUserDefaults.__maps_groupUserDefaults.txt" text:v10];

  [v3 addObject:v7];
  [v3 addObject:v11];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005059E0;
  block[3] = &unk_1012E66E0;
  id v14 = *(id *)(a1 + 32);
  id v15 = v3;
  id v16 = *(id *)(a1 + 40);
  id v12 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1005059E0(uint64_t a1)
{
  [*(id *)(a1 + 32) addObjectsFromArray:*(void *)(a1 + 40)];
  uint64_t v2 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v2);
}

void sub_100505A20(uint64_t a1)
{
  uint64_t v2 = sub_1005032E0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Collecting view hierarchy attachments", v7, 2u);
  }

  uint64_t v3 = +[UIApplication sharedApplication];
  id v4 = [v3 connectedScenes];
  id v5 = sub_1004E032C(v4, &stru_1012ED6C8);

  id v6 = sub_100099700(v5, &stru_1012ED730);
  [*(id *)(a1 + 32) addObjectsFromArray:v6];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

id sub_100505B04(id a1, UIScene *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = [v4 delegate];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      id v6 = [v4 delegate];
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        id v12 = [v4 delegate];
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) == 0)
        {
          id v9 = sub_1005032E0();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
          {
            id v14 = [v4 delegate];
            *(_DWORD *)long long buf = 138412546;
            unsigned int v18 = (UIScene *)v4;
            __int16 v19 = 2112;
            id v20 = v14;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Skipping window scene because the delegate is not one of ours: %@:%@", buf, 0x16u);
          }
          uint64_t v10 = 0;
          goto LABEL_9;
        }
LABEL_6:
        id v7 = sub_1005032E0();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          id v8 = [v4 windows];
          *(_DWORD *)long long buf = 138412546;
          unsigned int v18 = (UIScene *)v4;
          __int16 v19 = 2112;
          id v20 = v8;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Processing window scene's windows: %@:%@", buf, 0x16u);
        }
        id v9 = [v4 windows];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        uint8_t v15[2] = sub_100505DF8;
        _OWORD v15[3] = &unk_1012ED6F0;
        id v16 = v4;
        uint64_t v10 = sub_100099700(v9, v15);

LABEL_9:
        goto LABEL_13;
      }
    }
    goto LABEL_6;
  }
  id v4 = sub_1005032E0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412290;
    unsigned int v18 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Skipping window scene because it's not a UIWindowScene: %@", buf, 0xCu);
  }
  uint64_t v10 = 0;
LABEL_13:

  return v10;
}

id sub_100505DF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isHidden])
  {
    id v4 = sub_1005032E0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v10 = 138412546;
      uint64_t v11 = v5;
      __int16 v12 = 2112;
      id v13 = v3;
      id v6 = "Skipping window because it's hidden: %@:%@";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, v6, (uint8_t *)&v10, 0x16u);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = sub_1005032E0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 138412546;
      uint64_t v11 = v7;
      __int16 v12 = 2112;
      id v13 = v3;
      id v6 = "Skipping window because it's a text effects window: %@:%@";
      goto LABEL_7;
    }
LABEL_8:

    id v8 = 0;
    goto LABEL_10;
  }
  id v8 = v3;
LABEL_10:

  return v8;
}

id sub_100505F54(id a1, UIWindow *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  id v6 = +[NSString stringWithFormat:@"recursiveDescription.%@.%p.txt", v5, v3];
  uint64_t v7 = [(UIWindow *)v3 recursiveDescription];

  id v8 = +[MapsRadarTextAttachment attachmentWithFileName:v6 text:v7];

  return v8;
}

void sub_100506018(uint64_t a1)
{
  uint64_t v2 = sub_1005032E0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Collecting scene state attachments", v8, 2u);
  }

  id v3 = +[UIApplication sharedApplication];
  id v4 = [v3 connectedScenes];
  uint64_t v5 = sub_100099700(v4, &stru_1012ED750);

  id v6 = [v5 componentsJoinedByString:@"\n\n"];
  uint64_t v7 = +[MapsRadarTextAttachment attachmentWithFileName:@"connectedScenes.txt" text:v6];
  [*(id *)(a1 + 32) addObject:v7];
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

id sub_100506120(id a1, UIScene *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [(UIScene *)v3 _FBSScene];
  uint64_t v5 = [v4 uiSettings];
  id v6 = [v5 deactivationReasons];

  unint64_t v7 = [(UIScene *)v3 activationState];
  if (v7 > 2) {
    CFStringRef v8 = @"Unattached";
  }
  else {
    CFStringRef v8 = off_1012ED7B8[v7];
  }
  id v9 = [(UIScene *)v3 delegate];
  int v10 = +[NSString stringWithFormat:@"%@\nactivationState:%@\ndeactivationReasons:%lu\ndelegate:%@", v3, v8, v6, v9];

  return v10;
}

uint64_t sub_100506200(uint64_t a1)
{
  [*(id *)(a1 + 32) addAttachments:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) addScreenshots:*(void *)(a1 + 48)];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 56) + 16);

  return v2();
}

void sub_1005062C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsRadarAttachmentProviderTask");
  uint64_t v2 = (void *)qword_10160EF60;
  qword_10160EF60 = (uint64_t)v1;
}

BOOL sub_100507034(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 coordinate];
  if (v4 == *(double *)(a1 + 32))
  {
    [v3 coordinate];
    BOOL v6 = v5 == *(double *)(a1 + 40);
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_100507128(id a1)
{
  byte_1015E4760 = GEOConfigGetBOOL();
}

void sub_100508F68(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  double v4 = [[SearchDotPlace alloc] initWithGEODotPlace:v3];

  [v2 addObject:v4];
}

double sub_10050943C(void *a1)
{
  id v1 = a1;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v2 = [v1 countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v22;
    double v5 = 0.0;
    double y = 9.22337204e18;
    double v7 = 0.0;
    double x = 9.22337204e18;
    do
    {
      for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v4) {
          objc_enumerationMutation(v1);
        }
        int v10 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        [v10 coordinate];
        if (v12 >= -180.0 && v12 <= 180.0 && v11 >= -90.0 && v11 <= 90.0)
        {
          [v10 coordinate];
          MKMapPoint v13 = MKMapPointForCoordinate(v26);
          if (x >= v13.x) {
            double x = v13.x;
          }
          if (y >= v13.y) {
            double y = v13.y;
          }
          if (v7 <= v13.x) {
            double v7 = v13.x;
          }
          if (v5 <= v13.y) {
            double v5 = v13.y;
          }
        }
      }
      id v3 = [v1 countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v3);
  }
  else
  {
    double v5 = 0.0;
    double y = 9.22337204e18;
    double v7 = 0.0;
    double x = 9.22337204e18;
  }
  if (x <= v7) {
    double v14 = v7;
  }
  else {
    double v14 = x;
  }
  if (x >= v7) {
    double v15 = v7;
  }
  else {
    double v15 = x;
  }
  if (v14 - v15 <= 0.0 || (y <= v5 ? (double v16 = v5) : (double v16 = y), y >= v5 ? (v17 = v5) : (v17 = y), v16 - v17 <= 0.0))
  {
    unsigned int v18 = [v1 firstObject];
    [v18 coordinate];
    MKMapRectMakeWithRadialDistance();
    double x = v19;
  }
  return x;
}

uint64_t sub_10050A00C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, double, double, double, double))(result + 16))(result, a2, 0, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  }
  return result;
}

uint64_t sub_10050A034(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void, double, double, double, double))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, 0, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

uint64_t sub_10050B708()
{
  uint64_t v0 = +[GEOCountryConfiguration sharedConfiguration];
  id v1 = [v0 countryCode];
  if ([v1 isEqualToString:@"CN"]) {
    uint64_t BOOL = 1;
  }
  else {
    uint64_t BOOL = GEOConfigGetBOOL();
  }

  return BOOL;
}

uint64_t sub_10050B784()
{
  uint64_t v0 = +[GEOCountryConfiguration sharedConfiguration];
  id v1 = [v0 countryCode];
  if ([v1 isEqualToString:@"CN"]) {
    uint64_t BOOL = GEOConfigGetBOOL();
  }
  else {
    uint64_t BOOL = 1;
  }

  return BOOL;
}

id sub_10050C024(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 64) = 0;
  if (a4 && (a3 & 1) == 0)
  {
    id v5 = a4;
    BOOL v6 = [v5 domain];
    id v7 = [v5 code];

    NSLog(@"Printing FAILED! due to error in domain %@ with error code %ld", v6, v7);
  }
  CFStringRef v8 = *(void **)(a1 + 32);

  return _[v8 _endBackgroundTask];
}

id sub_10050C894(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _endBackgroundTask];
}

void sub_10050D0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10050D10C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  BOOL v6 = v5;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  if (!a3)
  {
    int v10 = v5;
    id v7 = [v5 count];
    BOOL v6 = v10;
    if (v7)
    {
      CFStringRef v8 = *(void **)(a1 + 32);
      id v9 = [v10 firstObject];
      [v8 _setTitlesWithMapItem:v9];

      BOOL v6 = v10;
    }
  }
}

RoutePlanningSessionDirectionsPlanBuilder *sub_10050D1A0(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 lastObject];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [[RoutePlanningSessionDirectionsPlanBuilder alloc] initWithRoutePlanningSession:v4 fidelity:a2];
LABEL_7:
    BOOL v6 = v5;
    goto LABEL_8;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [[RideSharingSessionDirectionsPlanBuilder alloc] initWithRideBookingPlanningSession:v4];
    goto LABEL_7;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v5 = [[NavigationSessionDirectionsPlanBuilder alloc] initWithSessionStack:v3 fidelity:a2];
    goto LABEL_7;
  }
  BOOL v6 = 0;
LABEL_8:

  return v6;
}

void sub_10050EA60(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_100576FF4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error saving new RAP to Sync with error %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_10050EDE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10050EDFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didFinishJumpingForCapture];
}

void sub_10050EECC(uint64_t a1)
{
  [*(id *)(a1 + 32) startedTest];
  id v13 = objc_alloc_init((Class)NSDateFormatter);
  [v13 setDateFormat:@"yyyy-MM-dd-HHmmss"];
  id v2 = +[NSTimeZone localTimeZone];
  [v13 setTimeZone:v2];

  id v3 = +[NSDate date];
  int v4 = [v13 stringFromDate:v3];

  id v5 = [*(id *)(a1 + 32) mainMKMapView];
  BOOL v6 = [v5 snapshotImage];
  id v7 = UIImagePNGRepresentation(v6);
  CFStringRef v8 = [*(id *)(a1 + 32) testName];
  if (v8)
  {
    id v9 = [*(id *)(a1 + 32) testName];
    int v10 = +[NSString stringWithFormat:@"%@-%@.png", v9, v4];
  }
  else
  {
    int v10 = +[NSString stringWithFormat:@"%@-%@.png", @"capture", v4];
  }

  double v11 = NSTemporaryDirectory();
  double v12 = [v11 stringByAppendingPathComponent:v10];

  [v7 writeToFile:v12 atomically:1];
  NSLog(@"Capture screenshot taken: %@", v12);
  [*(id *)(a1 + 32) finishedTest];
}

uint64_t sub_10050FC90(_OWORD *a1, void *a2, void *a3)
{
  long long v5 = a1[3];
  long long v13 = a1[2];
  long long v14 = v5;
  long long v15 = a1[4];
  id v6 = a3;
  [a2 transformedPoint:&v13];
  double v8 = v7;
  long long v9 = a1[3];
  long long v13 = a1[2];
  long long v14 = v9;
  long long v15 = a1[4];
  [v6 transformedPoint:&v13];
  double v11 = v10;

  if (v8 < v11) {
    return -1;
  }
  else {
    return v8 > v11;
  }
}

id sub_10051369C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) hairLineAlpha];
}

id sub_1005136B0(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) setHairLineAlpha:];
}

id sub_1005143DC()
{
  if (qword_10160EF80 != -1) {
    dispatch_once(&qword_10160EF80, &stru_1012ED958);
  }
  uint64_t v0 = (void *)qword_10160EF78;

  return v0;
}

void sub_1005147F4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFVIOSessionAppBackgroundMonitor");
  id v2 = (void *)qword_10160EF78;
  qword_10160EF78 = (uint64_t)v1;
}

uint64_t sub_1005149C8(uint64_t a1)
{
  id v2 = +[MapsSyncStore sharedStore];
  uint64_t v5 = *(void *)(a1 + 32);
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  [v2 saveWithObjects:v3 error:0];

  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100514C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100514CB4(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 48);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  uint64_t v5 = [v4 firstObject];

  if (v5) {
    [WeakRetained _updateCachedCuratedCollection:v5 withCollection:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
  }
}

BOOL sub_100515010(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 curatedCollectionIdentifier] == *(id *)(a1 + 32)
    && (![v3 resultProviderIdentifier]
     || [v3 resultProviderIdentifier] == *(_DWORD *)(a1 + 40));

  return v4;
}

BOOL sub_100515084(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 curatedCollectionIdentifier] == *(id *)(a1 + 32)
    && (![v3 resultProviderIdentifier]
     || [v3 resultProviderIdentifier] == *(_DWORD *)(a1 + 40));

  return v4;
}

void sub_100515370(uint64_t a1)
{
}

uint64_t sub_100515378(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

BOOL sub_10051584C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 curatedCollectionIdentifier];
  uint64_t v5 = [*(id *)(a1 + 32) collectionIdentifier];
  BOOL v6 = v4 == [v5 muid] && [v3 resultProviderIdentifier] == 0;

  return v6;
}

void sub_1005159F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

MKMapItemIdentifier *__cdecl sub_100515A0C(id a1, MSCuratedCollection *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)MKMapItemIdentifier);
  id v5 = [(MSCuratedCollection *)v3 curatedCollectionIdentifier];
  id v6 = [(MSCuratedCollection *)v3 resultProviderIdentifier];

  id v7 = [v4 initWithMUID:v5 resultProviderID:v6 coordinate:MKCoordinateInvalid[0], MKCoordinateInvalid[1]];

  return (MKMapItemIdentifier *)v7;
}

void sub_100515A94(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6 && [v5 count])
  {
    id v7 = (id *)(a1 + 32);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_100515B8C;
    void v9[3] = &unk_1012E6708;
    objc_copyWeak(&v10, v7);
    [WeakRetained _addCachedCuratedCollections:v5 completion:v9];

    objc_destroyWeak(&v10);
  }
}

void sub_100515B78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100515B8C(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setIsPopulatingCachedCollections:0];

  id v3 = objc_loadWeakRetained(v1);
  [v3 _updateContent];
}

void sub_100515FF4(uint64_t a1)
{
  [*(id *)(a1 + 32) garbageCollectIfNeeded];
  id v2 = [*(id *)(a1 + 32) _itemURLForIdentifier:*(void *)(a1 + 40)];
  if (!v2)
  {
    uint64_t v16 = *(void *)(a1 + 56);
    if (v16) {
      (*(void (**)(uint64_t, void))(v16 + 16))(v16, 0);
    }
    id v6 = 0;
    goto LABEL_20;
  }
  id v3 = +[NSFileManager defaultManager];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v25 = 0;
  unsigned __int8 v5 = [v3 createDirectoryAtURL:v4 withIntermediateDirectories:1 attributes:0 error:&v25];
  id v6 = v25;

  if ((v5 & 1) == 0) {
    goto LABEL_13;
  }
  id v7 = +[NSData data];
  id v24 = v6;
  unsigned __int8 v8 = [v7 writeToURL:v2 options:0 error:&v24];
  id v9 = v24;

  if ((v8 & 1) == 0) {
    goto LABEL_17;
  }
  id v23 = v9;
  unsigned __int8 v10 = [v2 setResourceValue:&__kCFBooleanTrue forKey:NSURLIsExcludedFromBackupKey error:&v23];
  id v6 = v23;

  if (v10)
  {
    id v22 = v6;
    unsigned __int8 v11 = [v2 setResourceValue:NSURLFileProtectionCompleteUnlessOpen forKey:NSURLFileProtectionKey error:&v22];
    id v9 = v22;

    if (v11)
    {
      double v12 = *(void **)(a1 + 48);
      id v21 = v9;
      unsigned __int8 v13 = [v12 writeToURL:v2 options:0 error:&v21];
      id v6 = v21;

      if (v13)
      {
        uint64_t v14 = *(void *)(a1 + 56);
        if (v14)
        {
          long long v15 = *(void (**)(void))(v14 + 16);
LABEL_15:
          v15();
          goto LABEL_20;
        }
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    double v19 = +[NSFileManager defaultManager];
    [v19 removeItemAtURL:v2 error:0];

LABEL_17:
    uint64_t v20 = *(void *)(a1 + 56);
    if (v20) {
      (*(void (**)(uint64_t, id))(v20 + 16))(v20, v9);
    }
    id v6 = v9;
    goto LABEL_20;
  }
LABEL_12:
  double v17 = +[NSFileManager defaultManager];
  [v17 removeItemAtURL:v2 error:0];

LABEL_13:
  uint64_t v18 = *(void *)(a1 + 56);
  if (v18)
  {
    long long v15 = *(void (**)(void))(v18 + 16);
    goto LABEL_15;
  }
LABEL_20:
}

uint64_t sub_100516400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005166B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16))()) {
    [*(id *)(a1 + 32) removeItemWithIdentifier:v3 error:0];
  }
}

BOOL sub_100516764(id a1, NSUUID *a2)
{
  return 1;
}

void sub_1005169E4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v8 = 0;
  if ([a3 getResourceValue:&v8 forKey:NSURLCreationDateKey error:0])
  {
    id v6 = *(void **)(a1 + 32);
    id v7 = v8;
    [v6 addObject:v5];
    [*(id *)(a1 + 40) setObject:v7 forKeyedSubscript:v5];
  }
}

id sub_100516A78(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = [v5 objectForKeyedSubscript:a2];
  id v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:v6];

  id v9 = [v7 compare:v8];
  return v9;
}

id sub_100516AF8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) objectForKeyedSubscript:a2];
}

void sub_100516BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100516BCC(uint64_t result, uint64_t a2, unsigned char *a3)
{
  *a3 = 1;
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_100517AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100517AF4(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    if (a3 == 1)
    {
      uint64_t v9 = *((void *)WeakRetained + 3);
      if (!v9) {
        goto LABEL_9;
      }
      id v8 = *(void (**)(void))(v9 + 16);
      goto LABEL_8;
    }
    if (!a3)
    {
      uint64_t v7 = *((void *)WeakRetained + 3);
      if (v7)
      {
        id v8 = *(void (**)(void))(v7 + 16);
LABEL_8:
        v8();
      }
    }
  }
LABEL_9:
}

uint64_t sub_1005185F0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 fieldType];
  uint64_t v4 = [v2 containsObject:v3] ^ 1;

  return v4;
}

UIColor *__cdecl sub_100519EA4(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

void sub_10051D1C8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10051D220(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  uint64_t v4 = (void *)a1[5];
  id v5 = a2;
  uint64_t v6 = +[PlaceSummaryViewModelTemplateFactory viewModelWithHistoryEntrySearch:highlightConfiguration:searchAlongRoute:](_TtC4Maps36PlaceSummaryViewModelTemplateFactory, "viewModelWithHistoryEntrySearch:highlightConfiguration:searchAlongRoute:", v5, v3, [v4 searchAlongRoute]);

  uint64_t v7 = *(void *)(a1[6] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_10051D2AC(uint64_t a1, void *a2)
{
  double v3 = *(double *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v6 = a2;
  id v10 = [v5 currentLocation];
  uint64_t v7 = +[PlaceSummaryViewModelTemplateFactory viewModelWithHistoryEntryPlaceDisplay:highlightConfiguration:availableWidth:currentLocation:searchAlongRoute:](_TtC4Maps36PlaceSummaryViewModelTemplateFactory, "viewModelWithHistoryEntryPlaceDisplay:highlightConfiguration:availableWidth:currentLocation:searchAlongRoute:", v6, v4, v10, [*(id *)(a1 + 40) searchAlongRoute], v3);

  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

uint64_t sub_10052052C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = [v3 autocompleteObject];

    id v3 = (id)v4;
  }
  id v5 = [*(id *)(a1 + 32) delegate];
  uint64_t v6 = [v5 searchDataSource:*(void *)(a1 + 32) shouldFilterItem:v3] ^ 1;

  return v6;
}

id sub_100521AB8()
{
  id v0 = objc_alloc_init((Class)ACAccountStore);
  uint64_t v1 = [v0 aa_primaryAppleAccount];
  id v2 = [v1 aa_primaryEmail];
  if (![v2 length])
  {
    id v4 = 0;
    goto LABEL_5;
  }
  unsigned int v3 = [v1 aa_isPrimaryEmailVerified];

  if (v3)
  {
    id v2 = [v1 aa_primaryEmail];
    id v4 = [v2 copy];
LABEL_5:

    goto LABEL_7;
  }
  id v4 = 0;
LABEL_7:

  return v4;
}

id sub_100521B68()
{
  id v0 = +[NSBundle mainBundle];
  uint64_t v1 = [v0 localizedStringForKey:@"Reports may include location and contact information." value:@"localized string not found" table:0];

  return v1;
}

uint64_t sub_100521BD0()
{
  uint64_t v0 = MapsConfig_ReportAProblemIsDisabled;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    id v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    unsigned int v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100521F54(uint64_t a1)
{
  uint64_t v2 = 0;
  v5[0] = *(_OWORD *)&MapsConfig_ReportAProblemIsDisabled;
  v5[1] = *(_OWORD *)&MapsConfig_ReportAProblemInvalidEmailIsVisible;
  uint64_t v5[2] = *(_OWORD *)&MapsConfig_ReportAProblemSettingsSearchIsVisible;
  v5[3] = *(_OWORD *)&MapsConfig_ReportAProblemDirectionsETAIsVisible;
  void v5[4] = *(_OWORD *)&MapsConfig_ReportAProblemRoutePlanningFlowIsVisible;
  void v5[5] = MapsConfig_ReportAProblemApplePayIsVisible;
  v5[6] = MapsConfig_ReportAProblemRequirePhotosWhenNearby;
  v5[7] = MapsConfig_ReportAProblemAddStreetFlowIsVisible;
  v5[8] = *(_OWORD *)&MapsConfig_ReportAProblemAddAPlaceStartsWithPrivacy;
  v5[9] = *(_OWORD *)&MapsConfig_ReportAProblemStartsWithPrivacy;
  v5[10] = *(_OWORD *)&MapsConfig_ReportAProblemShouldIncludeHistoricLocationsInDirectionsRequest;
  v5[11] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeCredentials;
  v5[12] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeLocations;
  v5[13] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizePhotos;
  v5[14] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeScreenshots;
  v5[15] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeDirections;
  uint8_t v5[16] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests;
  v5[17] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses;
  v5[18] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizeTransit;
  v5[19] = *(_OWORD *)&MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations;
  v5[20] = MapsConfig_ReportAProblemAddressEditIsProhibited;
  v5[21] = *(_OWORD *)&MapsConfig_RAPShouldFailSilentlyOnInvalidRequests;
  v5[22] = *(_OWORD *)&MapsConfig_RAPEnableAfterNavFeedbackFlow;
  v5[23] = *(_OWORD *)&MapsConfig_ShowRAPFeedbackPortalInternalUI;
  do
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(a1 + 16))(a1, *(void *)&v5[v2], *((void *)&v5[v2] + 1));
    if (!result) {
      break;
    }
  }
  while (v2++ != 23);
  return result;
}

BOOL sub_10052213C(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    uint64_t v2 = GEOConfigGetString();
    BOOL v3 = ![v2 length] || [v1 hasSuffix:v2];
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

uint64_t sub_1005221BC()
{
  uint64_t v0 = MapsConfig_ReportAProblemInvalidEmailIsVisible;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100522540()
{
  if (!_MKRAPIsAvailable() || (sub_100521BD0() & 1) != 0) {
    return 0;
  }
  uint64_t v2 = MapsConfig_ReportAProblemSettingsSearchIsVisible;
  if (!_GEOConfigHasValue())
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v3;
    _OWORD v21[3] = &off_1013AEAD8;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v4;
    v21[4] = &off_1013AEB00;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v5;
    void v21[5] = &off_1013AEB28;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v6;
    v21[6] = &off_1013AEB50;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v7;
    v21[7] = &off_1013AEB78;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v8;
    v21[8] = &off_1013AEBA0;
    uint64_t v9 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v9;
    void v21[9] = &off_1013AEBC8;
    id v10 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    unsigned __int8 v11 = +[NSNumber numberWithUnsignedInt:v2];
    double v12 = [v10 objectForKeyedSubscript:v11];

    unsigned __int8 v13 = +[GEOCountryConfiguration sharedConfiguration];
    uint64_t v14 = [v13 countryCode];
    long long v15 = [v12 objectForKey:v14];

    if (v15) {
      id BOOL = [v15 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v0 = BOOL;

    return (uint64_t)v0;
  }

  return GEOConfigGetBOOL();
}

uint64_t sub_1005228DC()
{
  if (!_MKRAPIsAvailable() || (sub_100521BD0() & 1) != 0) {
    return 0;
  }
  uint64_t v2 = MapsConfig_ReportAProblemDirectionsETAIsVisible;
  if (!_GEOConfigHasValue())
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v3;
    _OWORD v21[3] = &off_1013AEAD8;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v4;
    v21[4] = &off_1013AEB00;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v5;
    void v21[5] = &off_1013AEB28;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v6;
    v21[6] = &off_1013AEB50;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v7;
    v21[7] = &off_1013AEB78;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v8;
    v21[8] = &off_1013AEBA0;
    uint64_t v9 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v9;
    void v21[9] = &off_1013AEBC8;
    id v10 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    unsigned __int8 v11 = +[NSNumber numberWithUnsignedInt:v2];
    double v12 = [v10 objectForKeyedSubscript:v11];

    unsigned __int8 v13 = +[GEOCountryConfiguration sharedConfiguration];
    uint64_t v14 = [v13 countryCode];
    long long v15 = [v12 objectForKey:v14];

    if (v15) {
      id BOOL = [v15 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v0 = BOOL;

    return (uint64_t)v0;
  }

  return GEOConfigGetBOOL();
}

uint64_t sub_100522C78()
{
  if (!_MKRAPIsAvailable() || (sub_100521BD0() & 1) != 0) {
    return 0;
  }
  uint64_t v2 = MapsConfig_ReportAProblemRoutePlanningFlowIsVisible;
  if (!_GEOConfigHasValue())
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v3;
    _OWORD v21[3] = &off_1013AEAD8;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v4;
    v21[4] = &off_1013AEB00;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v5;
    void v21[5] = &off_1013AEB28;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v6;
    v21[6] = &off_1013AEB50;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v7;
    v21[7] = &off_1013AEB78;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v8;
    v21[8] = &off_1013AEBA0;
    uint64_t v9 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v9;
    void v21[9] = &off_1013AEBC8;
    id v10 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    unsigned __int8 v11 = +[NSNumber numberWithUnsignedInt:v2];
    double v12 = [v10 objectForKeyedSubscript:v11];

    unsigned __int8 v13 = +[GEOCountryConfiguration sharedConfiguration];
    uint64_t v14 = [v13 countryCode];
    long long v15 = [v12 objectForKey:v14];

    if (v15) {
      id BOOL = [v15 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v0 = BOOL;

    return (uint64_t)v0;
  }

  return GEOConfigGetBOOL();
}

uint64_t sub_100523014()
{
  uint64_t v0 = MapsConfig_ReportAProblemAddAPlaceStartsWithPrivacy;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100523398()
{
  uint64_t v0 = MapsConfig_ReportAProblemStartsWithPrivacy;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_10052371C()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldIncludeHistoricLocationsInDirectionsRequest;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100523AA0()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeCredentials;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100523E1C()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeLocations;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100524198()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizePhotos;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100524514()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeScreenshots;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100524890()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeDirections;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100524C0C()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100524F88()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100525304()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizeTransit;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100525680()
{
  uint64_t v0 = MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_1005259FC()
{
  uint64_t v0 = MapsConfig_RAPShouldFailSilentlyOnInvalidRequests;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

uint64_t sub_100525D78()
{
  uint64_t v0 = MapsConfig_RAPEnableAfterNavFeedbackFlow;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    double v19 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeCredentials];
    v20[0] = v19;
    v21[0] = &off_1013AEA60;
    uint64_t v18 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeLocations];
    v20[1] = v18;
    v21[1] = &off_1013AEA88;
    double v17 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePhotos];
    void v20[2] = v17;
    void v21[2] = &off_1013AEAB0;
    uint64_t v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeScreenshots];
    void v20[3] = v2;
    _OWORD v21[3] = &off_1013AEAD8;
    BOOL v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirections];
    void v20[4] = v3;
    v21[4] = &off_1013AEB00;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionRequests];
    v20[5] = v4;
    void v21[5] = &off_1013AEB28;
    id v5 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeDirectionResponses];
    v20[6] = v5;
    v21[6] = &off_1013AEB50;
    uint64_t v6 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizeTransit];
    v20[7] = v6;
    v21[7] = &off_1013AEB78;
    uint64_t v7 = +[NSNumber numberWithUnsignedInt:MapsConfig_ReportAProblemShouldAnonymizePersonalizedLocations];
    v20[8] = v7;
    v21[8] = &off_1013AEBA0;
    uint64_t v8 = +[NSNumber numberWithUnsignedInt:MapsConfig_RAPShouldFailSilentlyOnInvalidRequests];
    v20[9] = v8;
    void v21[9] = &off_1013AEBC8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:10];

    id v10 = +[NSNumber numberWithUnsignedInt:v0];
    unsigned __int8 v11 = [v9 objectForKeyedSubscript:v10];

    double v12 = +[GEOCountryConfiguration sharedConfiguration];
    unsigned __int8 v13 = [v12 countryCode];
    uint64_t v14 = [v11 objectForKey:v13];

    if (v14) {
      id BOOL = [v14 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v16 = BOOL;

    return (uint64_t)v16;
  }
}

void sub_1005274C8(uint64_t a1)
{
  uint64_t v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = [*(id *)(a1 + 32) excludedStepIndices];
    int v8 = 134219010;
    uint64_t v9 = v6;
    __int16 v10 = 2048;
    uint64_t v11 = v3;
    __int16 v12 = 2048;
    uint64_t v13 = v4;
    __int16 v14 = 2048;
    uint64_t v15 = v5;
    __int16 v16 = 2112;
    double v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Failed to construct a valid itemIndex (%lu) in items (%lu) for stepIndex: %lu firstUsedStepIndex: %lu excludedStepIndices: %@", (uint8_t *)&v8, 0x34u);
  }
}

void sub_1005284F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [[SearchResult alloc] initWithMapItem:v3];

  uint64_t v5 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v5 setSearchResult:v4];
  uint64_t v9 = v4;
  uint64_t v6 = +[NSArray arrayWithObjects:&v9 count:1];
  uint64_t v7 = +[SearchInfo searchInfoWithResults:v6];

  int v8 = [*(id *)(a1 + 32) appCoordinator];
  [v8 openSearch:v5 andResults:v7];
}

id sub_10052944C(uint64_t a1, void *a2)
{
  if ([a2 userInterfaceStyle] == (id)2)
  {
    id v3 = +[UIColor secondarySystemGroupedBackgroundColor];
  }
  else
  {
    id v3 = *(id *)(a1 + 32);
  }

  return v3;
}

void sub_10052A2D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10052A2FC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = (id *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  uint64_t v11 = [WeakRetained tableView:v9 indexPath:v8 identifier:v7];

  return v11;
}

id sub_10052B498(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (!v2[126])
  {
    id v3 = +[MapsOfflineUIHelper sharedHelper];
    if ([v3 isUsingOfflineMaps])
    {
      int v4 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 127);

      uint64_t v2 = *(unsigned char **)(a1 + 32);
      if (v4)
      {
        return _[v2 _applyTableViewSnapshot];
      }
    }
    else
    {

      uint64_t v2 = *(unsigned char **)(a1 + 32);
    }
  }
  id result = [v2 needsToApplySnapshot];
  if ((result & 1) == 0)
  {
    [*(id *)(a1 + 32) setNeedsToApplySnapshot:1];
    [*(id *)(a1 + 32) setNeedsToResetKeyCommands:1];
    uint64_t v5 = sub_100576A04();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = [*(id *)(*(void *)(a1 + 32) + 152) collectionView];
      [v6 contentSize];
      id v7 = NSStringFromSize(v14);
      *(_DWORD *)long long buf = 138412290;
      __int16 v12 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Applying snapshot started. Content Size: %@", buf, 0xCu);
    }
    id v8 = *(void **)(a1 + 32);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10052B67C;
    v10[3] = &unk_1012E5D08;
    void v10[4] = v8;
    return [v8 applySnapshotWithCompletion:v10];
  }
  return result;
}

id sub_10052B67C(uint64_t a1)
{
  uint64_t v2 = sub_100576A04();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(*(void *)(a1 + 32) + 152) collectionView];
    [v3 contentSize];
    int v4 = NSStringFromSize(v8);
    int v6 = 138412290;
    id v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Applying snapshot completed. Content Size: %@", (uint8_t *)&v6, 0xCu);
  }
  [*(id *)(a1 + 32) setNeedsToApplySnapshot:0];
  [*(id *)(a1 + 32) setNeedsToResetKeyCommands:0];
  return [*(id *)(a1 + 32) reorderKeyCommands];
}

id sub_10052C018()
{
  if (qword_10160EFC8 != -1) {
    dispatch_once(&qword_10160EFC8, &stru_1012EDE38);
  }
  uint64_t v0 = (void *)qword_10160EFC0;

  return v0;
}

void sub_10052C5F4(uint64_t a1, void *a2)
{
  id v6 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    id v3 = [v6 dataProviders];

    if (v3)
    {
      int v4 = *(void **)(a1 + 32);
      uint64_t v5 = [v6 dataProviders];
      [v4 addObjectsFromArray:v5];
    }
  }
}

void sub_10052C690(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = [v9 dataProviders];

    if (v6)
    {
      id v7 = *(void **)(a1 + 32);
      NSSize v8 = [v9 dataProviders];
      [v7 addObjectsFromArray:v8];

      *a4 = 1;
    }
  }
}

void sub_10052CDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10052CE0C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 type] == *(id *)(a1 + 40))
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_10052D0BC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_10052D0E0(uint64_t a1, unint64_t a2, void *a3)
{
  id v63 = a3;
  uint64_t v5 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = [WeakRetained collectionViewDiffableDataSource];
  id v65 = [v7 snapshot];

  NSSize v8 = [v65 sectionIdentifiers];
  id v9 = [v8 count];

  if ((unint64_t)v9 <= a2)
  {
    NSSize v14 = sub_100576A04();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = [v65 sectionIdentifiers];
      id v16 = objc_loadWeakRetained((id *)(a1 + 40));
      double v17 = [v16 dataProviders];
      id v18 = objc_loadWeakRetained((id *)(a1 + 40));
      double v19 = [v18 layoutProviders];
      *(_DWORD *)id location = 138413314;
      *(void *)&location[4] = v15;
      __int16 v82 = 2048;
      unint64_t v83 = a2;
      __int16 v84 = 2112;
      unsigned int v85 = v65;
      __int16 v86 = 2112;
      uint64_t v87 = v17;
      __int16 v88 = 2112;
      unint64_t v89 = v19;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "The diffable data source is trying to apply a snapshot at index greater than the number of section identifiers so returning a empty layout section here. Current section identifiers: %@ And section index: %ld. The snapshot : %@, Data Providers : %@, Layout providers : %@", location, 0x34u);
    }
    uint64_t v64 = objc_loadWeakRetained((id *)(a1 + 40));
    uint64_t v20 = [v64 _emptySection];
  }
  else
  {
    __int16 v10 = [v65 sectionIdentifiers];
    uint64_t v64 = [v10 objectAtIndex:a2];

    id v11 = objc_loadWeakRetained((id *)(a1 + 40));
    __int16 v12 = [v11 dataProviderWithIdentifier:v64];

    id v13 = objc_loadWeakRetained((id *)(a1 + 40));
    id v62 = [v13 layoutProviderForDataProvider:v12];

    if ([v12 conformsToProtocol:&OBJC_PROTOCOL___SearchHomeDataProviderDeletable])
    {
      objc_initWeak((id *)location, v12);
      v76[0] = _NSConcreteStackBlock;
      v76[1] = 3221225472;
      v76[2] = sub_10052D8BC;
      v76[3] = &unk_1012EDD00;
      objc_copyWeak(&v79, (id *)(a1 + 40));
      id v77 = v64;
      id v78 = v12;
      objc_copyWeak(&v80, (id *)location);
      uint64_t v60 = objc_retainBlock(v76);
      objc_destroyWeak(&v80);

      objc_destroyWeak(&v79);
      objc_destroyWeak((id *)location);
    }
    else
    {
      uint64_t v60 = 0;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v21 = v62;
      id v61 = objc_loadWeakRetained((id *)(a1 + 40));
      [v61 heightForHeaderInSection:a2 dataProvider:v12];
      double v23 = v22;
      id v58 = objc_loadWeakRetained((id *)(a1 + 40));
      [v58 heightForFooterInSection:a2 dataProvider:v12];
      double v25 = v24;
      uint64_t v57 = [v63 container];
      [v57 contentSize];
      double v27 = v26;
      id v28 = [v12 wantsOneColumnLayout];
      id v29 = [v12 objectsTitles];
      long long v30 = [v12 objects];
      id v31 = [v30 count];
      id v32 = objc_loadWeakRetained(v5);
      long long v33 = [v32 collectionView];
      int v34 = [v33 theme];
      uint64_t v20 = [v21 layoutSectionWithLayoutEnvironment:v63 estimatedHeaderHeight:v60 estimatedFooterHeight:v28 deletionBlock:v29 collectionViewWidth:v31 wantsOneColumnLayout:v34 browseCategoriesTitles:v23 objectsCount:v25 mapsTheme:v27];
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v61 = v62;
        [*(id *)(a1 + 32) heightForHeaderInSection:a2 dataProvider:v12];
        double v36 = v35;
        [*(id *)(a1 + 32) heightForFooterInSection:a2 dataProvider:v12];
        double v38 = v37;
        v73[0] = _NSConcreteStackBlock;
        v73[1] = 3221225472;
        v73[2] = sub_10052D938;
        v73[3] = &unk_1012EDD50;
        id v39 = v12;
        id v74 = v39;
        objc_copyWeak(&v75, (id *)(a1 + 40));
        [v61 setShareHandler:v73];
        v71[0] = _NSConcreteStackBlock;
        v71[1] = 3221225472;
        v71[2] = sub_10052DCAC;
        v71[3] = &unk_1012EDD78;
        id v40 = v39;
        id v72 = v40;
        [v61 setIsShareable:v71];
        v69[0] = _NSConcreteStackBlock;
        v69[1] = 3221225472;
        v69[2] = sub_10052DD38;
        v69[3] = &unk_1012EDD78;
        id v41 = v40;
        id v70 = v41;
        [v61 setIsDeletable:v69];
        v66[0] = _NSConcreteStackBlock;
        v66[1] = 3221225472;
        v66[2] = sub_10052DDC4;
        v66[3] = &unk_1012EDDA0;
        objc_copyWeak(&v68, (id *)(a1 + 40));
        uint64_t v67 = v60;
        uint64_t v42 = [v41 objects];
        id v43 = [v42 count];
        id v44 = objc_loadWeakRetained((id *)(a1 + 40));
        uint64_t v45 = [v44 collectionView];
        long long v46 = [v45 theme];
        uint64_t v20 = [v61 layoutSectionWithLayoutEnvironment:v63 estimatedHeaderHeight:v66 estimatedFooterHeight:v43 deletionBlock:v46 objectsCount:v36 mapsTheme:v38];

        objc_destroyWeak(&v68);
        objc_destroyWeak(&v75);
      }
      else
      {
        id v61 = objc_loadWeakRetained((id *)(a1 + 40));
        [v61 heightForHeaderInSection:a2 dataProvider:v12];
        double v48 = v47;
        id v59 = objc_loadWeakRetained((id *)(a1 + 40));
        [v59 heightForFooterInSection:a2 dataProvider:v12];
        double v50 = v49;
        uint64_t v51 = [v12 objects];
        id v52 = [v51 count];
        id v53 = objc_loadWeakRetained((id *)(a1 + 40));
        uint64_t v54 = [v53 collectionView];
        id v55 = [v54 theme];
        uint64_t v20 = [v62 layoutSectionWithLayoutEnvironment:v63 estimatedHeaderHeight:v60 estimatedFooterHeight:v52 deletionBlock:v55 objectsCount:v48 mapsTheme:v50];
      }
    }
  }

  return v20;
}

void sub_10052D88C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10052D8BC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained performDeleteAnimationOnSectionWithIdentifier:*(void *)(a1 + 32) itemAtIndex:a2 dataProvider:*(void *)(a1 + 40) animated:1];

  id v5 = objc_loadWeakRetained((id *)(a1 + 56));
  [v5 deleteEntryAtIndex:a2];
}

void sub_10052D938(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = [*(id *)(a1 + 32) objects];
  id v5 = [v4 objectAtIndex:[v3 row]];

  id v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v8 = [WeakRetained collectionView];
  id v9 = [(id)v8 cellForItemAtIndexPath:v3];

  __int16 v10 = [v5 collections];
  objc_opt_class();
  LOBYTE(v_Block_object_dispose(&a9, 8) = objc_opt_isKindOfClass();

  id v11 = [v5 collections];
  if (v8)
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    long long v16[2] = sub_10052DB38;
    void v16[3] = &unk_1012EDD28;
    objc_copyWeak(&v19, v6);
    id v17 = v9;
    id v18 = v5;
    [v11 retrieveGeoCollectionWithRefinedItems:v16];

    objc_destroyWeak(&v19);
  }
  else
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      id v13 = objc_loadWeakRetained(v6);
      NSSize v14 = [v13 searchHomeDataSourceDelegate];
      uint64_t v15 = [v5 collections];
      [v14 shareCollection:v9 collection:v15];
    }
  }
}

void sub_10052DB24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10052DB38(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v7 && v8 && (id v10 = [v8 count], !v9) && v10)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    __int16 v12 = [WeakRetained searchHomeDataSourceDelegate];
    uint64_t v13 = *(void *)(a1 + 32);
    NSSize v14 = [*(id *)(a1 + 40) collections];
    [v12 shareCollection:v13 collection:v14];
  }
  else
  {
    id WeakRetained = sub_100109E50();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = [*(id *)(a1 + 40) collections];
      id v16 = [v15 identifier];
      int v17 = 138412546;
      id v18 = v16;
      __int16 v19 = 2112;
      id v20 = v9;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_ERROR, "Failed to resolve curated collection with id: %@ error: %@", (uint8_t *)&v17, 0x16u);
    }
  }
}

id sub_10052DCAC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  int v4 = [v2 objects];
  id v5 = [v3 row];

  id v6 = [v4 objectAtIndex:v5];

  id v7 = [v6 collections];
  id v8 = [v7 canShare];

  return v8;
}

id sub_10052DD38(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  int v4 = [v2 objects];
  id v5 = [v3 row];

  id v6 = [v4 objectAtIndex:v5];

  id v7 = [v6 collections];
  id v8 = [v7 canDelete];

  return v8;
}

uint64_t sub_10052DDC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained addToCollectionObserver];

  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v3();
}

void sub_10052E930(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Block_object_dispose((const void *)(v2 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_10052E9B4(uint64_t a1)
{
  uint64_t v2 = +[SectionFooterCollectionReusableView reuseIdentifier];
  [*(id *)(a1 + 32) setAccessibilityIdentifier:v2];

  id v3 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (objc_opt_respondsToSelector())
  {
    int v4 = +[NSBundle mainBundle];
    id v5 = [v4 localizedStringForKey:@"Clear [No Query State]" value:@"localized string not found" table:0];

    id v6 = *(void **)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10052EAE4;
    v7[3] = &unk_1012E5D08;
    id v8 = v3;
    [v6 setActionTitle:v5 completionHandler:v7];
    [*(id *)(a1 + 32) setAccessibilityIdentifiersWithBaseString:@"SearchHomeClearRecents"];
  }
}

id sub_10052EAE4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) deleteAllEntries];
}

void sub_10052EAEC(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v5 = [WeakRetained searchHomeDataSourceDelegate];
  [v5 showGuidesHomeFromExploreGuides:v3];

  id v7 = objc_loadWeakRetained(v2);
  id v6 = [v7 analyticsManager];
  [v6 exploreGuidesButtonTapped];
}

void sub_10052EB84(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchHomeDataSourceDelegate];
  [v2 seeAllTappedForCollections];

  id v3 = [*(id *)(a1 + 32) analyticsManager];
  [v3 showAllCollectionsTapped];
}

id sub_10052EBEC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) title];
  [*(id *)(a1 + 32) setTitle:v2];

  if (MapsFeature_IsEnabled_Maps269() && sub_1000BBB44(*(void **)(a1 + 40)) != 5) {
    [*(id *)(a1 + 32) setShowsBottomHairline:0];
  }
  id v3 = [*(id *)(a1 + 48) section];
  id v4 = [*(id *)(a1 + 40) _maps_indexOfFirstNonEmptySection];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v6 = [WeakRetained collectionView];
  uint64_t v7 = sub_1000BBB44(v6);

  id v8 = *(void **)(a1 + 32);
  if (v7 == 5) {
    [v8 setFirstNonEmptySection:v3 == v4 topMargin:12.0];
  }
  else {
    [v8 setFirstNonEmptySection:v3 == v4];
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    if (MapsFeature_IsEnabled_Maps269() && sub_1000BBB44(*(void **)(a1 + 40)) != 5) {
      [*(id *)(a1 + 32) setShowsBottomHairline:1];
    }
    id v9 = +[NSBundle mainBundle];
    id v10 = [v9 localizedStringForKey:@"More [No Query State]" value:@"localized string not found" table:0];

    id v11 = *(void **)(a1 + 32);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v38[2] = sub_10052F3D8;
    v38[3] = &unk_1012E5D08;
    v38[4] = *(void *)(a1 + 56);
    [v11 setActionTitle:v10 completionHandler:v38];
    __int16 v12 = +[NSBundle mainBundle];
    uint64_t v13 = [v12 localizedStringForKey:@"More Recents [No Query State]" value:@"localized string not found" table:0];

    NSSize v14 = "seeAllTappedForRecents";
    uint64_t v15 = *(void **)(a1 + 56);
    id v16 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)[*(id *)(a1 + 48) section] + 1);
    int v17 = [v16 stringValue];
    CFStringRef v43 = @"section";
    id v18 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 48) section]);
    id v44 = v18;
    __int16 v19 = &v44;
    id v20 = &v43;
    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [*(id *)(a1 + 32) setShowsBottomHairline:0];
    double v23 = +[NSBundle mainBundle];
    double v24 = [v23 localizedStringForKey:@"More User Guides Offline [No Query State]" value:@"localized string not found" table:0];

    double v25 = *(void **)(a1 + 32);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    _OWORD v37[2] = sub_10052F41C;
    v37[3] = &unk_1012E5D08;
    v37[4] = *(void *)(a1 + 56);
    [v25 setActionTitle:v24 completionHandler:v37];

    goto LABEL_15;
  }
  if (MapsFeature_IsEnabled_Maps269() & 1) == 0 && (objc_opt_class(), (objc_opt_isKindOfClass()) {
    || sub_1000BBB44(*(void **)(a1 + 40)) == 5 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  }
  {
    id v29 = +[NSBundle mainBundle];
    id v10 = [v29 localizedStringForKey:@"See All [No Query State]" value:@"localized string not found" table:0];

    long long v30 = *(void **)(a1 + 32);
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_10052F460;
    v36[3] = &unk_1012E5D08;
    v36[4] = *(void *)(a1 + 56);
    [v30 setActionTitle:v10 completionHandler:v36];
    [*(id *)(a1 + 32) setShowsBottomHairline:0];
    id v31 = +[NSBundle mainBundle];
    uint64_t v13 = [v31 localizedStringForKey:@"See All Guides [No Query State]" value:@"localized string not found" table:0];

    NSSize v14 = "seeAllTappedForCollections";
    uint64_t v15 = *(void **)(a1 + 56);
    id v16 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)[*(id *)(a1 + 48) section] + 1);
    int v17 = [v16 stringValue];
    CFStringRef v41 = @"section";
    id v18 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 48) section]);
    uint64_t v42 = v18;
    __int16 v19 = &v42;
    id v20 = &v41;
LABEL_12:
    id v21 = +[NSDictionary dictionaryWithObjects:v19 forKeys:v20 count:1];
    double v22 = +[UIKeyCommand commandWithTitle:v13 image:0 action:v14 input:v17 modifierFlags:1572864 propertyList:v21];
    [v15 addKeyCommand:v22];

    goto LABEL_15;
  }
  if (MapsFeature_IsEnabled_Maps269())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v32 = +[NSBundle mainBundle];
      id v10 = [v32 localizedStringForKey:@"More [City Guides Section]" value:@"localized string not found" table:0];

      long long v33 = *(void **)(a1 + 32);
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472;
      v35[2] = sub_10052F4C8;
      v35[3] = &unk_1012E5D08;
      v35[4] = *(void *)(a1 + 56);
      [v33 setActionTitle:v10 completionHandler:v35];
      [*(id *)(a1 + 32) setShowsBottomHairline:0];
      int v34 = +[NSBundle mainBundle];
      uint64_t v13 = [v34 localizedStringForKey:@"See All Cities [No Query State]" value:@"localized string not found" table:0];

      NSSize v14 = "showCitySelector";
      uint64_t v15 = *(void **)(a1 + 56);
      id v16 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)[*(id *)(a1 + 48) section] + 1);
      int v17 = [v16 stringValue];
      CFStringRef v39 = @"section";
      id v18 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 48) section]);
      id v40 = v18;
      __int16 v19 = &v40;
      id v20 = &v39;
      goto LABEL_12;
    }
  }
  if (MapsFeature_IsEnabled_Maps269())
  {
    if (sub_1000BBB44(*(void **)(a1 + 40)) != 5)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass())) {
        [*(id *)(a1 + 32) setShowsBottomHairline:1];
      }
    }
  }
LABEL_15:
  double v26 = *(void **)(a1 + 32);
  double v27 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) headerAccessibilityIdentifier];
  [v26 setAccessibilityIdentifiersWithBaseString:v27];

  [*(id *)(a1 + 32) setNeedsLayout];
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_10052F3D8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) searchHomeDataSourceDelegate];
  [v1 seeAllTappedForRecents];
}

void sub_10052F41C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) searchHomeDataSourceDelegate];
  [v1 seeAllTappedForUserGuides];
}

void sub_10052F460(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchHomeDataSourceDelegate];
  [v2 seeAllTappedForCollections];

  id v3 = [*(id *)(a1 + 32) analyticsManager];
  [v3 showAllCollectionsTapped];
}

void sub_10052F4C8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) searchHomeDataSourceDelegate];
  [v2 showCitySelector];

  id v3 = [*(id *)(a1 + 32) analyticsManager];
  [v3 cityGuidesMoreButtonTapped];
}

void sub_100530BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100530C14(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 type] == (id)2)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

id sub_100531244(uint64_t a1)
{
  return _[*(id *)(a1 + 32) reloadSectionOfType:7];
}

void sub_100531634(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchHomeDataSource");
  uint64_t v2 = (void *)qword_10160EFC0;
  qword_10160EFC0 = (uint64_t)v1;
}

void sub_100532324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,id location)
{
  objc_destroyWeak(v50);
  objc_destroyWeak(v49);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100532358()
{
  if (qword_10160EFE0 != -1) {
    dispatch_once(&qword_10160EFE0, &stru_1012EDEF8);
  }
  uint64_t v0 = (void *)qword_10160EFD8;

  return v0;
}

void sub_1005323AC(uint64_t a1)
{
  os_log_t v1 = *(void **)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [v1 addObject:WeakRetained];
}

void sub_100532400(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 supersededSearchStorageIdentifier];

  if (v3)
  {
    id v4 = (id *)(a1 + 48);
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v6 = *(void **)(a1 + 32);
    id v7 = [v10 supersededSearchStorageIdentifier];
    [v6 setObject:WeakRetained forKeyedSubscript:v7];

    id v8 = *(void **)(a1 + 40);
    id v9 = objc_loadWeakRetained(v4);
    [v8 addObject:v9];
  }
}

void sub_10053257C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchHomeRecentSearchesDataFetcher");
  uint64_t v2 = (void *)qword_10160EFD8;
  qword_10160EFD8 = (uint64_t)v1;
}

void sub_1005328A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1005328C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = sub_10057708C();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
    if (v6)
    {
      if (v9)
      {
        int v12 = 138412290;
        id v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Failed Sundew call when attempting to fetch with error %@", (uint8_t *)&v12, 0xCu);
      }

      WeakRetained[64] = 0;
      id v10 = (void *)*((void *)WeakRetained + 9);
      *((void *)WeakRetained + 9) = 0;
    }
    else
    {
      if (v9)
      {
        int v12 = 138412290;
        id v13 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Fetched photo credit result: %@", (uint8_t *)&v12, 0xCu);
      }

      WeakRetained[64] = [v5 attributePhotos];
      uint64_t v11 = [v5 attributionName];
      id v10 = (void *)*((void *)WeakRetained + 9);
      *((void *)WeakRetained + 9) = v11;
    }

    [WeakRetained rebuildSections];
  }
}

void sub_100532B7C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = v9;
  if (!v8)
  {
    id v13 = 0;
    if (!v9) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  uint64_t v11 = sub_10057708C();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    int v16 = 138412290;
    id v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed Sundew call when attempting to update photo preferences with error %@", (uint8_t *)&v16, 0xCu);
  }

  int v12 = +[NSBundle mainBundle];
  id v13 = [v12 localizedStringForKey:@"[Photo Credit] Photo Credit update error" value:@"localized string not found" table:0];

  if (v10)
  {
LABEL_7:
    NSSize v14 = sub_10057708C();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412290;
      id v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Attribution update error: %@", (uint8_t *)&v16, 0xCu);
    }

    id v15 = v10;
    id v13 = v15;
  }
LABEL_10:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100532FF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100533094;
  v5[3] = &unk_1012E5D58;
  void v5[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

id sub_100533094(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 120), *(id *)(a1 + 40));
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 rebuildSections];
}

void sub_1005335E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_100533624(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1005336C8;
  v4[3] = &unk_1012EDF70;
  id v5 = *(id *)(a1 + 32);
  id v3 = [a2 addCheckmarkRowsGroupWithContent:v4 get:&stru_1012EDFB0 set:&stru_1012EDFF0];
}

void sub_1005336C8(uint64_t a1, void *a2)
{
  id v19 = a2;
  [v19 setAllowMultipleSelection:0];
  [v19 setMinimumSelectionCount:1];
  id v3 = +[NSBundle mainBundle];
  id v4 = [v3 localizedStringForKey:@"Driving" value:@"localized string not found" table:0];
  id v5 = [*(id *)(a1 + 32) objectAtIndex:0];
  id v6 = [v19 addRowWithTitle:v4 value:v5];

  id v7 = +[NSBundle mainBundle];
  id v8 = [v7 localizedStringForKey:@"Walking" value:@"localized string not found" table:0];
  id v9 = [*(id *)(a1 + 32) objectAtIndex:1];
  id v10 = [v19 addRowWithTitle:v8 value:v9];

  uint64_t v11 = +[NSBundle mainBundle];
  int v12 = [v11 localizedStringForKey:@"Transit" value:@"localized string not found" table:0];
  id v13 = [*(id *)(a1 + 32) objectAtIndex:2];
  id v14 = [v19 addRowWithTitle:v12 value:v13];

  id v15 = +[NSBundle mainBundle];
  int v16 = [v15 localizedStringForKey:@"Cycling" value:@"localized string not found" table:0];
  id v17 = [*(id *)(a1 + 32) objectAtIndex:3];
  id v18 = [v19 addRowWithTitle:v16 value:v17];
}

id sub_1005338CC(id a1)
{
  uint64_t v1 = GEOGetUserTransportTypePreference();

  return +[NSNumber numberWithInteger:v1];
}

void sub_10053390C(id a1, id a2)
{
  id v2 = a2;
  [v2 integerValue];
  GEOSetUserTransportTypePreference();
  id v3 = [v2 integerValue];

  +[UserProfileAnalyticsManager capturePreferredDirectionsForTransportType:v3];
}

void sub_100533970(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Avoid Tolls" value:@"localized string not found" table:0];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:v3 get:&stru_1012EE058 set:&stru_1012EE078];

  id v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"Avoid Highways" value:@"localized string not found" table:0];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:v6 get:&stru_1012EE098 set:&stru_1012EE0B8];
}

BOOL sub_100533A74(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultAvoidTollsKey"];

  return v2;
}

void sub_100533ABC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultAvoidTollsKey"];

  id v4 = +[NSUserDefaults __maps_groupUserDefaults];
  [v4 setBool:v2 forKey:@"MapsDefaultAvoidTollsKey"];

  if (v2) {
    uint64_t v5 = 148;
  }
  else {
    uint64_t v5 = 189;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v5];
}

BOOL sub_100533B58(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultAvoidHighwaysKey"];

  return v2;
}

void sub_100533BA0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultAvoidHighwaysKey"];

  id v4 = +[NSUserDefaults __maps_groupUserDefaults];
  [v4 setBool:v2 forKey:@"MapsDefaultAvoidHighwaysKey"];

  if (v2) {
    uint64_t v5 = 151;
  }
  else {
    uint64_t v5 = 195;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v5];
}

void sub_100533C3C(id a1, MapsDebugTableSection *a2)
{
  uint64_t v11 = a2;
  if (sub_100CD3150())
  {
    BOOL v2 = +[NSBundle mainBundle];
    id v3 = [v2 localizedStringForKey:@"Avoid Hills" value:@"localized string not found" table:0];
    id v4 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:v3 get:&stru_1012EE0F8 set:&stru_1012EE118];
  }
  if (sub_100CD3150())
  {
    uint64_t v5 = +[NSBundle mainBundle];
    id v6 = [v5 localizedStringForKey:@"Avoid Busy Roads" value:@"localized string not found" table:0];
    id v7 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:v6 get:&stru_1012EE138 set:&stru_1012EE158];
  }
  if (sub_100CD31B0())
  {
    id v8 = +[NSBundle mainBundle];
    id v9 = [v8 localizedStringForKey:@"Avoid Stairs" value:@"localized string not found" table:0];
    id v10 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:v9 get:&stru_1012EE178 set:&stru_1012EE198];
  }
}

BOOL sub_100533DB4(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultWalkingAvoidHillsKey"];

  return v2;
}

void sub_100533DFC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultWalkingAvoidHillsKey"];

  if (v2) {
    uint64_t v4 = 5035;
  }
  else {
    uint64_t v4 = 5036;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v4 value:@"WALKING"];
}

BOOL sub_100533E70(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultWalkingAvoidBusyRoadsKey"];

  return v2;
}

void sub_100533EB8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultWalkingAvoidBusyRoadsKey"];

  if (v2) {
    uint64_t v4 = 5033;
  }
  else {
    uint64_t v4 = 5034;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v4 value:@"WALKING"];
}

BOOL sub_100533F2C(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultWalkingAvoidStairsKey"];

  return v2;
}

void sub_100533F74(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultWalkingAvoidStairsKey"];

  if (v2) {
    uint64_t v4 = 5037;
  }
  else {
    uint64_t v4 = 5038;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v4 value:@"WALKING"];
}

void sub_100533FE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained rebuildSections];
}

void sub_100534028(id a1, MapsDebugTableSection *a2)
{
  uint64_t v5 = a2;
  BOOL v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"E-Bike" value:@"localized string not found" table:0];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:v3 get:&stru_1012EE1D8 set:&stru_1012EE1F8];
}

BOOL sub_1005340C8(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultUseEbikeKey"];

  return v2;
}

void sub_100534110(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultUseEbikeKey"];
}

void sub_100534170(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  BOOL v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Avoid Hills" value:@"localized string not found" table:0];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:v3 get:&stru_1012EE238 set:&stru_1012EE258];

  uint64_t v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"Avoid Busy Roads" value:@"localized string not found" table:0];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:v6 get:&stru_1012EE278 set:&stru_1012EE298];
}

BOOL sub_100534274(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultAvoidHillsKey"];

  return v2;
}

void sub_1005342BC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultAvoidHillsKey"];

  if (v2) {
    uint64_t v4 = 5035;
  }
  else {
    uint64_t v4 = 5036;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v4 value:@"BICYCLE"];
}

BOOL sub_100534330(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MapsDefaultAvoidBusyRoadsKey"];

  return v2;
}

void sub_100534378(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MapsDefaultAvoidBusyRoadsKey"];

  if (v2) {
    uint64_t v4 = 5033;
  }
  else {
    uint64_t v4 = 5034;
  }

  +[UserProfileAnalyticsManager captureTravelPreferencesUserAction:v4 value:@"BICYCLE"];
}

void sub_1005343EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10053457C;
  v11[3] = &unk_1012EE2C0;
  uint64_t v13 = *(void *)(a1 + 48);
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  id v12 = v4;
  uint64_t v14 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100534680;
  void v9[3] = &unk_1012EE2E8;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100534840;
  v7[3] = &unk_1012EE310;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  id v6 = [v3 addCheckmarkRowsGroupWithContent:v11 get:v9 set:v7];
  objc_destroyWeak(&v8);
  objc_destroyWeak(&v10);
}

void sub_100534560(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10053457C(void *a1, void *a2)
{
  id v10 = a2;
  [v10 setAllowMultipleSelection:1];
  [v10 setMinimumSelectionCount:1];
  if ((uint64_t)a1[5] >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      id v4 = (void *)a1[4];
      uint64_t v5 = +[NSIndexPath indexPathForRow:v3 inSection:a1[6]];
      id v6 = [v4 _modeForIndexPath:v5];

      id v7 = sub_100BA6F44((uint64_t)v6);
      id v8 = +[NSNumber numberWithUnsignedInteger:v6];
      id v9 = [v10 addRowWithTitle:v7 value:v8];

      ++v3;
    }
    while (v3 < a1[5]);
  }
}

id sub_100534680(uint64_t a1)
{
  if (qword_10160F000 != -1) {
    dispatch_once(&qword_10160F000, &stru_1012EE478);
  }
  id v2 = (id)qword_10160EFF8;
  id v16 = [v2 mutableCopy];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    id v7 = (id *)(a1 + 32);
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        id v10 = [v9 integerValue];
        id WeakRetained = objc_loadWeakRetained(v7);
        id v12 = [WeakRetained transitDataSource];
        uint64_t v13 = [v12 preferences];
        LODWORD(v10) = [v13 isModeDisabled:v10];

        if (v10) {
          [v16 removeObject:v9];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v5);
  }

  id v14 = [v16 copy];

  return v14;
}

id sub_100534840(id *a1, void *a2)
{
  id v3 = [a2 integerValue];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v5 = [WeakRetained transitDataSource];
  uint64_t v6 = [v5 preferences];
  [v6 toggleModeEnabled:v3];

  id v7 = objc_loadWeakRetained(a1);
  id v8 = [v7 transitPreferences];
  [v8 synchronize];

  id v9 = [TransitPreferencesViewControllerDataSource alloc];
  id v10 = objc_loadWeakRetained(a1);
  uint64_t v11 = [v10 transitPreferences];
  id v12 = [(TransitPreferencesViewControllerDataSource *)v9 initWithPreferences:v11 displayHints:0];
  id v13 = objc_loadWeakRetained(a1);
  [v13 setTransitDataSource:v12];

  id v14 = objc_loadWeakRetained(a1);
  [v14 rebuildSections];

  id v15 = +[NSUserDefaults standardUserDefaults];
  LODWORD(v14) = +[TransitPreferences isModeDisabled:v3 inUserDefaults:v15];

  if (v14)
  {
    return +[UserProfileAnalyticsManager captureDisableTransitPreferenceForMode:v3];
  }
  else
  {
    return +[UserProfileAnalyticsManager captureEnableTransitPreferenceForMode:v3];
  }
}

void sub_1005349C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"Show Credit" value:@"localized string not found" table:0];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100534C88;
  void v17[3] = &unk_1012E8290;
  objc_copyWeak(&v18, (id *)(a1 + 40));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  id v14[2] = sub_100534CC0;
  v14[3] = &unk_1012EA2C0;
  objc_copyWeak(&v16, (id *)(a1 + 40));
  void v14[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v15 = v6;
  id v7 = [v6 addSwitchRowWithTitle:v5 get:v17 set:v14];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained[64])
  {
    id v9 = +[NSBundle mainBundle];
    id v10 = [v9 localizedStringForKey:@"[User Profile] Nickname" value:@"localized string not found" table:0];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_100534E18;
    v13[3] = &unk_1012EE360;
    void v13[4] = WeakRetained;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100534E2C;
    v12[3] = &unk_1012E78C8;
    void v12[4] = *(void *)(a1 + 32);
    uint64_t v11 = [v6 addTextFieldRowWithTitle:0 placeholderText:v10 inputType:0 get:v13 set:v12];

    [v11 setFilter:&stru_1012EE3A0];
    [v11 setMaximumNumberOfCharacters:30];
  }
  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_100534C68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100534C88(uint64_t a1)
{
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained[64];

  return v2;
}

void sub_100534CC0(uint64_t a1, int a2)
{
  id v4 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(unsigned __int8 *)(v6 + 64) != a2)
    {
      id v15 = WeakRetained;
      *(unsigned char *)(v6 + 64) = a2;
      id v7 = &OBJC_IVAR___TravelPreferencesDataSource__photoCreditName;
      uint64_t v8 = *(void *)(a1 + 32);
      id v9 = *(void **)(v8 + 72);
      *(void *)(v8 + 72) = 0;

      *(unsigned char *)(*(void *)(a1 + 32) + 80) = 1;
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = *(unsigned __int8 *)(v10 + 64);
      if (*(unsigned char *)(v10 + 64))
      {
        id v7 = [*(id *)(a1 + 40) rows];
        if ([v7 count] == (id)1)
        {

LABEL_11:
          id v7 = (int *)objc_loadWeakRetained(v4);
          [v7 rebuildSections];
          goto LABEL_12;
        }
        if (*(unsigned char *)(*(void *)(a1 + 32) + 64))
        {
LABEL_12:

LABEL_13:
          if (v15[64]) {
            uint64_t v14 = 338;
          }
          else {
            uint64_t v14 = 341;
          }
          +[GEOAPPortal captureUserAction:v14 target:602 value:0];
          id WeakRetained = v15;
          goto LABEL_17;
        }
      }
      id v12 = [*(id *)(a1 + 40) rows];
      id v13 = [v12 count];

      if (v11) {
      if (v13 != (id)2)
      }
        goto LABEL_13;
      goto LABEL_11;
    }
  }
LABEL_17:
}

id sub_100534E18(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 72);
}

void sub_100534E2C(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v5 = (id *)(*(void *)(a1 + 32) + 72);
  if (*v5 != v4)
  {
    id v6 = v4;
    objc_storeStrong(v5, a2);
    *(unsigned char *)(*(void *)(a1 + 32) + 80) = 1;
    +[GEOAPPortal captureUserAction:342 target:602 value:0];
    id v4 = v6;
  }
}

BOOL sub_100534EC8(id a1, NSString *a2)
{
  uint64_t v2 = qword_10160EFF0;
  id v3 = a2;
  if (v2 != -1) {
    dispatch_once(&qword_10160EFF0, &stru_1012EE3C0);
  }
  id v4 = [(NSString *)v3 rangeOfCharacterFromSet:qword_10160EFE8];

  return v4 == (id)0x7FFFFFFFFFFFFFFFLL;
}

void sub_100534F38(id a1)
{
  id v5 = objc_alloc_init((Class)NSMutableCharacterSet);
  uint64_t v1 = +[NSCharacterSet alphanumericCharacterSet];
  [v5 formUnionWithCharacterSet:v1];

  uint64_t v2 = +[NSCharacterSet punctuationCharacterSet];
  [v5 formUnionWithCharacterSet:v2];

  [v5 invert];
  id v3 = [v5 copy];
  id v4 = (void *)qword_10160EFE8;
  qword_10160EFE8 = (uint64_t)v3;
}

void sub_100534FE4(id a1)
{
  +[NSURL URLWithString:@"prefs:root=MAPS"];
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = +[UIApplication sharedApplication];
  [v1 _maps_openURL:v2];

  +[UserProfileAnalyticsManager captureSettingsAppTapAction];
}

void sub_10053506C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) notificationSettings];
  id v3 = [v2 authorizationStatus];

  if (v3)
  {
    +[GEOAPPortal captureUserAction:319 target:29 value:0];
    id v4 = +[NSURL URLWithString:UIApplicationOpenNotificationSettingsURLString];
    id v5 = +[UIApplication sharedApplication];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    id v6[2] = sub_100535270;
    v6[3] = &unk_1012E7D28;
    void v6[4] = *(void *)(a1 + 32);
    [v5 openURL:v4 options:&__NSDictionary0__struct completionHandler:v6];
  }
  else
  {
    +[GEOAPPortal captureUserAction:320 target:29 value:0];
    id v4 = +[UNUserNotificationCenter currentNotificationCenter];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1005351F0;
    v7[3] = &unk_1012E6438;
    void v7[4] = *(void *)(a1 + 32);
    [v4 requestAuthorizationWithOptions:14 completionHandler:v7];
  }
}

void sub_1005351F0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100535268;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100535268(uint64_t a1)
{
  return [*(id *)(a1 + 32) loadPreferences];
}

id sub_100535270(uint64_t a1)
{
  return [*(id *)(a1 + 32) loadPreferences];
}

id sub_1005356F0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = a2;
  uint64_t v8 = (objc_class *)objc_opt_class();
  id v9 = NSStringFromClass(v8);
  uint64_t v10 = [v5 dequeueReusableSupplementaryViewOfKind:v6 withReuseIdentifier:v9 forIndexPath:*(void *)(a1 + 48)];

  int v11 = [v10 textLabel];
  [v11 setText:v7];

  [v10 setFooter:a3];
  id v12 = [v7 length];

  if (v12)
  {
    BOOL v13 = 0;
  }
  else
  {
    uint64_t v14 = (char *)[*(id *)(a1 + 32) numberOfSections];
    BOOL v13 = v14 != (char *)[*(id *)(a1 + 48) section] + 1;
  }
  [v10 setHidden:v13];

  return v10;
}

id sub_1005357EC(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = (objc_class *)objc_opt_class();
  uint64_t v6 = NSStringFromClass(v5);
  id v7 = [v3 dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:v6 forIndexPath:*(void *)(a1 + 40)];

  uint64_t v8 = [[UserProfileSectionFooterViewModel alloc] initWithContentString:v4];
  id v9 = [v4 length];

  if (v9)
  {
    BOOL v10 = 0;
  }
  else
  {
    int v11 = (char *)[*(id *)(a1 + 32) numberOfSections];
    BOOL v10 = v11 != (char *)[*(id *)(a1 + 40) section] + 1;
  }
  [(UserProfileSectionFooterViewModel *)v8 setCollapsed:v10];
  [(UserProfileSectionFooterViewModel *)v8 setContainsLink:1];
  [(UserProfileSectionFooterViewModel *)v8 setTarget:*(void *)(a1 + 48)];
  [(UserProfileSectionFooterViewModel *)v8 setAction:"privacyTextTapped"];
  [v7 configureWithViewModel:v8];
  [v7 setNeedsLayout];
  [v7 layoutIfNeeded];

  return v7;
}

uint64_t sub_100536C04(uint64_t a1)
{
  +[HomeAnalyticsManager captureRatingRequestDiscoveryAction:98];
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100536C60(id a1)
{
}

uint64_t sub_100536C6C(uint64_t a1)
{
  +[HomeAnalyticsManager captureRatingRequestDiscoveryAction:25];
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100537FFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100538028(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = (id *)(a1 + 40);
    id v4 = a2;
    id WeakRetained = objc_loadWeakRetained(v3);
    uint64_t v6 = [WeakRetained _labelMarkerForCustomFeatureAnnotation:v4];

    if (v6)
    {
      id v7 = objc_loadWeakRetained(v3);
      [v7 _selectLabelMarker:v6 animated:1];
    }
    else
    {
      id v7 = sub_100015DB4();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = [*(id *)(a1 + 32) mapItem];
        id v9 = [v8 name];
        int v10 = 138412290;
        int v11 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "SearchResults: _customPOIsController failed to find a labelMarker for focused search result: %@", (uint8_t *)&v10, 0xCu);
      }
    }
  }
}

void sub_100538224(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[40] = 0;
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained chromeViewController];
    unsigned int v3 = [v2 isCurrentContext:v4];

    id WeakRetained = v4;
    if (v3)
    {
      [v4 _updateVisibleSearchResults];
      id WeakRetained = v4;
    }
  }
}

id sub_100538458(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 searchResults];
  id v5 = [v3 row];

  uint64_t v6 = [v4 objectAtIndexedSubscript:v5];

  return v6;
}

SearchResult *__cdecl sub_100538BF0(id a1, MKPlaceCollectionMapItem *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [SearchResult alloc];
  id v5 = [(MKPlaceCollectionMapItem *)v3 mapItem];

  uint64_t v6 = [(SearchResult *)v4 initWithMapItem:v5];

  return v6;
}

void sub_10053938C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id sub_1005393B0()
{
  if (qword_10160F010 != -1) {
    dispatch_once(&qword_10160F010, &stru_1012EE608);
  }
  uint64_t v0 = (void *)qword_10160F008;

  return v0;
}

void sub_100539404(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = sub_1005393B0();
  uint64_t v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 48);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)BOOL v13 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "FetchingSARCategories", "", v13, 2u);
  }

  if (a3 || ![v5 count])
  {
    int v10 = &__NSArray0__struct;
    int v11 = WeakRetained;
  }
  else
  {
    int v11 = WeakRetained;
    int v10 = v5;
  }
  [v11 setCategories:v10];
  uint64_t v12 = *(void *)(a1 + 32);
  if (v12) {
    (*(void (**)(void))(v12 + 16))();
  }
}

void sub_1005396B0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavSARAPIController");
  uint64_t v2 = (void *)qword_10160F008;
  qword_10160F008 = (uint64_t)v1;
}

UIFont *__cdecl sub_1005396F4(id a1)
{
  os_log_t v1 = +[MKFontManager sharedManager];
  uint64_t v2 = [v1 subtitleFont];
  id v3 = +[UIFont _maps_cappedFont:v2 withMaxPoint:30.0];

  return (UIFont *)v3;
}

void sub_100539958(uint64_t a1)
{
  if ([*(id *)(a1 + 32) hasEnteredLookAround])
  {
    uint64_t v2 = [*(id *)(a1 + 32) locationTitle];
    [*(id *)(*(void *)(a1 + 40) + 152) setTitle:v2];

    id v3 = [*(id *)(a1 + 32) locationSubtitle];
    [*(id *)(*(void *)(a1 + 40) + 152) setSubtitle:v3];

    id v4 = [*(id *)(a1 + 32) collectionDate];

    if (v4)
    {
      id v5 = +[NSBundle mainBundle];
      uint64_t v6 = [v5 localizedStringForKey:@"Last Updated [LookAround]" value:@"localized string not found" table:0];

      id v7 = *(void **)(*(void *)(a1 + 40) + 136);
      uint64_t v8 = +[NSLocale currentLocale];
      os_signpost_id_t v9 = +[NSDateFormatter dateFormatFromTemplate:@"MMMMyyyy" options:0 locale:v8];
      [v7 setLocalizedDateFormatFromTemplate:v9];

      int v10 = *(void **)(*(void *)(a1 + 40) + 136);
      int v11 = [*(id *)(a1 + 32) collectionDate];
      uint64_t v12 = [v10 stringFromDate:v11];
      BOOL v13 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v6, v12);
      [*(id *)(*(void *)(a1 + 40) + 216) setText:v13];
    }
    id v14 = [*(id *)(*(void *)(a1 + 40) + 152) view];
    [v14 layoutIfNeeded];
  }
}

void sub_100539C6C(uint64_t a1)
{
  BOOL v1 = *(unsigned char *)(a1 + 40) == 0;
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 setHidden:v1];
}

void sub_10053D590(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10053D5AC(uint64_t a1)
{
  MKZoomScaleForZoomLevelF();
  double v3 = v2;
  double v4 = 163.0 / v2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = [WeakRetained searchResult];
  [v6 _offsetCoordinate:v3];
  MKMapPoint v7 = MKMapPointForCoordinate(v29);

  v30.double x = v7.x - v4 * 0.5;
  v30.double y = v7.y - v4 * 0.5;
  double v8 = v4 + v30.x;
  double v9 = v4 + v30.y;
  CLLocationCoordinate2D v10 = MKCoordinateForMapPoint(v30);
  v31.double x = v8;
  v31.double y = v9;
  CLLocationCoordinate2D v11 = MKCoordinateForMapPoint(v31);
  id v12 = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v13 = [v12 searchResult];
  [v13 _offsetCoordinate:v3];
  double v15 = v14;
  double v17 = v16;

  if (v17 < -180.0
    || v17 > 180.0
    || v15 < -90.0
    || v15 > 90.0
    || (double v18 = vabdd_f64(v10.latitude, v11.latitude), v18 > 180.0)
    || (double v19 = vabdd_f64(v10.longitude, v11.longitude), v19 > 360.0))
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
  }
  else
  {
    id v20 = objc_alloc_init((Class)MKMapSnapshotOptions);
    [v20 setRegion:v15, v17, v18, v19];
    id v21 = objc_loadWeakRetained((id *)(a1 + 40));
    [v20 setMapType:[v21 mapType]];

    [v20 setSize:163.0, 163.0];
    double v22 = +[UITraitCollection traitCollectionWithDisplayScale:2.0];
    [v20 setTraitCollection:v22];

    id v23 = [objc_alloc((Class)MKMapSnapshotter) initWithOptions:v20];
    uint64_t v24 = *(void *)(a1 + 32);
    double v25 = *(void **)(v24 + 80);
    *(void *)(v24 + 80) = v23;

    uint64_t v26 = *(void *)(a1 + 32);
    double v27 = *(void **)(v26 + 80);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_10053D834;
    void v28[3] = &unk_1012EE650;
    void v28[4] = v26;
    [v27 startWithCompletionHandler:v28];
  }
}

void sub_10053D834(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 72), a2);
}

void sub_10053FCBC(uint64_t a1)
{
  [*(id *)(a1 + 32) setState:3];
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 32);
  *(void *)(v2 + 32) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 8);
  *(void *)(v4 + _Block_object_dispose(&a9, 8) = 0;
}

void *sub_100541050(void *result)
{
  if (!*(unsigned char *)(result[4] + 32))
  {
    BOOL v1 = result;
    if (result[5])
    {
      uint64_t v2 = sub_100541270();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        double v3 = (void *)v1[4];
        [v3 desiredAccuracy];
        uint64_t v5 = v4;
        [(id)v1[4] acceptableAccuracy];
        int v26 = 134218496;
        double v27 = v3;
        __int16 v28 = 2048;
        uint64_t v29 = v5;
        __int16 v30 = 2048;
        uint64_t v31 = v6;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Will request single location update %p (desired: ±%#.2lfm, acceptable: ±%#.2lfm)", (uint8_t *)&v26, 0x20u);
      }

      uint64_t v7 = v1[4];
      double v8 = *(void **)(v7 + 40);
      if (v8)
      {
        [v8 invalidate];
        uint64_t v7 = v1[4];
      }
      *(unsigned char *)(v7 + 32) = 1;
      uint64_t v9 = +[NSDate date];
      uint64_t v10 = v1[4];
      CLLocationCoordinate2D v11 = *(void **)(v10 + 48);
      *(void *)(v10 + 4_Block_object_dispose(&a9, 8) = v9;

      uint64_t v12 = v1[4];
      if (!*(void *)(v12 + 16))
      {
        id v13 = objc_alloc((Class)CLLocationManager);
        id v14 = [v13 initWithEffectiveBundleIdentifier:MapsAppBundleId delegate:v1[4] onQueue:&_dispatch_main_q];
        uint64_t v15 = v1[4];
        double v16 = *(void **)(v15 + 16);
        *(void *)(v15 + 16) = v14;

        [(id)v1[4] desiredAccuracy];
        [*(id *)(v1[4] + 16) setDesiredAccuracy:];
        uint64_t v12 = v1[4];
      }
      if (!*(void *)(v12 + 8))
      {
        id v17 = +[CLInUseAssertion newAssertionForBundleIdentifier:MapsAppBundleId withReason:@"Fetching a single good location fix"];
        uint64_t v18 = v1[4];
        double v19 = *(void **)(v18 + 8);
        *(void *)(v18 + _Block_object_dispose(&a9, 8) = v17;
      }
      id v20 = [(id)v1[5] copy];
      uint64_t v21 = v1[4];
      double v22 = *(void **)(v21 + 56);
      *(void *)(v21 + 56) = v20;

      uint64_t v23 = +[NSTimer scheduledTimerWithTimeInterval:v1[4] target:"_firstTimeout" selector:0 userInfo:0 repeats:5.0];
      uint64_t v24 = v1[4];
      double v25 = *(void **)(v24 + 40);
      *(void *)(v24 + 40) = v23;

      return [*(id *)(v1[4] + 16) startUpdatingLocation];
    }
  }
  return result;
}

id sub_100541270()
{
  if (qword_10160F020 != -1) {
    dispatch_once(&qword_10160F020, &stru_1012EE690);
  }
  uint64_t v0 = (void *)qword_10160F018;

  return v0;
}

void *sub_100541338(void *result)
{
  if (*(unsigned char *)(result[4] + 32))
  {
    BOOL v1 = result;
    uint64_t v2 = sub_100541270();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      uint64_t v3 = v1[4];
      int v4 = 134217984;
      uint64_t v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Cancelling single location update %p", (uint8_t *)&v4, 0xCu);
    }

    return [(id)v1[4] _cleanup];
  }
  return result;
}

id sub_1005415E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _completeWithLocation:*(void *)(a1 + 40) error:0];
}

id sub_1005416FC(uint64_t a1)
{
  [*(id *)(a1 + 32) setDelegate:0];
  [*(id *)(a1 + 32) stopUpdatingLocation];
  uint64_t v2 = *(void **)(a1 + 40);

  return [v2 invalidate];
}

void sub_100541C54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SingleLocationUpdate");
  uint64_t v2 = (void *)qword_10160F018;
  qword_10160F018 = (uint64_t)v1;
}

void sub_100542E48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100542E6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v6)
    {
      double v8 = sub_10057708C();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        int v17 = 138412290;
        id v18 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Failed Sundew call when attempting to fetch with error %@", (uint8_t *)&v17, 0xCu);
      }

      WeakRetained[48] = 0;
      uint64_t v9 = (void *)*((void *)WeakRetained + 7);
      *((void *)WeakRetained + 7) = 0;
    }
    else
    {
      unsigned int v10 = [v5 wasCleared];
      CLLocationCoordinate2D v11 = sub_10057708C();
      BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_INFO);
      if (v10)
      {
        if (v12)
        {
          int v17 = 138412290;
          id v18 = v5;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Fetched photo credit result, but the photo credit name has been cleared by the server: %@", (uint8_t *)&v17, 0xCu);
        }

        WeakRetained[48] = 0;
        id v13 = (void *)*((void *)WeakRetained + 7);
        *((void *)WeakRetained + 7) = 0;

        uint64_t v9 = [*(id *)(a1 + 32) photoCreditChangesDelegate];
        id v14 = +[NSBundle mainBundle];
        uint64_t v15 = [v14 localizedStringForKey:@"[Photo Credit] Photo Credit name removed error message" value:@"localized string not found" table:0];
        [v9 photoCreditNameHasBeenFlaggedWithErrorMessage:v15];
      }
      else
      {
        if (v12)
        {
          int v17 = 138412290;
          id v18 = v5;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Fetched photo credit result: %@", (uint8_t *)&v17, 0xCu);
        }

        WeakRetained[48] = [v5 attributePhotos];
        uint64_t v16 = [v5 attributionName];
        uint64_t v9 = (void *)*((void *)WeakRetained + 7);
        *((void *)WeakRetained + 7) = v16;
      }
    }

    [WeakRetained rebuildSections];
  }
}

void sub_100543208(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  unsigned int v10 = v9;
  if (!v8)
  {
    id v13 = 0;
    if (!v9) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  CLLocationCoordinate2D v11 = sub_10057708C();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    int v16 = 138412290;
    id v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed Sundew call when attempting to update photo preferences with error %@", (uint8_t *)&v16, 0xCu);
  }

  BOOL v12 = +[NSBundle mainBundle];
  id v13 = [v12 localizedStringForKey:@"[Photo Credit] Photo Credit update error" value:@"localized string not found" table:0];

  if (v10)
  {
LABEL_7:
    id v14 = sub_10057708C();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138412290;
      id v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Attribution update error: %@", (uint8_t *)&v16, 0xCu);
    }

    id v15 = v10;
    id v13 = v15;
  }
LABEL_10:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005435EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100543608(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"Show Credit" value:@"localized string not found" table:0];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1005438D8;
  void v17[3] = &unk_1012E8290;
  objc_copyWeak(&v18, (id *)(a1 + 40));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  id v14[2] = sub_100543910;
  v14[3] = &unk_1012EA2C0;
  objc_copyWeak(&v16, (id *)(a1 + 40));
  void v14[4] = *(void *)(a1 + 32);
  id v6 = v3;
  id v15 = v6;
  id v7 = [v6 addSwitchRowWithTitle:v5 get:v17 set:v14];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained[48])
  {
    id v9 = +[NSBundle mainBundle];
    unsigned int v10 = [v9 localizedStringForKey:@"[Photo Credit] Nickname" value:@"localized string not found" table:0];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_100543A70;
    v13[3] = &unk_1012EE360;
    void v13[4] = WeakRetained;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100543A84;
    v12[3] = &unk_1012EE6E0;
    void v12[4] = *(void *)(a1 + 32);
    void v12[5] = WeakRetained;
    CLLocationCoordinate2D v11 = [v6 addTextFieldRowWithTitle:0 placeholderText:v10 inputType:0 get:v13 set:v12];

    [v11 setFilter:&stru_1012EE700];
    [v11 setDidBeginEditing:&stru_1012EE740];
    [v11 setMaximumNumberOfCharacters:30];
  }
  objc_destroyWeak(&v16);
  objc_destroyWeak(&v18);
}

void sub_1005438B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1005438D8(uint64_t a1)
{
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained[48];

  return v2;
}

void sub_100543910(uint64_t a1, int a2)
{
  int v4 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (*(unsigned __int8 *)(v6 + 48) != a2)
    {
      id v15 = WeakRetained;
      *(unsigned char *)(v6 + 4_Block_object_dispose(&a9, 8) = a2;
      id v7 = &OBJC_IVAR___PhotoCreditDataSource__photoCreditName;
      uint64_t v8 = *(void *)(a1 + 32);
      id v9 = *(void **)(v8 + 56);
      *(void *)(v8 + 56) = 0;

      *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = *(unsigned __int8 *)(v10 + 48);
      if (*(unsigned char *)(v10 + 48))
      {
        id v7 = [*(id *)(a1 + 40) rows];
        if ([v7 count] == (id)1)
        {

LABEL_11:
          id v7 = (int *)objc_loadWeakRetained(v4);
          [v7 rebuildSections];
          goto LABEL_12;
        }
        if (*(unsigned char *)(*(void *)(a1 + 32) + 48))
        {
LABEL_12:

LABEL_13:
          if (v15[48]) {
            uint64_t v14 = 338;
          }
          else {
            uint64_t v14 = 341;
          }
          +[GEOAPPortal captureUserAction:v14 target:77 value:0];
          [v15 _photoCreditDidUpdate];
          id WeakRetained = v15;
          goto LABEL_17;
        }
      }
      BOOL v12 = [*(id *)(a1 + 40) rows];
      id v13 = [v12 count];

      if (v11) {
      if (v13 != (id)2)
      }
        goto LABEL_13;
      goto LABEL_11;
    }
  }
LABEL_17:
}

id sub_100543A70(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 56);
}

id sub_100543A84(uint64_t a1, void *a2)
{
  if (*(void **)(*(void *)(a1 + 32) + 56) != a2)
  {
    id v3 = a2;
    int v4 = +[NSCharacterSet whitespaceCharacterSet];
    uint64_t v5 = [v3 stringByTrimmingCharactersInSet:v4];

    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 56);
    *(void *)(v6 + 56) = v5;

    *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
  }
  uint64_t v8 = *(void **)(a1 + 40);

  return [v8 _photoCreditDidUpdate];
}

BOOL sub_100543B40(id a1, NSString *a2)
{
  uint64_t v2 = qword_10160F030;
  id v3 = a2;
  if (v2 != -1) {
    dispatch_once(&qword_10160F030, &stru_1012EE720);
  }
  id v4 = [(NSString *)v3 rangeOfCharacterFromSet:qword_10160F028];

  return v4 == (id)0x7FFFFFFFFFFFFFFFLL;
}

void sub_100543BB0(id a1)
{
  id v6 = objc_alloc_init((Class)NSMutableCharacterSet);
  os_log_t v1 = +[NSCharacterSet alphanumericCharacterSet];
  [v6 formUnionWithCharacterSet:v1];

  uint64_t v2 = +[NSCharacterSet punctuationCharacterSet];
  [v6 formUnionWithCharacterSet:v2];

  id v3 = +[NSCharacterSet whitespaceCharacterSet];
  [v6 formUnionWithCharacterSet:v3];

  [v6 invert];
  id v4 = [v6 copy];
  uint64_t v5 = (void *)qword_10160F028;
  qword_10160F028 = (uint64_t)v4;
}

void sub_100543C7C(id a1)
{
}

id sub_100544060(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = (objc_class *)objc_opt_class();
  id v6 = NSStringFromClass(v5);
  id v7 = [v3 dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionFooter withReuseIdentifier:v6 forIndexPath:*(void *)(a1 + 40)];

  uint64_t v8 = [[UserProfileSectionFooterViewModel alloc] initWithContentString:v4];
  id v9 = [v4 length];

  if (v9)
  {
    BOOL v10 = 0;
  }
  else
  {
    int v11 = (char *)[*(id *)(a1 + 32) numberOfSections];
    BOOL v10 = v11 != (char *)[*(id *)(a1 + 40) section] + 1;
  }
  [(UserProfileSectionFooterViewModel *)v8 setCollapsed:v10];
  [(UserProfileSectionFooterViewModel *)v8 setContainsLink:1];
  [(UserProfileSectionFooterViewModel *)v8 setTarget:*(void *)(a1 + 48)];
  [(UserProfileSectionFooterViewModel *)v8 setAction:"privacyTextTapped"];
  [v7 configureWithViewModel:v8];
  [v7 setNeedsLayout];
  [v7 layoutIfNeeded];

  return v7;
}

void sub_1005448C4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) layer];
  [v1 setOpacity:0.0];
}

void sub_100545118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

id sub_100545454(uint64_t a1)
{
  CGAffineTransformMakeRotation(&v5, *(CGFloat *)(a1 + 40));
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  CGAffineTransform v4 = v5;
  [v2 setTransform:&v4];
  [*(id *)(*(void *)(a1 + 32) + 16) setCenter:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  return [*(id *)(*(void *)(a1 + 32) + 40) setCenter:*(double *)(a1 + 64) *(double *)(a1 + 72)];
}

void sub_1005455D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005455EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showInstruction];
}

void sub_100545840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10054585C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _startArrowPulseAnimation];
}

id sub_100545970(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(v2 + 57);
  *(unsigned char *)(v2 + 57) = v3 ^ 1;
  uint64_t v4 = *(void *)(a1 + 32);
  CGAffineTransform v5 = *(void **)(v4 + 16);
  if (v5)
  {
    [v5 transform];
    uint64_t v4 = *(void *)(a1 + 32);
  }
  else
  {
    memset(&v9, 0, sizeof(v9));
  }
  CGAffineTransformScale(&v10, &v9, dbl_100F6FBF0[v3 == 0], dbl_100F6FBF0[v3 == 0]);
  id v6 = *(void **)(v4 + 16);
  CGAffineTransform v8 = v10;
  return [v6 setTransform:&v8];
}

void sub_100547D20(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100547D3C(uint64_t a1)
{
  MKZoomScaleForZoomLevelF();
  double v3 = 163.0 / v2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  CGAffineTransform v5 = [WeakRetained routeStep];
  [v5 startCoordinate];
  MKMapPoint v6 = MKMapPointForCoordinate(v28);

  v29.double x = v6.x - v3 * 0.5;
  v29.double y = v6.y - v3 * 0.5;
  double v7 = v3 + v29.x;
  double v8 = v3 + v29.y;
  CLLocationCoordinate2D v9 = MKCoordinateForMapPoint(v29);
  v30.double x = v7;
  v30.double y = v8;
  CLLocationCoordinate2D v10 = MKCoordinateForMapPoint(v30);
  id v11 = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v12 = [v11 routeStep];
  [v12 startCoordinate];
  double v14 = v13;
  double v16 = v15;

  if (v16 < -180.0
    || v16 > 180.0
    || v14 < -90.0
    || v14 > 90.0
    || (double v17 = vabdd_f64(v9.latitude, v10.latitude), v17 > 180.0)
    || (double v18 = vabdd_f64(v9.longitude, v10.longitude), v18 > 360.0))
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
  }
  else
  {
    id v19 = objc_alloc_init((Class)MKMapSnapshotOptions);
    [v19 setRegion:v14, v16, v17, v18];
    id v20 = objc_loadWeakRetained((id *)(a1 + 40));
    [v19 setMapType:[v20 mapType]];

    [v19 setSize:163.0, 163.0];
    uint64_t v21 = +[UITraitCollection traitCollectionWithDisplayScale:2.0];
    [v19 setTraitCollection:v21];

    id v22 = [objc_alloc((Class)MKMapSnapshotter) initWithOptions:v19];
    uint64_t v23 = *(void *)(a1 + 32);
    uint64_t v24 = *(void **)(v23 + 80);
    *(void *)(v23 + 80) = v22;

    uint64_t v25 = *(void *)(a1 + 32);
    int v26 = *(void **)(v25 + 80);
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_100547FB8;
    v27[3] = &unk_1012EE650;
    v27[4] = v25;
    [v26 startWithCompletionHandler:v27];
  }
}

void sub_100547FB8(uint64_t a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 64) = 1;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 72), a2);
}

uint64_t sub_100548B54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100548C7C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) setHidden:1];
  double v2 = *(void **)(*(void *)(a1 + 32) + 48);

  return [v2 removeFromSuperview];
}

id sub_100548E14(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 48) setHidden:0];
  uint64_t v2 = *(void *)(a1 + 40);
  double v3 = *(void **)(*(void *)(a1 + 32) + 48);

  return [v3 setObservedProgress:v2];
}

void sub_100549848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100549864(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_100549960;
  void v8[3] = &unk_1012EE790;
  id v9 = a3;
  id v6 = v9;
  objc_copyWeak(&v12, (id *)(a1 + 40));
  id v10 = v5;
  id v11 = *(id *)(a1 + 32);
  id v7 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

  objc_destroyWeak(&v12);
}

void sub_100549960(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained mergeWithServerConfig:*(void *)(a1 + 40)];
  }
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = objc_loadWeakRetained((id *)(a1 + 56));
  (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
}

void sub_100549E80(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 32) = *(void *)(a1 + 48);
  *(void *)(*(void *)(a1 + 32) + 24) = *(void *)(a1 + 56);
  *(void *)(*(void *)(a1 + 32) + 16) = *(void *)(a1 + 64);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 56), *(id *)(a1 + 40));
  *(void *)(*(void *)(a1 + 32) + 80) = *(void *)(a1 + 72);
  *(void *)(*(void *)(a1 + 32) + 120) = 4;
}

id sub_10054A00C(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 40) = *(void *)(a1 + 64);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 64), *(id *)(a1 + 40));
  *(void *)(*(void *)(a1 + 32) + 72) = *(void *)(a1 + 72);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 88), *(id *)(a1 + 48));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 96), *(id *)(a1 + 56));
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 _submitAnalytics];
}

void sub_10054A164(uint64_t a1)
{
  if (objc_opt_respondsToSelector())
  {
    uint64_t v2 = [*(id *)(a1 + 32) analyticsInformationWithSessionStartMonotonicTime:*(double *)(*(void *)(a1 + 40) + 24)];
    if (v2)
    {
      uint64_t v3 = *(void **)(a1 + 48);
      if (v3)
      {
        id v4 = v3;
        unsigned int v5 = [v4 positionContextState];
        if (v5 > 2)
        {
          int v6 = 0;
          char v7 = 3;
        }
        else
        {
          int v6 = dword_100F6FC48[v5];
          char v7 = 7;
        }
        [v4 probabilityPositionContextStateIndoor];
        uint64_t v9 = v8;
        [v4 probabilityPositionContextStateOutdoor];
        uint64_t v11 = v10;

        v20[0] = v9;
        v20[1] = v11;
        int v21 = v6;
        char v22 = v7;
        __int16 v23 = 0;
        char v24 = 0;
        [v2 setPositionContextClassification:v20];
      }
      id v12 = *(void **)(*(void *)(a1 + 40) + 48);
      if (!v12)
      {
        uint64_t v13 = +[NSMutableArray array];
        uint64_t v14 = *(void *)(a1 + 40);
        double v15 = *(void **)(v14 + 48);
        *(void *)(v14 + 4_Block_object_dispose(&a9, 8) = v13;

        id v12 = *(void **)(*(void *)(a1 + 40) + 48);
      }
      [v12 addObject:v2];
    }
  }
  double v16 = [*(id *)(a1 + 32) crowdsourcingDetails];

  if (v16)
  {
    uint64_t v17 = [*(id *)(a1 + 32) crowdsourcingDetails];
    uint64_t v18 = *(void *)(a1 + 40);
    id v19 = *(void **)(v18 + 136);
    *(void *)(v18 + 136) = v17;
  }
}

void sub_10054A3D4(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 112))
  {
    uint64_t v2 = +[NSMutableArray array];
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 112);
    *(void *)(v3 + 112) = v2;
  }
  id v9 = objc_alloc_init((Class)GEOVLFARState);
  [v9 setRelativeTimestampMs:((*(double *)(a1 + 48) - *(double *)(*(void *)(a1 + 32) + 24)) * 1000.0)];
  id v5 = [*(id *)(a1 + 40) state];
  if ((unint64_t)v5 < 4) {
    uint64_t v6 = (v5 + 1);
  }
  else {
    uint64_t v6 = 0;
  }
  [v9 setGeoTrackingState:v6];
  id v7 = [*(id *)(a1 + 40) stateReason];
  if ((unint64_t)v7 < 9) {
    uint64_t v8 = (v7 + 1);
  }
  else {
    uint64_t v8 = 0;
  }
  [v9 setGeoTrackingStateReason:v8];
  [*(id *)(*(void *)(a1 + 32) + 112) addObject:v9];
}

void sub_10054A54C(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 128))
  {
    uint64_t v2 = +[NSMutableArray array];
    uint64_t v3 = *(void *)(a1 + 32);
    id v4 = *(void **)(v3 + 128);
    *(void *)(v3 + 12_Block_object_dispose(&a9, 8) = v2;
  }
  id v7 = objc_alloc_init((Class)GEOVLFDeviceOrientation);
  [v7 setRelativeTimestampMs:((*(double *)(a1 + 40) - *(double *)(*(void *)(a1 + 32) + 24)) * 1000.0)];
  unint64_t v5 = *(void *)(a1 + 48);
  if (v5 < 4) {
    uint64_t v6 = (v5 + 1);
  }
  else {
    uint64_t v6 = 0;
  }
  [v7 setOrientation:v6];
  [*(id *)(*(void *)(a1 + 32) + 128) addObject:v7];
}

id sub_10054AB18()
{
  if (qword_10160F040 != -1) {
    dispatch_once(&qword_10160F040, &stru_1012EE828);
  }
  uint64_t v0 = (void *)qword_10160F038;

  return v0;
}

void sub_10054AC10(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionAnalyticsCapturer");
  uint64_t v2 = (void *)qword_10160F038;
  qword_10160F038 = (uint64_t)v1;
}

id sub_10054ADB0()
{
  if (qword_10160F050 != -1) {
    dispatch_once(&qword_10160F050, &stru_1012EE8D8);
  }
  uint64_t v0 = (void *)qword_10160F048;

  return v0;
}

void sub_10054BA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10054BA24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained refreshRoutesForced:*(unsigned char *)(*(void *)(a1 + 32) + 8) == 0];
}

void sub_10054C1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10054C1E0(uint64_t a1)
{
  uint64_t v2 = sub_10054ADB0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "route freshness limit reached", buf, 2u);
  }

  uint64_t v3 = +[MKLocationManager sharedLocationManager];
  unsigned int v4 = [v3 isLastLocationStale];

  if (v4)
  {
    unint64_t v5 = sub_10054ADB0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "skipping time based refresh as the current location is stale", v8, 2u);
    }

    uint64_t v6 = *(void **)(a1 + 32);
    id WeakRetained = +[NSError errorWithDomain:kCLErrorDomain code:0 userInfo:0];
    [v6 _preparePeriodicRouteRefreshTimerWithError:WeakRetained];
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained refreshRoutesForced:1];
  }
}

void sub_10054C824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_10054C850(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_10054ADB0();
  id WeakRetained = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_ERROR, "Error occurred while waiting for a location update: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v9 = 138477827;
      id v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_INFO, "Got a location update: %{private}@; force refreshing routes now",
        (uint8_t *)&v9,
        0xCu);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained refreshRoutesForced:1];
  }
}

void sub_10054CFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10054CFC4(uint64_t a1, void *a2)
{
}

void sub_10054D540(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningUpdater");
  uint64_t v2 = (void *)qword_10160F048;
  qword_10160F048 = (uint64_t)v1;
}

void sub_10054DB1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = sub_1005768D4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412290;
    id v29 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Processing item source item: %@", buf, 0xCu);
  }

  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v5 = *(id *)(a1 + 32);
  id v6 = [v5 countByEnumeratingWithState:&v24 objects:v32 count:16];
  if (v6)
  {
    uint64_t v23 = a1;
    uint64_t v7 = *(void *)v25;
    while (2)
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v7) {
          objc_enumerationMutation(v5);
        }
        int v9 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        id v10 = sub_1005768D4();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138412290;
          id v29 = v9;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Checking against compound item: %@", buf, 0xCu);
        }

        uint64_t v11 = [v9 items];
        unsigned int v12 = [v11 containsObject:v3];

        if (v12)
        {
          double v15 = sub_1005768D4();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            double v16 = [v9 items];
            *(_DWORD *)long long buf = 138412290;
            id v29 = v16;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Found a match in items array: %@", buf, 0xCu);
          }
          uint64_t v17 = [v9 styleAttributes];
          id v6 = [v17 styleAttributes];

          uint64_t v18 = [v9 clientFeatureID];
          id v14 = [v18 clientFeatureID];

          id v19 = [v9 title];
          uint64_t v13 = [v19 value];

          goto LABEL_17;
        }
      }
      id v6 = [v5 countByEnumeratingWithState:&v24 objects:v32 count:16];
      if (v6) {
        continue;
      }
      break;
    }
    uint64_t v13 = 0;
    id v14 = 0;
LABEL_17:
    a1 = v23;
  }
  else
  {
    uint64_t v13 = 0;
    id v14 = 0;
  }

  id v20 = [*(id *)(a1 + 40) objectForKey:v3];
  int v21 = sub_1005768D4();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
  {
    char v22 = [v20 shortDescription];
    *(_DWORD *)long long buf = 138412547;
    id v29 = v6;
    __int16 v30 = 2113;
    uint64_t v31 = v22;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Applying custom attributes %@ to waypoint %{private}@", buf, 0x16u);
  }
  [v20 setStyleAttributes:v6];
  if ([v6 isCustomPOI])
  {
    [v20 setClientFeatureID:v14];
    if ([v13 length]) {
      [v20 setUserValuesName:v13];
    }
  }
}

void sub_10054E948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_sync_exit(v17);
  _Unwind_Resume(a1);
}

void sub_10054E988(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained setNeedsAddressCollection];
    id WeakRetained = v2;
  }
}

id sub_10054EF7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) collectAddresses];
}

void sub_10054F0E0(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v4 = [WeakRetained contactStore];

  if (v4)
  {
    id v5 = objc_alloc_init((Class)CNSaveRequest);
    [v5 addContact:*(void *)(a1 + 32) toContainerWithIdentifier:0];
    id v64 = 0;
    unsigned int v6 = [v4 executeSaveRequest:v5 error:&v64];
    unint64_t v7 = (unint64_t)v64;
    uint64_t v8 = sub_10008A498();
    int v9 = v8;
    if (v7) {
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
    }
    else {
      os_log_type_t v10 = OS_LOG_TYPE_INFO;
    }
    if (!os_log_type_enabled(v8, v10)) {
      goto LABEL_27;
    }
    unsigned int v56 = v6;
    id v11 = objc_loadWeakRetained(v2);
    id v61 = v2;
    if (!v11)
    {
      uint64_t v17 = @"<nil>";
LABEL_16:

      id v19 = v17;
      id v20 = *(id *)(a1 + 32);
      id v59 = v5;
      os_log_type_t type = v10;
      if (!v20)
      {
        long long v26 = v4;
        long long v25 = @"<nil>";
        id v2 = v61;
        goto LABEL_24;
      }
      unint64_t v57 = v7;
      int v21 = (objc_class *)objc_opt_class();
      char v22 = NSStringFromClass(v21);
      if (objc_opt_respondsToSelector())
      {
        uint64_t v23 = [v20 performSelector:"accessibilityIdentifier"];
        long long v24 = v23;
        if (v23 && ![v23 isEqualToString:v22])
        {
          long long v25 = +[NSString stringWithFormat:@"%@<%p, %@>", v22, v20, v24];

          goto LABEL_22;
        }
      }
      long long v25 = +[NSString stringWithFormat:@"%@<%p>", v22, v20];
LABEL_22:
      long long v26 = v4;

      id v2 = v61;
      unint64_t v7 = v57;
LABEL_24:

      long long v27 = @"NO";
      *(_DWORD *)long long buf = 138544130;
      uint64_t v66 = v19;
      unsigned int v6 = v56;
      if (v56) {
        long long v27 = @"YES";
      }
      __int16 v67 = 2114;
      id v68 = v25;
      __int16 v69 = 2114;
      id v70 = v27;
      __int16 v71 = 2114;
      unint64_t v72 = v7;
      CLLocationCoordinate2D v28 = v27;
      _os_log_impl((void *)&_mh_execute_header, v9, type, "[%{public}@] addressBookCreateMe addContact with %{public}@ (success: %{public}@, error: %{public}@)", buf, 0x2Au);

      id v5 = v59;
      unsigned int v4 = v26;
LABEL_27:

      if (!v6)
      {
        id v30 = 0;
        unint64_t v31 = 0;
LABEL_53:
        if (!(v7 | v31))
        {
          id v50 = objc_loadWeakRetained(v2);
          [v50 setNeedsAddressCollection];
        }
        uint64_t v51 = *(void *)(a1 + 40);
        if (v51)
        {
          if (v7) {
            unint64_t v52 = v7;
          }
          else {
            unint64_t v52 = v31;
          }
          (*(void (**)(uint64_t, id, unint64_t))(v51 + 16))(v51, v30, v52);
        }

        goto LABEL_61;
      }
      uint64_t v29 = *(void *)(a1 + 32);
      id v63 = 0;
      id v30 = [v4 setMeContact:v29 error:&v63];
      unint64_t v31 = (unint64_t)v63;
      id v32 = sub_10008A498();
      long long v33 = v32;
      if (v31) {
        int v34 = 16;
      }
      else {
        int v34 = 1;
      }
      if (!os_log_type_enabled(v32, (os_log_type_t)v34))
      {
LABEL_52:

        goto LABEL_53;
      }
      unint64_t typea = __PAIR64__(v30, v34);
      id v35 = objc_loadWeakRetained(v2);
      id v62 = v2;
      unint64_t v58 = v7;
      if (!v35)
      {
        id v40 = @"<nil>";
LABEL_41:

        CFStringRef v41 = v40;
        id v42 = *(id *)(a1 + 32);
        id v53 = v35;
        if (!v42)
        {
          double v47 = @"<nil>";
          id v2 = v62;
          goto LABEL_49;
        }
        id v60 = v5;
        CFStringRef v43 = (objc_class *)objc_opt_class();
        id v44 = NSStringFromClass(v43);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v45 = [v42 performSelector:"accessibilityIdentifier"];
          long long v46 = v45;
          if (v45 && ![v45 isEqualToString:v44])
          {
            double v47 = +[NSString stringWithFormat:@"%@<%p, %@>", v44, v42, v46, v35, typea];

            goto LABEL_47;
          }
        }
        double v47 = +[NSString stringWithFormat:@"%@<%p>", v44, v42];
LABEL_47:
        id v2 = v62;

        id v5 = v60;
LABEL_49:

        double v48 = @"NO";
        *(_DWORD *)long long buf = 138544130;
        uint64_t v66 = v41;
        id v30 = (id)HIDWORD(typea);
        if (HIDWORD(typea)) {
          double v48 = @"YES";
        }
        __int16 v67 = 2114;
        id v68 = v47;
        __int16 v69 = 2114;
        id v70 = v48;
        __int16 v71 = 2114;
        unint64_t v72 = v31;
        double v49 = v48;
        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)typea, "[%{public}@] addressBookCreateMe setMeContact with %{public}@ (success: %{public}@, error: %{public}@)", buf, 0x2Au);

        unint64_t v7 = v58;
        goto LABEL_52;
      }
      double v36 = (objc_class *)objc_opt_class();
      double v37 = NSStringFromClass(v36);
      if (objc_opt_respondsToSelector())
      {
        double v38 = [v35 performSelector:"accessibilityIdentifier"];
        CFStringRef v39 = v38;
        if (v38 && ![v38 isEqualToString:v37])
        {
          id v40 = +[NSString stringWithFormat:@"%@<%p, %@>", v37, v35, v39];

          goto LABEL_38;
        }
      }
      id v40 = +[NSString stringWithFormat:@"%@<%p>", v37, v35];
LABEL_38:

      goto LABEL_41;
    }
    unint64_t v12 = v7;
    uint64_t v13 = (objc_class *)objc_opt_class();
    id v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      double v15 = [v11 performSelector:"accessibilityIdentifier"];
      double v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        uint64_t v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v11, v16];

        goto LABEL_12;
      }
    }
    uint64_t v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v11];
LABEL_12:

    unint64_t v7 = v12;
    goto LABEL_16;
  }
  uint64_t v18 = *(void *)(a1 + 40);
  if (v18) {
    (*(void (**)(uint64_t, void, void))(v18 + 16))(v18, 0, 0);
  }
LABEL_61:
}

void sub_10054F850(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v4 = [WeakRetained contactStore];

  if (v4)
  {
    id v5 = objc_alloc_init((Class)CNSaveRequest);
    [v5 updateContact:*(void *)(a1 + 32)];
    id v35 = 0;
    unint64_t v6 = (unint64_t)[v4 executeSaveRequest:v5 error:&v35];
    id v7 = v35;
    uint64_t v8 = sub_10008A498();
    int v9 = v8;
    if (v7) {
      os_log_type_t v10 = OS_LOG_TYPE_ERROR;
    }
    else {
      os_log_type_t v10 = OS_LOG_TYPE_INFO;
    }
    if (!os_log_type_enabled(v8, v10))
    {
LABEL_27:

      if (!v7)
      {
        id v29 = objc_loadWeakRetained(v2);
        [v29 setNeedsAddressCollection];
      }
      uint64_t v30 = *(void *)(a1 + 40);
      if (v30) {
        (*(void (**)(uint64_t, unint64_t, id))(v30 + 16))(v30, v6, v7);
      }

      goto LABEL_32;
    }
    os_log_type_t type = v10;
    id v34 = v5;
    id v11 = objc_loadWeakRetained(v2);
    unint64_t v12 = &selRef__updateSortedAppStoreAppsForTransportType_;
    unsigned int v33 = v6;
    if (!v11)
    {
      uint64_t v17 = @"<nil>";
LABEL_16:

      id v19 = v17;
      id v20 = *(id *)(a1 + 32);
      unint64_t v31 = v2;
      if (!v20)
      {
        long long v26 = @"<nil>";
        goto LABEL_24;
      }
      int v21 = (objc_class *)objc_opt_class();
      char v22 = NSStringFromClass(v21);
      uint64_t v23 = v12[326];
      if (objc_opt_respondsToSelector())
      {
        long long v24 = [v20 performSelector:v23];
        long long v25 = v24;
        if (v24 && ![v24 isEqualToString:v22])
        {
          long long v26 = +[NSString stringWithFormat:@"%@<%p, %@>", v22, v20, v25];

          goto LABEL_22;
        }
      }
      long long v26 = +[NSString stringWithFormat:@"%@<%p>", v22, v20];
LABEL_22:

LABEL_24:
      long long v27 = @"NO";
      *(_DWORD *)long long buf = 138544130;
      double v37 = v19;
      unint64_t v6 = v33;
      if (v33) {
        long long v27 = @"YES";
      }
      __int16 v38 = 2114;
      CFStringRef v39 = v26;
      __int16 v40 = 2114;
      CFStringRef v41 = v27;
      __int16 v42 = 2114;
      id v43 = v7;
      CLLocationCoordinate2D v28 = v27;
      _os_log_impl((void *)&_mh_execute_header, v9, type, "[%{public}@] addressBookUpdateMe updateMe with %{public}@ (success: %{public}@, error: %{public}@)", buf, 0x2Au);

      id v5 = v34;
      id v2 = v31;
      goto LABEL_27;
    }
    uint64_t v13 = (objc_class *)objc_opt_class();
    id v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      double v15 = [v11 performSelector:"accessibilityIdentifier"];
      double v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        uint64_t v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v11, v16];

        goto LABEL_12;
      }
    }
    uint64_t v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v11];
LABEL_12:

    unint64_t v12 = &selRef__updateSortedAppStoreAppsForTransportType_;
    goto LABEL_16;
  }
  uint64_t v18 = *(void *)(a1 + 40);
  if (v18) {
    (*(void (**)(uint64_t, void, void))(v18 + 16))(v18, 0, 0);
  }
LABEL_32:
}

void sub_10054FD98(uint64_t a1)
{
  id v2 = sub_10008A498();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      uint64_t v8 = @"<nil>";
      goto LABEL_10;
    }
    unsigned int v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      unint64_t v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        uint64_t v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    uint64_t v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)long long buf = 138543362;
    id v11 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] collectAddress: posting DidUpdateAddresses notification", buf, 0xCu);
  }
  int v9 = +[NSNotificationCenter defaultCenter];
  [v9 postNotificationName:off_1015E5428 object:*(void *)(a1 + 32)];
}

void sub_100550524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10055054C(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

void sub_1005515B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005515F0(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

void sub_1005518BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1005518E0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = +[CNContactFormatter stringFromContact:a2 style:0];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  *a3 = 1;
}

void sub_100551BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100551BF0(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v5 = [a2 _maps_spokenNameForNavigation];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  *a3 = 1;
}

void sub_1005537E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 120));
  _Unwind_Resume(a1);
}

void sub_100553820(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained storeUpdated:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100553874(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    if (*((id *)WeakRetained + 5) == v3)
    {
      *((void *)WeakRetained + 5) = 0;
    }
    uint64_t v6 = sub_1000A31A8();
    if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
      goto LABEL_11;
    }
    id v7 = v5;
    uint64_t v8 = (objc_class *)objc_opt_class();
    int v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      os_log_type_t v10 = [v7 performSelector:"accessibilityIdentifier"];
      id v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        unint64_t v12 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_10;
      }
    }
    unint64_t v12 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_10:

    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138543875;
    int v21 = v12;
    __int16 v22 = 2113;
    uint64_t v23 = v13;
    __int16 v24 = 2113;
    uint64_t v25 = v14;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}@] ... will resolve contact %{private}@ address %{private}@ on background queue...", buf, 0x20u);

LABEL_11:
    id v15 = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v16 = *(void *)(a1 + 32);
    uint64_t v17 = *(void *)(a1 + 40);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100553AE4;
    void v18[3] = &unk_1012EE970;
    objc_copyWeak(&v19, (id *)(a1 + 48));
    [v15 _resolveContactIdentifier:v16 addressIdentifier:v17 completion:v18];

    objc_destroyWeak(&v19);
  }
}

void sub_100553AC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100553AE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100553BC0;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_100553BC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _handleResolvedAddress:*(void *)(a1 + 32) geocodedMapItem:*(void *)(a1 + 40)];
}

void sub_1005558CC(id a1)
{
  uint64_t v1 = +[NSMapTable strongToStrongObjectsMapTable];
  uint64_t v2 = (void *)qword_10160F078;
  qword_10160F078 = v1;
}

void sub_100555960(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = (void *)qword_10160F088;
  qword_10160F088 = v1;
}

void sub_1005559F4(id a1)
{
  uint64_t v1 = geo_dispatch_queue_create();
  uint64_t v2 = (void *)qword_10160F098;
  qword_10160F098 = v1;
}

void sub_100555D14(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_100555D34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateMapItemClientAttributes];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [WeakRetained geocodedMapItem];
  unsigned int v4 = [WeakRetained geocodingError];
  (*(void (**)(uint64_t, void *, void *))(v2 + 16))(v2, v3, v4);
}

void sub_100555DCC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained addressDictionary];
    uint64_t v6 = [v4 singleLineAddress];
    id v7 = (void *)v6;
    if (v5) {
      id v8 = v5;
    }
    else {
      id v8 = (void *)v6;
    }
    id v9 = v8;
    if (!v9)
    {
      uint64_t v13 = *(void **)(a1 + 40);
      if (v13)
      {
        v49[0] = _NSConcreteStackBlock;
        v49[1] = 3221225472;
        v49[2] = sub_1005565C8;
        v49[3] = &unk_1012E6EA8;
        id v50 = v13;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v49);
        id v11 = v50;
LABEL_44:

        goto LABEL_45;
      }
    }
    id v10 = [(id)objc_opt_class() _geocodedMapItemsByAddress];
    id v11 = [v10 objectForKey:v5];
    if (v11)
    {

      goto LABEL_13;
    }
    uint64_t v14 = [(id)objc_opt_class() _geocodedMapItemsByAddress];
    id v11 = [v14 objectForKey:v7];

    if (v11)
    {
LABEL_13:
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 120), v11);
      id v15 = *(void **)(*(void *)(a1 + 32) + 128);
      *(void *)(*(void *)(a1 + 32) + 12_Block_object_dispose(&a9, 8) = 0;

      [v4 _updateMapItemClientAttributes];
      if (*(void *)(a1 + 40))
      {
        v46[0] = _NSConcreteStackBlock;
        v46[1] = 3221225472;
        v46[2] = sub_100556670;
        void v46[3] = &unk_1012E9950;
        objc_copyWeak(&v48, v2);
        id v47 = *(id *)(a1 + 40);
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v46);

        objc_destroyWeak(&v48);
      }
      goto LABEL_44;
    }
    uint64_t v16 = *(void **)(a1 + 40);
    if (v16)
    {
      id v17 = [v16 copy];
      uint64_t v18 = [(id)objc_opt_class() _completionsByAddress];
      id v19 = [v18 objectForKeyedSubscript:v9];

      if (v19)
      {
        id v20 = objc_retainBlock(v17);
        [v19 addObject:v20];

LABEL_43:
        id v11 = 0;
        goto LABEL_44;
      }
      id v21 = objc_retainBlock(v17);
      __int16 v22 = +[NSMutableArray arrayWithObject:v21];

      uint64_t v23 = [(id)objc_opt_class() _completionsByAddress];
      [v23 setObject:v22 forKeyedSubscript:v9];
    }
    __int16 v24 = +[MKMapService sharedService];
    __int16 v42 = [v24 defaultTraits];

    uint64_t v25 = sub_1000A31A8();
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_INFO);
    if (v5)
    {
      if (!v26)
      {
LABEL_38:

        id v37 = [objc_alloc((Class)GEOAddress) initWithAddressDictionary:v5];
        __int16 v38 = +[MKMapService sharedService];
        CFStringRef v39 = [v38 ticketForForwardGeocodeAddress:v37 traits:v42];

LABEL_42:
        v43[0] = _NSConcreteStackBlock;
        v43[1] = 3221225472;
        v43[2] = sub_100556700;
        v43[3] = &unk_1012EEA48;
        objc_copyWeak(&v45, v2);
        void v43[4] = *(void *)(a1 + 32);
        id v44 = v9;
        [v39 submitWithRefinedHandler:v43 networkActivity:0];

        objc_destroyWeak(&v45);
        goto LABEL_43;
      }
      id v27 = objc_loadWeakRetained(v2);
      if (!v27)
      {
        unint64_t v31 = @"<nil>";
        goto LABEL_37;
      }
      CLLocationCoordinate2D v28 = (objc_class *)objc_opt_class();
      __int16 v40 = NSStringFromClass(v28);
      if (objc_opt_respondsToSelector())
      {
        id v29 = [v27 performSelector:"accessibilityIdentifier"];
        uint64_t v30 = v29;
        if (v29 && ![v29 isEqualToString:v40])
        {
          unint64_t v31 = +[NSString stringWithFormat:@"%@<%p, %@>", v40, v27, v30];

          goto LABEL_27;
        }
      }
      unint64_t v31 = +[NSString stringWithFormat:@"%@<%p>", v40, v27];
LABEL_27:

LABEL_37:
      *(_DWORD *)long long buf = 138543619;
      uint64_t v54 = v31;
      __int16 v55 = 2113;
      unsigned int v56 = v5;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "[%{public}@] will forward geocode address with dictionary %{private}@...", buf, 0x16u);

      goto LABEL_38;
    }
    if (!v26)
    {
LABEL_41:

      id v37 = +[MKMapService sharedService];
      CFStringRef v39 = [v37 ticketForForwardGeocodeString:v7 traits:v42];
      goto LABEL_42;
    }
    id v32 = objc_loadWeakRetained(v2);
    if (!v32)
    {
      double v36 = @"<nil>";
      goto LABEL_40;
    }
    unsigned int v33 = (objc_class *)objc_opt_class();
    CFStringRef v41 = NSStringFromClass(v33);
    if (objc_opt_respondsToSelector())
    {
      id v34 = [v32 performSelector:"accessibilityIdentifier"];
      id v35 = v34;
      if (v34 && ![v34 isEqualToString:v41])
      {
        double v36 = +[NSString stringWithFormat:@"%@<%p, %@>", v41, v32, v35];

        goto LABEL_35;
      }
    }
    double v36 = +[NSString stringWithFormat:@"%@<%p>", v41, v32];
LABEL_35:

LABEL_40:
    *(_DWORD *)long long buf = 138543619;
    uint64_t v54 = v36;
    __int16 v55 = 2113;
    unsigned int v56 = v7;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "[%{public}@] will forward geocode address with string \"%{private}@\"...", buf, 0x16u);

    goto LABEL_41;
  }
  id v12 = *(void **)(a1 + 40);
  if (v12)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100556520;
    block[3] = &unk_1012E6EA8;
    id v52 = v12;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    id v5 = v52;
LABEL_45:
  }
}

void sub_100556504(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100556520(uint64_t a1)
{
  uint64_t v2 = sub_1000A31A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "AddressBookAddress was deallocated while geocoding", v4, 2u);
  }

  id v3 = +[NSError GEOErrorWithCode:-13 reason:@"No AddressBookAddress object available anymore"];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005565C8(uint64_t a1)
{
  uint64_t v2 = sub_1000A31A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "cannot forward geocode without addressDictionary or addressString", v4, 2u);
  }

  id v3 = +[NSError GEOErrorWithCode:-13 reason:@"No addressDictionary or addressString available."];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100556670(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [WeakRetained geocodedMapItem];
  unsigned int v4 = [WeakRetained geocodingError];
  (*(void (**)(uint64_t, void *, void *))(v2 + 16))(v2, v3, v4);
}

void sub_100556700(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v9 = [v7 firstObject];

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 120), v9);
  [WeakRetained _updateMapItemClientAttributes];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 144), *(id *)(*(void *)(a1 + 32) + 120));
  id v10 = [(id)objc_opt_class() _completionQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100556878;
  block[3] = &unk_1012EEA20;
  objc_copyWeak(&v18, (id *)(a1 + 48));
  id v11 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v15 = v11;
  id v16 = v9;
  id v17 = v6;
  id v12 = v6;
  id v13 = v9;
  dispatch_async(v10, block);

  objc_destroyWeak(&v18);
}

void sub_100556878(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (*(void *)(*(void *)(a1 + 32) + 120))
  {
    unsigned int v4 = sub_1000A31A8();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
LABEL_12:

      id v12 = [(id)objc_opt_class() _geocodedMapItemsByAddress];
      [v12 setObject:*(void *)(*(void *)(a1 + 32) + 120) forKey:*(void *)(a1 + 40)];

      goto LABEL_13;
    }
    id v5 = objc_loadWeakRetained(v2);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_11;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_9;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_9:

LABEL_11:
    uint64_t v11 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138543619;
    uint64_t v23 = v10;
    __int16 v24 = 2113;
    uint64_t v25 = v11;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] caching geocoded map item for key %{private}@", buf, 0x16u);

    goto LABEL_12;
  }
LABEL_13:
  id v13 = [(id)objc_opt_class() _completionsByAddress];
  uint64_t v14 = [v13 objectForKeyedSubscript:*(void *)(a1 + 40)];

  id v15 = [(id)objc_opt_class() _completionsByAddress];
  [v15 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100556B68;
  block[3] = &unk_1012E92F0;
  objc_copyWeak(&v21, v2);
  id v18 = v14;
  id v19 = *(id *)(a1 + 48);
  id v20 = *(id *)(a1 + 56);
  id v16 = v14;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v21);
}

void sub_100556B68(uint64_t a1)
{
  uint64_t v2 = sub_1000A31A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_loadWeakRetained((id *)(a1 + 56));
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    unsigned int v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 32) count];
    *(_DWORD *)long long buf = 138543618;
    id v21 = v8;
    __int16 v22 = 2048;
    id v23 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] calling back to %lu pending completion handlers", buf, 0x16u);
  }
  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v10 = *(id *)(a1 + 32);
  id v11 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v13) {
          objc_enumerationMutation(v10);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v15 + 1) + 8 * i) + 16))();
      }
      id v12 = [v10 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v12);
  }
}

NSDictionary *__cdecl sub_100557D70(id a1, NSDictionary *a2)
{
  id v2 = [(NSDictionary *)a2 mutableCopy];
  id v3 = +[UIFont preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v2 setObject:v3 forKeyedSubscript:NSFontAttributeName];

  id v4 = [v2 copy];

  return (NSDictionary *)v4;
}

void sub_100558378(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = sub_100068A0C();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
  if (WeakRetained)
  {
    if (v5)
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "XPC connection interrupted, checkinForRoutePlanning on connection: %@", (uint8_t *)&v6, 0xCu);
    }

    id v4 = [WeakRetained[2] remoteObjectProxy];
    [v4 checkinForRoutePlanning];
  }
  else if (v5)
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "XPC connection interrupted, NanoCompanionController is gone: %@", (uint8_t *)&v6, 0xCu);
  }
}

void sub_100558800(uint64_t a1)
{
  id v2 = +[UIApplication sharedMapsDelegate];
  id v3 = [v2 appCoordinator];
  id v4 = [v3 baseActionCoordinator];

  [v4 viewController:0 doDirectionItem:*(void *)(a1 + 32) withUserInfo:*(void *)(a1 + 40)];
}

id sub_100559050(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return [(GEOComposedRoute *)a2 uniqueRouteID];
}

void sub_10055937C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1005593A8(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = [v7 uniqueRouteID];
  unsigned int v9 = [v8 isEqual:a1[4]];

  if (v9)
  {
    uint64_t v10 = sub_100068A0C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = [v7 transportType];
      if (v11 >= 7)
      {
        uint64_t v12 = +[NSString stringWithFormat:@"(unknown: %i)", v11];
      }
      else
      {
        uint64_t v12 = *(&off_1012EED90 + (int)v11);
      }
      uint64_t v13 = [v7 uniqueRouteID];
      *(_DWORD *)long long buf = 138412802;
      uint64_t v15 = v12;
      __int16 v16 = 2112;
      long long v17 = v13;
      __int16 v18 = 2048;
      uint64_t v19 = a3;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Selecting %@ route %@ at index %lu", buf, 0x20u);
    }
    *(void *)(*(void *)(a1[5] + 8) + 24) = a3;
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_100559870(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 96) currentSession];

  if (v2)
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 96);
    [v3 popUntil:&stru_1012EEB98];
  }
}

BOOL sub_1005598D8(id a1, MapsSession *a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char v3 = 0;
  }
  else
  {
    objc_opt_class();
    char v3 = objc_opt_isKindOfClass() ^ 1;
  }

  return v3 & 1;
}

id sub_100559C3C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 96) popUntil:&stru_1012EEBB8];
}

BOOL sub_100559C50(id a1, MapsSession *a2)
{
  id v2 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    char v3 = 0;
  }
  else
  {
    objc_opt_class();
    char v3 = objc_opt_isKindOfClass() ^ 1;
  }

  return v3 & 1;
}

void sub_10055A2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

void sub_10055A308(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 routes];
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  int v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  id v10 = [v3 currentRoute];

  uint64_t v7 = [v10 uniqueRouteID];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned int v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_10055A39C(uint64_t a1)
{
  uint64_t v2 = _geo_NSErrorXPCSafeRepresentationCopy();
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

GEOComposedRoute *__cdecl sub_10055A3E8(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = v4;
  if (a3 <= 4) {
    int v6 = v4;
  }
  else {
    int v6 = 0;
  }

  return v6;
}

void sub_10055A7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
}

void sub_10055A804(uint64_t a1, void *a2)
{
}

id sub_10055A818(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 uniqueRouteID];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_10055A8F8(uint64_t a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || ([*(id *)(a1 + 40) routePlanningSession],
        uint64_t v2 = objc_claimAutoreleasedReturnValue(),
        v2,
        !v2))
  {
    id v4 = sub_100068A0C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v9 = 138412290;
      uint64_t v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Observed session change.  Will not teardown, session is: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    uint64_t v3 = sub_100068A0C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Observed session change.  Will teardown NanoMaps' route planning", (uint8_t *)&v9, 2u);
    }

    [*(id *)(a1 + 40) _clearRoutePreviews];
  }
  id v6 = *(id *)(a1 + 32);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = v7;

  [*(id *)(a1 + 40) setRoutePlanningSession:v8];
}

void sub_10055AC18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2 == 2)
  {
    [*(id *)(a1 + 32) setDestinationName:0];
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 64);
    *(void *)(v4 + 64) = 0;
  }
  else if (v2 == 1)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    _[v3 _updateDestinationName];
  }
}

id sub_10055AD38(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) isSuccess];
  if (result)
  {
    uint64_t v3 = *(void **)(a1 + 40);
    return _[v3 _updateDestinationName];
  }
  return result;
}

void sub_10055AE1C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) configuration];
  uint64_t v3 = [v2 companionContext];
  [*(id *)(*(void *)(a1 + 32) + 56) setCompanionRouteContext:v3];

  uint64_t v4 = (char *)[*(id *)(a1 + 40) currentTransportType];
  if ((unint64_t)(v4 - 1) > 4) {
    uint64_t v5 = 4;
  }
  else {
    uint64_t v5 = dword_100F6FCA8[(void)(v4 - 1)];
  }
  [*(id *)(*(void *)(a1 + 32) + 56) setTransportType:v5];
  id v6 = *(void **)(a1 + 32);
  id v7 = [*(id *)(a1 + 40) currentRouteCollectionResult];
  [v6 _updateResponseWithRouteCollectionResult:v7];
}

id sub_10055AFAC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 56);
  id result = [*(id *)(a1 + 32) currentTransportType];
  if (v2 == result)
  {
    uint64_t v4 = *(void **)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    return [v4 _updateResponseWithRouteCollectionResult:v5];
  }
  return result;
}

id sub_10055B0C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateResponseWithRoutesResult:*(void *)(a1 + 40) routeUpdates:*(void *)(a1 + 48)];
}

void sub_10055B170(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 80) containsObject:*(void *)(a1 + 40)])
  {
    id v2 = [*(id *)(*(void *)(a1 + 32) + 64) snapshot];
    uint64_t v3 = [v2 deltaFromSnapshot:*(void *)(*(void *)(a1 + 32) + 72)];
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 72), v2);
    unsigned __int8 v4 = [v3 routeRevisionsChanged];
    uint64_t v5 = sub_100068A0C();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
    if (v4)
    {
      if (v6)
      {
        id v7 = [*(id *)(a1 + 40) uniqueRouteID];
        int v9 = 138543362;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Route %{public}@ updated clustered ride selections, will trigger response update", (uint8_t *)&v9, 0xCu);
      }
      [*(id *)(a1 + 32) _sendUpdatedResponse];
    }
    else
    {
      if (v6)
      {
        id v8 = [*(id *)(a1 + 40) uniqueRouteID];
        int v9 = 138543362;
        uint64_t v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Route %{public}@ updated clustered ride selections, but revision IDs didn't change from last sent to watch", (uint8_t *)&v9, 0xCu);
      }
    }
  }
}

void sub_10055B664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10055B690(uint64_t a1)
{
  id v2 = sub_100068A0C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    unsigned __int8 v4 = [WeakRetained sessionContext];
    uint64_t v5 = [v4 simpleDescription];
    int v6 = 138412290;
    id v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "-_sendUpdatedResponse completed (context:%@)", (uint8_t *)&v6, 0xCu);
  }
}

void sub_10055BCC4(uint64_t a1, void *a2, void *a3)
{
  id v18 = a2;
  id v5 = a3;
  int v6 = v5;
  if (v5)
  {
    id v7 = v5;
  }
  else
  {
    id v8 = [v18 waypointRequest];
    int v9 = [v18 waypointPlaceholder];
    uint64_t v10 = [v9 displayableMarker];

    if (([v8 isCurrentLocation] & 1) != 0 || !v10)
    {
      [v8 coordinate];
      id v14 = [v8 isCurrentLocation];
      id v15 = objc_alloc((Class)GEOLocation);
      GEOLocationCoordinate2DFromCLLocationCoordinate2D();
      id v12 = [v15 initWithGEOCoordinate:v14];
      id v7 = [objc_alloc((Class)GEOComposedWaypoint) initWithLocation:v12 isCurrentLocation:v14];
    }
    else
    {
      id v11 = objc_alloc((Class)GEOComposedWaypoint);
      id v12 = [v10 mapItem];
      uint64_t v13 = [v12 _geoMapItem];
      id v7 = [v11 initWithMapItem:v13];
    }
  }
  id v16 = [objc_alloc((Class)GEOCompanionWaypoint) initWithComposedWaypoint:v7];
  if (([v16 isCurrentLocation] & 1) == 0)
  {
    long long v17 = +[RoutePlanningSession mostAppropriateNameForWaypointWithRequest:v18 composedWaypoint:v7];
    [v16 setSearchString:v17];
  }
  [*(id *)(a1 + 32) addObject:v16];
}

void sub_10055C1B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10055C1D0(uint64_t a1, void *a2)
{
}

void sub_10055C640(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mapsActivityDelegate];
  char v3 = objc_opt_respondsToSelector();

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) mapsActivityDelegate];
    [v4 mapsActivityViewControllerPrint:*(void *)(a1 + 32)];
  }
}

void sub_10055CD0C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsActivityViewController");
  id v2 = (void *)qword_10160F0D0;
  qword_10160F0D0 = (uint64_t)v1;
}

id sub_10055D158()
{
  if (qword_10160F0E8 != -1) {
    dispatch_once(&qword_10160F0E8, &stru_1012EEDE8);
  }
  uint64_t v0 = (void *)qword_10160F0E0;

  return v0;
}

void sub_10055D694(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionHistoricalLocationAccuracyMonitor");
  id v2 = (void *)qword_10160F0E0;
  qword_10160F0E0 = (uint64_t)v1;
}

void sub_10055DC24(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 120) = 2;
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PPTTest_GuidesHome_DidDisplaySections" object:*(void *)(a1 + 32)];
}

uint64_t sub_10055DD74(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 120) = 2;
  return result;
}

void sub_10055DF14(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

id *sub_10055DF3C(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = a1 + 5;
  id WeakRetained = objc_loadWeakRetained(a1 + 5);
  int v9 = [WeakRetained logicController];
  uint64_t v10 = [v9 sectionAtIndex:[v6 section]];

  if (v10)
  {
    [v10 configuration];

    switch((uint64_t)v32)
    {
      case 0:
        goto LABEL_5;
      case 1:
        id v11 = CollectionsFilterCell;
        goto LABEL_11;
      case 2:
        id v11 = (__objc2_class *)MKPlaceCompactCollectionCell;
        goto LABEL_11;
      case 3:
        id v11 = (__objc2_class *)MKPlaceCollectionCell;
        goto LABEL_11;
      case 4:
      case 6:
        id v11 = PlaceCollectionListCell;
LABEL_11:
        id v20 = [(__objc2_class *)v11 reuseIdentifier];
        a1 = [v5 dequeueReusableCellWithReuseIdentifier:v20 forIndexPath:v6];

        id v21 = objc_loadWeakRetained(v7);
        __int16 v22 = [v21 logicController];
        long long v17 = [v22 itemsForSectionAtIndex:[v6 section]];

        id v23 = [v17 objectAtIndex:[v6 item]];
        [a1 configureWithModel:v23];

        goto LABEL_12;
      case 5:
        uint64_t v25 = +[TwoLineCollectionViewListCell identifier];
        a1 = [v5 dequeueReusableCellWithReuseIdentifier:v25 forIndexPath:v6];

        id v26 = objc_loadWeakRetained(v7);
        id v27 = [v26 logicController];
        long long v17 = [v27 itemsForSectionAtIndex:[v6 section]];

        CLLocationCoordinate2D v28 = [v17 objectAtIndex:[v6 item]];
        [a1 setViewModel:v28];

        [a1 updateLeadingSpace:0.0];
        goto LABEL_12;
      case 7:
        id v29 = [a1[4] logicController];
        uint64_t v30 = [v29 itemsForSectionAtIndex:[v6 section]];
        long long v17 = [v30 firstObject];

        a1 = [v5 dequeueReusableCellWithReuseIdentifier:v17 forIndexPath:v6];
        [a1 startedLoadingBatch];
        goto LABEL_12;
      default:
        goto LABEL_13;
    }
  }
  long long v31 = 0u;
  long long v32 = 0u;
LABEL_5:
  id v12 = +[GuidesHomeHeaderCell reuseIdentifier];
  uint64_t v13 = [v5 dequeueReusableCellWithReuseIdentifier:v12 forIndexPath:v6];
  [a1[4] setHeaderCell:v13];

  id v14 = objc_loadWeakRetained(a1 + 5);
  id v15 = [v14 logicController];
  id v16 = [v15 itemsForSectionAtIndex:[v6 section]];
  long long v17 = [v16 firstObject];

  if (v17)
  {
    id v18 = [a1[4] headerCell];
    uint64_t v19 = [a1[4] routingDelegate];
    [v18 configureWithGuidesHomeHeaderViewModel:v17 delegate:v19];
  }
  a1 = [a1[4] headerCell];
LABEL_12:

LABEL_13:

  return a1;
}

void sub_10055E478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10055E49C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v12 = [WeakRetained logicController];
  uint64_t v13 = [v12 allSections];
  id v14 = [v13 objectAtIndex:[v9 section]];

  id v15 = [v14 sectionTitle];
  if (v15)
  {
    id v16 = +[GuidesGenericSectionHeader reuseIdentifier];
    unsigned int v17 = [v8 isEqualToString:v16];

    if (v17)
    {
      id v31 = v7;
      id v18 = objc_loadWeakRetained((id *)(a1 + 40));
      uint64_t v19 = [v18 collectionView];
      id v20 = +[GuidesGenericSectionHeader reuseIdentifier];
      id v21 = +[GuidesGenericSectionHeader reuseIdentifier];
      id v15 = [v19 dequeueReusableSupplementaryViewOfKind:v20 withReuseIdentifier:v21 forIndexPath:v9];

      id v22 = objc_alloc((Class)NSAttributedString);
      id v23 = [v14 sectionTitle];
      id v24 = [v22 initWithString:v23 attributes:*(void *)(a1 + 32)];

      if ([v14 kind] == (id)2
        && (id v25 = objc_loadWeakRetained(v10),
            [v25 apiController],
            id v26 = objc_claimAutoreleasedReturnValue(),
            unsigned __int8 v27 = [v26 isCuratedGuidesHome],
            v26,
            v25,
            (v27 & 1) == 0))
      {
        CLLocationCoordinate2D v28 = +[NSBundle mainBundle];
        id v29 = [v28 localizedStringForKey:@"More [City Guides Section]" value:@"localized string not found" table:0];
        v32[0] = _NSConcreteStackBlock;
        v32[1] = 3221225472;
        void v32[2] = sub_10055E778;
        v32[3] = &unk_1012E6708;
        objc_copyWeak(&v33, v10);
        [v15 configureWithTitle:v24 actionButtonTitle:v29 actionHandler:v32];

        objc_destroyWeak(&v33);
      }
      else
      {
        [v15 configureWithTitle:v24, v31];
      }

      id v7 = v31;
    }
    else
    {
      id v15 = 0;
    }
  }

  return v15;
}

void sub_10055E764(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10055E778(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  char v3 = [WeakRetained analyticsManager];
  [v3 guidesHomeCityGuidesMoreButtonTapped];

  id v5 = objc_loadWeakRetained(v1);
  id v4 = [v5 routingDelegate];
  [v4 routeToCitySelector];
}

void sub_10055E8E4(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v6 = a2;
  id v8 = [v5 logicController];
  id v7 = [v8 itemsForSectionAtIndex:a3];
  [v4 appendItemsWithIdentifiers:v7 intoSectionWithIdentifier:v6];
}

void sub_10055EE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10055EE54(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = v7;
  if (v7)
  {
    [v7 configuration];
    uint64_t v9 = v11;

    if (v9 == 1)
    {
      *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a3;
      *a4 = 1;
    }
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
}

void sub_10055F468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10055F480(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = v7;
  if (v7)
  {
    [v7 configuration];
    uint64_t v9 = v15;

    if (v9 == 1)
    {
      long long v10 = [*(id *)(a1 + 32) logicController];
      uint64_t v11 = [v10 itemsForSectionAtIndex:a3];
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
      uint64_t v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;

      *a4 = 1;
    }
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
}

void sub_10055F7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10055F804(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained filterDataFetchFinished];
    id WeakRetained = v2;
  }
}

void sub_10055FD04(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (v5)
  {
    [v5 configuration];
    uint64_t v7 = v12;

    if (v7 == 3)
    {
      id v8 = *(void **)(a1 + 32);
      uint64_t v9 = [*(id *)(a1 + 40) logicController];
      long long v10 = [v9 itemsForSectionAtIndex:a3];
      [v8 addObjectsFromArray:v10];
    }
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
}

void sub_10055FEC8(id *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 kind] == (id)6)
  {
    id v8 = [a1[4] itemIdentifiersInSectionWithIdentifier:v7];
    uint64_t v9 = [a1[5] logicController];
    long long v10 = [v9 itemsForSectionAtIndex:a3];

    long long v11 = [v10 subarrayWithRange:[v8 count], [a1[6] count]];
    [a1[4] appendItemsWithIdentifiers:v11 intoSectionWithIdentifier:v7];
    id v12 = a1[4];
    id v15 = v7;
    uint64_t v13 = +[NSArray arrayWithObjects:&v15 count:1];
    [v12 reloadSectionsWithIdentifiers:v13];

    long long v14 = [a1[5] dataSource];
    [v14 applySnapshot:a1[4] animatingDifferences:0];

    *a4 = 1;
  }
}

void sub_100560D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    char v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_100561048(id a1)
{
  uint64_t v1 = +[NSOrderedSet orderedSetWithObject:&OBJC_PROTOCOL___ChromeNavigationDisplayDelegate];
  id v2 = (void *)qword_10160F0F0;
  qword_10160F0F0 = v1;
}

id sub_10056123C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

MapsAppTest *__cdecl sub_100561F08(id a1, NSString *a2, MapsAppTesting *a3, NSDictionary *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  if ([(NSString *)v6 rangeOfString:@"rpt"] == 0)
  {
    uint64_t v9 = off_1012D3DA0;
    goto LABEL_11;
  }
  if ([(NSString *)v6 rangeOfString:@"lookAround"] == 0)
  {
    uint64_t v9 = off_1012D3D48;
    goto LABEL_11;
  }
  if ([(NSString *)v6 rangeOfString:@"searchHome"] == 0)
  {
    uint64_t v9 = off_1012D3E18;
    goto LABEL_11;
  }
  if ([(NSString *)v6 rangeOfString:@"placecard"] == 0)
  {
    uint64_t v9 = off_1012D3D60;
    goto LABEL_11;
  }
  if ([(NSString *)v6 hasPrefix:@"search"])
  {
    uint64_t v9 = off_1012D3E10;
LABEL_11:
    id v10 = [objc_alloc(*v9) initWithApplication:v7 testName:v6 options:v8];
    goto LABEL_12;
  }
  id v10 = 0;
LABEL_12:

  return (MapsAppTest *)v10;
}

void sub_100562974(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) testName];
  unsigned int v3 = [v2 hasPrefix:@"lookAroundBrowse"];

  if (v3)
  {
    id v4 = sub_1005764AC();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[self runBrowseTest]", buf, 2u);
    }

    [*(id *)(a1 + 32) runBrowseTest];
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) testName];
    unsigned int v6 = [v5 hasPrefix:@"lookAroundEnter"];

    if (v6)
    {
      id v7 = sub_1005764AC();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)unsigned __int8 v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[self runEnterTest]", v27, 2u);
      }

      [*(id *)(a1 + 32) runEnterTest];
    }
    else
    {
      id v8 = [*(id *)(a1 + 32) testName];
      unsigned int v9 = [v8 hasPrefix:@"lookAroundExplore"];

      if (v9)
      {
        id v10 = sub_1005764AC();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)id v26 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "[self runExploreTest]", v26, 2u);
        }

        [*(id *)(a1 + 32) runExploreTest];
      }
      else
      {
        long long v11 = [*(id *)(a1 + 32) testName];
        unsigned int v12 = [v11 hasPrefix:@"lookAroundNav"];

        uint64_t v13 = *(void **)(a1 + 32);
        if (v12)
        {
          _[v13 runNavTest];
        }
        else
        {
          long long v14 = [v13 testName];
          unsigned int v15 = [v14 hasPrefix:@"lookAroundZoom"];

          id v16 = *(void **)(a1 + 32);
          if (v15)
          {
            _[v16 runZoomTest];
          }
          else
          {
            unsigned int v17 = [v16 testName];
            unsigned int v18 = [v17 hasPrefix:@"lookAroundPan"];

            uint64_t v19 = *(void **)(a1 + 32);
            if (v18)
            {
              _[v19 runPanTest];
            }
            else
            {
              id v20 = [v19 testName];
              unsigned int v21 = [v20 hasPrefix:@"lookAroundExit"];

              id v22 = *(void **)(a1 + 32);
              if (v21)
              {
                _[v22 runExitTest];
              }
              else
              {
                id v23 = [v22 testName];
                unsigned int v24 = [v23 hasPrefix:@"lookAroundPlacecardEnterNavExit"];

                if (v24)
                {
                  id v25 = *(void **)(a1 + 32);
                  _[v25 runEnterExploreNavExitTest];
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100563018(uint64_t a1)
{
  id v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received MKLookAroundViewDidBecomeAdequatelyDrawnNotification", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100563148(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100563238(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 userInfo];
  id v4 = [v3 objectForKeyedSubscript:@"PPTLookAroundChromeOverlayLookAroundViewUserInfoKey"];

  id v5 = [v4 mapItem];
  unsigned int v6 = v5;
  if (v4
    && (id v7 = *(void **)(a1 + 32),
        [v5 name],
        id v8 = objc_claimAutoreleasedReturnValue(),
        LODWORD(v7) = [v7 containsString:v8],
        v8,
        v7))
  {
    unsigned int v9 = sub_1005764AC();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      id v10 = (objc_class *)objc_opt_class();
      long long v11 = NSStringFromClass(v10);
      unsigned int v12 = (objc_class *)objc_opt_class();
      uint64_t v13 = NSStringFromClass(v12);
      long long v14 = [v6 name];
      int v16 = 138413314;
      unsigned int v17 = v11;
      __int16 v18 = 2048;
      uint64_t v19 = v4;
      __int16 v20 = 2112;
      unsigned int v21 = v13;
      __int16 v22 = 2048;
      id v23 = v6;
      __int16 v24 = 2112;
      id v25 = v14;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Received PPTLookAroundChromeOverlayDidShowLookAroundPreviewNotificationName lookAroundView=<%@:%p>, mapItem=<%@:%p> (\"%@\")", (uint8_t *)&v16, 0x34u);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    if (v15) {
      (*(void (**)(uint64_t, void *, void *))(v15 + 16))(v15, v4, v6);
    }
  }
  else
  {
    [*(id *)(a1 + 40) addObserverWithSearchString:*(void *)(a1 + 32) forDidShowPreviewBlock:*(void *)(a1 + 48)];
  }
}

void sub_10056353C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1005764AC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Received SearchSessionDidChangeSearchResultsNotification", buf, 2u);
  }

  id v5 = [v3 object];
  unsigned int v6 = v5;
  if (v5)
  {
    id v7 = [v5 searchInfo];
    id v8 = [v7 results];
    id v9 = [v8 copy];

    id v10 = [v9 firstObject];
    if ((unint64_t)[v9 count] >= 2)
    {

      long long v23 = 0u;
      long long v24 = 0u;
      long long v21 = 0u;
      long long v22 = 0u;
      id v11 = v9;
      id v10 = [v11 countByEnumeratingWithState:&v21 objects:v26 count:16];
      if (v10)
      {
        id v19 = v9;
        id v20 = v3;
        uint64_t v12 = *(void *)v22;
        while (2)
        {
          for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v22 != v12) {
              objc_enumerationMutation(v11);
            }
            long long v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
            uint64_t v15 = [v14 mapItem:v19, v20, v21];
            int v16 = [v15 _shortAddress];
            unsigned int v17 = [v16 isEqualToString:*(void *)(a1 + 40)];

            if (v17)
            {
              id v10 = v14;

              goto LABEL_16;
            }
          }
          id v10 = [v11 countByEnumeratingWithState:&v21 objects:v26 count:16];
          if (v10) {
            continue;
          }
          break;
        }
LABEL_16:
        id v9 = v19;
        id v3 = v20;
      }
    }
    __int16 v18 = *(void **)(a1 + 32);
    if (v10)
    {
      [v18 selectSearchResult:v10];
      [*(id *)(a1 + 32) addObserverWithSearchString:*(void *)(a1 + 48) forDidShowPreviewBlock:*(void *)(a1 + 56)];
    }
    else
    {
      [v18 failedTest];
    }
  }
  else
  {
    [*(id *)(a1 + 32) failedTest];
  }
}

void sub_100563824(uint64_t a1)
{
  id v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received MapsPinsDroppedForSearchResultsNotification", v4, 2u);
  }

  id v3 = [*(id *)(a1 + 32) testCoordinator];
  [v3 pptTestPresentPlaceCardForSearchResult:*(void *)(a1 + 40) animated:1];
}

void sub_100563984(uint64_t a1)
{
  id v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received MKLookAroundViewWillMoveToStorefrontNotification", buf, 2u);
  }

  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    (*(void (**)(void))(v3 + 16))();
  }
  uint64_t v4 = MKLookAroundViewDidMoveToStorefrontNotification;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100563A8C;
  v5[3] = &unk_1012EEF90;
  id v6 = *(id *)(a1 + 40);
  +[PPTNotificationCenter addOnceObserverForName:v4 object:0 usingBlock:v5];
}

uint64_t sub_100563A8C(uint64_t a1)
{
  id v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received MKLookAroundViewDidMoveToStorefrontNotification", v4, 2u);
  }

  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100563C4C(uint64_t a1)
{
  id v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received LookAroundContainerViewControllerDidAppearNotification", buf, 2u);
  }

  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100563D44;
  v5[3] = &unk_1012E80F0;
  void v5[4] = v4;
  id v6 = v3;
  id v7 = *(id *)(a1 + 48);
  [v4 onLookAroundView:v6 didBecomeAdequatelyDrawnCallback:v5];
}

void sub_100563D44(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100563DD4;
  v3[3] = &unk_1012E6EA8;
  id v4 = *(id *)(a1 + 48);
  [v1 onLookAroundView:v2 didCompletionPostTransitionAnimation:v3];
}

uint64_t sub_100563DD4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100563F28(uint64_t a1)
{
  uint64_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Received PPTLookAroundContainerViewControllerDidTransitionToFullscreenNotification", buf, 2u);
  }

  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100564008;
  v5[3] = &unk_1012E6EA8;
  id v6 = *(id *)(a1 + 48);
  [v3 onLookAroundView:v4 didCompletionPostTransitionAnimation:v5];
}

uint64_t sub_100564008(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10056417C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = sub_1005764AC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[self startedSubTest:@\"displayLookAround\"]", buf, 2u);
    }

    [*(id *)(a1 + 32) startedSubTest:@"displayLookAround"];
    id v8 = *(void **)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    id v9[2] = sub_1005642C8;
    void v9[3] = &unk_1012EDA50;
    void v9[4] = v8;
    id v10 = v5;
    id v12 = *(id *)(a1 + 40);
    id v11 = v6;
    [v8 onLookAroundView:v10 didBecomeAdequatelyDrawnCallback:v9];
  }
  else
  {
    [*(id *)(a1 + 32) failedTest];
  }
}

void sub_1005642C8(id *a1)
{
  uint64_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[self finishedSubTest:@\"displayLookAround\"]", buf, 2u);
  }

  [a1[4] finishedSubTest:@"displayLookAround"];
  id v3 = a1[4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  long long v8[2] = sub_10056441C;
  void v8[3] = &unk_1012E5D08;
  void v8[4] = v3;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100564498;
  v4[3] = &unk_1012EDA50;
  void v4[4] = v3;
  id v5 = a1[5];
  id v7 = a1[7];
  id v6 = a1[6];
  [v3 storefrontWillMoveBlock:v8 didMoveBlock:v4];
}

id sub_10056441C(uint64_t a1)
{
  uint64_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[self startedSubTest:@\"moveStorefront\"]", v4, 2u);
  }

  return [*(id *)(a1 + 32) startedSubTest:@"moveStorefront"];
}

void sub_100564498(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100564560;
  v4[3] = &unk_1012EF080;
  void v4[4] = v2;
  id v7 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  [v2 onLookAroundView:v3 didBecomeAdequatelyDrawnCallback:v4];
}

id sub_100564560(uint64_t a1)
{
  uint64_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[self finishedSubTest:@\"moveStorefront\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) finishedSubTest:@"moveStorefront"];
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
    return (id)(*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(v3, *(void *)(a1 + 40), *(void *)(a1 + 48));
  }
  id v5 = sub_1005764AC();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "[self finishedTest]", v6, 2u);
  }

  return [*(id *)(a1 + 32) finishedTest];
}

void sub_1005646E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1005764AC();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[self startedSubTest:@\"enterLookAround\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) startedSubTest:@"enterLookAround"];
  id v8 = *(void **)(a1 + 32);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_10056481C;
  v12[3] = &unk_1012EF080;
  void v12[4] = v8;
  id v9 = *(id *)(a1 + 40);
  id v14 = v6;
  id v15 = v9;
  id v13 = v5;
  id v10 = v6;
  id v11 = v5;
  [v8 enterLookAroundWithLookAroundView:v11 mapItem:v10 showsFullScreen:1 completionBlock:v12];
}

id sub_10056481C(uint64_t a1)
{
  uint64_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[self finishedSubTest:@\"enterLookAround\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) finishedSubTest:@"enterLookAround"];
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
    return (id)(*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(v3, *(void *)(a1 + 40), *(void *)(a1 + 48));
  }
  id v5 = sub_1005764AC();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "[self finishedTest]", v6, 2u);
  }

  return [*(id *)(a1 + 32) finishedTest];
}

void sub_10056496C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = sub_1005764AC();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[self startedSubTest:@\"enterLookAroundPIP\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) startedSubTest:@"enterLookAroundPIP"];
  id v8 = *(void **)(a1 + 32);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  id v9[2] = sub_100564A6C;
  void v9[3] = &unk_1012E5D08;
  void v9[4] = v8;
  [v8 expandLookAroundToFullscreen:0 withLookAroundView:v6 mapItem:v5 completionBlock:v9];
}

id sub_100564A6C(uint64_t a1)
{
  uint64_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[self finishedSubTest:@\"enterLookAroundPIP\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) finishedSubTest:@"enterLookAroundPIP"];
  uint64_t v3 = sub_1005764AC();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[self finishedTest]", v5, 2u);
  }

  return [*(id *)(a1 + 32) finishedTest];
}

void sub_100564BA0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_1005764AC();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Finished Enter", v6, 2u);
  }

  [*(id *)(a1 + 32) runFullScreenNavTestWithMapItem:v4];
}

void sub_100564E94(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  id v6[2] = sub_100564F30;
  v6[3] = &unk_1012E5D58;
  void v6[4] = v4;
  id v7 = v3;
  id v5 = v3;
  [v4 onLookAroundView:0 didCompletionPostTransitionAnimation:v6];
}

void sub_100564F30(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"navFullScreenLookAroundEnter"];
  uint64_t v2 = [*(id *)(a1 + 40) object];
  id v3 = [v2 lookAroundView];

  [*(id *)(a1 + 32) startedSubTest:@"navPanLookAroundToFaceStreet"];
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  id v6[2] = sub_100565010;
  v6[3] = &unk_1012E5D58;
  void v6[4] = v4;
  id v7 = v3;
  id v5 = v3;
  [v4 panLookAroundView:v5 completion:v6];
}

void sub_100565010(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"navPanLookAroundToFaceStreet"];
  [*(id *)(a1 + 40) bounds];
  double v3 = v2;
  [*(id *)(a1 + 40) bounds];
  double v5 = v4;
  id v6 = [*(id *)(a1 + 32) options];
  int v7 = [v6 _maptest_lookAroundOffsetTapPositionX];

  id v8 = [*(id *)(a1 + 32) options];
  int v9 = [v8 _maptest_lookAroundOffsetTapPositionY];

  id v10 = [*(id *)(a1 + 32) options];
  int v11 = [v10 _maptest_lookAroundNavigationTaps];

  if (v11 >= 1) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 6;
  }
  double v13 = (double)v7 + v3 * 0.5;
  id v14 = *(void **)(a1 + 32);
  id v15 = [*(id *)(a1 + 40) lookAroundView];
  [v14 tap:v12 countdown:v15 mapView:1 totalTimeInMS:[v9 doubleValue] + v5 * 0.5 firstTap:0.0];
}

void sub_10056531C(uint64_t a1, void *a2)
{
  double v3 = [a2 object];
  double v4 = [v3 lookAroundView];

  double v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1005653F0;
  v7[3] = &unk_1012E66E0;
  void v7[4] = v5;
  id v8 = v4;
  id v9 = *(id *)(a1 + 40);
  id v6 = v4;
  [v5 onLookAroundView:v6 didBecomeAdequatelyDrawnCallback:v7];
}

void sub_1005653F0(uint64_t a1)
{
  double v3 = *(void **)(a1 + 32);
  double v2 = *(void **)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1005654A4;
  v4[3] = &unk_1012E66E0;
  void v4[4] = v3;
  id v5 = v2;
  id v6 = *(id *)(a1 + 48);
  [v3 onLookAroundView:v5 didCompletionPostTransitionAnimation:v4];
}

void sub_1005654A4(void *a1)
{
  double v2 = (void *)a1[4];
  uint64_t v1 = (void *)a1[5];
  uint64_t v3 = a1[6];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100565540;
  v4[3] = &unk_1012E5D58;
  void v4[4] = v2;
  id v5 = v1;
  [v2 expandLookAroundToFullscreen:1 withLookAroundView:v5 mapItem:v3 completionBlock:v4];
}

void sub_100565540(uint64_t a1)
{
  double v2 = *(void **)(a1 + 32);
  uint64_t v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1005655D0;
  v3[3] = &unk_1012E5D58;
  void v3[4] = v2;
  id v4 = v1;
  [v2 onLookAroundView:v4 didCompletionPostTransitionAnimation:v3];
}

void sub_1005655D0(uint64_t a1)
{
  [*(id *)(a1 + 32) finishedSubTest:@"navLookAroundEnter"];
  double v2 = [*(id *)(a1 + 40) lookAroundView];
  [*(id *)(a1 + 32) setupForVKTestWithMapView:v2];
  [v2 enableTestStatistics];
  [*(id *)(a1 + 40) bounds];
  double v4 = v3;
  [*(id *)(a1 + 40) bounds];
  double v6 = v5;
  int v7 = [*(id *)(a1 + 32) options];
  int v8 = [v7 _maptest_lookAroundOffsetTapPositionX];

  id v9 = [*(id *)(a1 + 32) options];
  int v10 = [v9 _maptest_lookAroundOffsetTapPositionY];

  int v11 = [*(id *)(a1 + 32) options];
  int v12 = [v11 _maptest_lookAroundNavigationTaps];

  if (v12 < 1) {
    int v12 = 5;
  }
  double v13 = (double)v8 + v4 * 0.5;
  double v14 = (double)v10 + v6 * 0.5;
  id v15 = [*(id *)(a1 + 32) mainMKMapView];
  int v16 = [v15 _mapLayer];
  [v16 setHidden:1];

  [*(id *)(a1 + 32) startedSubTest:@"navLookAround"];
  if ([*(id *)(a1 + 40) isLoading])
  {
    uint64_t v17 = MKLookAroundViewDidBecomeFullyDrawnNotification;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_100565830;
    v27[3] = &unk_1012EF120;
    uint64_t v18 = *(void *)(a1 + 32);
    *(double *)&v28[1] = v13;
    *(double *)&v28[2] = v14;
    int v29 = v12;
    id v19 = (id *)v28;
    v27[4] = v18;
    v28[0] = v2;
    id v20 = v2;
    +[PPTNotificationCenter addOnceObserverForName:v17 object:0 usingBlock:v27];
  }
  else
  {
    dispatch_time_t v21 = dispatch_time(0, 1000000000);
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    _OWORD v24[2] = sub_100565908;
    void v24[3] = &unk_1012EF0F8;
    uint64_t v22 = *(void *)(a1 + 32);
    *(double *)&v25[1] = v13;
    *(double *)&_OWORD v25[2] = v14;
    int v26 = v12;
    id v19 = (id *)v25;
    void v24[4] = v22;
    v25[0] = v2;
    id v23 = v2;
    dispatch_after(v21, (dispatch_queue_t)&_dispatch_main_q, v24);
  }
}

void sub_100565830(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1005658EC;
  block[3] = &unk_1012EF0F8;
  double v3 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  int v7 = *(_DWORD *)(a1 + 64);
  id v5 = v3;
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_1005658EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) tap:*(unsigned int *)(a1 + 64) countdown:*(void *)(a1 + 40) mapView:1 totalTimeInMS:*(double *)(a1 + 48) firstTap:*(double *)(a1 + 56) ];
}

id sub_100565908(uint64_t a1)
{
  return [*(id *)(a1 + 32) tap:*(unsigned int *)(a1 + 64) countdown:*(void *)(a1 + 40) mapView:1 totalTimeInMS:*(double *)(a1 + 48) firstTap:*(double *)(a1 + 56) 0.0];
}

uint64_t sub_100565A18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100565E58(uint64_t a1)
{
  [*(id *)(a1 + 32) tapAtPoint:*(double *)(a1 + 56), *(double *)(a1 + 64)];
  uint64_t v2 = MKLookAroundViewDidBecomeFullyDrawnNotification;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100565F44;
  v5[3] = &unk_1012EF148;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v6 = v3;
  uint64_t v7 = v4;
  long long v9 = *(_OWORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 80);
  id v8 = *(id *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 72);
  +[PPTNotificationCenter addOnceObserverForName:v2 object:0 usingBlock:v5];
}

id sub_100565F44(uint64_t a1)
{
  [*(id *)(a1 + 32) timeIntervalSinceNow];
  uint64_t v3 = (*(_DWORD *)(a1 + 80) - 1);
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  double v6 = *(double *)(a1 + 72) + v2 * -1000.0;
  double v7 = *(double *)(a1 + 56);
  double v8 = *(double *)(a1 + 64);

  return [v4 tap:v3 countdown:v5 mapView:0 totalTimeInMS:v7 firstTap:v8];
}

void sub_1005661C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1005764AC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[self finishedSubTest:@\"zoomLookAroundEnter\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) finishedSubTest:@"zoomLookAroundEnter"];
  uint64_t v5 = [v3 object];

  double v6 = [v5 lookAroundView];

  double v7 = [v6 lookAroundView];
  [*(id *)(a1 + 32) setupForVKTestWithMapView:v7];
  [v7 enableTestStatistics];
  [v6 bounds];
  double v9 = v8;
  [v6 bounds];
  double v11 = v10;
  int v12 = sub_1005764AC();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "[self startedSubTest:@\"zoomLookAround\"]", buf, 2u);
  }

  [*(id *)(a1 + 32) startedSubTest:@"zoomLookAround"];
  uint64_t v13 = MKLookAroundViewDidBecomeFullyDrawnNotification;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  long long v16[2] = sub_1005663B0;
  void v16[3] = &unk_1012EF198;
  double v19 = v9 * 0.5;
  double v20 = v11 * 0.5;
  uint64_t v14 = *(void *)(a1 + 32);
  id v17 = v7;
  uint64_t v18 = v14;
  id v15 = v7;
  +[PPTNotificationCenter addOnceObserverForName:v13 object:0 usingBlock:v16];
}

void sub_1005663B0(uint64_t a1)
{
  [*(id *)(a1 + 32) startPinchingWithFocusPoint:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  int8x16_t v4 = *(int8x16_t *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 48);
  block[2] = sub_100566478;
  block[3] = &unk_1012EAA08;
  id v3 = (id)v4.i64[0];
  int8x16_t v6 = vextq_s8(v4, v4, 8uLL);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100566478(uint64_t a1)
{
  return [*(id *)(a1 + 32) zoom:40 countdown:*(void *)(a1 + 40) oldFactor:*(double *)(a1 + 48) mapView:*(double *)(a1 + 56)];
}

void sub_100566620(uint64_t a1)
{
  [*(id *)(a1 + 32) stopPinchingWithFocusPoint:*(double *)(a1 + 48), *(double *)(a1 + 56)];
  dispatch_time_t v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[self finishedSubTest:@\"zoomLookAround\"]", buf, 2u);
  }

  [*(id *)(a1 + 40) finishedSubTest:@"zoomLookAround"];
  [*(id *)(a1 + 32) disableTestStatistics];
  id v3 = [*(id *)(a1 + 32) testStatistics];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v22 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        double v9 = [v3 objectForKey:v8];
        double v10 = [*(id *)(a1 + 40) results];
        double v11 = +[NSString stringWithFormat:@"sub:loadingScene:%@", v8];
        [v10 setObject:v9 forKey:v11];
      }
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v22 count:16];
    }
    while (v5);
  }
  [*(id *)(a1 + 32) resetTestStatistics];
  if ([*(id *)(a1 + 32) mapType] == 11)
  {
    int v12 = [*(id *)(a1 + 32) tileStatistics];
    if (v12)
    {
      uint64_t v13 = [*(id *)(a1 + 40) results];
      [v13 addEntriesFromDictionary:v12];
    }
  }
  uint64_t v14 = sub_1005764AC();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "[self finishedTest]", buf, 2u);
  }

  uint64_t v15 = *(unsigned __int8 *)(*(void *)(a1 + 40) + 72);
  int v16 = +[VKDebugSettings sharedSettings];
  [v16 setLayoutContinuously:v15];

  [*(id *)(a1 + 40) finishedTest];
}

id sub_1005668B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) zoom:*(void *)(a1 + 40) countdown:*(double *)(a1 + 48) oldFactor:*(double *)(a1 + 56) mapView:*(double *)(a1 + 64)];
}

void sub_100567E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100567E80(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7 = a2;
  id v8 = a3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100567F6C;
  v11[3] = &unk_1012EF228;
  objc_copyWeak(&v14, (id *)(a1 + 32));
  id v12 = v7;
  id v13 = v8;
  char v15 = a4;
  id v9 = v8;
  id v10 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

  objc_destroyWeak(&v14);
}

void sub_100567F6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _setVisitStartDate:*(void *)(a1 + 32) visitEndDate:*(void *)(a1 + 40) hasNearbyPhotos:*(unsigned __int8 *)(a1 + 56)];
}

void sub_100567FC0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (!v9)
  {
    if (v7) {
      id v10 = v7;
    }
    else {
      id v10 = v8;
    }
    id v11 = v10;
    if (v11)
    {
      if (*(unsigned char *)(a1 + 48))
      {
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        id v14[2] = sub_10056813C;
        v14[3] = &unk_1012EF278;
        uint64_t v12 = *(void *)(a1 + 32);
        id v17 = *(id *)(a1 + 40);
        id v15 = v7;
        id v16 = v8;
        +[UGCNearbyPhotosAvailibility numberOfPhotosTakenForMapItem:v12 lastVisitedDate:v11 completion:v14];

LABEL_12:
        goto LABEL_13;
      }
      id v13 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    }
    else
    {
      id v13 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    }
    v13();
    goto LABEL_12;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
LABEL_13:
}

uint64_t sub_10056813C(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, void, BOOL))(a1[6] + 16))(a1[6], a1[4], a1[5], a2 != 0);
}

BOOL sub_100568D90()
{
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(@"DebugPanelEnabled", @"com.apple.Maps", 0);
  uint64_t v1 = +[GEOPlatform sharedPlatform];
  BOOL v2 = ([v1 isInternalInstall] & 1) != 0
    || CFPreferencesAppValueIsForced(@"DebugPanelEnabled", @"com.apple.Maps") != 0;

  return AppBooleanValue && v2;
}

void sub_100568EEC(id a1)
{
  uint64_t v1 = [PersistenceManager alloc];
  id v4 = +[MSPMapsPaths pathsAtLocation:0];
  BOOL v2 = [(PersistenceManager *)v1 initWithPersistenceData:v4];
  id v3 = (void *)qword_10160F120;
  qword_10160F120 = (uint64_t)v2;
}

void sub_10056A290(id a1)
{
  uint64_t v1 = objc_alloc_init(UGCPhotoDownloadManager);
  BOOL v2 = (void *)qword_10160F130;
  qword_10160F130 = (uint64_t)v1;
}

void sub_10056A5EC(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) downloadIdentifier];
  id v4 = [v2 _cachedImageForDownloadIdentifier:v3];

  if (v4)
  {
    id v5 = sub_1005777AC();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = [*(id *)(a1 + 40) downloadIdentifier];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Found cached image for identifier %@", (uint8_t *)&buf, 0xCu);
    }
    id v7 = *(NSObject **)(a1 + 48);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10056ABB0;
    block[3] = &unk_1012E5F78;
    id v45 = (UGCPhotoDownloadOperation *)*(id *)(a1 + 64);
    id v44 = v4;
    dispatch_async(v7, block);

    id v8 = v45;
  }
  else
  {
    id v9 = [*(id *)(a1 + 32) _currentDownloadOperationForPhotoInfo:*(void *)(a1 + 40)];
    id v10 = sub_1005777AC();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_INFO);
    if (v9)
    {
      if (v11)
      {
        uint64_t v12 = [(UGCPhotoDownloadOperation *)v9 name];
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Attaching to an existing download operation with handle %@", (uint8_t *)&buf, 0xCu);
      }
    }
    else
    {
      if (v11)
      {
        id v13 = [*(id *)(a1 + 40) downloadIdentifier];
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v13;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Creating new download operation for identifier %@", (uint8_t *)&buf, 0xCu);
      }
      objc_initWeak(&location, *(id *)(a1 + 32));
      id v14 = [UGCPhotoDownloadOperation alloc];
      uint64_t v15 = *(void *)(a1 + 40);
      uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 16);
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472;
      v39[2] = sub_10056ABCC;
      v39[3] = &unk_1012EF308;
      objc_copyWeak(&v41, &location);
      id v40 = *(id *)(a1 + 40);
      id v9 = [(UGCPhotoDownloadOperation *)v14 initWithPhotoInfo:v15 completionQueue:v16 completion:v39];
      [(UGCPhotoDownloadOperation *)v9 setQualityOfService:25];
      id v17 = [*(id *)(a1 + 40) downloadIdentifier];
      *(void *)&long long buf = @"DOWNLOAD_OPERATION";
      *((void *)&buf + 1) = v17;
      long long v18 = +[NSArray arrayWithObjects:&buf count:2];
      long long v19 = [v18 componentsJoinedByString:@"_"];

      [(UGCPhotoDownloadOperation *)v9 setName:v19];
      [*(id *)(*(void *)(a1 + 32) + 24) addOperation:v9];
      long long v20 = sub_1005777AC();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        dispatch_time_t v21 = [(UGCPhotoDownloadOperation *)v9 name];
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v21;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Added download operation with handle %@", (uint8_t *)&buf, 0xCu);
      }
      objc_destroyWeak(&v41);
      objc_destroyWeak(&location);
    }
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_10056ACFC;
    void v33[3] = &unk_1012EF358;
    uint64_t v22 = a1 + 32;
    v33[4] = *(void *)(a1 + 32);
    id v23 = (id *)(a1 + 40);
    id v34 = *(id *)(a1 + 40);
    id v25 = *(void **)(a1 + 56);
    long long v24 = (void **)(a1 + 56);
    id v35 = v25;
    id v36 = *(v24 - 1);
    id v26 = v24[1];
    id v37 = v9;
    id v38 = v26;
    id v8 = v9;
    unsigned __int8 v27 = +[NSBlockOperation blockOperationWithBlock:v33];
    [v27 setQualityOfService:25];
    CLLocationCoordinate2D v28 = [*v23 downloadIdentifier];
    int v29 = *v24;
    *(void *)&long long buf = @"DOWNLOAD_COMPLETION";
    *((void *)&buf + 1) = v29;
    id v47 = v28;
    id v30 = v29;
    id v31 = +[NSArray arrayWithObjects:&buf count:3];

    long long v32 = [v31 componentsJoinedByString:@"_"];

    [v27 setName:v32];
    [v27 addDependency:v8];
    [*(id *)(*(void *)v22 + 32) addOperation:v27];
  }
}

void sub_10056AB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10056ABB0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0, 1);
}

void sub_10056ABCC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v6)
    {
      id v8 = sub_1005777AC();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138412290;
        id v13 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to download photo with error %@", (uint8_t *)&v12, 0xCu);
      }
    }
    if (v5)
    {
      id v9 = [objc_alloc((Class)UIImage) initWithData:v5];
      if (v9)
      {
        id v10 = v9;
        BOOL v11 = [*(id *)(a1 + 32) downloadIdentifier];
        [WeakRetained _updateCacheWithImage:v10 forDownloadIdentifier:v11];
      }
    }
  }
}

void sub_10056ACFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(NSObject **)(v2 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10056ADE4;
  v4[3] = &unk_1012EF358;
  void v4[4] = v2;
  id v5 = *(id *)(a1 + 40);
  id v6 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  id v9 = *(id *)(a1 + 72);
  id v8 = *(id *)(a1 + 64);
  dispatch_async(v3, v4);
}

void sub_10056ADE4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) downloadIdentifier];
  id v4 = [v2 _cachedImageForDownloadIdentifier:v3];

  id v5 = sub_1005777AC();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id v6 = [*(id *)(a1 + 40) downloadIdentifier];
    id v7 = *(void **)(a1 + 48);
    *(void *)&long long buf = @"DOWNLOAD_COMPLETION";
    *((void *)&buf + 1) = v7;
    long long v18 = v6;
    id v8 = v7;
    id v9 = +[NSArray arrayWithObjects:&buf count:3];
    id v10 = [v9 componentsJoinedByString:@"_"];

    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v10;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Completion operation finished %@", (uint8_t *)&buf, 0xCu);
  }
  BOOL v11 = *(NSObject **)(a1 + 56);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10056AFCC;
  block[3] = &unk_1012EF330;
  id v16 = *(id *)(a1 + 72);
  id v14 = v4;
  id v15 = *(id *)(a1 + 64);
  id v12 = v4;
  dispatch_async(v11, block);
}

void sub_10056AFCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1)
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = [*(id *)(a1 + 40) downloadError];
    (*(void (**)(uint64_t, uint64_t, id, void))(v1 + 16))(v1, v2, v3, 0);
  }
}

void sub_10056B214(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _completionOperationForPhotoInfo:*(void *)(a1 + 40) downloadToken:*(void *)(a1 + 48)];
  id v3 = v2;
  if (v2)
  {
    [v2 cancel];
    id v4 = sub_1005777AC();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v5 = [v3 name];
      int v13 = 138412290;
      id v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Cancelled completion operation %@", (uint8_t *)&v13, 0xCu);
    }
    id v6 = [v3 dependencies];
    id v7 = [v6 firstObject];

    if (v7)
    {
      id v8 = sub_1005777AC();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        id v9 = *(void **)(a1 + 56);
        int v13 = 138412290;
        id v14 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Found download operation with handle %@", (uint8_t *)&v13, 0xCu);
      }

      [v3 removeDependency:v7];
      if ([*(id *)(a1 + 32) _canCancelDownloadOperation:v7])
      {
        id v10 = sub_1005777AC();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          BOOL v11 = *(void **)(a1 + 56);
          int v13 = 138412290;
          id v14 = v11;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Cancelling download operation with handle %@", (uint8_t *)&v13, 0xCu);
        }

        [v7 cancel];
      }
    }
  }
  else
  {
    id v7 = sub_1005777AC();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v12 = *(void **)(a1 + 56);
      int v13 = 138412290;
      id v14 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Did not find completion operation %@", (uint8_t *)&v13, 0xCu);
    }
  }
}

void sub_10056C974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  objc_destroyWeak((id *)(v10 - 136));
  _Unwind_Resume(a1);
}

id sub_10056C9B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(v4);
  id v7 = [WeakRetained dataSource];
  id v8 = [v7 layoutSectionForSectionIndex:a2 layoutEnvironment:v5];

  return v8;
}

double sub_10056CB3C(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) modalHeaderView];
  uint64_t v2 = [v1 bottomHairline];
  [v2 alpha];
  double v4 = v3;

  return v4;
}

void sub_10056CB90(uint64_t a1, double a2)
{
  id v4 = [*(id *)(a1 + 32) modalHeaderView];
  double v3 = [v4 bottomHairline];
  [v3 setAlpha:a2];
}

void sub_10056CF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10056CF6C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  id v7 = [v6 type];
  if (v7 == (id)2)
  {
    id v9 = v6;
    BOOL v11 = [v9 openAt];
    if ([v11 isSelected])
    {
    }
    else
    {
      id v12 = [v9 openNow];
      unsigned int v13 = [v12 isSelected];

      if (!v13) {
        goto LABEL_11;
      }
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    goto LABEL_11;
  }
  if (v7 == (id)1)
  {
    id v8 = [v6 elements];
    id v9 = v8;
    id v14 = _NSConcreteStackBlock;
    uint64_t v15 = 3221225472;
    id v16 = sub_10056D150;
    id v17 = &unk_1012EF3F8;
    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v10 = &v14;
    goto LABEL_6;
  }
  if (!v7)
  {
    id v8 = [v6 toggles];
    id v9 = v8;
    long long v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    dispatch_time_t v21 = sub_10056D10C;
    uint64_t v22 = &unk_1012EF3D0;
    uint64_t v23 = *(void *)(a1 + 32);
    uint64_t v10 = &v19;
LABEL_6:
    [v8 enumerateObjectsUsingBlock:v10, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23];
LABEL_11:
  }
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

id sub_10056D10C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 isSelected];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

id sub_10056D150(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 isSelected];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_10056D214(id a1, AllRefinementsViewModelSection *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector()) {
    [(AllRefinementsViewModelSection *)v4 resetToDefault];
  }
}

void sub_10056D524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10056D53C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = *(void **)(*(void *)(a1 + 32) + 144);
  id v8 = a2;
  id v9 = [v7 sections];
  id v10 = [v9 objectAtIndexedSubscript:a3];

  LOBYTE(a3) = [v10 compare:v8];
  if ((a3 & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void sub_10056DCAC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) application];
  [v1 configureForLoadingStateWithEnabledRideBookingApplication:v2];
}

id sub_10056DD00(uint64_t a1)
{
  return _[*(id *)(a1 + 32) configureForErrorMessageWithRideBookingRideOptionStatus:*(void *)(a1 + 40)];
}

id sub_10056DD0C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) configureWithRideBookingRideOptionStatus:*(void *)(a1 + 40) titleType:*(void *)(a1 + 48)];
}

void sub_10056E464(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _console];
  [v1 setCustomTextEnabled:1];
  [v1 setPageIndex:2];
}

void sub_10056E55C(id a1)
{
  id v1 = +[UIApplication sharedMapsDelegate];
  id v2 = [v1 chromeViewController];
  id v4 = [v2 mapView];

  double v3 = [v4 _debugConsole];
  [v3 setCustomTextEnabled:0];
  [v3 setPageIndex:0];
}

void sub_10056EE00(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _console];
  [v2 updateCustomText:*(void *)(a1 + 40) textColor:*(void *)(a1 + 48)];
}

uint64_t sub_10056F04C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) authorizationStatus];
  double v3 = *(uint64_t (**)(uint64_t, id))(v1 + 16);

  return v3(v1, v2);
}

uint64_t sub_10056F160(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) accuracyAuthorization];
  double v3 = *(uint64_t (**)(uint64_t, id))(v1 + 16);

  return v3(v1, v2);
}

void sub_10056F504(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavigationHeadingUpdates");
  id v2 = (void *)qword_10160F140;
  qword_10160F140 = (uint64_t)v1;
}

uint64_t sub_100571658(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    BOOL v2 = [v1 rangeOfString:@"roads"] != (id)0x7FFFFFFFFFFFFFFFLL;
    if ([v1 rangeOfString:@"labels"] == (id)0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v3 = 2 * v2;
    }
    else {
      uint64_t v3 = (2 * v2) | 4;
    }
    if ([v1 rangeOfString:@"polygons"] != (id)0x7FFFFFFFFFFFFFFFLL) {
      v3 |= 8uLL;
    }
    if ([v1 rangeOfString:@"buildings"] != (id)0x7FFFFFFFFFFFFFFFLL) {
      v3 |= 0x10uLL;
    }
    if ([v1 rangeOfString:@"rasters"] != (id)0x7FFFFFFFFFFFFFFFLL) {
      v3 |= 0x20uLL;
    }
    if ([v1 rangeOfString:@"grid"] != (id)0x7FFFFFFFFFFFFFFFLL) {
      v3 |= 0x40uLL;
    }
    if ([v1 rangeOfString:@"traffic"] != (id)0x7FFFFFFFFFFFFFFFLL) {
      v3 |= 0x80uLL;
    }
    if ([v1 rangeOfString:@"transitlines"] == (id)0x7FFFFFFFFFFFFFFFLL) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = v3 | 0x100;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

void sub_1005729B4(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id v5 = objc_alloc_init(DirectionsPlanWaypoint);
  if (objc_msgSend(v7, "_mapstest_isCurrentLocationString"))
  {
    uint64_t v6 = *(void *)(a1 + 32);
LABEL_5:
    [(DirectionsPlanWaypoint *)v5 setWaypoint:v6];
    goto LABEL_7;
  }
  if (*(void *)(a1 + 56) == a3)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6) {
      goto LABEL_5;
    }
  }
  [(DirectionsPlanWaypoint *)v5 setSearchString:v7];
LABEL_7:
  [*(id *)(a1 + 48) addPlanningWaypoint:v5];
}

void sub_100573C8C(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) transitListItem];
  BOOL v2 = [*(id *)(a1 + 32) stepView];
  [*(id *)(a1 + 40) transitDirectionsCell:v2 wantsToExpandOrCollapseItem:v3];
}

id sub_100574348(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setShowEVOnboardingBanner:*(unsigned __int8 *)(a1 + 40)];
}

void sub_10057447C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100574494(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [a2 type];
  if (result == (id)21)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_1005746B8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = sub_10005C134();
  uint64_t v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      __int16 v10 = 0;
      id v5 = "Succeeded in adding Nearby Transit to Favorites via Feature Discovery";
      uint64_t v6 = (uint8_t *)&v10;
      id v7 = v4;
      os_log_type_t v8 = OS_LOG_TYPE_INFO;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, v8, v5, v6, 2u);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    __int16 v9 = 0;
    id v5 = "Was unable to add Nearby Transit to Favorites via Feature Discovery";
    uint64_t v6 = (uint8_t *)&v9;
    id v7 = v4;
    os_log_type_t v8 = OS_LOG_TYPE_ERROR;
    goto LABEL_6;
  }
}

void sub_10057487C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1005748A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    BOOL v2 = [WeakRetained poiEnrichmentActionDelegate];
    [v2 presentPOIEnrichmentInformedConsentWithPresentationContext:2 completion:0];

    [v3 setShowRatingsAndPhotosBanner:0];
    id WeakRetained = v3;
  }
}

void sub_100574910(uint64_t a1)
{
  +[RatingRequestHomeAvailability setHasShownTipKitAlertOnProactiveTray];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setShowRatingsAndPhotosBanner:0];
    id WeakRetained = v3;
  }
}

void sub_100574A9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100574AC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _addNearbyTransitToFavorites];
    +[GEOAPPortal captureUserAction:226 target:8 value:@"NEARBY_TRANSIT"];
    id WeakRetained = v2;
  }
}

void sub_100574B20(id a1)
{
}

void sub_100574B3C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained[2] dismissedTipNotification];
    +[GEOAPPortal captureUserAction:217 target:8 value:@"NEARBY_TRANSIT"];
    id WeakRetained = v2;
  }
}

void sub_100575F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100575FC8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0
    && [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) _isValidURLForWebView:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)])
  {
    id v3 = [objc_alloc((Class)SFSafariViewController) initWithURL:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    if (!sub_1000BBB44(v3)) {
      [v3 setModalPresentationStyle:2];
    }
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) _maps_topMostPresentViewController:v3 animated:1 completion:0];
  }
}

id sub_100576084()
{
  if (qword_101611EA8 != -1) {
    dispatch_once(&qword_101611EA8, &stru_1012EF5B8);
  }
  uint64_t v0 = (void *)qword_101611EA0;

  return v0;
}

void sub_1005760D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Camera");
  id v2 = (void *)qword_101611EA0;
  qword_101611EA0 = (uint64_t)v1;
}

id sub_10057611C()
{
  if (qword_101611ED8 != -1) {
    dispatch_once(&qword_101611ED8, &stru_1012EF618);
  }
  uint64_t v0 = (void *)qword_101611ED0;

  return v0;
}

void sub_100576170(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollections");
  id v2 = (void *)qword_101611ED0;
  qword_101611ED0 = (uint64_t)v1;
}

id sub_1005761B4()
{
  if (qword_101611EE8 != -1) {
    dispatch_once(&qword_101611EE8, &stru_1012EF638);
  }
  uint64_t v0 = (void *)qword_101611EE0;

  return v0;
}

void sub_100576208(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "EVOnboarding");
  id v2 = (void *)qword_101611EE0;
  qword_101611EE0 = (uint64_t)v1;
}

id sub_10057624C()
{
  if (qword_101611F08 != -1) {
    dispatch_once(&qword_101611F08, &stru_1012EF678);
  }
  uint64_t v0 = (void *)qword_101611F00;

  return v0;
}

void sub_1005762A0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapMode");
  id v2 = (void *)qword_101611F00;
  qword_101611F00 = (uint64_t)v1;
}

id sub_1005762E4()
{
  if (qword_101611F28 != -1) {
    dispatch_once(&qword_101611F28, &stru_1012EF6B8);
  }
  uint64_t v0 = (void *)qword_101611F20;

  return v0;
}

void sub_100576338(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsAssert");
  id v2 = (void *)qword_101611F20;
  qword_101611F20 = (uint64_t)v1;
}

id sub_10057637C()
{
  if (qword_101611F48 != -1) {
    dispatch_once(&qword_101611F48, &stru_1012EF6F8);
  }
  uint64_t v0 = (void *)qword_101611F40;

  return v0;
}

void sub_1005763D0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsDefault");
  id v2 = (void *)qword_101611F40;
  qword_101611F40 = (uint64_t)v1;
}

id sub_100576414()
{
  if (qword_101611F68 != -1) {
    dispatch_once(&qword_101611F68, &stru_1012EF738);
  }
  uint64_t v0 = (void *)qword_101611F60;

  return v0;
}

void sub_100576468(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsNotifications");
  id v2 = (void *)qword_101611F60;
  qword_101611F60 = (uint64_t)v1;
}

id sub_1005764AC()
{
  if (qword_101611F88 != -1) {
    dispatch_once(&qword_101611F88, &stru_1012EF778);
  }
  uint64_t v0 = (void *)qword_101611F80;

  return v0;
}

void sub_100576500(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "LookAround");
  id v2 = (void *)qword_101611F80;
  qword_101611F80 = (uint64_t)v1;
}

id sub_100576544()
{
  if (qword_101611FD8 != -1) {
    dispatch_once(&qword_101611FD8, &stru_1012EF818);
  }
  uint64_t v0 = (void *)qword_101611FD0;

  return v0;
}

void sub_100576598(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PlaceCard");
  id v2 = (void *)qword_101611FD0;
  qword_101611FD0 = (uint64_t)v1;
}

id sub_1005765DC()
{
  if (qword_101611FE8 != -1) {
    dispatch_once(&qword_101611FE8, &stru_1012EF838);
  }
  uint64_t v0 = (void *)qword_101611FE0;

  return v0;
}

void sub_100576630(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PPT");
  id v2 = (void *)qword_101611FE0;
  qword_101611FE0 = (uint64_t)v1;
}

id sub_100576674()
{
  if (qword_101612008 != -1) {
    dispatch_once(&qword_101612008, &stru_1012EF878);
  }
  uint64_t v0 = (void *)qword_101612000;

  return v0;
}

void sub_1005766C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPLayout");
  id v2 = (void *)qword_101612000;
  qword_101612000 = (uint64_t)v1;
}

id sub_10057670C()
{
  if (qword_101612018 != -1) {
    dispatch_once(&qword_101612018, &stru_1012EF898);
  }
  uint64_t v0 = (void *)qword_101612010;

  return v0;
}

void sub_100576760(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPNavigation");
  id v2 = (void *)qword_101612010;
  qword_101612010 = (uint64_t)v1;
}

id sub_1005767A4()
{
  if (qword_101612038 != -1) {
    dispatch_once(&qword_101612038, &stru_1012EF8D8);
  }
  uint64_t v0 = (void *)qword_101612030;

  return v0;
}

void sub_1005767F8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Recents");
  id v2 = (void *)qword_101612030;
  qword_101612030 = (uint64_t)v1;
}

id sub_10057683C()
{
  if (qword_101612048 != -1) {
    dispatch_once(&qword_101612048, &stru_1012EF8F8);
  }
  uint64_t v0 = (void *)qword_101612040;

  return v0;
}

void sub_100576890(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RouteCreation");
  id v2 = (void *)qword_101612040;
  qword_101612040 = (uint64_t)v1;
}

id sub_1005768D4()
{
  if (qword_101612058 != -1) {
    dispatch_once(&qword_101612058, &stru_1012EF918);
  }
  uint64_t v0 = (void *)qword_101612050;

  return v0;
}

void sub_100576928(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanning");
  id v2 = (void *)qword_101612050;
  qword_101612050 = (uint64_t)v1;
}

id sub_10057696C()
{
  if (qword_101612088 != -1) {
    dispatch_once(&qword_101612088, &stru_1012EF978);
  }
  uint64_t v0 = (void *)qword_101612080;

  return v0;
}

void sub_1005769C0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchACFindMy");
  id v2 = (void *)qword_101612080;
  qword_101612080 = (uint64_t)v1;
}

id sub_100576A04()
{
  if (qword_101612098 != -1) {
    dispatch_once(&qword_101612098, &stru_1012EF998);
  }
  uint64_t v0 = (void *)qword_101612090;

  return v0;
}

void sub_100576A58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchHome");
  id v2 = (void *)qword_101612090;
  qword_101612090 = (uint64_t)v1;
}

id sub_100576A9C()
{
  if (qword_1016120A8 != -1) {
    dispatch_once(&qword_1016120A8, &stru_1012EF9B8);
  }
  uint64_t v0 = (void *)qword_1016120A0;

  return v0;
}

void sub_100576AF0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SharedTrip");
  id v2 = (void *)qword_1016120A0;
  qword_1016120A0 = (uint64_t)v1;
}

id sub_100576B34()
{
  if (qword_1016120B8 != -1) {
    dispatch_once(&qword_1016120B8, &stru_1012EF9D8);
  }
  uint64_t v0 = (void *)qword_1016120B0;

  return v0;
}

void sub_100576B88(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Sharing");
  id v2 = (void *)qword_1016120B0;
  qword_1016120B0 = (uint64_t)v1;
}

id sub_100576BCC()
{
  if (qword_1016120C8 != -1) {
    dispatch_once(&qword_1016120C8, &stru_1012EF9F8);
  }
  uint64_t v0 = (void *)qword_1016120C0;

  return v0;
}

void sub_100576C20(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Shortcuts");
  id v2 = (void *)qword_1016120C0;
  qword_1016120C0 = (uint64_t)v1;
}

id sub_100576C64()
{
  if (qword_1016120D8 != -1) {
    dispatch_once(&qword_1016120D8, &stru_1012EFA18);
  }
  uint64_t v0 = (void *)qword_1016120D0;

  return v0;
}

void sub_100576CB8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Transit");
  id v2 = (void *)qword_1016120D0;
  qword_1016120D0 = (uint64_t)v1;
}

id sub_100576CFC()
{
  if (qword_1016120F8 != -1) {
    dispatch_once(&qword_1016120F8, &stru_1012EFA58);
  }
  uint64_t v0 = (void *)qword_1016120F0;

  return v0;
}

void sub_100576D50(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitSchedules");
  id v2 = (void *)qword_1016120F0;
  qword_1016120F0 = (uint64_t)v1;
}

id sub_100576D94()
{
  if (qword_101612118 != -1) {
    dispatch_once(&qword_101612118, &stru_1012EFA98);
  }
  uint64_t v0 = (void *)qword_101612110;

  return v0;
}

void sub_100576DE8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VehicleDisambiguator");
  id v2 = (void *)qword_101612110;
  qword_101612110 = (uint64_t)v1;
}

id sub_100576E2C()
{
  if (qword_101612148 != -1) {
    dispatch_once(&qword_101612148, &stru_1012EFAF8);
  }
  uint64_t v0 = (void *)qword_101612140;

  return v0;
}

void sub_100576E80(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "IncidentsReporting");
  id v2 = (void *)qword_101612140;
  qword_101612140 = (uint64_t)v1;
}

id sub_100576EC4()
{
  if (qword_101612158 != -1) {
    dispatch_once(&qword_101612158, &stru_1012EFB18);
  }
  uint64_t v0 = (void *)qword_101612150;

  return v0;
}

void sub_100576F18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "Watermarking");
  id v2 = (void *)qword_101612150;
  qword_101612150 = (uint64_t)v1;
}

id sub_100576F5C()
{
  if (qword_101612168 != -1) {
    dispatch_once(&qword_101612168, &stru_1012EFB38);
  }
  uint64_t v0 = (void *)qword_101612160;

  return v0;
}

void sub_100576FB0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "WaypointRequest");
  id v2 = (void *)qword_101612160;
  qword_101612160 = (uint64_t)v1;
}

id sub_100576FF4()
{
  if (qword_101612188 != -1) {
    dispatch_once(&qword_101612188, &stru_1012EFB78);
  }
  uint64_t v0 = (void *)qword_101612180;

  return v0;
}

void sub_100577048(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPRecordsManager");
  id v2 = (void *)qword_101612180;
  qword_101612180 = (uint64_t)v1;
}

id sub_10057708C()
{
  if (qword_101612198 != -1) {
    dispatch_once(&qword_101612198, &stru_1012EFB98);
  }
  uint64_t v0 = (void *)qword_101612190;

  return v0;
}

void sub_1005770E0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCPhotoAttribution");
  id v2 = (void *)qword_101612190;
  qword_101612190 = (uint64_t)v1;
}

id sub_100577124()
{
  if (qword_1016121A8 != -1) {
    dispatch_once(&qword_1016121A8, &stru_1012EFBB8);
  }
  uint64_t v0 = (void *)qword_1016121A0;

  return v0;
}

void sub_100577178(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchResultsImpressions");
  id v2 = (void *)qword_1016121A0;
  qword_1016121A0 = (uint64_t)v1;
}

id sub_1005771BC()
{
  if (qword_1016121B8 != -1) {
    dispatch_once(&qword_1016121B8, &stru_1012EFBD8);
  }
  uint64_t v0 = (void *)qword_1016121B0;

  return v0;
}

void sub_100577210(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchRedo");
  id v2 = (void *)qword_1016121B0;
  qword_1016121B0 = (uint64_t)v1;
}

id sub_100577254()
{
  if (qword_1016121C8 != -1) {
    dispatch_once(&qword_1016121C8, &stru_1012EFBF8);
  }
  uint64_t v0 = (void *)qword_1016121C0;

  return v0;
}

void sub_1005772A8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "StaleTimeBug_105865770");
  id v2 = (void *)qword_1016121C0;
  qword_1016121C0 = (uint64_t)v1;
}

id sub_1005772EC()
{
  if (qword_1016121E8 != -1) {
    dispatch_once(&qword_1016121E8, &stru_1012EFC38);
  }
  uint64_t v0 = (void *)qword_1016121E0;

  return v0;
}

void sub_100577340(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "DeviceConnection");
  id v2 = (void *)qword_1016121E0;
  qword_1016121E0 = (uint64_t)v1;
}

id sub_100577384()
{
  if (qword_1016121F8 != -1) {
    dispatch_once(&qword_1016121F8, &stru_1012EFC58);
  }
  uint64_t v0 = (void *)qword_1016121F0;

  return v0;
}

void sub_1005773D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ElevationGraph");
  id v2 = (void *)qword_1016121F0;
  qword_1016121F0 = (uint64_t)v1;
}

id sub_10057741C()
{
  if (qword_101612228 != -1) {
    dispatch_once(&qword_101612228, &stru_1012EFCB8);
  }
  uint64_t v0 = (void *)qword_101612220;

  return v0;
}

void sub_100577470(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavigationSimulationPrompt");
  id v2 = (void *)qword_101612220;
  qword_101612220 = (uint64_t)v1;
}

id sub_1005774B4()
{
  if (qword_101612238 != -1) {
    dispatch_once(&qword_101612238, &stru_1012EFCD8);
  }
  uint64_t v0 = (void *)qword_101612230;

  return v0;
}

void sub_100577508(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavIndicators");
  id v2 = (void *)qword_101612230;
  qword_101612230 = (uint64_t)v1;
}

id sub_10057754C()
{
  if (qword_101612258 != -1) {
    dispatch_once(&qword_101612258, &stru_1012EFD18);
  }
  uint64_t v0 = (void *)qword_101612250;

  return v0;
}

void sub_1005775A0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPPresenter");
  id v2 = (void *)qword_101612250;
  qword_101612250 = (uint64_t)v1;
}

id sub_1005775E4()
{
  if (qword_101612268 != -1) {
    dispatch_once(&qword_101612268, &stru_1012EFD38);
  }
  uint64_t v0 = (void *)qword_101612260;

  return v0;
}

void sub_100577638(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningOutline");
  id v2 = (void *)qword_101612260;
  qword_101612260 = (uint64_t)v1;
}

id sub_10057767C()
{
  if (qword_101612288 != -1) {
    dispatch_once(&qword_101612288, &stru_1012EFD78);
  }
  uint64_t v0 = (void *)qword_101612280;

  return v0;
}

void sub_1005776D0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitNavigation");
  id v2 = (void *)qword_101612280;
  qword_101612280 = (uint64_t)v1;
}

id sub_100577714()
{
  if (qword_101612298 != -1) {
    dispatch_once(&qword_101612298, &stru_1012EFD98);
  }
  uint64_t v0 = (void *)qword_101612290;

  return v0;
}

void sub_100577768(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCCallToActionViewProvider");
  id v2 = (void *)qword_101612290;
  qword_101612290 = (uint64_t)v1;
}

id sub_1005777AC()
{
  if (qword_1016122A8 != -1) {
    dispatch_once(&qword_1016122A8, &stru_1012EFDB8);
  }
  uint64_t v0 = (void *)qword_1016122A0;

  return v0;
}

void sub_100577800(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCPhotoDownloadManager");
  id v2 = (void *)qword_1016122A0;
  qword_1016122A0 = (uint64_t)v1;
}

id sub_100577844()
{
  if (qword_1016122B8 != -1) {
    dispatch_once(&qword_1016122B8, &stru_1012EFDD8);
  }
  uint64_t v0 = (void *)qword_1016122B0;

  return v0;
}

void sub_100577898(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCReviewedPlacesManager");
  id v2 = (void *)qword_1016122B0;
  qword_1016122B0 = (uint64_t)v1;
}

id sub_1005778DC()
{
  if (qword_1016122C8 != -1) {
    dispatch_once(&qword_1016122C8, &stru_1012EFDF8);
  }
  uint64_t v0 = (void *)qword_1016122C0;

  return v0;
}

void sub_100577930(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "UGCPhotoViewerDataProvider");
  id v2 = (void *)qword_1016122C0;
  qword_1016122C0 = (uint64_t)v1;
}

id sub_100577974()
{
  if (qword_1016122D8 != -1) {
    dispatch_once(&qword_1016122D8, &stru_1012EFE18);
  }
  uint64_t v0 = (void *)qword_1016122D0;

  return v0;
}

void sub_1005779C8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarBlurView");
  id v2 = (void *)qword_1016122D0;
  qword_1016122D0 = (uint64_t)v1;
}

id sub_100577A0C()
{
  if (qword_1016122E8 != -1) {
    dispatch_once(&qword_1016122E8, &stru_1012EFE38);
  }
  uint64_t v0 = (void *)qword_1016122E0;

  return v0;
}

void sub_100577A60(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarCards");
  id v2 = (void *)qword_1016122E0;
  qword_1016122E0 = (uint64_t)v1;
}

id sub_100577AA4()
{
  if (qword_1016122F8 != -1) {
    dispatch_once(&qword_1016122F8, &stru_1012EFE58);
  }
  uint64_t v0 = (void *)qword_1016122F0;

  return v0;
}

void sub_100577AF8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarClusterSuggestion");
  id v2 = (void *)qword_1016122F0;
  qword_1016122F0 = (uint64_t)v1;
}

id sub_100577B3C()
{
  if (qword_101612308 != -1) {
    dispatch_once(&qword_101612308, &stru_1012EFE78);
  }
  uint64_t v0 = (void *)qword_101612300;

  return v0;
}

void sub_100577B90(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarCompression");
  id v2 = (void *)qword_101612300;
  qword_101612300 = (uint64_t)v1;
}

id sub_100577BD4()
{
  if (qword_101612318 != -1) {
    dispatch_once(&qword_101612318, &stru_1012EFE98);
  }
  uint64_t v0 = (void *)qword_101612310;

  return v0;
}

void sub_100577C28(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarFocus");
  id v2 = (void *)qword_101612310;
  qword_101612310 = (uint64_t)v1;
}

id sub_100577C6C()
{
  if (qword_101612328 != -1) {
    dispatch_once(&qword_101612328, &stru_1012EFEB8);
  }
  uint64_t v0 = (void *)qword_101612320;

  return v0;
}

void sub_100577CC0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarInstrumentCluster");
  id v2 = (void *)qword_101612320;
  qword_101612320 = (uint64_t)v1;
}

id sub_100577D04()
{
  if (qword_101612338 != -1) {
    dispatch_once(&qword_101612338, &stru_1012EFED8);
  }
  uint64_t v0 = (void *)qword_101612330;

  return v0;
}

void sub_100577D58(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarGuidance");
  id v2 = (void *)qword_101612330;
  qword_101612330 = (uint64_t)v1;
}

id sub_100577D9C()
{
  if (qword_101612348 != -1) {
    dispatch_once(&qword_101612348, &stru_1012EFEF8);
  }
  uint64_t v0 = (void *)qword_101612340;

  return v0;
}

void sub_100577DF0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarMapWidget");
  id v2 = (void *)qword_101612340;
  qword_101612340 = (uint64_t)v1;
}

id sub_100577E34()
{
  if (qword_101612368 != -1) {
    dispatch_once(&qword_101612368, &stru_1012EFF38);
  }
  uint64_t v0 = (void *)qword_101612360;

  return v0;
}

void sub_100577E88(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarRouteGenius");
  id v2 = (void *)qword_101612360;
  qword_101612360 = (uint64_t)v1;
}

id sub_100577ECC()
{
  if (qword_101612378 != -1) {
    dispatch_once(&qword_101612378, &stru_1012EFF58);
  }
  uint64_t v0 = (void *)qword_101612370;

  return v0;
}

void sub_100577F20(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarSessionController");
  id v2 = (void *)qword_101612370;
  qword_101612370 = (uint64_t)v1;
}

id sub_100577F64()
{
  if (qword_101612388 != -1) {
    dispatch_once(&qword_101612388, &stru_1012EFF78);
  }
  uint64_t v0 = (void *)qword_101612380;

  return v0;
}

void sub_100577FB8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarSmallWidget");
  id v2 = (void *)qword_101612380;
  qword_101612380 = (uint64_t)v1;
}

id sub_100577FFC()
{
  if (qword_1016123A8 != -1) {
    dispatch_once(&qword_1016123A8, &stru_1012EFFB8);
  }
  uint64_t v0 = (void *)qword_1016123A0;

  return v0;
}

void sub_100578050(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "HydrateGeoMapItem");
  id v2 = (void *)qword_1016123A0;
  qword_1016123A0 = (uint64_t)v1;
}

id sub_100578094()
{
  if (qword_1016123B8 != -1) {
    dispatch_once(&qword_1016123B8, &stru_1012EFFD8);
  }
  uint64_t v0 = (void *)qword_1016123B0;

  return v0;
}

void sub_1005780E8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "IdleTimer");
  id v2 = (void *)qword_1016123B0;
  qword_1016123B0 = (uint64_t)v1;
}

id sub_10057812C()
{
  if (qword_1016123C8 != -1) {
    dispatch_once(&qword_1016123C8, &stru_1012EFFF8);
  }
  uint64_t v0 = (void *)qword_1016123C0;

  return v0;
}

void sub_100578180(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianAR");
  id v2 = (void *)qword_1016123C0;
  qword_1016123C0 = (uint64_t)v1;
}

id sub_1005781C4()
{
  if (qword_1016123D8 != -1) {
    dispatch_once(&qword_1016123D8, &stru_1012F0018);
  }
  uint64_t v0 = (void *)qword_1016123D0;

  return v0;
}

void sub_100578218(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PuckTracking");
  id v2 = (void *)qword_1016123D0;
  qword_1016123D0 = (uint64_t)v1;
}

void sub_100578E18(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = +[NSUserDefaults standardUserDefaults];
  [v4 setInteger:a2 forKey:v3];
}

id sub_100578E8C(void *a1)
{
  id v1 = a1;
  id v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [v2 integerForKey:v1];

  if ((unint64_t)v3 <= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

void sub_100579D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100579D4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleDismissAction:0];
}

id sub_10057AEF8()
{
  if (qword_10160F158 != -1) {
    dispatch_once(&qword_10160F158, &stru_1012F0170);
  }
  uint64_t v0 = (void *)qword_10160F150;

  return v0;
}

MNGuidanceARInfo *__cdecl sub_10057B520(id a1, PedestrianARVKFeatureMapEntry *a2, unint64_t a3)
{
  return [(PedestrianARVKFeatureMapEntry *)a2 guidanceInfo];
}

BOOL sub_10057B608(id a1, MNGuidanceARInfo *a2, unint64_t a3, BOOL *a4)
{
  return [(MNGuidanceARInfo *)a2 eventType] == 1;
}

int64_t sub_10057B780(id a1, MNGuidanceARInfo *a2, MNGuidanceARInfo *a3)
{
  id v4 = a3;
  id v5 = +[NSNumber numberWithUnsignedInteger:[(MNGuidanceARInfo *)a2 stepIndex]];
  id v6 = [(MNGuidanceARInfo *)v4 stepIndex];

  id v7 = +[NSNumber numberWithUnsignedInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

BOOL sub_10057B86C(id a1, MNGuidanceARInfo *a2, unint64_t a3, BOOL *a4)
{
  return [(MNGuidanceARInfo *)a2 eventType] == 2;
}

int64_t sub_10057B9E4(id a1, MNGuidanceARInfo *a2, MNGuidanceARInfo *a3)
{
  id v4 = a3;
  id v5 = +[NSNumber numberWithUnsignedInteger:[(MNGuidanceARInfo *)a2 stepIndex]];
  id v6 = [(MNGuidanceARInfo *)v4 stepIndex];

  id v7 = +[NSNumber numberWithUnsignedInteger:v6];
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

BOOL sub_10057C7C4(uint64_t a1, void *a2)
{
  id v3 = [a2 stepIndex];
  return v3 == [*(id *)(a1 + 32) stepIndex];
}

void sub_10057EA18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARInstructionContainerView");
  id v2 = (void *)qword_10160F150;
  qword_10160F150 = (uint64_t)v1;
}

id sub_10057EFF8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    GEOConfigSetBOOL();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 _alertDidFinishProcessing];
}

void sub_10057F178(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  id v6[2] = sub_10057F214;
  v6[3] = &unk_1012E5D58;
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = v3;
  uint64_t v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

id sub_10057F214(uint64_t a1)
{
  if (+[PushNotificationPrompt shouldPromptForLaunch]
    && ![*(id *)(a1 + 32) authorizationStatus])
  {
    __int16 v10 = sub_1000A930C();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "AppLaunchNotifcationPrewarmAlert: will prompt for first launch.", (uint8_t *)&v12, 2u);
    }

    uint64_t v11 = *(void **)(a1 + 40);
    id v7 = [*(id *)(a1 + 32) authorizationStatus];
    uint64_t v8 = v11;
    uint64_t v9 = 0;
    return [v8 _presentAlertUIWithStatus:v7 repeatPrompt:v9];
  }
  if (+[PushNotificationPrompt shouldRepeatPromptForLaunch](PushNotificationPrompt, "shouldRepeatPromptForLaunch")&& [*(id *)(a1 + 32) authorizationStatus] != (id)2)
  {
    id v5 = sub_1000A930C();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "AppLaunchNotifcationPrewarmAlert: will prompt for repeat launch.", (uint8_t *)&v12, 2u);
    }

    id v6 = *(void **)(a1 + 40);
    id v7 = [*(id *)(a1 + 32) authorizationStatus];
    uint64_t v8 = v6;
    uint64_t v9 = 1;
    return [v8 _presentAlertUIWithStatus:v7 repeatPrompt:v9];
  }
  id v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) authorizationStatus]);
    int v12 = 138412290;
    uint64_t v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "AppLaunchNotifcationPrewarmAlert: not displaying with authorization status %@", (uint8_t *)&v12, 0xCu);
  }
  return [*(id *)(a1 + 40) _alertDidFinishProcessing];
}

void sub_10057F4C8(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10057F55C;
  v2[3] = &unk_1012E5D08;
  void v2[4] = *(void *)(a1 + 32);
  [(id)qword_10160F160 dismissViewControllerAnimated:1 completion:v2];
  os_log_t v1 = (void *)qword_10160F160;
  qword_10160F160 = 0;
}

id sub_10057F55C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _alertDidFinishProcessing];
}

id sub_10058160C(uint64_t a1, void *a2, uint64_t a3)
{
  id result = [a2 unsignedIntegerValue];
  *(_DWORD *)(*(void *)(a1 + 32) + 4 * a3) = result;
  return result;
}

double sub_1005817B0(void *a1)
{
  os_log_t v1 = [a1 mapRegion];
  if (v1)
  {
    GEOMapRectForMapRegion();
    MKCoordinateRegionForMapRect(v5);
    MKMapRectForCoordinateRegion();
    double x = v2;
  }
  else
  {
    double x = MKMapRectNull.origin.x;
  }

  return x;
}

double sub_100581834(void *a1)
{
  os_log_t v1 = [a1 mapItem];
  double v2 = [v1 _geoMapItem];
  id v3 = [v2 displayMapRegionOrNil];

  [v1 _coordinate];
  if (v3)
  {
    GEOMapRectForMapRegion();
    MKCoordinateRegion v10 = MKCoordinateRegionForMapRect(v9);
  }
  else
  {
    MKCoordinateRegion v10 = MKCoordinateRegionMakeWithDistance(*(CLLocationCoordinate2D *)&v4, 200.0, 200.0);
  }
  if (v10.center.longitude < -180.0
    || v10.center.longitude > 180.0
    || v10.center.latitude < -90.0
    || v10.center.latitude > 90.0
    || v10.span.latitudeDelta < 0.0
    || v10.span.latitudeDelta > 180.0
    || v10.span.longitudeDelta < 0.0
    || v10.span.longitudeDelta > 360.0)
  {
    double x = MKMapRectNull.origin.x;
  }
  else
  {
    MKMapRectForCoordinateRegion();
    double x = v6;
  }

  return x;
}

id sub_100581B2C(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)GEORPFeatureHandle);
  unsigned int v3 = [v1 featureType] - 1;
  if (v3 > 0xE) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = dword_100F6FDA0[v3];
  }
  [v2 setType:v4];
  [v2 setFeatureIndex:[v1 featureIndex]];
  [v2 setFeatureTileX:[v1 tileX]];
  [v2 setFeatureTileY:[v1 tileY]];
  [v2 setFeatureTileZ:[v1 tileZ]];
  [v2 setStyle:[v1 tileStyle]];
  [v2 setIdentifier:[v1 tileVersion]];
  MKMapRect v5 = [v1 styleAttributes];
  unsigned int v6 = [v5 countAttrs];

  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
    do
    {
      MKMapRect v9 = [v1 styleAttributes];
      uint64_t v10 = *(unsigned int *)((char *)[v9 v] + v7);

      uint64_t v11 = [v1 styleAttributes];
      uint64_t v12 = *(unsigned int *)((char *)[v11 v] + v7 + 4);

      [v2 addStyleAttribute:v10 | (v12 << 32)];
      ++v8;
      uint64_t v13 = [v1 styleAttributes];
      LODWORD(v10) = [v13 countAttrs];

      v7 += 8;
    }
    while (v8 < v10);
  }

  return v2;
}

void sub_1005826E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, os_activity_scope_state_s state)
{
}

id sub_100582700()
{
  if (qword_10160F170 != -1) {
    dispatch_once(&qword_10160F170, &stru_1012F01D8);
  }
  uint64_t v0 = (void *)qword_10160F168;

  return v0;
}

void sub_100582864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_1005829B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
}

void sub_100582E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_1005830A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
}

void sub_1005830C0(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) instructionLabel];
  id v1 = [v3 layer];
  LODWORD(v2) = 1.0;
  [v1 setOpacity:v2];
}

void sub_100583120(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) coachingOverlayView];
  id v1 = [v3 layer];
  LODWORD(v2) = 1.0;
  [v1 setOpacity:v2];
}

void sub_1005834CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,os_activity_scope_state_s state)
{
  objc_destroyWeak(v25);
  objc_destroyWeak((id *)(v26 - 112));
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_100583500(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) instructionLabel];
  id v1 = [v2 layer];
  [v1 setOpacity:0.0];
}

void sub_100583560(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) coachingOverlayView];
  id v1 = [v2 layer];
  [v1 setOpacity:0.0];
}

uint64_t sub_1005835C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setFadingOut:0];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_100583BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, os_activity_scope_state_s state)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_100583C30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained instructionLabel];
  [v2 setText:v1];
}

void sub_100583E54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_100582700();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      int v6 = 134349056;
      id v7 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Activating coaching overlay", (uint8_t *)&v6, 0xCu);
    }

    id v3 = [WeakRetained session];
    uint64_t v4 = [WeakRetained coachingOverlayView];
    [v4 setSession:v3];

    MKMapRect v5 = [WeakRetained coachingOverlayView];
    [v5 setActive:1 animated:0];
  }
}

void sub_100584160(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARLocalizingView");
  id v2 = (void *)qword_10160F168;
  qword_10160F168 = (uint64_t)v1;
}

void sub_100584D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100584D98(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  uint64_t v5[2] = sub_100584E54;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100584E54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _virtualGarageDidUpdateUnpairedVehicles:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

id sub_100585B60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chromeViewController];
  id v3 = [v2 mapView];
  [v3 _setApplicationState:1];

  id v4 = [*(id *)(a1 + 32) chromeViewController];
  MKMapRect v5 = [v4 searchPinsManager];
  [v5 addPOIShapeLoadingObserver:*(void *)(a1 + 32)];

  id v6 = [*(id *)(a1 + 32) chromeViewController];
  id v7 = [v6 mapView];
  [v7 setShowsUserLocation:1];

  unint64_t v8 = [*(id *)(a1 + 32) chromeViewController];
  MKMapRect v9 = [v8 mapView];
  *(unsigned char *)(*(void *)(a1 + 32) + 56) = [v9 isScrollEnabled];

  uint64_t v10 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v11 = [v10 mapView];
  [v11 setScrollEnabled:0];

  uint64_t v12 = [*(id *)(a1 + 32) chromeViewController];
  [v12 setHardwareBackButtonBehavior:0 forContext:*(void *)(a1 + 32)];

  uint64_t v13 = *(void **)(a1 + 32);

  return [v13 _offerVehicleDisambiguationIfNeeded];
}

id sub_100585CA0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) placeCard];
  [v2 reloadData];

  unsigned int v3 = [*(id *)(*(void *)(a1 + 32) + 40) shouldStartLoadWhenBecomingCurrent];
  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    MKMapRect v5 = (void *)v4[5];
    id v6 = [*(id *)(a1 + 40) currentTraits];
    [v5 startLoadWithTraits:v6];
  }
  else
  {
    [v4 _showPinsAnimated:0];
  }
  [*(id *)(a1 + 32) _showPinsAnimated:0];
  [*(id *)(a1 + 32) _updateAnnotationsForLoadedRoute];
  [*(id *)(a1 + 32) _updateTurnByTurnSupport];
  [*(id *)(a1 + 32) _updateLoading];
  [*(id *)(a1 + 32) _updateRouteAdvisories];
  id v7 = *(void **)(a1 + 32);

  return [v7 _updateZoomButtonContent];
}

void sub_1005863A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _virtualGarageDidUpdateUnpairedVehicles:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100586550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL sub_100586574(id a1, VGVehicle *a2, unint64_t a3, BOOL *a4)
{
  MKMapRect v5 = a2;
  id v6 = [(VGVehicle *)v5 iapIdentifier];
  if (v6)
  {
    unsigned int v7 = [(VGVehicle *)v5 isPureElectricVehicle];

    if (v7)
    {
      LOBYTE(v6) = 1;
      *a4 = 1;
    }
    else
    {
      LOBYTE(v6) = 0;
    }
  }

  return (char)v6;
}

void sub_1005865E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[13])
  {
    id v2 = WeakRetained;
    [WeakRetained _presentEVOnboardingHintForVehicle:];
    id WeakRetained = v2;
  }
}

void sub_1005870DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_100587108(uint64_t a1)
{
  uint64_t v2 = sub_1005761B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User selected ok, will post notification to display onboarding on the phone.", v6, 2u);
  }

  v7[0] = @"EVOnboardingCarPlayVehicleKey";
  v7[1] = @"EVOnboardingCarPlayDictionaryKey";
  uint64_t v3 = *(void *)(a1 + 40);
  v8[0] = *(void *)(a1 + 32);
  v8[1] = v3;
  id v4 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  MKMapRect v5 = +[NSNotificationCenter defaultCenter];
  [v5 postNotificationName:@"EVOnboardingCarPlayHintSelectedNotification" object:0 userInfo:v4];
}

void sub_10058720C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    MKMapRect v5 = sub_1005761B4();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v7 = 134217984;
      uint64_t v8 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "User dismissed alert with button index: %ld", (uint8_t *)&v7, 0xCu);
    }

    WeakRetained[12] = 2;
    id v6 = +[VGVirtualGarageService sharedService];
    [v6 unregisterObserver:*(void *)(a1 + 32)];

    if (qword_1015F38F8 != a2) {
      sub_100CDBF90(*(void **)(a1 + 40));
    }
  }
}